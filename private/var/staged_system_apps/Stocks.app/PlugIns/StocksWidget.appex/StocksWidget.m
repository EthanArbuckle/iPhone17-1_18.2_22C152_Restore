uint64_t sub_100004CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return _swift_task_switch(sub_100004CC8, 0, 0);
}

uint64_t sub_100004CC8()
{
  sub_100123AD0();
  v1 = (void *)sub_100124300();
  v0[9] = sub_100124360();

  swift_release();
  v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  void *v2 = v0;
  v2[1] = sub_100004DA8;
  uint64_t v3 = v0[5];
  return Promise.resolveAsync()(v3);
}

uint64_t sub_100004DA8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100004EE4, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100004EE4()
{
  v1 = v0;
  uint64_t v2 = v0[11];
  swift_release();
  sub_100005550();
  uint64_t v3 = (void *)sub_100125FF0();
  sub_100125F40();
  sub_100005590();
  uint64_t v4 = swift_allocObject();
  v0[2] = 0;
  *(_OWORD *)(v4 + 16) = xmmword_100127010;
  v0[3] = 0xE000000000000000;
  v0[4] = v2;
  sub_1000055F8(0, (unint64_t *)&qword_10015D9B8);
  sub_100126270();
  uint64_t v5 = v0[2];
  uint64_t v6 = v1[3];
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = sub_100005648();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v6;
  sub_100124520();
  swift_bridgeObjectRelease();

  sub_100123AB0();
  swift_errorRelease();
  v7 = (uint64_t (*)(void))v1[1];
  return v7();
}

uint64_t variable initialization expression of BilingualFeedManager._isBilingualFeedEnabled()
{
  return sub_100123FD0();
}

void sub_1000050BC()
{
  if (!qword_10015D670)
  {
    unint64_t v0 = sub_100123FC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015D670);
    }
  }
}

uint64_t sub_10000511C(uint64_t a1, uint64_t a2)
{
  return sub_100005378(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100005140(uint64_t a1, id *a2)
{
  uint64_t result = sub_100125AF0();
  *a2 = 0;
  return result;
}

uint64_t sub_1000051B8(uint64_t a1, id *a2)
{
  char v3 = sub_100125B00();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100005238@<X0>(void *a1@<X8>)
{
  sub_100125B10();
  NSString v2 = sub_100125AD0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

NSNumber sub_10000527C()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_100005284(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100124060();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_1000052D8(uint64_t a1, uint64_t a2)
{
  char v3 = sub_100124070();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_100005330@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100124080();
  *a1 = v3;
  return result;
}

uint64_t sub_100005358(uint64_t a1, uint64_t a2)
{
  return sub_100005378(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100005378(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_100125B10();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000053BC()
{
  sub_100125B10();
  sub_100125BA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100005410()
{
  sub_100125B10();
  sub_1001265F0();
  sub_100125BA0();
  Swift::Int v0 = sub_100126630();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100005488()
{
  uint64_t v0 = sub_100125B10();
  uint64_t v2 = v1;
  if (v0 == sub_100125B10() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_100126530();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void type metadata accessor for FCSubscriptionState(uint64_t a1)
{
}

void type metadata accessor for UIStatusBarStyle(uint64_t a1)
{
}

void type metadata accessor for UIKeyboardAppearance(uint64_t a1)
{
}

unint64_t sub_100005550()
{
  unint64_t result = qword_10015D9A0;
  if (!qword_10015D9A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015D9A0);
  }
  return result;
}

void sub_100005590()
{
  if (!qword_10015D9A8)
  {
    sub_1000055F8(255, (unint64_t *)&qword_10015D9B0);
    unint64_t v0 = sub_100126500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015D9A8);
    }
  }
}

uint64_t sub_1000055F8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_100005648()
{
  unint64_t result = qword_10015D9C0;
  if (!qword_10015D9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015D9C0);
  }
  return result;
}

uint64_t sub_1000056A0()
{
  sub_1000058E4(&qword_10015DA50, type metadata accessor for AttributeName);
  sub_1000058E4(&qword_10015DA58, type metadata accessor for AttributeName);

  return sub_100126330();
}

uint64_t sub_10000575C@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_100125AD0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000057A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100125B10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void sub_10000580C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100005854()
{
  return sub_1000058E4(&qword_10015D9E0, type metadata accessor for AttributeName);
}

uint64_t sub_10000589C()
{
  return sub_1000058E4(&qword_10015D9E8, type metadata accessor for AttributeName);
}

uint64_t sub_1000058E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000592C()
{
  sub_1000058E4(&qword_10015DA40, type metadata accessor for TraitKey);
  sub_1000058E4(&qword_10015DA48, type metadata accessor for TraitKey);

  return sub_100126330();
}

uint64_t sub_1000059E8()
{
  return sub_1000058E4(&qword_10015D9F0, type metadata accessor for TraitKey);
}

uint64_t sub_100005A30()
{
  return sub_1000058E4(&qword_10015D9F8, type metadata accessor for TraitKey);
}

void *sub_100005A78@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_100005A88@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_100005A94()
{
  return sub_100126330();
}

uint64_t sub_100005B5C()
{
  return sub_1000058E4(&qword_10015DA00, type metadata accessor for Weight);
}

uint64_t sub_100005BA4()
{
  return sub_1000058E4(&qword_10015DA08, type metadata accessor for Weight);
}

uint64_t sub_100005BEC()
{
  return Double.hashValue.getter(*v0);
}

void sub_100005BF4()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_100126620(v1);
}

uint64_t sub_100005C28(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:_:)(a1, v2);
}

BOOL sub_100005C38(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100005C4C()
{
  return sub_1000058E4(&qword_10015DA10, type metadata accessor for Weight);
}

uint64_t sub_100005C94()
{
  return sub_1000058E4(&qword_10015DA18, type metadata accessor for AttributeName);
}

uint64_t sub_100005CDC()
{
  return sub_1000058E4(&qword_10015DA20, type metadata accessor for TraitKey);
}

unint64_t sub_100005D24()
{
  unint64_t result = qword_10015DA38;
  if (!qword_10015DA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DA38);
  }
  return result;
}

uint64_t sub_100005D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[37] = a4;
  v5[38] = v4;
  v5[35] = a2;
  v5[36] = a3;
  v5[34] = a1;
  uint64_t v6 = sub_1001238A0();
  v5[39] = v6;
  v5[40] = *(void *)(v6 - 8);
  v5[41] = swift_task_alloc();
  uint64_t v7 = sub_100123900();
  v5[42] = v7;
  v5[43] = *(void *)(v7 - 8);
  v5[44] = swift_task_alloc();
  uint64_t v8 = sub_1001240B0();
  v5[45] = v8;
  v5[46] = *(void *)(v8 - 8);
  v5[47] = swift_task_alloc();
  v5[48] = swift_task_alloc();
  uint64_t v9 = sub_1001236F0();
  v5[49] = v9;
  v5[50] = *(void *)(v9 - 8);
  v5[51] = swift_task_alloc();
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  uint64_t v10 = sub_1001237F0();
  v5[54] = v10;
  v5[55] = *(void *)(v10 - 8);
  v5[56] = swift_task_alloc();
  uint64_t v11 = sub_100123EC0();
  v5[57] = v11;
  v5[58] = *(void *)(v11 - 8);
  v5[59] = swift_task_alloc();
  sub_100009E94(0, &qword_10015DF08, (void (*)(uint64_t))&type metadata accessor for Watchlist);
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  return _swift_task_switch(sub_100006098, 0, 0);
}

uint64_t sub_100006098()
{
  uint64_t v8 = v0;
  v0[62] = OBJC_IVAR____TtC12StocksWidget25WatchlistViewModelService_logger;
  Swift::UInt64 v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[37];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134349314;
    v0[31] = v3;
    sub_100126030();
    *(_WORD *)(v4 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[33] = sub_1000AB124(v0[2], v0[3], &v7);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "will fetch watchlist with max count: %{public}ld, id=%{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100009D98((void *)(v0[38] + 16), *(void *)(v0[38] + 40));
  v0[63] = sub_100123960();
  char v5 = (void *)swift_task_alloc();
  v0[64] = v5;
  *char v5 = v0;
  v5[1] = sub_1000062E8;
  return Promise.resolveAsync()(v0 + 32);
}

uint64_t sub_1000062E8()
{
  *(void *)(*(void *)v1 + 520) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_100007C20;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    os_log_type_t v2 = sub_100006410;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100006410()
{
  sub_100009D98((void *)(v0[38] + 16), *(void *)(v0[38] + 40));
  v0[66] = sub_100123950();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[67] = v1;
  void *v1 = v0;
  v1[1] = sub_1000064EC;
  uint64_t v2 = v0[61];
  return Promise.resolveAsync()(v2);
}

uint64_t sub_1000064EC()
{
  *(void *)(*(void *)v1 + 544) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100007F38;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100006608;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100006608()
{
  v21 = v0;
  uint64_t v1 = v0[60];
  uint64_t v2 = v0[57];
  uint64_t v3 = v0[58];
  sub_100009EE8(v0[61], v1, &qword_10015DF08, (void (*)(uint64_t))&type metadata accessor for Watchlist);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_100009F54(v0[60], &qword_10015DF08, (void (*)(uint64_t))&type metadata accessor for Watchlist);
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_100124550();
    os_log_type_t v5 = sub_100125F60();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v7 = v0[35];
      unint64_t v6 = v0[36];
      uint64_t v8 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446466;
      swift_bridgeObjectRetain();
      v0[23] = sub_1000AB124(v7, v6, &v20);
      sub_100126030();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2082;
      if (qword_10015D4C8 != -1) {
        swift_once();
      }
      uint64_t v9 = v0[61];
      sub_100126690();
      v0[20] = sub_1000AB124(v0[12], v0[13], &v20);
      sub_100126030();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "failed fetch watchlist with not found identifier: %{public}s, id=%{public}s", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v10 = v9;
    }
    else
    {
      uint64_t v15 = v0[61];
      swift_bridgeObjectRelease_n();

      uint64_t v10 = v15;
    }
    sub_100009F54(v10, &qword_10015DF08, (void (*)(uint64_t))&type metadata accessor for Watchlist);
    uint64_t v16 = v0[34];
    uint64_t v17 = type metadata accessor for WidgetWatchlist(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  else
  {
    uint64_t v11 = (void *)v0[38];
    (*(void (**)(void, void, void))(v0[58] + 32))(v0[59], v0[60], v0[57]);
    uint64_t v12 = v11[10];
    uint64_t v13 = v11[11];
    sub_100009D98(v11 + 7, v12);
    v14 = (void *)swift_task_alloc();
    v0[69] = v14;
    void *v14 = v0;
    v14[1] = sub_100006A60;
    return dispatch thunk of WatchlistDeprecationServiceType.deprecateStocksIfNeeded()(v12, v13);
  }
}

uint64_t sub_100006A60()
{
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100008250;
  }
  else {
    uint64_t v2 = sub_100006B74;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100006B74()
{
  uint64_t v1 = (void *)v0[38];
  uint64_t v3 = v1[20];
  uint64_t v2 = v1[21];
  sub_100009D98(v1 + 17, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[71] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100006C34;
  uint64_t v5 = v0[56];
  return sub_100004CA4(v5, v3, v2);
}

uint64_t sub_100006C34()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 448);
  uint64_t v3 = *(void *)(*v0 + 440);
  uint64_t v4 = *(void *)(*v0 + 432);
  swift_task_dealloc();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 576) = v5;
  *(void *)(v1 + 584) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_100006D9C, 0, 0);
}

uint64_t sub_100006D9C()
{
  sub_100009D98((void *)(v0[38] + 16), *(void *)(v0[38] + 40));
  v0[74] = sub_100123940();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[75] = v1;
  void *v1 = v0;
  v1[1] = sub_100006E78;
  return Promise.resolveAsync()(v0 + 16);
}

uint64_t sub_100006E78()
{
  *(void *)(*(void *)v1 + 608) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1000085A0;
  }
  else {
    uint64_t v2 = sub_100006FAC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100006FAC()
{
  v28 = v0;
  uint64_t v1 = v0[16];
  v0[77] = v1;
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_100124550();
  os_log_type_t v3 = sub_100125F60();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    sub_100123D40();
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_100125CD0();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[28] = sub_1000AB124(v5, v7, v27);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[30] = sub_1000AB124(v0[4], v0[5], v27);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "did fetch stocks: %{public}s, id=%{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[72];
  uint64_t v9 = v0[56];
  uint64_t v10 = v0[54];
  uint64_t v23 = v10;
  v26 = (void *)v0[48];
  uint64_t v11 = v0[46];
  v25 = (void *)v0[47];
  uint64_t v24 = v0[45];
  uint64_t v12 = (void *)v0[38];
  sub_100009D98(v12 + 12, v12[15]);
  sub_100009000(v1);
  sub_100009D98(v12 + 17, v12[20]);
  sub_100123AB0();
  sub_1001237E0();
  uint64_t v14 = v13;
  v8(v9, v10);
  void *v26 = v14;
  uint64_t v15 = enum case for CachePolicy.maxAge(_:);
  uint64_t v16 = *(void (**)(void))(v11 + 104);
  v16();
  sub_100009D98(v12 + 17, v12[20]);
  sub_100123AB0();
  sub_1001237C0();
  uint64_t v18 = v17;
  v8(v9, v23);
  void *v25 = v18;
  ((void (*)(void *, uint64_t, uint64_t))v16)(v25, v15, v24);
  v0[78] = sub_100123A90();
  swift_bridgeObjectRelease();
  v19 = *(void (**)(void *, uint64_t))(v11 + 8);
  v19(v25, v24);
  v19(v26, v24);
  uint64_t v20 = (void *)swift_task_alloc();
  v0[79] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000073DC;
  uint64_t v21 = v0[52];
  return Promise.resolveAsync()(v21);
}

uint64_t sub_1000073DC()
{
  *(void *)(*(void *)v1 + 640) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000088F0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1000074F8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000074F8()
{
  v59 = v0;
  uint64_t v1 = v0[53];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[51];
  uint64_t v4 = v0[49];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 32))(v1, v0[52], v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  uint64_t v5 = sub_100124550();
  os_log_type_t v6 = sub_100125F60();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = v0[50];
    uint64_t v7 = v0[51];
    uint64_t v50 = v0[49];
    uint64_t v9 = swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    sub_1001236E0();
    sub_100123CA0();
    uint64_t v10 = sub_100125A10();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[25] = sub_1000AB124(v10, v12, v58);
    sub_100126030();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v50);
    *(_WORD *)(v9 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[27] = sub_1000AB124(v0[8], v0[9], v58);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "did fetch quotes: %{public}s, id=%{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v14 = v0[50];
    uint64_t v13 = v0[51];
    uint64_t v15 = v0[49];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[53];
  uint64_t v17 = v0[43];
  uint64_t v18 = v0[44];
  uint64_t v51 = v0[42];
  uint64_t v19 = v0[38];
  uint64_t v53 = v0[37];
  sub_100009D98((void *)(v19 + 176), *(void *)(v19 + 200));
  sub_100123EB0();
  uint64_t v20 = sub_100123B10();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v51);
  sub_10001C6B0(v53, v20);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  unint64_t v26 = v25;
  uint64_t v27 = swift_task_alloc();
  *(void *)(v27 + 16) = v16;
  *(void *)(v27 + 24) = v19;
  sub_10002A358((void (*)(char *))sub_100009E74, v27, v22, v24, v26);
  uint64_t v29 = v28;
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRetain_n();
  v30 = sub_100124550();
  os_log_type_t v31 = sub_100125F60();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136446466;
    type metadata accessor for WidgetStock();
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_100125CD0();
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    v0[19] = sub_1000AB124(v33, v35, v58);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[21] = sub_1000AB124(v0[14], v0[15], v58);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "did fetch watchlist models: %{public}s, id=%{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v57 = v29;
  if (sub_100123E80()) {
    uint64_t v36 = sub_100123E60();
  }
  else {
    uint64_t v36 = sub_100123EA0();
  }
  uint64_t v52 = v37;
  uint64_t v54 = v36;
  uint64_t v38 = v0[61];
  uint64_t v40 = v0[58];
  uint64_t v39 = v0[59];
  uint64_t v41 = v0[57];
  uint64_t v42 = v0[50];
  uint64_t v55 = v0[49];
  uint64_t v56 = v0[53];
  uint64_t v43 = v0[40];
  uint64_t v44 = v0[41];
  uint64_t v45 = v0[39];
  v46 = (uint64_t *)v0[34];
  sub_100123E90();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
  sub_100009F54(v38, &qword_10015DF08, (void (*)(uint64_t))&type metadata accessor for Watchlist);
  uint64_t *v46 = v54;
  v46[1] = v52;
  v46[2] = v57;
  uint64_t v47 = type metadata accessor for WidgetWatchlist(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))((char *)v46 + *(int *)(v47 + 24), v44, v45);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v56, v55);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v48 = (uint64_t (*)(void))v0[1];
  return v48();
}

uint64_t sub_100007C20()
{
  uint64_t v9 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543618;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[29] = v5;
    sub_100126030();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v3 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[26] = sub_1000AB124(v0[6], v0[7], &v8);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to fetch watchlist with error: %{public}@, id=%{public}s", (uint8_t *)v3, 0x16u);
    sub_100009E94(0, &qword_10015DF10, (void (*)(uint64_t))sub_100009DDC);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100007F38()
{
  uint64_t v9 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543618;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[29] = v5;
    sub_100126030();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v3 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[26] = sub_1000AB124(v0[6], v0[7], &v8);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to fetch watchlist with error: %{public}@, id=%{public}s", (uint8_t *)v3, 0x16u);
    sub_100009E94(0, &qword_10015DF10, (void (*)(uint64_t))sub_100009DDC);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100008250()
{
  uint64_t v10 = v0;
  uint64_t v1 = v0[61];
  (*(void (**)(void, void))(v0[58] + 8))(v0[59], v0[57]);
  sub_100009F54(v1, &qword_10015DF08, (void (*)(uint64_t))&type metadata accessor for Watchlist);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = sub_100124550();
  os_log_type_t v3 = sub_100125F40();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543618;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[29] = v6;
    sub_100126030();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v4 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[26] = sub_1000AB124(v0[6], v0[7], &v9);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to fetch watchlist with error: %{public}@, id=%{public}s", (uint8_t *)v4, 0x16u);
    sub_100009E94(0, &qword_10015DF10, (void (*)(uint64_t))sub_100009DDC);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000085A0()
{
  uint64_t v10 = v0;
  uint64_t v1 = v0[61];
  (*(void (**)(void, void))(v0[58] + 8))(v0[59], v0[57]);
  sub_100009F54(v1, &qword_10015DF08, (void (*)(uint64_t))&type metadata accessor for Watchlist);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = sub_100124550();
  os_log_type_t v3 = sub_100125F40();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543618;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[29] = v6;
    sub_100126030();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v4 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[26] = sub_1000AB124(v0[6], v0[7], &v9);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "failed to fetch watchlist with error: %{public}@, id=%{public}s", (uint8_t *)v4, 0x16u);
    sub_100009E94(0, &qword_10015DF10, (void (*)(uint64_t))sub_100009DDC);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000088F0()
{
  v48 = v0;
  swift_release();
  sub_1001236D0();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543618;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[22] = v5;
    sub_100126030();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v3 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[24] = sub_1000AB124(v0[10], v0[11], v47);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to fetch quotes with error: %{public}@, id=%{public}s", (uint8_t *)v3, 0x16u);
    sub_100009E94(0, &qword_10015DF10, (void (*)(uint64_t))sub_100009DDC);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[43];
  uint64_t v6 = v0[44];
  uint64_t v39 = v0[53];
  uint64_t v41 = v0[42];
  uint64_t v8 = v0[38];
  uint64_t v43 = v0[37];
  sub_100009D98((void *)(v8 + 176), *(void *)(v8 + 200));
  sub_100123EB0();
  uint64_t v9 = sub_100123B10();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v41);
  sub_10001C6B0(v43, v9);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  unint64_t v15 = v14;
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = v39;
  *(void *)(v16 + 24) = v8;
  sub_10002A358((void (*)(char *))sub_100009E74, v16, v11, v13, v15);
  uint64_t v18 = v17;
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_100124550();
  os_log_type_t v20 = sub_100125F60();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446466;
    type metadata accessor for WidgetStock();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_100125CD0();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    v0[19] = sub_1000AB124(v22, v24, v47);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[21] = sub_1000AB124(v0[14], v0[15], v47);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "did fetch watchlist models: %{public}s, id=%{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v46 = v18;
  if (sub_100123E80()) {
    uint64_t v25 = sub_100123E60();
  }
  else {
    uint64_t v25 = sub_100123EA0();
  }
  uint64_t v40 = v26;
  uint64_t v42 = v25;
  uint64_t v27 = v0[61];
  uint64_t v29 = v0[58];
  uint64_t v28 = v0[59];
  uint64_t v30 = v0[57];
  uint64_t v31 = v0[50];
  uint64_t v44 = v0[49];
  uint64_t v45 = v0[53];
  uint64_t v32 = v0[40];
  uint64_t v33 = v0[41];
  uint64_t v34 = v0[39];
  unint64_t v35 = (uint64_t *)v0[34];
  sub_100123E90();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  sub_100009F54(v27, &qword_10015DF08, (void (*)(uint64_t))&type metadata accessor for Watchlist);
  *unint64_t v35 = v42;
  v35[1] = v40;
  v35[2] = v46;
  uint64_t v36 = type metadata accessor for WidgetWatchlist(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))((char *)v35 + *(int *)(v36 + 24), v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v45, v44);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

void *sub_100009000(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10009BACC(0, v1, 0);
    uint64_t v3 = *(void *)(sub_100123D40() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = sub_100123D20();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10009BACC(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100009138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v88 = a3;
  uint64_t v80 = a2;
  uint64_t v4 = sub_100123CA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v82 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v81 = (char *)&v72 - v8;
  sub_100009E94(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  __chkstk_darwin(v9 - 8);
  v83 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v87 = (char *)&v72 - v12;
  uint64_t v79 = sub_100124570();
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  v78 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100123D40();
  uint64_t v86 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  v76 = (uint64_t *)((char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = sub_100123C50();
  uint64_t v15 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  v75 = (uint64_t *)((char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v74 = (char *)&v72 - v18;
  sub_100009E94(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  __chkstk_darwin(v19 - 8);
  uint64_t v85 = (uint64_t)&v72 - v20;
  sub_100009E94(0, &qword_10015DF30, (void (*)(uint64_t))&type metadata accessor for Chart);
  __chkstk_darwin(v21 - 8);
  unint64_t v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v92 = (char *)&v72 - v25;
  sub_100009E94(0, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
  __chkstk_darwin(v26 - 8);
  uint64_t v84 = (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v73 = (uint64_t)&v72 - v29;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v72 - v31;
  uint64_t v33 = sub_1001236E0();
  uint64_t v93 = a1;
  uint64_t v34 = sub_100123D20();
  uint64_t v36 = *(void *)(v33 + 16);
  v94 = v32;
  uint64_t v91 = v4;
  if (v36)
  {
    unint64_t v37 = sub_10003E754(v34, v35);
    uint64_t v39 = v5;
    if (v38)
    {
      uint64_t v40 = (uint64_t)v94;
      uint64_t v41 = v91;
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v94, *(void *)(v33 + 56) + *(void *)(v5 + 72) * v37, v91);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v40, 0, 1, v41);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v94, 1, 1, v91);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v32, 1, 1, v4);
    uint64_t v39 = v5;
  }
  uint64_t v42 = (uint64_t)v92;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_1001236C0();
  uint64_t v44 = sub_100123D20();
  if (*(void *)(v43 + 16) && (unint64_t v46 = sub_10003E754(v44, v45), (v47 & 1) != 0))
  {
    uint64_t v48 = v90;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(v42, *(void *)(v43 + 56) + *(void *)(v15 + 72) * v46, v90);
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
    uint64_t v48 = v90;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v42, v49, 1, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100009EE8(v42, (uint64_t)v23, &qword_10015DF30, (void (*)(uint64_t))&type metadata accessor for Chart);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v23, 1, v48) == 1)
  {
    uint64_t v50 = type metadata accessor for PreparedSparkline(0);
    uint64_t v51 = v85;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v85, 1, 1, v50);
    uint64_t v53 = v86;
    uint64_t v52 = (uint64_t)v87;
    uint64_t v54 = v91;
    uint64_t v55 = (uint64_t)v94;
  }
  else
  {
    uint64_t v56 = v74;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v74, v23, v48);
    uint64_t v57 = v75;
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(v75, v56, v48);
    uint64_t v55 = (uint64_t)v94;
    uint64_t v72 = v39;
    uint64_t v58 = v73;
    sub_100009EE8((uint64_t)v94, v73, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
    uint64_t v53 = v86;
    v59 = v76;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v86 + 16))(v76, v93, v89);
    uint64_t v60 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v78, v80 + OBJC_IVAR____TtC12StocksWidget25WatchlistViewModelService_logger, v79);
    uint64_t v51 = v85;
    uint64_t v61 = v58;
    uint64_t v39 = v72;
    sub_10008C504(v57, v61, v59, v60, v85, 0.02);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v56, v90);
    uint64_t v52 = (uint64_t)v87;
    uint64_t v54 = v91;
  }
  uint64_t v62 = v84;
  sub_100009EE8(v55, v84, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v62, 1, v54) == 1)
  {
    sub_100009F54(v62, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
    uint64_t v63 = sub_100123670();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v52, 1, 1, v63);
    uint64_t v64 = v88;
    uint64_t v65 = (uint64_t)v92;
  }
  else
  {
    v66 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v81, v62, v54);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v82, v66, v54);
    uint64_t v67 = (uint64_t)v83;
    sub_100123640();
    v68 = v66;
    uint64_t v65 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v68, v54);
    uint64_t v69 = sub_100123670();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v67, 0, 1, v69);
    sub_100009FB0(v67, v52);
    uint64_t v64 = v88;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v64, v93, v89);
  uint64_t v70 = type metadata accessor for WidgetStock();
  sub_100009EE8(v52, v64 + *(int *)(v70 + 20), &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  sub_100009EE8(v51, v64 + *(int *)(v70 + 24), (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_100009F54(v52, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  sub_100009F54(v51, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_100009F54(v65, &qword_10015DF30, (void (*)(uint64_t))&type metadata accessor for Chart);
  return sub_100009F54((uint64_t)v94, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
}

uint64_t sub_100009BB4()
{
  sub_100009D48(v0 + 16);
  sub_100009D48(v0 + 56);
  sub_100009D48(v0 + 96);
  sub_100009D48(v0 + 136);
  sub_100009D48(v0 + 176);
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget25WatchlistViewModelService_logger;
  uint64_t v2 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100009C7C()
{
  return type metadata accessor for WatchlistViewModelService(0);
}

uint64_t type metadata accessor for WatchlistViewModelService(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015DE50);
}

uint64_t sub_100009CA4()
{
  uint64_t result = sub_100124570();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100009D48(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *sub_100009D98(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_100009DDC()
{
  unint64_t result = qword_10015DF18;
  if (!qword_10015DF18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015DF18);
  }
  return result;
}

uint64_t type metadata accessor for WidgetWatchlist(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015DF98);
}

uint64_t sub_100009E3C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100009E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100009138(a1, *(void *)(v2 + 24), a2);
}

void sub_100009E94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100126010();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100009EE8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_100009E94(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_100009F54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_100009E94(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_100009FB0(uint64_t a1, uint64_t a2)
{
  sub_100009E94(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10000A030(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1001238A0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_10000A128(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1001238A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10000A1A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001238A0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_10000A250(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_10000A304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_10000A388(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10000A424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000A438);
}

uint64_t sub_10000A438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1001238A0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10000A4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000A4FC);
}

uint64_t sub_10000A4FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1001238A0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10000A5A4()
{
  uint64_t result = sub_1001238A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL static StockChartHighlightStyle.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void StockChartHighlightStyle.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int StockChartHighlightStyle.hashValue.getter(char a1)
{
  return sub_100126630();
}

BOOL sub_10000A6C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_10000A6E0()
{
  Swift::UInt v1 = *v0;
  sub_1001265F0();
  sub_100126600(v1);
  return sub_100126630();
}

void sub_10000A728()
{
  sub_100126600(*v0);
}

Swift::Int sub_10000A754()
{
  Swift::UInt v1 = *v0;
  sub_1001265F0();
  sub_100126600(v1);
  return sub_100126630();
}

unint64_t sub_10000A79C()
{
  unint64_t result = qword_10015DFD8;
  if (!qword_10015DFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015DFD8);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for ValueChangeTrend(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ValueChangeTrend(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ThemingStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000A95CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_10000A984(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000A990(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ThemingStyle()
{
  return &type metadata for ThemingStyle;
}

uint64_t sub_10000A9AC()
{
  Swift::UInt v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
}

id sub_10000AA10()
{
  return *(id *)(v0 + 64);
}

uint64_t sub_10000AA18(uint64_t a1, uint64_t a2)
{
  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  v3[25] = *v2;
  uint64_t v4 = sub_100123D40();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v5 = sub_100123E30();
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  sub_100014350(0, &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  uint64_t v6 = sub_100124570();
  v3[35] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[36] = v7;
  v3[37] = *(void *)(v7 + 64);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  uint64_t v8 = sub_1001239A0();
  v3[40] = v8;
  v3[41] = *(void *)(v8 - 8);
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  uint64_t v9 = sub_100123730();
  v3[44] = v9;
  v3[45] = *(void *)(v9 - 8);
  v3[46] = swift_task_alloc();
  uint64_t v10 = sub_1001240C0();
  v3[47] = v10;
  v3[48] = *(void *)(v10 - 8);
  v3[49] = swift_task_alloc();
  return _swift_task_switch(sub_10000AD70, 0, 0);
}

uint64_t sub_10000AD70()
{
  uint64_t v1 = v0[23];
  sub_100009D98((void *)(v0[24] + 72), *(void *)(v0[24] + 96));
  if ((sub_100123A10() & 1) != 0 || v1 < 1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void *))v0[1];
    return v11(_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v2 = v0[24];
    id v3 = [self sharedPreferences];
    [v3 resetLocale];

    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = sub_100123D20();
    uint64_t v8 = v7;
    v0[50] = v7;
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 16) + **(int **)(v4 + 16));
    uint64_t v9 = (void *)swift_task_alloc();
    v0[51] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10000AFCC;
    return v12(v6, v8, ObjectType, v4);
  }
}

uint64_t sub_10000AFCC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 416) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10000C394;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 424) = a1;
    uint64_t v5 = sub_10000B0FC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10000B0FC()
{
  uint64_t v1 = *(void *)(v0 + 424);
  *(void *)(v0 + 432) = v1;
  double v2 = (double)*(uint64_t *)(v0 + 184);
  uint64_t v3 = sub_100124390();
  double v4 = *(double *)(v0 + 160) * v2;
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (__OFSUB__((uint64_t)v4, *(void *)(v1 + 16)))
  {
LABEL_11:
    __break(1u);
    return Promise.resolveAsync()(v3);
  }
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v7 = *(void *)(v0 + 376);
  sub_100009D98((void *)(*(void *)(v0 + 192) + 16), *(void *)(*(void *)(v0 + 192) + 40));
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for NetworkProxy.none(_:), v7);
  *(void *)(v0 + 440) = sub_100123920();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10000B2C0;
  uint64_t v3 = v0 + 120;
  return Promise.resolveAsync()(v3);
}

uint64_t sub_10000B2C0()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    double v2 = sub_10000C794;
  }
  else
  {
    double v2 = sub_10000B400;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000B400()
{
  uint64_t v1 = v0[24];
  v0[58] = v0[15];
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[59] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10000B4C4;
  uint64_t v5 = v0[46];
  return NewsUserProfileProviderType.newsUserProfile.getter(v5, ObjectType, v2);
}

uint64_t sub_10000B4C4()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10000C888;
  }
  else
  {
    uint64_t v2 = sub_10000B5EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000B5EC()
{
  uint64_t v1 = v0[58];
  uint64_t v3 = v0[45];
  uint64_t v2 = v0[46];
  uint64_t v4 = v0[44];
  uint64_t v86 = (void *)sub_100123720();
  v0[61] = v86;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_100093EC4(v1);
  sub_100014350(0, &qword_10015E0D8, (uint64_t (*)(uint64_t))&type metadata accessor for NewsFeedFilterOptions.Option, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v5 = sub_100123990();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001276F0;
  unint64_t v10 = v9 + v8;
  *(void *)(v9 + v8) = _swiftEmptyArrayStorage;
  uint64_t v11 = *(void (**)(void))(v6 + 104);
  unsigned int v82 = enum case for NewsFeedFilterOptions.Option.duplicateArticles(_:);
  ((void (*)(unint64_t))v11)(v9 + v8);
  *(void *)(v10 + v7) = _swiftEmptyArrayStorage;
  v11();
  unint64_t v12 = v10 + 2 * v7;
  uint64_t v13 = enum case for HeadlineCondition.pressRelease(_:);
  uint64_t v14 = sub_100123840();
  uint64_t v81 = *(void *)(v14 - 8);
  unsigned int v87 = v13;
  uint64_t v93 = v14;
  uint64_t v85 = *(void (**)(unint64_t, uint64_t))(v81 + 104);
  v85(v12, v13);
  unsigned int v83 = enum case for NewsFeedFilterOptions.Option.condition(_:);
  ((void (*)(unint64_t))v11)(v12);
  sub_100123980();
  uint64_t v15 = sub_100125CC0();
  v0[17] = v15;
  unint64_t v16 = *(void *)(v15 + 16);
  if (v16 && v16 < v0[23])
  {
    uint64_t v79 = v0[42];
    uint64_t v80 = v0[41];
    uint64_t v96 = v0[40];
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_1001276F0;
    uint64_t v17 = (void *)(v84 + v8);
    *uint64_t v17 = _swiftEmptyArrayStorage;
    ((void (*)(void *, void, uint64_t))v11)(v17, v82, v5);
    *(void *)((char *)v17 + v7) = _swiftEmptyArrayStorage;
    v11();
    uint64_t v18 = (void *)((char *)v17 + 2 * v7);
    sub_100014350(0, (unint64_t *)&unk_10015E140, (uint64_t (*)(uint64_t))&type metadata accessor for HeadlineCondition, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    unint64_t v19 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_100127010;
    ((void (*)(unint64_t, void, uint64_t))v85)(v20 + v19, v87, v93);
    *uint64_t v18 = v20;
    ((void (*)(uint64_t *, void, uint64_t))v85)(v18, enum case for HeadlineCondition.none(_:), v93);
    ((void (*)(uint64_t *, void, uint64_t))v11)(v18, v83, v5);
    sub_100123980();
    uint64_t v21 = sub_100125CC0();
    swift_bridgeObjectRelease();
    sub_100093EC4(v21);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v96);
    uint64_t v15 = v0[17];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v0[62] = v15;
  uint64_t v22 = v0[38];
  uint64_t v23 = v0[39];
  uint64_t v24 = v0[36];
  uint64_t v25 = v0[35];
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v26(v23, v0[24] + OBJC_IVAR____TtC12StocksWidget24HeadlineViewModelService_logger, v25);
  v26(v22, v23, v25);
  unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v28 = swift_allocObject();
  v0[63] = v28;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v28 + v27, v23, v25);
  uint64_t v29 = *(void *)(v15 + 16);
  unint64_t v97 = v29;
  if (v29)
  {
    uint64_t v30 = v0[30];
    uint64_t v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 16);
    v30 += 16;
    unint64_t v32 = v15 + ((*(unsigned __int8 *)(v30 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64));
    uint64_t v90 = *(void *)(v30 + 56);
    v94 = v31;
    uint64_t v33 = (void (**)(uint64_t, uint64_t))(v30 - 8);
    swift_bridgeObjectRetain();
    unint64_t v34 = 0;
    do
    {
      uint64_t v35 = v0[34];
      uint64_t v36 = v0[31];
      uint64_t v37 = v0[29];
      v94(v36, v32, v37);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1000100F8(v36, v35);
      (*v33)(v36, v37);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1000131EC();
      int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v35, 1, v38);
      uint64_t v40 = (void *)sub_100013A9C(v0[34], &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC);
      if (v39 != 1)
      {
        uint64_t v29 = v97;
        goto LABEL_12;
      }
      ++v34;
      v32 += v90;
      uint64_t v29 = v97;
    }
    while (v97 != v34);
LABEL_30:
    uint64_t v45 = v29;
  }
  else
  {
    uint64_t v40 = (void *)swift_bridgeObjectRetain();
    unint64_t v34 = 0;
LABEL_12:
    uint64_t v45 = v29;
    if (v34 != v29)
    {
      uint64_t v46 = v0[30];
      if ((uint64_t)v0[23] <= 1) {
        uint64_t v47 = 1;
      }
      else {
        uint64_t v47 = v0[23];
      }
      uint64_t v48 = 1;
      uint64_t v88 = v47;
      while (1)
      {
        unint64_t v49 = v34 + 1;
        if (__OFADD__(v34, 1)) {
          goto LABEL_46;
        }
        unint64_t v34 = v29;
        if (v49 != v29)
        {
          if ((v49 & 0x8000000000000000) == 0)
          {
            uint64_t v91 = v48;
            unint64_t v50 = v15 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
            while (v49 < *(void *)(v15 + 16))
            {
              uint64_t v51 = v0[33];
              uint64_t v52 = v0[31];
              uint64_t v53 = v0[29];
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v46 + 16))(v52, v50 + *(void *)(v46 + 72) * v49, v53);
              swift_bridgeObjectRetain();
              swift_retain();
              sub_1000100F8(v52, v51);
              (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v52, v53);
              swift_bridgeObjectRelease();
              swift_release();
              sub_1000131EC();
              int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v51, 1, v54);
              uint64_t v40 = (void *)sub_100013A9C(v0[33], &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC);
              if (v55 != 1)
              {
                unint64_t v34 = v49;
                uint64_t v29 = v97;
                goto LABEL_26;
              }
              ++v49;
              uint64_t v29 = v97;
              if (v97 == v49)
              {
                unint64_t v34 = v97;
LABEL_26:
                uint64_t v47 = v88;
                uint64_t v48 = v91;
                goto LABEL_27;
              }
            }
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
          }
          __break(1u);
          goto LABEL_49;
        }
LABEL_27:
        if (v48 == v0[23]) {
          break;
        }
        if (v48 == v47) {
          goto LABEL_47;
        }
        ++v48;
        if (v34 == v29) {
          goto LABEL_30;
        }
      }
      uint64_t v45 = v34;
      if (v29) {
        goto LABEL_32;
      }
      goto LABEL_38;
    }
  }
  if (!v29)
  {
LABEL_38:
    unint64_t v56 = 0;
    goto LABEL_39;
  }
LABEL_32:
  uint64_t v89 = v45;
  unint64_t v56 = 0;
  uint64_t v57 = v0[30];
  uint64_t v58 = *(void (**)(uint64_t, unint64_t, uint64_t))(v57 + 16);
  v57 += 16;
  unint64_t v59 = v15 + ((*(unsigned __int8 *)(v57 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 64));
  uint64_t v92 = *(void *)(v57 + 56);
  v95 = v58;
  uint64_t v60 = (void (**)(uint64_t, uint64_t))(v57 - 8);
  while (1)
  {
    uint64_t v62 = v0[31];
    uint64_t v61 = v0[32];
    uint64_t v63 = v0[29];
    v95(v62, v59, v63);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000100F8(v62, v61);
    (*v60)(v62, v63);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000131EC();
    int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 48))(v61, 1, v64);
    sub_100013A9C(v0[32], &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC);
    if (v65 != 1) {
      break;
    }
    ++v56;
    v59 += v92;
    if (v97 == v56)
    {
      unint64_t v56 = v97;
      break;
    }
  }
  uint64_t v45 = v89;
LABEL_39:
  uint64_t v40 = (void *)(*(uint64_t (**)(void, void))(v0[36] + 8))(v0[38], v0[35]);
  if (v45 < (uint64_t)v56)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    return Sequence<>.concurrentMap<A>(_:)(v40, v41, v42, v43, v44);
  }
  unint64_t v66 = *(void *)(v15 + 16);
  if (v66 < v56 || (uint64_t)v66 < v45) {
    goto LABEL_50;
  }
  uint64_t v67 = v0[24];
  uint64_t v68 = v0[25];
  uint64_t v69 = *(unsigned __int8 *)(v0[30] + 80);
  v0[2] = v15;
  v0[3] = v15 + ((v69 + 32) & ~v69);
  v0[4] = v56;
  v0[5] = (2 * v45) | 1;
  v0[6] = sub_100013260;
  v0[7] = v28;
  v0[8] = sub_1000133B0;
  v0[9] = 0;
  v0[10] = sub_100013468;
  v0[11] = 0;
  sub_100009D98((void *)(v67 + 72), *(void *)(v67 + 96));
  char v70 = sub_100123A40();
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = v86;
  *(unsigned char *)(v71 + 24) = v70 & 1;
  *(void *)(v71 + 32) = v68;
  uint64_t v72 = swift_allocObject();
  v0[64] = v72;
  *(void *)(v72 + 16) = &unk_10015E0E8;
  *(void *)(v72 + 24) = v71;
  id v73 = v86;
  v74 = (void *)swift_task_alloc();
  v0[65] = v74;
  sub_1000137B0();
  uint64_t v76 = v75;
  uint64_t v77 = type metadata accessor for HeadlineViewModel(0);
  uint64_t v44 = sub_100013A54(&qword_10015E138, (void (*)(uint64_t))sub_1000137B0);
  void *v74 = v0;
  v74[1] = sub_10000C10C;
  uint64_t v40 = &unk_10015E0F8;
  uint64_t v41 = v72;
  uint64_t v42 = v76;
  uint64_t v43 = v77;
  return Sequence<>.concurrentMap<A>(_:)(v40, v41, v42, v43, v44);
}

uint64_t sub_10000C10C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 528) = a1;
  swift_task_dealloc();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return _swift_task_switch(sub_10000C26C, 0, 0);
}

uint64_t sub_10000C26C()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 328);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v6 = *(void *)(v0 + 528);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v6);
}

uint64_t sub_10000C394()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 208);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_100124550();
  os_log_type_t v6 = sub_100125F40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = *(void *)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 224);
    uint64_t v25 = *(void *)(v0 + 208);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = sub_100123D20();
    *(void *)(v0 + 144) = sub_1000AB124(v10, v11, &v26);
    sub_100126030();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v25);
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v12 = sub_100126580();
    *(void *)(v0 + 168) = sub_1000AB124(v12, v13, &v26);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to fetch top stories for symbol=%s, error=%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 216);
    uint64_t v14 = *(void *)(v0 + 224);
    uint64_t v16 = *(void *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  *(void *)(v0 + 432) = _swiftEmptyArrayStorage;
  double v17 = (double)*(uint64_t *)(v0 + 184);
  uint64_t v18 = sub_100124390();
  double v19 = *(double *)(v0 + 160) * v17;
  if ((~*(void *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (__OFSUB__((uint64_t)v19, _swiftEmptyArrayStorage[2]))
  {
LABEL_14:
    __break(1u);
    return Promise.resolveAsync()(v18);
  }
  uint64_t v21 = *(void *)(v0 + 384);
  uint64_t v20 = *(void *)(v0 + 392);
  uint64_t v22 = *(void *)(v0 + 376);
  sub_100009D98((void *)(*(void *)(v0 + 192) + 16), *(void *)(*(void *)(v0 + 192) + 40));
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for NetworkProxy.none(_:), v22);
  *(void *)(v0 + 440) = sub_100123920();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_10000B2C0;
  uint64_t v18 = v0 + 120;
  return Promise.resolveAsync()(v18);
}

uint64_t sub_10000C794()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000C888()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000C97C(uint64_t a1, uint64_t a2)
{
  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v3[28] = *v2;
  sub_100014350(0, &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  uint64_t v4 = sub_100124570();
  v3[32] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[33] = v5;
  v3[34] = *(void *)(v5 + 64);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  uint64_t v6 = sub_1001239A0();
  v3[37] = v6;
  v3[38] = *(void *)(v6 - 8);
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  uint64_t v7 = sub_100123E30();
  v3[41] = v7;
  v3[42] = *(void *)(v7 - 8);
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  uint64_t v8 = sub_100123880();
  v3[47] = v8;
  v3[48] = *(void *)(v8 - 8);
  v3[49] = swift_task_alloc();
  uint64_t v9 = sub_100123D40();
  v3[50] = v9;
  v3[51] = *(void *)(v9 - 8);
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  uint64_t v10 = sub_100123730();
  v3[54] = v10;
  v3[55] = *(void *)(v10 - 8);
  v3[56] = swift_task_alloc();
  uint64_t v11 = sub_1001240C0();
  v3[57] = v11;
  v3[58] = *(void *)(v11 - 8);
  v3[59] = swift_task_alloc();
  return _swift_task_switch(sub_10000CD68, 0, 0);
}

uint64_t sub_10000CD68()
{
  uint64_t v1 = *(void *)(v0 + 208);
  sub_100009D98((void *)(*(void *)(v0 + 216) + 72), *(void *)(*(void *)(v0 + 216) + 96));
  if ((sub_100123A10() & 1) == 0 && v1 >= 1)
  {
    unint64_t v2 = *(void *)(*(void *)(v0 + 200) + 16);
    *(void *)(v0 + 480) = v2;
    if (v2)
    {
      unint64_t v3 = *(void *)(v0 + 208);
      id v4 = [self sharedPreferences];
      [v4 resetLocale];

      if (v2 <= v3)
      {
        unint64_t v9 = *(void *)(v0 + 208);
        uint64_t v6 = v9 / v2;
        if (v9 % v2)
        {
          if (__OFADD__(v6++, 1)) {
            goto LABEL_20;
          }
        }
      }
      else
      {
        uint64_t v6 = 1;
      }
      *(void *)(v0 + 488) = v6;
      double v11 = (double)v6;
      uint64_t v5 = sub_100124390();
      double v12 = *(double *)(v0 + 152) * v11;
      if ((~*(void *)&v12 & 0x7FF0000000000000) != 0)
      {
        if (v12 > -9.22337204e18)
        {
          if (v12 < 9.22337204e18)
          {
            uint64_t v14 = *(void *)(v0 + 464);
            uint64_t v13 = *(void *)(v0 + 472);
            uint64_t v15 = *(void *)(v0 + 456);
            sub_100009D98((void *)(*(void *)(v0 + 216) + 16), *(void *)(*(void *)(v0 + 216) + 40));
            (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, enum case for NetworkProxy.none(_:), v15);
            *(void *)(v0 + 496) = sub_100123910();
            (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
            uint64_t v16 = (void *)swift_task_alloc();
            *(void *)(v0 + 504) = v16;
            *uint64_t v16 = v0;
            v16[1] = sub_10000D0C8;
            uint64_t v5 = v0 + 184;
            return Promise.resolveAsync()(v5);
          }
          goto LABEL_19;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return Promise.resolveAsync()(v5);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void *))(v0 + 8);
  return v7(_swiftEmptyArrayStorage);
}

uint64_t sub_10000D0C8()
{
  *(void *)(*(void *)v1 + 512) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v2 = sub_10000EA04;
  }
  else
  {
    swift_release();
    unint64_t v2 = sub_10000D1E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000D1E4()
{
  uint64_t v1 = v0[27];
  v0[65] = v0[23];
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[66] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10000D2A8;
  uint64_t v5 = v0[56];
  return NewsUserProfileProviderType.newsUserProfile.getter(v5, ObjectType, v2);
}

uint64_t sub_10000D2A8()
{
  *(void *)(*(void *)v1 + 536) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10000EB48;
  }
  else
  {
    uint64_t v2 = sub_10000D3C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10000D3C4()
{
  uint64_t v2 = v0[55];
  uint64_t v1 = v0[56];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[25];
  v0[68] = sub_100123720();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v6 = *(void *)(v4 + 128);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = sub_100009000(v5);
  v0[69] = v8;
  double v11 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 24) + **(int **)(v6 + 24));
  unint64_t v9 = (void *)swift_task_alloc();
  v0[70] = v9;
  *unint64_t v9 = v0;
  v9[1] = sub_10000D520;
  return v11(v8, ObjectType, v6);
}

uint64_t sub_10000D520(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 568) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10000EC84;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 576) = a1;
    uint64_t v5 = sub_10000D650;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10000D650()
{
  v0[16] = _swiftEmptyArrayStorage;
  v0[17] = _swiftEmptyArrayStorage;
  uint64_t v114 = v0[72];
  uint64_t v1 = v0[65];
  unint64_t v115 = v0[61];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[48];
  uint64_t v4 = v0[42];
  uint64_t v5 = *(void (**)(void, unint64_t, void))(v2 + 16);
  v2 += 16;
  v122 = v5;
  unint64_t v120 = v0[25] + ((*(unsigned __int8 *)(v2 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 64));
  uint64_t v119 = *(void *)(v2 + 56);
  v112 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  v113 = (void (**)(uint64_t, void, uint64_t))(v3 + 104);
  unsigned int v111 = enum case for NewsFeedSortMethod.publishDate(_:);
  v139 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v127 = v4;
  uint64_t v6 = (void (**)(void, void, void))(v4 + 32);
  v117 = (void (**)(void, void))(v2 - 8);
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  v138 = v0;
  uint64_t v110 = v1;
  v116 = v6;
  while (1)
  {
    v122(v0[53], v120 + v7 * v119, v0[50]);
    if (!*(void *)(v1 + 16)) {
      goto LABEL_6;
    }
    uint64_t v125 = v7;
    unint64_t v12 = sub_10003E7CC(v0[53]);
    if ((v13 & 1) == 0) {
      goto LABEL_6;
    }
    uint64_t v14 = *(void *)(*(void *)(v1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100123D20();
    if (*(void *)(v114 + 16))
    {
      sub_10003E754(v15, v16);
      uint64_t v17 = _swiftEmptyArrayStorage;
      if (v18) {
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v17 = _swiftEmptyArrayStorage;
    }
    uint64_t v19 = v0[49];
    uint64_t v20 = v0[47];
    swift_bridgeObjectRelease();
    (*v113)(v19, v111, v20);
    uint64_t v21 = sub_100125CB0();
    swift_bridgeObjectRelease();
    (*v112)(v19, v20);
    sub_100093EC4(v14);
    uint64_t v22 = v21;
    v148 = _swiftEmptyArrayStorage;
    uint64_t v132 = *(void *)(v21 + 16);
    if (v132) {
      break;
    }
LABEL_35:
    uint64_t v40 = (void *)swift_bridgeObjectRelease();
    unint64_t v45 = v115;
    if ((v115 & 0x8000000000000000) != 0)
    {
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      return Sequence<>.concurrentMap<A>(_:)(v40, v41, v42, v43, v44);
    }
    if (v115)
    {
      unint64_t v45 = v17[2];
      if (v45 >= v0[61]) {
        unint64_t v45 = v0[61];
      }
    }
    uint64_t v46 = (uint64_t)v17 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
    unint64_t v47 = (2 * v45) | 1;
    unint64_t v48 = swift_bridgeObjectRetain();
    sub_100094200(v48, v46, 0, v47);
    unint64_t v49 = v17[2];
    if (v115)
    {
      if (v49 >= v0[61]) {
        uint64_t v8 = v0[61];
      }
      else {
        uint64_t v8 = v17[2];
      }
    }
    else
    {
      uint64_t v8 = 0;
    }
    sub_100094200((unint64_t)v17, v46, v8, (2 * v49) | 1);
    uint64_t v1 = v110;
    uint64_t v7 = v125;
LABEL_6:
    uint64_t v9 = v7 + 1;
    uint64_t v10 = v0[60];
    (*v117)(v0[53], v0[50]);
    BOOL v11 = v9 == v10;
    uint64_t v7 = v9;
    if (v11)
    {
      uint64_t v141 = v0[26];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100093EC4(v0[17]);
      sub_100014350(0, &qword_10015E0D8, (uint64_t (*)(uint64_t))&type metadata accessor for NewsFeedFilterOptions.Option, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
      uint64_t v50 = sub_100123990();
      uint64_t v51 = *(void *)(v50 - 8);
      uint64_t v52 = *(void *)(v51 + 72);
      unint64_t v53 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1001276F0;
      unint64_t v126 = v53;
      int v55 = (void *)(v54 + v53);
      *int v55 = _swiftEmptyArrayStorage;
      unint64_t v56 = *(void (**)(void))(v51 + 104);
      unsigned int v123 = enum case for NewsFeedFilterOptions.Option.duplicateArticles(_:);
      ((void (*)(void *))v56)(v55);
      *(void *)((char *)v55 + v52) = _swiftEmptyArrayStorage;
      v56();
      uint64_t v57 = (char *)v55 + 2 * v52;
      uint64_t v58 = enum case for HeadlineCondition.pressRelease(_:);
      uint64_t v59 = sub_100123840();
      uint64_t v121 = *(void *)(v59 - 8);
      unsigned int v135 = v58;
      uint64_t v129 = v59;
      v133 = *(void (**)(char *, uint64_t))(v121 + 104);
      v133(v57, v58);
      unsigned int v60 = enum case for NewsFeedFilterOptions.Option.condition(_:);
      ((void (*)(char *, void, uint64_t))v56)(v57, enum case for NewsFeedFilterOptions.Option.condition(_:), v50);
      sub_100123980();
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_100125CC0();
      swift_bridgeObjectRelease();
      v0[18] = v28;
      uint64_t v61 = *(void *)(v28 + 16);
      if (v61 && v61 < v141)
      {
        uint64_t v118 = v138[39];
        uint64_t v142 = v138[38];
        uint64_t v147 = v138[37];
        uint64_t v62 = swift_allocObject();
        *(_OWORD *)(v62 + 16) = xmmword_1001276F0;
        unsigned int v131 = v60;
        unint64_t v63 = v62 + v126;
        *(void *)(v62 + v126) = _swiftEmptyArrayStorage;
        ((void (*)(unint64_t, void, uint64_t))v56)(v62 + v126, v123, v50);
        *(void *)(v63 + v52) = _swiftEmptyArrayStorage;
        v56();
        uint64_t v64 = (uint64_t *)(v63 + 2 * v52);
        sub_100014350(0, (unint64_t *)&unk_10015E140, (uint64_t (*)(uint64_t))&type metadata accessor for HeadlineCondition, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
        unint64_t v65 = (*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_100127010;
        ((void (*)(unint64_t, void, uint64_t))v133)(v66 + v65, v135, v129);
        *uint64_t v64 = v66;
        ((void (*)(uint64_t *, void, uint64_t))v133)(v64, enum case for HeadlineCondition.none(_:), v129);
        ((void (*)(uint64_t *, void, uint64_t))v56)(v64, v131, v50);
        sub_100123980();
        swift_bridgeObjectRetain();
        uint64_t v67 = sub_100125CC0();
        swift_bridgeObjectRelease();
        sub_100093EC4(v67);
        (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v118, v147);
        uint64_t v28 = v138[18];
      }
      v138[73] = v28;
      uint64_t v68 = v138[35];
      uint64_t v69 = v138[36];
      uint64_t v70 = v138[33];
      uint64_t v71 = v138[32];
      uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16);
      v72(v69, v138[27] + OBJC_IVAR____TtC12StocksWidget24HeadlineViewModelService_logger, v71);
      v72(v68, v69, v71);
      unint64_t v73 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      uint64_t v33 = swift_allocObject();
      v138[74] = v33;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v70 + 32))(v33 + v73, v69, v71);
      uint64_t v31 = *(char **)(v28 + 16);
      v146 = v31;
      if (v31)
      {
        unint64_t v74 = v28 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
        uint64_t v143 = *(void *)(v127 + 72);
        uint64_t v75 = *(void (**)(uint64_t, unint64_t, uint64_t))(v127 + 16);
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v29 = 0;
        do
        {
          uint64_t v76 = v138[43];
          uint64_t v77 = v138[41];
          uint64_t v78 = v138[31];
          v75(v76, v74, v77);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1000100F8(v76, v78);
          (*v139)(v76, v77);
          swift_bridgeObjectRelease();
          swift_release();
          sub_1000131EC();
          LODWORD(v76) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v78, 1, v79);
          uint64_t v40 = (void *)sub_100013A9C(v138[31], &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC);
          if (v76 != 1)
          {
            uint64_t v31 = v146;
            goto LABEL_52;
          }
          ++v29;
          v74 += v143;
        }
        while (v146 != (char *)v29);
        uint64_t v80 = (uint64_t)v146;
        uint64_t v0 = v138;
        if (v146) {
          goto LABEL_72;
        }
        goto LABEL_79;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v40 = (void *)swift_retain();
      uint64_t v29 = 0;
LABEL_52:
      uint64_t v80 = (uint64_t)v31;
      uint64_t v0 = v138;
      if ((char *)v29 == v31)
      {
LABEL_71:
        if (!v31) {
          goto LABEL_79;
        }
        goto LABEL_72;
      }
      if ((uint64_t)v138[26] <= 1) {
        uint64_t v81 = 1;
      }
      else {
        uint64_t v81 = v138[26];
      }
      uint64_t v82 = 1;
      uint64_t v137 = v81;
      while (1)
      {
        unint64_t v83 = v29 + 1;
        if (__OFADD__(v29, 1)) {
          goto LABEL_88;
        }
        uint64_t v29 = (uint64_t)v31;
        if ((char *)v83 != v31)
        {
          if ((v83 & 0x8000000000000000) != 0) {
            goto LABEL_90;
          }
          uint64_t v144 = v82;
          unint64_t v84 = v28 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
          while (v83 < *(void *)(v28 + 16))
          {
            uint64_t v85 = v138[43];
            uint64_t v86 = v138[41];
            uint64_t v87 = v138[30];
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v127 + 16))(v85, v84 + *(void *)(v127 + 72) * v83, v86);
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1000100F8(v85, v87);
            (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v85, v86);
            swift_bridgeObjectRelease();
            swift_release();
            sub_1000131EC();
            LODWORD(v85) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 48))(v87, 1, v88);
            uint64_t v40 = (void *)sub_100013A9C(v138[30], &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC);
            if (v85 != 1)
            {
              uint64_t v29 = v83;
              uint64_t v0 = v138;
              uint64_t v31 = v146;
              goto LABEL_66;
            }
            ++v83;
            uint64_t v31 = v146;
            if (v146 == (char *)v83)
            {
              uint64_t v29 = (uint64_t)v146;
              uint64_t v0 = v138;
LABEL_66:
              uint64_t v81 = v137;
              uint64_t v82 = v144;
              goto LABEL_67;
            }
          }
          __break(1u);
          goto LABEL_87;
        }
LABEL_67:
        if (v82 == v0[26]) {
          goto LABEL_78;
        }
        if (v82 == v81) {
          goto LABEL_89;
        }
        ++v82;
        if ((char *)v29 == v31)
        {
          uint64_t v80 = (uint64_t)v31;
          goto LABEL_71;
        }
      }
    }
  }
  uint64_t v23 = 0;
  unint64_t v24 = (*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80);
  unint64_t v130 = v22 + v24;
  uint64_t v140 = *(void *)(v127 + 72);
  v146 = *(char **)(v127 + 16);
  uint64_t v124 = v140 + v24;
  unint64_t v128 = v24;
  ((void (*)(void, unint64_t, void))v146)(v0[46], v22 + v24, v0[41]);
  while (1)
  {
    uint64_t v25 = v0[16];
    uint64_t v26 = *(void *)(v25 + 16);
    if (!v26) {
      goto LABEL_29;
    }
    uint64_t v134 = v23;
    v136 = v17;
    uint64_t v27 = v0[45];
    uint64_t v28 = v0[41];
    ((void (*)(uint64_t, unint64_t, uint64_t))v146)(v27, v25 + v24, v28);
    sub_100013A54(&qword_10015E1C8, (void (*)(uint64_t))&type metadata accessor for Headline);
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_100125A90();
    uint64_t v30 = *v139;
    (*v139)(v27, v28);
    if ((v29 & 1) == 0) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v23 = v134;
    uint64_t v17 = v136;
    unint64_t v24 = v128;
    v30(v0[46], v0[41]);
LABEL_17:
    if (++v23 == v132) {
      goto LABEL_35;
    }
    ((void (*)(void, unint64_t, void))v146)(v0[46], v130 + v23 * v140, v0[41]);
  }
  if (v26 == 1)
  {
    swift_bridgeObjectRelease();
LABEL_28:
    uint64_t v23 = v134;
    uint64_t v17 = v136;
    unint64_t v24 = v128;
LABEL_29:
    uint64_t v35 = (void (*)(char *, uint64_t, uint64_t))*v6;
    (*v6)(v0[44], v0[46], v0[41]);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10009BB0C(0, v17[2] + 1, 1);
      uint64_t v17 = v148;
    }
    unint64_t v37 = v17[2];
    unint64_t v36 = v17[3];
    if (v37 >= v36 >> 1)
    {
      sub_10009BB0C(v36 > 1, v37 + 1, 1);
      uint64_t v17 = v148;
    }
    uint64_t v38 = v138[44];
    uint64_t v39 = v138[41];
    v17[2] = v37 + 1;
    v35((char *)v17 + v24 + v37 * v140, v38, v39);
    uint64_t v0 = v138;
    v148 = v17;
    goto LABEL_17;
  }
  uint64_t v31 = (char *)(v25 + v124);
  uint64_t v32 = 1;
  while (1)
  {
    ((void (*)(void, char *, void))v146)(v0[45], v31, v0[41]);
    uint64_t v33 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    uint64_t v29 = v0[45];
    uint64_t v28 = v0[41];
    char v34 = sub_100125A90();
    v30(v29, v28);
    if (v34)
    {
      swift_bridgeObjectRelease();
      uint64_t v0 = v138;
      uint64_t v6 = v116;
      goto LABEL_16;
    }
    ++v32;
    v31 += v140;
    uint64_t v0 = v138;
    if (v33 == v26)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v116;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_78:
  uint64_t v80 = v29;
  if (!v31)
  {
LABEL_79:
    uint64_t v89 = 0;
    goto LABEL_80;
  }
LABEL_72:
  uint64_t v89 = 0;
  unint64_t v90 = v28 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
  uint64_t v145 = *(void *)(v127 + 72);
  uint64_t v91 = *(void (**)(uint64_t, unint64_t, uint64_t))(v127 + 16);
  while (1)
  {
    uint64_t v92 = v138[43];
    uint64_t v93 = v138[41];
    uint64_t v94 = v138[29];
    v91(v92, v90, v93);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1000100F8(v92, v94);
    (*v139)(v92, v93);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000131EC();
    LODWORD(v92) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 48))(v94, 1, v95);
    sub_100013A9C(v138[29], &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC);
    if (v92 != 1) {
      break;
    }
    ++v89;
    v90 += v145;
    if (v146 == v89)
    {
      uint64_t v89 = v146;
      break;
    }
  }
  uint64_t v0 = v138;
LABEL_80:
  uint64_t v40 = (void *)(*(uint64_t (**)(void, void))(v0[33] + 8))(v0[35], v0[32]);
  if (v80 < (uint64_t)v89) {
    goto LABEL_91;
  }
  uint64_t v96 = *(void *)(v28 + 16);
  if (v96 < (unint64_t)v89 || v96 < v80) {
    goto LABEL_92;
  }
  unint64_t v97 = (void *)v0[68];
  uint64_t v98 = v0[27];
  uint64_t v99 = v0[28];
  unint64_t v100 = v28 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
  v0[2] = v28;
  v0[3] = v100;
  v0[4] = v89;
  v0[5] = (2 * v80) | 1;
  v0[6] = sub_100013260;
  v0[7] = v33;
  v0[8] = sub_1000133B0;
  v0[9] = 0;
  v0[10] = sub_100013468;
  v0[11] = 0;
  sub_100009D98((void *)(v98 + 72), *(void *)(v98 + 96));
  char v101 = sub_100123A40();
  uint64_t v102 = swift_allocObject();
  *(void *)(v102 + 16) = v97;
  *(unsigned char *)(v102 + 24) = v101 & 1;
  *(void *)(v102 + 32) = v99;
  uint64_t v103 = swift_allocObject();
  v0[75] = v103;
  *(void *)(v103 + 16) = &unk_10015E1B8;
  *(void *)(v103 + 24) = v102;
  id v104 = v97;
  v105 = (void *)swift_task_alloc();
  v0[76] = v105;
  sub_1000137B0();
  uint64_t v107 = v106;
  uint64_t v108 = type metadata accessor for HeadlineViewModel(0);
  uint64_t v44 = sub_100013A54(&qword_10015E138, (void (*)(uint64_t))sub_1000137B0);
  void *v105 = v0;
  v105[1] = sub_10000E714;
  uint64_t v40 = &unk_10015E1C0;
  uint64_t v41 = v103;
  uint64_t v42 = v107;
  uint64_t v43 = v108;
  return Sequence<>.concurrentMap<A>(_:)(v40, v41, v42, v43, v44);
}

uint64_t sub_10000E714(uint64_t a1)
{
  *(void *)(*(void *)v1 + 616) = a1;
  swift_task_dealloc();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return _swift_task_switch(sub_10000E874, 0, 0);
}

uint64_t sub_10000E874()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 304);

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v0 + 616);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v6);
}

uint64_t sub_10000EA04()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000EB48()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000EC84()
{
  v182 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F40();
  v170 = v0;
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v164 = v2;
    v171 = v1;
    int64_t v3 = v0[60];
    uint64_t v4 = v0[51];
    uint64_t v5 = v0[25];
    uint64_t v6 = (_DWORD *)swift_slowAlloc();
    uint64_t v180 = swift_slowAlloc();
    v181 = _swiftEmptyArrayStorage;
    v162 = v6;
    *uint64_t v6 = 136315394;
    sub_10009BACC(0, v3, 0);
    uint64_t v7 = 0;
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    uint64_t v9 = v5 + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
    uint64_t v173 = *(void *)(v4 + 56);
    v177 = v8;
    uint64_t v10 = (void (**)(uint64_t, uint64_t))(v4 - 8);
    do
    {
      uint64_t v11 = v0[52];
      uint64_t v12 = v0[50];
      v177(v11, v9, v12);
      uint64_t v13 = sub_100123D20();
      uint64_t v15 = v14;
      (*v10)(v11, v12);
      uint64_t v16 = v181;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10009BACC(0, v181[2] + 1, 1);
        uint64_t v16 = v181;
      }
      unint64_t v18 = v16[2];
      unint64_t v17 = v16[3];
      if (v18 >= v17 >> 1)
      {
        sub_10009BACC(v17 > 1, v18 + 1, 1);
        uint64_t v16 = v181;
      }
      uint64_t v0 = v170;
      uint64_t v19 = v170[60];
      ++v7;
      v16[2] = v18 + 1;
      uint64_t v20 = &v16[2 * v18];
      v20[4] = v13;
      v20[5] = v15;
      v9 += v173;
    }
    while (v7 != v19);
    v170[20] = v16;
    sub_1000146B4();
    sub_100013A54((unint64_t *)&qword_10015E1D8, (void (*)(uint64_t))sub_1000146B4);
    uint64_t v21 = sub_100125A50();
    unint64_t v23 = v22;
    swift_release();
    v170[21] = sub_1000AB124(v21, v23, &v180);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *((_WORD *)v162 + 6) = 2080;
    swift_getErrorValue();
    uint64_t v24 = sub_100126580();
    v170[24] = sub_1000AB124(v24, v25, &v180);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v171, v164, "Failed to fetch top stories for symbols=[%s], error=%s", (uint8_t *)v162, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v145 = sub_10003D460((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  uint64_t v26 = v0[65];
  unint64_t v146 = v0[61];
  uint64_t v27 = v0[51];
  uint64_t v28 = v0[48];
  uint64_t v29 = v0[42];
  uint64_t v30 = v0[25];
  v0[16] = _swiftEmptyArrayStorage;
  v0[17] = _swiftEmptyArrayStorage;
  uint64_t v31 = *(void (**)(void, uint64_t, void))(v27 + 16);
  v27 += 16;
  v153 = v31;
  uint64_t v151 = v30 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
  uint64_t v150 = *(void *)(v27 + 56);
  uint64_t v143 = (void (**)(uint64_t, uint64_t))(v28 + 8);
  uint64_t v144 = (void (**)(uint64_t, void, uint64_t))(v28 + 104);
  unsigned int v142 = enum case for NewsFeedSortMethod.publishDate(_:);
  v172 = (void (**)(uint64_t, uint64_t))(v29 + 8);
  uint64_t v158 = v29;
  uint64_t v32 = (void (**)(void, void, void))(v29 + 32);
  v148 = (void (**)(void, void))(v27 - 8);
  swift_bridgeObjectRetain();
  uint64_t v33 = 0;
  uint64_t v141 = v26;
  uint64_t v147 = v32;
  do
  {
    v153(v0[53], v151 + v33 * v150, v0[50]);
    if (*(void *)(v26 + 16))
    {
      uint64_t v156 = v33;
      unint64_t v38 = sub_10003E7CC(v0[53]);
      if (v39)
      {
        uint64_t v40 = *(void *)(*(void *)(v26 + 56) + 8 * v38);
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_100123D20();
        if (*(void *)(v145 + 16))
        {
          sub_10003E754(v41, v42);
          if (v43) {
            swift_bridgeObjectRetain();
          }
        }
        uint64_t v44 = v170[49];
        uint64_t v45 = v170[47];
        swift_bridgeObjectRelease();
        (*v144)(v44, v142, v45);
        uint64_t v46 = sub_100125CB0();
        swift_bridgeObjectRelease();
        (*v143)(v44, v45);
        v181 = (void *)v46;
        sub_100093EC4(v40);
        unint64_t v47 = (char *)v181;
        v181 = _swiftEmptyArrayStorage;
        uint64_t v163 = *((void *)v47 + 2);
        if (v163)
        {
          uint64_t v48 = 0;
          unint64_t v49 = (*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80);
          v160 = &v47[v49];
          uint64_t v174 = *(void *)(v158 + 72);
          v178 = *(void (**)(uint64_t, char *, uint64_t))(v158 + 16);
          unint64_t v155 = v174 + v49;
          unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
          uint64_t v0 = v170;
          unint64_t v159 = v49;
          v178(v0[46], &v47[v49], v0[41]);
          while (1)
          {
            uint64_t v51 = v0[16];
            uint64_t v52 = *(void *)(v51 + 16);
            if (!v52) {
              goto LABEL_37;
            }
            uint64_t v165 = v48;
            unint64_t v166 = v50;
            uint64_t v53 = v0[45];
            uint64_t v54 = v0[41];
            v178(v53, (char *)(v51 + v49), v54);
            uint64_t v55 = sub_100013A54(&qword_10015E1C8, (void (*)(uint64_t))&type metadata accessor for Headline);
            swift_bridgeObjectRetain();
            char v56 = sub_100125A90();
            uint64_t v57 = *v172;
            (*v172)(v53, v54);
            if ((v56 & 1) == 0) {
              break;
            }
            swift_bridgeObjectRelease();
LABEL_24:
            v57(v0[46], v0[41]);
            uint64_t v48 = v165;
            unint64_t v50 = v166;
            unint64_t v49 = v159;
LABEL_25:
            if (++v48 == v163) {
              goto LABEL_44;
            }
            v178(v0[46], &v160[v48 * v174], v0[41]);
          }
          if (v52 != 1)
          {
            uint64_t v58 = (char *)(v51 + v155);
            uint64_t v59 = 1;
            while (1)
            {
              v178(v0[45], v58, v0[41]);
              uint64_t v60 = v59 + 1;
              if (__OFADD__(v59, 1)) {
                break;
              }
              uint64_t v61 = v0[45];
              uint64_t v54 = v0[41];
              unint64_t v50 = sub_100125A90();
              v57(v61, v54);
              if (v50)
              {
                swift_bridgeObjectRelease();
                uint64_t v0 = v170;
                uint64_t v32 = v147;
                goto LABEL_24;
              }
              ++v59;
              v58 += v174;
              uint64_t v0 = v170;
              if (v60 == v52)
              {
                swift_bridgeObjectRelease();
                uint64_t v32 = v147;
                goto LABEL_36;
              }
            }
            __break(1u);
LABEL_78:
            uint64_t v109 = v60;
LABEL_79:
            uint64_t v100 = (uint64_t)v178;
            goto LABEL_80;
          }
          swift_bridgeObjectRelease();
LABEL_36:
          uint64_t v48 = v165;
          unint64_t v50 = v166;
          unint64_t v49 = v159;
LABEL_37:
          uint64_t v62 = *v32;
          (*v32)(v0[44], v0[46], v0[41]);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10009BB0C(0, *(void *)(v50 + 16) + 1, 1);
            unint64_t v50 = (unint64_t)v181;
          }
          unint64_t v64 = *(void *)(v50 + 16);
          unint64_t v63 = *(void *)(v50 + 24);
          if (v64 >= v63 >> 1)
          {
            sub_10009BB0C(v63 > 1, v64 + 1, 1);
            unint64_t v50 = (unint64_t)v181;
          }
          uint64_t v65 = v0[44];
          uint64_t v66 = v0[41];
          *(void *)(v50 + 16) = v64 + 1;
          v62(v50 + v49 + v64 * v174, v65, v66);
          v181 = (void *)v50;
          goto LABEL_25;
        }
        unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v0 = v170;
LABEL_44:
        uint64_t v67 = (void *)swift_bridgeObjectRelease();
        unint64_t v72 = v146;
        if ((v146 & 0x8000000000000000) != 0)
        {
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
        if (v146)
        {
          unint64_t v72 = *(void *)(v50 + 16);
          if (v72 >= v0[61]) {
            unint64_t v72 = v0[61];
          }
        }
        uint64_t v73 = v50 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
        unint64_t v74 = (2 * v72) | 1;
        unint64_t v75 = swift_bridgeObjectRetain();
        sub_100094200(v75, v73, 0, v74);
        unint64_t v76 = *(void *)(v50 + 16);
        if (v146)
        {
          if (v76 >= v0[61]) {
            uint64_t v34 = v0[61];
          }
          else {
            uint64_t v34 = *(void *)(v50 + 16);
          }
        }
        else
        {
          uint64_t v34 = 0;
        }
        sub_100094200(v50, v73, v34, (2 * v76) | 1);
        uint64_t v26 = v141;
        uint64_t v33 = v156;
      }
    }
    uint64_t v35 = v33 + 1;
    uint64_t v36 = v0[60];
    (*v148)(v0[53], v0[50]);
    BOOL v37 = v35 == v36;
    uint64_t v33 = v35;
  }
  while (!v37);
  uint64_t v175 = v0[26];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100093EC4(v0[17]);
  sub_100014350(0, &qword_10015E0D8, (uint64_t (*)(uint64_t))&type metadata accessor for NewsFeedFilterOptions.Option, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v77 = sub_100123990();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = *(void *)(v78 + 72);
  unint64_t v80 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_1001276F0;
  unint64_t v82 = v81 + v80;
  *(void *)(v81 + v80) = _swiftEmptyArrayStorage;
  unint64_t v83 = *(void (**)(void))(v78 + 104);
  unsigned int v154 = enum case for NewsFeedFilterOptions.Option.duplicateArticles(_:);
  ((void (*)(unint64_t))v83)(v81 + v80);
  *(void *)(v82 + v79) = _swiftEmptyArrayStorage;
  v83();
  unint64_t v84 = v82 + 2 * v79;
  uint64_t v85 = enum case for HeadlineCondition.pressRelease(_:);
  uint64_t v86 = sub_100123840();
  uint64_t v152 = *(void *)(v86 - 8);
  uint64_t v167 = v86;
  v161 = *(void (**)(unint64_t, uint64_t))(v152 + 104);
  v161(v84, v85);
  unsigned int v157 = enum case for NewsFeedFilterOptions.Option.condition(_:);
  ((void (*)(unint64_t))v83)(v84);
  sub_100123980();
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_100125CC0();
  swift_bridgeObjectRelease();
  v0[18] = v54;
  uint64_t v87 = *(void *)(v54 + 16);
  if (v87 && v87 < v175)
  {
    uint64_t v149 = v170[39];
    uint64_t v176 = v170[38];
    uint64_t v179 = v170[37];
    uint64_t v88 = swift_allocObject();
    *(_OWORD *)(v88 + 16) = xmmword_1001276F0;
    unint64_t v89 = v88 + v80;
    *(void *)(v88 + v80) = _swiftEmptyArrayStorage;
    ((void (*)(unint64_t, void, uint64_t))v83)(v88 + v80, v154, v77);
    *(void *)(v89 + v79) = _swiftEmptyArrayStorage;
    v83();
    unint64_t v90 = (uint64_t *)(v89 + 2 * v79);
    sub_100014350(0, (unint64_t *)&unk_10015E140, (uint64_t (*)(uint64_t))&type metadata accessor for HeadlineCondition, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    unint64_t v91 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
    uint64_t v92 = swift_allocObject();
    *(_OWORD *)(v92 + 16) = xmmword_100127010;
    ((void (*)(unint64_t, void, uint64_t))v161)(v92 + v91, v85, v167);
    *unint64_t v90 = v92;
    ((void (*)(uint64_t *, void, uint64_t))v161)(v90, enum case for HeadlineCondition.none(_:), v167);
    ((void (*)(uint64_t *, void, uint64_t))v83)(v90, v157, v77);
    sub_100123980();
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_100125CC0();
    swift_bridgeObjectRelease();
    sub_100093EC4(v93);
    (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v149, v179);
    uint64_t v54 = v170[18];
  }
  v170[73] = v54;
  uint64_t v95 = v170[35];
  uint64_t v94 = v170[36];
  uint64_t v96 = v170[33];
  uint64_t v97 = v170[32];
  uint64_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16);
  v98(v94, v170[27] + OBJC_IVAR____TtC12StocksWidget24HeadlineViewModelService_logger, v97);
  v98(v95, v94, v97);
  unint64_t v50 = (unint64_t)v170;
  unint64_t v99 = (*(unsigned __int8 *)(v96 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
  uint64_t v100 = swift_allocObject();
  v170[74] = v100;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v96 + 32))(v100 + v99, v94, v97);
  uint64_t v55 = *(void *)(v54 + 16);
  uint64_t v174 = v55;
  v178 = (void (*)(uint64_t, char *, uint64_t))v100;
  if (v55)
  {
    unint64_t v101 = v54 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
    uint64_t v102 = *(void *)(v158 + 72);
    uint64_t v103 = *(void (**)(uint64_t, unint64_t, uint64_t))(v158 + 16);
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v60 = 0;
    do
    {
      uint64_t v104 = *(void *)(v50 + 344);
      uint64_t v105 = v170[41];
      uint64_t v106 = v170[31];
      v103(v104, v101, v105);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1000100F8(v104, v106);
      uint64_t v107 = v105;
      unint64_t v50 = (unint64_t)v170;
      (*v172)(v104, v107);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1000131EC();
      LODWORD(v104) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v106, 1, v108);
      uint64_t v67 = (void *)sub_100013A9C(v170[31], &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC);
      if (v104 != 1)
      {
        uint64_t v55 = v174;
        goto LABEL_60;
      }
      ++v60;
      v101 += v102;
      uint64_t v55 = v174;
    }
    while (v174 != v60);
LABEL_76:
    uint64_t v109 = v55;
    goto LABEL_79;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v67 = (void *)swift_retain();
  uint64_t v60 = 0;
LABEL_60:
  uint64_t v109 = v55;
  if (v60 != v55)
  {
    uint64_t v110 = *(void *)(v50 + 208);
    if (v110 <= 1) {
      uint64_t v110 = 1;
    }
    uint64_t v168 = v110;
    uint64_t v111 = 1;
    while (1)
    {
      unint64_t v112 = v60 + 1;
      if (__OFADD__(v60, 1)) {
        break;
      }
      uint64_t v60 = v55;
      if (v112 != v55)
      {
        if ((v112 & 0x8000000000000000) != 0) {
          goto LABEL_97;
        }
        unint64_t v113 = v54 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
        while (v112 < *(void *)(v54 + 16))
        {
          uint64_t v114 = *(void *)(v50 + 344);
          uint64_t v115 = *(void *)(v50 + 328);
          uint64_t v116 = v170[30];
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v158 + 16))(v114, v113 + *(void *)(v158 + 72) * v112, v115);
          swift_bridgeObjectRetain();
          swift_retain();
          unint64_t v50 = (unint64_t)v170;
          sub_1000100F8(v114, v116);
          (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v114, v115);
          swift_release();
          swift_bridgeObjectRelease();
          sub_1000131EC();
          LODWORD(v114) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 48))(v116, 1, v117);
          uint64_t v67 = (void *)sub_100013A9C(v170[30], &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC);
          if (v114 != 1)
          {
            uint64_t v60 = v112;
            uint64_t v55 = v174;
            goto LABEL_73;
          }
          ++v112;
          uint64_t v55 = v174;
          if (v174 == v112)
          {
            uint64_t v60 = v174;
            goto LABEL_73;
          }
        }
        __break(1u);
        goto LABEL_94;
      }
LABEL_73:
      if (v111 == *(void *)(v50 + 208)) {
        goto LABEL_78;
      }
      if (v111 == v168) {
        goto LABEL_96;
      }
      ++v111;
      if (v60 == v55) {
        goto LABEL_76;
      }
    }
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
LABEL_80:
  if (v55)
  {
    uint64_t v169 = v109;
    uint64_t v118 = 0;
    unint64_t v119 = v54 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
    uint64_t v120 = *(void *)(v158 + 72);
    uint64_t v121 = *(void (**)(uint64_t, unint64_t, uint64_t))(v158 + 16);
    while (1)
    {
      uint64_t v122 = *(void *)(v50 + 344);
      uint64_t v123 = v170[41];
      uint64_t v124 = v170[29];
      v121(v122, v119, v123);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1000100F8(v122, v124);
      uint64_t v125 = v123;
      unint64_t v50 = (unint64_t)v170;
      (*v172)(v122, v125);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1000131EC();
      LODWORD(v122) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 48))(v124, 1, v126);
      sub_100013A9C(v170[29], &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC);
      if (v122 != 1) {
        break;
      }
      ++v118;
      v119 += v120;
      if (v174 == v118)
      {
        uint64_t v118 = v174;
        break;
      }
    }
    uint64_t v100 = (uint64_t)v178;
    uint64_t v109 = v169;
  }
  else
  {
    uint64_t v118 = 0;
  }
  uint64_t v67 = (void *)(*(uint64_t (**)(void, void))(*(void *)(v50 + 264) + 8))(*(void *)(v50 + 280), *(void *)(v50 + 256));
  if (v109 < v118)
  {
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    return Sequence<>.concurrentMap<A>(_:)(v67, v68, v69, v70, v71);
  }
  uint64_t v127 = *(void *)(v54 + 16);
  if (v127 < (unint64_t)v118 || v127 < v109) {
    goto LABEL_99;
  }
  unint64_t v128 = *(void **)(v50 + 544);
  uint64_t v129 = *(void *)(v50 + 216);
  uint64_t v130 = *(void *)(v50 + 224);
  unint64_t v131 = v54 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
  *(void *)(v50 + 16) = v54;
  *(void *)(v50 + 24) = v131;
  *(void *)(v50 + 32) = v118;
  *(void *)(v50 + 40) = (2 * v109) | 1;
  *(void *)(v50 + 48) = sub_100013260;
  *(void *)(v50 + 56) = v100;
  *(void *)(v50 + 64) = sub_1000133B0;
  *(void *)(v50 + 72) = 0;
  *(void *)(v50 + 80) = sub_100013468;
  *(void *)(v50 + 88) = 0;
  sub_100009D98((void *)(v129 + 72), *(void *)(v129 + 96));
  char v132 = sub_100123A40();
  uint64_t v133 = swift_allocObject();
  *(void *)(v133 + 16) = v128;
  *(unsigned char *)(v133 + 24) = v132 & 1;
  *(void *)(v133 + 32) = v130;
  uint64_t v134 = swift_allocObject();
  *(void *)(v50 + 600) = v134;
  *(void *)(v134 + 16) = &unk_10015E1B8;
  *(void *)(v134 + 24) = v133;
  id v135 = v128;
  v136 = (void *)swift_task_alloc();
  *(void *)(v50 + 608) = v136;
  sub_1000137B0();
  uint64_t v138 = v137;
  uint64_t v139 = type metadata accessor for HeadlineViewModel(0);
  uint64_t v71 = sub_100013A54(&qword_10015E138, (void (*)(uint64_t))sub_1000137B0);
  void *v136 = v50;
  v136[1] = sub_10000E714;
  uint64_t v67 = &unk_10015E1C0;
  uint64_t v68 = v134;
  uint64_t v69 = v138;
  uint64_t v70 = v139;
  return Sequence<>.concurrentMap<A>(_:)(v67, v68, v69, v70, v71);
}

uint64_t sub_1000100F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100123E30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = sub_100123E00();
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a1, v4);
    uint64_t v26 = sub_100124550();
    os_log_type_t v27 = sub_100125F60();
    if (!os_log_type_enabled(v26, v27))
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      goto LABEL_17;
    }
    uint64_t v36 = a2;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v29 = sub_100123E20();
    uint64_t v37 = sub_1000AB124(v29, v30, &v39);
    sub_100126030();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    *(_WORD *)(v28 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    uint64_t v37 = sub_1000AB124(v37, v38, &v39);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Dropping headline without title: %s. id=%s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_14:
    swift_slowDealloc();

    a2 = v36;
LABEL_17:
    sub_1000142E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a2, 1, 1, v35);
  }
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  id v15 = [(id)sub_100123DD0() sourceName];
  swift_unknownObjectRelease();
  if (!v15)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    uint64_t v26 = sub_100124550();
    os_log_type_t v31 = sub_100125F60();
    if (!os_log_type_enabled(v26, v31))
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      goto LABEL_17;
    }
    uint64_t v36 = a2;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315394;
    uint64_t v33 = sub_100123E20();
    uint64_t v37 = sub_1000AB124(v33, v34, &v39);
    sub_100126030();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    *(_WORD *)(v32 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    uint64_t v37 = sub_1000AB124(v37, v38, &v39);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v31, "Dropping headline without source: %s. id=%s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_14;
  }
  uint64_t v16 = sub_100125B10();
  uint64_t v18 = v17;

  sub_1000142E4();
  uint64_t v20 = v19;
  uint64_t v21 = (uint64_t *)(a2 + *(int *)(v19 + 48));
  uint64_t v22 = v4;
  unint64_t v23 = (uint64_t *)(a2 + *(int *)(v19 + 64));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v22);
  uint64_t *v21 = v13;
  v21[1] = v14;
  *unint64_t v23 = v16;
  v23[1] = v18;
  uint64_t v24 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);

  return v24(a2, 0, 1, v20);
}

uint64_t sub_10001069C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 1724) = a8;
  *(void *)(v8 + 1536) = a7;
  *(void *)(v8 + 1528) = a6;
  *(void *)(v8 + 1520) = a5;
  *(void *)(v8 + 1512) = a4;
  *(void *)(v8 + 1504) = a3;
  *(void *)(v8 + 1496) = a2;
  *(void *)(v8 + 1448) = a1;
  sub_100014350(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  *(void *)(v8 + 1544) = swift_task_alloc();
  *(void *)(v8 + 1552) = swift_task_alloc();
  *(void *)(v8 + 1560) = swift_task_alloc();
  *(void *)(v8 + 1568) = swift_task_alloc();
  uint64_t v9 = sub_100123E30();
  *(void *)(v8 + 1576) = v9;
  *(void *)(v8 + 1584) = *(void *)(v9 - 8);
  *(void *)(v8 + 1592) = swift_task_alloc();
  *(void *)(v8 + 1600) = swift_task_alloc();
  *(void *)(v8 + 1608) = swift_task_alloc();
  return _swift_task_switch(sub_10001081C, 0, 0);
}

uint64_t sub_10001081C()
{
  uint64_t v1 = *(void *)(v0 + 1608);
  uint64_t v2 = *(void *)(v0 + 1584);
  uint64_t v3 = *(void *)(v0 + 1576);
  uint64_t v4 = *(void *)(v0 + 1496);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(void *)(v0 + 1616) = v5;
  *(void *)(v0 + 1624) = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v3);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v6 == enum case for Headline.headline(_:))
  {
    uint64_t v7 = *(uint64_t **)(v0 + 1608);
    (*(void (**)(uint64_t *, void))(*(void *)(v0 + 1584) + 96))(v7, *(void *)(v0 + 1576));
    uint64_t v8 = *v7;
    *(void *)(v0 + 1632) = *v7;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 1640) = v9;
    *(void *)(v9 + 16) = v8;
    sub_100014350(255, &qword_10015E168, (uint64_t (*)(uint64_t))sub_100013C50, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    swift_asyncLet_begin();
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 1648) = v10;
    *(void *)(v10 + 16) = v8;
    swift_asyncLet_begin();
    return _swift_asyncLet_get(v0 + 656, v0 + 1400, sub_100010E9C, v0 + 1360);
  }
  else if (v6 == enum case for Headline.yahooHeadline(_:))
  {
    uint64_t v11 = *(void ***)(v0 + 1608);
    uint64_t v12 = *(void *)(v0 + 1544);
    int v13 = *(unsigned __int8 *)(v0 + 1724);
    uint64_t v14 = *(void *)(v0 + 1528);
    (*(void (**)(void **, void))(*(void *)(v0 + 1584) + 96))(v11, *(void *)(v0 + 1576));
    id v15 = *v11;
    swift_getObjectType();
    swift_bridgeObjectRetain();
    id v16 = [v15 identifier];
    uint64_t v17 = sub_100125B10();
    uint64_t v33 = v18;
    uint64_t v34 = v17;

    uint64_t v35 = v14;
    swift_bridgeObjectRetain();
    sub_100125FB0();
    uint64_t v19 = sub_100123150();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v12, 1, v19) == 1)
    {
      uint64_t v21 = *(void *)(v0 + 1544);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_100013A9C(v21, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v22 = 1;
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 1544);
      sub_100014350(0, &qword_10015E150, (uint64_t (*)(uint64_t))&type metadata accessor for URLQueryItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
      sub_100123040();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_100127010;
      sub_100123030();
      sub_100123140();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v23, v19);
      uint64_t v22 = 0;
    }
    if (v13) {
      char v24 = 1;
    }
    else {
      char v24 = 2;
    }
    uint64_t v25 = *(void *)(v0 + 1552);
    uint64_t v26 = *(void *)(v0 + 1520);
    uint64_t v27 = *(void *)(v0 + 1512);
    uint64_t v28 = *(void *)(v0 + 1504);
    uint64_t v29 = *(void *)(v0 + 1448);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v25, v22, 1, v19);
    *(void *)uint64_t v29 = v34;
    *(void *)(v29 + 8) = v33;
    *(unsigned char *)(v29 + 16) = v24;
    *(void *)(v29 + 24) = v26;
    *(void *)(v29 + 32) = v35;
    *(void *)(v29 + 40) = 0;
    *(void *)(v29 + 48) = 0;
    *(unsigned char *)(v29 + 56) = 1;
    *(void *)(v29 + 64) = v28;
    *(void *)(v29 + 72) = v27;
    *(_OWORD *)(v29 + 80) = xmmword_100127700;
    *(_OWORD *)(v29 + 96) = xmmword_100127710;
    *(unsigned char *)(v29 + 112) = 0;
    uint64_t v30 = type metadata accessor for HeadlineViewModel(0);
    sub_100013B0C(v25, v29 + *(int *)(v30 + 36));
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v31 = *(uint64_t (**)(void))(v0 + 8);
    return v31();
  }
  else
  {
    v5(*(void *)(v0 + 1592), *(void *)(v0 + 1496), *(void *)(v0 + 1576));
    sub_1001260E0(61);
    *(void *)(v0 + 1336) = 0;
    *(void *)(v0 + 1344) = 0xE000000000000000;
    v37._countAndFlagsBits = 0xD000000000000014;
    v37._object = (void *)0x8000000100130A30;
    sub_100125BB0(v37);
    sub_100126270();
    v38._countAndFlagsBits = 0xD000000000000027;
    v38._object = (void *)0x8000000100130A50;
    sub_100125BB0(v38);
    return sub_100126290();
  }
}

uint64_t sub_100010E9C()
{
  uint64_t v1 = *(void **)(v0 + 1400);
  *(void *)(v0 + 1656) = v1;
  id v2 = v1;
  return _swift_asyncLet_get(v0 + 16, v0 + 1352, sub_100010F20, v0 + 1408);
}

uint64_t sub_100010F20()
{
  return _swift_task_switch(sub_100010F3C, 0, 0);
}

uint64_t sub_100010F3C()
{
  uint64_t v1 = *(void **)(v0 + 1352);
  *(void *)(v0 + 1664) = v1;
  if (v1)
  {
    id v2 = *(void **)(v0 + 1632);
    id v3 = v1;
    id v4 = [v2 sourceChannel];
    double v5 = 1.0;
    if (v4)
    {
      id v6 = [v4 theme];
      swift_unknownObjectRelease();
      if (v6)
      {
        [v6 bannerImageScale];
        double v5 = v7;
        swift_unknownObjectRelease();
      }
    }
    if (v5 > 0.1) {
      double v8 = v5;
    }
    else {
      double v8 = 1.0;
    }
    double v9 = v8;
    uint64_t v10 = *(void *)(v0 + 1520);
    uint64_t v11 = *(void *)(v0 + 1528);
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v1 = *(void **)(v0 + 1520);
    double v9 = *(double *)(v0 + 1528);
  }
  *(void *)(v0 + 1696) = v11;
  *(void *)(v0 + 1688) = v10;
  *(double *)(v0 + 1680) = v9;
  *(void *)(v0 + 1672) = v1;
  uint64_t v12 = *(void **)(v0 + 1656);
  if (v12)
  {
    sub_100125DC0();
    id v13 = v12;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 1704) = sub_100125DB0();
    uint64_t v14 = sub_100125D80();
    uint64_t v16 = v15;
    uint64_t v17 = sub_100011514;
LABEL_14:
    return _swift_task_switch(v17, v14, v16);
  }
  swift_bridgeObjectRetain();
  if (sub_100123E10())
  {
    sub_100125DC0();
    *(void *)(v0 + 1712) = sub_100125DB0();
    uint64_t v14 = sub_100125D80();
    uint64_t v16 = v18;
    uint64_t v17 = sub_100011F00;
    goto LABEL_14;
  }
  uint64_t v19 = *(void *)(v0 + 1696);
  uint64_t v20 = *(void *)(v0 + 1688);
  uint64_t v21 = *(void *)(v0 + 1680);
  uint64_t v22 = *(void **)(v0 + 1672);
  uint64_t v23 = *(void **)(v0 + 1632);
  uint64_t v24 = *(void *)(v0 + 1560);
  uint64_t v25 = *(void **)(v0 + 1536);
  char v26 = *(void *)(v0 + 1664) == 0;
  swift_getObjectType();
  id v27 = [v23 identifier];
  uint64_t v28 = sub_100125B10();
  uint64_t v60 = v29;
  uint64_t v61 = v28;

  sub_1000140D4(v22, v21, v20, v19, v26);
  swift_unknownObjectRetain();
  id v30 = sub_100013E34(v23, v25);
  uint64_t v58 = v31;
  id v59 = v30;
  uint64_t v57 = v32;
  sub_100125FB0();
  uint64_t v33 = sub_100123150();
  uint64_t v34 = *(void *)(v33 - 8);
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v24, 1, v33);
  uint64_t v36 = *(void *)(v0 + 1696);
  uint64_t v37 = *(void *)(v0 + 1688);
  uint64_t v38 = *(void *)(v0 + 1680);
  uint64_t v39 = *(void **)(v0 + 1672);
  uint64_t v40 = *(void **)(v0 + 1664);
  uint64_t v41 = *(void **)(v0 + 1656);
  if (v35 == 1)
  {
    uint64_t v42 = *(void *)(v0 + 1560);
    sub_100014114(*(void **)(v0 + 1672), *(void *)(v0 + 1680), *(void *)(v0 + 1688), *(void *)(v0 + 1696), v40 == 0);

    sub_100013A9C(v42, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v43 = 1;
  }
  else
  {
    uint64_t v55 = *(void *)(v0 + 1560);
    sub_100014350(0, &qword_10015E150, (uint64_t (*)(uint64_t))&type metadata accessor for URLQueryItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    sub_100123040();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100127010;
    sub_100123030();
    sub_100123140();
    sub_100014114(v39, v38, v37, v36, v40 == 0);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v55, v33);
    uint64_t v43 = 0;
  }
  uint64_t v44 = *(void *)(v0 + 1696);
  uint64_t v45 = *(void *)(v0 + 1688);
  long long v56 = *(_OWORD *)(v0 + 1672);
  uint64_t v46 = *(void *)(v0 + 1568);
  uint64_t v47 = *(void *)(v0 + 1512);
  uint64_t v48 = *(void *)(v0 + 1504);
  uint64_t v49 = *(void *)(v0 + 1448);
  uint64_t v50 = v33;
  BOOL v51 = *(void *)(v0 + 1664) == 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v46, v43, 1, v50);
  sub_100014154();
  *(_DWORD *)(v0 + 1720) = *(_DWORD *)(v52 + 48);
  *(void *)uint64_t v49 = v61;
  *(void *)(v49 + 8) = v60;
  *(unsigned char *)(v49 + 16) = 0;
  *(_OWORD *)(v49 + 24) = v56;
  *(void *)(v49 + 40) = v45;
  *(void *)(v49 + 48) = v44;
  *(unsigned char *)(v49 + 56) = v51;
  *(void *)(v49 + 64) = v48;
  *(void *)(v49 + 72) = v47;
  *(void *)(v49 + 80) = v59;
  *(void *)(v49 + 88) = v58;
  *(void *)(v49 + 96) = v57;
  *(void *)(v49 + 104) = 1;
  *(unsigned char *)(v49 + 112) = 0;
  uint64_t v53 = type metadata accessor for HeadlineViewModel(0);
  sub_100013B0C(v46, v49 + *(int *)(v53 + 36));
  swift_bridgeObjectRetain();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1352, sub_100012864, v0 + 1456);
}

uint64_t sub_100011514()
{
  swift_release();
  uint64_t v0 = sub_100123D70();
  uint64_t v2 = v1;
  id v3 = [self currentDevice];
  id v4 = [v3 userInterfaceIdiom];

  if (v4)
  {
    swift_bridgeObjectRelease();
LABEL_3:
    double v5 = sub_100011AA8;
    goto LABEL_9;
  }
  if (sub_100123D60() == v0 && v6 == v2)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_100126530();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_3;
    }
  }
  double v5 = sub_100011638;
LABEL_9:
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100011638()
{
  (*(void (**)(void, void, void))(v0 + 1616))(*(void *)(v0 + 1600), *(void *)(v0 + 1496), *(void *)(v0 + 1576));
  char v44 = sub_100123E10();
  (*(void (**)(void, void))(*(void *)(v0 + 1584) + 8))(*(void *)(v0 + 1600), *(void *)(v0 + 1576));
  uint64_t v45 = *(void *)(v0 + 1656);
  uint64_t v1 = *(void *)(v0 + 1696);
  uint64_t v2 = *(void *)(v0 + 1688);
  uint64_t v3 = *(void *)(v0 + 1680);
  id v4 = *(void **)(v0 + 1672);
  double v5 = *(void **)(v0 + 1632);
  uint64_t v6 = *(void *)(v0 + 1560);
  char v7 = *(void **)(v0 + 1536);
  char v8 = *(void *)(v0 + 1664) == 0;
  swift_getObjectType();
  id v9 = [v5 identifier];
  uint64_t v10 = sub_100125B10();
  uint64_t v42 = v11;
  uint64_t v43 = v10;

  sub_1000140D4(v4, v3, v2, v1, v8);
  swift_unknownObjectRetain();
  id v12 = sub_100013E34(v5, v7);
  uint64_t v40 = v13;
  id v41 = v12;
  uint64_t v39 = v14;
  sub_100125FB0();
  uint64_t v15 = sub_100123150();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15);
  uint64_t v18 = *(void *)(v0 + 1696);
  uint64_t v19 = *(void *)(v0 + 1688);
  uint64_t v20 = *(void *)(v0 + 1680);
  uint64_t v21 = *(void **)(v0 + 1672);
  uint64_t v22 = *(void **)(v0 + 1664);
  uint64_t v23 = *(void **)(v0 + 1656);
  if (v17 == 1)
  {
    uint64_t v24 = *(void *)(v0 + 1560);
    sub_100014114(*(void **)(v0 + 1672), *(void *)(v0 + 1680), *(void *)(v0 + 1688), *(void *)(v0 + 1696), v22 == 0);

    sub_100013A9C(v24, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v25 = 1;
  }
  else
  {
    uint64_t v38 = *(void *)(v0 + 1560);
    sub_100014350(0, &qword_10015E150, (uint64_t (*)(uint64_t))&type metadata accessor for URLQueryItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    sub_100123040();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100127010;
    sub_100123030();
    sub_100123140();
    sub_100014114(v21, v20, v19, v18, v22 == 0);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v38, v15);
    uint64_t v25 = 0;
  }
  uint64_t v26 = v15;
  uint64_t v27 = *(void *)(v0 + 1696);
  uint64_t v28 = *(void *)(v0 + 1688);
  long long v37 = *(_OWORD *)(v0 + 1672);
  uint64_t v29 = *(void *)(v0 + 1568);
  uint64_t v30 = *(void *)(v0 + 1512);
  uint64_t v31 = *(void *)(v0 + 1504);
  uint64_t v32 = *(void *)(v0 + 1448);
  BOOL v33 = *(void *)(v0 + 1664) == 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v29, v25, 1, v26);
  sub_100014154();
  *(_DWORD *)(v0 + 1720) = *(_DWORD *)(v34 + 48);
  *(void *)uint64_t v32 = v43;
  *(void *)(v32 + 8) = v42;
  *(unsigned char *)(v32 + 16) = 0;
  *(_OWORD *)(v32 + 24) = v37;
  *(void *)(v32 + 40) = v28;
  *(void *)(v32 + 48) = v27;
  *(unsigned char *)(v32 + 56) = v33;
  *(void *)(v32 + 64) = v31;
  *(void *)(v32 + 72) = v30;
  *(void *)(v32 + 80) = v41;
  *(void *)(v32 + 88) = v40;
  *(void *)(v32 + 96) = v39;
  *(void *)(v32 + 104) = v45;
  *(unsigned char *)(v32 + 112) = v44 & 1;
  uint64_t v35 = type metadata accessor for HeadlineViewModel(0);
  sub_100013B0C(v29, v32 + *(int *)(v35 + 36));
  swift_bridgeObjectRetain();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1352, sub_100012864, v0 + 1456);
}

uint64_t sub_100011AA8()
{
  (*(void (**)(void, void, void))(v0 + 1616))(*(void *)(v0 + 1600), *(void *)(v0 + 1496), *(void *)(v0 + 1576));
  (*(void (**)(void, void))(*(void *)(v0 + 1584) + 8))(*(void *)(v0 + 1600), *(void *)(v0 + 1576));
  uint64_t v44 = *(void *)(v0 + 1656);
  uint64_t v1 = *(void *)(v0 + 1696);
  uint64_t v2 = *(void *)(v0 + 1688);
  uint64_t v3 = *(void *)(v0 + 1680);
  id v4 = *(void **)(v0 + 1672);
  double v5 = *(void **)(v0 + 1632);
  uint64_t v6 = *(void *)(v0 + 1560);
  char v7 = *(void **)(v0 + 1536);
  char v8 = *(void *)(v0 + 1664) == 0;
  swift_getObjectType();
  id v9 = [v5 identifier];
  uint64_t v10 = sub_100125B10();
  uint64_t v42 = v11;
  uint64_t v43 = v10;

  sub_1000140D4(v4, v3, v2, v1, v8);
  swift_unknownObjectRetain();
  id v12 = sub_100013E34(v5, v7);
  uint64_t v40 = v13;
  id v41 = v12;
  uint64_t v39 = v14;
  sub_100125FB0();
  uint64_t v15 = sub_100123150();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15);
  uint64_t v18 = *(void *)(v0 + 1696);
  uint64_t v19 = *(void *)(v0 + 1688);
  uint64_t v20 = *(void *)(v0 + 1680);
  uint64_t v21 = *(void **)(v0 + 1672);
  uint64_t v22 = *(void **)(v0 + 1664);
  uint64_t v23 = *(void **)(v0 + 1656);
  if (v17 == 1)
  {
    uint64_t v24 = *(void *)(v0 + 1560);
    sub_100014114(*(void **)(v0 + 1672), *(void *)(v0 + 1680), *(void *)(v0 + 1688), *(void *)(v0 + 1696), v22 == 0);

    sub_100013A9C(v24, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v25 = 1;
  }
  else
  {
    uint64_t v38 = *(void *)(v0 + 1560);
    sub_100014350(0, &qword_10015E150, (uint64_t (*)(uint64_t))&type metadata accessor for URLQueryItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    sub_100123040();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100127010;
    sub_100123030();
    sub_100123140();
    sub_100014114(v21, v20, v19, v18, v22 == 0);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v38, v15);
    uint64_t v25 = 0;
  }
  uint64_t v26 = v15;
  uint64_t v27 = *(void *)(v0 + 1696);
  uint64_t v28 = *(void *)(v0 + 1688);
  long long v37 = *(_OWORD *)(v0 + 1672);
  uint64_t v29 = *(void *)(v0 + 1568);
  uint64_t v30 = *(void *)(v0 + 1512);
  uint64_t v31 = *(void *)(v0 + 1504);
  uint64_t v32 = *(void *)(v0 + 1448);
  BOOL v33 = *(void *)(v0 + 1664) == 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v29, v25, 1, v26);
  sub_100014154();
  *(_DWORD *)(v0 + 1720) = *(_DWORD *)(v34 + 48);
  *(void *)uint64_t v32 = v43;
  *(void *)(v32 + 8) = v42;
  *(unsigned char *)(v32 + 16) = 0;
  *(_OWORD *)(v32 + 24) = v37;
  *(void *)(v32 + 40) = v28;
  *(void *)(v32 + 48) = v27;
  *(unsigned char *)(v32 + 56) = v33;
  *(void *)(v32 + 64) = v31;
  *(void *)(v32 + 72) = v30;
  *(void *)(v32 + 80) = v41;
  *(void *)(v32 + 88) = v40;
  *(void *)(v32 + 96) = v39;
  *(void *)(v32 + 104) = v44;
  *(unsigned char *)(v32 + 112) = 0;
  uint64_t v35 = type metadata accessor for HeadlineViewModel(0);
  sub_100013B0C(v29, v32 + *(int *)(v35 + 36));
  swift_bridgeObjectRetain();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1352, sub_100012864, v0 + 1456);
}

uint64_t sub_100011F00()
{
  swift_release();
  uint64_t v0 = sub_100123D70();
  uint64_t v2 = v1;
  id v3 = [self currentDevice];
  id v4 = [v3 userInterfaceIdiom];

  if (v4)
  {
    swift_bridgeObjectRelease();
LABEL_3:
    double v5 = sub_100012030;
    goto LABEL_4;
  }
  if (sub_100123D60() == v0 && v6 == v2)
  {
    swift_bridgeObjectRelease_n();
    double v5 = sub_10001244C;
  }
  else
  {
    char v7 = sub_100126530();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0) {
      goto LABEL_3;
    }
    double v5 = sub_10001244C;
  }
LABEL_4:
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100012030()
{
  uint64_t v1 = *(void *)(v0 + 1696);
  uint64_t v2 = *(void *)(v0 + 1688);
  uint64_t v3 = *(void *)(v0 + 1680);
  id v4 = *(void **)(v0 + 1672);
  double v5 = *(void **)(v0 + 1632);
  uint64_t v6 = *(void *)(v0 + 1560);
  char v7 = *(void **)(v0 + 1536);
  char v8 = *(void *)(v0 + 1664) == 0;
  swift_getObjectType();
  id v9 = [v5 identifier];
  uint64_t v10 = sub_100125B10();
  uint64_t v42 = v11;
  uint64_t v43 = v10;

  sub_1000140D4(v4, v3, v2, v1, v8);
  swift_unknownObjectRetain();
  id v12 = sub_100013E34(v5, v7);
  uint64_t v40 = v13;
  id v41 = v12;
  uint64_t v39 = v14;
  sub_100125FB0();
  uint64_t v15 = sub_100123150();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15);
  uint64_t v18 = *(void *)(v0 + 1696);
  uint64_t v19 = *(void *)(v0 + 1688);
  uint64_t v20 = *(void *)(v0 + 1680);
  uint64_t v21 = *(void **)(v0 + 1672);
  uint64_t v22 = *(void **)(v0 + 1664);
  uint64_t v23 = *(void **)(v0 + 1656);
  if (v17 == 1)
  {
    uint64_t v24 = *(void *)(v0 + 1560);
    sub_100014114(*(void **)(v0 + 1672), *(void *)(v0 + 1680), *(void *)(v0 + 1688), *(void *)(v0 + 1696), v22 == 0);

    sub_100013A9C(v24, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v25 = 1;
  }
  else
  {
    uint64_t v38 = *(void *)(v0 + 1560);
    sub_100014350(0, &qword_10015E150, (uint64_t (*)(uint64_t))&type metadata accessor for URLQueryItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    sub_100123040();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100127010;
    sub_100123030();
    sub_100123140();
    sub_100014114(v21, v20, v19, v18, v22 == 0);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v38, v15);
    uint64_t v25 = 0;
  }
  uint64_t v26 = v15;
  uint64_t v27 = *(void *)(v0 + 1696);
  uint64_t v28 = *(void *)(v0 + 1688);
  long long v37 = *(_OWORD *)(v0 + 1672);
  uint64_t v29 = *(void *)(v0 + 1568);
  uint64_t v30 = *(void *)(v0 + 1512);
  uint64_t v31 = *(void *)(v0 + 1504);
  uint64_t v32 = *(void *)(v0 + 1448);
  BOOL v33 = *(void *)(v0 + 1664) == 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v29, v25, 1, v26);
  sub_100014154();
  *(_DWORD *)(v0 + 1720) = *(_DWORD *)(v34 + 48);
  *(void *)uint64_t v32 = v43;
  *(void *)(v32 + 8) = v42;
  *(unsigned char *)(v32 + 16) = 0;
  *(_OWORD *)(v32 + 24) = v37;
  *(void *)(v32 + 40) = v28;
  *(void *)(v32 + 48) = v27;
  *(unsigned char *)(v32 + 56) = v33;
  *(void *)(v32 + 64) = v31;
  *(void *)(v32 + 72) = v30;
  *(void *)(v32 + 80) = v41;
  *(void *)(v32 + 88) = v40;
  *(void *)(v32 + 96) = v39;
  *(void *)(v32 + 104) = 1;
  *(unsigned char *)(v32 + 112) = 0;
  uint64_t v35 = type metadata accessor for HeadlineViewModel(0);
  sub_100013B0C(v29, v32 + *(int *)(v35 + 36));
  swift_bridgeObjectRetain();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1352, sub_100012864, v0 + 1456);
}

uint64_t sub_10001244C()
{
  uint64_t v1 = *(void *)(v0 + 1696);
  uint64_t v2 = *(void *)(v0 + 1688);
  uint64_t v3 = *(void *)(v0 + 1680);
  id v4 = *(void **)(v0 + 1672);
  double v5 = *(void **)(v0 + 1632);
  uint64_t v6 = *(void *)(v0 + 1560);
  char v7 = *(void **)(v0 + 1536);
  char v8 = *(void *)(v0 + 1664) == 0;
  swift_getObjectType();
  id v9 = [v5 identifier];
  uint64_t v10 = sub_100125B10();
  uint64_t v42 = v11;
  uint64_t v43 = v10;

  sub_1000140D4(v4, v3, v2, v1, v8);
  swift_unknownObjectRetain();
  id v12 = sub_100013E34(v5, v7);
  uint64_t v40 = v13;
  id v41 = v12;
  uint64_t v39 = v14;
  sub_100125FB0();
  uint64_t v15 = sub_100123150();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15);
  uint64_t v18 = *(void *)(v0 + 1696);
  uint64_t v19 = *(void *)(v0 + 1688);
  uint64_t v20 = *(void *)(v0 + 1680);
  uint64_t v21 = *(void **)(v0 + 1672);
  uint64_t v22 = *(void **)(v0 + 1664);
  uint64_t v23 = *(void **)(v0 + 1656);
  if (v17 == 1)
  {
    uint64_t v24 = *(void *)(v0 + 1560);
    sub_100014114(*(void **)(v0 + 1672), *(void *)(v0 + 1680), *(void *)(v0 + 1688), *(void *)(v0 + 1696), v22 == 0);

    sub_100013A9C(v24, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v25 = 1;
  }
  else
  {
    uint64_t v38 = *(void *)(v0 + 1560);
    sub_100014350(0, &qword_10015E150, (uint64_t (*)(uint64_t))&type metadata accessor for URLQueryItem, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    sub_100123040();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100127010;
    sub_100123030();
    sub_100123140();
    sub_100014114(v21, v20, v19, v18, v22 == 0);

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v38, v15);
    uint64_t v25 = 0;
  }
  uint64_t v26 = v15;
  uint64_t v27 = *(void *)(v0 + 1696);
  uint64_t v28 = *(void *)(v0 + 1688);
  long long v37 = *(_OWORD *)(v0 + 1672);
  uint64_t v29 = *(void *)(v0 + 1568);
  uint64_t v30 = *(void *)(v0 + 1512);
  uint64_t v31 = *(void *)(v0 + 1504);
  uint64_t v32 = *(void *)(v0 + 1448);
  BOOL v33 = *(void *)(v0 + 1664) == 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v29, v25, 1, v26);
  sub_100014154();
  *(_DWORD *)(v0 + 1720) = *(_DWORD *)(v34 + 48);
  *(void *)uint64_t v32 = v43;
  *(void *)(v32 + 8) = v42;
  *(unsigned char *)(v32 + 16) = 0;
  *(_OWORD *)(v32 + 24) = v37;
  *(void *)(v32 + 40) = v28;
  *(void *)(v32 + 48) = v27;
  *(unsigned char *)(v32 + 56) = v33;
  *(void *)(v32 + 64) = v31;
  *(void *)(v32 + 72) = v30;
  *(void *)(v32 + 80) = v41;
  *(void *)(v32 + 88) = v40;
  *(void *)(v32 + 96) = v39;
  *(void *)(v32 + 104) = 0;
  *(unsigned char *)(v32 + 112) = 0;
  uint64_t v35 = type metadata accessor for HeadlineViewModel(0);
  sub_100013B0C(v29, v32 + *(int *)(v35 + 36));
  swift_bridgeObjectRetain();
  return _swift_asyncLet_finish(v0 + 16, v0 + 1352, sub_100012864, v0 + 1456);
}

uint64_t sub_100012864()
{
  return _swift_task_switch(sub_100012880, 0, 0);
}

uint64_t sub_100012880()
{
  swift_task_dealloc();
  return _swift_asyncLet_finish(v0 + 656, v0 + 1400, sub_100012900, v0 + 1296);
}

uint64_t sub_100012900()
{
  return _swift_task_switch(sub_10001291C, 0, 0);
}

uint64_t sub_10001291C()
{
  uint64_t v1 = *(void *)(v0 + 1608) + *(int *)(v0 + 1720);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v2 = sub_100123850();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100012A2C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100012A4C, 0, 0);
}

void sub_100012A4C()
{
  id v1 = [*(id *)(v0 + 24) thumbnailWidget];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 thumbnailAssetHandle];
    *(void *)(v0 + 32) = v3;

    if (v3)
    {
      id v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 40) = v4;
      *id v4 = v0;
      v4[1] = sub_100012B5C;
      sub_10011D94C();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    **(void **)(v0 + 16) = 0;
    uint64_t v5 = *(void (**)(void))(v0 + 8);
    v5();
  }
}

uint64_t sub_100012B5C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_100014718, 0, 0);
}

uint64_t sub_100012C78(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100012C98, 0, 0);
}

uint64_t sub_100012C98()
{
  id v1 = [*(id *)(v0 + 24) sourceChannel];
  if (v1
    && (id v2 = [v1 nameImageMaskWidgetHQAssetHandle],
        *(void *)(v0 + 32) = v2,
        swift_unknownObjectRelease(),
        v2))
  {
    id v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v3;
    *id v3 = v0;
    v3[1] = sub_100012DA8;
    return sub_10011D94C();
  }
  else
  {
    **(void **)(v0 + 16) = 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_100012DA8(uint64_t a1)
{
  id v2 = *(void **)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_100012EC4, 0, 0);
}

uint64_t sub_100012EC4()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100012EE8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1000131EC();
  char v8 = (uint64_t *)(a2 + *(int *)(v7 + 48));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (uint64_t *)(a2 + *(int *)(v7 + 64));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  void *v14 = v3;
  v14[1] = sub_10001470C;
  return v16(a1, a2, v9, v10, v12, v13);
}

uint64_t sub_100013018()
{
  sub_100009D48(v0 + 16);
  swift_unknownObjectRelease();
  sub_100009D48(v0 + 72);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget24HeadlineViewModelService_logger;
  uint64_t v2 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1000130E0()
{
  return type metadata accessor for HeadlineViewModelService();
}

uint64_t type metadata accessor for HeadlineViewModelService()
{
  uint64_t result = qword_10015E010;
  if (!qword_10015E010) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100013134()
{
  uint64_t result = sub_100124570();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1000131EC()
{
  if (!qword_10015E0D0)
  {
    sub_100123E30();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_10015E0D0);
    }
  }
}

id sub_100013264(void *a1, void *a2, void *a3)
{
  if ([a1 userInterfaceStyle] == (id)2) {
    a3 = a2;
  }
  [a3 red];
  double v6 = v5;
  [a3 green];
  double v8 = v7;
  [a3 blue];
  double v10 = v9;
  [a3 alpha];
  double v12 = v11;
  id v13 = objc_allocWithZone((Class)UIColor);

  return [v13 initWithRed:v6 green:v8 blue:v10 alpha:v12];
}

id sub_100013330(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  double v5 = (void *)v3();
  swift_release();

  return v5;
}

BOOL sub_100013398(uint64_t a1)
{
  return sub_1000133C8(a1, (uint64_t (*)(void))sub_1000143B4);
}

BOOL sub_1000133B0(uint64_t a1)
{
  return sub_1000133C8(a1, (uint64_t (*)(void))sub_1000131EC);
}

BOOL sub_1000133C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3) != 1;
}

uint64_t sub_100013430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000134A0(a1, &qword_10015E1A0, (uint64_t (*)(uint64_t))sub_1000143B4, (uint64_t (*)(void))sub_1000143B4, (uint64_t (*)(void))sub_1000143B4, a2);
}

uint64_t sub_100013468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000134A0(a1, &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC, (uint64_t (*)(void))sub_1000131EC, (uint64_t (*)(void))sub_1000131EC, a2);
}

uint64_t sub_1000134A0@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  sub_100014350(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v17 - v13;
  sub_100014420(a1, (uint64_t)&v17 - v13, a2, a3);
  uint64_t v15 = a4(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
  if (result != 1) {
    return sub_10001427C((uint64_t)v14, a6, a5);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000135B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = *(void *)(v6 + 16);
  char v15 = *(unsigned char *)(v6 + 24);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v16;
  *uint64_t v16 = v7;
  v16[1] = sub_10001470C;
  return sub_10001069C(a1, a2, a3, a4, a5, a6, v14, v15);
}

uint64_t sub_1000136B0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000136E8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10001470C;
  double v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10015E0F0 + dword_10015E0F0);
  return v8(a1, a2, v6);
}

void sub_1000137B0()
{
  if (!qword_10015E100)
  {
    sub_10001385C();
    sub_1000131EC();
    sub_100013A54(&qword_10015E130, (void (*)(uint64_t))sub_10001385C);
    unint64_t v0 = sub_100126260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E100);
    }
  }
}

void sub_10001385C()
{
  if (!qword_10015E108)
  {
    sub_1000138F0();
    sub_100013A54(&qword_10015E128, (void (*)(uint64_t))sub_1000138F0);
    unint64_t v0 = sub_1001262C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E108);
    }
  }
}

void sub_1000138F0()
{
  if (!qword_10015E110)
  {
    sub_100014350(255, &qword_10015E118, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for ArraySlice);
    sub_100014350(255, &qword_10015E0C8, (uint64_t (*)(uint64_t))sub_1000131EC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    sub_1000139CC();
    unint64_t v0 = sub_100126260();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E110);
    }
  }
}

unint64_t sub_1000139CC()
{
  unint64_t result = qword_10015E120;
  if (!qword_10015E120)
  {
    sub_100014350(255, &qword_10015E118, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for ArraySlice);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E120);
  }
  return result;
}

uint64_t sub_100013A54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100013A9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_100014350(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_100013B0C(uint64_t a1, uint64_t a2)
{
  sub_100014350(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100013BA0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  double v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *double v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_10001470C;
  return _swift_task_switch(sub_100012A4C, 0, 0);
}

unint64_t sub_100013C50()
{
  unint64_t result = qword_10015E170;
  if (!qword_10015E170)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_10015E170);
  }
  return result;
}

uint64_t sub_100013C90(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  double v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *double v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_100013D40;
  return _swift_task_switch(sub_100012C98, 0, 0);
}

uint64_t sub_100013D40()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

id sub_100013E34(void *a1, id a2)
{
  if ([a2 containsHeadline:a1]) {
    goto LABEL_9;
  }
  if ([a1 isPressRelease]) {
    goto LABEL_9;
  }
  id v4 = [a1 storyStyle];
  if (!v4) {
    goto LABEL_9;
  }
  double v5 = v4;
  if ([a1 storyType] == (id)1 || objc_msgSend(a1, "storyType") == (id)5 || objc_msgSend(a1, "storyType"))
  {

LABEL_9:
    swift_unknownObjectRelease();

    return 0;
  }
  id result = [v5 label];
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  double v8 = result;
  uint64_t v6 = sub_100125B10();

  id result = [v5 foreground_color];
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v9 = result;
  id result = [v5 dark_style_foreground_color];
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v9;
    id v12 = objc_allocWithZone((Class)UIColor);
    v16[4] = sub_10001425C;
    v16[5] = v11;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_100013330;
    v16[3] = &unk_100151380;
    uint64_t v13 = _Block_copy(v16);
    id v14 = v10;
    id v15 = v9;
    [v12 initWithDynamicProvider:v13];
    _Block_release(v13);
    swift_release();
    sub_1001254E0();

    swift_unknownObjectRelease();
    return (id)v6;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1000140D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    id v6 = a1;
    uint64_t v5 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_100014114(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {

    uint64_t v5 = vars8;
  }
  return swift_bridgeObjectRelease();
}

void sub_100014154()
{
  if (!qword_10015E188)
  {
    sub_1000141C4();
    sub_100123850();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015E188);
    }
  }
}

unint64_t sub_1000141C4()
{
  unint64_t result = qword_10015E190;
  if (!qword_10015E190)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_10015E190);
  }
  return result;
}

uint64_t sub_10001421C()
{
  return swift_deallocObject();
}

id sub_10001425C(void *a1)
{
  return sub_100013264(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100014264(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100014274()
{
  return swift_release();
}

uint64_t sub_10001427C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1000142E4()
{
  if (!qword_10015E198)
  {
    sub_100123E30();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_10015E198);
    }
  }
}

void sub_100014350(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1000143B4()
{
  if (!qword_10015E1A8)
  {
    sub_1001232B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, &qword_10015E1A8);
    }
  }
}

uint64_t sub_100014420(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_100014350(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1000144A4()
{
  uint64_t v1 = sub_100124570();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100014534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100124570();

  return sub_1000100F8(a1, a2);
}

uint64_t sub_1000145B4()
{
  return swift_deallocObject();
}

uint64_t sub_1000145EC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100013D40;
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10015E0F0 + dword_10015E0F0);
  return v8(a1, a2, v6);
}

void sub_1000146B4()
{
  if (!qword_10015E1D0)
  {
    unint64_t v0 = sub_100125D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E1D0);
    }
  }
}

unint64_t sub_100014720()
{
  unint64_t result = qword_10015E208;
  if (!qword_10015E208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E208);
  }
  return result;
}

unint64_t sub_100014778()
{
  unint64_t result = qword_10015E210;
  if (!qword_10015E210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E210);
  }
  return result;
}

uint64_t sub_1000147CC()
{
  type metadata accessor for PrivacyIdentifierManager();
  uint64_t v0 = swift_allocObject();
  sub_100123ED0();
  sub_1000050BC();
  swift_allocObject();
  uint64_t result = sub_100123FD0();
  *(void *)(v0 + 16) = result;
  off_10015E1E0 = (_UNKNOWN *)v0;
  return result;
}

uint64_t BilingualFeedManager.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100014870()
{
  return sub_100123F50();
}

uint64_t sub_10001487C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Configurable.setting<A>(_:defaultValue:)(a1, a2, a5, a6);
}

uint64_t sub_100014888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return Configurable.setting<A>(_:_:)(a1, a2, a3, a6, a7);
}

uint64_t sub_100014894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, a7, a8);
}

uint64_t sub_1000148A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Updatable.save<A>(setting:value:)(a1, a2, a5, a6);
}

uint64_t sub_1000148AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Updatable.reset<A>(setting:)(a1, a4, a5);
}

uint64_t sub_1000148BC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  id v4 = (uint64_t (__cdecl *)())((char *)&dword_10015E510 + dword_10015E510);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  void *v2 = v1;
  v2[1] = sub_100014960;
  return v4();
}

uint64_t sub_100014960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v4;
  uint64_t v9 = *v4;
  swift_task_dealloc();
  if (!v3)
  {
    uint64_t v10 = *(void **)(v8 + 16);
    *uint64_t v10 = a1;
    v10[1] = a2;
    v10[2] = a3;
  }
  uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
  return v11();
}

unint64_t sub_100014A88()
{
  unint64_t result = qword_10015E220;
  if (!qword_10015E220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E220);
  }
  return result;
}

uint64_t sub_100014ADC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000194B8();
  *id v4 = v2;
  v4[1] = sub_100014B8C;
  return _UniqueEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_100014B8C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

unint64_t sub_100014CA4()
{
  unint64_t result = qword_10015E230;
  if (!qword_10015E230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E230);
  }
  return result;
}

unint64_t sub_100014CFC()
{
  unint64_t result = qword_10015E238;
  if (!qword_10015E238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E238);
  }
  return result;
}

unint64_t sub_100014D54()
{
  unint64_t result = qword_10015E240[0];
  if (!qword_10015E240[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10015E240);
  }
  return result;
}

uint64_t sub_100014DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000194B8();
  *uint64_t v5 = v2;
  v5[1] = sub_100014E5C;
  return _UniqueEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100014E5C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_100014F5C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1000194B8();
  *uint64_t v4 = v2;
  v4[1] = sub_10001950C;
  return _UniqueEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100015010()
{
  unint64_t result = qword_10015E258;
  if (!qword_10015E258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E258);
  }
  return result;
}

unint64_t sub_100015068()
{
  unint64_t result = qword_10015E260;
  if (!qword_10015E260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E260);
  }
  return result;
}

unint64_t sub_1000150C0()
{
  unint64_t result = qword_10015E268;
  if (!qword_10015E268)
  {
    sub_100015130();
    sub_100015068();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E268);
  }
  return result;
}

void sub_100015130()
{
  if (!qword_10015E270[0])
  {
    unint64_t v0 = sub_100125D50();
    if (!v1) {
      atomic_store(v0, qword_10015E270);
    }
  }
}

uint64_t sub_100015188(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100014A88();
  *unint64_t v5 = v2;
  v5[1] = sub_10001470C;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10001523C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100013D40;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

unint64_t sub_1000152FC()
{
  unint64_t result = qword_10015E288;
  if (!qword_10015E288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E288);
  }
  return result;
}

uint64_t sub_100015350()
{
  return sub_100015534(&qword_10015E290, (void (*)(uint64_t))sub_100015398);
}

void sub_100015398()
{
  if (!qword_10015E298)
  {
    sub_100015464();
    sub_100014D54();
    sub_100015534(&qword_10015E2B0, (void (*)(uint64_t))sub_100015464);
    sub_10001557C();
    unint64_t v0 = sub_100122F40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E298);
    }
  }
}

void sub_100015464()
{
  if (!qword_10015E2A0)
  {
    sub_100014D54();
    sub_1000154E0();
    unint64_t v0 = sub_100122F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E2A0);
    }
  }
}

unint64_t sub_1000154E0()
{
  unint64_t result = qword_10015E2A8;
  if (!qword_10015E2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E2A8);
  }
  return result;
}

uint64_t sub_100015534(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001557C()
{
  unint64_t result = qword_10015E2B8;
  if (!qword_10015E2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E2B8);
  }
  return result;
}

uint64_t sub_1000155D0()
{
  sub_100019370(0, &qword_10015E2F8, (uint64_t (*)(void))sub_100014778, (uint64_t)&type metadata for ResetPrivacyIdentifierSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _UniqueEntityProvider);
  uint64_t v1 = v0;
  sub_10001927C(v0, qword_100172470);
  sub_100019244(v1, (uint64_t)qword_100172470);
  sub_100014778();
  return sub_100122DD0();
}

uint64_t sub_100015688(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = sub_1001230A0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  sub_1001233E0();
  v1[6] = swift_task_alloc();
  sub_100125AC0();
  v1[7] = swift_task_alloc();
  sub_1001230B0();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_1000157CC, 0, 0);
}

uint64_t sub_1000157CC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void *)v0[2];
  sub_100015398();
  sub_100125AB0();
  sub_100123390();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1001230C0();
  sub_100015534(&qword_10015E4B0, (void (*)(uint64_t))sub_100015464);
  uint64_t v5 = sub_100122F30();
  *uint64_t v4 = 0xD000000000000023;
  v4[1] = 0x8000000100127F90;
  v4[2] = v5;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100015998()
{
  uint64_t v0 = sub_100122EF0();
  sub_10001927C(v0, qword_100172488);
  sub_100019244(v0, (uint64_t)qword_100172488);
  return sub_100122ED0();
}

uint64_t sub_1000159FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  sub_1000193E4(0, &qword_10015E490, (void (*)(uint64_t))&type metadata accessor for DisplayRepresentation.Image);
  __chkstk_darwin(v1 - 8);
  uint64_t v17 = (char *)&v16 - v2;
  uint64_t v16 = sub_1001230A0();
  uint64_t v3 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001233E0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_100125AC0();
  __chkstk_darwin(v7 - 8);
  sub_1000193E4(0, &qword_10015E468, (void (*)(uint64_t))&type metadata accessor for LocalizedStringResource);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = sub_1001230B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  sub_100123090();
  sub_100125AB0();
  sub_100123390();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v16);
  sub_1001230C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  uint64_t v14 = sub_100122D60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v17, 1, 1, v14);
  sub_100123090();
  return sub_100122D70();
}

uint64_t sub_100015DD4(uint64_t a1)
{
  return sub_100015DF8(a1, qword_1001724A0);
}

uint64_t sub_100015DF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1001230B0();
  sub_10001927C(v3, a2);
  sub_100019244(v3, (uint64_t)a2);
  return sub_100123090();
}

uint64_t sub_100015E58()
{
  sub_1000193E4(0, &qword_10015E500, (void (*)(uint64_t))&type metadata accessor for IntentDescription);
  uint64_t v1 = v0;
  sub_10001927C(v0, qword_1001724B8);
  uint64_t v2 = sub_100019244(v1, (uint64_t)qword_1001724B8);
  sub_100122CC0();
  uint64_t v3 = sub_100122CD0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(v2, 0, 1, v3);
}

uint64_t sub_100015F28()
{
  uint64_t result = swift_getKeyPath();
  qword_1001724D0 = result;
  return result;
}

uint64_t sub_100015F50()
{
  return swift_retain();
}

uint64_t sub_100015F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_1000193E4(0, &qword_10015E4D0, (void (*)(uint64_t))&type metadata accessor for _GeneratedContentFallback);
  v3[23] = swift_task_alloc();
  sub_1000193E4(0, &qword_10015E4D8, (void (*)(uint64_t))&type metadata accessor for _GeneratedContentOptions);
  v3[24] = swift_task_alloc();
  sub_1000192F4();
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100122C40();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  sub_100019370(0, &qword_10015E4E8, (uint64_t (*)(void))sub_100015068, (uint64_t)&type metadata for ResetPrivacyIdentifierSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IntentDialog._CapturedContent);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_10001617C, 0, 0);
}

uint64_t sub_10001617C()
{
  sub_100122C70();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_100014D54();
  void *v2 = v0;
  v2[1] = sub_100016260;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_100016974, 0, &type metadata for ResetPrivacyIdentifierSettingEntity, v3);
}

uint64_t sub_100016260()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10001635C, 0, 0);
}

uint64_t sub_10001635C()
{
  sub_100122C70();
  *(void *)(v0 + 88) = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  *(void *)(v0 + 272) = v1;
  *(void *)(v0 + 280) = v2;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  sub_100122C70();
  *(unsigned char *)(v0 + 312) = *(unsigned char *)(v0 + 313);
  if (qword_10015D458 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1001724D0;
  *(void *)(v0 + 288) = qword_1001724D0;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v4;
  uint64_t v5 = sub_100015534(&qword_10015E4B0, (void (*)(uint64_t))sub_100015464);
  *uint64_t v4 = v0;
  v4[1] = sub_1000164C8;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 312, v3, &type metadata for Bool, v5);
}

uint64_t sub_1000164C8()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1000168B0;
  }
  else {
    uint64_t v2 = sub_100016638;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100016638()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100122C70();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100122EC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100122F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_1000152FC();
  sub_100015068();
  sub_100122C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100122C30();
  sub_100122C50();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1000168B0()
{
  (*(void (**)(void, void))(v0[30] + 8))(v0[32], v0[29]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100016978()
{
  sub_100019370(0, &qword_10015E4F0, (uint64_t (*)(void))sub_100015068, (uint64_t)&type metadata for ResetPrivacyIdentifierSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _NLGRepresentationEntity);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v6 - v3;
  if (qword_10015D458 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100122D40();
  swift_release();
  sub_100015068();
  sub_1000177A8(&qword_10015E4F8, &qword_10015E4F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _NLGRepresentationEntity);
  sub_100122D30();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

__n128 sub_100016B24@<Q0>(uint64_t a1@<X8>)
{
  sub_100122C70();
  __n128 result = v4;
  *(void *)a1 = v3;
  *(__n128 *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_100016B68()
{
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_100016BD0(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100122C60();
  return sub_100016C2C;
}

uint64_t sub_100016C30@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100122C70();
  *a1 = v3;
  return result;
}

uint64_t sub_100016C6C()
{
  return sub_100122C80();
}

uint64_t (*sub_100016CA4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100122C60();
  return sub_100016C2C;
}

uint64_t sub_100016D00()
{
  if (qword_10015D458 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100016D60()
{
  unint64_t result = qword_10015E2C0;
  if (!qword_10015E2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E2C0);
  }
  return result;
}

unint64_t sub_100016DB8()
{
  unint64_t result = qword_10015E2C8;
  if (!qword_10015E2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E2C8);
  }
  return result;
}

uint64_t sub_100016E0C()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100016E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100017D68(a1, a2, a3, (void (*)(void))sub_1000152FC);
}

uint64_t sub_100016E58@<X0>(uint64_t a1@<X8>)
{
  return sub_1000176B4(&qword_10015D448, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1001724A0, a1);
}

uint64_t sub_100016EA0@<X0>(uint64_t a1@<X8>)
{
  if (qword_10015D450 != -1) {
    swift_once();
  }
  sub_1000193E4(0, &qword_10015E500, (void (*)(uint64_t))&type metadata accessor for IntentDescription);
  uint64_t v3 = sub_100019244(v2, (uint64_t)qword_1001724B8);

  return sub_100019438(v3, a1);
}

uint64_t sub_100016F34(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100013D40;
  return sub_100015F58(a1, v5, v4);
}

uint64_t sub_100016FE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000188E8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100017008()
{
  return 0xD000000000000034;
}

unint64_t sub_100017028()
{
  unint64_t result = qword_10015E2D8;
  if (!qword_10015E2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E2D8);
  }
  return result;
}

unint64_t sub_100017080()
{
  unint64_t result = qword_10015E2E0;
  if (!qword_10015E2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E2E0);
  }
  return result;
}

unint64_t sub_1000170D8()
{
  unint64_t result = qword_10015E2E8;
  if (!qword_10015E2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E2E8);
  }
  return result;
}

uint64_t sub_10001712C()
{
  return sub_1000174E0(&qword_10015E2F0);
}

void *sub_100017160()
{
  return &protocol witness table for String;
}

uint64_t sub_10001716C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10001718C, 0, 0);
}

uint64_t sub_10001718C()
{
  if (qword_10015D430 != -1) {
    swift_once();
  }
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  swift_retain();
  swift_retain();
  sub_100123FA0();
  swift_release();
  swift_release();
  unsigned char *v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100017268(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 17) = *a2;
  return _swift_task_switch(sub_10001728C, 0, 0);
}

uint64_t sub_10001728C()
{
  if (qword_10015D430 != -1) {
    swift_once();
  }
  *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 17);
  swift_retain();
  swift_retain();
  sub_100123FB0();
  swift_release();
  swift_release();
  id v1 = [self defaultCenter];
  NSString v2 = sub_100125AD0();
  [v1 postNotificationName:v2 object:0 userInfo:0 options:1];

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000173CC@<X0>(uint64_t a1@<X8>)
{
  if (qword_10015D438 != -1) {
    swift_once();
  }
  sub_100019370(0, &qword_10015E2F8, (uint64_t (*)(void))sub_100014778, (uint64_t)&type metadata for ResetPrivacyIdentifierSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _UniqueEntityProvider);
  uint64_t v3 = v2;
  uint64_t v4 = sub_100019244(v2, (uint64_t)qword_100172470);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t sub_1000174AC()
{
  return sub_1000174E0(&qword_10015E300);
}

uint64_t sub_1000174E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100019370(255, &qword_10015E2F8, (uint64_t (*)(void))sub_100014778, (uint64_t)&type metadata for ResetPrivacyIdentifierSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _UniqueEntityProvider);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100017560()
{
  unint64_t result = qword_10015E308;
  if (!qword_10015E308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E308);
  }
  return result;
}

unint64_t sub_1000175B8()
{
  unint64_t result = qword_10015E310;
  if (!qword_10015E310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E310);
  }
  return result;
}

unint64_t sub_100017610()
{
  unint64_t result = qword_10015E318;
  if (!qword_10015E318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E318);
  }
  return result;
}

void *sub_100017664()
{
  return &protocol witness table for String;
}

uint64_t sub_100017670@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001767C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000176B4(&qword_10015D440, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100172488, a1);
}

uint64_t sub_1000176B4@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100019244(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_100017758()
{
  return sub_1000177A8(&qword_10015E320, &qword_10015E328, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for EmptyResolverSpecification);
}

uint64_t sub_1000177A8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100019370(255, a2, (uint64_t (*)(void))sub_100015068, (uint64_t)&type metadata for ResetPrivacyIdentifierSettingEntity, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001780C(uint64_t a1)
{
  unint64_t v2 = sub_100014D54();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10001785C()
{
  unint64_t result = qword_10015E330;
  if (!qword_10015E330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E330);
  }
  return result;
}

uint64_t sub_1000178B4(uint64_t a1)
{
  unint64_t v2 = sub_100017610();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100017900()
{
  uint64_t v0 = qword_10015E1E8;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_10001793C()
{
  unint64_t result = qword_10015E338;
  if (!qword_10015E338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E338);
  }
  return result;
}

uint64_t sub_100017990(uint64_t a1)
{
  unint64_t v2 = sub_100014D54();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD00000000000004CLL, 0x8000000100130C10, a1, v2);
}

uint64_t sub_1000179EC()
{
  sub_1000191F0();
  uint64_t v2 = sub_100122E40();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1000192E0(v3, v0, v2, v1);
}

unint64_t sub_100017A84()
{
  unint64_t result = qword_10015E348;
  if (!qword_10015E348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E348);
  }
  return result;
}

uint64_t sub_100017AD8(uint64_t a1)
{
  return sub_100015DF8(a1, qword_1001724D8);
}

void sub_100017AFC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_100017B4C()
{
  unint64_t result = qword_10015E350;
  if (!qword_10015E350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E350);
  }
  return result;
}

unint64_t sub_100017BA4()
{
  unint64_t result = qword_10015E358;
  if (!qword_10015E358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E358);
  }
  return result;
}

uint64_t sub_100017BF8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100019148();
  unint64_t v5 = sub_1000191F0();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_100017C64()
{
  uint64_t v0 = qword_10015E1F8;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_100017CA4()
{
  unint64_t result = qword_10015E360;
  if (!qword_10015E360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E360);
  }
  return result;
}

unint64_t sub_100017CFC()
{
  unint64_t result = qword_10015E368;
  if (!qword_10015E368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E368);
  }
  return result;
}

uint64_t sub_100017D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100017D68(a1, a2, a3, (void (*)(void))sub_100017B4C);
}

uint64_t sub_100017D68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100017DBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000176B4(&qword_10015D460, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1001724D8, a1);
}

uint64_t sub_100017DF4()
{
  return 0;
}

uint64_t sub_100017DFC()
{
  return 1;
}

uint64_t sub_100017E08(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100019148();
  unint64_t v7 = sub_10001919C();
  unint64_t v8 = sub_1000191F0();
  *unint64_t v5 = v2;
  v5[1] = sub_100017EDC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_100017EDC()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    unint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_100017FE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100018DDC();
  *a1 = result;
  return result;
}

uint64_t sub_10001800C(uint64_t a1)
{
  unint64_t v2 = sub_100017B4C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t type metadata accessor for PrivacyIdentifierManager()
{
  return self;
}

ValueMetadata *type metadata accessor for OpenResetPrivacyIdentifierSettingIntent()
{
  return &type metadata for OpenResetPrivacyIdentifierSettingIntent;
}

uint64_t destroy for ResetPrivacyIdentifierSettingEntity.UpdateIntent_value()
{
  swift_release();

  return swift_release();
}

void *_s12StocksWidget35ResetPrivacyIdentifierSettingEntityV18UpdateIntent_valueVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ResetPrivacyIdentifierSettingEntity.UpdateIntent_value(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ResetPrivacyIdentifierSettingEntity.UpdateIntent_value(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for ResetPrivacyIdentifierSettingEntity.UpdateIntent_value(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResetPrivacyIdentifierSettingEntity.UpdateIntent_value(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResetPrivacyIdentifierSettingEntity.UpdateIntent_value(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResetPrivacyIdentifierSettingEntity.UpdateIntent_value()
{
  return &type metadata for ResetPrivacyIdentifierSettingEntity.UpdateIntent_value;
}

uint64_t destroy for ResetPrivacyIdentifierSettingEntity()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *_s12StocksWidget35ResetPrivacyIdentifierSettingEntityVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ResetPrivacyIdentifierSettingEntity(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ResetPrivacyIdentifierSettingEntity(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ResetPrivacyIdentifierSettingEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResetPrivacyIdentifierSettingEntity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResetPrivacyIdentifierSettingEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResetPrivacyIdentifierSettingEntity()
{
  return &type metadata for ResetPrivacyIdentifierSettingEntity;
}

ValueMetadata *type metadata accessor for ResetPrivacyIdentifierSettingEntityQuery()
{
  return &type metadata for ResetPrivacyIdentifierSettingEntityQuery;
}

uint64_t sub_100018420()
{
  return sub_100015534(&qword_10015E438, (void (*)(uint64_t))sub_100018468);
}

void sub_100018468()
{
  if (!qword_10015E440)
  {
    sub_100122C40();
    sub_100015068();
    sub_1000184FC();
    unint64_t v0 = sub_100122DB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E440);
    }
  }
}

unint64_t sub_1000184FC()
{
  unint64_t result = qword_10015E448;
  if (!qword_10015E448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E448);
  }
  return result;
}

uint64_t sub_100018550()
{
  return sub_100015534(&qword_10015E450, (void (*)(uint64_t))sub_100018468);
}

uint64_t sub_100018598()
{
  return sub_100015534(&qword_10015E458, (void (*)(uint64_t))type metadata accessor for PrivacyIdentifierManager);
}

uint64_t sub_1000185E0()
{
  uint64_t v1 = sub_1001230A0();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  sub_1001233E0();
  v0[5] = swift_task_alloc();
  sub_100125AC0();
  v0[6] = swift_task_alloc();
  sub_1001230B0();
  v0[7] = swift_task_alloc();
  return _swift_task_switch(sub_100018720, 0, 0);
}

uint64_t sub_100018720()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  sub_100015398();
  sub_100125AB0();
  sub_100123390();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for LocalizedStringResource.BundleDescription.main(_:), v2);
  sub_1001230C0();
  sub_100015534(&qword_10015E4B0, (void (*)(uint64_t))sub_100015464);
  uint64_t v4 = sub_100122F30();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t))v0[1];
  return v5(0xD000000000000023, 0x8000000100127F90, v4);
}

uint64_t sub_1000188E8()
{
  sub_1000193E4(0, &qword_10015E4B8, (void (*)(uint64_t))&type metadata accessor for Bool.IntentDisplayName);
  __chkstk_darwin(v0 - 8);
  uint64_t v32 = (char *)&v23 - v1;
  uint64_t v33 = sub_100122E30();
  uint64_t v2 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000193E4(0, &qword_10015E460, (void (*)(uint64_t))&type metadata accessor for IntentDialog);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  sub_1000193E4(0, &qword_10015E468, (void (*)(uint64_t))&type metadata accessor for LocalizedStringResource);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v23 = (char *)&v23 - v12;
  uint64_t v14 = sub_1001230B0();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IntentParameter;
  sub_100019370(0, &qword_10015E470, (uint64_t (*)(void))sub_100015068, (uint64_t)&type metadata for ResetPrivacyIdentifierSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IntentParameter);
  uint64_t v25 = v16;
  sub_100123090();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  uint64_t v17 = sub_100122C40();
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v34 = 0;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v24 = v10;
  v18(v10, 1, 1, v17);
  v18(v8, 1, 1, v17);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v19 = *(void (**)(void))(v2 + 104);
  uint64_t v26 = v2 + 104;
  uint64_t v27 = (void (*)(char *, void, uint64_t))v19;
  v19(v4);
  sub_100014D54();
  uint64_t v20 = v23;
  uint64_t v25 = sub_100122CA0();
  sub_100019370(0, &qword_10015E4C0, (uint64_t (*)(void))sub_1000154E0, (uint64_t)&type metadata for Bool, v31);
  sub_100123090();
  v29(v20, 1, 1, v30);
  LOBYTE(v34) = 2;
  uint64_t v21 = sub_100125D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v32, 1, 1, v21);
  v18(v24, 1, 1, v17);
  v27(v4, v28, v33);
  sub_100122CB0();
  return v25;
}

uint64_t sub_100018DDC()
{
  v17[0] = sub_100122E30();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000193E4(0, &qword_10015E460, (void (*)(uint64_t))&type metadata accessor for IntentDialog);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)v17 - v7;
  sub_1000193E4(0, &qword_10015E468, (void (*)(uint64_t))&type metadata accessor for LocalizedStringResource);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v12 = sub_1001230B0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100019370(0, &qword_10015E470, (uint64_t (*)(void))sub_100015068, (uint64_t)&type metadata for ResetPrivacyIdentifierSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IntentParameter);
  sub_100123090();
  sub_100123090();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  uint64_t v14 = sub_100122C40();
  memset(&v17[1], 0, 24);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v6, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_100014D54();
  return sub_100122CA0();
}

unint64_t sub_100019148()
{
  unint64_t result = qword_10015E478;
  if (!qword_10015E478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E478);
  }
  return result;
}

unint64_t sub_10001919C()
{
  unint64_t result = qword_10015E480;
  if (!qword_10015E480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E480);
  }
  return result;
}

unint64_t sub_1000191F0()
{
  unint64_t result = qword_10015E488;
  if (!qword_10015E488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E488);
  }
  return result;
}

uint64_t sub_100019244(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *sub_10001927C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1000192E0(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

void sub_1000192F4()
{
  if (!qword_10015E4E0)
  {
    sub_1000152FC();
    sub_100015068();
    unint64_t v0 = sub_100122C10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E4E0);
    }
  }
}

void sub_100019370(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1000193D8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

void sub_1000193E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100126010();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100019438(uint64_t a1, uint64_t a2)
{
  sub_1000193E4(0, &qword_10015E500, (void (*)(uint64_t))&type metadata accessor for IntentDescription);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000194B8()
{
  unint64_t result = qword_10015E508;
  if (!qword_10015E508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E508);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for QuoteDetailItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for QuoteDetailItem(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailItem()
{
  return &type metadata for QuoteDetailItem;
}

BOOL sub_100019580(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100019594()
{
  uint64_t v1 = 1701667182;
  if (*v0 != 1) {
    uint64_t v1 = 0x65756C6176;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1000195D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10001A924(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100019600()
{
  return 0;
}

void sub_10001960C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_100019618(uint64_t a1)
{
  unint64_t v2 = sub_10001ACF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100019654(uint64_t a1)
{
  unint64_t v2 = sub_10001ACF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100019690(void *a1)
{
  sub_10001AD4C(0, &qword_10015E530, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v7 = &v9[-v6];
  sub_100009D98(a1, a1[3]);
  sub_10001ACF8();
  sub_100126650();
  v9[15] = 0;
  sub_100126480();
  if (!v1)
  {
    v9[14] = 1;
    sub_100126480();
    v9[13] = 2;
    sub_100126440();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int sub_10001982C()
{
  sub_1001265F0();
  swift_bridgeObjectRetain();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    sub_100126610(1u);
    swift_bridgeObjectRetain();
    sub_100125BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100126610(0);
  }
  return sub_100126630();
}

void sub_100019900()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_100126610(1u);
    swift_bridgeObjectRetain();
    sub_100125BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100126610(0);
  }
}

Swift::Int sub_1000199E4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1001265F0();
  swift_bridgeObjectRetain();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_100126610(1u);
    swift_bridgeObjectRetain();
    sub_100125BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100126610(0);
  }
  return sub_100126630();
}

uint64_t sub_100019AB8(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_10001A868(v7, v8) & 1;
}

unint64_t sub_100019B04()
{
  unint64_t result = qword_10015E518;
  if (!qword_10015E518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E518);
  }
  return result;
}

double sub_100019B58@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10001AA4C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100019B9C(void *a1)
{
  return sub_100019690(a1);
}

uint64_t sub_100019BB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = sub_100125060();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v20 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100124A80();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B5F4();
  uint64_t v8 = v7;
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B8E8();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v10 = sub_100124E70();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  sub_10001B9E4(0, &qword_10015E5E8, (void (*)(uint64_t))sub_10001B688);
  sub_100019F34(v1, (uint64_t *)&v10[*(int *)(v16 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DynamicTypeSize.large(_:), v3);
  uint64_t v17 = sub_10001B99C(&qword_10015E5E0, (void (*)(uint64_t))sub_10001B5F4);
  sub_100125440();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10001BC3C((uint64_t)v10, (uint64_t (*)(void))sub_10001B5F4);
  uint64_t v18 = v20;
  sub_100125040();
  uint64_t v24 = v8;
  uint64_t v25 = v17;
  swift_getOpaqueTypeConformance2();
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_100019F34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v3 = sub_1001233E0();
  __chkstk_darwin(v3 - 8);
  unint64_t v75 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100125AC0();
  __chkstk_darwin(v5 - 8);
  unint64_t v74 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B880();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v78 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v76 = (char *)&v65 - v11;
  __chkstk_darwin(v10);
  uint64_t v77 = (uint64_t)&v65 - v12;
  uint64_t v13 = a1[2];
  unint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  unint64_t v16 = a1[5];
  uint64_t v67 = v15;
  uint64_t v83 = v13;
  unint64_t v84 = v14;
  unint64_t v80 = sub_10001BA50();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_100125350();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_100125250();
  sub_1001251B0();
  sub_1001251F0();
  swift_release();
  uint64_t v22 = sub_1001252E0();
  uint64_t v24 = v23;
  char v26 = v25;
  swift_release();
  sub_10001BAA4(v17, v19, v21);
  swift_bridgeObjectRelease();
  LODWORD(v83) = sub_100124FD0();
  uint64_t v73 = sub_1001252C0();
  uint64_t v71 = v27;
  uint64_t v72 = v28;
  int v70 = v29 & 1;
  sub_10001BAA4(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  BOOL v68 = v16 == 0;
  uint64_t v30 = 9666786;
  if (v16) {
    uint64_t v30 = v67;
  }
  unint64_t v31 = 0xA300000000000000;
  if (v16) {
    unint64_t v31 = v16;
  }
  uint64_t v83 = v30;
  unint64_t v84 = v31;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_100125350();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  sub_100125250();
  sub_1001251B0();
  sub_1001251F0();
  swift_release();
  uint64_t v37 = sub_1001252E0();
  uint64_t v39 = v38;
  char v41 = v40;
  swift_release();
  sub_10001BAA4(v32, v34, v36);
  swift_bridgeObjectRelease();
  LODWORD(v83) = sub_100124FD0();
  uint64_t v42 = sub_1001252C0();
  uint64_t v66 = v42;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v67 = v45;
  char v48 = v47 & 1;
  sub_10001BAA4(v37, v39, v41 & 1);
  swift_bridgeObjectRelease();
  uint64_t v49 = swift_getKeyPath();
  uint64_t v83 = v42;
  unint64_t v84 = v44;
  char v85 = v48;
  uint64_t v86 = v46;
  uint64_t v87 = v49;
  uint64_t v88 = 1;
  char v89 = 0;
  sub_100125AB0();
  sub_100123390();
  uint64_t v81 = sub_100125B70();
  uint64_t v82 = v50;
  uint64_t v51 = sub_100125350();
  uint64_t v53 = v52;
  LOBYTE(v39) = v54 & 1;
  sub_10001B758();
  sub_10001BABC();
  uint64_t v55 = (uint64_t)v76;
  sub_100125450();
  sub_10001BAA4(v51, v53, v39);
  swift_bridgeObjectRelease();
  sub_10001BAA4(v66, v44, v48);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v56 = v77;
  sub_10001BB64(v55, v77);
  uint64_t v57 = v78;
  sub_10001BBC8(v56, v78);
  uint64_t v58 = v79;
  uint64_t v59 = v73;
  uint64_t v60 = v71;
  *uint64_t v79 = v73;
  v58[1] = v60;
  LOBYTE(v44) = v70;
  *((unsigned char *)v58 + 16) = v70;
  uint64_t v61 = KeyPath;
  v58[3] = v72;
  v58[4] = v61;
  v58[5] = 1;
  *((unsigned char *)v58 + 48) = 0;
  v58[7] = 0x4014000000000000;
  *((unsigned char *)v58 + 64) = 0;
  uint64_t v62 = v58;
  sub_10001B6E0();
  sub_10001BBC8(v57, (uint64_t)v62 + *(int *)(v63 + 64));
  sub_10001BC2C(v59, v60, v44);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10001BC3C(v56, (uint64_t (*)(void))sub_10001B880);
  sub_10001BC3C(v57, (uint64_t (*)(void))sub_10001B880);
  sub_10001BAA4(v59, v60, v44);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10001A53C@<X0>(uint64_t a1@<X8>)
{
  return sub_100019BB4(a1);
}

uint64_t sub_10001A578@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v7;
  a2[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_10001A5CC()
{
  return sub_100125430();
}

uint64_t sub_10001A5E8@<X0>(uint64_t a1@<X8>)
{
  v10[1] = a1;
  uint64_t v11 = sub_100125060();
  uint64_t v2 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B080();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  *(void *)uint64_t v7 = sub_100124EF0();
  *((void *)v7 + 1) = 0x4000000000000000;
  v7[16] = 0;
  sub_10001B9E4(0, &qword_10015E580, (void (*)(uint64_t))sub_10001B0E4);
  uint64_t v12 = v8;
  sub_10001B834(0, (unint64_t *)&qword_10015E560, (uint64_t)&type metadata for QuoteDetailItem, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
  sub_10001B194();
  sub_10001B280();
  sub_10001B2D4();
  swift_bridgeObjectRetain();
  sub_100125770();
  sub_100125050();
  sub_10001B99C(&qword_10015E590, (void (*)(uint64_t))sub_10001B080);
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v11);
  return sub_10001BC3C((uint64_t)v7, (uint64_t (*)(void))sub_10001B080);
}

uint64_t sub_10001A868(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_100126530(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_100126530(), uint64_t result = 0, (v8 & 1) != 0))
    {
      uint64_t v9 = a1[5];
      uint64_t v10 = a2[5];
      if (v9)
      {
        if (v10 && (a1[4] == a2[4] && v9 == v10 || (sub_100126530() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v10)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_10001A924(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_10001AA4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10001AD4C(0, &qword_10015E520, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v22 - v8;
  sub_100009D98(a1, a1[3]);
  sub_10001ACF8();
  sub_100126640();
  if (v2) {
    return sub_100009D48((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_1001263B0();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1001263B0();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_100126370();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  sub_100009D48((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  return result;
}

unint64_t sub_10001ACF8()
{
  unint64_t result = qword_10015E528;
  if (!qword_10015E528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E528);
  }
  return result;
}

void sub_10001AD4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_10001ACF8();
    unint64_t v7 = a3(a1, &type metadata for QuoteDetailItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for QuoteDetailItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for QuoteDetailItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001AF0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_10001AF34(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailItem.CodingKeys()
{
  return &type metadata for QuoteDetailItem.CodingKeys;
}

unint64_t sub_10001AF50()
{
  unint64_t result = qword_10015E538;
  if (!qword_10015E538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E538);
  }
  return result;
}

unint64_t sub_10001AFA8()
{
  unint64_t result = qword_10015E540;
  if (!qword_10015E540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E540);
  }
  return result;
}

unint64_t sub_10001B000()
{
  unint64_t result = qword_10015E548;
  if (!qword_10015E548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E548);
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailsView()
{
  return &type metadata for QuoteDetailsView;
}

uint64_t sub_10001B064()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10001B080()
{
  if (!qword_10015E550)
  {
    sub_10001B0E4();
    sub_10001B210();
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E550);
    }
  }
}

void sub_10001B0E4()
{
  if (!qword_10015E558)
  {
    sub_10001B834(255, (unint64_t *)&qword_10015E560, (uint64_t)&type metadata for QuoteDetailItem, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    sub_10001B194();
    unint64_t v0 = sub_100125780();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E558);
    }
  }
}

unint64_t sub_10001B194()
{
  unint64_t result = qword_10015E568;
  if (!qword_10015E568)
  {
    sub_10001B834(255, (unint64_t *)&qword_10015E560, (uint64_t)&type metadata for QuoteDetailItem, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E568);
  }
  return result;
}

unint64_t sub_10001B210()
{
  unint64_t result = qword_10015E570;
  if (!qword_10015E570)
  {
    sub_10001B0E4();
    sub_10001B280();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E570);
  }
  return result;
}

unint64_t sub_10001B280()
{
  unint64_t result = qword_10015E578;
  if (!qword_10015E578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E578);
  }
  return result;
}

unint64_t sub_10001B2D4()
{
  unint64_t result = qword_10015E588;
  if (!qword_10015E588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E588);
  }
  return result;
}

uint64_t _s12StocksWidget15QuoteDetailItemVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s12StocksWidget15QuoteDetailItemVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s12StocksWidget15QuoteDetailItemVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s12StocksWidget15QuoteDetailItemVwta_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12StocksWidget15QuoteDetailItemVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10001B4F4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailItemView()
{
  return &type metadata for QuoteDetailItemView;
}

uint64_t sub_10001B550()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001B5D8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10001B5F4()
{
  if (!qword_10015E598)
  {
    sub_10001B688();
    sub_10001B99C(&qword_10015E5D0, (void (*)(uint64_t))sub_10001B688);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E598);
    }
  }
}

void sub_10001B688()
{
  if (!qword_10015E5A0)
  {
    sub_10001B6E0();
    unint64_t v0 = sub_100125820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E5A0);
    }
  }
}

void sub_10001B6E0()
{
  if (!qword_10015E5A8)
  {
    sub_10001B758();
    sub_10001B880();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_10015E5A8);
    }
  }
}

void sub_10001B758()
{
  if (!qword_10015E5B0)
  {
    sub_10001B7B8();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E5B0);
    }
  }
}

void sub_10001B7B8()
{
  if (!qword_10015E5B8)
  {
    sub_10001B834(255, &qword_10015E5C0, (uint64_t)&type metadata for Int, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    unint64_t v0 = sub_1001250A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E5B8);
    }
  }
}

void sub_10001B834(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_10001B880()
{
  if (!qword_10015E5C8)
  {
    sub_10001B758();
    sub_1001250B0();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E5C8);
    }
  }
}

void sub_10001B8E8()
{
  if (!qword_10015E5D8)
  {
    sub_10001B5F4();
    sub_10001B99C(&qword_10015E5E0, (void (*)(uint64_t))sub_10001B5F4);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_10015E5D8);
    }
  }
}

uint64_t sub_10001B99C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10001B9E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001249F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_10001BA50()
{
  unint64_t result = qword_10015E5F0;
  if (!qword_10015E5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E5F0);
  }
  return result;
}

uint64_t sub_10001BAA4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_10001BABC()
{
  unint64_t result = qword_10015E5F8;
  if (!qword_10015E5F8)
  {
    sub_10001B758();
    sub_10001B99C(&qword_10015E600, (void (*)(uint64_t))sub_10001B7B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E5F8);
  }
  return result;
}

uint64_t sub_10001BB64(uint64_t a1, uint64_t a2)
{
  sub_10001B880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001BBC8(uint64_t a1, uint64_t a2)
{
  sub_10001B880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001BC2C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10001BC3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10001BC9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001BD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124570();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10001BDC8(uint64_t a1)
{
  uint64_t v2 = sub_100124570();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10001BE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001BE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001BEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001BF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10001BFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001BFD0);
}

uint64_t sub_10001BFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124570();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10001C03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001C050);
}

uint64_t sub_10001C050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124570();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DetailTimelineProvider(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015E660);
}

uint64_t sub_10001C0E0()
{
  uint64_t result = sub_100124570();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10001C170()
{
  return sub_10001C1EC(&qword_10015E698, (void (*)(uint64_t))type metadata accessor for DetailTimelineEntry);
}

uint64_t sub_10001C1A4()
{
  return sub_10001C1EC(qword_10015E6A0, (void (*)(uint64_t))&type metadata accessor for SymbolWidgetConfigurationIntent);
}

uint64_t sub_10001C1EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10001C234(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    char v29 = _swiftEmptyArrayStorage;
    sub_10009BB5C(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    int v8 = (char *)(a3 + 32);
    while (1)
    {
      char v9 = *v8++;
      char v23 = v9;
      a1(&v24, &v23);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v11 = v24;
      uint64_t v10 = v25;
      uint64_t v13 = v26;
      uint64_t v12 = v27;
      long long v14 = v28;
      char v29 = v6;
      unint64_t v16 = v6[2];
      unint64_t v15 = v6[3];
      if (v16 >= v15 >> 1)
      {
        long long v21 = v28;
        uint64_t v20 = v25;
        uint64_t v18 = v27;
        sub_10009BB5C(v15 > 1, v16 + 1, 1);
        uint64_t v12 = v18;
        uint64_t v10 = v20;
        long long v14 = v21;
        uint64_t v6 = v29;
      }
      _OWORD v6[2] = v16 + 1;
      uint64_t v17 = &v6[6 * v16];
      void v17[4] = v11;
      v17[5] = v10;
      v17[6] = v13;
      v17[7] = v12;
      *((_OWORD *)v17 + 4) = v14;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

void *sub_10001C36C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for WidgetStock();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  char v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    long long v21 = _swiftEmptyArrayStorage;
    sub_10009BA7C(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = *(void *)(sub_100123D40() - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      long long v21 = v11;
      unint64_t v15 = v11[2];
      unint64_t v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_10009BA7C(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      v11[2] = v15 + 1;
      sub_100029D70((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, (uint64_t (*)(void))type metadata accessor for WidgetStock);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

void *sub_10001C568(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    sub_100126200();
    uint64_t v9 = *(void *)(type metadata accessor for PreparedSparkline.Entry(0) - 8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    while (1)
    {
      a1(&v12, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1001261D0();
      sub_100126210();
      sub_100126220();
      sub_1001261E0();
      v10 += v11;
      if (!--v6) {
        return v13;
      }
    }
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_10001C6B0(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      sub_100123D40();
      return a2;
    }
  }
  __break(1u);
  return result;
}

int64_t sub_10001C744(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

void sub_10001C788(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_100124A20();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10001C1EC(qword_10015E908, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
    sub_100125E50();
    sub_100125EA0();
    sub_100125E80();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v1, v4);
    uint64_t v8 = (void (**)(char *, uint64_t))(v5 + 8);
    if (v12)
    {
      sub_100125EA0();
      uint64_t v9 = *v8;
      (*v8)(v7, v4);
    }
    else
    {
      uint64_t v10 = v11;
      uint64_t v9 = *v8;
      (*v8)(v7, v4);
      uint64_t v14 = v10;
    }
    sub_100125E50();
    if (v14 >= v13)
    {
      uint64_t v11 = v13;
      uint64_t v12 = v14;
      sub_100125EF0();
      v9(v2, v4);
      return;
    }
  }
  __break(1u);
}

void sub_10001C994(uint64_t a1)
{
}

void sub_10001C9D0(uint64_t a1)
{
}

void sub_10001CA0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), unint64_t *a5)
{
  uint64_t v10 = v5;
  sub_10002A270(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)v20 - v15;
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_100029BB0(a5, a2, a3, a4);
    sub_100125E50();
    sub_100125EA0();
    sub_100125E80();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v5, v13);
    uint64_t v17 = (void (**)(char *, uint64_t))(v14 + 8);
    if (v23)
    {
      sub_100125EA0();
      uint64_t v18 = *v17;
      (*v17)(v16, v13);
    }
    else
    {
      uint64_t v19 = v22;
      uint64_t v18 = *v17;
      (*v17)(v16, v13);
      uint64_t v21 = v19;
    }
    sub_100125E50();
    if (v21 >= v22)
    {
      v20[1] = v22;
      v20[2] = v21;
      sub_100125EF0();
      v18(v10, v13);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_10001CC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_100029204(0);
  v4[6] = swift_task_alloc();
  uint64_t v5 = sub_100122D20();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_1001232B0();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v7 = sub_1001238E0();
  v4[13] = v7;
  v4[14] = *(void *)(v7 - 8);
  v4[15] = swift_task_alloc();
  sub_100029238(0);
  v4[16] = swift_task_alloc();
  return _swift_task_switch(sub_10001CDF8, 0, 0);
}

uint64_t sub_10001CDF8()
{
  uint64_t v1 = v0[8].i64[0];
  uint64_t v2 = v0[6].i64[1];
  uint64_t v3 = v0[7].i64[0];
  sub_100123B60();
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = v0[8].i64[0];
  if (v4)
  {
    sub_100029E40(v0[8].i64[0], (uint64_t (*)(void))sub_100029238);
    uint64_t v6 = (void *)0xE300000000000000;
    uint64_t v7 = 7104878;
  }
  else
  {
    uint64_t v9 = v0[7].i64[0];
    uint64_t v8 = v0[7].i64[1];
    uint64_t v10 = v0[6].i64[1];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v0[8].i64[0], v10);
    sub_100029E40(v5, (uint64_t (*)(void))sub_100029238);
    uint64_t v7 = sub_1001238D0();
    uint64_t v6 = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v12 = v0[5].i64[1];
  uint64_t v27 = v0[5].i64[0];
  uint64_t v13 = v0[4].i64[0];
  uint64_t v14 = v0[4].i64[1];
  uint64_t v15 = v0[3].i64[0];
  uint64_t v16 = v0[3].i64[1];
  v30._countAndFlagsBits = v7;
  v30._object = v6;
  sub_100125BB0(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 45;
  v31._object = (void *)0xE100000000000000;
  sub_100125BB0(v31);
  sub_100123B70();
  sub_10001C1EC(&qword_10015E750, (void (*)(uint64_t))&type metadata accessor for SymbolWidgetConfigurationIntent);
  sub_100122BA0();
  sub_100122D10();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v15, 1, v27) == 1)
  {
    uint64_t v17 = v0[3].i64[0];
    sub_100123270();
    sub_100029E40(v17, (uint64_t (*)(void))sub_100029204);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[5].i64[1] + 32))(v0[6].i64[0], v0[3].i64[0], v0[5].i64[0]);
  }
  uint64_t v19 = v0[5].i64[1];
  uint64_t v18 = v0[6].i64[0];
  uint64_t v20 = v0[5].i64[0];
  uint64_t v21 = v0[1].i64[1];
  sub_10001C1EC(&qword_10015E758, (void (*)(uint64_t))&type metadata accessor for Date);
  int8x16_t v28 = v0[2];
  v32._countAndFlagsBits = sub_1001264F0();
  sub_100125BB0(v32);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  v0[8].i64[1] = 0xE700000000000000;
  uint64_t v22 = (int8x16_t *)swift_task_alloc();
  v0[9].i64[0] = (uint64_t)v22;
  v22[1].i64[0] = 0x2D6C6F626D7973;
  v22[1].i64[1] = 0xE700000000000000;
  v22[2] = vextq_s8(v28, v28, 8uLL);
  v22[3].i64[0] = v21;
  uint64_t v23 = (void *)swift_task_alloc();
  v0[9].i64[1] = (uint64_t)v23;
  uint64_t v24 = type metadata accessor for DetailTimelineEntry();
  *uint64_t v23 = v0;
  v23[1] = sub_10001D1A0;
  uint64_t v25 = v0[1].i64[0];
  return withOSActivity<A>(_:operation:)(v25, "Symbol Widget Snapshot", 22, 2, &unk_10015E768, v22, v24);
}

uint64_t sub_10001D1A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10001D370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  return _swift_task_switch(sub_10001D398, 0, 0);
}

uint64_t sub_10001D398()
{
  if (qword_10015D4C8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  *(void *)(v0 + 16) = *(void *)(v0 + 40);
  *(void *)(v0 + 24) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v3 + 32) = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  type metadata accessor for DetailTimelineEntry();
  *uint64_t v4 = v0;
  v4[1] = sub_10001D508;
  uint64_t v5 = *(void *)(v0 + 32);
  return TaskLocal.withValue<A>(_:operation:isolation:file:line:)(v5, v0 + 16, &unk_10015E778, v3, 0, 0, 0xD000000000000029, 0x8000000100130ED0);
}

uint64_t sub_10001D508()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10001D640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = type metadata accessor for DetailTimelineProvider.Configuration(0);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  uint64_t v5 = sub_1001258F0();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v6 = sub_1001259A0();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  uint64_t v7 = sub_100124570();
  v4[21] = v7;
  v4[22] = *(void *)(v7 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  return _swift_task_switch(sub_10001D828, 0, 0);
}

uint64_t sub_10001D828()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 208) = v5;
  *(void *)(v0 + 216) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  uint64_t v6 = sub_100124550();
  os_log_type_t v7 = sub_100125F60();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v47 = *(void *)(v0 + 168);
    uint64_t v49 = *(void *)(v0 + 200);
    sub_100126690();
    *(void *)(v0 + 48) = sub_1000AB124(*(void *)(v0 + 16), *(void *)(v0 + 24), &v51);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Starting snapshot fetch, id=%s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v10(v49, v47);
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 200);
    uint64_t v13 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 176);

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  *(void *)(v0 + 224) = v11;
  uint64_t v15 = *(void *)(v0 + 160);
  uint64_t v17 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 152);
  uint64_t v18 = *(void *)(v0 + 136);
  uint64_t v19 = *(void *)(v0 + 72);
  v5(*(void *)(v0 + 192), *(void *)(v0 + 64), *(void *)(v0 + 168));
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v20(v15, v19, v18);
  v20(v16, v19, v18);
  uint64_t v21 = sub_100124550();
  os_log_type_t v22 = sub_100125F60();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = *(void *)(v0 + 168);
  uint64_t v26 = *(void *)(v0 + 160);
  uint64_t v28 = *(void *)(v0 + 136);
  uint64_t v27 = *(void *)(v0 + 144);
  if (v23)
  {
    uint64_t v43 = *(void *)(v0 + 152);
    log = v21;
    uint64_t v48 = *(void *)(v0 + 192);
    uint64_t v50 = v11;
    uint64_t v30 = *(void *)(v0 + 120);
    uint64_t v29 = *(void *)(v0 + 128);
    uint64_t v31 = *(void *)(v0 + 112);
    uint64_t v32 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315394;
    os_log_type_t type = v22;
    sub_100125980();
    sub_10001C1EC(&qword_10015E790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v33 = sub_1001264F0();
    uint64_t v45 = v25;
    unint64_t v35 = v34;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    *(void *)(v0 + 40) = sub_1000AB124(v33, v35, &v51);
    sub_100126030();
    swift_bridgeObjectRelease();
    char v36 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v36(v26, v28);
    *(_WORD *)(v32 + 12) = 1024;
    int v37 = sub_100125990() & 1;
    v36(v43, v28);
    *(_DWORD *)(v0 + 248) = v37;
    sub_100126030();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Snapshot context. family: %s, isPreview: %{BOOL}d", (uint8_t *)v32, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v50(v48, v45);
  }
  else
  {
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v38(*(void *)(v0 + 152), *(void *)(v0 + 136));
    v38(v26, v28);

    v11(v24, v25);
  }
  uint64_t v39 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_10001DD48;
  uint64_t v40 = *(void *)(v0 + 104);
  uint64_t v41 = *(void *)(v0 + 80);
  return sub_10001E2A8(v40, v41);
}

uint64_t sub_10001DD48()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10001DE44, 0, 0);
}

uint64_t sub_10001DE44()
{
  uint64_t v21 = v0;
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  (*(void (**)(void, void, void))(v0 + 208))(*(void *)(v0 + 184), *(void *)(v0 + 64), *(void *)(v0 + 168));
  sub_100029C14(v1, v2, type metadata accessor for DetailTimelineProvider.Configuration);
  uint64_t v3 = sub_100124550();
  os_log_type_t v4 = sub_100125F60();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v18 = *(void *)(v0 + 184);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
    uint64_t v17 = *(void *)(v0 + 168);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    uint64_t v7 = sub_100123A60();
    *(void *)(v0 + 32) = sub_1000AB124(v7, v8, &v20);
    sub_100126030();
    swift_bridgeObjectRelease();
    sub_100029E40(v5, type metadata accessor for DetailTimelineProvider.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Resolved configuration. newsDisplayConfiguration: %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v19(v18, v17);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 168);
    sub_100029E40(*(void *)(v0 + 96), type metadata accessor for DetailTimelineProvider.Configuration);

    v9(v10, v11);
  }
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10001E0C8;
  uint64_t v13 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 72);
  uint64_t v15 = *(void *)(v0 + 56);
  return sub_10001F324(v15, v13, v14);
}

uint64_t sub_10001E0C8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10001E1C4, 0, 0);
}

uint64_t sub_10001E1C4()
{
  sub_100029E40(*(void *)(v0 + 104), type metadata accessor for DetailTimelineProvider.Configuration);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001E2A8(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = sub_100123A70();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_100124570();
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  sub_100029238(0);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  uint64_t v6 = sub_1001238E0();
  v3[20] = v6;
  v3[21] = *(void *)(v6 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v7 = sub_100123870();
  v3[24] = v7;
  v3[25] = *(void *)(v7 - 8);
  v3[26] = swift_task_alloc();
  return _swift_task_switch(sub_10001E4DC, 0, 0);
}

uint64_t sub_10001E4DC()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  sub_1001238C0();
  sub_100123B60();
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[27] = v4;
  v0[28] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    uint64_t v6 = v0[15];
    uint64_t v5 = v0[16];
    uint64_t v7 = v0[14];
    uint64_t v8 = v0[10];
    sub_100029E40(v0[19], (uint64_t (*)(void))sub_100029238);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
    uint64_t v9 = sub_100124550();
    os_log_type_t v10 = sub_100125F40();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      if (qword_10015D4C8 != -1) {
        swift_once();
      }
      uint64_t v12 = v0[15];
      uint64_t v30 = v0[14];
      uint64_t v31 = v0[16];
      sub_100126690();
      v0[6] = sub_1000AB124(v0[2], v0[3], &v32);
      sub_100126030();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Malformed widget configuration, id=%s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v31, v30);
    }
    else
    {
      uint64_t v22 = v0[15];
      uint64_t v21 = v0[16];
      uint64_t v23 = v0[14];

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    uint64_t v25 = v0[11];
    uint64_t v24 = v0[12];
    uint64_t v26 = (char *)v0[8];
    (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
    uint64_t v27 = type metadata accessor for DetailTimelineProvider.Configuration(0);
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(&v26[*(int *)(v27 + 20)], enum case for NewsDisplayConfiguration.afterHours(_:), v25);
    *(void *)uint64_t v26 = 1280328001;
    *((void *)v26 + 1) = 0xE400000000000000;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
  else
  {
    uint64_t v13 = v0[23];
    uint64_t v14 = v0[20];
    uint64_t v15 = v0[21];
    uint64_t v16 = v0[19];
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
    v0[29] = v17;
    v0[30] = (v15 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v17(v13, v16, v14);
    sub_100029CC4();
    uint64_t v18 = swift_allocObject();
    v0[31] = v18;
    *(_OWORD *)(v18 + 16) = xmmword_100127010;
    *(void *)(v18 + 32) = sub_1001238B0();
    *(void *)(v18 + 40) = v19;
    uint64_t v20 = (void *)swift_task_alloc();
    v0[32] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_10001E8E4;
    return SymbolWidgetQuery.entities(for:)(v18);
  }
}

uint64_t sub_10001E8E4(uint64_t a1)
{
  *(void *)(*(void *)v2 + 264) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v3 = sub_10001F00C;
  }
  else
  {
    uint64_t v3 = sub_10001EA20;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10001EA20()
{
  uint64_t v57 = v0;
  uint64_t v1 = *(void *)(v0 + 264);
  if (*(void *)(v1 + 16))
  {
    (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 168) + 16))(*(void *)(v0 + 144), v1+ ((*(unsigned __int8 *)(*(void *)(v0 + 168) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 168) + 80)), *(void *)(v0 + 160));
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = 1;
  }
  uint64_t v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168) + 56))(v5, v2, 1, v4);
  swift_bridgeObjectRelease();
  if (v3(v5, 1, v4) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 184), *(void *)(v0 + 160));
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 80);
    sub_100029E40(*(void *)(v0 + 144), (uint64_t (*)(void))sub_100029238);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    os_log_type_t v10 = sub_100124550();
    os_log_type_t v11 = sub_100125F40();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      if (qword_10015D4C8 != -1) {
        swift_once();
      }
      uint64_t v13 = *(void *)(v0 + 120);
      uint64_t v49 = *(void *)(v0 + 112);
      uint64_t v51 = *(void *)(v0 + 128);
      sub_100126690();
      *(void *)(v0 + 48) = sub_1000AB124(*(void *)(v0 + 16), *(void *)(v0 + 24), &v56);
      sub_100126030();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Malformed widget configuration, id=%s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v51, v49);
    }
    else
    {
      uint64_t v23 = *(void *)(v0 + 120);
      uint64_t v22 = *(void *)(v0 + 128);
      uint64_t v24 = *(void *)(v0 + 112);

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    uint64_t v26 = *(void *)(v0 + 88);
    uint64_t v25 = *(void *)(v0 + 96);
    uint64_t v27 = *(char **)(v0 + 64);
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    uint64_t v28 = type metadata accessor for DetailTimelineProvider.Configuration(0);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(&v27[*(int *)(v28 + 20)], enum case for NewsDisplayConfiguration.afterHours(_:), v26);
    *(void *)uint64_t v27 = 1280328001;
    *((void *)v27 + 1) = 0xE400000000000000;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v17 = *(void *)(v0 + 80);
    (*(void (**)(void, void, void))(v0 + 232))(*(void *)(v0 + 176), *(void *)(v0 + 144), *(void *)(v0 + 160));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v17, v15);
    uint64_t v18 = sub_100124550();
    os_log_type_t v19 = sub_100125F60();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      if (qword_10015D4C8 != -1) {
        swift_once();
      }
      uint64_t v21 = *(void *)(v0 + 120);
      uint64_t v52 = *(void *)(v0 + 112);
      uint64_t v54 = *(void *)(v0 + 136);
      sub_100126690();
      *(void *)(v0 + 56) = sub_1000AB124(*(void *)(v0 + 32), *(void *)(v0 + 40), &v56);
      sub_100126030();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Successfully loaded widget entity, id=%s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v54, v52);
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 136);
      uint64_t v30 = *(void *)(v0 + 112);
      uint64_t v31 = *(void *)(v0 + 120);

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    }
    uint64_t v32 = *(void *)(v0 + 200);
    uint64_t v50 = *(void *)(v0 + 192);
    uint64_t v53 = *(void *)(v0 + 208);
    uint64_t v33 = *(void *)(v0 + 176);
    uint64_t v48 = *(void *)(v0 + 184);
    uint64_t v35 = *(void *)(v0 + 160);
    uint64_t v34 = *(void *)(v0 + 168);
    uint64_t v36 = *(void *)(v0 + 96);
    uint64_t v37 = *(void *)(v0 + 104);
    uint64_t v38 = *(void *)(v0 + 80);
    uint64_t v55 = *(void *)(v0 + 88);
    uint64_t v39 = *(uint64_t **)(v0 + 64);
    uint64_t v40 = sub_1001238D0();
    uint64_t v46 = v41;
    uint64_t v47 = v40;
    sub_100027EC4(v38, v37);
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v42(v33, v35);
    v42(v48, v35);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v53, v50);
    *uint64_t v39 = v47;
    v39[1] = v46;
    uint64_t v43 = type metadata accessor for DetailTimelineProvider.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))((char *)v39 + *(int *)(v43 + 20), v37, v55);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_10001F00C()
{
  uint64_t v21 = v0;
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[21] + 56))(v0[18], 1, 1, v0[20]);
  (*(void (**)(void, void))(v0[21] + 8))(v0[23], v0[20]);
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[10];
  sub_100029E40(v0[18], (uint64_t (*)(void))sub_100029238);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_100124550();
  os_log_type_t v6 = sub_100125F40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[15];
    uint64_t v18 = v0[14];
    uint64_t v19 = v0[16];
    sub_100126690();
    v0[6] = sub_1000AB124(v0[2], v0[3], &v20);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Malformed widget configuration, id=%s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v19, v18);
  }
  else
  {
    uint64_t v10 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v11 = v0[14];

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  uint64_t v13 = v0[11];
  uint64_t v12 = v0[12];
  uint64_t v14 = (char *)v0[8];
  (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
  uint64_t v15 = type metadata accessor for DetailTimelineProvider.Configuration(0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(&v14[*(int *)(v15 + 20)], enum case for NewsDisplayConfiguration.afterHours(_:), v13);
  *(void *)uint64_t v14 = 1280328001;
  *((void *)v14 + 1) = 0xE400000000000000;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_10001F324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[448] = v3;
  v4[447] = a3;
  v4[446] = a2;
  v4[445] = a1;
  uint64_t v5 = sub_1001258F0();
  v4[449] = v5;
  v4[450] = *(void *)(v5 - 8);
  v4[451] = swift_task_alloc();
  v4[452] = swift_task_alloc();
  v4[453] = swift_task_alloc();
  sub_100029068(0);
  v4[454] = swift_task_alloc();
  v4[455] = swift_task_alloc();
  type metadata accessor for DetailContentViewModel(0);
  v4[456] = swift_task_alloc();
  v4[457] = swift_task_alloc();
  type metadata accessor for HeadlineViewModel(0);
  v4[458] = swift_task_alloc();
  sub_10002A270(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  v4[459] = v6;
  v4[460] = *(void *)(v6 - 8);
  v4[461] = swift_task_alloc();
  v4[462] = swift_task_alloc();
  sub_100029100();
  v4[463] = swift_task_alloc();
  v4[464] = swift_task_alloc();
  v4[465] = swift_task_alloc();
  uint64_t v7 = sub_1001232B0();
  v4[466] = v7;
  v4[467] = *(void *)(v7 - 8);
  v4[468] = swift_task_alloc();
  uint64_t v8 = sub_100124570();
  v4[469] = v8;
  v4[470] = *(void *)(v8 - 8);
  v4[471] = swift_task_alloc();
  v4[472] = swift_task_alloc();
  v4[473] = swift_task_alloc();
  v4[474] = swift_task_alloc();
  v4[475] = swift_task_alloc();
  v4[476] = swift_task_alloc();
  v4[477] = swift_task_alloc();
  v4[478] = swift_task_alloc();
  v4[479] = type metadata accessor for WidgetStock();
  v4[480] = swift_task_alloc();
  v4[481] = swift_task_alloc();
  v4[482] = swift_task_alloc();
  v4[483] = swift_task_alloc();
  uint64_t v9 = sub_1001259A0();
  v4[484] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[485] = v10;
  v4[486] = *(void *)(v10 + 64);
  v4[487] = swift_task_alloc();
  uint64_t v11 = *(void *)(type metadata accessor for DetailTimelineProvider(0) - 8);
  v4[488] = v11;
  v4[489] = *(void *)(v11 + 64);
  v4[490] = swift_task_alloc();
  sub_100029404();
  v4[491] = v12;
  v4[492] = swift_task_alloc();
  uint64_t v13 = *(void *)(type metadata accessor for DetailTimelineProvider.Configuration(0) - 8);
  v4[493] = v13;
  v4[494] = *(void *)(v13 + 64);
  v4[495] = swift_task_alloc();
  v4[496] = swift_task_alloc();
  uint64_t v14 = sub_1001235E0();
  v4[497] = v14;
  v4[498] = *(void *)(v14 - 8);
  v4[499] = swift_task_alloc();
  v4[500] = swift_task_alloc();
  v4[501] = swift_task_alloc();
  uint64_t v15 = sub_1001238A0();
  v4[502] = v15;
  v4[503] = *(void *)(v15 - 8);
  v4[504] = swift_task_alloc();
  v4[505] = swift_task_alloc();
  v4[506] = swift_task_alloc();
  v4[507] = swift_task_alloc();
  sub_100125DC0();
  v4[508] = sub_100125DB0();
  uint64_t v17 = sub_100125D80();
  v4[509] = v17;
  v4[510] = v16;
  return _swift_task_switch(sub_10001F9A8, v17, v16);
}

uint64_t sub_10001F9A8()
{
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, v0 + 3096);
  sub_100009D98((void *)(v0 + 3096), *(void *)(v0 + 3120));
  sub_1000055F8(0, (unint64_t *)&unk_10015FDD0);
  uint64_t v1 = sub_100124100();
  if (!*(void *)(v0 + 3000))
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_100029474((long long *)(v0 + 2976), v0 + 3176);
  sub_100009D48(v0 + 3096);
  sub_100029758((uint64_t)&unk_100172748, v0 + 2056);
  sub_100009D98((void *)(v0 + 2056), *(void *)(v0 + 2080));
  sub_1000055F8(0, &qword_10015FEF0);
  uint64_t v1 = sub_100124100();
  if (!*(void *)(v0 + 2160))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_100029474((long long *)(v0 + 2136), v0 + 1976);
  sub_100009D48(v0 + 2056);
  sub_100029758((uint64_t)&unk_100172748, v0 + 2296);
  sub_100009D98((void *)(v0 + 2296), *(void *)(v0 + 2320));
  sub_1000055F8(0, &qword_10015E7A0);
  uint64_t v1 = sub_100124100();
  if (!*(void *)(v0 + 2400))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_100029474((long long *)(v0 + 2376), v0 + 2216);
  sub_100009D48(v0 + 2296);
  sub_100029758((uint64_t)&unk_100172748, v0 + 2536);
  sub_100009D98((void *)(v0 + 2536), *(void *)(v0 + 2560));
  sub_1000055F8(0, &qword_10015E7A8);
  uint64_t v1 = sub_100124100();
  if (!*(void *)(v0 + 2640))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_100029474((long long *)(v0 + 2616), v0 + 2456);
  sub_100009D48(v0 + 2536);
  sub_100029758((uint64_t)&unk_100172748, v0 + 2776);
  sub_100009D98((void *)(v0 + 2776), *(void *)(v0 + 2800));
  sub_1000055F8(0, &qword_10015E7B0);
  uint64_t v1 = sub_100124100();
  if (!*(void *)(v0 + 2880))
  {
LABEL_17:
    __break(1u);
    return _swift_asyncLet_get_throwing(v1, v2, v3, v4);
  }
  sub_100029474((long long *)(v0 + 2856), v0 + 2696);
  sub_100009D48(v0 + 2776);
  sub_100123F90();
  sub_100123F80();
  if (qword_10015D598 != -1) {
    swift_once();
  }
  uint64_t v18 = *(void *)(v0 + 3960);
  uint64_t v14 = *(void *)(v0 + 3952);
  uint64_t v15 = *(void *)(v0 + 3968);
  uint64_t v16 = *(void *)(v0 + 3944);
  uint64_t v19 = *(void *)(v0 + 3920);
  uint64_t v24 = *(void *)(v0 + 3912);
  uint64_t v22 = *(void *)(v0 + 3896);
  uint64_t v23 = *(void *)(v0 + 3904);
  uint64_t v25 = *(void *)(v0 + 3880);
  uint64_t v17 = *(void *)(v0 + 3584);
  uint64_t v20 = *(void *)(v0 + 3576);
  uint64_t v21 = *(void *)(v0 + 3872);
  uint64_t v5 = *(void *)(v0 + 3568);
  sub_100123F70();
  swift_release();
  *(unsigned char *)(v0 + 4173) = *(unsigned char *)(v0 + 4172);
  sub_100029758(v0 + 1976, v0 + 2936);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 4088) = v6;
  sub_100029474((long long *)(v0 + 2936), v6 + 16);
  swift_retain();
  swift_asyncLet_begin();
  sub_100029758(v0 + 2696, v0 + 3016);
  sub_100029758(v0 + 2216, v0 + 3056);
  sub_100029C14(v5, v15, type metadata accessor for DetailTimelineProvider.Configuration);
  uint64_t v7 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 4096) = v8;
  sub_100029474((long long *)(v0 + 3016), v8 + 16);
  sub_100029474((long long *)(v0 + 3056), v8 + 56);
  sub_100029D70(v15, v8 + ((v7 + 96) & ~v7), type metadata accessor for DetailTimelineProvider.Configuration);
  swift_retain();
  swift_asyncLet_begin();
  sub_100029758(v0 + 2456, v0 + 3136);
  sub_100029C14(v5, v18, type metadata accessor for DetailTimelineProvider.Configuration);
  sub_100029C14(v17, v19, type metadata accessor for DetailTimelineProvider);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v22, v20, v21);
  uint64_t v9 = (v7 + 56) & ~v7;
  unint64_t v10 = (v9 + v14 + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v11 = (v24 + *(unsigned __int8 *)(v25 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 4104) = v12;
  sub_100029474((long long *)(v0 + 3136), v12 + 16);
  sub_100029D70(v18, v12 + v9, type metadata accessor for DetailTimelineProvider.Configuration);
  sub_100029D70(v19, v12 + v10, type metadata accessor for DetailTimelineProvider);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v12 + v11, v22, v21);
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v3 = sub_1000200A8;
  uint64_t v2 = *(void *)(v0 + 3936);
  uint64_t v1 = v0 + 16;
  uint64_t v4 = v0 + 2016;
  return _swift_asyncLet_get_throwing(v1, v2, v3, v4);
}

uint64_t sub_1000200A8()
{
  v1[514] = v0;
  if (v0) {
    uint64_t v2 = sub_100021EA8;
  }
  else {
    uint64_t v2 = sub_1000200E0;
  }
  return _swift_task_switch(v2, v1[509], v1[510]);
}

uint64_t sub_1000200E0()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 3864);
  uint64_t v2 = *(void *)(v0 + 3856);
  uint64_t v3 = *(void *)(v0 + 3848);
  uint64_t v4 = *(void *)(v0 + 3824);
  uint64_t v5 = *(void *)(v0 + 3760);
  uint64_t v6 = *(void *)(v0 + 3752);
  uint64_t v7 = *(void *)(v0 + 3584);
  sub_100029C14(*(void *)(v0 + 3936), v1, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(void *)(v0 + 4120) = v8;
  *(void *)(v0 + 4128) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v4, v7, v6);
  sub_100029C14(v1, v2, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  sub_100029C14(v1, v3, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  uint64_t v9 = sub_100124550();
  os_log_type_t v10 = sub_100125F60();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 3856);
    uint64_t v12 = *(void *)(v0 + 3848);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315650;
    uint64_t v14 = sub_100123D20();
    *(void *)(v0 + 3536) = sub_1000AB124(v14, v15, &v30);
    sub_100126030();
    swift_bridgeObjectRelease();
    sub_100029E40(v11, (uint64_t (*)(void))type metadata accessor for WidgetStock);
    *(_WORD *)(v13 + 12) = 2048;
    uint64_t v16 = sub_1000F46DC();
    char v18 = v17;
    swift_bridgeObjectRelease();
    double v19 = *(double *)&v16;
    if (v18) {
      double v19 = 0.0;
    }
    *(double *)(v0 + 3544) = v19;
    sub_100126030();
    sub_100029E40(v12, (uint64_t (*)(void))type metadata accessor for WidgetStock);
    *(_WORD *)(v13 + 22) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v20 = *(void *)(v0 + 3824);
    uint64_t v21 = *(void *)(v0 + 3760);
    uint64_t v22 = *(void *)(v0 + 3752);
    sub_100126690();
    *(void *)(v0 + 3440) = sub_1000AB124(*(void *)(v0 + 3392), *(void *)(v0 + 3400), &v30);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Fetched stockViewModel=%s, price=%f id=%s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v23(v20, v22);
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 3848);
    uint64_t v25 = *(void *)(v0 + 3824);
    uint64_t v26 = *(void *)(v0 + 3760);
    uint64_t v27 = *(void *)(v0 + 3752);
    sub_100029E40(*(void *)(v0 + 3856), (uint64_t (*)(void))type metadata accessor for WidgetStock);
    sub_100029E40(v24, (uint64_t (*)(void))type metadata accessor for WidgetStock);

    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v23(v25, v27);
  }
  *(void *)(v0 + 4136) = v23;
  uint64_t v28 = *(void *)(v0 + 4008);
  return _swift_asyncLet_get(v0 + 656, v28, sub_10002046C, v0 + 2736);
}

uint64_t sub_10002046C()
{
  return _swift_task_switch(sub_100020488, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_100020488()
{
  uint64_t v32 = v0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[515];
  uint64_t v2 = v0[500];
  uint64_t v3 = v0[499];
  uint64_t v4 = v0[497];
  uint64_t v5 = v0[477];
  uint64_t v6 = v0[469];
  uint64_t v7 = v0[448];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[498] + 16);
  v8(v2, v0[501], v4);
  v1(v5, v7, v6);
  v8(v3, v2, v4);
  uint64_t v9 = sub_100124550();
  os_log_type_t v10 = sub_100125F60();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v30 = v10;
    uint64_t v11 = v0[499];
    uint64_t v12 = v0[498];
    uint64_t v29 = v0[497];
    uint64_t v13 = v0[468];
    uint64_t v14 = v0[467];
    uint64_t v15 = v0[466];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_1001235A0();
    uint64_t v17 = sub_100123290();
    unint64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    v0[439] = sub_1000AB124(v17, v19, &v31);
    sub_100126030();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v11, v29);
    *(_WORD *)(v16 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v21 = (void (*)(uint64_t, uint64_t))v0[517];
    uint64_t v22 = v0[477];
    uint64_t v23 = v0[469];
    sub_100126690();
    v0[441] = sub_1000AB124(v0[414], v0[415], &v31);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v30, "Fetched quoteDetail, dateLastRefreshed=%s, id=%s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v21(v22, v23);
  }
  else
  {
    uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[517];
    uint64_t v25 = v0[477];
    uint64_t v26 = v0[469];
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0[498] + 8);
    v20(v0[499], v0[497]);

    v24(v25, v26);
  }
  v0[518] = v20;
  uint64_t v27 = v0[492];
  return _swift_asyncLet_get_throwing(v0 + 2, v27, sub_1000207E8, v0 + 352);
}

uint64_t sub_1000207E8()
{
  v1[519] = v0;
  if (v0) {
    uint64_t v2 = sub_1000225B8;
  }
  else {
    uint64_t v2 = sub_100020820;
  }
  return _swift_task_switch(v2, v1[509], v1[510]);
}

uint64_t sub_100020820()
{
  uint64_t v104 = v0;
  uint64_t v1 = *(void *)(v0 + 3720);
  uint64_t v2 = *(void *)(v0 + 3712);
  uint64_t v3 = *(void *)(v0 + 3680);
  uint64_t v4 = *(void *)(v0 + 3672);
  sub_100029C14(*(void *)(v0 + 3936) + *(int *)(*(void *)(v0 + 3928) + 48), v1, (uint64_t (*)(void))sub_100029100);
  sub_100029C14(v1, v2, (uint64_t (*)(void))sub_100029100);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 4120);
  uint64_t v7 = *(void *)(v0 + 3752);
  if (v5 == 1)
  {
    uint64_t v8 = *(void *)(v0 + 3800);
    uint64_t v9 = *(void *)(v0 + 3584);
    sub_100029E40(*(void *)(v0 + 3712), (uint64_t (*)(void))sub_100029100);
    v6(v8, v9, v7);
    os_log_type_t v10 = sub_100124550();
    os_log_type_t v11 = sub_100125F60();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v103 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      if (qword_10015D4C8 != -1) {
        swift_once();
      }
      uint64_t v99 = *(void *)(v0 + 3800);
      unint64_t v101 = *(void (**)(uint64_t, os_log_t))(v0 + 4136);
      os_log_t loga = *(os_log_t *)(v0 + 3752);
      sub_100126690();
      *(void *)(v0 + 3464) = sub_1000AB124(*(void *)(v0 + 3344), *(void *)(v0 + 3352), (uint64_t *)&v103);
      sub_100126030();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Fetched no headlines, id=%s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v101(v99, loga);
    }
    else
    {
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
      uint64_t v40 = *(void *)(v0 + 3800);
      uint64_t v41 = *(void *)(v0 + 3752);

      v39(v40, v41);
    }
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)(v0 + 3808);
  uint64_t v14 = *(void *)(v0 + 3696);
  uint64_t v15 = *(void *)(v0 + 3688);
  uint64_t v16 = *(void *)(v0 + 3680);
  uint64_t v17 = *(void *)(v0 + 3672);
  uint64_t v18 = *(void *)(v0 + 3584);
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 32))(v14, *(void *)(v0 + 3712), v17);
  v6(v13, v18, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v14, v17);
  unint64_t v19 = sub_100124550();
  os_log_type_t v20 = sub_100125F60();
  if (!os_log_type_enabled(v19, v20))
  {
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v43 = *(void *)(v0 + 3808);
    uint64_t v44 = *(void *)(v0 + 3752);
    uint64_t v45 = *(void *)(v0 + 3696);
    uint64_t v46 = *(void *)(v0 + 3688);
    uint64_t v47 = *(void *)(v0 + 3680);
    uint64_t v48 = *(void *)(v0 + 3672);

    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v49(v46, v48);
    v42(v43, v44);
    v49(v45, v48);
    goto LABEL_21;
  }
  os_log_type_t v95 = v20;
  log = v19;
  uint64_t v21 = (_DWORD *)swift_slowAlloc();
  uint64_t v102 = swift_slowAlloc();
  _DWORD *v21 = 136315394;
  uint64_t v22 = sub_100029BB0(&qword_10015E7E8, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0);
  uint64_t v23 = sub_100125E70();
  uint64_t v96 = v21;
  if (!v23)
  {
LABEL_18:
    uint64_t v50 = *(void *)(v0 + 3688);
    uint64_t v51 = *(void *)(v0 + 3680);
    uint64_t v52 = *(void *)(v0 + 3672);
    uint64_t v53 = sub_100125CD0();
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 3488) = sub_1000AB124(v53, v55, &v102);
    sub_100126030();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v56(v50, v52);
    *((_WORD *)v96 + 6) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v57 = *(void *)(v0 + 3808);
    uint64_t v58 = *(void *)(v0 + 3752);
    uint64_t v59 = *(void *)(v0 + 3696);
    uint64_t v60 = *(void *)(v0 + 3672);
    sub_100126690();
    *(void *)(v0 + 3504) = sub_1000AB124(*(void *)(v0 + 3296), *(void *)(v0 + 3304), &v102);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v95, "Fetched headlines=%s, id=%s", (uint8_t *)v96, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v94(v57, v58);
    v56(v59, v60);
LABEL_21:
    uint64_t v61 = *(void *)(v0 + 3864);
    uint64_t v62 = *(void *)(v0 + 3832);
    uint64_t v63 = *(void *)(v0 + 3640);
    uint64_t v64 = *(void *)(v0 + 3624);
    uint64_t v65 = *(void *)(v0 + 3616);
    uint64_t v66 = *(void *)(v0 + 3600);
    uint64_t v67 = *(void *)(v0 + 3592);
    sub_100029C14(v61, *(void *)(v0 + 3840), (uint64_t (*)(void))type metadata accessor for WidgetStock);
    BOOL v68 = sub_100009D98((void *)(v0 + 3176), *(void *)(v0 + 3200));
    uint64_t v69 = *(int *)(v62 + 20);
    *(_DWORD *)(v0 + 4168) = v69;
    sub_100029C14(v61 + v69, v63, (uint64_t (*)(void))sub_100029068);
    sub_100125980();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v65, v64, v67);
    int v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 88))(v65, v67);
    if (v70 == enum case for WidgetFamily.systemSmall(_:))
    {
      uint64_t v71 = 0;
    }
    else if (v70 == enum case for WidgetFamily.systemMedium(_:))
    {
      uint64_t v71 = 3;
    }
    else if (v70 == enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t v71 = 6;
    }
    else
    {
      uint64_t v71 = 0;
      if (v70 != enum case for WidgetFamily.accessoryCircular(_:)
        && v70 != enum case for WidgetFamily.accessoryRectangular(_:)
        && v70 != enum case for WidgetFamily.accessoryInline(_:))
      {
        return sub_100126290();
      }
    }
    (*(void (**)(void, void))(*(void *)(v0 + 3600) + 8))(*(void *)(v0 + 3624), *(void *)(v0 + 3592));
    uint64_t v72 = *v68;
    if (qword_10015D580 != -1) {
      swift_once();
    }
    uint64_t v73 = *(void *)(v0 + 4000);
    uint64_t v74 = *(void *)(v0 + 3640);
    uint64_t v75 = qword_100162460;
    unint64_t v76 = (void *)swift_task_alloc();
    v76[2] = v72;
    v76[3] = v74;
    v76[4] = v73;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_10001C234((void (*)(uint64_t *__return_ptr, char *))sub_100029B8C, (uint64_t)v76, v75);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_1000C049C((uint64_t)v77, v71, (uint64_t *)(v0 + 3496));
    swift_bridgeObjectRelease();
    int64_t v78 = sub_10001C744(v71, *(void *)(v0 + 3496));
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    unint64_t v84 = v83;
    if (v83)
    {
      sub_100126550();
      swift_unknownObjectRetain_n();
      uint64_t v86 = (void *)swift_dynamicCastClass();
      if (!v86)
      {
        swift_unknownObjectRelease();
        uint64_t v86 = _swiftEmptyArrayStorage;
      }
      uint64_t v87 = v86[2];
      swift_release();
      if (__OFSUB__(v84 >> 1, v82))
      {
        __break(1u);
      }
      else if (v87 == (v84 >> 1) - v82)
      {
        char v85 = (void *)swift_dynamicCastClass();
        if (!v85)
        {
          swift_unknownObjectRelease();
          char v85 = _swiftEmptyArrayStorage;
        }
        goto LABEL_37;
      }
      swift_unknownObjectRelease();
    }
    char v85 = sub_1000AB794(v78, v80, v82, v84);
LABEL_37:
    uint64_t v88 = *(void *)(v0 + 3840);
    uint64_t v89 = *(void *)(v0 + 3720);
    uint64_t v90 = *(void *)(v0 + 3704);
    uint64_t v91 = *(void *)(v0 + 3656);
    uint64_t v92 = *(void *)(v0 + 3640);
    swift_unknownObjectRelease();
    sub_100029E40(v92, (uint64_t (*)(void))sub_100029068);
    sub_100029C14(v89, v90, (uint64_t (*)(void))sub_100029100);
    sub_1000C87C4(v88, (uint64_t)v85, v90, v91);
    uint64_t v27 = sub_100021390;
    uint64_t v26 = *(void *)(v0 + 4056);
    uint64_t v25 = v0 + 1296;
    uint64_t v28 = v0 + 2496;
    return _swift_asyncLet_get_throwing(v25, v26, v27, v28);
  }
  uint64_t v24 = v23;
  uint64_t v103 = _swiftEmptyArrayStorage;
  sub_10009BACC(0, v23 & ~(v23 >> 63), 0);
  uint64_t v25 = sub_100125E50();
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v100 = *(void *)(v0 + 3664);
    do
    {
      uint64_t v29 = *(void *)(v0 + 3664);
      uint64_t v30 = v22;
      uint64_t v31 = (void (*)(uint64_t, void))sub_100125F00();
      sub_100029C14(v32, v29, type metadata accessor for HeadlineViewModel);
      v31(v0 + 3216, 0);
      uint64_t v33 = *(void *)(v100 + 64);
      uint64_t v34 = *(void *)(v100 + 72);
      swift_bridgeObjectRetain();
      sub_100029E40(v29, type metadata accessor for HeadlineViewModel);
      uint64_t v35 = v103;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10009BACC(0, v103[2] + 1, 1);
        uint64_t v35 = v103;
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      if (v37 >= v36 >> 1)
      {
        sub_10009BACC(v36 > 1, v37 + 1, 1);
        uint64_t v35 = v103;
      }
      v35[2] = v37 + 1;
      uint64_t v38 = &v35[2 * v37];
      v38[4] = v33;
      v38[5] = v34;
      uint64_t v22 = v30;
      sub_100125EB0();
      --v24;
    }
    while (v24);
    goto LABEL_18;
  }
  __break(1u);
  return _swift_asyncLet_get_throwing(v25, v26, v27, v28);
}

uint64_t sub_100021390()
{
  v1[520] = v0;
  if (v0) {
    uint64_t v2 = sub_100022D5C;
  }
  else {
    uint64_t v2 = sub_1000213C8;
  }
  return _swift_task_switch(v2, v1[509], v1[510]);
}

uint64_t sub_1000213C8()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 4120);
  uint64_t v2 = *(void *)(v0 + 4048);
  uint64_t v3 = *(void *)(v0 + 4040);
  uint64_t v4 = *(void *)(v0 + 4016);
  uint64_t v5 = *(void *)(v0 + 3792);
  uint64_t v6 = *(void *)(v0 + 3752);
  uint64_t v7 = *(void *)(v0 + 3584);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 4024) + 16);
  v8(v2, *(void *)(v0 + 4056), v4);
  v1(v5, v7, v6);
  v8(v3, v2, v4);
  uint64_t v9 = sub_100124550();
  os_log_type_t v10 = sub_100125F60();
  os_log_type_t v11 = &selRef_fontDescriptorByAddingAttributes_;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v12 = *(void *)(v0 + 4040);
    uint64_t v13 = *(void *)(v0 + 4024);
    uint64_t v14 = *(void *)(v0 + 4016);
    uint64_t v15 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 134218242;
    uint64_t v16 = sub_100123890();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    *(void *)(v0 + 3432) = v16;
    sub_100126030();
    *(_WORD *)(v15 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v18 = *(void *)(v0 + 3792);
    uint64_t v19 = *(void *)(v0 + 3752);
    sub_100126690();
    *(void *)(v0 + 3448) = sub_1000AB124(*(void *)(v0 + 3360), *(void *)(v0 + 3368), &v53);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Fetched priceChangeDisplay=%ld, id=%s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v17(v18, v19);
    os_log_type_t v11 = &selRef_fontDescriptorByAddingAttributes_;
  }
  else
  {
    os_log_type_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v21 = *(void *)(v0 + 3792);
    uint64_t v22 = *(void *)(v0 + 3752);
    (*(void (**)(void, void))(*(void *)(v0 + 4024) + 8))(*(void *)(v0 + 4040), *(void *)(v0 + 4016));

    v20(v21, v22);
  }
  (*(void (**)(void, void, void))(v0 + 4120))(*(void *)(v0 + 3784), *(void *)(v0 + 3584), *(void *)(v0 + 3752));
  uint64_t v23 = sub_100124550();
  os_log_type_t v24 = sub_100125F60();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315138;
    if (v11[153] != (char *)-1) {
      swift_once();
    }
    uint64_t v51 = *(void *)(v0 + 3784);
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v49 = *(void *)(v0 + 3752);
    sub_100126690();
    *(void *)(v0 + 3416) = sub_1000AB124(*(void *)(v0 + 3376), *(void *)(v0 + 3384), &v53);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Successfully created timeline entry, id=%s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v52(v51, v49);
  }
  else
  {
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v27 = *(void *)(v0 + 3784);
    uint64_t v28 = *(void *)(v0 + 3752);

    v26(v27, v28);
  }
  uint64_t v29 = *(void *)(v0 + 4048);
  uint64_t v30 = *(void *)(v0 + 4032);
  uint64_t v31 = *(void *)(v0 + 4024);
  uint64_t v45 = *(void *)(v0 + 4000);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 4144);
  uint64_t v44 = *(void *)(v0 + 3976);
  uint64_t v43 = *(void *)(v0 + 3864);
  uint64_t v32 = *(void *)(v0 + 3744);
  uint64_t v33 = *(void *)(v0 + 3736);
  uint64_t v47 = *(void *)(v0 + 3728);
  uint64_t v41 = *(void *)(v0 + 4016);
  uint64_t v42 = *(void *)(v0 + 3720);
  uint64_t v34 = *(void *)(v0 + 3656);
  uint64_t v35 = *(void *)(v0 + 3632);
  uint64_t v48 = *(void *)(v0 + 3648);
  uint64_t v50 = v35;
  uint64_t v36 = v43 + *(int *)(v0 + 4168);
  uint64_t v37 = *(void *)(v0 + 3560);
  sub_100029C14(v34, v48, type metadata accessor for DetailContentViewModel);
  sub_100029C14(v36, v35, (uint64_t (*)(void))sub_100029068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v30, v29, v41);
  sub_1001232A0();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v41);
  sub_100029E40(v34, type metadata accessor for DetailContentViewModel);
  sub_100029E40(v42, (uint64_t (*)(void))sub_100029100);
  v46(v45, v44);
  sub_100029E40(v43, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v37, v32, v47);
  uint64_t v38 = (int *)type metadata accessor for DetailTimelineEntry();
  sub_100029D70(v48, v37 + v38[5], type metadata accessor for DetailContentViewModel);
  sub_100029D70(v50, v37 + v38[6], (uint64_t (*)(void))sub_100029068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v37 + v38[7], v30, v41);
  *(unsigned char *)(v37 + v38[8]) = 0;
  *(unsigned char *)(v37 + v38[9]) = 0;
  uint64_t v39 = *(void *)(v0 + 3936);
  return _swift_asyncLet_finish(v0 + 16, v39, sub_100021A74, v0 + 2416);
}

uint64_t sub_100021A74()
{
  return _swift_task_switch(sub_100021A90, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_100021A90()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 4008);
  return _swift_asyncLet_finish(v0 + 656, v1, sub_100021B04, v0 + 2336);
}

uint64_t sub_100021B04()
{
  return _swift_task_switch(sub_100021B20, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_100021B20()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 4056);
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_100021B94, v0 + 1936);
}

uint64_t sub_100021B94()
{
  return _swift_task_switch(sub_100021BB0, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_100021BB0()
{
  swift_release();
  sub_100009D48(v0 + 2696);
  sub_100009D48(v0 + 2456);
  sub_100009D48(v0 + 2216);
  sub_100009D48(v0 + 1976);
  swift_release();
  sub_100009D48(v0 + 3176);
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100021EA8()
{
  return _swift_asyncLet_finish(v0 + 16, *(void *)(v0 + 3936), sub_100021EC8, v0 + 2096);
}

uint64_t sub_100021EC8()
{
  return _swift_task_switch(sub_100021EE4, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_100021EE4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 4008);
  return _swift_asyncLet_finish(v0 + 656, v1, sub_100021F58, v0 + 2176);
}

uint64_t sub_100021F58()
{
  return _swift_task_switch(sub_100021F74, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_100021F74()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 4056);
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_100021FE8, v0 + 2256);
}

uint64_t sub_100021FE8()
{
  return _swift_task_switch(sub_100022004, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_100022004()
{
  os_log_type_t v24 = v0;
  uint64_t v1 = v0[472];
  uint64_t v2 = v0[470];
  uint64_t v3 = v0[469];
  uint64_t v4 = v0[448];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_100124550();
  os_log_type_t v6 = sub_100125F40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_getErrorValue();
    uint64_t v8 = sub_100126580();
    v0[435] = sub_1000AB124(v8, v9, v23);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v7 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[472];
    uint64_t v11 = v0[470];
    uint64_t v12 = v0[469];
    sub_100126690();
    v0[444] = sub_1000AB124(v0[416], v0[417], v23);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to create timeline entry, error=%s, id=%s ", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  else
  {
    uint64_t v13 = v0[472];
    uint64_t v14 = v0[470];
    uint64_t v15 = v0[469];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[451];
  uint64_t v17 = v0[450];
  uint64_t v18 = v0[449];
  uint64_t v19 = v0[445];
  char v20 = sub_100125990();
  sub_100125980();
  sub_100070F24(v16, (v20 & 1) == 0, v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_errorRelease();
  sub_100009D48((uint64_t)(v0 + 337));
  sub_100009D48((uint64_t)(v0 + 307));
  sub_100009D48((uint64_t)(v0 + 277));
  sub_100009D48((uint64_t)(v0 + 247));
  sub_100009D48((uint64_t)(v0 + 397));
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1000225B8()
{
  uint64_t v1 = *(void *)(v0 + 3864);
  (*(void (**)(void, void))(v0 + 4144))(*(void *)(v0 + 4000), *(void *)(v0 + 3976));
  sub_100029E40(v1, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  uint64_t v2 = *(void *)(v0 + 3936);
  return _swift_asyncLet_finish(v0 + 16, v2, sub_10002266C, v0 + 2896);
}

uint64_t sub_10002266C()
{
  return _swift_task_switch(sub_100022688, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_100022688()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 4008);
  return _swift_asyncLet_finish(v0 + 656, v1, sub_1000226FC, v0 + 2656);
}

uint64_t sub_1000226FC()
{
  return _swift_task_switch(sub_100022718, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_100022718()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 4056);
  return _swift_asyncLet_finish(v0 + 1296, v1, sub_10002278C, v0 + 2576);
}

uint64_t sub_10002278C()
{
  return _swift_task_switch(sub_1000227A8, *(void *)(v0 + 4072), *(void *)(v0 + 4080));
}

uint64_t sub_1000227A8()
{
  os_log_type_t v24 = v0;
  uint64_t v1 = v0[472];
  uint64_t v2 = v0[470];
  uint64_t v3 = v0[469];
  uint64_t v4 = v0[448];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_100124550();
  os_log_type_t v6 = sub_100125F40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_getErrorValue();
    uint64_t v8 = sub_100126580();
    v0[435] = sub_1000AB124(v8, v9, v23);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v7 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[472];
    uint64_t v11 = v0[470];
    uint64_t v12 = v0[469];
    sub_100126690();
    v0[444] = sub_1000AB124(v0[416], v0[417], v23);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to create timeline entry, error=%s, id=%s ", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  else
  {
    uint64_t v13 = v0[472];
    uint64_t v14 = v0[470];
    uint64_t v15 = v0[469];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[451];
  uint64_t v17 = v0[450];
  uint64_t v18 = v0[449];
  uint64_t v19 = v0[445];
  char v20 = sub_100125990();
  sub_100125980();
  sub_100070F24(v16, (v20 & 1) == 0, v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  swift_errorRelease();
  sub_100009D48((uint64_t)(v0 + 337));
  sub_100009D48((uint64_t)(v0 + 307));
  sub_100009D48((uint64_t)(v0 + 277));
  sub_100009D48((uint64_t)(v0 + 247));
  sub_100009D48((uint64_t)(v0 + 397));
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100022D5C()
{
  uint64_t v43 = v0;
  (*(void (**)(void, void, void))(v0 + 4120))(*(void *)(v0 + 3768), *(void *)(v0 + 3584), *(void *)(v0 + 3752));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v38 = *(void *)(v0 + 3768);
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v35 = *(void *)(v0 + 3752);
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = sub_100126580();
    *(void *)(v0 + 3424) = sub_1000AB124(v4, v5, &v42);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to fetch price change display, falling back to default, error=%s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v40(v38, v35);
  }
  else
  {
    os_log_type_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v7 = *(void *)(v0 + 3768);
    uint64_t v8 = *(void *)(v0 + 3752);
    swift_errorRelease();
    swift_errorRelease();

    v6(v7, v8);
  }
  sub_100123E70();
  swift_errorRelease();
  (*(void (**)(void, void, void))(v0 + 4120))(*(void *)(v0 + 3784), *(void *)(v0 + 3584), *(void *)(v0 + 3752));
  unint64_t v9 = sub_100124550();
  os_log_type_t v10 = sub_100125F60();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v39 = *(void *)(v0 + 3784);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v36 = *(void *)(v0 + 3752);
    sub_100126690();
    *(void *)(v0 + 3416) = sub_1000AB124(*(void *)(v0 + 3376), *(void *)(v0 + 3384), &v42);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Successfully created timeline entry, id=%s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v41(v39, v36);
  }
  else
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 4136);
    uint64_t v13 = *(void *)(v0 + 3784);
    uint64_t v14 = *(void *)(v0 + 3752);

    v12(v13, v14);
  }
  uint64_t v15 = *(void *)(v0 + 4048);
  uint64_t v16 = *(void *)(v0 + 4032);
  uint64_t v17 = *(void *)(v0 + 4024);
  uint64_t v31 = *(void *)(v0 + 4000);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 4144);
  uint64_t v30 = *(void *)(v0 + 3976);
  uint64_t v29 = *(void *)(v0 + 3864);
  uint64_t v18 = *(void *)(v0 + 3744);
  uint64_t v19 = *(void *)(v0 + 3736);
  uint64_t v33 = *(void *)(v0 + 3728);
  uint64_t v27 = *(void *)(v0 + 4016);
  uint64_t v28 = *(void *)(v0 + 3720);
  uint64_t v20 = *(void *)(v0 + 3656);
  uint64_t v21 = *(void *)(v0 + 3632);
  uint64_t v34 = *(void *)(v0 + 3648);
  uint64_t v37 = v21;
  uint64_t v22 = v29 + *(int *)(v0 + 4168);
  uint64_t v23 = *(void *)(v0 + 3560);
  sub_100029C14(v20, v34, type metadata accessor for DetailContentViewModel);
  sub_100029C14(v22, v21, (uint64_t (*)(void))sub_100029068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v27);
  sub_1001232A0();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v27);
  sub_100029E40(v20, type metadata accessor for DetailContentViewModel);
  sub_100029E40(v28, (uint64_t (*)(void))sub_100029100);
  v32(v31, v30);
  sub_100029E40(v29, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v23, v18, v33);
  os_log_type_t v24 = (int *)type metadata accessor for DetailTimelineEntry();
  sub_100029D70(v34, v23 + v24[5], type metadata accessor for DetailContentViewModel);
  sub_100029D70(v37, v23 + v24[6], (uint64_t (*)(void))sub_100029068);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v23 + v24[7], v16, v27);
  *(unsigned char *)(v23 + v24[8]) = 0;
  *(unsigned char *)(v23 + v24[9]) = 0;
  uint64_t v25 = *(void *)(v0 + 3936);
  return _swift_asyncLet_finish(v0 + 16, v25, sub_100021A74, v0 + 2416);
}

uint64_t sub_100023374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[22] = a1;
  uint64_t v6 = sub_1001237F0();
  v3[23] = v6;
  v3[24] = *(void *)(v6 - 8);
  v3[25] = swift_task_alloc();
  sub_10002A270(0, &qword_10015E6F0, (uint64_t (*)(uint64_t))type metadata accessor for DetailTimelineEntry, sub_10001C170, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for Timeline);
  v3[26] = v7;
  v3[27] = *(void *)(v7 - 8);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  uint64_t v8 = sub_100123670();
  v3[30] = v8;
  v3[31] = *(void *)(v8 - 8);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  sub_100029068(0);
  v3[34] = v9;
  v3[35] = *(void *)(v9 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  sub_100029100();
  v3[38] = swift_task_alloc();
  uint64_t v10 = sub_1001232B0();
  v3[39] = v10;
  v3[40] = *(void *)(v10 - 8);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  uint64_t v11 = sub_100125930();
  v3[44] = v11;
  v3[45] = *(void *)(v11 - 8);
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for DetailTimelineEntry();
  v3[48] = v12;
  v3[49] = *(void *)(v12 - 8);
  uint64_t v13 = swift_task_alloc();
  v3[50] = v13;
  v3[51] = sub_100125DC0();
  v3[52] = sub_100125DB0();
  uint64_t v14 = (void *)swift_task_alloc();
  v3[53] = v14;
  void *v14 = v3;
  v14[1] = sub_1000237A0;
  return sub_10001CC24(v13, a2, a3);
}

uint64_t sub_1000237A0()
{
  swift_task_dealloc();
  uint64_t v1 = sub_100125D80();
  return _swift_task_switch(sub_1000238DC, v1, v0);
}

uint64_t sub_1000238DC()
{
  swift_release();
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, v0 + 56);
  sub_100009D98((void *)(v0 + 56), *(void *)(v0 + 80));
  sub_1000055F8(0, (unint64_t *)&unk_10015FDC0);
  uint64_t result = sub_100124100();
  if (!*(void *)(v0 + 120))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 384);
  sub_100029474((long long *)(v0 + 96), v0 + 16);
  sub_100009D48(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v75 = (void *)(v0 + 16);
  if ((*(unsigned char *)(v2 + *(int *)(v3 + 36)) & 1) == 0)
  {
    uint64_t v74 = (void *)(v0 + 136);
    uint64_t v16 = *(void *)(v0 + 384);
    uint64_t v17 = *(void *)(v0 + 288);
    uint64_t v18 = *(void *)(v0 + 296);
    uint64_t v19 = *(void *)(v0 + 280);
    uint64_t v20 = *(void *)(v0 + 240);
    uint64_t v21 = *(void *)(v0 + 248);
    sub_10002909C(0, &qword_10015E728, (uint64_t (*)(uint64_t))sub_100029068, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    unint64_t v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100127010;
    uint64_t v24 = v23 + v22;
    sub_100029C14(v4 + *(int *)(v16 + 24), v24, (uint64_t (*)(void))sub_100029068);
    sub_100029C14(v24, v18, (uint64_t (*)(void))sub_100029068);
    sub_100029D70(v18, v17, (uint64_t (*)(void))sub_100029068);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20) == 1)
    {
      sub_100029E40(*(void *)(v0 + 288), (uint64_t (*)(void))sub_100029068);
      uint64_t v25 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v27 = *(void *)(v0 + 256);
      uint64_t v26 = *(void *)(v0 + 264);
      uint64_t v28 = *(void *)(v0 + 240);
      uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 248) + 32);
      v29(v26, *(void *)(v0 + 288), v28);
      v29(v27, v26, v28);
      uint64_t v25 = _swiftEmptyArrayStorage;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v25 = (void *)sub_10009B5D8(0, _swiftEmptyArrayStorage[2] + 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      }
      unint64_t v31 = v25[2];
      unint64_t v30 = v25[3];
      if (v31 >= v30 >> 1) {
        uint64_t v25 = (void *)sub_10009B5D8(v30 > 1, v31 + 1, 1, (unint64_t)v25);
      }
      uint64_t v33 = *(void *)(v0 + 248);
      uint64_t v32 = *(void *)(v0 + 256);
      uint64_t v34 = *(void *)(v0 + 240);
      v25[2] = v31 + 1;
      v29((uint64_t)v25+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v31, v32, v34);
    }
    uint64_t v35 = *(void *)(v0 + 400);
    uint64_t v36 = *(void *)(v0 + 384);
    uint64_t v37 = *(void *)(v0 + 304);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_100009D98(v75, *(void *)(v0 + 40));
    sub_100123270();
    uint64_t v38 = *(int *)(v36 + 20);
    uint64_t v39 = type metadata accessor for DetailContentViewModel(0);
    sub_100029C14(v35 + *(int *)(v39 + 44) + v38, v37, (uint64_t (*)(void))sub_100029100);
    sub_10002A270(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v41 = v40;
    uint64_t v42 = *(void *)(v40 - 8);
    int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v37, 1, v40);
    uint64_t v44 = *(void *)(v0 + 304);
    uint64_t v45 = (uint64_t)v25;
    if (v43 == 1)
    {
      sub_100029E40(*(void *)(v0 + 304), (uint64_t (*)(void))sub_100029100);
      uint64_t v46 = 0;
    }
    else
    {
      uint64_t v46 = sub_1001243E0();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v41);
    }
    uint64_t v47 = *(void *)(v0 + 392);
    uint64_t v48 = *(void *)(v0 + 376);
    uint64_t v49 = *(void *)(v0 + 360);
    uint64_t v68 = *(void *)(v0 + 400);
    uint64_t v69 = *(void *)(v0 + 368);
    uint64_t v50 = *(void *)(v0 + 344);
    uint64_t v71 = *(void *)(v0 + 352);
    uint64_t v52 = *(void *)(v0 + 312);
    uint64_t v51 = *(void *)(v0 + 320);
    sub_10010AC54(v45, v46, v48);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    sub_10002909C(0, &qword_10015E730, (uint64_t (*)(uint64_t))type metadata accessor for DetailTimelineEntry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    unint64_t v53 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_100127010;
    sub_100029C14(v68, v54 + v53, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v69, v48, v71);
    sub_10001C170();
    sub_1001259E0();
    sub_100029758((uint64_t)&unk_100172748, (uint64_t)v74);
    sub_100009D98(v74, *(void *)(v0 + 160));
    type metadata accessor for DemoTimelineManager();
    uint64_t result = sub_1001240F0();
    if (result)
    {
      sub_100009D48((uint64_t)v74);
      sub_100123F00();
      sub_10001C1EC(&qword_10015E738, (void (*)(uint64_t))type metadata accessor for DemoTimelineManager);
      sub_100123F50();
      swift_release();
      if (*(unsigned char *)(v0 + 432) == 1)
      {
        uint64_t v55 = *(void *)(v0 + 400);
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_100127010;
        sub_100029C14(v55, v56 + v53, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
        sub_1000463E4(v56);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
      }
      sub_100123F20();
      sub_100123F50();
      swift_release();
      uint64_t v57 = *(void *)(v0 + 400);
      uint64_t v58 = *(void *)(v0 + 376);
      uint64_t v59 = *(void *)(v0 + 352);
      uint64_t v60 = *(void *)(v0 + 360);
      if (*(unsigned char *)(v0 + 433) == 1)
      {
        uint64_t v61 = *(void *)(v0 + 224);
        uint64_t v62 = *(void *)(v0 + 232);
        uint64_t v64 = *(void *)(v0 + 208);
        uint64_t v63 = *(void *)(v0 + 216);
        sub_100047080(v61);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
        sub_100029E40(v57, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
        uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32);
        v65(v62, v61, v64);
        v65(*(void *)(v0 + 176), *(void *)(v0 + 232), *(void *)(v0 + 208));
      }
      else
      {
        uint64_t v66 = *(void *)(v0 + 216);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
        sub_100029E40(v57, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
        (*(void (**)(void, void, void))(v66 + 32))(*(void *)(v0 + 176), *(void *)(v0 + 232), *(void *)(v0 + 208));
      }
      goto LABEL_22;
    }
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v70 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 328);
  uint64_t v7 = *(void *)(v0 + 336);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v72 = *(void *)(v0 + 312);
  uint64_t v73 = *(void *)(v0 + 184);
  sub_10002909C(0, &qword_10015E730, (uint64_t (*)(uint64_t))type metadata accessor for DetailTimelineEntry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100127010;
  sub_100029C14(v70, v12 + v11, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
  uint64_t v13 = sub_100009D98((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_100123270();
  sub_100009D98((void *)(*v13 + 16), *(void *)(*v13 + 40));
  sub_100123AB0();
  double v14 = (double)(unint64_t)sub_100123760();
  sub_1001237D0();
  sub_100123250();
  static TimelineReloadPolicy.after(_:jitteredUpTo:)(v14);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v15(v6, v72);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v73);
  v15(v7, v72);
  sub_10001C170();
  sub_1001259E0();
  sub_100029E40(v70, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
LABEL_22:
  sub_100009D48((uint64_t)v75);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v67 = *(uint64_t (**)(void))(v0 + 8);
  return v67();
}

uint64_t sub_10002437C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100013D40;
  return sub_10002441C(a1, a2);
}

uint64_t sub_10002441C(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_100123EC0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_1000244DC, 0, 0);
}

uint64_t sub_1000244DC()
{
  sub_100009D98(*(void **)(v0 + 32), *(void *)(*(void *)(v0 + 32) + 24));
  *(void *)(v0 + 64) = sub_100123960();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  void *v1 = v0;
  v1[1] = sub_1000245AC;
  return Promise.resolveAsync()(v0 + 16);
}

uint64_t sub_1000245AC()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000247A0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1000246D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000246D4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  sub_100009D98(*(void **)(v0 + 32), *(void *)(*(void *)(v0 + 32) + 24));
  sub_100123930();
  sub_100123E90();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000247A0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1000248C4;
  return sub_1000249BC(a1, a2, a3, a4);
}

uint64_t sub_1000248C4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000249BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  sub_10002909C(0, &qword_10015E828, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  v4[6] = swift_task_alloc();
  sub_10002909C(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  sub_100029204(0);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  uint64_t v5 = sub_1001240C0();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  uint64_t v6 = sub_1001232B0();
  v4[14] = v6;
  v4[15] = *(void *)(v6 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  uint64_t v7 = sub_1001240B0();
  v4[18] = v7;
  v4[19] = *(void *)(v7 - 8);
  v4[20] = swift_task_alloc();
  sub_100029DD8(0);
  v4[21] = swift_task_alloc();
  uint64_t v8 = sub_1001237F0();
  v4[22] = v8;
  v4[23] = *(void *)(v8 - 8);
  v4[24] = swift_task_alloc();
  return _swift_task_switch(sub_100024CC8, 0, 0);
}

uint64_t sub_100024CC8()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  sub_100009D98(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[25] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100024D84;
  uint64_t v5 = v0[24];
  return sub_100004CA4(v5, v3, v2);
}

uint64_t sub_100024D84()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 192);
  uint64_t v2 = *(void *)(*(void *)v0 + 184);
  uint64_t v3 = *(void *)(*(void *)v0 + 176);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100024EDC, 0, 0);
}

uint64_t sub_100024EDC()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = (void *)v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[13];
  uint64_t v5 = (void *)v0[4];
  uint64_t v6 = (uint64_t *)v0[5];
  uint64_t v7 = v5[3];
  uint64_t v18 = v5[4];
  sub_100009D98(v5, v7);
  uint64_t v8 = *v6;
  uint64_t v9 = v6[1];
  void *v2 = 0x4014000000000000;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v2, enum case for CachePolicy.maxAge(_:), v3);
  sub_1001232A0();
  uint64_t v10 = enum case for NetworkProxy.none(_:);
  uint64_t v11 = sub_1001240C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v4, v10, v11);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[26] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100025054;
  uint64_t v14 = v0[20];
  uint64_t v13 = v0[21];
  uint64_t v15 = v0[17];
  uint64_t v16 = v0[13];
  return QuoteDetailManagerType.fetchQuoteDetail(for:cachePolicy:earliestBeginDate:networkProxy:)(v13, v8, v9, v14, v15, v16, v7, v18);
}

uint64_t sub_100025054()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v13 = v2[20];
  uint64_t v3 = v2[19];
  uint64_t v12 = v2[18];
  uint64_t v4 = v2[17];
  uint64_t v5 = v2[15];
  uint64_t v6 = v2[14];
  uint64_t v7 = v2[13];
  uint64_t v8 = v2[12];
  uint64_t v9 = v2[11];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
    uint64_t v10 = sub_100025454;
  }
  else
  {
    (*(void (**)(void, void))(v8 + 8))(v2[13], v2[11]);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
    uint64_t v10 = sub_1000252D4;
  }
  return _swift_task_switch(v10, 0, 0);
}

uint64_t sub_1000252D4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[2];
  uint64_t v3 = sub_1001235E0();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100025454()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v7 = v0[7];
  uint64_t v6 = v0[8];
  uint64_t v15 = v0[6];
  uint64_t v16 = v1;
  uint64_t v8 = sub_1001235E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v1, 1, 1, v8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v9(v4, 1, 1, v3);
  v9(v5, 1, 1, v3);
  uint64_t v10 = sub_100123150();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v6, 1, 1, v10);
  v11(v7, 1, 1, v10);
  uint64_t v12 = sub_1001234F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v15, 1, 1, v12);
  sub_1001232A0();
  sub_100123530();
  sub_100029E40(v16, (uint64_t (*)(void))sub_100029DD8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100025744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  type metadata accessor for WidgetStock();
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_1000257DC, 0, 0);
}

uint64_t sub_1000257DC()
{
  uint64_t v1 = *(uint64_t **)(v0 + 32);
  sub_100009D98(*(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 24));
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10015E7F0 + dword_10015E7F0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000258A8;
  uint64_t v5 = *(void *)(v0 + 56);
  return v7(v5, v3, v2);
}

uint64_t sub_1000258A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100025BA8;
  }
  else
  {
    sub_100029404();
    *(_DWORD *)(v2 + 88) = *(_DWORD *)(v4 + 48);
    uint64_t v3 = sub_1000259CC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000259CC()
{
  uint64_t v1 = *(int *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_100029C14(*(void *)(v0 + 56), v2, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100025A90;
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 32);
  return sub_10002635C(v2 + v1, v6, v4, v5);
}

uint64_t sub_100025A90()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_100025C8C;
  }
  else
  {
    uint64_t v1 = sub_100025C0C;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_100025BA8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100025C0C()
{
  sub_100029E40(*(void *)(v0 + 56), (uint64_t (*)(void))type metadata accessor for WidgetStock);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100025C8C()
{
  uint64_t v1 = *(void *)(v0 + 16) + *(int *)(v0 + 88);
  sub_100029E40(*(void *)(v0 + 56), (uint64_t (*)(void))type metadata accessor for WidgetStock);
  sub_10002A270(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100025D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for WidgetStock();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  sub_100029C90(0);
  v4[9] = swift_task_alloc();
  return _swift_task_switch(sub_100025E8C, 0, 0);
}

uint64_t sub_100025E8C()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  sub_100029CC4();
  uint64_t v3 = swift_allocObject();
  v0[10] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_100127010;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100025F64;
  return sub_1000E68C4(v3);
}

uint64_t sub_100025F64(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1000262E8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100026080;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100026080()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[7];
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = v0[3];
      uint64_t v6 = v0[4];
      sub_100029C14(v4, v0[8], (uint64_t (*)(void))type metadata accessor for WidgetStock);
      if (sub_100123D20() == v7 && v8 == v6) {
        break;
      }
      char v10 = sub_100126530();
      swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_12;
      }
      sub_100029E40(v0[8], (uint64_t (*)(void))type metadata accessor for WidgetStock);
      v4 += v5;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_12:
    uint64_t v12 = v0[8];
    uint64_t v13 = v0[9];
    swift_bridgeObjectRelease();
    sub_100029D70(v12, v13, (uint64_t (*)(void))type metadata accessor for WidgetStock);
    uint64_t v11 = 0;
  }
  else
  {
LABEL_10:
    uint64_t v11 = 1;
  }
  uint64_t v14 = v0[9];
  uint64_t v15 = v0[6];
  uint64_t v16 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, v11, 1, v15);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100029E40(v0[9], (uint64_t (*)(void))sub_100029C90);
    sub_100029D1C();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    sub_100029D70(v0[9], v0[2], (uint64_t (*)(void))type metadata accessor for WidgetStock);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1000262E8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002635C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[39] = a4;
  v5[40] = v4;
  v5[37] = a2;
  v5[38] = a3;
  v5[36] = a1;
  v5[41] = *(void *)(type metadata accessor for HeadlineViewModel(0) - 8);
  v5[42] = swift_task_alloc();
  uint64_t v6 = sub_100124570();
  v5[43] = v6;
  v5[44] = *(void *)(v6 - 8);
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  v5[47] = swift_task_alloc();
  v5[48] = swift_task_alloc();
  uint64_t v7 = sub_1001258F0();
  v5[49] = v7;
  v5[50] = *(void *)(v7 - 8);
  v5[51] = swift_task_alloc();
  v5[52] = swift_task_alloc();
  sub_100125DC0();
  v5[53] = sub_100125DB0();
  uint64_t v9 = sub_100125D80();
  v5[54] = v9;
  v5[55] = v8;
  return _swift_task_switch(sub_100026544, v9, v8);
}

uint64_t sub_100026544()
{
  uint64_t v28 = v0;
  if (sub_100028228(*(void *)(v0 + 296), *(void *)(v0 + 304), *(void *)(v0 + 312)))
  {
    if (qword_10015D5E8 != -1) {
      swift_once();
    }
    sub_100029758((uint64_t)&unk_100172748, v0 + 96);
    sub_100009D98((void *)(v0 + 96), *(void *)(v0 + 120));
    sub_1000055F8(0, &qword_10015E800);
    uint64_t result = sub_100124100();
    if (*(void *)(v0 + 40))
    {
      uint64_t v3 = *(void *)(v0 + 408);
      uint64_t v2 = *(void *)(v0 + 416);
      uint64_t v4 = *(void *)(v0 + 392);
      uint64_t v5 = *(void *)(v0 + 400);
      sub_100029474((long long *)(v0 + 16), v0 + 56);
      sub_100009D48(v0 + 96);
      sub_100125980();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
      int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4);
      char v7 = 0;
      uint64_t v8 = 1;
      if (v6 != enum case for WidgetFamily.systemSmall(_:) && v6 != enum case for WidgetFamily.systemMedium(_:))
      {
        if (v6 == enum case for WidgetFamily.systemLarge(_:))
        {
          char v7 = 1;
          uint64_t v8 = 4;
        }
        else
        {
          uint64_t v8 = 0;
          char v7 = 0;
          if (v6 != enum case for WidgetFamily.accessoryCircular(_:)
            && v6 != enum case for WidgetFamily.accessoryRectangular(_:)
            && v6 != enum case for WidgetFamily.accessoryInline(_:))
          {
            return sub_100126290();
          }
        }
      }
      *(void *)(v0 + 448) = v8;
      *(unsigned char *)(v0 + 480) = v7;
      (*(void (**)(void, void))(*(void *)(v0 + 400) + 8))(*(void *)(v0 + 416), *(void *)(v0 + 392));
      sub_100009D98((void *)(v0 + 56), *(void *)(v0 + 80));
      uint64_t v23 = (void *)swift_task_alloc();
      *(void *)(v0 + 456) = v23;
      *uint64_t v23 = v0;
      v23[1] = sub_100026AE4;
      uint64_t v24 = *(void *)(v0 + 312);
      return sub_10000AA18(v24, v8);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 352);
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v11 = *(void *)(v0 + 344);
    uint64_t v12 = *(void *)(v0 + 320);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
    uint64_t v13 = sub_100124550();
    os_log_type_t v14 = sub_100125F60();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      if (qword_10015D4C8 != -1) {
        swift_once();
      }
      uint64_t v16 = *(void *)(v0 + 352);
      uint64_t v25 = *(void *)(v0 + 344);
      uint64_t v26 = *(void *)(v0 + 360);
      sub_100126690();
      *(void *)(v0 + 272) = sub_1000AB124(*(void *)(v0 + 160), *(void *)(v0 + 168), &v27);
      sub_100126030();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Skipping news fetch due to configuration or context. id=%s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v26, v25);
    }
    else
    {
      uint64_t v18 = *(void *)(v0 + 352);
      uint64_t v17 = *(void *)(v0 + 360);
      uint64_t v19 = *(void *)(v0 + 344);

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
    uint64_t v20 = *(void *)(v0 + 288);
    sub_10002A270(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  return result;
}

uint64_t sub_100026AE4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 464) = a1;
  *(void *)(v4 + 472) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 440);
  uint64_t v6 = *(void *)(v3 + 432);
  if (v1) {
    char v7 = sub_1000271FC;
  }
  else {
    char v7 = sub_100026C28;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100026C28()
{
  uint64_t v44 = v0;
  uint64_t v1 = (uint8_t *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 464);
  int v3 = *(unsigned __int8 *)(v0 + 480);
  swift_release();
  *(void *)(v0 + 256) = v2;
  if (v3 == 1)
  {
    uint64_t v4 = *(void *)(v0 + 464);
    unint64_t v5 = *(void *)(v4 + 16);
    if (v5 >= *(void *)(v0 + 448) && v5 != 0)
    {
      uint64_t v7 = *(void *)(v0 + 328);
      uint64_t v8 = *(void *)(v0 + 336);
      unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v10 = v4 + v9;
      uint64_t v11 = *(void *)(v7 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v12 = *(void *)(v0 + 336);
        sub_100029C14(v10, v12, type metadata accessor for HeadlineViewModel);
        uint64_t v13 = *(void *)(v8 + 104);
        sub_100029E40(v12, type metadata accessor for HeadlineViewModel);
        if (v13 != 1) {
          break;
        }
        v10 += v11;
        if (!--v5)
        {
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
      uint64_t v14 = *(void *)(v0 + 376);
      uint64_t v15 = *(void *)(v0 + 344);
      uint64_t v16 = *(void *)(v0 + 352);
      uint64_t v17 = *(void *)(v0 + 320);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v17, v15);
      uint64_t v18 = sub_100124550();
      os_log_type_t v19 = sub_100125F60();
      if (!os_log_type_enabled(v18, v19))
      {
        uint64_t v21 = *(void *)(v0 + 376);
        uint64_t v22 = *(void *)(v0 + 344);
        uint64_t v23 = *(void *)(v0 + 352);

        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
        goto LABEL_14;
      }
      uint64_t v42 = (uint8_t *)(v0 + 256);
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v1 = 136315138;
      if (qword_10015D4C8 != -1) {
        goto LABEL_29;
      }
      while (1)
      {
        uint64_t v20 = *(void *)(v0 + 352);
        uint64_t v39 = *(void *)(v0 + 344);
        uint64_t v40 = *(void *)(v0 + 376);
        sub_100126690();
        *(void *)(v0 + 280) = sub_1000AB124(*(void *)(v0 + 192), *(void *)(v0 + 200), &v43);
        sub_100126030();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Dropping headline because some have thumbnails. id=%s", v1, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v40, v39);
        uint64_t v1 = v42;
LABEL_14:
        unint64_t v24 = *(void *)v1;
        if (*(void *)(*(void *)v1 + 16))
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v1 = v24;
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v26 = *(void *)(v24 + 16);
            if (v26) {
              goto LABEL_17;
            }
            goto LABEL_28;
          }
        }
        else
        {
          __break(1u);
        }
        unint64_t v24 = sub_100029C7C(v24);
        *(void *)uint64_t v1 = v24;
        uint64_t v26 = *(void *)(v24 + 16);
        if (v26)
        {
LABEL_17:
          uint64_t v27 = v26 - 1;
          sub_100029E40(v24 + v9 + (v26 - 1) * v11, type metadata accessor for HeadlineViewModel);
          *(void *)(v24 + 16) = v27;
          *(void *)uint64_t v1 = v24;
          break;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        swift_once();
      }
    }
  }
LABEL_18:
  (*(void (**)(void, void, void))(*(void *)(v0 + 352) + 16))(*(void *)(v0 + 368), *(void *)(v0 + 320), *(void *)(v0 + 344));
  uint64_t v28 = *(void *)(v0 + 256);
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_100124550();
  os_log_type_t v30 = sub_100125F60();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 134218242;
    *(void *)(v0 + 224) = *(void *)(v28 + 16);
    sub_100126030();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v33 = *(void *)(v0 + 344);
    uint64_t v32 = *(void *)(v0 + 352);
    sub_100126690();
    *(void *)(v0 + 240) = sub_1000AB124(*(void *)(v0 + 208), *(void *)(v0 + 216), &v43);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Attempting to create NonEmpty headlines with %ld headlines. id=%s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v41, v33);
  }
  else
  {
    uint64_t v34 = *(void *)(v0 + 368);
    uint64_t v35 = *(void *)(v0 + 344);
    uint64_t v36 = *(void *)(v0 + 352);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
  }
  swift_beginAccess();
  *(void *)(v0 + 232) = *(void *)(v0 + 256);
  sub_10002919C(0);
  sub_1000291D0();
  sub_100124440();
  sub_100009D48(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37();
}

uint64_t sub_1000271FC()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[44];
  uint64_t v4 = v0[40];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v5 = sub_100124550();
  os_log_type_t v6 = sub_100125F60();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[31] = v9;
    sub_100126030();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v7 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[48];
    uint64_t v11 = v0[43];
    uint64_t v12 = v0[44];
    sub_100126690();
    v0[33] = sub_1000AB124(v0[22], v0[23], &v28);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Fetching headlines failed with error=%@, id=%s", (uint8_t *)v7, 0x16u);
    sub_10002909C(0, &qword_10015DF10, (uint64_t (*)(uint64_t))sub_100009DDC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  else
  {
    uint64_t v13 = v0[48];
    uint64_t v14 = v0[43];
    uint64_t v15 = v0[44];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  swift_errorRelease();
  v0[32] = _swiftEmptyArrayStorage;
  (*(void (**)(void, void, void))(v0[44] + 16))(v0[46], v0[40], v0[43]);
  uint64_t v16 = v0[32];
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_100124550();
  os_log_type_t v18 = sub_100125F60();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134218242;
    v0[28] = *(void *)(v16 + 16);
    sub_100126030();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v27 = v0[46];
    uint64_t v21 = v0[43];
    uint64_t v20 = v0[44];
    sub_100126690();
    v0[30] = sub_1000AB124(v0[26], v0[27], &v28);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Attempting to create NonEmpty headlines with %ld headlines. id=%s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v27, v21);
  }
  else
  {
    uint64_t v22 = v0[46];
    uint64_t v23 = v0[43];
    uint64_t v24 = v0[44];
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  swift_beginAccess();
  v0[29] = v0[32];
  sub_10002919C(0);
  sub_1000291D0();
  sub_100124440();
  sub_100009D48((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_1000277A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a4;
  _OWORD v8[3] = a5;
  type metadata accessor for DetailTimelineEntry();
  uint64_t v11 = swift_task_alloc();
  v8[4] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v8[5] = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_100027890;
  return sub_10001CC24(v11, a7, a8);
}

uint64_t sub_100027890()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10002798C, 0, 0);
}

uint64_t sub_10002798C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_100029E40(v1, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100027A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100125DE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_100125DD0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100029E40(a1, (uint64_t (*)(void))sub_100028C9C);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100125D80();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100027BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a4;
  _OWORD v8[3] = a5;
  sub_10002A270(0, &qword_10015E6F0, (uint64_t (*)(uint64_t))type metadata accessor for DetailTimelineEntry, sub_10001C170, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for Timeline);
  v8[4] = v11;
  v8[5] = *(void *)(v11 - 8);
  uint64_t v12 = swift_task_alloc();
  v8[6] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v8[7] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_100027D30;
  return sub_100023374(v12, a7, a8);
}

uint64_t sub_100027D30()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100027E2C, 0, 0);
}

uint64_t sub_100027E2C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100027EC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100124570();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029E0C(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123B50();
  uint64_t v11 = sub_100123A70();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v10, v11);
  }
  sub_100029E40((uint64_t)v10, (uint64_t (*)(void))sub_100029E0C);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v13 = sub_100124550();
  os_log_type_t v14 = sub_100125F60();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v19 = a2;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v22 = v18;
    *(_DWORD *)uint64_t v15 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    uint64_t v20 = sub_1000AB124(v20, v21, &v22);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Missing newsDisplayConfiguration on intent, id=%s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    a2 = v19;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v12 + 104))(a2, enum case for NewsDisplayConfiguration.afterHours(_:), v11);
}

uint64_t sub_100028228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1001236A0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029068(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100123A70();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DetailTimelineProvider.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1 + *(int *)(v16 + 20), v12);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v17 == enum case for NewsDisplayConfiguration.afterHours(_:))
  {
    uint64_t v18 = type metadata accessor for WidgetStock();
    sub_100029C14(a3 + *(int *)(v18 + 20), (uint64_t)v11, (uint64_t (*)(void))sub_100029068);
    uint64_t v19 = sub_100123670();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) != 1)
    {
      sub_100123610();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
      char v21 = sub_100123680();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v21 & 1;
    }
    sub_100029E40((uint64_t)v11, (uint64_t (*)(void))sub_100029068);
    goto LABEL_5;
  }
  if (v17 == enum case for NewsDisplayConfiguration.always(_:))
  {
LABEL_5:
    char v21 = 1;
    return v21 & 1;
  }
  if (v17 != enum case for NewsDisplayConfiguration.never(_:)) {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  char v21 = 0;
  return v21 & 1;
}

uint64_t sub_100028548@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001258F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100125980();
  sub_100070F24((uint64_t)v5, 0, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100028628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10001470C;
  return sub_10001CC24(a1, a2, a3);
}

uint64_t sub_1000286D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10001470C;
  return sub_100023374(a1, a2, a3);
}

uint64_t sub_100028788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1000287C8(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_100151800, (uint64_t)&unk_10015E850);
}

uint64_t sub_1000287A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1000287C8(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_100151738, (uint64_t)&unk_10015E6D8);
}

uint64_t sub_1000287C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v38 = a4;
  uint64_t v39 = a8;
  uint64_t v36 = a7;
  uint64_t v37 = a3;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v9 = sub_1001259A0();
  uint64_t v29 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v30 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100123B70();
  uint64_t v12 = *(void *)(v32 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v32);
  uint64_t v28 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *(void *)(a5 - 8);
  uint64_t v14 = *(void *)(v31 + 64);
  __chkstk_darwin(v15);
  uint64_t v16 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100028C9C(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100125DE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  sub_100029C14(v33, (uint64_t)v16, type metadata accessor for DetailTimelineProvider);
  uint64_t v21 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v32);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v9);
  unint64_t v22 = (*(unsigned __int8 *)(v31 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v23 = (v14 + *(unsigned __int8 *)(v12 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v24 = (v13 + *(unsigned __int8 *)(v10 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v25 = (char *)swift_allocObject();
  *((void *)v25 + 2) = 0;
  *((void *)v25 + 3) = 0;
  uint64_t v26 = v38;
  *((void *)v25 + 4) = v37;
  *((void *)v25 + 5) = v26;
  sub_100029D70((uint64_t)v16, (uint64_t)&v25[v22], type metadata accessor for DetailTimelineProvider);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v25[v23], v28, v21);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v25[v24], v30, v29);
  swift_retain();
  sub_100027A1C((uint64_t)v19, v39, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_100028B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10001470C;
  return AppIntentTimelineProvider.relevances()(a1, a2, a3);
}

uint64_t sub_100028BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10001470C;
  return AppIntentTimelineProvider.relevance()(a1, a2, a3);
}

void sub_100028C9C(uint64_t a1)
{
}

uint64_t sub_100028CD4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DetailTimelineProvider(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_100123B70() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_1001259A0() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = (uint64_t)v1 + v5;
  uint64_t v17 = (uint64_t)v1 + v8;
  uint64_t v18 = (uint64_t)v1 + (v11 & ~v10);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v19;
  *uint64_t v19 = v2;
  v19[1] = sub_100013D40;
  return sub_100027BD4(a1, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_100028E9C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10002AC0C;
  return v6(a1);
}

uint64_t sub_100028F78()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100028FB0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10001470C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10015E6E0 + dword_10015E6E0);
  return v6(a1, v4);
}

void sub_100029068(uint64_t a1)
{
}

void sub_10002909C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_100029100()
{
  if (!qword_10015E700)
  {
    sub_10002A270(255, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    unint64_t v0 = sub_100126010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E700);
    }
  }
}

void sub_10002919C(uint64_t a1)
{
}

uint64_t sub_1000291D0()
{
  return sub_10001C1EC(&qword_10015E718, sub_10002919C);
}

void sub_100029204(uint64_t a1)
{
}

void sub_100029238(uint64_t a1)
{
}

uint64_t sub_10002926C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 24);
  long long v7 = *(_OWORD *)(v1 + 40);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_10001470C;
  *(_OWORD *)(v5 + 48) = v6;
  *(_OWORD *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = v4;
  return _swift_task_switch(sub_10001D398, 0, 0);
}

uint64_t sub_100029330(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *long long v7 = v2;
  v7[1] = sub_10001470C;
  return sub_10001D640(a1, v4, v5, v6);
}

uint64_t type metadata accessor for DetailTimelineProvider.Configuration(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015E8D0);
}

void sub_100029404()
{
  if (!qword_10015E798)
  {
    type metadata accessor for WidgetStock();
    sub_100029100();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015E798);
    }
  }
}

uint64_t sub_100029474(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10002948C()
{
  sub_100009D48(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1000294C4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10001470C;
  return sub_10002437C(a1, v1 + 16);
}

uint64_t sub_100029564()
{
  uint64_t v1 = (int *)(type metadata accessor for DetailTimelineProvider.Configuration(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  sub_100009D48(v0 + 16);
  sub_100009D48(v0 + 56);
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[7];
  uint64_t v4 = sub_100123A70();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_100029668(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DetailTimelineProvider.Configuration(0) - 8);
  uint64_t v5 = v1 + 16;
  uint64_t v6 = v1 + 56;
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_100013D40;
  return sub_10002480C(a1, v5, v6, v7);
}

uint64_t sub_100029758(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1000297BC()
{
  uint64_t v1 = (int *)(type metadata accessor for DetailTimelineProvider.Configuration(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for DetailTimelineProvider(0) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = sub_1001259A0();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  sub_100009D48(v0 + 16);
  swift_bridgeObjectRelease();
  unint64_t v10 = v0 + v2 + v1[7];
  uint64_t v11 = sub_100123A70();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = sub_100124570();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v0 + v5, v12);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);

  return swift_deallocObject();
}

uint64_t sub_1000299DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DetailTimelineProvider.Configuration(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for DetailTimelineProvider(0) - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_1001259A0() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1 + 16;
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_10001470C;
  return sub_100025744(a1, v12, v13, v14, v15);
}

uint64_t sub_100029B8C@<X0>(char *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1000BFCDC(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_100029BB0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10002A270(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100029C14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100029C7C(unint64_t a1)
{
  return sub_10009B668(0, *(void *)(a1 + 16), 0, a1);
}

void sub_100029C90(uint64_t a1)
{
}

void sub_100029CC4()
{
  if (!qword_10015E810)
  {
    unint64_t v0 = sub_100126500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E810);
    }
  }
}

unint64_t sub_100029D1C()
{
  unint64_t result = qword_10015E818;
  if (!qword_10015E818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10015E818);
  }
  return result;
}

uint64_t sub_100029D70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_100029DD8(uint64_t a1)
{
}

void sub_100029E0C(uint64_t a1)
{
}

uint64_t sub_100029E40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100029EA4()
{
  uint64_t v1 = *(void *)(type metadata accessor for DetailTimelineProvider(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_100123B70();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_1001259A0();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v11 = sub_100124570();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v2, v11);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v8);

  return swift_deallocObject();
}

uint64_t sub_10002A0A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DetailTimelineProvider(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_100123B70() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(sub_1001259A0() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = (uint64_t)v1 + v5;
  uint64_t v17 = (uint64_t)v1 + v8;
  uint64_t v18 = (uint64_t)v1 + (v11 & ~v10);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v19;
  *uint64_t v19 = v2;
  v19[1] = sub_10001470C;
  return sub_1000277A8(a1, v12, v13, v14, v15, v16, v17, v18);
}

void sub_10002A270(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_10002A2F0(uint64_t a1)
{
}

uint64_t sub_10002A324()
{
  return sub_10001C1EC(&qword_10015E868, sub_10002A2F0);
}

void sub_10002A358(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v27 = a1;
  uint64_t v9 = sub_100123D40();
  uint64_t v32 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for WidgetStock();
  uint64_t v26 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v30 = a5 >> 1;
  uint64_t v31 = a4;
  BOOL v15 = __OFSUB__(a5 >> 1, a4);
  uint64_t v16 = (a5 >> 1) - a4;
  if (v15) {
    goto LABEL_19;
  }
  if (v16)
  {
    uint64_t v33 = _swiftEmptyArrayStorage;
    sub_10009BA7C(0, v16 & ~(v16 >> 63), 0);
    if (v16 < 0)
    {
LABEL_20:
      __break(1u);
      return;
    }
    uint64_t v17 = 0;
    uint64_t v24 = v9;
    uint64_t v25 = v32 + 16;
    uint64_t v18 = (void (**)(char *, uint64_t))(v32 + 8);
    unint64_t v23 = v14;
    while (1)
    {
      uint64_t v19 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        break;
      }
      if (v31 + v17 >= v30 || v17 >= v16) {
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v11, v29 + *(void *)(v32 + 72) * (v31 + v17), v9);
      v27(v11);
      if (v6)
      {
        (*v18)(v11, v9);
        swift_release();
        return;
      }
      uint64_t v6 = 0;
      (*v18)(v11, v9);
      uint64_t v20 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10009BA7C(0, v20[2] + 1, 1);
        uint64_t v20 = v33;
      }
      unint64_t v22 = v20[2];
      unint64_t v21 = v20[3];
      if (v22 >= v21 >> 1)
      {
        sub_10009BA7C(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v33;
      }
      v20[2] = v22 + 1;
      sub_100029D70((uint64_t)v23, (uint64_t)v20+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v22, (uint64_t (*)(void))type metadata accessor for WidgetStock);
      ++v17;
      uint64_t v9 = v24;
      if (v19 == v16) {
        return;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t *sub_10002A658(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_100123A70();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_10002A740(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100123A70();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10002A7B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_100123A70();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_10002A850(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100123A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_10002A8EC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100123A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_10002A968(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100123A70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10002A9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002AA08);
}

uint64_t sub_10002AA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100123A70();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10002AAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002AACC);
}

uint64_t sub_10002AACC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100123A70();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10002AB74()
{
  uint64_t result = sub_100123A70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithCopy for VFlowGridLayout(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VFlowGridLayout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VFlowGridLayout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VFlowGridLayout()
{
  return &type metadata for VFlowGridLayout;
}

uint64_t sub_10002AC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_10002AC80(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10002ACB8()
{
  return swift_bridgeObjectRelease();
}

void *sub_10002ACC0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_10002AD0C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10002AD48(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10002AD90(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for EqualWidthColumnsLayout()
{
  return sub_10002E8B0();
}

unint64_t sub_10002ADEC()
{
  unint64_t result = qword_10015E990;
  if (!qword_10015E990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E990);
  }
  return result;
}

uint64_t sub_10002AE40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v10 = sub_100124A20();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E19C(qword_10015E908);
  uint64_t result = sub_100125EC0();
  uint64_t v15 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_100125D30();
  if (!result)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (v15 == 0x8000000000000000 && result == -1) {
    goto LABEL_10;
  }
  uint64_t v16 = v15 / result;
  if (v15 / result <= a2) {
    uint64_t v16 = a2;
  }
  uint64_t v22 = v16;
  uint64_t v26 = a3;
  sub_100125D50();
  swift_getWitnessTable();
  sub_100125C10();
  uint64_t v25 = v27;
  sub_1001262B0();
  swift_getWitnessTable();
  sub_100125C20();
  swift_bridgeObjectRelease();
  uint64_t v25 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v18 = (v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v23;
  *(void *)(v19 + 16) = a4;
  *(void *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v17, v13, v10);
  *(void *)(v19 + v18) = v22;
  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = a4;
  v21[3] = v20;
  v21[4] = sub_10002E5DC;
  v21[5] = v19;
  sub_100126110();
  swift_getWitnessTable();
  sub_100126320();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_10002B14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100124A20();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v9, a3, v7, v11);
  if ((unsigned __int128)(a1 * (__int128)a4) >> 64 == (a1 * a4) >> 63)
  {
    sub_10002E19C(qword_10015E908);
    sub_100125EE0();
    sub_10001C788(a4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10002B2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = a3;
  swift_bridgeObjectRetain();
  sub_10002AE40(a1, a2, a3, a4, a5, (uint64_t)v32);
  uint64_t v10 = sub_100125D50();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1001262B0();
  sub_100124A20();
  swift_getWitnessTable();
  uint64_t v12 = sub_100126260();
  uint64_t v13 = swift_getWitnessTable();
  sub_100126560();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v32[0] = v34;
  v32[1] = v35;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v23 = sub_10002E800;
  uint64_t v24 = &v25;
  uint64_t v28 = v10;
  uint64_t v29 = v12;
  uint64_t v30 = WitnessTable;
  uint64_t v31 = v13;
  uint64_t v14 = sub_100126150();
  AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v18 = sub_10002B508((void (*)(char *, char *))sub_10002E834, (uint64_t)v20, v14, AssociatedTypeWitness, (uint64_t)&type metadata for Never, v16, (uint64_t)&protocol witness table for Never, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v18;
}

uint64_t sub_10002B508(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v55 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_100126010();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  __chkstk_darwin(v18);
  uint64_t v51 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v40 - v21;
  __chkstk_darwin(v23);
  uint64_t v40 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v50 = *((void *)v15 - 1);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v30 = (char *)&v40 - v29;
  Swift::Int v31 = sub_100125C00();
  uint64_t v61 = sub_100126240();
  uint64_t v56 = sub_100126250();
  sub_1001261F0(v31);
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = sub_100125BE0();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    long long v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_100126020();
      uint64_t result = (*v33)(v22, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v22, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v22, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v22, AssociatedTypeWitness);
      sub_100126230();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_100126020();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_100126230();
      sub_100126020();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_10002BC04(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRelease();
  uint64_t result = sub_10002B2A4(a2, a3, a4, a5, a6);
  *a1 = result;
  return result;
}

uint64_t sub_10002BC7C(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = sub_100125D30();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v48 = a3;
    int v49 = a4;
    uint64_t v50 = a6;
    double v21 = *(double *)&a1;
    int v52 = a2;
    if ((a2 & 1) == 0) {
      double v21 = (*(double *)&a1 - (double)(result - 1) * a9) / (double)sub_100125D30();
    }
    double v47 = v21;
    uint64_t v51 = a1;
    sub_10002AE40(a5, a7, a8, a10, a11, (uint64_t)&v57);
    long long v46 = v57;
    *(void *)&long long v64 = a8;
    sub_100125D50();
    swift_getWitnessTable();
    sub_100125E40();
    long long v62 = v63;
    swift_getWitnessTable();
    sub_1001262B0();
    sub_100124A20();
    swift_getWitnessTable();
    uint64_t v22 = sub_100126260();
    sub_10002E48C();
    uint64_t v24 = v23;
    uint64_t WitnessTable = swift_getWitnessTable();
    unint64_t v26 = sub_10002E4EC();
    uint64_t v60 = &protocol witness table for Int;
    unint64_t v61 = v26;
    uint64_t v27 = swift_getWitnessTable();
    sub_100126560();
    swift_release();
    uint64_t v28 = swift_bridgeObjectRelease();
    long long v57 = v64;
    uint64_t v58 = v65;
    long long v59 = v66;
    __chkstk_darwin(v28);
    v41[6] = a10;
    v41[7] = a11;
    *(double *)&v41[8] = a9;
    v41[9] = a7;
    v41[10] = a8;
    *(double *)&v41[11] = v47;
    char v42 = v52 & 1;
    uint64_t v43 = v48;
    char v44 = v49 & 1;
    uint64_t v45 = v50;
    __chkstk_darwin(v29);
    v41[2] = sub_10002E750;
    v41[3] = v30;
    uint64_t v53 = v22;
    uint64_t v54 = v24;
    uint64_t v55 = WitnessTable;
    uint64_t v56 = v27;
    uint64_t v31 = sub_100126150();
    uint64_t v32 = swift_getWitnessTable();
    uint64_t v34 = sub_10002B508((void (*)(char *, char *))sub_10002E7A0, (uint64_t)v41, v31, (char *)&type metadata for Double, (uint64_t)&type metadata for Never, v32, (uint64_t)&protocol witness table for Never, v33);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      double v36 = *(double *)(v34 + 32);
      uint64_t v37 = v35 - 1;
      if (v37)
      {
        uint64_t v38 = (double *)(v34 + 40);
        do
        {
          double v39 = *v38++;
          double v40 = v39;
          if (v36 < v39) {
            double v36 = v40;
          }
          --v37;
        }
        while (v37);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_10002C0DC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8, uint64_t *a9, uint64_t a10)
{
  v19[0] = a1;
  v19[1] = a7;
  uint64_t v13 = *(void *)(a10 - 8);
  __chkstk_darwin(a1);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100125D60();
  swift_getAssociatedTypeWitness();
  sub_100125D50();
  sub_100125D00();
  sub_10002D9C0(a2, *a9);
  _swift_isClassOrObjCExistentialType();
  char v21 = a6 & 1;
  char v20 = a8 & 1;
  sub_100125690();
  double v17 = v16;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a10);
  return v17;
}

uint64_t sub_10002C2C0(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, uint64_t a14, uint64_t a15)
{
  *(void *)&long long v68 = a7;
  long long v64 = a6;
  uint64_t v63 = a3;
  uint64_t v22 = *(void *)(a14 - 8);
  __chkstk_darwin(a1);
  long long v62 = &v52[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = sub_100124A20();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  unint64_t v61 = &v52[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E3D0(0, &qword_10015E9D8, (void (*)(uint64_t))sub_10002E424);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = &v52[-v28];
  uint64_t result = sub_100125D30();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    double v31 = *(double *)&a1;
    if (a2) {
      double v31 = 10.0;
    }
    double v32 = (v31 - (double)(result - 1) * a13) / (double)result;
    double v56 = v32;
    uint64_t v57 = a15;
    sub_10002AE40(a5, v68, a8, a14, a15, (uint64_t)&v79);
    int v53 = a4;
    long long v68 = v79;
    long long v69 = v79;
    uint64_t v70 = v80;
    uint64_t v60 = a8;
    *(void *)&long long v76 = a8;
    uint64_t v58 = a14;
    sub_100125D50();
    swift_getWitnessTable();
    sub_100125E40();
    long long v74 = v75;
    swift_getWitnessTable();
    sub_1001262B0();
    swift_getWitnessTable();
    uint64_t v59 = v24;
    uint64_t v33 = sub_100126260();
    sub_10002E48C();
    uint64_t v35 = v34;
    uint64_t WitnessTable = swift_getWitnessTable();
    unint64_t v37 = sub_10002E4EC();
    uint64_t v72 = &protocol witness table for Int;
    unint64_t v73 = v37;
    uint64_t v38 = swift_getWitnessTable();
    sub_100126560();
    swift_release();
    swift_bridgeObjectRelease();
    long long v69 = v76;
    uint64_t v70 = v77;
    long long v71 = v78;
    *(void *)&long long v68 = v33;
    *(void *)&long long v79 = v33;
    *((void *)&v79 + 1) = v35;
    uint64_t v67 = v35;
    uint64_t v66 = WitnessTable;
    uint64_t v80 = WitnessTable;
    uint64_t v81 = v38;
    uint64_t v65 = v38;
    sub_100126150();
    sub_100126120();
    uint64_t v55 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32);
    uint64_t v54 = (void (**)(unsigned char *, uint64_t))(v22 + 8);
    double v39 = (void (**)(unsigned char *, uint64_t))(v25 + 8);
    double v40 = v32 + a13;
    v53 &= 1u;
    uint64_t v41 = v61;
    char v42 = v62;
    uint64_t v43 = v58;
    while (1)
    {
      *(void *)&long long v76 = v68;
      *((void *)&v76 + 1) = v67;
      uint64_t v77 = v66;
      *(void *)&long long v78 = v65;
      sub_100126140();
      sub_100126130();
      sub_10002E424();
      uint64_t v45 = v44;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v29, 1, v44) == 1) {
        break;
      }
      unint64_t v46 = *(void *)&v29[*(int *)(v45 + 48)];
      double v47 = v29;
      uint64_t v48 = v29;
      uint64_t v49 = v59;
      (*v55)(v41, v47, v59);
      sub_100125D60();
      swift_getAssociatedTypeWitness();
      sub_100125D50();
      uint64_t v50 = v64;
      sub_100125D00();
      sub_10002D9C0(v46, *v50);
      _swift_isClassOrObjCExistentialType();
      LOBYTE(v76) = 0;
      LOBYTE(v69) = v53;
      sub_1001256A0();
      (*v54)(v42, v43);
      uint64_t v51 = v49;
      uint64_t v29 = v48;
      (*v39)(v41, v51);
      a9 = v40 + a9;
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10002C9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_10002B2A4(a1, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(a2 + 16), *(void *)(a2 + 24));
  *a3 = result;
  return result;
}

uint64_t sub_10002C9E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10002BC04(a1, a2, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_10002CA00(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10002BC7C(a1, a2 & 1, a3, a4 & 1, a5, a6, *(void *)(v7 + 8), *(void *)(v7 + 16), *(double *)v7, *(void *)(a7 + 16), *(void *)(a7 + 24));
}

uint64_t sub_10002CA44(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t *a6, uint64_t a7, double a8, double a9, double a10, double a11)
{
  return sub_10002C2C0(a1, a2 & 1, a3, a4 & 1, a5, a6, *(void *)(v11 + 8), *(void *)(v11 + 16), a8, a9, a10, a11, *(double *)v11, *(void *)(a7 + 16), *(void *)(a7 + 24));
}

uint64_t sub_10002CA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10002CAF8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_10002CAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10002CAF8(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_10002CAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

uint64_t sub_10002CB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return nullsub_1(a2, a3);
}

uint64_t (*sub_10002CB48(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100124870();
  return sub_10002CBB8;
}

uint64_t sub_10002CBC0(unsigned int (**a1)(void *, uint64_t, uint64_t), int a2, void (**a3)(char *, char *, uint64_t), int a4, uint64_t a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11, uint64_t a12, void (**a13)(char *, uint64_t, uint64_t, uint64_t), void (**a14)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v105 = a14;
  uint64_t v103 = a13;
  LODWORD(v100) = a4;
  uint64_t v104 = (void (**)(char *, char *, uint64_t))a3;
  LODWORD(v99) = a2;
  uint64_t v102 = a1;
  sub_10002D8D0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v106 = v21;
  uint64_t v107 = v22;
  __chkstk_darwin(v21);
  uint64_t v91 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E3D0(0, &qword_10015E9A8, (void (*)(uint64_t))&type metadata accessor for LayoutSubview);
  __chkstk_darwin(v24 - 8);
  uint64_t v92 = (char *)&v80 - v25;
  uint64_t v26 = sub_1001249E0();
  unint64_t v101 = *(char **)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v90 = (char *)&v80 - v30;
  sub_10002E3D0(0, &qword_10015E9B0, (void (*)(uint64_t))sub_10002D8D0);
  __chkstk_darwin(v31 - 8);
  uint64_t v108 = (char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (uint64_t *)((char *)&v80 - v34);
  uint64_t v98 = (char *)&protocol conformance descriptor for LayoutSubviews;
  sub_10002D93C(0, &qword_10015E9B8, &qword_10015E9C0, (uint64_t)&protocol conformance descriptor for LayoutSubviews, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for EnumeratedSequence);
  __chkstk_darwin(v36 - 8);
  uint64_t v38 = (char *)&v80 - v37;
  sub_10002D93C(0, &qword_10015E9C8, &qword_10015E9C0, (uint64_t)&protocol conformance descriptor for LayoutSubviews, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for EnumeratedSequence.Iterator);
  os_log_type_t v95 = (char *)(v39 - 8);
  __chkstk_darwin(v39 - 8);
  uint64_t v41 = (char *)&v80 - v40;
  uint64_t v42 = sub_100124A20();
  uint64_t v94 = *(void *)(v42 - 8);
  uint64_t v43 = v94;
  __n128 v44 = __chkstk_darwin(v42);
  unint64_t v46 = (char *)&v80 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v47 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v43 + 16);
  v47(v46, a5, v42, v44);
  LOBYTE(v111) = v99 & 1;
  LOBYTE(v110[0]) = v100 & 1;
  double v84 = a10;
  sub_10002DAFC((uint64_t)v103, (uint64_t)v105, *(double *)&v102, v99 & 1, *(double *)&v104, v100 & 1, (uint64_t)v46, (uint64_t)&v111, a10, a11);
  CGFloat v81 = a6;
  v114.origin.double x = a6;
  CGFloat v82 = a7;
  v114.origin.double y = a7;
  CGFloat v83 = a8;
  v114.size.width = a8;
  CGFloat v48 = a9;
  v114.size.height = a9;
  CGRect v115 = CGRectStandardize(v114);
  double x = v115.origin.x;
  double y = v115.origin.y;
  uint64_t v97 = v43 + 16;
  uint64_t v96 = (void (*)(char *, char *, uint64_t))v47;
  ((void (*)(char *, uint64_t, uint64_t))v47)(v38, a5, v42);
  uint64_t v51 = v94 + 32;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v46, v38, v42);
  uint64_t v52 = v51;
  sub_10002E19C(&qword_10015E9C0);
  uint64_t v98 = v46;
  sub_100125BE0();
  uint64_t v89 = *((int *)v95 + 11);
  *(void *)&v41[v89] = 0;
  sub_10002D93C(0, &qword_10015E9D0, qword_10015E908, (uint64_t)&protocol conformance descriptor for LayoutSubviews, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IndexingIterator);
  uint64_t v54 = &v41[*(int *)(v53 + 36)];
  uint64_t v55 = (uint64_t)v92;
  uint64_t v56 = sub_10002E19C(qword_10015E908);
  os_log_type_t v95 = v101 + 16;
  uint64_t v94 = v52 - 24;
  uint64_t v57 = v54;
  uint64_t v105 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56);
  uint64_t v93 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
  uint64_t v104 = (void (**)(char *, char *, uint64_t))(v101 + 32);
  uint64_t v103 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56);
  uint64_t v102 = (unsigned int (**)(void *, uint64_t, uint64_t))(v107 + 48);
  uint64_t v99 = (void (**)(char *, uint64_t))(v101 + 8);
  uint64_t v107 = v26;
  unint64_t v101 = v41;
  uint64_t v100 = v56;
  uint64_t v88 = v35;
  uint64_t v87 = v42;
  uint64_t v86 = v28;
  char v85 = v54;
  while (1)
  {
    uint64_t v58 = *(void *)v57;
    sub_100125EA0();
    if (v58 == v110[0])
    {
      (*v105)(v55, 1, 1, v26);
      uint64_t v59 = v106;
LABEL_6:
      sub_10002E1E0(v55);
      uint64_t v63 = 1;
      long long v64 = v104;
      goto LABEL_9;
    }
    uint64_t v60 = (void (*)(uint64_t *, void))sub_100125F00();
    (*(void (**)(uint64_t))v95)(v55);
    v60(v110, 0);
    unint64_t v61 = v98;
    v96(v98, v41, v42);
    sub_100125EB0();
    (*(void (**)(char *, uint64_t))v94)(v61, v42);
    (*v105)(v55, 0, 1, v26);
    int v62 = (*v93)(v55, 1, v26);
    uint64_t v59 = v106;
    if (v62 == 1) {
      goto LABEL_6;
    }
    uint64_t v65 = v107;
    uint64_t v66 = v108;
    long long v64 = v104;
    uint64_t v67 = (uint64_t (*)(char *, char *, uint64_t))*v104;
    long long v68 = v90;
    (*v104)(v90, (char *)v55, v107);
    uint64_t v69 = v59;
    uint64_t v70 = &v91[*(int *)(v59 + 48)];
    uint64_t v71 = v89;
    uint64_t v72 = *(void *)&v41[v89];
    uint64_t result = v67(v70, v68, v65);
    if (__OFADD__(v72, 1)) {
      goto LABEL_18;
    }
    *(void *)&v41[v71] = v72 + 1;
    long long v74 = (char *)v66 + *(int *)(v69 + 48);
    void *v66 = v72;
    v67(v74, v70, v65);
    uint64_t v63 = 0;
    uint64_t v59 = v69;
    uint64_t v55 = (uint64_t)v92;
    uint64_t v28 = v86;
    uint64_t v35 = v88;
    uint64_t v42 = v87;
    uint64_t v57 = v85;
LABEL_9:
    uint64_t v75 = (uint64_t)v108;
    (*v103)(v108, v63, 1, v59);
    sub_10002E258(v75, (uint64_t)v35);
    if ((*v102)(v35, 1, v59) == 1) {
      return sub_10002E2D8((uint64_t)v101, &qword_10015E9C8, &qword_10015E9C0, (uint64_t)&protocol conformance descriptor for LayoutSubviews, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for EnumeratedSequence.Iterator);
    }
    uint64_t v76 = *v35;
    uint64_t v26 = v107;
    (*v64)(v28, (char *)v35 + *(int *)(v59 + 48), v107);
    double v77 = v112;
    double v78 = v113;
    v117.origin.double x = x;
    v117.origin.double y = y;
    v117.size.width = v112;
    v117.size.height = v113;
    CGRectGetMidX(v117);
    v118.origin.double x = x;
    v118.origin.double y = y;
    v118.size.width = v77;
    v118.size.height = v78;
    CGRectGetMidY(v118);
    sub_100125870();
    LOBYTE(v110[0]) = 0;
    char v109 = 0;
    uint64_t result = sub_1001249C0();
    uint64_t v79 = v76 + 1;
    if (__OFADD__(v76, 1)) {
      break;
    }
    uint64_t v41 = v101;
    if (v111)
    {
      if (v111 == -1) {
        goto LABEL_2;
      }
      v79 %= v111;
    }
    if (v79)
    {
      (*v99)(v28, v26);
      double y = y + v78 + a11;
    }
    else
    {
LABEL_2:
      v116.origin.double x = v81;
      v116.origin.double y = v82;
      v116.size.width = v83;
      v116.size.height = v48;
      double y = CGRectGetMinY(v116);
      (*v99)(v28, v26);
      double x = x + v77 + v84;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_10002D67C()
{
  return sub_100124B40();
}

double sub_10002D6B0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v11 = sub_100124A20();
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *v5;
  double v16 = *((double *)v5 + 1);
  uint64_t v17 = v5[2];
  double v18 = *((double *)v5 + 3);
  (*(void (**)(unsigned char *, uint64_t, __n128))(v19 + 16))(v14, a5, v12);
  v22[0] = a2 & 1;
  v21[0] = a4 & 1;
  sub_10002DAFC(v15, v17, *(double *)&a1, a2 & 1, *(double *)&a3, a4 & 1, (uint64_t)v14, (uint64_t)v22, v16, v18);
  return v23;
}

uint64_t sub_10002D7EC(unsigned int (**a1)(void *, uint64_t, uint64_t), char a2, void (**a3)(char *, char *, uint64_t), char a4, uint64_t a5, uint64_t a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  return sub_10002CBC0(a1, a2 & 1, a3, a4 & 1, a5, a7, a8, a9, a10, *(double *)(v10 + 8), *(double *)(v10 + 24), a6, *(void (***)(char *, uint64_t, uint64_t, uint64_t))v10, *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16));
}

void sub_10002D814(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_10002D85C()
{
  return swift_getWitnessTable();
}

unint64_t sub_10002D87C()
{
  unint64_t result = qword_10015E998;
  if (!qword_10015E998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E998);
  }
  return result;
}

void sub_10002D8D0()
{
  if (!qword_10015E9A0)
  {
    sub_1001249E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015E9A0);
    }
  }
}

void sub_10002D93C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = sub_100124A20();
    uint64_t v10 = sub_10002E19C(a3);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_10002D9C0(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_10002DA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100124A20();
  sub_10002E19C(qword_10015E908);
  sub_100125E50();
  sub_100125EA0();
  uint64_t result = sub_100125E90();
  if (!a2)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (result == 0x8000000000000000 && a2 == -1) {
    goto LABEL_11;
  }
  BOOL v6 = result % a2 > 0;
  if (__OFADD__(result / a2, v6))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  if (result / a2 + v6 <= a3) {
    return a3;
  }
  else {
    return result / a2 + v6;
  }
}

uint64_t sub_10002DAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, int a4@<W3>, double a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  int v74 = a4;
  int v75 = a6;
  uint64_t v71 = a2;
  uint64_t v17 = sub_1001249E0();
  unint64_t v62 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v69 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100124A20();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v72 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E3D0(0, &qword_10015E9A8, (void (*)(uint64_t))&type metadata accessor for LayoutSubview);
  __chkstk_darwin(v22 - 8);
  unint64_t v73 = (char *)&v57 - v23;
  sub_10002D93C(0, &qword_10015E9D0, qword_10015E908, (uint64_t)&protocol conformance descriptor for LayoutSubviews, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IndexingIterator);
  unint64_t v66 = v24;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v57 - v28;
  uint64_t result = sub_10002DA14(a7, a1, v71);
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (__OFSUB__(result, 1))
  {
LABEL_22:
    __break(1u);
    return result;
  }
  double v31 = (double)(a1 - 1) * a9;
  double v32 = (double)(result - 1) * a10;
  double v33 = (double)a1;
  double v34 = (a3 - v31) / (double)a1;
  if (v74) {
    double v34 = a3;
  }
  double v68 = v34;
  uint64_t v59 = result;
  double v35 = (double)result;
  double v36 = (a5 - v32) / (double)result;
  if (v75) {
    double v36 = a5;
  }
  double v67 = v36;
  uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v71 = v20 + 16;
  v70(v26, a7, v19);
  sub_10002E19C(qword_10015E908);
  sub_100125E50();
  unint64_t v37 = v66;
  *(void *)&v26[*(int *)(v66 + 36)] = v77[0];
  sub_10002E334((uint64_t)v26, (uint64_t)v29);
  uint64_t v38 = &v29[*(int *)(v37 + 36)];
  uint64_t v39 = v29;
  uint64_t v40 = *(void *)v38;
  uint64_t v61 = (uint64_t)v39;
  sub_100125EA0();
  uint64_t v60 = v20;
  if (v40 == v77[0])
  {
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
    double v45 = 0.0;
    double v44 = 0.0;
    unint64_t v46 = v73;
LABEL_18:
    uint64_t v55 = v59;
    v41(v46, 1, 1, v17);
    uint64_t v56 = v61;
  }
  else
  {
    uint64_t v57 = a7;
    uint64_t v58 = a8;
    uint64_t v65 = (void (**)(char *, uint64_t))(v20 + 8);
    unint64_t v66 = v62 + 16;
    uint64_t v42 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
    uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
    long long v64 = (void (**)(char *, char *, uint64_t))(v62 + 32);
    uint64_t v63 = (void (**)(char *, uint64_t))(v62 + 8);
    double v44 = 0.0;
    unint64_t v62 = (v62 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    double v45 = 0.0;
    unint64_t v46 = v73;
    uint64_t v47 = v61;
    while (1)
    {
      CGFloat v48 = (void (*)(uint64_t *, void))sub_100125F00();
      (*(void (**)(char *))v66)(v46);
      v48(v77, 0);
      uint64_t v49 = v72;
      v70(v72, v47, v19);
      sub_100125EB0();
      (*v65)(v49, v19);
      uint64_t v41 = *v42;
      (*v42)(v46, 0, 1, v17);
      if ((*v43)(v46, 1, v17) == 1) {
        break;
      }
      uint64_t v50 = v69;
      (*v64)(v69, v46, v17);
      LOBYTE(v77[0]) = v74 & 1;
      char v76 = v75 & 1;
      sub_1001249B0();
      if (v44 <= v51) {
        double v44 = v51;
      }
      if (v45 <= v52) {
        double v45 = v52;
      }
      (*v63)(v50, v17);
      uint64_t v53 = *(void *)v38;
      sub_100125EA0();
      BOOL v54 = v53 == v77[0];
      unint64_t v46 = v73;
      if (v54)
      {
        a8 = v58;
        a7 = v57;
        goto LABEL_18;
      }
    }
    a8 = v58;
    uint64_t v55 = v59;
    uint64_t v56 = v47;
    a7 = v57;
  }
  sub_10002E2D8(v56, &qword_10015E9D0, qword_10015E908, (uint64_t)&protocol conformance descriptor for LayoutSubviews, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IndexingIterator);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(a7, v19);
  *(void *)a8 = v55;
  *(double *)(a8 + 8) = v44;
  *(double *)(a8 + 16) = v45;
  *(double *)(a8 + 24) = v31 + v44 * v33;
  *(double *)(a8 + 32) = v32 + v45 * v35;
  return result;
}

uint64_t sub_10002E19C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100124A20();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002E1E0(uint64_t a1)
{
  sub_10002E3D0(0, &qword_10015E9A8, (void (*)(uint64_t))&type metadata accessor for LayoutSubview);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002E258(uint64_t a1, uint64_t a2)
{
  sub_10002E3D0(0, &qword_10015E9B0, (void (*)(uint64_t))sub_10002D8D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002E2D8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  sub_10002D93C(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_10002E334(uint64_t a1, uint64_t a2)
{
  sub_10002D93C(0, &qword_10015E9D0, qword_10015E908, (uint64_t)&protocol conformance descriptor for LayoutSubviews, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IndexingIterator);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10002E3D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100126010();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10002E424()
{
  if (!qword_10015E9E0)
  {
    sub_100124A20();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015E9E0);
    }
  }
}

void sub_10002E48C()
{
  if (!qword_10015E9E8)
  {
    unint64_t v0 = sub_100125F10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E9E8);
    }
  }
}

unint64_t sub_10002E4EC()
{
  unint64_t result = qword_10015E9F0[0];
  if (!qword_10015E9F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10015E9F0);
  }
  return result;
}

uint64_t sub_10002E540()
{
  uint64_t v1 = sub_100124A20();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_10002E5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100124A20() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_10002B14C(a1, a2, v2 + v6, v7);
}

uint64_t sub_10002E6A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10002E6DC(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 32);
  uint64_t v4 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

double sub_10002E750(uint64_t a1, unint64_t a2)
{
  return sub_10002C0DC(a1, a2, *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64), *(void *)(v2 + 72), *(unsigned char *)(v2 + 80), *(uint64_t **)(v2 + 88), *(void *)(v2 + 16));
}

void sub_10002E7A0(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v5 = *(double (**)(uint64_t, void))(v2 + 16);
  sub_10002E424();
  *a2 = v5(a1, *(void *)(a1 + *(int *)(v6 + 48)));
}

uint64_t sub_10002E800()
{
  return sub_1001256B0();
}

uint64_t sub_10002E834(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  sub_100124A20();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_10002E8B0()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10002E8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t type metadata accessor for EqualWidthColumnsLayout.Cache()
{
  return sub_10002E8B0();
}

id sub_10002E904(uint64_t a1)
{
  return sub_10002E958(a1, 2, &qword_1001724F0);
}

id sub_10002E914(uint64_t a1)
{
  return sub_10002E958(a1, 3, &qword_1001724F8);
}

id sub_10002E924()
{
  id result = sub_10002EA38(3);
  qword_100172500 = (uint64_t)result;
  return result;
}

id sub_10002E948(uint64_t a1)
{
  return sub_10002E958(a1, 0, &qword_100172508);
}

id sub_10002E958(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v5 setNumberStyle:1];
  [v5 setMinimumFractionDigits:a2];
  [v5 setMaximumFractionDigits:a2];
  id result = [v5 setMinimumIntegerDigits:1];
  *a3 = v5;
  return result;
}

id sub_10002E9F0()
{
  id result = sub_10002EA38(2);
  qword_100172510 = (uint64_t)result;
  return result;
}

id sub_10002EA14()
{
  id result = sub_10002EA38(0);
  qword_100172518 = (uint64_t)result;
  return result;
}

id sub_10002EA38(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v2 setNumberStyle:1];
  [v2 setMinimumFractionDigits:a1];
  [v2 setMaximumFractionDigits:a1];
  [v2 setMinimumIntegerDigits:1];
  NSString v3 = sub_100125AD0();
  [v2 setPositivePrefix:v3];

  NSString v4 = sub_100125AD0();
  [v2 setNegativePrefix:v4];

  return v2;
}

uint64_t sub_10002EB14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, double a6)
{
  uint64_t v87 = a2;
  uint64_t v82 = a1;
  sub_10002FA1C(0, &qword_10015EB28, (uint64_t (*)(uint64_t))&type metadata accessor for Locale.Region, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v10 - 8);
  double v84 = (char *)&v74 - v11;
  uint64_t v12 = sub_1001233C0();
  uint64_t v88 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v74 - v16;
  uint64_t v86 = sub_1001233E0();
  uint64_t v18 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  CGFloat v83 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v74 - v21;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v74 - v24;
  sub_10002FA1C(0, &qword_10015EB30, (uint64_t (*)(uint64_t))&type metadata accessor for Locale.LanguageCode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v74 - v27;
  uint64_t v29 = (void *)sub_10002F64C(a5, a3, a4, a6);
  uint64_t v30 = v29;
  if ((a5 & 2) != 0 && v87)
  {
    double v31 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v80 = v85 + OBJC_IVAR____TtC12StocksWidget14PriceFormatter_locale;
    uint64_t v32 = v18;
    uint64_t v33 = v86;
    uint64_t v79 = v31;
    ((void (*)(char *))v31)(v25);
    id v77 = v30;
    sub_1001233D0();
    double v34 = *(void (**)(char *, uint64_t))(v32 + 8);
    uint64_t v85 = v32 + 8;
    CGFloat v81 = v34;
    v34(v25, v33);
    sub_1001233A0();
    uint64_t v35 = v88 + 8;
    double v78 = *(void (**)(char *, uint64_t))(v88 + 8);
    v78(v17, v12);
    uint64_t v36 = sub_100123340();
    uint64_t v37 = *(void *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v28, 1, v36) == 1)
    {
      sub_10002F948((uint64_t)v28, &qword_10015EB30, (uint64_t (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
    }
    else
    {
      uint64_t v88 = v35;
      uint64_t v75 = sub_100123320();
      uint64_t v76 = v43;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v36);
      v79(v22, v80, v33);
      sub_1001233D0();
      double v44 = v81;
      v81(v22, v33);
      uint64_t v45 = (uint64_t)v84;
      sub_1001233B0();
      v78(v14, v12);
      uint64_t v46 = sub_100123380();
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) != 1)
      {
        CGFloat v48 = v44;
        uint64_t v49 = sub_100123370();
        uint64_t v51 = v50;
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
        sub_10002FA1C(0, &qword_10015EB38, (uint64_t (*)(uint64_t))sub_10002F9B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1001276F0;
        *(void *)(inited + 32) = sub_100125B10();
        *(void *)(inited + 40) = v53;
        uint64_t v54 = v82;
        uint64_t v55 = v87;
        *(void *)(inited + 48) = v82;
        *(void *)(inited + 56) = v55;
        *(void *)(inited + 64) = sub_100125B10();
        *(void *)(inited + 72) = v56;
        uint64_t v57 = v76;
        *(void *)(inited + 80) = v75;
        *(void *)(inited + 88) = v57;
        *(void *)(inited + 96) = sub_100125B10();
        *(void *)(inited + 104) = v58;
        *(void *)(inited + 112) = v49;
        *(void *)(inited + 120) = v51;
        swift_bridgeObjectRetain();
        sub_10003D598(inited);
        sub_100123300();
        swift_bridgeObjectRelease();
        uint64_t v59 = v83;
        sub_100123310();
        Class isa = sub_100123350().super.isa;
        id v61 = v77;
        [v77 setLocale:isa];

        if (v54 == 7356999 && v55 == 0xE300000000000000 || (sub_100126530() & 1) != 0)
        {
          [v61 setNumberStyle:1];
          id v62 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a6];
          id v63 = [v61 stringFromNumber:v62];

          if (!v63)
          {

            v48(v59, v86);
            return 0;
          }
          uint64_t v64 = sub_100125B10();
          uint64_t v66 = v65;

          type metadata accessor for Localized();
          uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          double v68 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
          v73._countAndFlagsBits = 0x8000000100130F50;
          v89._countAndFlagsBits = 0x402520704247;
          v89._object = (void *)0xE600000000000000;
          v90.value._countAndFlagsBits = 0;
          v90.value._object = 0;
          v69.super.Class isa = v68;
          v91._countAndFlagsBits = 0;
          v91._object = (void *)0xE000000000000000;
          sub_100123070(v89, v90, v69, v91, v73);

          sub_10002FA1C(0, (unint64_t *)&qword_10015D9A8, (uint64_t (*)(uint64_t))sub_10002FA80, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
          uint64_t v70 = swift_allocObject();
          *(_OWORD *)(v70 + 16) = xmmword_100127010;
          *(void *)(v70 + 56) = &type metadata for String;
          *(void *)(v70 + 64) = sub_100005648();
          *(void *)(v70 + 32) = v64;
          *(void *)(v70 + 40) = v66;
          uint64_t v41 = sub_100125B40();

          swift_bridgeObjectRelease();
        }
        else
        {
          [v61 setNumberStyle:2];
          id v71 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a6];
          id v72 = [v61 stringFromNumber:v71];

          if (v72)
          {
            uint64_t v41 = sub_100125B10();
          }
          else
          {

            uint64_t v41 = 0;
          }
        }
        v48(v59, v86);
        return v41;
      }
      swift_bridgeObjectRelease();
      sub_10002F948(v45, &qword_10015EB28, (uint64_t (*)(uint64_t))&type metadata accessor for Locale.Region);
    }
  }
  else
  {
    id v38 = v29;
  }
  [v30 setNumberStyle:1];
  id v39 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a6];
  id v40 = [v30 stringFromNumber:v39];

  if (!v40)
  {

    return 0;
  }
  uint64_t v41 = sub_100125B10();

  return v41;
}

uint64_t sub_10002F4C8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget14PriceFormatter_locale;
  uint64_t v2 = sub_1001233E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10002F568()
{
  return type metadata accessor for PriceFormatter();
}

uint64_t type metadata accessor for PriceFormatter()
{
  uint64_t result = qword_10015EAA0;
  if (!qword_10015EAA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002F5BC()
{
  uint64_t result = sub_1001233E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10002F64C(char a1, uint64_t a2, char a3, double a4)
{
  double v5 = fabs(a4);
  if (a4 != 0.0 && v5 < 5.0 && (a1 & 1) == 0)
  {
    if (a3)
    {
      if (qword_10015D470 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_1001724F8;
    }
    else
    {
      if (qword_10015D478 != -1) {
        swift_once();
      }
      uint64_t v10 = &qword_100172500;
    }
  }
  else
  {
    if (a3)
    {
      if (a3 != 1)
      {
        if (!a2) {
          goto LABEL_18;
        }
        goto LABEL_40;
      }
      if ((~*(void *)&v5 & 0x7FF0000000000000) != 0)
      {
        if (v5 > -9.22337204e18)
        {
          if (v5 < 9.22337204e18)
          {
            if ((uint64_t)v5 < 1)
            {
LABEL_18:
              if (qword_10015D468 != -1) {
                swift_once();
              }
              uint64_t v10 = &qword_1001724F0;
              return *v10;
            }
            double v9 = log10(v5);
            if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
            {
              if (v9 > -9.22337204e18)
              {
                if (v9 < 9.22337204e18)
                {
                  if ((uint64_t)v9 < a2) {
                    goto LABEL_18;
                  }
LABEL_40:
                  if (qword_10015D480 == -1)
                  {
LABEL_41:
                    uint64_t v10 = &qword_100172508;
                    return *v10;
                  }
LABEL_51:
                  swift_once();
                  goto LABEL_41;
                }
                goto LABEL_54;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          goto LABEL_47;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    if (v5 <= -9.22337204e18)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v5 >= 9.22337204e18)
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if ((uint64_t)v5 >= 1)
    {
      double v11 = log10(v5);
      if ((~*(void *)&v11 & 0x7FF0000000000000) == 0)
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      if (v11 <= -9.22337204e18)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      if (v11 >= 9.22337204e18)
      {
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      if ((uint64_t)v11 >= a2)
      {
        if (qword_10015D490 == -1)
        {
LABEL_43:
          uint64_t v10 = &qword_100172518;
          return *v10;
        }
LABEL_58:
        swift_once();
        goto LABEL_43;
      }
    }
    if (qword_10015D488 != -1) {
      swift_once();
    }
    uint64_t v10 = &qword_100172510;
  }
  return *v10;
}

uint64_t sub_10002F948(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_10002FA1C(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_10002F9B8()
{
  if (!qword_10015EB40)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015EB40);
    }
  }
}

void sub_10002FA1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_10002FA80()
{
  unint64_t result = qword_10015D9B0;
  if (!qword_10015D9B0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_10015D9B0);
  }
  return result;
}

uint64_t sub_10002FAD8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = (_OWORD *)(a1 + 48);
    double v11 = a2 + 6;
    uint64_t v12 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      long long v13 = *((_OWORD *)a2 + 4);
      *uint64_t v10 = *v11;
      *(_OWORD *)(a1 + 64) = v13;
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v12;
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(void *)(a1 + 88) = a2[11];
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v15 = a2[13];
    uint64_t v16 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v16;
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    *(void *)(a1 + 136) = a2[17];
    uint64_t v17 = *(int *)(v6 + 36);
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    *(void *)(a1 + 104) = v15;
    uint64_t v20 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v21 = *((void *)v20 - 1);
    uint64_t v22 = *(unsigned int (**)(void *, uint64_t, int *))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      sub_100031DB0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      *uint64_t v18 = *v19;
      uint64_t v24 = v20[5];
      uint64_t v37 = (char *)v18 + v24;
      uint64_t v25 = (char *)v19 + v24;
      uint64_t v26 = sub_1001232B0();
      uint64_t v38 = v6;
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v37, v25, v26);
      sub_10002FE38();
      v27(&v37[*(int *)(v28 + 36)], &v25[*(int *)(v28 + 36)], v26);
      uint64_t v6 = v38;
      uint64_t v29 = v20[6];
      uint64_t v30 = (char *)v18 + v29;
      double v31 = (char *)v19 + v29;
      uint64_t v32 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
      uint64_t v33 = v20[8];
      double v34 = (char *)v18 + v33;
      uint64_t v35 = (char *)v19 + v33;
      *(void *)double v34 = *(void *)v35;
      v34[8] = v35[8];
      *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
    }
    *(void *)(a1 + *(int *)(v6 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 40));
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_10002FE38()
{
  if (!qword_10015EB48)
  {
    sub_1001232B0();
    sub_10002FE9C();
    unint64_t v0 = sub_100125A80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EB48);
    }
  }
}

unint64_t sub_10002FE9C()
{
  unint64_t result = qword_10015EB50;
  if (!qword_10015EB50)
  {
    sub_1001232B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EB50);
  }
  return result;
}

uint64_t sub_10002FEF4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1001232B0();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v6, v7);
    sub_10002FE38();
    v8(v6 + *(int *)(v9 + 36), v7);
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    uint64_t v11 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100030070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = (_OWORD *)(a1 + 48);
  uint64_t v10 = a2 + 48;
  uint64_t v11 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    long long v12 = *(_OWORD *)(v10 + 16);
    *uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(v10 + 8);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v11;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v14;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *(void *)(a1 + 104) = v13;
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(unsigned int (**)(void *, uint64_t, int *))(v19 + 48);
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    sub_100031DB0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    uint64_t v22 = v18[5];
    uint64_t v36 = (char *)v16 + v22;
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v37 = a3;
    uint64_t v24 = sub_1001232B0();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v36, v23, v24);
    sub_10002FE38();
    uint64_t v27 = v24;
    a3 = v37;
    v25(&v36[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v27);
    uint64_t v28 = v18[6];
    uint64_t v29 = (char *)v16 + v28;
    uint64_t v30 = (char *)v17 + v28;
    uint64_t v31 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
    uint64_t v32 = v18[8];
    uint64_t v33 = (char *)v16 + v32;
    double v34 = (char *)v17 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100030380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) == 1)
  {
    if (v7 == 1)
    {
      long long v8 = *(_OWORD *)(a2 + 64);
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 64) = v8;
    }
    else
    {
      uint64_t v10 = *(void *)v6;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)uint64_t v5 = v10;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_10003088C(a1 + 48);
    long long v9 = *(_OWORD *)(a2 + 64);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    uint64_t v11 = *(void *)v6;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)uint64_t v5 = v11;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v13;
  uint64_t v14 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v14;
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      *uint64_t v16 = *v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v37 = v18[5];
      uint64_t v38 = (char *)v16 + v37;
      id v39 = (char *)v17 + v37;
      uint64_t v40 = sub_1001232B0();
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24);
      v41(v38, v39, v40);
      sub_10002FE38();
      v41(&v38[*(int *)(v42 + 36)], &v39[*(int *)(v42 + 36)], v40);
      uint64_t v43 = v18[6];
      double v44 = (char *)v16 + v43;
      uint64_t v45 = (char *)v17 + v43;
      uint64_t v46 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
      uint64_t v47 = v18[7];
      CGFloat v48 = (void *)((char *)v16 + v47);
      uint64_t v49 = (void *)((char *)v17 + v47);
      void *v48 = *v49;
      v48[1] = v49[1];
      uint64_t v50 = v18[8];
      uint64_t v51 = (char *)v16 + v50;
      double v52 = (char *)v17 + v50;
      char v53 = v52[8];
      *(void *)uint64_t v51 = *(void *)v52;
      v51[8] = v53;
      *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
      goto LABEL_14;
    }
    sub_1000325F8((uint64_t)v16, type metadata accessor for PreparedSparkline);
    goto LABEL_13;
  }
  if (v22)
  {
LABEL_13:
    sub_100031DB0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v16, v17, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  *uint64_t v16 = *v17;
  uint64_t v23 = v18[5];
  uint64_t v54 = (char *)v16 + v23;
  uint64_t v55 = (char *)v17 + v23;
  uint64_t v24 = sub_1001232B0();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v54, v55, v24);
  sub_10002FE38();
  v25(&v54[*(int *)(v26 + 36)], &v55[*(int *)(v26 + 36)], v24);
  uint64_t v27 = v18[6];
  uint64_t v28 = (char *)v16 + v27;
  uint64_t v29 = (char *)v17 + v27;
  uint64_t v30 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
  uint64_t v31 = v18[8];
  uint64_t v32 = (char *)v16 + v31;
  uint64_t v33 = (char *)v17 + v31;
  char v34 = v33[8];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v34;
  *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_14:
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10003088C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000308E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v8 = *(int *)(a3 + 36);
  long long v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v11 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    sub_100031DB0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *long long v9 = *v10;
    uint64_t v14 = v11[5];
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v27 = (char *)v10 + v14;
    uint64_t v16 = sub_1001232B0();
    uint64_t v28 = v12;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
    v17(v15, v27, v16);
    sub_10002FE38();
    v17(&v15[*(int *)(v18 + 36)], &v27[*(int *)(v18 + 36)], v16);
    uint64_t v19 = v11[6];
    uint64_t v20 = (char *)v9 + v19;
    int v21 = (char *)v10 + v19;
    uint64_t v22 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    *(_OWORD *)((char *)v9 + v11[7]) = *(_OWORD *)((char *)v10 + v11[7]);
    uint64_t v23 = v11[8];
    uint64_t v24 = (char *)v9 + v23;
    uint64_t v25 = (char *)v10 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    *((unsigned char *)v9 + v11[9]) = *((unsigned char *)v10 + v11[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v28 + 56))(v9, 0, 1, v11);
  }
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_100030B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 48);
  long long v9 = (_OWORD *)(a2 + 48);
  if (*(void *)(a1 + 72) == 1) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(a2 + 72);
  if (v10 == 1)
  {
    sub_10003088C(a1 + 48);
LABEL_4:
    long long v11 = *(_OWORD *)(a2 + 64);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 64) = v11;
    goto LABEL_6;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      void *v14 = *v15;
      swift_bridgeObjectRelease();
      uint64_t v36 = v16[5];
      uint64_t v37 = (char *)v14 + v36;
      uint64_t v38 = (char *)v15 + v36;
      uint64_t v39 = sub_1001232B0();
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40);
      v40(v37, v38, v39);
      sub_10002FE38();
      v40(&v37[*(int *)(v41 + 36)], &v38[*(int *)(v41 + 36)], v39);
      uint64_t v42 = v16[6];
      uint64_t v43 = (char *)v14 + v42;
      double v44 = (char *)v15 + v42;
      uint64_t v45 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
      *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
      uint64_t v46 = v16[8];
      uint64_t v47 = (char *)v14 + v46;
      CGFloat v48 = (char *)v15 + v46;
      v47[8] = v48[8];
      *(void *)uint64_t v47 = *(void *)v48;
      *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
      goto LABEL_12;
    }
    sub_1000325F8((uint64_t)v14, type metadata accessor for PreparedSparkline);
    goto LABEL_11;
  }
  if (v20)
  {
LABEL_11:
    sub_100031DB0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v14, v15, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  void *v14 = *v15;
  uint64_t v21 = v16[5];
  uint64_t v22 = (char *)v14 + v21;
  uint64_t v23 = (char *)v15 + v21;
  uint64_t v24 = sub_1001232B0();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  sub_10002FE38();
  v25(&v22[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v24);
  uint64_t v27 = v16[6];
  uint64_t v28 = (char *)v14 + v27;
  uint64_t v29 = (char *)v15 + v27;
  uint64_t v30 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
  uint64_t v31 = v16[8];
  uint64_t v32 = (char *)v14 + v31;
  uint64_t v33 = (char *)v15 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
LABEL_12:
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100030FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100030FD8);
}

uint64_t sub_100030FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_100031DB0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000310B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000310CC);
}

uint64_t sub_1000310CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_100031DB0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MediumDetailContentView()
{
  uint64_t result = qword_10015EBB0;
  if (!qword_10015EBB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000311F0()
{
  sub_100031DB0(319, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000312EC()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100031308@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  CGFloat v81 = a2;
  uint64_t v3 = type metadata accessor for RegularSparklineView(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v77 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v91 = (uint64_t)&v68 - v6;
  sub_100031F54();
  __chkstk_darwin(v7 - 8);
  Swift::String_optional v90 = (uint64_t *)((char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100031EEC();
  uint64_t v80 = v9 - 8;
  __chkstk_darwin(v9 - 8);
  uint64_t v79 = (uint64_t)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v92 = (uint64_t)&v68 - v12;
  int v85 = *((unsigned __int8 *)a1 + 80);
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v15 = a1[3];
  uint64_t v83 = a1[2];
  uint64_t v84 = v13;
  uint64_t v98 = v15;
  uint64_t v99 = v14;
  uint64_t v16 = a1[5];
  uint64_t v82 = a1[4];
  uint64_t v18 = a1[7];
  uint64_t v96 = a1[6];
  uint64_t v17 = v96;
  uint64_t v97 = v16;
  uint64_t v19 = a1[9];
  uint64_t v94 = a1[8];
  uint64_t v20 = v94;
  uint64_t v95 = v18;
  uint64_t v78 = v19;
  uint64_t v21 = a1[11];
  uint64_t v107 = *((unsigned __int8 *)a1 + 96);
  uint64_t v108 = v21;
  uint64_t v22 = a1[13];
  uint64_t v93 = a1[14];
  uint64_t v105 = a1[15];
  uint64_t v106 = v22;
  uint64_t v104 = *((unsigned __int8 *)a1 + 128);
  uint64_t v103 = a1[17];
  int v102 = *((unsigned __int8 *)a1 + 144);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = swift_allocObject();
  uint64_t v100 = v23;
  *(void *)(v23 + 16) = 0;
  *(unsigned char *)(v23 + 24) = 1;
  *(void *)(v23 + 32) = 0;
  *(unsigned char *)(v23 + 40) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000321B8(v17, v18, v20, v19);
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_100124E70();
  uint64_t v25 = v90;
  *Swift::String_optional v90 = v24;
  v25[1] = 0x4040000000000000;
  *((unsigned char *)v25 + 16) = 0;
  sub_1000321CC();
  uint64_t v27 = (_OWORD *)((char *)v25 + *(int *)(v26 + 44));
  uint64_t v88 = sub_100124F00();
  sub_100031A70(a1, (uint64_t)&v145);
  uint64_t v28 = v145;
  uint64_t v29 = v146;
  uint64_t v74 = v146;
  uint64_t v75 = v145;
  uint64_t v30 = v147;
  uint64_t v31 = v148;
  uint64_t v72 = v148;
  uint64_t v73 = v147;
  LOBYTE(v19) = v150;
  uint64_t v89 = v151;
  uint64_t v70 = v152;
  uint64_t v71 = v149;
  uint64_t v68 = v155;
  uint64_t v69 = v154;
  uint64_t v86 = v156;
  uint64_t v87 = v153;
  uint64_t v32 = v157;
  char v110 = 1;
  char v109 = v150;
  int v76 = v150;
  uint64_t v33 = type metadata accessor for MediumDetailContentView();
  uint64_t v34 = v91;
  sub_100032264((uint64_t)a1 + *(int *)(v33 + 36), v91);
  uint64_t v35 = v34;
  uint64_t v36 = v77;
  sub_1000324AC(v35, v77, type metadata accessor for RegularSparklineView);
  long long v111 = (unint64_t)v88;
  LOBYTE(v112) = 1;
  *((void *)&v112 + 1) = v28;
  *(void *)&long long v113 = v29;
  *((void *)&v113 + 1) = v30;
  *(void *)&long long v114 = v31;
  uint64_t v38 = v70;
  uint64_t v37 = v71;
  *((void *)&v114 + 1) = v71;
  LOBYTE(v115) = v19;
  *((void *)&v115 + 1) = v89;
  *(void *)&long long v116 = v70;
  uint64_t v40 = v68;
  uint64_t v39 = v69;
  *((void *)&v116 + 1) = v87;
  *(void *)&long long v117 = v69;
  *((void *)&v117 + 1) = v68;
  *(void *)&long long v118 = v86;
  *((void *)&v118 + 1) = v32;
  long long v41 = v114;
  uint64_t v27[2] = v113;
  v27[3] = v41;
  long long v42 = v118;
  v27[6] = v117;
  v27[7] = v42;
  long long v43 = v116;
  v27[4] = v115;
  v27[5] = v43;
  long long v44 = v112;
  *uint64_t v27 = v111;
  v27[1] = v44;
  sub_100032008();
  sub_1000324AC(v36, (uint64_t)v27 + *(int *)(v45 + 48), type metadata accessor for RegularSparklineView);
  sub_1000322F8(&v111);
  sub_1000325F8(v91, type metadata accessor for RegularSparklineView);
  sub_1000325F8(v36, type metadata accessor for RegularSparklineView);
  v119[0] = v88;
  v119[1] = 0;
  char v120 = 1;
  uint64_t v121 = v75;
  uint64_t v122 = v74;
  uint64_t v123 = v73;
  uint64_t v124 = v72;
  uint64_t v125 = v37;
  char v126 = v76;
  uint64_t v127 = v89;
  uint64_t v128 = v38;
  uint64_t v129 = v87;
  uint64_t v130 = v39;
  uint64_t v131 = v40;
  uint64_t v132 = v86;
  uint64_t v133 = v32;
  sub_100032390(v119);
  uint64_t v46 = swift_getKeyPath();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 0;
  *(unsigned char *)(v47 + 24) = 0;
  *(void *)(v47 + 32) = 0;
  *(unsigned char *)(v47 + 40) = 1;
  CGFloat v48 = v90;
  uint64_t v49 = v79;
  sub_1000324AC((uint64_t)v90, v79, (uint64_t (*)(void))sub_100031F54);
  uint64_t v50 = (uint64_t *)(v49 + *(int *)(v80 + 44));
  *uint64_t v50 = v46;
  v50[1] = (uint64_t)sub_1000321B4;
  v50[2] = v47;
  sub_1000325F8((uint64_t)v48, (uint64_t (*)(void))sub_100031F54);
  uint64_t v51 = v92;
  sub_100032448(v49, v92);
  sub_1000324AC(v51, v49, (uint64_t (*)(void))sub_100031EEC);
  LOBYTE(v38) = v85;
  LOBYTE(v134) = v85;
  uint64_t v53 = v83;
  uint64_t v52 = v84;
  *((void *)&v134 + 1) = v84;
  *(void *)&long long v135 = v99;
  *((void *)&v135 + 1) = v83;
  *(void *)&long long v136 = v98;
  uint64_t v54 = v82;
  *((void *)&v136 + 1) = v82;
  *(void *)&long long v137 = v97;
  *((void *)&v137 + 1) = v96;
  *(void *)&long long v138 = v95;
  *((void *)&v138 + 1) = v94;
  uint64_t v55 = v78;
  *(void *)&long long v139 = v78;
  *((void *)&v139 + 1) = v108;
  *(void *)&long long v140 = v107;
  *((void *)&v140 + 1) = v106;
  *(void *)&long long v141 = v93;
  *((void *)&v141 + 1) = v105;
  *(void *)&long long v142 = v104;
  *((void *)&v142 + 1) = v103;
  LOBYTE(v143) = v102;
  *((void *)&v143 + 1) = KeyPath;
  *(void *)&long long v144 = sub_1000321B4;
  *((void *)&v144 + 1) = v100;
  long long v56 = v139;
  uint64_t v57 = v81;
  v81[4] = v138;
  v57[5] = v56;
  long long v58 = v134;
  long long v59 = v135;
  long long v60 = v137;
  v57[2] = v136;
  v57[3] = v60;
  *uint64_t v57 = v58;
  v57[1] = v59;
  long long v61 = v140;
  long long v62 = v141;
  long long v63 = v144;
  long long v64 = v142;
  v57[9] = v143;
  v57[10] = v63;
  v57[7] = v62;
  v57[8] = v64;
  v57[6] = v61;
  uint64_t v65 = v57;
  sub_100031E14();
  sub_1000324AC(v49, (uint64_t)v65 + *(int *)(v66 + 48), (uint64_t (*)(void))sub_100031EEC);
  sub_100032514(&v134);
  sub_1000325F8(v92, (uint64_t (*)(void))sub_100031EEC);
  sub_1000325F8(v49, (uint64_t (*)(void))sub_100031EEC);
  LOBYTE(v145) = v38;
  uint64_t v146 = v52;
  uint64_t v147 = v99;
  uint64_t v148 = v53;
  uint64_t v149 = v98;
  uint64_t v150 = v54;
  uint64_t v151 = v97;
  uint64_t v152 = v96;
  uint64_t v153 = v95;
  uint64_t v154 = v94;
  uint64_t v155 = v55;
  uint64_t v156 = v108;
  uint64_t v157 = v107;
  uint64_t v158 = v106;
  uint64_t v159 = v93;
  uint64_t v160 = v105;
  uint64_t v161 = v104;
  uint64_t v162 = v103;
  char v163 = v102;
  uint64_t v164 = KeyPath;
  uint64_t v165 = sub_1000321B4;
  uint64_t v166 = v100;
  return sub_100032658(&v145);
}

uint64_t sub_100031A70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)((char *)a1 + *(int *)(type metadata accessor for MediumDetailContentView() + 40));
  if (*(void *)(v4 + 16) >= 3uLL) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 16);
  }
  sub_100126550();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v6 = (void *)swift_dynamicCastClass();
  if (!v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  uint64_t v7 = v6[2];
  swift_release();
  if (v7 == v5)
  {
    uint64_t v8 = (void *)swift_dynamicCastClass();
    if (!v8)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1000AB794(v4, v4 + 32, 0, (2 * v5) | 1);
  }
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(unsigned char *)(v10 + 24) = 1;
  *(void *)(v10 + 32) = 0;
  *(unsigned char *)(v10 + 40) = 0;
  uint64_t v11 = a1[6];
  uint64_t v12 = a1[7];
  uint64_t v13 = a1[8];
  uint64_t v14 = a1[9];
  uint64_t v15 = swift_getKeyPath();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(unsigned char *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = 0;
  *(unsigned char *)(v16 + 40) = 1;
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = sub_1000321B4;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = 0x4010000000000000;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v14;
  *(void *)(a2 + 80) = v15;
  *(void *)(a2 + 88) = sub_1000321B4;
  *(void *)(a2 + 96) = v16;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000321B8(v11, v12, v13, v14);
  swift_retain();
  swift_retain();
  sub_1000321B8(v11, v12, v13, v14);
  sub_100032424(v11, v12, v13, v14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

void *sub_100031CD0@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100124F00();
  *(void *)(a1 + 8) = 0x4020000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_100031D18();
  return sub_100031308(v1, (_OWORD *)(a1 + *(int *)(v3 + 44)));
}

void sub_100031D18()
{
  if (!qword_10015EC00)
  {
    sub_100031DB0(255, &qword_10015EC08, (uint64_t (*)(uint64_t))sub_100031E14, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EC00);
    }
  }
}

void sub_100031DB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_100031E14()
{
  if (!qword_10015EC10)
  {
    sub_10003213C(255, &qword_10015EC18);
    sub_100031EEC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015EC10);
    }
  }
}

void sub_100031E94()
{
  if (!qword_10015EC20)
  {
    unint64_t v0 = sub_1001250C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EC20);
    }
  }
}

void sub_100031EEC()
{
  if (!qword_10015EC28)
  {
    sub_100031F54();
    sub_100031E94();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EC28);
    }
  }
}

void sub_100031F54()
{
  if (!qword_10015EC30)
  {
    sub_100031DB0(255, &qword_10015EC38, (uint64_t (*)(uint64_t))sub_100032008, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_100032898(&qword_10015EC78, &qword_10015EC38, (uint64_t (*)(uint64_t))sub_100032008);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EC30);
    }
  }
}

void sub_100032008()
{
  if (!qword_10015EC40)
  {
    sub_1000327F8(255, &qword_10015EC48, &qword_10015EC50, (uint64_t (*)(uint64_t))sub_1000320A4, &qword_10015EC70);
    type metadata accessor for RegularSparklineView(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015EC40);
    }
  }
}

void sub_1000320A4()
{
  if (!qword_10015EC58)
  {
    sub_10003213C(255, &qword_10015EC60);
    sub_10003213C(255, &qword_10015EC68);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_10015EC58);
    }
  }
}

void sub_10003213C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_100031E94();
    unint64_t v3 = sub_100124B20();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1000321A4()
{
  return swift_deallocObject();
}

uint64_t sub_1000321B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1000321CC()
{
  if (!qword_10015EC80)
  {
    sub_100031DB0(255, &qword_10015EC38, (uint64_t (*)(uint64_t))sub_100032008, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EC80);
    }
  }
}

uint64_t sub_100032264(uint64_t a1, uint64_t a2)
{
  sub_100031DB0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1000322F8(void *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[12];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000321B8(v2, v3, v4, v5);
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100032390(void *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[12];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100032424(v2, v3, v4, v5);
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100032424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100032438()
{
  return swift_deallocObject();
}

uint64_t sub_100032448(uint64_t a1, uint64_t a2)
{
  sub_100031EEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000324AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_100032514(void *a1)
{
  uint64_t v2 = a1[7];
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[9];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v9 = a1[14];
  uint64_t v10 = a1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000321B8(v2, v3, v4, v5);
  sub_1000321B8(v10, v6, v7, v9);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000325F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_100032658(void *a1)
{
  uint64_t v2 = a1[7];
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[9];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v9 = a1[14];
  uint64_t v10 = a1[11];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100032424(v2, v3, v4, v5);
  sub_100032424(v10, v6, v7, v9);
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_10003273C()
{
  return swift_deallocObject();
}

uint64_t sub_10003274C()
{
  return swift_deallocObject();
}

void *sub_10003275C(void *a1)
{
  return sub_1000745F8(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

unint64_t sub_100032774()
{
  unint64_t result = qword_10015EC88;
  if (!qword_10015EC88)
  {
    sub_1000327F8(255, &qword_10015EC90, &qword_10015EC08, (uint64_t (*)(uint64_t))sub_100031E14, &qword_10015EC98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EC88);
  }
  return result;
}

void sub_1000327F8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_100031DB0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_100032898(a5, a3, a4);
    unint64_t v9 = sub_100125720();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_100032898(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100031DB0(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1000328FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    uint64_t v8 = a2[4];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    a1[3] = a2[3];
    a1[4] = v8;
    sub_100032B58(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_100032B58(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1001258C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)v20;
    char v22 = v20[8];
    sub_100032BBC(*(void *)v20, v22);
    *(void *)uint64_t v19 = v21;
    v19[8] = v22;
  }
  return v4;
}

void sub_100032B58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100032BBC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100032BC8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  sub_100032B58(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1001258F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[7];
  sub_100032B58(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1001258C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);

  return sub_100032D54(v9, v10);
}

uint64_t sub_100032D54(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100032D60(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  char v10 = (void *)(a2 + v8);
  sub_100032B58(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_100032B58(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1001258C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)v18;
  char v20 = *(unsigned char *)(v18 + 8);
  sub_100032BBC(*(void *)v18, v20);
  *(void *)uint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = v20;
  return a1;
}

uint64_t sub_100032F6C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_100037C6C(a1 + v6, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_100032B58(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[7];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100037C6C(a1 + v10, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_100032B58(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1001258C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_100032BBC(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = v18;
  sub_100032D54(v19, v20);
  return a1;
}

uint64_t sub_1000331EC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  sub_100032B58(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1001258F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  sub_100032B58(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v16 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1001258C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  return a1;
}

uint64_t sub_1000333F4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_100037C6C(a1 + v8, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_100032B58(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1001258F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    sub_100037C6C(a1 + v14, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_100032B58(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    uint64_t v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1001258C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v15, v16, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  char v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  LOBYTE(v22) = *((unsigned char *)v22 + 8);
  uint64_t v24 = *(void *)v21;
  char v25 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v21 = v23;
  *(unsigned char *)(v21 + 8) = (_BYTE)v22;
  sub_100032D54(v24, v25);
  return a1;
}

uint64_t sub_100033668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003367C);
}

uint64_t sub_10003367C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_100032B58(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_100032B58(0, &qword_10015ECE0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100033808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003381C);
}

uint64_t sub_10003381C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_100032B58(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_100032B58(0, &qword_10015ECE0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for SymbolTrendView()
{
  uint64_t result = qword_10015ED40;
  if (!qword_10015ED40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000339F4()
{
  sub_100032B58(319, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100032B58(319, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100033B38()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100033B54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100125320();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_100037D24(&qword_10015EEF8, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
    sub_100125E50();
    sub_100125EA0();
    sub_100125E80();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v1, v4);
    uint64_t v8 = (void (**)(char *, uint64_t))(v5 + 8);
    if (v12)
    {
      sub_100125EA0();
      uint64_t v9 = *v8;
      (*v8)(v7, v4);
    }
    else
    {
      uint64_t v10 = v11;
      uint64_t v9 = *v8;
      (*v8)(v7, v4);
      uint64_t v14 = v10;
    }
    sub_100125EA0();
    if (v13 >= v14)
    {
      uint64_t v11 = v14;
      uint64_t v12 = v13;
      sub_100125EF0();
      v9(v2, v4);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_100033D60@<X0>(uint64_t a1@<X8>)
{
  sub_100124A20();
  sub_100037D24(qword_10015E908, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_100125E50();
  sub_100125EA0();
  if (v9[4] == v9[0])
  {
    uint64_t v2 = sub_1001249E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    uint64_t v4 = (void (*)(void *, void))sub_100125F00();
    uint64_t v6 = v5;
    uint64_t v7 = sub_1001249E0();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_100033EFC@<X0>(uint64_t a1@<X8>)
{
  sub_100125320();
  sub_100037D24(&qword_10015EEF8, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
  sub_100125E50();
  sub_100125EA0();
  if (v9[4] == v9[0])
  {
    uint64_t v2 = sub_100125310();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    uint64_t v4 = (void (*)(void *, void))sub_100125F00();
    uint64_t v6 = v5;
    uint64_t v7 = sub_100125310();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_100034098()
{
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, (uint64_t)v3);
  sub_100009D98(v3, v3[3]);
  sub_100037604();
  uint64_t result = sub_100124100();
  if (v2)
  {
    sub_100029474(&v1, (uint64_t)&unk_10015ECA0);
    return sub_100009D48((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100034158()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SymbolTrendView();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001258F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - v10;
  sub_10005EEE4((uint64_t)&v22 - v10);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  if (v12 == enum case for WidgetFamily.accessoryCircular(_:)
    || v12 == enum case for WidgetFamily.accessoryRectangular(_:)
    || v12 == enum case for WidgetFamily.accessoryInline(_:))
  {
    v13(v11, v5);
    sub_100037318(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
    char v20 = 1;
  }
  else
  {
    v13(v8, v5);
    v13(v11, v5);
    sub_100037318(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
    uint64_t v16 = &v4[*(int *)(v2 + 32)];
    uint64_t v17 = *(void *)v16;
    char v18 = v16[8];
    sub_100032BBC(*(void *)v16, v18);
    char v19 = sub_10005ECE0(v17, v18);
    sub_100032D54(v17, v18);
    char v20 = v19 ^ 1;
  }
  sub_100037380((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  return v20 & 1;
}

uint64_t sub_1000343DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v155 = a2;
  uint64_t v156 = a1;
  uint64_t v2 = sub_100124A80();
  uint64_t v137 = *(void *)(v2 - 8);
  uint64_t v138 = v2;
  __chkstk_darwin(v2);
  long long v135 = (char *)&v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035C10(0, &qword_10015EE38, (void (*)(uint64_t))sub_100035C9C, (void (*)(void))sub_100035F8C);
  uint64_t v153 = v4;
  uint64_t v140 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v139 = (char *)&v133 - v5;
  sub_100035B1C();
  uint64_t v154 = v6;
  uint64_t v142 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v136 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v141 = (char *)&v133 - v9;
  sub_100036318(0, &qword_10015EEC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v148 = v10;
  __chkstk_darwin(v10);
  uint64_t v150 = (char *)&v133 - v11;
  sub_100035C10(0, &qword_10015EDE8, (void (*)(uint64_t))sub_100035834, (void (*)(void))sub_100035998);
  uint64_t v149 = v12;
  uint64_t v134 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v133 = (char *)&v133 - v13;
  sub_100035814(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v152 = (char *)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v151 = (char *)&v133 - v17;
  uint64_t v18 = sub_1001258C0();
  uint64_t v161 = *(void *)(v18 - 8);
  uint64_t v162 = v18;
  __chkstk_darwin(v18);
  uint64_t v160 = (uint64_t)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v158 = (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale;
  uint64_t v159 = (uint64_t)&v133 - v21;
  uint64_t v157 = (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier;
  sub_100032B58(0, &qword_10015EDB8, (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  char v25 = (uint64_t *)((char *)&v133 - v24);
  uint64_t v26 = sub_1001255F0();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v133 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035718();
  uint64_t v31 = v30 - 8;
  __chkstk_darwin(v30);
  uint64_t v33 = (uint64_t *)((char *)&v133 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100035698();
  uint64_t v143 = v34;
  __chkstk_darwin(v34);
  uint64_t v146 = (char *)&v133 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035618();
  uint64_t v145 = v36;
  __chkstk_darwin(v36);
  uint64_t v147 = (uint64_t)&v133 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  long long v144 = (char *)&v133 - v39;
  __chkstk_darwin(v40);
  uint64_t v163 = (uint64_t)&v133 - v41;
  uint64_t v42 = sub_1001255A0();
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, enum case for Image.Scale.small(_:), v26);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v25 + *(int *)(v23 + 36), v29, v26);
  uint64_t *v25 = KeyPath;
  sub_100037274((uint64_t)v25, (uint64_t)v33 + *(int *)(v31 + 44));
  *uint64_t v33 = v42;
  swift_retain();
  sub_100037C6C((uint64_t)v25, &qword_10015EDB8, v158, v157);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  long long v44 = v156;
  swift_release();
  type metadata accessor for SymbolTrendView();
  uint64_t v45 = v159;
  sub_10005F294(v159);
  uint64_t v46 = v160;
  sub_1001258B0();
  LOBYTE(v29) = sub_1001258A0();
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v161 + 8);
  uint64_t v48 = v46;
  uint64_t v49 = v162;
  v47(v48, v162);
  v47(v45, v49);
  if (v29) {
    uint64_t v50 = sub_10003535C();
  }
  else {
    uint64_t v50 = sub_100125540();
  }
  uint64_t v51 = v50;
  uint64_t v53 = v145;
  uint64_t v52 = (uint64_t)v146;
  uint64_t v55 = v143;
  uint64_t v54 = (uint64_t)v144;
  uint64_t v56 = swift_getKeyPath();
  sub_100037318((uint64_t)v33, v52, (uint64_t (*)(void))sub_100035718);
  uint64_t v57 = (uint64_t *)(v52 + *(int *)(v55 + 36));
  *uint64_t v57 = v56;
  v57[1] = v51;
  sub_100037380((uint64_t)v33, (uint64_t (*)(void))sub_100035718);
  if (sub_100034158())
  {
    uint64_t v58 = sub_100125270();
  }
  else
  {
    sub_100125260();
    sub_1001251C0();
    uint64_t v58 = sub_1001251F0();
    swift_release();
  }
  uint64_t v59 = swift_getKeyPath();
  sub_100037318(v52, v54, (uint64_t (*)(void))sub_100035698);
  long long v60 = (uint64_t *)(v54 + *(int *)(v53 + 36));
  *long long v60 = v59;
  v60[1] = v58;
  sub_100037380(v52, (uint64_t (*)(void))sub_100035698);
  sub_1000373E0(v54, v163);
  if (sub_100034158())
  {
    uint64_t v61 = v44[2];
    *(void *)&long long v178 = v44[1];
    *((void *)&v178 + 1) = v61;
    sub_10001BA50();
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_100125350();
    uint64_t v64 = v63;
    char v66 = v65 & 1;
    sub_100125270();
    uint64_t v67 = sub_1001252E0();
    uint64_t v160 = v67;
    uint64_t v161 = v68;
    char v70 = v69;
    uint64_t v72 = v71;
    uint64_t v162 = v71;
    swift_release();
    sub_10001BAA4(v62, v64, v66);
    swift_bridgeObjectRelease();
    uint64_t v73 = swift_getKeyPath();
    uint64_t v74 = swift_getKeyPath();
    uint64_t v75 = swift_getKeyPath();
    uint64_t v76 = v161;
    *(void *)&long long v178 = v67;
    *((void *)&v178 + 1) = v161;
    LOBYTE(v179) = v70 & 1;
    LOBYTE(v67) = v70 & 1;
    *((void *)&v179 + 1) = v72;
    *(void *)&long long v180 = v73;
    *((void *)&v180 + 1) = 1;
    LOBYTE(v181) = 0;
    *((void *)&v181 + 1) = v74;
    *(void *)&long long v182 = 0x3FEB333333333333;
    *((void *)&v182 + 1) = v75;
    LOBYTE(v183) = 1;
    sub_100035834();
    uint64_t v78 = v77;
    unint64_t v79 = sub_100035998();
    uint64_t v80 = v133;
    sub_1001253D0();
    sub_10001BAA4(v160, v76, v67);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v81 = v134;
    uint64_t v82 = v149;
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v150, v80, v149);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v178 = v78;
    *((void *)&v178 + 1) = v79;
    swift_getOpaqueTypeConformance2();
    sub_100035C9C();
    uint64_t v84 = v83;
    unint64_t v85 = sub_100035F8C();
    *(void *)&long long v178 = v84;
    *((void *)&v178 + 1) = v85;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    *(void *)&long long v178 = v153;
    *((void *)&v178 + 1) = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v87 = (uint64_t)v151;
    sub_100124F80();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
  }
  else
  {
    uint64_t v89 = v44[4];
    *(void *)&long long v178 = v44[3];
    uint64_t v88 = v178;
    *((void *)&v178 + 1) = v89;
    sub_10001BA50();
    swift_bridgeObjectRetain();
    uint64_t v90 = sub_100125350();
    uint64_t v161 = v91;
    uint64_t v162 = v90;
    char v93 = v92;
    uint64_t v160 = v94;
    uint64_t v96 = v44[1];
    uint64_t v95 = v44[2];
    if (v96 == v88 && v95 == v89 || (sub_100126530() & 1) != 0)
    {
      uint64_t v158 = 0;
      uint64_t v159 = 0;
      uint64_t v97 = 0;
      uint64_t v98 = 0;
    }
    else
    {
      *(void *)&long long v178 = v96;
      *((void *)&v178 + 1) = v95;
      swift_bridgeObjectRetain();
      uint64_t v99 = sub_100125350();
      uint64_t v158 = v100;
      uint64_t v159 = v99;
      uint64_t v98 = v101;
      uint64_t v97 = v102 & 1;
    }
    uint64_t v103 = swift_getKeyPath();
    sub_100125260();
    uint64_t v104 = sub_100125160();
    swift_release();
    uint64_t v105 = swift_getKeyPath();
    char v176 = v93 & 1;
    char v175 = 0;
    uint64_t v106 = swift_getKeyPath();
    char v107 = v176;
    char v108 = v175;
    char v177 = 0;
    uint64_t v109 = sub_100125540();
    uint64_t v110 = swift_getKeyPath();
    *(void *)&long long v164 = v162;
    *((void *)&v164 + 1) = v161;
    LOBYTE(v165) = v107;
    *((void *)&v165 + 1) = v160;
    *(void *)&long long v166 = v159;
    *((void *)&v166 + 1) = v158;
    *(void *)&long long v167 = v97;
    *((void *)&v167 + 1) = v98;
    *(void *)&long long v168 = 0;
    *((void *)&v168 + 1) = v103;
    long long v169 = 0uLL;
    *(void *)&long long v170 = 0;
    BYTE8(v170) = v108;
    *(void *)&long long v171 = v105;
    *((void *)&v171 + 1) = v104;
    *(void *)&long long v172 = v106;
    *((void *)&v172 + 1) = 1;
    LOBYTE(v173) = v177;
    *((void *)&v173 + 1) = v110;
    uint64_t v174 = v109;
    uint64_t v112 = v137;
    uint64_t v111 = v138;
    long long v113 = v135;
    (*(void (**)(char *, void, uint64_t))(v137 + 104))(v135, enum case for DynamicTypeSize.large(_:), v138);
    sub_100035C9C();
    uint64_t v115 = v114;
    unint64_t v116 = sub_100035F8C();
    long long v117 = v139;
    sub_100125440();
    (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v111);
    long long v186 = v172;
    long long v187 = v173;
    uint64_t v188 = v174;
    long long v182 = v168;
    long long v183 = v169;
    long long v184 = v170;
    long long v185 = v171;
    long long v178 = v164;
    long long v179 = v165;
    long long v180 = v166;
    long long v181 = v167;
    sub_100037454((uint64_t)&v178);
    *(void *)&long long v164 = v115;
    *((void *)&v164 + 1) = v116;
    uint64_t v118 = swift_getOpaqueTypeConformance2();
    unint64_t v119 = v136;
    uint64_t v120 = v153;
    sub_1001253D0();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v117, v120);
    uint64_t v122 = v141;
    uint64_t v121 = v142;
    uint64_t v123 = v154;
    (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v141, v119, v154);
    (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v150, v122, v123);
    swift_storeEnumTagMultiPayload();
    sub_100035834();
    uint64_t v125 = v124;
    unint64_t v126 = sub_100035998();
    *(void *)&long long v164 = v125;
    *((void *)&v164 + 1) = v126;
    swift_getOpaqueTypeConformance2();
    *(void *)&long long v164 = v120;
    *((void *)&v164 + 1) = v118;
    swift_getOpaqueTypeConformance2();
    uint64_t v87 = (uint64_t)v151;
    sub_100124F80();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v123);
  }
  uint64_t v127 = v155;
  uint64_t v128 = (uint64_t)v152;
  uint64_t v129 = v147;
  uint64_t v130 = v163;
  sub_100037318(v163, v147, (uint64_t (*)(void))sub_100035618);
  sub_100037318(v87, v128, (uint64_t (*)(void))sub_100035814);
  sub_100037318(v129, v127, (uint64_t (*)(void))sub_100035618);
  sub_1000355A8();
  sub_100037318(v128, v127 + *(int *)(v131 + 48), (uint64_t (*)(void))sub_100035814);
  sub_100037380(v87, (uint64_t (*)(void))sub_100035814);
  sub_100037380(v130, (uint64_t (*)(void))sub_100035618);
  sub_100037380(v128, (uint64_t (*)(void))sub_100035814);
  return sub_100037380(v129, (uint64_t (*)(void))sub_100035618);
}

uint64_t sub_10003535C()
{
  int v1 = *v0;
  if (v1 == 2)
  {
    if (qword_10015D498 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_10015ECB8;
    uint64_t v3 = unk_10015ECC0;
    sub_100009D98(qword_10015ECA0, qword_10015ECB8);
    (*(void (**)(uint64_t))(*(void *)(v3 + 16) + 416))(v2);
  }
  else if (v1)
  {
    if (qword_10015D498 != -1) {
      swift_once();
    }
    uint64_t v6 = qword_10015ECB8;
    uint64_t v7 = unk_10015ECC0;
    sub_100009D98(qword_10015ECA0, qword_10015ECB8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 64))(v6, v7);
  }
  else
  {
    if (qword_10015D498 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_10015ECB8;
    uint64_t v5 = unk_10015ECC0;
    sub_100009D98(qword_10015ECA0, qword_10015ECB8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 56))(v4, v5);
  }

  return sub_100125570();
}

uint64_t sub_1000354C8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100124E40();
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_100035510();
  return sub_1000343DC(v1, a1 + *(int *)(v3 + 44));
}

void sub_100035510()
{
  if (!qword_10015ED88)
  {
    sub_100032B58(255, &qword_10015ED90, (uint64_t (*)(uint64_t))sub_1000355A8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015ED88);
    }
  }
}

void sub_1000355A8()
{
  if (!qword_10015ED98)
  {
    sub_100035618();
    sub_100035814(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015ED98);
    }
  }
}

void sub_100035618()
{
  if (!qword_10015EDA0)
  {
    sub_100035698();
    sub_1000357A8(255, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EDA0);
    }
  }
}

void sub_100035698()
{
  if (!qword_10015EDA8)
  {
    sub_100035718();
    sub_1000357A8(255, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8, (uint64_t)&type metadata for Color);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EDA8);
    }
  }
}

void sub_100035718()
{
  if (!qword_10015EDB0)
  {
    sub_100032B58(255, &qword_10015EDB8, (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EDB0);
    }
  }
}

void sub_1000357A8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_10003594C(255, a3, a4, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    unint64_t v5 = sub_1001250A0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_100035814(uint64_t a1)
{
}

void sub_100035834()
{
  if (!qword_10015EDF0)
  {
    sub_1000358C0();
    sub_10003594C(255, &qword_10015EE08, (uint64_t)&type metadata for Bool, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EDF0);
    }
  }
}

void sub_1000358C0()
{
  if (!qword_10015EDF8)
  {
    sub_10001B758();
    sub_10003594C(255, (unint64_t *)&qword_10015EE00, (uint64_t)&type metadata for CGFloat, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EDF8);
    }
  }
}

void sub_10003594C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_100035998()
{
  unint64_t result = qword_10015EE10;
  if (!qword_10015EE10)
  {
    sub_100035834();
    sub_100035A28();
    sub_100035AB8(&qword_10015EE28, &qword_10015EE08, (uint64_t)&type metadata for Bool);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EE10);
  }
  return result;
}

unint64_t sub_100035A28()
{
  unint64_t result = qword_10015EE18;
  if (!qword_10015EE18)
  {
    sub_1000358C0();
    sub_10001BABC();
    sub_100035AB8((unint64_t *)&qword_10015EE20, (unint64_t *)&qword_10015EE00, (uint64_t)&type metadata for CGFloat);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EE18);
  }
  return result;
}

uint64_t sub_100035AB8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10003594C(255, a2, a3, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100035B1C()
{
  if (!qword_10015EE30)
  {
    sub_100035C10(255, &qword_10015EE38, (void (*)(uint64_t))sub_100035C9C, (void (*)(void))sub_100035F8C);
    sub_100035C9C();
    sub_100035F8C();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_10015EE30);
    }
  }
}

void sub_100035C10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_100035C9C()
{
  if (!qword_10015EE40)
  {
    sub_100035D1C();
    sub_1000357A8(255, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8, (uint64_t)&type metadata for Color);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EE40);
    }
  }
}

void sub_100035D1C()
{
  if (!qword_10015EE48)
  {
    sub_100035D9C();
    sub_1000357A8(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EE48);
    }
  }
}

void sub_100035D9C()
{
  if (!qword_10015EE50)
  {
    sub_100035E1C();
    sub_1000357A8(255, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EE50);
    }
  }
}

void sub_100035E1C()
{
  if (!qword_10015EE58)
  {
    sub_100035E7C();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EE58);
    }
  }
}

void sub_100035E7C()
{
  if (!qword_10015EE60)
  {
    sub_100035EDC();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EE60);
    }
  }
}

void sub_100035EDC()
{
  if (!qword_10015EE68)
  {
    sub_100035F38();
    unint64_t v0 = sub_100125020();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EE68);
    }
  }
}

unint64_t sub_100035F38()
{
  unint64_t result = qword_10015EE70;
  if (!qword_10015EE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EE70);
  }
  return result;
}

unint64_t sub_100035F8C()
{
  unint64_t result = qword_10015EE78;
  if (!qword_10015EE78)
  {
    sub_100035C9C();
    sub_100036024();
    sub_1000362C8((unint64_t *)&qword_10015EEB8, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8, (uint64_t)&type metadata for Color);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EE78);
  }
  return result;
}

unint64_t sub_100036024()
{
  unint64_t result = qword_10015EE80;
  if (!qword_10015EE80)
  {
    sub_100035D1C();
    sub_1000360BC();
    sub_1000362C8(&qword_10015E600, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EE80);
  }
  return result;
}

unint64_t sub_1000360BC()
{
  unint64_t result = qword_10015EE88;
  if (!qword_10015EE88)
  {
    sub_100035D9C();
    sub_100036154();
    sub_1000362C8((unint64_t *)&qword_10015EEB0, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EE88);
  }
  return result;
}

unint64_t sub_100036154()
{
  unint64_t result = qword_10015EE90;
  if (!qword_10015EE90)
  {
    sub_100035E1C();
    sub_1000361CC();
    sub_100036274();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EE90);
  }
  return result;
}

unint64_t sub_1000361CC()
{
  unint64_t result = qword_10015EE98;
  if (!qword_10015EE98)
  {
    sub_100035E7C();
    sub_100037D24(&qword_10015EEA0, (void (*)(uint64_t))sub_100035EDC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EE98);
  }
  return result;
}

unint64_t sub_100036274()
{
  unint64_t result = qword_10015EEA8;
  if (!qword_10015EEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EEA8);
  }
  return result;
}

uint64_t sub_1000362C8(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000357A8(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100036318(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_100035C10(255, &qword_10015EDE8, (void (*)(uint64_t))sub_100035834, (void (*)(void))sub_100035998);
    uint64_t v7 = v6;
    sub_100035B1C();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1000363CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, char *, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v106 = a4;
  sub_100037B50(0, &qword_10015EEF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IndexingIterator);
  uint64_t v105 = v11;
  __chkstk_darwin(v11);
  uint64_t v104 = (void (**)(char *, uint64_t))((char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v78 - v14;
  uint64_t v95 = sub_100124B00();
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  char v93 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v92 = (char *)&v78 - v18;
  uint64_t v91 = sub_100124E00();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100124AB0();
  uint64_t v97 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_100125320();
  uint64_t v100 = *(void *)(v108 - 8);
  uint64_t v107 = v100;
  __chkstk_darwin(v108);
  uint64_t v103 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100037B50(0, &qword_10015EF00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for Slice);
  uint64_t v88 = v23;
  __chkstk_darwin(v23);
  uint64_t v99 = (double *)((char *)&v78 - v24);
  sub_100032B58(0, &qword_10015EF08, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Layout.Line, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v25 - 8);
  uint64_t v98 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v78 - v28;
  uint64_t v30 = sub_100125310();
  uint64_t v101 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  char v102 = (char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v78 - v33;
  __n128 v37 = __chkstk_darwin(v35);
  if (a6)
  {
    uint64_t v87 = (char *)&v78 - v36;
    uint64_t v86 = v20;
    sub_10001BC2C(a3, (uint64_t)v106, a5 & 1);
    swift_bridgeObjectRetain();
    if (sub_1001252F0())
    {
      uint64_t v38 = a5;
      uint64_t v39 = a1;
      uint64_t v40 = a3;
      uint64_t v85 = a6;
      uint64_t v84 = v38;
      sub_100033EFC((uint64_t)v29);
      uint64_t v41 = v101;
      uint64_t v43 = v101 + 48;
      uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
      if (v42((uint64_t)v29, 1, v30) == 1)
      {
        sub_10001BAA4(v40, (uint64_t)v106, v84 & 1);
        swift_bridgeObjectRelease();
        sub_100037C6C((uint64_t)v29, &qword_10015EF08, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Layout.Line, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        a1 = v39;
      }
      else
      {
        uint64_t v81 = v42;
        uint64_t v82 = v43;
        uint64_t v80 = v15;
        uint64_t v83 = v40;
        unint64_t v79 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
        v79(v87, v29, v30);
        (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v103, v39, v108);
        uint64_t v59 = 1;
        long long v60 = v99;
        uint64_t v61 = v41;
        sub_100033B54(1);
        uint64_t v62 = (uint64_t)v60;
        double v63 = *v60;
        double v64 = v60[1];
        BOOL v50 = *(void *)v60 == *(void *)&v64;
        uint64_t v65 = (uint64_t)v98;
        if (!v50)
        {
          CGFloat v117 = v63;
          CGFloat v122 = v63;
          double v123 = v64;
          sub_100037D24(&qword_10015EEF8, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
          sub_100125E60();
          char v66 = (void (*)(CGFloat *, void))sub_100125F00();
          (*(void (**)(char *))(v61 + 16))(v34);
          v66(&v122, 0);
          uint64_t v62 = (uint64_t)v99;
          v79((char *)v65, v34, v30);
          uint64_t v59 = 0;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v65, v59, 1, v30);
        sub_100037CC8(v62, &qword_10015EF00, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for Slice);
        int v67 = v81(v65, 1, v30);
        sub_100037C6C(v65, &qword_10015EF08, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Layout.Line, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v67 == 1)
        {
          LOBYTE(v122) = v84 & 1;
          uint64_t v68 = v96;
          sub_100124AE0();
          char v69 = v87;
          sub_100125300();
          v127.width = v109;
          v127.height = v110 + v111;
          sub_100124AA0(v127);
          char v70 = v89;
          sub_100124A90();
          uint64_t v71 = v92;
          sub_100124C80();
          (*(void (**)(char *, uint64_t))(v90 + 8))(v70, v91);
          uint64_t v72 = v94;
          uint64_t v73 = v93;
          uint64_t v74 = v95;
          (*(void (**)(char *, void, uint64_t))(v94 + 104))(v93, enum case for LayoutDirection.rightToLeft(_:), v95);
          LOBYTE(v70) = sub_100124AF0();
          uint64_t v75 = *(void (**)(char *, uint64_t))(v72 + 8);
          v75(v73, v74);
          v75(v71, v74);
          sub_100125300();
          if (v70)
          {
            v128.origin.double x = v112;
            v128.size.width = v114;
            v128.origin.double y = v113 - v115;
            v128.size.height = v115 + v116;
            CGRectGetMinX(v128);
            sub_100125300();
          }
          else
          {
            v129.origin.double x = v117;
            v129.size.width = v119;
            v129.origin.double y = v118 - v120;
            v129.size.height = v120 + v121;
            CGRectGetMinX(v129);
          }
          char v77 = v84 & 1;
          sub_100125300();
          v130.origin.double x = v122;
          v130.size.width = v124;
          v130.origin.double y = v123 - v125;
          v130.size.height = v125 + v126;
          CGRectGetMinY(v130);
          sub_100124AC0();
          sub_10001BAA4(v83, (uint64_t)v106, v77);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v97 + 8))(v68, v86);
          return (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v69, v30);
        }
        char v76 = v84 & 1;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v87, v30);
        sub_10001BAA4(v83, (uint64_t)v106, v76);
        swift_bridgeObjectRelease();
        uint64_t v15 = v80;
        a1 = v39;
      }
    }
    else
    {
      sub_10001BAA4(a3, (uint64_t)v106, a5 & 1);
      swift_bridgeObjectRelease();
    }
  }
  long long v44 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  uint64_t v45 = (uint64_t)v104;
  uint64_t v46 = v108;
  v107 += 16;
  uint64_t v106 = v44;
  ((void (*)(void (**)(char *, uint64_t), uint64_t, uint64_t, __n128))v44)(v104, a1, v108, v37);
  sub_100037D24(&qword_10015EEF8, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
  sub_100125E50();
  uint64_t v47 = v105;
  *(CGFloat *)(v45 + *(int *)(v105 + 36)) = v122;
  sub_100037BEC(v45, (uint64_t)v15);
  uint64_t v48 = &v15[*(int *)(v47 + 36)];
  uint64_t v49 = *(void *)v48;
  sub_100125EA0();
  BOOL v50 = v49 == *(void *)&v122;
  uint64_t v51 = v103;
  uint64_t v52 = v102;
  if (!v50)
  {
    uint64_t v105 = v101 + 16;
    uint64_t v104 = (void (**)(char *, uint64_t))(v100 + 8);
    uint64_t v53 = (void (**)(char *, uint64_t))(v101 + 8);
    do
    {
      uint64_t v54 = (void (*)(CGFloat *, void))sub_100125F00();
      (*(void (**)(char *))v105)(v52);
      v54(&v122, 0);
      v106(v51, v15, v46);
      sub_100125EB0();
      (*v104)(v51, v46);
      sub_100124AD0();
      (*v53)(v52, v30);
      uint64_t v55 = v30;
      uint64_t v56 = a2;
      uint64_t v57 = *(void *)v48;
      sub_100125EA0();
      BOOL v50 = v57 == *(void *)&v122;
      a2 = v56;
      uint64_t v30 = v55;
      uint64_t v46 = v108;
    }
    while (!v50);
  }
  return sub_100037CC8((uint64_t)v15, &qword_10015EEF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IndexingIterator);
}

uint64_t sub_1000371A0(uint64_t a1, uint64_t a2)
{
  return sub_1000363CC(a1, a2, *(void *)v2, *(void (**)(char *, char *, uint64_t))(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1000371AC()
{
  return sub_100125810();
}

double sub_1000371E8()
{
  return 0.0;
}

void (*sub_1000371FC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100124870();
  return sub_10002D814;
}

uint64_t sub_100037274(uint64_t a1, uint64_t a2)
{
  sub_100032B58(0, &qword_10015EDB8, (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037318(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100037380(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000373E0(uint64_t a1, uint64_t a2)
{
  sub_100035618();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037454(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 88);
  char v10 = *(unsigned char *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 96);
  sub_10001BAA4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  sub_100037554(v2, v3, v4, v5);
  swift_release();
  sub_100037598(v6, v7, v8, v11, v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100037554(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001BAA4(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100037598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000375AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100124C90();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1000375DC()
{
  return sub_100124CA0();
}

unint64_t sub_100037604()
{
  unint64_t result = qword_10015EEC8;
  if (!qword_10015EEC8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_10015EEC8);
  }
  return result;
}

uint64_t destroy for AlternateRenderer(uint64_t result)
{
  if (*(void *)(result + 24))
  {
    sub_10001BAA4(*(void *)result, *(void *)(result + 8), *(unsigned char *)(result + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AlternateRenderer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    uint64_t v4 = *(void *)a2;
    uint64_t v5 = *(void *)(a2 + 8);
    char v6 = *(unsigned char *)(a2 + 16);
    sub_10001BC2C(*(void *)a2, v5, v6);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  return a1;
}

uint64_t assignWithCopy for AlternateRenderer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      char v7 = *(unsigned char *)(a2 + 16);
      sub_10001BC2C(*(void *)a2, v6, v7);
      uint64_t v8 = *(void *)a1;
      uint64_t v9 = *(void *)(a1 + 8);
      char v10 = *(unsigned char *)(a1 + 16);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 16) = v7;
      sub_10001BAA4(v8, v9, v10);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100037804(a1);
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
    }
  }
  else if (v4)
  {
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *(void *)(a2 + 8);
    char v13 = *(unsigned char *)(a2 + 16);
    sub_10001BC2C(*(void *)a2, v12, v13);
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(unsigned char *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
  }
  return a1;
}

uint64_t sub_100037804(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for AlternateRenderer(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 24);
  if (!v4)
  {
    sub_100037804(a1);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10001BAA4(v6, v7, v8);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockPrice(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StockPrice(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlternateRenderer()
{
  return &type metadata for AlternateRenderer;
}

uint64_t sub_100037994()
{
  return sub_100037D24(&qword_10015EED0, (void (*)(uint64_t))sub_1000379DC);
}

void sub_1000379DC()
{
  if (!qword_10015EED8)
  {
    sub_100032B58(255, &qword_10015ED90, (uint64_t (*)(uint64_t))sub_1000355A8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_100037A70();
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EED8);
    }
  }
}

unint64_t sub_100037A70()
{
  unint64_t result = qword_10015EEE0;
  if (!qword_10015EEE0)
  {
    sub_100032B58(255, &qword_10015ED90, (uint64_t (*)(uint64_t))sub_1000355A8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EEE0);
  }
  return result;
}

unint64_t sub_100037AFC()
{
  unint64_t result = qword_10015EEE8;
  if (!qword_10015EEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EEE8);
  }
  return result;
}

void sub_100037B50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_100125320();
    uint64_t v7 = sub_100037D24(&qword_10015EEF8, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100037BEC(uint64_t a1, uint64_t a2)
{
  sub_100037B50(0, &qword_10015EEF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IndexingIterator);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100037C6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_100032B58(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_100037CC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_100037B50(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_100037D24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for OverviewWidget()
{
  return &type metadata for OverviewWidget;
}

uint64_t sub_100037D7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100037D98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v1 = type metadata accessor for OverviewTimelineProvider(0);
  __chkstk_darwin(v1);
  unint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000385D0();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C790(0, &qword_10015EF28, (void (*)(uint64_t))sub_1000385D0, (void (*)(void))sub_100038750);
  uint64_t v47 = v9;
  uint64_t v44 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v44 - v10;
  sub_100038784();
  uint64_t v50 = v12;
  uint64_t v46 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v52 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100038878();
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v49 = v14;
  __chkstk_darwin(v14);
  uint64_t v45 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123BD0();
  if (qword_10015D4A8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100124570();
  uint64_t v17 = sub_100019244(v16, (uint64_t)qword_100172540);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v3, v17, v16);
  type metadata accessor for OverviewWidgetView();
  sub_100038708(&qword_10015EF20, (void (*)(uint64_t))type metadata accessor for OverviewWidgetView);
  sub_100038708(&qword_10015EF48, (void (*)(uint64_t))type metadata accessor for OverviewTimelineProvider);
  sub_100125940();
  sub_100124EC0();
  uint64_t v18 = sub_100125340();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  uint64_t v23 = sub_100038750();
  sub_100124F40();
  sub_10001BAA4(v18, v20, v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100124EC0();
  uint64_t v24 = sub_100125340();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  uint64_t v53 = v5;
  uint64_t v54 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = v47;
  sub_100124F20();
  sub_10001BAA4(v24, v26, v28);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v30);
  sub_10003CF04(0, &qword_10015EF50, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v31 = sub_1001258F0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void *)(v32 + 72);
  unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_100128AB0;
  unint64_t v36 = v35 + v34;
  __n128 v37 = *(void (**)(unint64_t, void, uint64_t))(v32 + 104);
  v37(v36, enum case for WidgetFamily.systemSmall(_:), v31);
  v37(v36 + v33, enum case for WidgetFamily.systemMedium(_:), v31);
  v37(v36 + 2 * v33, enum case for WidgetFamily.systemLarge(_:), v31);
  v37(v36 + 3 * v33, enum case for WidgetFamily.accessoryRectangular(_:), v31);
  uint64_t v53 = v30;
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v45;
  uint64_t v40 = v50;
  uint64_t v41 = v52;
  sub_100124F30();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v40);
  uint64_t v53 = v40;
  uint64_t v54 = v38;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v49;
  sub_100124F50();
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v39, v42);
}

uint64_t sub_10003854C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10003CD70(a1, a2, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
  unint64_t v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for OverviewWidgetView() + 20));
  *unint64_t v3 = swift_getKeyPath();
  sub_10003A32C(0);

  return swift_storeEnumTagMultiPayload();
}

void sub_1000385D0()
{
  if (!qword_10015EF10)
  {
    sub_100123BD0();
    type metadata accessor for OverviewWidgetView();
    sub_100038708(&qword_10015EF18, (void (*)(uint64_t))&type metadata accessor for WatchlistWidgetConfigurationIntent);
    sub_100038708(&qword_10015EF20, (void (*)(uint64_t))type metadata accessor for OverviewWidgetView);
    unint64_t v0 = sub_100125950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EF10);
    }
  }
}

uint64_t type metadata accessor for OverviewWidgetView()
{
  uint64_t result = qword_10015EFE0;
  if (!qword_10015EFE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100038708(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100038750()
{
  return sub_100038708(&qword_10015EF30, (void (*)(uint64_t))sub_1000385D0);
}

void sub_100038784()
{
  if (!qword_10015EF38)
  {
    sub_10003C790(255, &qword_10015EF28, (void (*)(uint64_t))sub_1000385D0, (void (*)(void))sub_100038750);
    sub_1000385D0();
    sub_100038750();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_10015EF38);
    }
  }
}

void sub_100038878()
{
  if (!qword_10015EF40)
  {
    sub_100038784();
    sub_10003C790(255, &qword_10015EF28, (void (*)(uint64_t))sub_1000385D0, (void (*)(void))sub_100038750);
    sub_1000385D0();
    sub_100038750();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_10015EF40);
    }
  }
}

uint64_t sub_1000389A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v3 = sub_100124A80();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  __chkstk_darwin(v3);
  uint64_t v42 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100125080();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001248B0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C31C();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C884(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C8A4(0);
  uint64_t v19 = v18;
  __chkstk_darwin(v18);
  char v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C920();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v38 = v22;
  uint64_t v39 = v23;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100038F54(v2, (uint64_t)v14);
  uint64_t v26 = sub_1001257D0();
  sub_100039B74(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, INFINITY, 0, v26, v27, (void (*)(uint64_t, uint64_t))sub_10003CDD8, (uint64_t (*)(void))sub_10003C884);
  sub_10003B5F0((uint64_t)v14, (uint64_t (*)(void))sub_10003C31C);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ColorScheme.dark(_:), v8);
  uint64_t v29 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  sub_10003C8EC(0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)v29 + *(int *)(v30 + 28), v11, v8);
  *uint64_t v29 = KeyPath;
  sub_10003CD70((uint64_t)v17, (uint64_t)v21, (uint64_t (*)(void))sub_10003C884);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_10003B5F0((uint64_t)v17, (uint64_t (*)(void))sub_10003C884);
  sub_100125070();
  sub_1001257D0();
  unint64_t v31 = sub_10003C9C0();
  unint64_t v37 = sub_10003CD14();
  sub_100125470();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
  sub_10003B5F0((uint64_t)v21, (uint64_t (*)(void))sub_10003C8A4);
  uint64_t v32 = v42;
  uint64_t v33 = v43;
  uint64_t v34 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, enum case for DynamicTypeSize.large(_:), v44);
  uint64_t v46 = v19;
  uint64_t v47 = &type metadata for TodayBackgroundView;
  unint64_t v48 = v31;
  unint64_t v49 = v37;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v38;
  sub_100125440();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v25, v35);
}

uint64_t sub_100038F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  char v76 = (char *)a1;
  uint64_t v70 = sub_100124B70();
  uint64_t v73 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v72 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for WatchlistOverviewContentView(0);
  __chkstk_darwin(v69);
  uint64_t v4 = (uint64_t *)((char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10003C748(0);
  uint64_t v68 = v5;
  uint64_t v71 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C700(0);
  uint64_t v74 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v61 - v12;
  uint64_t v14 = type metadata accessor for WatchlistOverviewContentViewModel(0);
  __chkstk_darwin(v14);
  uint64_t v67 = (uint64_t)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v61 - v17;
  sub_10003C518(0, &qword_10015F0F8, (uint64_t (*)(uint64_t))sub_10003C3B8, (uint64_t (*)(uint64_t))sub_10003C700, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v20 = v19;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v61 - v21;
  uint64_t v23 = type metadata accessor for OverviewTimelineEntry();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003CD70((uint64_t)v76, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v62 = v14;
    double v63 = v10;
    char v76 = v7;
    uint64_t v65 = v20;
    char v66 = v13;
    sub_10003A874();
    int v27 = v25[*(int *)(v26 + 80)];
    sub_10003CFF8((uint64_t)&v25[*(int *)(v26 + 48)], (uint64_t)v18, type metadata accessor for WatchlistOverviewContentViewModel);
    double v64 = v18;
    uint64_t v28 = v67;
    sub_10003CD70((uint64_t)v18, v67, type metadata accessor for WatchlistOverviewContentViewModel);
    *uint64_t v4 = swift_getKeyPath();
    sub_10003A32C(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = v69;
    uint64_t v30 = (char *)v4 + *(int *)(v69 + 20);
    *(void *)uint64_t v30 = swift_getKeyPath();
    v30[8] = 0;
    unint64_t v31 = (char *)v4 + *(int *)(v29 + 24);
    *(void *)unint64_t v31 = swift_getKeyPath();
    *((void *)v31 + 1) = 0;
    *((void *)v31 + 2) = 0;
    *((void *)v31 + 3) = 0;
    v31[32] = 0;
    sub_10003CFF8(v28, (uint64_t)v4 + *(int *)(v29 + 28), type metadata accessor for WatchlistOverviewContentViewModel);
    BOOL v32 = v27 == 1;
    uint64_t v33 = v74;
    uint64_t v34 = v70;
    if (v32)
    {
      uint64_t v47 = v72;
      sub_100124B60();
    }
    else
    {
      *(void *)&long long v77 = _swiftEmptyArrayStorage;
      sub_100038708(&qword_10015F100, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
      sub_10003CF04(0, &qword_10015F108, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
      sub_10003CF68();
      uint64_t v47 = v72;
      sub_100126090();
    }
    uint64_t v48 = v73;
    uint64_t v49 = (uint64_t)v76;
    sub_10003C81C();
    sub_1001254D0();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v34);
    sub_10003B5F0((uint64_t)v4, type metadata accessor for WatchlistOverviewContentView);
    uint64_t v50 = (uint64_t)v64;
    uint64_t v51 = &v64[*(int *)(v62 + 28)];
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v53 = (uint64_t)v63;
    uint64_t v54 = (uint64_t *)&v63[*(int *)(v33 + 36)];
    sub_10003C850(0);
    uint64_t v56 = (char *)v54 + *(int *)(v55 + 28);
    uint64_t v57 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v56, v51, v57);
    *uint64_t v54 = KeyPath;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v53, v49, v68);
    uint64_t v58 = (uint64_t)v66;
    sub_10003CFF8(v53, (uint64_t)v66, (uint64_t (*)(void))sub_10003C700);
    sub_10003CD70(v58, (uint64_t)v22, (uint64_t (*)(void))sub_10003C700);
    swift_storeEnumTagMultiPayload();
    sub_10003C3B8(0);
    sub_100038708(&qword_10015F0D0, sub_10003C3B8);
    sub_10003CC3C();
    sub_100124F80();
    sub_10003B5F0(v58, (uint64_t (*)(void))sub_10003C700);
    sub_10003B5F0(v50, type metadata accessor for WatchlistOverviewContentViewModel);
  }
  else
  {
    sub_10003A7CC();
    uint64_t v36 = *(void *)&v25[*(int *)(v35 + 64) + 8];
    uint64_t v37 = sub_100124EF0();
    sub_1000397EC(v36, (uint64_t)&v77);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v38 = v78;
    char v39 = v80;
    int v40 = v81;
    uint64_t v41 = v84;
    char v42 = v85;
    long long v43 = v79;
    long long v44 = v77;
    long long v45 = v82;
    long long v46 = v83;
    *(void *)uint64_t v22 = v37;
    *((void *)v22 + 1) = 0;
    v22[16] = 1;
    *(_OWORD *)(v22 + 24) = v44;
    v22[40] = v38;
    *((_OWORD *)v22 + 3) = v43;
    v22[64] = v39;
    *((_DWORD *)v22 + 17) = v40;
    *(_OWORD *)(v22 + 72) = v45;
    *(_OWORD *)(v22 + 88) = v46;
    *((void *)v22 + 13) = v41;
    v22[112] = v42;
    swift_storeEnumTagMultiPayload();
    sub_10003C3B8(0);
    sub_100038708(&qword_10015F0D0, sub_10003C3B8);
    sub_10003CC3C();
    sub_100124F80();
  }
  uint64_t v59 = sub_1001232B0();
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v59 - 8) + 8))(v25, v59);
}

uint64_t sub_1000397EC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  sub_10001BA50();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_100125350();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_100125150();
  uint64_t v8 = sub_1001252E0();
  uint64_t v10 = v9;
  char v12 = v11;
  swift_release();
  sub_10001BAA4(v3, v5, v7);
  swift_bridgeObjectRelease();
  sub_100125190();
  uint64_t v13 = sub_1001252B0();
  uint64_t v45 = v14;
  uint64_t v46 = v15;
  char v17 = v16;
  sub_10001BAA4(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  int v18 = sub_100124FC0();
  if (a1)
  {
    int v38 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100125350();
    uint64_t v21 = v20;
    char v23 = v22 & 1;
    sub_100125140();
    char v39 = v17;
    uint64_t v24 = sub_1001252E0();
    uint64_t v26 = v25;
    char v28 = v27;
    swift_release();
    sub_10001BAA4(v19, v21, v23);
    swift_bridgeObjectRelease();
    sub_100124FD0();
    uint64_t v29 = sub_1001252C0();
    uint64_t v41 = v30;
    uint64_t v43 = v29;
    uint64_t v40 = v31;
    uint64_t v33 = v32 & 1;
    uint64_t v34 = v24;
    char v17 = v39;
    sub_10001BAA4(v34, v26, v28 & 1);
    swift_bridgeObjectRelease();
    uint64_t v35 = swift_getKeyPath();
    int v18 = v38;
    char v36 = 1;
  }
  else
  {
    uint64_t v41 = 0;
    uint64_t v43 = 0;
    uint64_t v33 = 0;
    uint64_t v40 = 0;
    uint64_t v35 = 0;
    char v36 = 0;
  }
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v45;
  *(unsigned char *)(a2 + 16) = v17 & 1;
  *(void *)(a2 + 24) = v46;
  *(void *)(a2 + 32) = KeyPath;
  *(unsigned char *)(a2 + 40) = 1;
  *(_DWORD *)(a2 + 44) = v18;
  *(void *)(a2 + 48) = v43;
  *(void *)(a2 + 56) = v41;
  *(void *)(a2 + 64) = v33;
  *(void *)(a2 + 72) = v40;
  *(void *)(a2 + 80) = v35;
  *(unsigned char *)(a2 + 88) = v36;
  sub_10001BC2C(v13, v45, v17 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10003D108(v43, v41, v33, v40);
  sub_10003D158(v43, v41, v33, v40);
  sub_10001BAA4(v13, v45, v17 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_100039B04@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100039B74(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_10003D2E0, (uint64_t (*)(void))sub_10003D2F8).n128_u64[0];
  return result;
}

__n128 sub_100039B74@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t, uint64_t), uint64_t (*a17)(void))
{
  uint64_t v18 = v17;
  uint64_t v20 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100125F50();
    uint64_t v29 = (void *)sub_1001250D0();
    sub_100124530();

    uint64_t v20 = a17;
  }
  sub_100124B90();
  a16(v18, a9);
  uint64_t v30 = (_OWORD *)(a9 + *(int *)(v20(0) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  _OWORD *v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

id sub_100039D48@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void *a16, char a17)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100125F50();
    uint64_t v26 = (void *)sub_1001250D0();
    sub_100124530();
  }
  sub_100124B90();
  *(void *)a9 = a16;
  *(unsigned char *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v32;
  *(_OWORD *)(a9 + 96) = v33;
  *(_OWORD *)(a9 + 112) = v34;
  *(_OWORD *)(a9 + 16) = v28;
  *(_OWORD *)(a9 + 32) = v29;
  *(_OWORD *)(a9 + 48) = v30;
  *(_OWORD *)(a9 + 64) = v31;

  return a16;
}

double sub_100039F0C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100039B74(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (void (*)(uint64_t, uint64_t))sub_10003D24C, (uint64_t (*)(void))sub_10003D264).n128_u64[0];
  return result;
}

uint64_t sub_100039F7C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100125F50();
    uint64_t v25 = (void *)sub_1001250D0();
    sub_100124530();
  }
  sub_100124B90();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_10003A138@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v20 = a17;
  uint64_t v19 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100125F50();
    long long v29 = (void *)sub_1001250D0();
    sub_100124530();

    uint64_t v20 = a17;
    uint64_t v19 = a18;
  }
  sub_100124B90();
  *(_OWORD *)(a9 + 72) = v34;
  *(_OWORD *)(a9 + 88) = v35;
  *(_OWORD *)(a9 + 104) = v36;
  *(_OWORD *)(a9 + 120) = v37;
  *(_OWORD *)(a9 + 24) = v31;
  *(_OWORD *)(a9 + 40) = v32;
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v20;
  *(void *)(a9 + 16) = v19;
  *(_OWORD *)(a9 + 56) = v33;
  swift_retain();
  swift_retain();

  return swift_retain();
}

void sub_10003A32C(uint64_t a1)
{
}

void *sub_10003A360(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    type metadata accessor for OverviewTimelineEntry();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v8 = sub_1001232B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v49 = v6;
      sub_10003A874();
      uint64_t v48 = v9;
      uint64_t v10 = v9[12];
      char v11 = (void *)((char *)a1 + v10);
      char v12 = (char *)a2 + v10;
      uint64_t v13 = *(void *)((char *)a2 + v10 + 8);
      *char v11 = *(void *)((char *)a2 + v10);
      v11[1] = v13;
      uint64_t v14 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
      uint64_t v15 = v14[5];
      char v16 = &v12[v15];
      uint64_t v47 = (char *)v11 + v15;
      sub_10003A9F4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      uint64_t v18 = v17;
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v47, v16, v18);
      *((unsigned char *)v11 + v14[6]) = v12[v14[6]];
      uint64_t v20 = v14[7];
      uint64_t v21 = (char *)v11 + v20;
      char v22 = &v12[v20];
      uint64_t v23 = sub_1001238A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *(void *)((char *)v11 + v14[8]) = *(void *)&v12[v14[8]];
      *(void *)((char *)v11 + v14[9]) = *(void *)&v12[v14[9]];
      *((unsigned char *)v11 + v14[10]) = v12[v14[10]];
      uint64_t v24 = v14[11];
      uint64_t v25 = (char *)v11 + v24;
      uint64_t v26 = &v12[v24];
      sub_10003A9F4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      uint64_t v28 = v27;
      uint64_t v29 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v27))
      {
        sub_100029100();
        memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v25, v26, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
      }
      uint64_t v6 = v49;
      *((unsigned char *)a1 + v48[16]) = *((unsigned char *)a2 + v48[16]);
      *((unsigned char *)a1 + v48[20]) = *((unsigned char *)a2 + v48[20]);
      *((unsigned char *)a1 + v48[24]) = *((unsigned char *)a2 + v48[24]);
    }
    else
    {
      sub_10003A7CC();
      uint64_t v33 = *(int *)(v32 + 48);
      long long v34 = (void *)((char *)a1 + v33);
      long long v35 = (void *)((char *)a2 + v33);
      uint64_t v37 = *v35;
      uint64_t v36 = v35[1];
      *long long v34 = v37;
      v34[1] = v36;
      uint64_t v38 = *(int *)(v32 + 64);
      char v39 = (void *)((char *)a1 + v38);
      uint64_t v40 = (void *)((char *)a2 + v38);
      uint64_t v41 = v40[1];
      *char v39 = *v40;
      v39[1] = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = *(int *)(v6 + 20);
    uint64_t v43 = (void *)((char *)a1 + v42);
    long long v44 = (void *)((char *)a2 + v42);
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v45 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    }
    else
    {
      *uint64_t v43 = *v44;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10003A7CC()
{
  if (!qword_10015EF58)
  {
    sub_1001232B0();
    sub_10003C620(255, &qword_10015EF60, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_10015EF58);
    }
  }
}

void sub_10003A874()
{
  if (!qword_10015EF68)
  {
    __chkstk_darwin(0);
    sub_1001232B0();
    type metadata accessor for WatchlistOverviewContentViewModel(255);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_10015EF68);
    }
  }
}

void sub_10003A98C(uint64_t a1)
{
}

uint64_t sub_10003A9C0()
{
  return sub_100038708(&qword_10015EF80, sub_10003A98C);
}

void sub_10003A9F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_10003AA74(uint64_t a1, uint64_t a2)
{
  type metadata accessor for OverviewTimelineEntry();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  if (EnumCaseMultiPayload == 1)
  {
    sub_10003A874();
    uint64_t v7 = a1 + *(int *)(v6 + 48);
    swift_bridgeObjectRelease();
    uint64_t v8 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
    uint64_t v9 = v7 + v8[5];
    sub_10003A9F4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = v7 + v8[7];
    uint64_t v12 = sub_1001238A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    uint64_t v13 = v7 + v8[11];
    sub_10003A9F4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v15 = v14;
    uint64_t v16 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
    }
  }
  else
  {
    sub_10003A7CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = a1 + *(int *)(a2 + 20);
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_1001258F0();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
    return v19(v17, v18);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10003AD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for OverviewTimelineEntry();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v47 = a3;
    sub_10003A874();
    uint64_t v46 = v8;
    uint64_t v9 = v8[12];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = a2 + v9;
    uint64_t v12 = *(void *)(a2 + v9 + 8);
    *uint64_t v10 = *(void *)(a2 + v9);
    v10[1] = v12;
    uint64_t v13 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = v11 + v14;
    uint64_t v45 = (char *)v10 + v14;
    sub_10003A9F4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v17 = v16;
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v45, v15, v17);
    *((unsigned char *)v10 + v13[6]) = *(unsigned char *)(v11 + v13[6]);
    uint64_t v19 = v13[7];
    uint64_t v20 = (char *)v10 + v19;
    uint64_t v21 = v11 + v19;
    uint64_t v22 = sub_1001238A0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    *(void *)((char *)v10 + v13[8]) = *(void *)(v11 + v13[8]);
    *(void *)((char *)v10 + v13[9]) = *(void *)(v11 + v13[9]);
    *((unsigned char *)v10 + v13[10]) = *(unsigned char *)(v11 + v13[10]);
    uint64_t v23 = v13[11];
    uint64_t v24 = (char *)v10 + v23;
    uint64_t v25 = (const void *)(v11 + v23);
    sub_10003A9F4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v27 = v26;
    uint64_t v28 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v26))
    {
      sub_100029100();
      memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v28 + 16))(v24, v25, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
    }
    *(unsigned char *)(a1 + v46[16]) = *(unsigned char *)(a2 + v46[16]);
    *(unsigned char *)(a1 + v46[20]) = *(unsigned char *)(a2 + v46[20]);
    *(unsigned char *)(a1 + v46[24]) = *(unsigned char *)(a2 + v46[24]);
    swift_storeEnumTagMultiPayload();
    a3 = v47;
  }
  else
  {
    sub_10003A7CC();
    uint64_t v31 = *(int *)(v30 + 48);
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = (uint64_t *)(a2 + v31);
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    *uint64_t v32 = v35;
    v32[1] = v34;
    uint64_t v36 = *(int *)(v30 + 64);
    uint64_t v37 = (void *)(a1 + v36);
    uint64_t v38 = (void *)(a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v40 = *(int *)(a3 + 20);
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  else
  {
    *uint64_t v41 = *v42;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10003B17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003B5F0(a1, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
    type metadata accessor for OverviewTimelineEntry();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_1001232B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v43 = a3;
      sub_10003A874();
      uint64_t v42 = v8;
      uint64_t v9 = v8[12];
      uint64_t v10 = (void *)(a1 + v9);
      uint64_t v11 = a2 + v9;
      *uint64_t v10 = *(void *)(a2 + v9);
      v10[1] = *(void *)(a2 + v9 + 8);
      uint64_t v12 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = v11 + v13;
      uint64_t v41 = (char *)v10 + v13;
      sub_10003A9F4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      uint64_t v16 = v15;
      uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v41, v14, v16);
      *((unsigned char *)v10 + v12[6]) = *(unsigned char *)(v11 + v12[6]);
      uint64_t v18 = v12[7];
      uint64_t v19 = (char *)v10 + v18;
      uint64_t v20 = v11 + v18;
      uint64_t v21 = sub_1001238A0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      *(void *)((char *)v10 + v12[8]) = *(void *)(v11 + v12[8]);
      *(void *)((char *)v10 + v12[9]) = *(void *)(v11 + v12[9]);
      *((unsigned char *)v10 + v12[10]) = *(unsigned char *)(v11 + v12[10]);
      uint64_t v22 = v12[11];
      uint64_t v23 = (char *)v10 + v22;
      uint64_t v24 = (const void *)(v11 + v22);
      sub_10003A9F4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      uint64_t v26 = v25;
      uint64_t v27 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25))
      {
        sub_100029100();
        memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v27 + 16))(v23, v24, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
      }
      a3 = v43;
      *(unsigned char *)(a1 + v42[16]) = *(unsigned char *)(a2 + v42[16]);
      *(unsigned char *)(a1 + v42[20]) = *(unsigned char *)(a2 + v42[20]);
      *(unsigned char *)(a1 + v42[24]) = *(unsigned char *)(a2 + v42[24]);
    }
    else
    {
      sub_10003A7CC();
      uint64_t v30 = *(int *)(v29 + 48);
      uint64_t v31 = (void *)(a1 + v30);
      uint64_t v32 = (void *)(a2 + v30);
      *uint64_t v31 = *v32;
      v31[1] = v32[1];
      uint64_t v33 = *(int *)(v29 + 64);
      uint64_t v34 = (void *)(a1 + v33);
      uint64_t v35 = (void *)(a2 + v33);
      *uint64_t v34 = *v35;
      v34[1] = v35[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = *(int *)(a3 + 20);
    uint64_t v37 = (void *)(a1 + v36);
    uint64_t v38 = (void *)(a2 + v36);
    sub_10003B5F0(a1 + v36, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *uint64_t v37 = *v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10003B5F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003B650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for OverviewTimelineEntry();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v37 = a3;
    sub_10003A874();
    uint64_t v9 = v8;
    uint64_t v10 = v8[12];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
    uint64_t v13 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = v11 + v14;
    uint64_t v16 = v12 + v14;
    sub_10003A9F4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    *(unsigned char *)(v11 + v13[6]) = *(unsigned char *)(v12 + v13[6]);
    uint64_t v18 = v13[7];
    uint64_t v19 = v11 + v18;
    uint64_t v20 = v12 + v18;
    uint64_t v21 = sub_1001238A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(void *)(v11 + v13[8]) = *(void *)(v12 + v13[8]);
    *(void *)(v11 + v13[9]) = *(void *)(v12 + v13[9]);
    *(unsigned char *)(v11 + v13[10]) = *(unsigned char *)(v12 + v13[10]);
    uint64_t v22 = v13[11];
    uint64_t v23 = (void *)(v11 + v22);
    uint64_t v24 = (const void *)(v12 + v22);
    sub_10003A9F4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v26 = v25;
    uint64_t v27 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25))
    {
      sub_100029100();
      memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v23, v24, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
    }
    *(unsigned char *)(a1 + v9[16]) = *(unsigned char *)(a2 + v9[16]);
    *(unsigned char *)(a1 + v9[20]) = *(unsigned char *)(a2 + v9[20]);
    *(unsigned char *)(a1 + v9[24]) = *(unsigned char *)(a2 + v9[24]);
    swift_storeEnumTagMultiPayload();
    a3 = v37;
  }
  else
  {
    sub_10003A7CC();
    *(_OWORD *)(a1 + *(int *)(v29 + 48)) = *(_OWORD *)(a2 + *(int *)(v29 + 48));
    *(_OWORD *)(a1 + *(int *)(v29 + 64)) = *(_OWORD *)(a2 + *(int *)(v29 + 64));
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v30 = *(int *)(a3 + 20);
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (const void *)(a2 + v30);
  sub_10003A32C(0);
  uint64_t v34 = v33;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = sub_1001258F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 32))(v31, v32, v35);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10003BA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10003B5F0(a1, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
    type metadata accessor for OverviewTimelineEntry();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_1001232B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v37 = a3;
      sub_10003A874();
      uint64_t v9 = v8;
      uint64_t v10 = v8[12];
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
      uint64_t v13 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = v11 + v14;
      uint64_t v16 = v12 + v14;
      sub_10003A9F4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      *(unsigned char *)(v11 + v13[6]) = *(unsigned char *)(v12 + v13[6]);
      uint64_t v18 = v13[7];
      uint64_t v19 = v11 + v18;
      uint64_t v20 = v12 + v18;
      uint64_t v21 = sub_1001238A0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      *(void *)(v11 + v13[8]) = *(void *)(v12 + v13[8]);
      *(void *)(v11 + v13[9]) = *(void *)(v12 + v13[9]);
      *(unsigned char *)(v11 + v13[10]) = *(unsigned char *)(v12 + v13[10]);
      uint64_t v22 = v13[11];
      uint64_t v23 = (void *)(v11 + v22);
      uint64_t v24 = (const void *)(v12 + v22);
      sub_10003A9F4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      uint64_t v26 = v25;
      uint64_t v27 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25))
      {
        sub_100029100();
        memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v23, v24, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
      }
      a3 = v37;
      *(unsigned char *)(a1 + v9[16]) = *(unsigned char *)(a2 + v9[16]);
      *(unsigned char *)(a1 + v9[20]) = *(unsigned char *)(a2 + v9[20]);
      *(unsigned char *)(a1 + v9[24]) = *(unsigned char *)(a2 + v9[24]);
    }
    else
    {
      sub_10003A7CC();
      *(_OWORD *)(a1 + *(int *)(v29 + 48)) = *(_OWORD *)(a2 + *(int *)(v29 + 48));
      *(_OWORD *)(a1 + *(int *)(v29 + 64)) = *(_OWORD *)(a2 + *(int *)(v29 + 64));
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = *(int *)(a3 + 20);
    uint64_t v31 = (void *)(a1 + v30);
    uint64_t v32 = (const void *)(a2 + v30);
    sub_10003B5F0(a1 + v30, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    uint64_t v34 = v33;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = sub_1001258F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 32))(v31, v32, v35);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10003BE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003BE98);
}

uint64_t sub_10003BE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OverviewTimelineEntry();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_10003CF04(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10003BFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003BFD4);
}

uint64_t sub_10003BFD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for OverviewTimelineEntry();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_10003CF04(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_10003C108()
{
  type metadata accessor for OverviewTimelineEntry();
  if (v0 <= 0x3F)
  {
    sub_10003A32C(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10003C1D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003C300()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10003C31C()
{
  if (!qword_10015F018)
  {
    sub_10003C518(255, &qword_10015F020, (uint64_t (*)(uint64_t))sub_10003C3B8, (uint64_t (*)(uint64_t))sub_10003C700, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v0 = sub_100125580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F018);
    }
  }
}

void sub_10003C3B8(uint64_t a1)
{
}

void sub_10003C400(uint64_t a1)
{
}

void sub_10003C434()
{
  if (!qword_10015F038)
  {
    sub_10003C518(255, &qword_10015F040, (uint64_t (*)(uint64_t))sub_10003C59C, (uint64_t (*)(uint64_t))sub_10003C66C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_10003CF04(255, &qword_10015F060, (uint64_t (*)(uint64_t))sub_10003C59C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015F038);
    }
  }
}

void sub_10003C518(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_10003C59C()
{
  if (!qword_10015F048)
  {
    sub_10003C620(255, &qword_10015F050, (uint64_t)&type metadata for TextAlignment, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F048);
    }
  }
}

void sub_10003C620(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_10003C66C()
{
  if (!qword_10015F058)
  {
    unint64_t v0 = sub_100125000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F058);
    }
  }
}

uint64_t sub_10003C6CC()
{
  return sub_100038708(&qword_10015F068, sub_10003C400);
}

void sub_10003C700(uint64_t a1)
{
}

void sub_10003C748(uint64_t a1)
{
}

void sub_10003C790(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

uint64_t sub_10003C81C()
{
  return sub_100038708(&qword_10015F080, (void (*)(uint64_t))type metadata accessor for WatchlistOverviewContentView);
}

void sub_10003C850(uint64_t a1)
{
}

void sub_10003C884(uint64_t a1)
{
}

void sub_10003C8A4(uint64_t a1)
{
}

void sub_10003C8EC(uint64_t a1)
{
}

void sub_10003C920()
{
  if (!qword_10015F0A8)
  {
    sub_10003C8A4(255);
    sub_10003C9C0();
    sub_10003CD14();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_10015F0A8);
    }
  }
}

unint64_t sub_10003C9C0()
{
  unint64_t result = qword_10015F0B0;
  if (!qword_10015F0B0)
  {
    sub_10003C8A4(255);
    sub_10003CA68();
    sub_100038708(&qword_10015F0E8, sub_10003C8EC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F0B0);
  }
  return result;
}

unint64_t sub_10003CA68()
{
  unint64_t result = qword_10015F0B8;
  if (!qword_10015F0B8)
  {
    sub_10003C884(255);
    sub_10003CAE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F0B8);
  }
  return result;
}

unint64_t sub_10003CAE0()
{
  unint64_t result = qword_10015F0C0;
  if (!qword_10015F0C0)
  {
    sub_10003C31C();
    sub_10003CB50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F0C0);
  }
  return result;
}

unint64_t sub_10003CB50()
{
  unint64_t result = qword_10015F0C8;
  if (!qword_10015F0C8)
  {
    sub_10003C518(255, &qword_10015F020, (uint64_t (*)(uint64_t))sub_10003C3B8, (uint64_t (*)(uint64_t))sub_10003C700, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_100038708(&qword_10015F0D0, sub_10003C3B8);
    sub_10003CC3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F0C8);
  }
  return result;
}

unint64_t sub_10003CC3C()
{
  unint64_t result = qword_10015F0D8;
  if (!qword_10015F0D8)
  {
    sub_10003C700(255);
    type metadata accessor for WatchlistOverviewContentView(255);
    sub_10003C81C();
    swift_getOpaqueTypeConformance2();
    sub_100038708(&qword_10015F0E0, sub_10003C850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F0D8);
  }
  return result;
}

unint64_t sub_10003CD14()
{
  unint64_t result = qword_10015F0F0;
  if (!qword_10015F0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F0F0);
  }
  return result;
}

uint64_t sub_10003CD70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003CDD8(uint64_t a1, uint64_t a2)
{
  return sub_10003CD70(a1, a2, (uint64_t (*)(void))sub_10003C31C);
}

uint64_t sub_10003CDF0()
{
  sub_100124D80();
  sub_100038708(&qword_10015F118, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  sub_100124E10();
  return v1;
}

uint64_t sub_10003CE6C@<X0>(unsigned char *a1@<X8>)
{
  sub_100124D80();
  sub_100038708(&qword_10015F118, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  uint64_t result = sub_100124E10();
  *a1 = v3;
  return result;
}

void sub_10003CF04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_10003CF68()
{
  unint64_t result = qword_10015F110;
  if (!qword_10015F110)
  {
    sub_10003CF04(255, &qword_10015F108, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F110);
  }
  return result;
}

uint64_t sub_10003CFF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003D060@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100124D20();
  *a1 = result;
  return result;
}

uint64_t sub_10003D08C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100124D20();
  *a1 = result;
  return result;
}

uint64_t sub_10003D0B8()
{
  return sub_100124D30();
}

uint64_t sub_10003D0E0()
{
  return sub_100124D30();
}

uint64_t sub_10003D108(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001BC2C(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10003D158(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001BAA4(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10003D1A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003D24C(uint64_t a1, uint64_t a2)
{
  return sub_10003CD70(a1, a2, type metadata accessor for LargeSparklineView);
}

void sub_10003D264(uint64_t a1)
{
}

void sub_10003D284(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10003D2E0(uint64_t a1, uint64_t a2)
{
  return sub_10003CD70(a1, a2, type metadata accessor for HeadlineView);
}

void sub_10003D2F8(uint64_t a1)
{
}

unint64_t sub_10003D318(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003F410(0, &qword_10015F298);
  uint64_t v2 = (void *)sub_1001262F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10003E754(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10003D440(uint64_t a1)
{
  return sub_10003D480(a1, (unint64_t *)&unk_10015F2A0, (void (*)(uint64_t))sub_1000146B4);
}

unint64_t sub_10003D460(uint64_t a1)
{
  return sub_10003D480(a1, (unint64_t *)&qword_10015F288, (void (*)(uint64_t))sub_10003ED04);
}

unint64_t sub_10003D480(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003ECA0(0, a2, a3);
  unint64_t v4 = (void *)sub_1001262F0();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10003E754(v7, v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v4[6] + 16 * result);
    *BOOL v12 = v7;
    v12[1] = v8;
    *(void *)(v4[7] + 8 * result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10003D598(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003F410(0, &qword_10015F2E8);
  uint64_t v2 = (void *)sub_1001262F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10003E754(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    *char v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10003D6C8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003EC38(0, a2, a3);
  unint64_t v4 = (void *)sub_1001262F0();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  uint64_t v6 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v7 = (uint64_t)*(v6 - 2);
    uint64_t v8 = (uint64_t)*(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain();
    id v10 = v9;
    unint64_t result = sub_10003E754(v7, v8);
    if (v12) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    *(void *)(v4[7] + 8 * result) = v10;
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10003D7E0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003F5E4();
  uint64_t v2 = (void *)sub_1001262F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_10003E864((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10003D8E8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003F464();
  uint64_t v2 = sub_1001262F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10003F504(v6, (uint64_t)&v13);
    uint64_t v7 = v13;
    unint64_t result = sub_10003E864(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_10003F5D4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10003DA00(uint64_t a1)
{
  return sub_10003DA58(a1, (unint64_t *)&qword_10015F2B0, (void (*)(uint64_t))&type metadata accessor for DisplayRepresentation, &qword_10015F2B8, (uint64_t (*)(void))&type metadata accessor for DisplayRepresentation);
}

unint64_t sub_10003DA2C(uint64_t a1)
{
  return sub_10003DA58(a1, (unint64_t *)&qword_10015F2C8, (void (*)(uint64_t))sub_10003F284, &qword_10015F2E0, (uint64_t (*)(void))sub_10003F284);
}

unint64_t sub_10003DA58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v31 = a5;
  uint64_t v32 = a2;
  sub_10003F220(0, a2, a3);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v30 - v11;
  if (!*(void *)(a1 + 16))
  {
    long long v14 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003F334(0, a4, a3);
  uint64_t v13 = sub_1001262F0();
  long long v14 = (void *)v13;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v14;
  }
  uint64_t v16 = &v12[*(int *)(v9 + 48)];
  uint64_t v17 = v13 + 64;
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v30[1] = a1;
  uint64_t v19 = a1 + v18;
  uint64_t v20 = *(void *)(v10 + 72);
  swift_retain();
  while (1)
  {
    sub_10003F3A4(v19, (uint64_t)v12, v32, a3);
    char v21 = *v12;
    unint64_t result = sub_10003E8F4(*v12);
    if (v23) {
      break;
    }
    unint64_t v24 = result;
    *(void *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v14[6] + result) = v21;
    uint64_t v25 = v14[7];
    uint64_t v26 = v31(0);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v25 + *(void *)(*(void *)(v26 - 8) + 72) * v24, v16, v26);
    uint64_t v27 = v14[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    v14[2] = v29;
    v19 += v20;
    if (!--v15)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10003DC5C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x746867696CLL;
    }
    else {
      uint64_t v3 = 1802658148;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x746867696CLL;
      }
      else {
        uint64_t v6 = 1802658148;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x746C7561666564;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x746C7561666564)
  {
LABEL_21:
    char v8 = sub_100126530();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10003DD60(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1853321060;
  }
  else {
    uint64_t v3 = 28789;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1853321060;
  }
  else {
    uint64_t v5 = 28789;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_100126530();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10003DDF4(char a1, char a2)
{
  unint64_t v3 = 0xE200000000000000;
  uint64_t v4 = 25705;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0x7475626972747461;
      unint64_t v3 = 0xEB000000006E6F69;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x656C746974;
      break;
    case 3:
      uint64_t v4 = 0x74616E6974736564;
      unint64_t v3 = 0xEE004C52556E6F69;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xE200000000000000;
  uint64_t v6 = 25705;
  switch(a2)
  {
    case 1:
      unint64_t v5 = 0xEB000000006E6F69;
      if (v4 == 0x7475626972747461) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v5 = 0xE500000000000000;
      uint64_t v6 = 0x656C746974;
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xEE004C52556E6F69;
      if (v4 == 0x74616E6974736564) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != v6) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v5) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_100126530();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10003DF90(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000014;
  }
  else {
    unint64_t v3 = 0x4E64726F6365725FLL;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000656D61;
  }
  else {
    unint64_t v4 = 0x8000000100130790;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000014;
  }
  else {
    unint64_t v5 = 0x4E64726F6365725FLL;
  }
  if (a2) {
    unint64_t v6 = 0x8000000100130790;
  }
  else {
    unint64_t v6 = 0xEB00000000656D61;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_100126530();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10003E044(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x79636176697270;
  }
  else {
    uint64_t v3 = 1953460082;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x79636176697270;
  }
  else {
    uint64_t v5 = 1953460082;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_100126530();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10003E0E4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_10003E104, 0, 0);
}

uint64_t sub_10003E104()
{
  sub_100009D98((void *)(*(void *)(v0 + 24) + 16), *(void *)(*(void *)(v0 + 24) + 40));
  unsigned __int8 v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  void *v1 = v0;
  v1[1] = sub_10003E1A4;
  return sub_100073134();
}

uint64_t sub_10003E1A4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 40) = a1;
    return _swift_task_switch(sub_10003E2F0, 0, 0);
  }
}

uint64_t sub_10003E2F0()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10003E314(id *a1, uint64_t a2)
{
  id v3 = [*a1 derivedPersonalizationData];
  if (!v3)
  {
    sub_10003D6C8((uint64_t)_swiftEmptyArrayStorage, &qword_10015F280, &qword_10015F278);
    id v4 = objc_allocWithZone((Class)FCDerivedPersonalizationData);
    sub_10003EBFC(0, &qword_10015F278);
    Class isa = sub_1001259F0().super.isa;
    swift_bridgeObjectRelease();
    id v3 = [v4 initWithAggregates:isa scoringType:0 decayRate:0.0];
  }
  sub_1001244E0();
  [objc_allocWithZone((Class)FCReadonlyPersonalizationAggregateStore) initWithGenerator:v3];
  sub_100029758(a2 + 56, (uint64_t)v8);
  swift_unknownObjectRetain();
  uint64_t v6 = sub_1001244D0();

  *(void *)(a2 + 96) = v6;
  return swift_unknownObjectRelease();
}

unint64_t sub_10003E488(unint64_t a1)
{
  if (!*(void *)(v1 + 96)) {
    return sub_10003D6C8((uint64_t)_swiftEmptyArrayStorage, &qword_10015F248, &qword_10015F250);
  }
  if (a1 >> 62)
  {
    sub_10003EAE0(0, &qword_10015F240);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001262A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_100126540();
    sub_10003EAE0(0, &qword_10015F240);
    if (!swift_dynamicCastMetatype())
    {
      uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v6)
      {
        uint64_t v7 = v3 + 32;
        do
        {
          if (!swift_dynamicCastObjCProtocolConditional()) {
            break;
          }
          v7 += 8;
          --v6;
        }
        while (v6);
      }
    }
  }
  swift_getObjectType();
  uint64_t v4 = sub_100125F90();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10003E614()
{
  sub_100009D48(v0 + 16);
  sub_100009D48(v0 + 56);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetScoringService()
{
  return self;
}

uint64_t sub_10003E680()
{
  sub_10003EA78();
  swift_retain();
  sub_100124320();
  swift_retain();
  uint64_t v0 = (void *)sub_100124300();
  uint64_t v1 = sub_100124330();
  swift_release();
  swift_release();

  return v1;
}

unint64_t sub_10003E730(unint64_t a1)
{
  return sub_10003E488(a1);
}

unint64_t sub_10003E754(uint64_t a1, uint64_t a2)
{
  sub_1001265F0();
  sub_100125BA0();
  Swift::Int v4 = sub_100126630();

  return sub_10003E994(a1, a2, v4);
}

unint64_t sub_10003E7CC(uint64_t a1)
{
  sub_100123D40();
  sub_10003F690(&qword_10015F2F0, (void (*)(uint64_t))&type metadata accessor for Stock);
  uint64_t v2 = sub_100125A30();

  return sub_10003EDB0(a1, v2);
}

unint64_t sub_10003E864(uint64_t a1)
{
  sub_100125B10();
  sub_1001265F0();
  sub_100125BA0();
  Swift::Int v2 = sub_100126630();
  swift_bridgeObjectRelease();
  return sub_10003EF70(a1, v2);
}

unint64_t sub_10003E8F4(char a1)
{
  sub_1001265F0();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_100126630();

  return sub_10003F0E8(a1 & 1, v2);
}

unint64_t sub_10003E994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_100126530() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_100126530() & 1) == 0);
    }
  }
  return v6;
}

void sub_10003EA78()
{
  if (!qword_10015F258)
  {
    sub_10003EAE0(255, &qword_10015F260);
    unint64_t v0 = sub_100124370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F258);
    }
  }
}

uint64_t sub_10003EAE0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10003EB34(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_100013D40;
  return _swift_task_switch(sub_10003E104, 0, 0);
}

uint64_t sub_10003EBE0(id *a1)
{
  return sub_10003E314(a1, v1);
}

uint64_t sub_10003EBFC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_10003EC38(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_10003EBFC(255, a3);
    unint64_t v4 = sub_100126300();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10003ECA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100126300();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10003ED04()
{
  if (!qword_10015F290)
  {
    sub_100123E30();
    unint64_t v0 = sub_100125D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F290);
    }
  }
}

unint64_t sub_10003ED5C()
{
  unint64_t result = qword_10015F2C0;
  if (!qword_10015F2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F2C0);
  }
  return result;
}

unint64_t sub_10003EDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_100123D40();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_10003F690(&qword_10015F2F8, (void (*)(uint64_t))&type metadata accessor for Stock);
      char v16 = sub_100125A90();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_10003EF70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_100125B10();
    uint64_t v8 = v7;
    if (v6 == sub_100125B10() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_100126530();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_100125B10();
          uint64_t v15 = v14;
          if (v13 == sub_100125B10() && v15 == v16) {
            break;
          }
          char v18 = sub_100126530();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10003F0E8(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x79636176697270;
    }
    else {
      uint64_t v6 = 1953460082;
    }
    if (a1) {
      unint64_t v7 = 0xE700000000000000;
    }
    else {
      unint64_t v7 = 0xE400000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x79636176697270 : 1953460082;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE700000000000000 : 0xE400000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_100126530();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

void sub_10003F220(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_10003F284()
{
  if (!qword_10015F2D0)
  {
    sub_10003F2E0();
    unint64_t v0 = sub_100122E10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F2D0);
    }
  }
}

unint64_t sub_10003F2E0()
{
  unint64_t result = qword_10015F2D8;
  if (!qword_10015F2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F2D8);
  }
  return result;
}

void sub_10003F334(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_10003ED5C();
    unint64_t v4 = sub_100126300();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10003F3A4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_10003F220(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_10003F410(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_100126300();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_10003F464()
{
  if (!qword_10015F300)
  {
    type metadata accessor for AttributeName(255);
    sub_10003F690(&qword_10015DA50, type metadata accessor for AttributeName);
    unint64_t v0 = sub_100126300();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F300);
    }
  }
}

uint64_t sub_10003F504(uint64_t a1, uint64_t a2)
{
  sub_10003F568();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10003F568()
{
  if (!qword_10015F310)
  {
    type metadata accessor for AttributeName(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015F310);
    }
  }
}

_OWORD *sub_10003F5D4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_10003F5E4()
{
  if (!qword_10015F318)
  {
    type metadata accessor for TraitKey(255);
    type metadata accessor for Weight(255);
    sub_10003F690(&qword_10015DA40, type metadata accessor for TraitKey);
    unint64_t v0 = sub_100126300();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F318);
    }
  }
}

uint64_t sub_10003F690(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003F6D8(uint64_t a1)
{
  return sub_10003F794(a1, qword_100172528);
}

uint64_t sub_10003F6F4(uint64_t a1)
{
  return sub_10003F794(a1, qword_100172540);
}

uint64_t sub_10003F720(uint64_t a1)
{
  return sub_10003F794(a1, qword_100172558);
}

uint64_t sub_10003F748(uint64_t a1)
{
  return sub_10003F794(a1, qword_100172570);
}

uint64_t sub_10003F770(uint64_t a1)
{
  return sub_10003F794(a1, qword_100172588);
}

uint64_t sub_10003F794(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100124570();
  sub_10001927C(v3, a2);
  sub_100019244(v3, (uint64_t)a2);
  id v4 = [self mainBundle];
  id v5 = [v4 bundleIdentifier];

  if (v5)
  {
    sub_100125B10();
  }
  return sub_100124560();
}

uint64_t sub_10003F87C()
{
  sub_10003F8D8();
  swift_allocObject();
  uint64_t result = sub_100126680();
  qword_1001725A0 = result;
  return result;
}

void sub_10003F8D8()
{
  if (!qword_10015F320)
  {
    unint64_t v0 = sub_1001266B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F320);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for LoggingActivity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LoggingActivity()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for LoggingActivity(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LoggingActivity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LoggingActivity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LoggingActivity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoggingActivity()
{
  return &type metadata for LoggingActivity;
}

uint64_t sub_10003FA78(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[3];
    if (v7 == 1)
    {
      long long v8 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(void *)a1 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 32) = a2[4];
    uint64_t v10 = a3[6];
    char v11 = (void *)(a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    sub_100040530(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *char v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(void *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    sub_100032BBC(*(void *)v16, v18);
    *(void *)uint64_t v15 = v17;
    *(unsigned char *)(v15 + 8) = v18;
    *(void *)(a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_10003FC40(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_100040530(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1001258F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_100032D54(*(void *)(a1 + *(int *)(a2 + 28)), *(unsigned char *)(a1 + *(int *)(a2 + 28) + 8));

  return swift_release();
}

uint64_t sub_10003FD48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6 == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_100040530(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)v14;
  char v16 = *(unsigned char *)(v14 + 8);
  sub_100032BBC(*(void *)v14, v16);
  *(void *)uint64_t v13 = v15;
  *(unsigned char *)(v13 + 8) = v16;
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  return a1;
}

uint64_t sub_10003FEC4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = a2[3];
  if (*(void *)(a1 + 24) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    else
    {
      uint64_t v9 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v9;
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_10003088C(a1);
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  else
  {
    uint64_t v10 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)a1 = v10;
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    sub_1000400C8(a1 + v11);
    sub_100040530(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t)a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100032BBC(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  sub_100032D54(v20, v21);
  *(void *)(a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000400C8(uint64_t a1)
{
  sub_100040530(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100040154(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[6];
  long long v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  sub_100040530(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1001258F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t sub_100040290(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 24) == 1) {
    goto LABEL_4;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6 == 1)
  {
    sub_10003088C(a1);
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_1000400C8(a1 + v8);
    sub_100040530(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    uint64_t v12 = v11;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1001258F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  LOBYTE(v16) = *((unsigned char *)v16 + 8);
  uint64_t v18 = *(void *)v15;
  char v19 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = (_BYTE)v16;
  sub_100032D54(v18, v19);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_10004043C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100040450);
}

uint64_t sub_100040450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_100040530(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

void sub_100040530(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100040594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000405A8);
}

uint64_t sub_1000405A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    sub_100040530(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockPriceView()
{
  uint64_t result = qword_10015F380;
  if (!qword_10015F380) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000406CC()
{
  sub_100040530(319, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000407AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000407C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v96 = a1;
  uint64_t v93 = sub_100124BE0();
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v89 = (char *)v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v90 = (char *)v75 - v5;
  uint64_t v6 = sub_100124BF0();
  uint64_t v94 = *(void *)(v6 - 8);
  uint64_t v95 = v6;
  __chkstk_darwin(v6);
  char v92 = (char *)v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100124A80();
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  int v81 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001258F0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v75 - v14;
  uint64_t v16 = type metadata accessor for StockPriceView();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v21 = (char *)v75 - v20;
  sub_1000411AC();
  uint64_t v83 = v22;
  uint64_t v82 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  char v80 = (char *)v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000416F8();
  uint64_t v79 = v24;
  __chkstk_darwin(v24);
  uint64_t v88 = (char *)v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100041778();
  uint64_t v84 = v26;
  __chkstk_darwin(v26);
  uint64_t v87 = (char *)v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v1[1];
  uint64_t v29 = v1[2];
  uint64_t v30 = v1[3];
  uint64_t v78 = *v1;
  uint64_t v77 = v28;
  uint64_t v76 = v29;
  sub_1000321B8(v78, v28, v29, v30);
  sub_100123FA0();
  int v31 = v97;
  sub_100041B68(v2, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  if (v31 != 1) {
    goto LABEL_7;
  }
  sub_10005EEE4((uint64_t)v15);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  int v32 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  if (v32 == enum case for WidgetFamily.accessoryCircular(_:)
    || v32 == enum case for WidgetFamily.accessoryRectangular(_:)
    || v32 == enum case for WidgetFamily.accessoryInline(_:))
  {
    v33(v15, v9);
LABEL_7:
    sub_100041BD0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StockPriceView);
    sub_100041B68(v2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockPriceView);
    char v37 = 0;
    goto LABEL_8;
  }
  v33(v12, v9);
  v33(v15, v9);
  sub_100041BD0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  sub_100041B68(v2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  uint64_t v34 = &v18[*(int *)(v16 + 28)];
  uint64_t v35 = *(void *)v34;
  char v36 = v34[8];
  sub_100032BBC(*(void *)v34, v36);
  char v37 = sub_10005ECE0(v35, v36);
  sub_100032D54(v35, v36);
LABEL_8:
  sub_100041BD0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  uint64_t v108 = v78;
  uint64_t v109 = v77;
  uint64_t v110 = v76;
  uint64_t v111 = v30;
  LOBYTE(v97) = v37 & 1;
  uint64_t v98 = 0;
  uint64_t v99 = 0;
  LOBYTE(v100) = 0;
  long long v101 = xmmword_100128D30;
  unint64_t v102 = 0xA300000000000000;
  uint64_t v103 = 9666786;
  unint64_t v104 = 0xA300000000000000;
  uint64_t v105 = 9666786;
  unint64_t v106 = 0xA300000000000000;
  sub_100041810();
  sub_1000418EC();
  sub_100041944();
  uint64_t v38 = sub_100125330();
  uint64_t v40 = v39;
  char v42 = v41;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  int v46 = sub_100124FC0();
  v75[1] = v2;
  uint64_t v47 = *(void *)(v2 + 32);
  uint64_t v48 = swift_getKeyPath();
  uint64_t v97 = v38;
  uint64_t v98 = v40;
  LOBYTE(v99) = v42 & 1;
  uint64_t v100 = v44;
  *(void *)&long long v101 = 0;
  *((void *)&v101 + 1) = KeyPath;
  unint64_t v102 = 0;
  uint64_t v103 = 0;
  unint64_t v104 = 0;
  LOBYTE(v105) = 0;
  HIDWORD(v105) = v46;
  unint64_t v106 = v48;
  uint64_t v107 = v47;
  uint64_t v49 = v85;
  uint64_t v50 = v81;
  uint64_t v51 = v86;
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v81, enum case for DynamicTypeSize.large(_:), v86);
  sub_100041230();
  sub_100041418();
  swift_retain();
  uint64_t v52 = v80;
  sub_100125440();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  uint64_t v53 = *((void *)&v101 + 1);
  uint64_t v54 = v102;
  uint64_t v55 = v103;
  uint64_t v56 = v104;
  LOBYTE(v47) = v105;
  sub_10001BAA4(v97, v98, v99);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100037598(v53, v54, v55, v56, v47);
  swift_release();
  swift_release();
  uint64_t v57 = swift_getKeyPath();
  uint64_t v58 = v82;
  uint64_t v59 = (uint64_t)v88;
  uint64_t v60 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v88, v52, v83);
  uint64_t v61 = v59 + *(int *)(v79 + 36);
  *(void *)uint64_t v61 = v57;
  *(void *)(v61 + 8) = 1;
  *(unsigned char *)(v61 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v52, v60);
  uint64_t v62 = v89;
  sub_100124BD0();
  double v63 = v90;
  sub_100124BC0();
  double v64 = *(void (**)(char *, uint64_t))(v91 + 8);
  uint64_t v65 = v62;
  uint64_t v66 = v93;
  v64(v65, v93);
  uint64_t v67 = v92;
  sub_100124BB0();
  v64(v63, v66);
  uint64_t v68 = swift_getKeyPath();
  uint64_t v69 = (uint64_t)v87;
  uint64_t v70 = (uint64_t *)&v87[*(int *)(v84 + 36)];
  sub_100040530(0, &qword_10015F418, (uint64_t (*)(uint64_t))&type metadata accessor for ContentTransition, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
  uint64_t v73 = v94;
  uint64_t v72 = v95;
  (*(void (**)(char *, char *, uint64_t))(v94 + 16))((char *)v70 + *(int *)(v71 + 28), v67, v95);
  *uint64_t v70 = v68;
  sub_100041B68(v59, v69, (uint64_t (*)(void))sub_1000416F8);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v67, v72);
  sub_100041BD0(v59, (uint64_t (*)(void))sub_1000416F8);
  return sub_100041C30(v69, v96);
}

void sub_1000411AC()
{
  if (!qword_10015F3C8)
  {
    sub_100041230();
    sub_100041418();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_10015F3C8);
    }
  }
}

void sub_100041230()
{
  if (!qword_10015F3D0)
  {
    sub_1000412B0();
    sub_1000413C0(255, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F3D0);
    }
  }
}

void sub_1000412B0()
{
  if (!qword_10015F3D8)
  {
    sub_100041370(255, (unint64_t *)&qword_10015F3E0, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for OverflowIntoTextMarginsModifier, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_100041370(255, (unint64_t *)&qword_10015F058, (uint64_t)&type metadata for HierarchicalShapeStyle, (uint64_t)&protocol witness table for HierarchicalShapeStyle, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for _ForegroundStyleModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F3D8);
    }
  }
}

void sub_100041370(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1000413C0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1000419C4(255, a3);
    unint64_t v4 = sub_1001250A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_100041418()
{
  unint64_t result = qword_10015F3E8;
  if (!qword_10015F3E8)
  {
    sub_100041230();
    sub_1000414F4(&qword_10015F3F0, (void (*)(uint64_t))sub_1000412B0, (void (*)(void))sub_100041580, (void (*)(void))sub_100041624);
    sub_1000416A8((unint64_t *)&qword_10015EEB0, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F3E8);
  }
  return result;
}

uint64_t sub_1000414F4(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100041580()
{
  unint64_t result = qword_10015F3F8;
  if (!qword_10015F3F8)
  {
    sub_100041370(255, (unint64_t *)&qword_10015F3E0, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for OverflowIntoTextMarginsModifier, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_100036274();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F3F8);
  }
  return result;
}

unint64_t sub_100041624()
{
  unint64_t result = qword_10015F400;
  if (!qword_10015F400)
  {
    sub_100041370(255, (unint64_t *)&qword_10015F058, (uint64_t)&type metadata for HierarchicalShapeStyle, (uint64_t)&protocol witness table for HierarchicalShapeStyle, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for _ForegroundStyleModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F400);
  }
  return result;
}

uint64_t sub_1000416A8(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000413C0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000416F8()
{
  if (!qword_10015F408)
  {
    sub_1000411AC();
    sub_1000413C0(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F408);
    }
  }
}

void sub_100041778()
{
  if (!qword_10015F410)
  {
    sub_1000416F8();
    sub_100040530(255, &qword_10015F418, (uint64_t (*)(uint64_t))&type metadata accessor for ContentTransition, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F410);
    }
  }
}

void sub_100041810()
{
  if (!qword_10015F420)
  {
    sub_100041898();
    unint64_t v0 = type metadata accessor for NilPlaceholderFormatStyle();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F420);
    }
  }
}

unint64_t sub_100041898()
{
  unint64_t result = qword_10015F428;
  if (!qword_10015F428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F428);
  }
  return result;
}

unint64_t sub_1000418EC()
{
  unint64_t result = qword_10015F430;
  if (!qword_10015F430)
  {
    sub_100041810();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F430);
  }
  return result;
}

unint64_t sub_100041944()
{
  unint64_t result = qword_10015F438;
  if (!qword_10015F438)
  {
    sub_1000419C4(255, &qword_10015F440);
    sub_100041A0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F438);
  }
  return result;
}

void sub_1000419C4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_100126010();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_100041A0C()
{
  unint64_t result = qword_10015F448;
  if (!qword_10015F448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F448);
  }
  return result;
}

uint64_t sub_100041A68(uint64_t a1)
{
  uint64_t v2 = sub_100124BF0();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_100124CE0();
}

uint64_t sub_100041B40()
{
  return sub_100124CD0();
}

uint64_t sub_100041B68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100041BD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100041C30(uint64_t a1, uint64_t a2)
{
  sub_100041778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100041C94()
{
  return sub_1000414F4(&qword_10015F450, (void (*)(uint64_t))sub_100041778, (void (*)(void))sub_100041CF0, (void (*)(void))sub_100041DB8);
}

unint64_t sub_100041CF0()
{
  unint64_t result = qword_10015F458;
  if (!qword_10015F458)
  {
    sub_1000416F8();
    sub_100041230();
    sub_100041418();
    swift_getOpaqueTypeConformance2();
    sub_1000416A8(&qword_10015E600, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F458);
  }
  return result;
}

unint64_t sub_100041DB8()
{
  unint64_t result = qword_10015F460;
  if (!qword_10015F460)
  {
    sub_100040530(255, &qword_10015F418, (uint64_t (*)(uint64_t))&type metadata accessor for ContentTransition, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F460);
  }
  return result;
}

void sub_100041E44()
{
  if (!qword_10015DF28)
  {
    type metadata accessor for PreparedSparkline(255);
    unint64_t v0 = sub_100126010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015DF28);
    }
  }
}

uint64_t sub_100041EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100041EC4);
}

uint64_t sub_100041EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100041EDC);
}

uint64_t type metadata accessor for SmallSparklineView(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015F4C0);
}

void *sub_100041F04(void *a1, void *a2)
{
  uint64_t v4 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = *((void *)v4 - 1);
  unint64_t v6 = *(uint64_t (**)(void *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v25 = v4[5];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_1001232B0();
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24);
      v29(v26, v27, v28);
      sub_10002FE38();
      v29(&v26[*(int *)(v30 + 36)], &v27[*(int *)(v30 + 36)], v28);
      uint64_t v31 = v4[6];
      int v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
      uint64_t v35 = v4[7];
      char v36 = (void *)((char *)a1 + v35);
      char v37 = (void *)((char *)a2 + v35);
      *char v36 = *v37;
      v36[1] = v37[1];
      uint64_t v38 = v4[8];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      char v41 = v40[8];
      *(void *)uint64_t v39 = *(void *)v40;
      v39[8] = v41;
      *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
      return a1;
    }
    sub_100042EBC((uint64_t)a1, type metadata accessor for PreparedSparkline);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_100041E44();
    memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v9 = v4[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1001232B0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  sub_10002FE38();
  v13(&v10[*(int *)(v14 + 36)], &v11[*(int *)(v14 + 36)], v12);
  uint64_t v15 = v4[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
  uint64_t v19 = v4[8];
  uint64_t v20 = (char *)a1 + v19;
  char v21 = (char *)a2 + v19;
  char v22 = v21[8];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v22;
  *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *sub_10004225C(void *a1, void *a2)
{
  uint64_t v4 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = *((void *)v4 - 1);
  unint64_t v6 = *(uint64_t (**)(void *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      swift_bridgeObjectRelease();
      uint64_t v24 = v4[5];
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_1001232B0();
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40);
      v28(v25, v26, v27);
      sub_10002FE38();
      v28(&v25[*(int *)(v29 + 36)], &v26[*(int *)(v29 + 36)], v27);
      uint64_t v30 = v4[6];
      uint64_t v31 = (char *)a1 + v30;
      int v32 = (char *)a2 + v30;
      uint64_t v33 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
      *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
      uint64_t v34 = v4[8];
      uint64_t v35 = (char *)a1 + v34;
      char v36 = (char *)a2 + v34;
      v35[8] = v36[8];
      *(void *)uint64_t v35 = *(void *)v36;
      *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
      return a1;
    }
    sub_100042EBC((uint64_t)a1, type metadata accessor for PreparedSparkline);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    sub_100041E44();
    memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v9 = v4[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1001232B0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  sub_10002FE38();
  v13(&v10[*(int *)(v14 + 36)], &v11[*(int *)(v14 + 36)], v12);
  uint64_t v15 = v4[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
  uint64_t v19 = v4[8];
  uint64_t v20 = (char *)a1 + v19;
  char v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_100042594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000425A8);
}

uint64_t sub_1000425AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000425C0);
}

uint64_t type metadata accessor for RegularSparklineView(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015F550);
}

uint64_t sub_1000425E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000425F8);
}

uint64_t sub_1000425FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100042610);
}

uint64_t type metadata accessor for LargeSparklineView(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015F5E0);
}

uint64_t sub_100042634()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100042650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  sub_100041E44();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SparklineView(0);
  __chkstk_darwin(v6);
  int v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100042D68();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100043920();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032264(v2, (uint64_t)v5);
  sub_1001248C0();
  sub_100042E64();
  uint64_t v19 = swift_allocObject();
  __asm { FMOV            V1.2D, #3.0 }
  *(_OWORD *)(v19 + 16) = xmmword_100128E90;
  *(_OWORD *)(v19 + 32) = _Q1;
  sub_1001248C0();
  sub_100060994((uint64_t)v5, &v33, (uint64_t)v34, 0, 0, 3, 1, (uint64_t)v8, 1.0);
  uint64_t v25 = sub_100042E1C(&qword_10015F620, (void (*)(uint64_t))type metadata accessor for SparklineView);
  sub_100125370();
  sub_100042EBC((uint64_t)v8, type metadata accessor for SparklineView);
  *(void *)&long long v35 = v6;
  *((void *)&v35 + 1) = v25;
  swift_getOpaqueTypeConformance2();
  sub_100125390();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1001257D0();
  sub_100124990();
  uint64_t v26 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v32, v18, v15);
  sub_100043A0C();
  uint64_t v28 = (_OWORD *)(v26 + *(int *)(v27 + 36));
  long long v29 = v36;
  _OWORD *v28 = v35;
  v28[1] = v29;
  v28[2] = v37;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_1000429F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100042A20(0, 1, 2, a1);
}

uint64_t sub_100042A20@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>)
{
  int v28 = a3;
  uint64_t v7 = v4;
  uint64_t v27 = a4;
  sub_100041E44();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SparklineView(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100042D68();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100032264(v7, (uint64_t)v10);
  sub_1001248C0();
  sub_100042E64();
  uint64_t v19 = swift_allocObject();
  __asm { FMOV            V1.2D, #2.0 }
  *(_OWORD *)(v19 + 16) = xmmword_100128E90;
  *(_OWORD *)(v19 + 32) = _Q1;
  sub_1001248C0();
  sub_100060994((uint64_t)v10, &v31, (uint64_t)v32, a1, 0, 3, a2, (uint64_t)v13, 0.4);
  uint64_t v25 = sub_100042E1C(&qword_10015F620, (void (*)(uint64_t))type metadata accessor for SparklineView);
  sub_100125370();
  sub_100042EBC((uint64_t)v13, type metadata accessor for SparklineView);
  uint64_t v29 = v11;
  uint64_t v30 = v25;
  swift_getOpaqueTypeConformance2();
  sub_100125390();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_100042CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_100042A20(1, 0, 2, a1);
}

uint64_t sub_100042D08@<X0>(uint64_t a1@<X8>)
{
  return sub_100042A20(1, 0, 1, a1);
}

uint64_t sub_100042D30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100042D4C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100042D68()
{
  if (!qword_10015F618)
  {
    type metadata accessor for SparklineView(255);
    sub_100042E1C(&qword_10015F620, (void (*)(uint64_t))type metadata accessor for SparklineView);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_10015F618);
    }
  }
}

uint64_t sub_100042E1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100042E64()
{
  if (!qword_10015F628)
  {
    unint64_t v0 = sub_100126500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F628);
    }
  }
}

uint64_t sub_100042EBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_100042F1C(uint64_t *a1, uint64_t *a2)
{
  sub_100041E44();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v7 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v10 = v7[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1001232B0();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      sub_10002FE38();
      v14(&v11[*(int *)(v15 + 36)], &v12[*(int *)(v15 + 36)], v13);
      uint64_t v16 = v7[6];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
      uint64_t v20 = v7[8];
      char v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      *(void *)char v21 = *(void *)v22;
      unsigned char v21[8] = v22[8];
      *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10004315C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PreparedSparkline(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 20);
    uint64_t v5 = sub_1001232B0();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v6(v4, v5);
    sub_10002FE38();
    v6(v4 + *(int *)(v7 + 36), v5);
    uint64_t v8 = a1 + *(int *)(v2 + 24);
    uint64_t v9 = sub_1001234F0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  return result;
}

void *sub_10004329C(void *a1, void *a2)
{
  uint64_t v4 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_100041E44();
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = v4[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1001232B0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    sub_10002FE38();
    v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
    uint64_t v13 = v4[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
    uint64_t v17 = v4[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *sub_10004349C(void *a1, void *a2)
{
  uint64_t v4 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_100041E44();
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = v4[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1001232B0();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    sub_10002FE38();
    v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
    uint64_t v13 = v4[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
    uint64_t v17 = v4[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_100043694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000436A8);
}

uint64_t sub_1000436AC(uint64_t a1, uint64_t a2)
{
  sub_100041E44();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100043718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004372C);
}

uint64_t sub_100043730(uint64_t a1, uint64_t a2)
{
  sub_100041E44();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RowSparklineView(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015F688);
}

void sub_1000437C0()
{
  sub_100041E44();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10004384C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100043904()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100043920()
{
  if (!qword_10015F6C0)
  {
    sub_100042D68();
    type metadata accessor for SparklineView(255);
    sub_100042E1C(&qword_10015F620, (void (*)(uint64_t))type metadata accessor for SparklineView);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_10015F6C0);
    }
  }
}

void sub_100043A0C()
{
  if (!qword_10015F6C8)
  {
    sub_100043920();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F6C8);
    }
  }
}

unint64_t sub_100043A70()
{
  unint64_t result = qword_10015F6D0;
  if (!qword_10015F6D0)
  {
    sub_100043A0C();
    sub_100042D68();
    type metadata accessor for SparklineView(255);
    sub_100042E1C(&qword_10015F620, (void (*)(uint64_t))type metadata accessor for SparklineView);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F6D0);
  }
  return result;
}

void sub_100043B80(void *a1, BOOL a2)
{
  [a1 setSearchBarStyle:2];
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v6 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
  v19._countAndFlagsBits = 0x8000000100131260;
  v22._countAndFlagsBits = 0x686372616553;
  v22._object = (void *)0xE600000000000000;
  v23.value._countAndFlagsBits = 0;
  v23.value._object = 0;
  v7.super.Class isa = v6;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  sub_100123070(v22, v23, v7, v24, v19);

  NSString v8 = sub_100125AD0();
  swift_bridgeObjectRelease();
  [a1 setPlaceholder:v8];

  uint64_t v9 = (void *)(v2 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 24);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 32);
  sub_100009D98(v9, v11);
  [a1 setKeyboardAppearance:(*(uint64_t (**)(uint64_t))(*(void *)(v10 + 8) + 8))(v11)];
  if (a2) {
    a2 = [(id)a2 horizontalSizeClass] == (id)2;
  }
  uint64_t v12 = v9[3];
  uint64_t v13 = v9[4];
  sub_100009D98(v9, v12);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13))
  {
    [a1 setTranslucent:a2];
  }
  else
  {
    uint64_t v14 = self;
    id v15 = [v14 traitCollectionWithUserInterfaceStyle:1];
    sub_1000460A4();
    uint64_t v16 = (void *)swift_getObjCClassFromMetadata();
    id v17 = [v16 appearanceForTraitCollection:v15];
    [v17 setBarStyle:0];
    id v18 = [v14 traitCollectionWithUserInterfaceStyle:2];
    id v20 = [v16 appearanceForTraitCollection:v18];
    [v20 setBarStyle:1];
  }
}

uint64_t sub_100043E34(void *a1)
{
  uint64_t v3 = sub_1001233E0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v8 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v10 = (char *)&v20 - v9;
  id v11 = [a1 userInterfaceStyle:v8];
  if (!v11)
  {
    swift_retain();
    return v1;
  }
  if (v11 == (id)1)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v12(v6, v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_locale, v3);
    sub_100029758(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_systemTheme, (uint64_t)v25);
    uint64_t v1 = swift_allocObject();
    v12((char *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_locale), (uint64_t)v6, v3);
    uint64_t v13 = self;
    id v14 = a1;
    id v15 = [v13 currentDevice];
    id v16 = [v15 userInterfaceIdiom];

    if ((unint64_t)v16 + 1 <= 6)
    {
      if (((1 << (v16 + 1)) & 0x5D) != 0)
      {
        sub_100029758((uint64_t)v25, (uint64_t)v21);
        Swift::String_optional v23 = &type metadata for LightTheme;
        Swift::String v24 = &off_100153640;
        *(void *)&long long v22 = swift_allocObject();
        sub_1000ACC90(v21, v22 + 16);

LABEL_6:
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
LABEL_10:
        sub_100029474(&v22, v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
        sub_100029474(v25, v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_systemTheme);
        return v1;
      }
      if (!v16)
      {
        sub_100029758((uint64_t)v25, (uint64_t)v21);
        Swift::String_optional v23 = &type metadata for DarkTheme;
        Swift::String v24 = &off_1001528C8;
        *(void *)&long long v22 = swift_allocObject();
        sub_100084250(v21, (uint64_t)v14, v22 + 16);
        goto LABEL_6;
      }
    }
  }
  else if (v11 == (id)2)
  {
    id v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v17(v10, v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_locale, v3);
    sub_100029758(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_systemTheme, (uint64_t)v25);
    uint64_t v1 = swift_allocObject();
    v17((char *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_locale), (uint64_t)v10, v3);
    id v18 = a1;
    sub_1000DB450((uint64_t)v25, a1, 2u, (uint64_t *)&v22);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    goto LABEL_10;
  }
  uint64_t result = sub_100126290();
  __break(1u);
  return result;
}

uint64_t sub_100044250()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_locale;
  uint64_t v2 = sub_1001233E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100009D48(v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  sub_100009D48(v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_systemTheme);

  return swift_deallocClassInstance();
}

uint64_t sub_100044310()
{
  return type metadata accessor for BaseStyler();
}

uint64_t type metadata accessor for BaseStyler()
{
  uint64_t result = qword_10015F708;
  if (!qword_10015F708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100044364()
{
  uint64_t result = sub_1001233E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100044400()
{
  uint64_t v1 = *v0;
  char v2 = sub_1001232F0();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  sub_100009D98(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 168))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 152))(v4, v5);
  }
}

uint64_t sub_100044498()
{
  uint64_t v1 = *v0;
  char v2 = sub_1001232F0();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  sub_100009D98(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 152))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 168))(v4, v5);
  }
}

uint64_t sub_100044530()
{
  uint64_t v1 = *v0;
  char v2 = sub_1001232F0();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  sub_100009D98(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 200))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 192))(v4, v5);
  }
}

uint64_t sub_1000445C8()
{
  uint64_t v1 = *v0;
  char v2 = sub_1001232F0();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  sub_100009D98(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 192))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 200))(v4, v5);
  }
}

uint64_t sub_100044660()
{
  uint64_t v1 = *v0;
  char v2 = sub_1001232F0();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  sub_100009D98(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 216))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 208))(v4, v5);
  }
}

uint64_t sub_1000446F8()
{
  uint64_t v1 = *v0;
  char v2 = sub_1001232F0();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  sub_100009D98(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 208))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 216))(v4, v5);
  }
}

uint64_t sub_100044790@<X0>(uint64_t a1@<X8>)
{
  return sub_100029758(*v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme, a1);
}

void sub_1000447BC(void *a1)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  sub_100009D98(v3, v4);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v5);
  [a1 setTintColor:v6];

  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  sub_100009D98(v3, v7);
  id v9 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(v7, v8);
  [a1 setBackgroundColor:v9];
}

void sub_1000448AC(void *a1, BOOL a2)
{
}

void sub_1000448D0(void *a1)
{
  uint64_t v2 = *v1;
  id v3 = [a1 customView];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 24);
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme + 32);
    sub_100009D98((void *)(v2 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme), v5);
    id v7 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 96))(v5, v6);
    [v4 setTintColor:v7];
  }
}

uint64_t sub_100044998@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100043E34(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000449C4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) & 1;
}

uint64_t sub_100044A28()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3) & 1;
}

uint64_t sub_100044A8C()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
}

uint64_t sub_100044AF0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
}

uint64_t sub_100044B50()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64))(v2, v3);
}

uint64_t sub_100044BB0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3);
}

uint64_t sub_100044C10()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 80))(v2, v3);
}

uint64_t sub_100044C70()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v3);
}

uint64_t sub_100044CD0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96))(v2, v3);
}

uint64_t sub_100044D30()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
}

uint64_t sub_100044D90()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 112))(v2, v3);
}

uint64_t sub_100044DF0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 120))(v2, v3);
}

uint64_t sub_100044E50()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 128))(v2, v3);
}

uint64_t sub_100044EB0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 136))(v2, v3);
}

uint64_t sub_100044F10()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 144))(v2, v3);
}

uint64_t sub_100044F70()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 152))(v2, v3);
}

uint64_t sub_100044FD0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 160))(v2, v3);
}

uint64_t sub_100045030()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 168))(v2, v3);
}

uint64_t sub_100045090()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 176))(v2, v3);
}

uint64_t sub_1000450F0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 184))(v2, v3);
}

uint64_t sub_100045150()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 192))(v2, v3);
}

uint64_t sub_1000451B0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 200))(v2, v3);
}

uint64_t sub_100045210()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 208))(v2, v3);
}

uint64_t sub_100045270()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 216))(v2, v3);
}

uint64_t sub_1000452D0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 232))(v2, v3);
}

uint64_t sub_100045330()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 240))(v2, v3);
}

uint64_t sub_100045390()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 248))(v2, v3);
}

uint64_t sub_1000453F0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 256))(v2, v3);
}

uint64_t sub_100045450()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 264))(v2, v3);
}

uint64_t sub_1000454B0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 272))(v2, v3);
}

uint64_t sub_100045510()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 280))(v2, v3);
}

uint64_t sub_100045570()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 288))(v2, v3);
}

uint64_t sub_1000455D0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 296))(v2, v3);
}

uint64_t sub_100045630()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 304))(v2, v3);
}

uint64_t sub_100045690()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 312))(v2, v3);
}

uint64_t sub_1000456F0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 320))(v2, v3);
}

uint64_t sub_100045750()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 328))(v2, v3);
}

uint64_t sub_1000457B0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 336))(v2, v3);
}

uint64_t sub_100045810()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 344))(v2, v3);
}

uint64_t sub_100045870()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 352))(v2, v3) & 1;
}

uint64_t sub_1000458D4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 360))(v2, v3);
}

uint64_t sub_100045934()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 368))(v2, v3);
}

uint64_t sub_100045994()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 376))(v2, v3);
}

uint64_t sub_1000459F4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 384))(v2, v3);
}

uint64_t sub_100045A54()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 392))(v2, v3);
}

uint64_t sub_100045AB4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 400))(v2, v3);
}

uint64_t sub_100045B14()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 408))(v2, v3);
}

uint64_t sub_100045B74()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 416))(v2, v3);
}

uint64_t sub_100045BD4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 424))(v2, v3);
}

uint64_t sub_100045C34()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 432))(v2, v3);
}

uint64_t sub_100045C94()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 440))(v2, v3);
}

uint64_t sub_100045CF4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 448))(v2, v3);
}

uint64_t sub_100045D54()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 456))(v2, v3);
}

uint64_t sub_100045DB4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 464))(v2, v3);
}

uint64_t sub_100045E14()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
}

uint64_t sub_100045E74()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 480))(v2, v3);
}

uint64_t sub_100045ED4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 488))(v2, v3);
}

uint64_t sub_100045F34()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 496))(v2, v3);
}

uint64_t sub_100045F94()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 504))(v2, v3);
}

uint64_t sub_100045FF4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 16) + 8))(v2);
}

uint64_t sub_10004604C()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100009D98(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v2);
}

unint64_t sub_1000460A4()
{
  unint64_t result = qword_10015F7A0;
  if (!qword_10015F7A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015F7A0);
  }
  return result;
}

uint64_t sub_1000460E4()
{
  sub_100009D48((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_100046264()
{
  sub_100009D48((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_1000463E4(uint64_t a1)
{
  uint64_t v90 = sub_100125B60();
  uint64_t v3 = *(void *)(v90 - 8);
  uint64_t v4 = __chkstk_darwin(v90);
  uint64_t v91 = (char *)v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v92 = (char *)v82 - v6;
  uint64_t v94 = sub_1001232B0();
  uint64_t v7 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v95 = (char *)v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100123150();
  uint64_t v9 = *(void *)(v113 - 8);
  uint64_t v10 = __chkstk_darwin(v113);
  uint64_t v86 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)v82 - v13;
  __chkstk_darwin(v12);
  double v115 = (char *)v82 - v15;
  uint64_t v114 = type metadata accessor for DetailTimelineEntry();
  uint64_t v98 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v112 = (uint64_t)v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100048D58();
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v97 = (char *)v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A4C8(0, &qword_10015F880, (uint64_t (*)(uint64_t))sub_100048D58, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v107 = (char *)v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v106 = (uint64_t)v82 - v24;
  sub_100123F00();
  sub_10004A5B0(&qword_10015E738, (void (*)(uint64_t))type metadata accessor for DemoTimelineManager);
  sub_100123F50();
  uint64_t result = swift_release();
  if (v116 == 1)
  {
    uint64_t v100 = v1 + OBJC_IVAR____TtC12StocksWidget19DemoTimelineManager_logger;
    unint64_t v104 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    uint64_t v105 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    unint64_t v26 = *(void *)(a1 + 16);
    uint64_t v103 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v111 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v89 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v85 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v96 = a1;
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v27 = 0;
    uint64_t v110 = 0;
    *(void *)&long long v28 = 136446210;
    long long v83 = v28;
    v82[1] = &type metadata for Any[8];
    *(void *)&long long v28 = 138543362;
    long long v93 = v28;
    uint64_t v29 = (unint64_t *)v107;
    uint64_t v30 = v94;
    long long v31 = v95;
    uint64_t v101 = v18;
    uint64_t v102 = v1;
    unint64_t v99 = v26;
    v82[0] = v14;
    BOOL v32 = v26 == 0;
    if (v26) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v33 = 1;
    for (unint64_t i = v26; ; unint64_t i = v27 + 1)
    {
      (*v105)(v29, v33, 1, v18);
      uint64_t v37 = v106;
      sub_100048E8C((uint64_t)v29, v106);
      if ((*v104)(v37, 1, v18) == 1) {
        return swift_bridgeObjectRelease();
      }
      unint64_t v109 = i;
      uint64_t v38 = v37 + *(int *)(v18 + 48);
      uint64_t v39 = v112;
      sub_100048E28(v38, v112);
      sub_100047834((unint64_t)v14);
      uint64_t v40 = (uint64_t *)(v39 + *(int *)(v114 + 20));
      uint64_t v41 = v40[1];
      uint64_t v116 = *v40;
      uint64_t v117 = v41;
      swift_bridgeObjectRetain();
      v118._countAndFlagsBits = 95;
      v118._object = (void *)0xE100000000000000;
      sub_100125BB0(v118);
      id v42 = [objc_allocWithZone((Class)NSDateFormatter) init];
      NSString v43 = sub_100125AD0();
      [v42 setDateFormat:v43];

      sub_100123270();
      Class isa = sub_100123230().super.isa;
      (*v103)(v31, v30);
      id v45 = [v42 stringFromDate:isa];

      uint64_t v46 = sub_100125B10();
      uint64_t v48 = v47;

      v119._countAndFlagsBits = v46;
      v119._object = v48;
      sub_100125BB0(v119);
      swift_bridgeObjectRelease();
      v120._countAndFlagsBits = 0x6E6F736A2ELL;
      v120._object = (void *)0xE500000000000000;
      sub_100125BB0(v120);
      sub_100123110();
      swift_bridgeObjectRelease();
      uint64_t v108 = *v111;
      v108(v14, v113);
      sub_100123000();
      swift_allocObject();
      uint64_t v49 = v31;
      uint64_t v50 = v30;
      sub_100122FF0();
      sub_10004A5B0(&qword_10015F888, (void (*)(uint64_t))type metadata accessor for DetailTimelineEntry);
      uint64_t v51 = v110;
      uint64_t v52 = sub_100122FE0();
      if (v51)
      {
        swift_release();
        uint64_t v110 = 0;
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v59 = sub_100124550();
        os_log_type_t v60 = sub_100125F40();
        BOOL v61 = os_log_type_enabled(v59, v60);
        uint64_t v18 = v101;
        if (v61)
        {
          uint64_t v62 = swift_slowAlloc();
          double v63 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v62 = v93;
          swift_errorRetain();
          uint64_t v64 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v62 + 4) = v64;
          *double v63 = v64;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "Failed writing entry to disk. error=%{public}@", (uint8_t *)v62, 0xCu);
          sub_10004A4C8(0, &qword_10015DF10, (uint64_t (*)(uint64_t))sub_100009DDC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
        }
        swift_errorRelease();
        v108(v115, v113);
        uint64_t result = sub_100048F20(v112);
        uint64_t v29 = (unint64_t *)v107;
        unint64_t v26 = v99;
        unint64_t v27 = v109;
        uint64_t v30 = v50;
        long long v31 = v49;
        BOOL v32 = v109 >= v99;
        if (v109 == v99) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v54 = v52;
        unint64_t v55 = v53;
        sub_100125B50();
        uint64_t result = sub_100125B30();
        if (!v56) {
          goto LABEL_24;
        }
        uint64_t v116 = result;
        uint64_t v117 = v56;
        uint64_t v57 = v91;
        sub_100125B50();
        sub_10001BA50();
        uint64_t v58 = v115;
        sub_100126060();
        uint64_t v110 = 0;
        (*v89)(v57, v90);
        swift_bridgeObjectRelease();
        uint64_t v65 = *v85;
        uint64_t v66 = v86;
        uint64_t v67 = v113;
        (*v85)(v86, v58, v113);
        uint64_t v68 = sub_100124550();
        os_log_type_t v69 = sub_100125F60();
        os_log_t v88 = v68;
        int v87 = v69;
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = v66;
          uint64_t v71 = swift_slowAlloc();
          uint64_t v84 = swift_slowAlloc();
          uint64_t v116 = v84;
          *(_DWORD *)uint64_t v71 = v83;
          v65(v14, v70, v67);
          uint64_t v72 = sub_100125B90();
          *(void *)(v71 + 4) = sub_1000AB124(v72, v73, &v116);
          swift_bridgeObjectRelease();
          uint64_t v74 = v67;
          uint64_t v75 = v67;
          uint64_t v76 = v108;
          v108(v70, v74);
          os_log_t v77 = v88;
          _os_log_impl((void *)&_mh_execute_header, v88, (os_log_type_t)v87, "Demo entries to disk: %{public}s.", (uint8_t *)v71, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          sub_100048F7C(v54, v55);

          swift_release();
          v76(v58, v75);
          uint64_t result = sub_100048F20(v112);
          uint64_t v30 = v94;
          long long v31 = v95;
          id v14 = (char *)v82[0];
        }
        else
        {
          sub_100048F7C(v54, v55);

          swift_release();
          uint64_t v78 = v66;
          uint64_t v79 = v67;
          uint64_t v80 = v67;
          int v81 = v108;
          v108(v78, v79);
          v81(v58, v80);
          uint64_t result = sub_100048F20(v112);
          uint64_t v30 = v94;
          long long v31 = v95;
        }
        uint64_t v18 = v101;
        uint64_t v29 = (unint64_t *)v107;
        unint64_t v26 = v99;
        unint64_t v27 = v109;
        BOOL v32 = v109 >= v99;
        if (v109 == v99) {
          goto LABEL_6;
        }
      }
LABEL_7:
      if (v32) {
        break;
      }
      uint64_t v35 = (uint64_t)&v97[*(int *)(v18 + 48)];
      sub_100048DC4(v96+ ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(void *)(v98 + 72) * v27, v35);
      uint64_t v36 = (uint64_t)v29 + *(int *)(v18 + 48);
      *uint64_t v29 = v27;
      sub_100048E28(v35, v36);
      uint64_t v33 = 0;
    }
    __break(1u);
LABEL_24:
    __break(1u);
  }
  return result;
}

uint64_t sub_100047080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v2 = sub_100125930();
  __chkstk_darwin(v2 - 8);
  uint64_t v49 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001232B0();
  uint64_t v5 = *(void **)(v4 - 8);
  uint64_t v58 = v4;
  uint64_t v59 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v57 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v56 = (char *)&v47 - v8;
  uint64_t v48 = type metadata accessor for DetailTimelineEntry();
  uint64_t v60 = *(void *)(v48 - 8);
  uint64_t v9 = __chkstk_darwin(v48);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v47 - v12;
  sub_100048D58();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v51 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A4C8(0, &qword_10015F880, (uint64_t (*)(uint64_t))sub_100048D58, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (unint64_t *)((char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v47 - v22;
  double v63 = _swiftEmptyArrayStorage;
  sub_100123F10();
  sub_10004A5B0(&qword_10015E738, (void (*)(uint64_t))type metadata accessor for DemoTimelineManager);
  sub_100123F50();
  swift_release();
  uint64_t v47 = v1;
  v62[0] = sub_100047AD4();
  swift_bridgeObjectRetain();
  sub_1000490FC(v62);
  swift_bridgeObjectRelease();
  unint64_t i = 0;
  uint64_t v25 = v62[0];
  unint64_t v26 = v62[0][2];
  unint64_t v27 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  long long v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  unint64_t v53 = (void (**)(char *, uint64_t))(v59 + 1);
  unint64_t v54 = v26;
  uint64_t v52 = (void (**)(char *, char *, uint64_t))(v59 + 5);
  unint64_t v55 = v11;
  uint64_t v59 = v62[0];
  if (v26) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v29 = 1;
  for (unint64_t i = v26; ; ++i)
  {
    (*v27)(v21, v29, 1, v15);
    sub_100048E8C((uint64_t)v21, (uint64_t)v23);
    if ((*v28)(v23, 1, v15) == 1) {
      break;
    }
    sub_100048E28((uint64_t)&v23[*(int *)(v15 + 48)], (uint64_t)v13);
    BOOL v32 = v57;
    sub_1001232A0();
    uint64_t v33 = v56;
    sub_100123220();
    uint64_t v34 = v32;
    uint64_t v35 = v58;
    (*v53)(v34, v58);
    (*v52)(v13, v33, v35);
    sub_100048DC4((uint64_t)v13, (uint64_t)v11);
    unint64_t v36 = (unint64_t)v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v36 = sub_10009B590(0, *(void *)(v36 + 16) + 1, 1, v36);
    }
    unint64_t v38 = *(void *)(v36 + 16);
    unint64_t v37 = *(void *)(v36 + 24);
    if (v38 >= v37 >> 1) {
      unint64_t v36 = sub_10009B590(v37 > 1, v38 + 1, 1, v36);
    }
    *(void *)(v36 + 16) = v38 + 1;
    uint64_t v39 = v36
        + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))
        + *(void *)(v60 + 72) * v38;
    uint64_t v11 = v55;
    sub_100048E28((uint64_t)v55, v39);
    double v63 = (void *)v36;
    sub_100048F20((uint64_t)v13);
    uint64_t v25 = v59;
    unint64_t v26 = v54;
    if (i == v54) {
      goto LABEL_2;
    }
LABEL_3:
    if (i >= v25[2])
    {
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v30 = (uint64_t)&v51[*(int *)(v15 + 48)];
    sub_100048DC4((uint64_t)v25+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * i, v30);
    uint64_t v31 = (uint64_t)v21 + *(int *)(v15 + 48);
    unint64_t *v21 = i;
    sub_100048E28(v30, v31);
    uint64_t v29 = 0;
  }
  swift_release();
  uint64_t v40 = sub_100124550();
  os_log_type_t v41 = sub_100125F60();
  if (os_log_type_enabled(v40, v41))
  {
    id v42 = (uint8_t *)swift_slowAlloc();
    v62[0] = (void *)swift_slowAlloc();
    *(_DWORD *)id v42 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_100125CD0();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    uint64_t v61 = sub_1000AB124(v43, v45, (uint64_t *)v62);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Returning entries:%s", v42, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100125910();
  sub_10004A5B0(&qword_10015E698, (void (*)(uint64_t))type metadata accessor for DetailTimelineEntry);
  sub_1001259E0();
  return swift_bridgeObjectRelease();
}

void sub_100047834(unint64_t a1@<X8>)
{
  sub_10004A4C8(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v16[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC12StocksWidget19DemoTimelineManager____lazy_storage___demoDirectory;
  swift_beginAccess();
  sub_100048FD4(v9, (uint64_t)v8);
  uint64_t v10 = sub_100123150();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_10004A540((uint64_t)v8, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);
    id v12 = [self defaultManager];
    id v13 = [v12 URLsForDirectory:9 inDomains:1];

    uint64_t v14 = sub_100125CA0();
    if (*(void *)(v14 + 16))
    {
      uint64_t v15 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
      v15(a1, v14 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v10);
      swift_bridgeObjectRelease();
      v15((unint64_t)v6, a1, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
      swift_beginAccess();
      sub_100049068((uint64_t)v6, v9);
      swift_endAccess();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
}

void *sub_100047AD4()
{
  sub_10004A4C8(0, &qword_10015F898, (uint64_t (*)(uint64_t))type metadata accessor for DetailTimelineEntry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v87 - v2;
  uint64_t v100 = type metadata accessor for DetailTimelineEntry();
  uint64_t v94 = *(void *)(v100 - 8);
  uint64_t v4 = __chkstk_darwin(v100);
  uint64_t v97 = (uint64_t)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v101 = (uint64_t)&v87 - v6;
  uint64_t v111 = sub_100125B60();
  uint64_t v118 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v110 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A4C8(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v87 - v9;
  uint64_t v11 = sub_100123150();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v114 = (char *)&v87 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v103 = (char *)&v87 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v87 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v87 - v23;
  uint64_t v93 = v0;
  sub_100047834((unint64_t)v22);
  sub_100123110();
  uint64_t v117 = v12;
  unint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v26 = v12 + 8;
  uint64_t v25 = v27;
  v27(v22, v11);
  id v28 = [self defaultManager];
  sub_100123100(v29);
  uint64_t v31 = v30;
  id v121 = 0;
  id v32 = [v28 contentsOfDirectoryAtURL:v30 includingPropertiesForKeys:0 options:0 error:&v121];

  id v33 = v121;
  if (v32)
  {
    Swift::String v119 = v25;
    uint64_t v115 = v26;
    uint64_t v34 = sub_100125CA0();
    id v35 = v33;

    uint64_t v36 = v93 + OBJC_IVAR____TtC12StocksWidget19DemoTimelineManager_logger;
    swift_bridgeObjectRetain_n();
    uint64_t v113 = v36;
    unint64_t v37 = sub_100124550();
    os_log_type_t v38 = sub_100125F60();
    BOOL v39 = os_log_type_enabled(v37, v38);
    uint64_t v98 = v3;
    uint64_t v112 = v10;
    char v92 = v15;
    uint64_t v91 = v24;
    if (v39)
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      id v121 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      uint64_t v116 = (void (*)(void, void, void))(v40 + 4);
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_100125CD0();
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      uint64_t v120 = sub_1000AB124(v41, v43, (uint64_t *)&v121);
      uint64_t v10 = v112;
      sub_100126030();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Found Content:%s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v46 = v114;
    uint64_t v47 = *(void *)(v34 + 16);
    if (v47)
    {
      uint64_t v48 = *(void (**)(void, void, void))(v117 + 16);
      unint64_t v49 = (*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
      uint64_t v90 = v34;
      unint64_t v50 = v34 + v49;
      uint64_t v51 = *(void *)(v117 + 72);
      uint64_t v108 = (unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48);
      uint64_t v106 = v51;
      uint64_t v107 = (void (**)(char *, char *, uint64_t))(v117 + 32);
      uint64_t v105 = (void (**)(char *, uint64_t))(v118 + 8);
      uint64_t v95 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56);
      uint64_t v102 = &_swiftEmptyArrayStorage;
      unint64_t v109 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56);
      unint64_t v87 = (v117 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      *(void *)&long long v45 = 136315138;
      long long v99 = v45;
      uint64_t v96 = &type metadata for Any[8];
      uint64_t v52 = v103;
      uint64_t v116 = v48;
      v117 += 16;
      v48(v10, v50, v11);
      while (1)
      {
        unint64_t v104 = *v109;
        v104(v10, 0, 1, v11);
        if ((*v108)(v10, 1, v11) == 1)
        {
          uint64_t v80 = v91;
          goto LABEL_32;
        }
        uint64_t v118 = v47;
        (*v107)(v52, v10, v11);
        v48(v46, v52, v11);
        unint64_t v54 = sub_100124550();
        uint64_t v55 = v11;
        os_log_type_t v56 = sub_100125F60();
        if (os_log_type_enabled(v54, v56))
        {
          uint64_t v57 = swift_slowAlloc();
          id v121 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v57 = v99;
          sub_10004A5B0(&qword_10015F8A8, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v58 = sub_1001264F0();
          *(void *)(v57 + 4) = sub_1000AB124(v58, v59, (uint64_t *)&v121);
          swift_bridgeObjectRelease();
          v119(v46, v55);
          uint64_t v52 = v103;
          _os_log_impl((void *)&_mh_execute_header, v54, v56, "Found URL:%s", (uint8_t *)v57, 0xCu);
          swift_arrayDestroy();
          uint64_t v10 = v112;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          v119(v46, v55);
        }
        uint64_t v11 = v55;
        sub_100123130();
        sub_100125AA0();
        uint64_t v48 = v116;
        swift_bridgeObjectRelease();
        uint64_t v60 = v110;
        sub_100125B50();
        uint64_t v61 = sub_100125B20();
        unint64_t v63 = v62;
        swift_bridgeObjectRelease();
        (*v105)(v60, v111);
        if (v63 >> 60 != 15)
        {
          sub_100122FB0();
          swift_allocObject();
          sub_100122FA0();
          sub_10004A5B0(&qword_10015F8A0, (void (*)(uint64_t))type metadata accessor for DetailTimelineEntry);
          uint64_t v64 = (uint64_t)v98;
          uint64_t v65 = v100;
          sub_100122F90();
          swift_release();
          (*v95)(v64, 0, 1, v65);
          sub_100048E28(v64, v101);
          uint64_t v66 = v52;
          uint64_t v67 = v92;
          uint64_t v48 = v116;
          v116(v92, v66, v11);
          uint64_t v68 = sub_100124550();
          os_log_type_t v69 = sub_100125F60();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = swift_slowAlloc();
            os_log_t v88 = v68;
            uint64_t v71 = v70;
            uint64_t v89 = (void *)swift_slowAlloc();
            id v121 = v89;
            *(_DWORD *)uint64_t v71 = v99;
            sub_10004A5B0(&qword_10015F8A8, (void (*)(uint64_t))&type metadata accessor for URL);
            uint64_t v72 = sub_1001264F0();
            *(void *)(v71 + 4) = sub_1000AB124(v72, v73, (uint64_t *)&v121);
            swift_bridgeObjectRelease();
            v119(v67, v11);
            os_log_t v74 = v88;
            _os_log_impl((void *)&_mh_execute_header, v88, v69, "Succeeded decoding:%s", (uint8_t *)v71, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            v119(v67, v11);
          }
          uint64_t v10 = v112;
          sub_100048DC4(v101, v97);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v52 = v103;
          if (isUniquelyReferenced_nonNull_native) {
            unint64_t v76 = (unint64_t)v102;
          }
          else {
            unint64_t v76 = sub_10009B590(0, v102[2] + 1, 1, (unint64_t)v102);
          }
          unint64_t v78 = *(void *)(v76 + 16);
          unint64_t v77 = *(void *)(v76 + 24);
          if (v78 >= v77 >> 1) {
            unint64_t v76 = sub_10009B590(v77 > 1, v78 + 1, 1, v76);
          }
          *(void *)(v76 + 16) = v78 + 1;
          unint64_t v53 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
          uint64_t v102 = (void *)v76;
          sub_100048E28(v97, v76 + v53 + *(void *)(v94 + 72) * v78);
          sub_10004A52C(v61, v63);
          sub_100048F20(v101);
        }
        v119(v52, v11);
        v50 += v106;
        uint64_t v47 = v118 - 1;
        uint64_t v46 = v114;
        if (v118 == 1) {
          break;
        }
        v48(v10, v50, v11);
      }
      v104(v10, 1, 1, v11);
    }
    else
    {
      uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56);
      uint64_t v102 = &_swiftEmptyArrayStorage;
      v79(v10, 1, 1, v11);
    }
    uint64_t v80 = v91;
LABEL_32:
    swift_bridgeObjectRelease();
    v119(v80, v11);
    return v102;
  }
  else
  {
    id v44 = v121;
    sub_100123080();

    swift_willThrow();
    v25(v24, v11);
    swift_errorRetain();
    swift_errorRetain();
    int v81 = sub_100124550();
    os_log_type_t v82 = sub_100125F40();
    if (os_log_type_enabled(v81, v82))
    {
      long long v83 = (uint8_t *)swift_slowAlloc();
      uint64_t v84 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v83 = 138543362;
      swift_errorRetain();
      uint64_t v85 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v121 = v85;
      sub_100126030();
      *uint64_t v84 = v85;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "WidgetDemo failed to decode entries. error=%{public}@", v83, 0xCu);
      sub_10004A4C8(0, &qword_10015DF10, (uint64_t (*)(uint64_t))sub_100009DDC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    return &_swiftEmptyArrayStorage;
  }
}

uint64_t sub_100048A60()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget19DemoTimelineManager_logger;
  uint64_t v2 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_10004A540(v0 + OBJC_IVAR____TtC12StocksWidget19DemoTimelineManager____lazy_storage___demoDirectory, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL);

  return swift_deallocClassInstance();
}

uint64_t sub_100048B40()
{
  return type metadata accessor for DemoTimelineManager();
}

uint64_t type metadata accessor for DemoTimelineManager()
{
  uint64_t result = qword_10015F7E0;
  if (!qword_10015F7E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100048B94()
{
  sub_100124570();
  if (v0 <= 0x3F)
  {
    sub_10004A4C8(319, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100048C98()
{
  return sub_100123F50();
}

uint64_t sub_100048CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Configurable.setting<A>(_:defaultValue:)(a1, a2, *v6, a6);
}

uint64_t sub_100048CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return Configurable.setting<A>(_:_:)(a1, a2, a3, *v7, a7);
}

uint64_t sub_100048D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, *v8, a8);
}

void sub_100048D58()
{
  if (!qword_10015F878)
  {
    type metadata accessor for DetailTimelineEntry();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015F878);
    }
  }
}

uint64_t sub_100048DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100048E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailTimelineEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100048E8C(uint64_t a1, uint64_t a2)
{
  sub_10004A4C8(0, &qword_10015F880, (uint64_t (*)(uint64_t))sub_100048D58, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100048F20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailTimelineEntry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100048F7C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100048FD4(uint64_t a1, uint64_t a2)
{
  sub_10004A4C8(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100049068(uint64_t a1, uint64_t a2)
{
  sub_10004A4C8(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

Swift::Int sub_1000490FC(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for DetailTimelineEntry() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_10004A4B0(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1000491A4(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_1000491A4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v129 = type metadata accessor for DetailTimelineEntry();
  uint64_t v127 = *(void *)(v129 - 8);
  uint64_t v4 = __chkstk_darwin(v129);
  uint64_t v123 = (uint64_t)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v134 = (uint64_t)&v119 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v131 = (uint64_t)&v119 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v119 - v10;
  uint64_t v12 = a1;
  Swift::Int v13 = a1[1];
  Swift::Int result = sub_1001264E0(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      return sub_100049B74(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  Swift::Int v121 = result;
  if (v13 < 2)
  {
    uint64_t v20 = (char *)&_swiftEmptyArrayStorage;
    unint64_t v126 = (unint64_t)&_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
    uint64_t v19 = a1;
    uint64_t v120 = &_swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v22 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_106:
      if (v22 >= 2)
      {
        uint64_t v113 = *v19;
        do
        {
          unint64_t v114 = v22 - 2;
          if (v22 < 2) {
            goto LABEL_135;
          }
          if (!v113) {
            goto LABEL_147;
          }
          uint64_t v115 = *(void *)&v20[16 * v114 + 32];
          uint64_t v116 = *(void *)&v20[16 * v22 + 24];
          sub_100049DC4(v113 + *(void *)(v127 + 72) * v115, v113 + *(void *)(v127 + 72) * *(void *)&v20[16 * v22 + 16], v113 + *(void *)(v127 + 72) * v116, v126);
          if (v2) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_10004A49C((uint64_t)v20);
          }
          if (v114 >= *((void *)v20 + 2)) {
            goto LABEL_137;
          }
          uint64_t v117 = &v20[16 * v114 + 32];
          *(void *)uint64_t v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v20 + 2);
          if (v22 > v118) {
            goto LABEL_138;
          }
          memmove(&v20[16 * v22 + 16], &v20[16 * v22 + 32], 16 * (v118 - v22));
          *((void *)v20 + 2) = v118 - 1;
          unint64_t v22 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v120[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_100125D20();
    *(void *)(v17 + 16) = v16;
    uint64_t v18 = *(unsigned __int8 *)(v127 + 80);
    uint64_t v120 = (void *)v17;
    unint64_t v126 = v17 + ((v18 + 32) & ~v18);
    uint64_t v19 = v12;
  }
  Swift::Int v21 = 0;
  uint64_t v20 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v133 = v19;
  while (1)
  {
    Swift::Int v23 = v21;
    Swift::Int v24 = v21 + 1;
    if (v21 + 1 >= v13)
    {
      ++v21;
    }
    else
    {
      uint64_t v25 = *v19;
      uint64_t v26 = *(void *)(v127 + 72);
      sub_100048DC4(*v19 + v26 * v24, (uint64_t)v11);
      Swift::Int v125 = v21;
      uint64_t v27 = v131;
      sub_100048DC4(v25 + v26 * v21, v131);
      uint64_t v130 = sub_100123280();
      uint64_t v28 = v27;
      Swift::Int v23 = v125;
      sub_100048F20(v28);
      sub_100048F20((uint64_t)v11);
      Swift::Int v21 = v23 + 2;
      uint64_t v135 = v13;
      Swift::Int v124 = v25;
      if (v23 + 2 >= v13)
      {
        uint64_t v19 = v133;
      }
      else
      {
        uint64_t v128 = v2;
        CGFloat v122 = v20;
        uint64_t v29 = v26 * v24;
        uint64_t v30 = v25;
        Swift::Int v31 = v23 + 2;
        uint64_t v32 = v26 * (v23 + 2);
        while (1)
        {
          int v33 = v130 == -1;
          sub_100048DC4(v30 + v32, (uint64_t)v11);
          uint64_t v34 = v131;
          sub_100048DC4(v30 + v29, v131);
          int v35 = sub_100123280() != -1;
          sub_100048F20(v34);
          sub_100048F20((uint64_t)v11);
          if (v33 == v35) {
            break;
          }
          v30 += v26;
          ++v31;
          Swift::Int v13 = v135;
          if (v135 == v31)
          {
            Swift::Int v21 = v135;
            uint64_t v19 = v133;
            uint64_t v20 = v122;
            uint64_t v2 = v128;
            Swift::Int v23 = v125;
            goto LABEL_24;
          }
        }
        uint64_t v19 = v133;
        uint64_t v20 = v122;
        uint64_t v2 = v128;
        Swift::Int v21 = v31;
        Swift::Int v23 = v125;
        Swift::Int v13 = v135;
      }
LABEL_24:
      if (v130 == -1)
      {
        if (v21 < v23) {
          goto LABEL_143;
        }
        if (v23 < v21)
        {
          uint64_t v128 = v2;
          CGFloat v122 = v20;
          uint64_t v36 = 0;
          uint64_t v37 = v26 * (v21 - 1);
          Swift::Int v38 = v23;
          Swift::Int v39 = v21 * v26;
          Swift::Int v40 = v38;
          uint64_t v41 = v38 * v26;
          Swift::Int v132 = v21;
          do
          {
            if (v40 != v21 + v36 - 1)
            {
              Swift::Int v43 = v124;
              if (!v124) {
                goto LABEL_146;
              }
              unint64_t v44 = v124 + v41;
              uint64_t v130 = v124 + v37;
              sub_100048E28(v124 + v41, v123);
              if (v41 < v37 || v44 >= v43 + v39)
              {
                uint64_t v42 = v130;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v42 = v130;
                if (v41 != v37) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_100048E28(v123, v42);
              Swift::Int v21 = v132;
              uint64_t v19 = v133;
              Swift::Int v13 = v135;
            }
            ++v40;
            --v36;
            v37 -= v26;
            v39 -= v26;
            v41 += v26;
          }
          while (v40 < v21 + v36);
          uint64_t v20 = v122;
          uint64_t v2 = v128;
          Swift::Int v23 = v125;
        }
      }
    }
    if (v21 < v13)
    {
      if (__OFSUB__(v21, v23)) {
        goto LABEL_139;
      }
      if (v21 - v23 < v121) {
        break;
      }
    }
LABEL_56:
    if (v21 < v23) {
      goto LABEL_134;
    }
    unint64_t v59 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_10004A234(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v61 = *((void *)v20 + 2);
    unint64_t v60 = *((void *)v20 + 3);
    unint64_t v22 = v61 + 1;
    if (v61 >= v60 >> 1) {
      uint64_t v20 = sub_10004A234((char *)(v60 > 1), v61 + 1, 1, v20);
    }
    uint64_t v19 = v59;
    uint64_t v128 = v2;
    *((void *)v20 + 2) = v22;
    uint64_t v135 = (uint64_t)(v20 + 32);
    unint64_t v62 = &v20[16 * v61 + 32];
    *(void *)unint64_t v62 = v23;
    *((void *)v62 + 1) = v21;
    if (v61)
    {
      uint64_t v63 = v135;
      while (1)
      {
        unint64_t v64 = v22 - 1;
        if (v22 >= 4)
        {
          unint64_t v69 = v63 + 16 * v22;
          uint64_t v70 = *(void *)(v69 - 64);
          uint64_t v71 = *(void *)(v69 - 56);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_123;
          }
          uint64_t v74 = *(void *)(v69 - 48);
          uint64_t v73 = *(void *)(v69 - 40);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_124;
          }
          unint64_t v76 = v22 - 2;
          unint64_t v77 = (uint64_t *)(v63 + 16 * (v22 - 2));
          uint64_t v79 = *v77;
          uint64_t v78 = v77[1];
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_126;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_129;
          }
          if (v81 >= v72)
          {
            long long v99 = (uint64_t *)(v63 + 16 * v64);
            uint64_t v101 = *v99;
            uint64_t v100 = v99[1];
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_133;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_94;
          }
        }
        else
        {
          if (v22 != 3)
          {
            uint64_t v93 = *((void *)v20 + 4);
            uint64_t v94 = *((void *)v20 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_88;
          }
          uint64_t v66 = *((void *)v20 + 4);
          uint64_t v65 = *((void *)v20 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_125;
        }
        unint64_t v76 = v22 - 2;
        os_log_type_t v82 = (uint64_t *)(v63 + 16 * (v22 - 2));
        uint64_t v84 = *v82;
        uint64_t v83 = v82[1];
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_128;
        }
        os_log_t v88 = (uint64_t *)(v63 + 16 * v64);
        uint64_t v90 = *v88;
        uint64_t v89 = v88[1];
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_131;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_132;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_94:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v87) {
          goto LABEL_127;
        }
        uint64_t v95 = (uint64_t *)(v63 + 16 * v64);
        uint64_t v97 = *v95;
        uint64_t v96 = v95[1];
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_130;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v22)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v19) {
          goto LABEL_145;
        }
        Swift::Int v104 = v21;
        uint64_t v105 = v20;
        uint64_t v106 = (uint64_t *)(v63 + 16 * v103);
        uint64_t v107 = v63;
        uint64_t v108 = *v106;
        unint64_t v109 = (void *)(v107 + 16 * v64);
        uint64_t v110 = v109[1];
        uint64_t v111 = v128;
        sub_100049DC4(*v19 + *(void *)(v127 + 72) * *v106, *v19 + *(void *)(v127 + 72) * *v109, *v19 + *(void *)(v127 + 72) * v110, v126);
        uint64_t v128 = v111;
        if (v111) {
          goto LABEL_117;
        }
        if (v110 < v108) {
          goto LABEL_120;
        }
        if (v64 > *((void *)v105 + 2)) {
          goto LABEL_121;
        }
        *uint64_t v106 = v108;
        uint64_t v63 = v135;
        *(void *)(v135 + 16 * v103 + 8) = v110;
        unint64_t v112 = *((void *)v105 + 2);
        if (v64 >= v112) {
          goto LABEL_122;
        }
        uint64_t v20 = v105;
        unint64_t v22 = v112 - 1;
        memmove(v109, v109 + 2, 16 * (v112 - 1 - v64));
        *((void *)v105 + 2) = v112 - 1;
        uint64_t v19 = v133;
        Swift::Int v21 = v104;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v22 = 1;
LABEL_14:
    Swift::Int v13 = v19[1];
    uint64_t v2 = v128;
    if (v21 >= v13) {
      goto LABEL_106;
    }
  }
  if (__OFADD__(v23, v121)) {
    goto LABEL_141;
  }
  if (v23 + v121 >= v13) {
    Swift::Int v45 = v13;
  }
  else {
    Swift::Int v45 = v23 + v121;
  }
  if (v45 >= v23)
  {
    if (v21 != v45)
    {
      Swift::Int v124 = v45;
      Swift::Int v125 = v23;
      CGFloat v122 = v20;
      uint64_t v128 = v2;
      uint64_t v46 = *(void *)(v127 + 72);
      uint64_t v135 = v46 * (v21 - 1);
      uint64_t v130 = v46;
      Swift::Int v47 = v21 * v46;
      do
      {
        uint64_t v49 = 0;
        Swift::Int v50 = v125;
        Swift::Int v132 = v21;
        while (1)
        {
          uint64_t v51 = *v19;
          Swift::Int v52 = v47;
          Swift::Int v53 = v47 + v49;
          unint64_t v54 = v19;
          sub_100048DC4(v53 + *v19, (uint64_t)v11);
          uint64_t v55 = v131;
          sub_100048DC4(v135 + v49 + v51, v131);
          uint64_t v56 = sub_100123280();
          sub_100048F20(v55);
          sub_100048F20((uint64_t)v11);
          if (v56 != -1) {
            break;
          }
          uint64_t v57 = *v54;
          if (!*v54) {
            goto LABEL_144;
          }
          Swift::Int v47 = v52;
          uint64_t v58 = v57 + v135 + v49;
          sub_100048E28(v57 + v52 + v49, v134);
          swift_arrayInitWithTakeFrontToBack();
          sub_100048E28(v134, v58);
          v49 -= v130;
          ++v50;
          Swift::Int v48 = v132;
          uint64_t v19 = v133;
          if (v132 == v50) {
            goto LABEL_49;
          }
        }
        Swift::Int v48 = v132;
        uint64_t v19 = v54;
        Swift::Int v47 = v52;
LABEL_49:
        Swift::Int v21 = v48 + 1;
        v135 += v130;
        v47 += v130;
      }
      while (v21 != v124);
      Swift::Int v21 = v124;
      uint64_t v2 = v128;
      uint64_t v20 = v122;
      Swift::Int v23 = v125;
    }
    goto LABEL_56;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_100126280();
  __break(1u);
  return result;
}

uint64_t sub_100049B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for DetailTimelineEntry();
  uint64_t v7 = __chkstk_darwin(v26);
  uint64_t v29 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v31 = v16 * (v28 - 1);
    uint64_t v27 = v16;
    uint64_t v30 = v16 * v28;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v25;
    while (1)
    {
      uint64_t v19 = *a4;
      sub_100048DC4(v30 + v17 + *a4, (uint64_t)v15);
      sub_100048DC4(v31 + v17 + v19, (uint64_t)v11);
      uint64_t v20 = sub_100123280();
      sub_100048F20((uint64_t)v11);
      uint64_t result = sub_100048F20((uint64_t)v15);
      if (v20 != -1)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v22 = v21 + v31 + v17;
      sub_100048E28(v21 + v30 + v17, v29);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100048E28(v29, v22);
      v17 -= v27;
      if (v28 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100049DC4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v36 = type metadata accessor for DetailTimelineEntry();
  uint64_t v8 = __chkstk_darwin(v36);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_61;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_62;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v39 = a1;
  unint64_t v38 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v19;
      unint64_t v37 = a4 + v19;
      unint64_t v39 = a2;
      unint64_t v35 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        uint64_t v28 = -v14;
        do
        {
          unint64_t v29 = a3 + v28;
          sub_100048DC4(v26 + v28, (uint64_t)v12);
          unint64_t v30 = a2 + v28;
          sub_100048DC4(a2 + v28, (uint64_t)v10);
          uint64_t v31 = sub_100123280();
          sub_100048F20((uint64_t)v10);
          sub_100048F20((uint64_t)v12);
          if (v31 == -1)
          {
            if (a3 < a2 || v29 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v39 += v28;
          }
          else
          {
            unint64_t v32 = v37;
            v37 += v28;
            if (a3 < v32 || v29 >= v32)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v32)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v30 = a2;
          }
          unint64_t v26 = v37;
          if (v37 <= a4) {
            break;
          }
          a2 = v30;
          a3 += v28;
        }
        while (v30 > v35);
      }
      goto LABEL_59;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v37 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_100048DC4(a2, (uint64_t)v12);
        sub_100048DC4(a4, (uint64_t)v10);
        uint64_t v22 = sub_100123280();
        sub_100048F20((uint64_t)v10);
        sub_100048F20((uint64_t)v12);
        unint64_t v23 = v39;
        if (v22 == -1)
        {
          unint64_t v25 = a2 + v14;
          if (v39 < a2 || v39 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v39 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v24 = v38 + v14;
          if (v39 < v38 || v39 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v39 != v38)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v38 = v24;
          unint64_t v25 = a2;
        }
        unint64_t v39 = v23 + v14;
        a4 = v38;
        if (v38 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_59:
    sub_10004A35C(&v39, &v38, (uint64_t *)&v37);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

char *sub_10004A234(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10004A4C8(0, &qword_10015F890, (uint64_t (*)(uint64_t))sub_10002E48C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10004A35C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for DetailTimelineEntry();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_100126310();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_10004A49C(uint64_t a1)
{
  return sub_10004A234(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10004A4B0(void *a1)
{
  return sub_10009C0A8(0, a1[2], 0, a1);
}

void sub_10004A4C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10004A52C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100048F7C(a1, a2);
  }
  return a1;
}

uint64_t sub_10004A540(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_10004A4C8(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_10004A5B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10004A5F8(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v12 = v11;
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v12);
    uint64_t v14 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    int64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *(void *)((char *)v4 + v18) = *(void *)((char *)a2 + v18);
    uint64_t v19 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    unint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v23 = v22;
    uint64_t v24 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22))
    {
      sub_100029100();
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v20, v21, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
    }
  }
  return v4;
}

uint64_t sub_10004A8AC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[11];
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v10 = v9;
  uint64_t v13 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v8, v10);
  }
  return result;
}

void *sub_10004AA84(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v11);
  uint64_t v13 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v14 = (char *)a1 + v13;
  int64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v18 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v19 = (char *)a1 + v18;
  unint64_t v20 = (char *)a2 + v18;
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v21))
  {
    sub_100029100();
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v19, v20, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
  }
  return a1;
}

void *sub_10004ACE8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v14 = a3[11];
  int64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  unint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v11) = v20(v15, 1, v17);
  int v21 = v20(v16, 1, v18);
  if (!v11)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v15, v16, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v18);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    sub_100029100();
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v15, v16, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
  return a1;
}

_OWORD *sub_10004AFB8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
  {
    sub_100029100();
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v16, v17, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
  }
  return a1;
}

void *sub_10004B200(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v16 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  LODWORD(v12) = v22(v17, 1, v19);
  int v23 = v22(v18, 1, v20);
  if (!v12)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v17, v18, v20);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v20);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    sub_100029100();
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v17, v18, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
  return a1;
}

uint64_t sub_10004B4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004B4C8);
}

uint64_t sub_10004B4C8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[5];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    return v14(a1 + v12, a2, v10);
  }
  uint64_t v13 = sub_1001238A0();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[7];
    goto LABEL_11;
  }
  sub_100029100();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[11];

  return v16(v18, a2, v17);
}

uint64_t sub_10004B690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004B6A4);
}

uint64_t sub_10004B6A4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
    return result;
  }
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1001238A0();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  sub_100029100();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for WatchlistOverviewContentViewModel(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015F908);
}

void sub_10004B880()
{
  sub_1000523E4(319, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  if (v0 <= 0x3F)
  {
    sub_1001238A0();
    if (v1 <= 0x3F)
    {
      sub_100029100();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_10004B9F4@<X0>(char *a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  LODWORD(v102) = a2;
  uint64_t v97 = a3;
  uint64_t v4 = sub_1001238A0();
  uint64_t v100 = *(void *)(v4 - 8);
  uint64_t v101 = v4;
  __chkstk_darwin(v4);
  uint64_t v91 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v95 = (char *)&v88 - v7;
  sub_1000522E0(0, &qword_10015F958, (uint64_t (*)(uint64_t))sub_10004C8B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v8 - 8);
  BOOL v92 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v93 = (char *)&v88 - v11;
  __chkstk_darwin(v12);
  uint64_t v96 = (char *)&v88 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v88 - v15;
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v98 = *(void *)(v17 - 8);
  uint64_t v99 = v17;
  __chkstk_darwin(v17);
  uint64_t v89 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v90 = (char *)&v88 - v20;
  __chkstk_darwin(v21);
  uint64_t v94 = (char *)&v88 - v22;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v88 - v24;
  uint64_t v26 = sub_1001258F0();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  unint64_t v29 = (uint64_t (**)(char *, uint64_t, uint64_t))((char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v31 = __chkstk_darwin(v30);
  int v33 = (char *)&v88 - v32;
  uint64_t v34 = *(void *)(v27 + 16);
  unint64_t v35 = a1;
  ((void (*)(char *, char *, uint64_t, __n128))v34)((char *)&v88 - v32, a1, v26, v31);
  int v36 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v33, v26);
  if (v36 == enum case for WidgetFamily.systemSmall(_:))
  {
    long long v103 = xmmword_100129180;
    sub_100050D38(0, (unint64_t *)&qword_10015E9E8, (uint64_t)&type metadata for Int, (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range);
    uint64_t v26 = v37;
    sub_10004C948();
    sub_100124440();
    sub_10004C8B8();
    uint64_t v34 = v38;
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v16, 1, v38);
    if (v40 != 1)
    {
      char v41 = v102 & 1;
      __chkstk_darwin(v40);
      type metadata accessor for TickerCellViewModel(0);
      sub_1001243D0();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v34);
      uint64_t v42 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
      Swift::Int v43 = v97;
      (*(void (**)(char *, void, uint64_t))(v100 + 104))(&v97[v42[7]], enum case for PriceChangeDisplay.currency(_:), v101);
      unint64_t v44 = &v43[v42[11]];
      sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
      *(void *)Swift::Int v43 = 0;
      *((void *)v43 + 1) = 0;
      uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v98 + 32))(&v43[v42[5]], v25, v99);
      v43[v42[6]] = v41;
      *(void *)&v43[v42[8]] = 3;
      *(void *)&v43[v42[9]] = 1;
      v43[v42[10]] = v41;
      return result;
    }
    __break(1u);
    goto LABEL_35;
  }
  if (v36 == enum case for WidgetFamily.systemMedium(_:))
  {
    char v47 = v102;
    uint64_t v48 = 3;
    if (v102) {
      uint64_t v48 = 4;
    }
    *(void *)&long long v103 = 0;
    *((void *)&v103 + 1) = v48;
    sub_100050D38(0, (unint64_t *)&qword_10015E9E8, (uint64_t)&type metadata for Int, (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range);
    sub_10004C948();
    uint64_t v49 = v96;
    sub_100124440();
    sub_10004C8B8();
    uint64_t v34 = v50;
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v26 = 1;
    uint64_t v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50);
    if (v52 == 1)
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    __chkstk_darwin(v52);
    char v53 = v47 & 1;
    if (v47) {
      char v54 = 1;
    }
    else {
      char v54 = 2;
    }
    if (v47) {
      uint64_t v55 = 2;
    }
    else {
      uint64_t v55 = 1;
    }
    uint64_t v102 = v55;
    if (v47) {
      uint64_t v56 = 2;
    }
    else {
      uint64_t v56 = 3;
    }
    type metadata accessor for TickerCellViewModel(0);
    uint64_t v57 = v94;
    sub_1001243D0();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v34);
    uint64_t v59 = v100;
    uint64_t v58 = v101;
    unint64_t v60 = v95;
    (*(void (**)(char *, void, uint64_t))(v100 + 104))(v95, enum case for PriceChangeDisplay.currency(_:), v101);
    unint64_t v61 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
    unint64_t v62 = v97;
    uint64_t v63 = &v97[v61[11]];
    sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 1, 1, v64);
    *(void *)unint64_t v62 = 0;
    *((void *)v62 + 1) = 0;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v62[v61[5]], v57, v99);
    v62[v61[6]] = v54;
    uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v59 + 32))(&v62[v61[7]], v60, v58);
    *(void *)&v62[v61[8]] = v56;
    *(void *)&v62[v61[9]] = v102;
    v62[v61[10]] = v53;
  }
  else
  {
    char v65 = v102;
    if (v36 == enum case for WidgetFamily.systemLarge(_:))
    {
      uint64_t v66 = 6;
      if (v102) {
        uint64_t v66 = 12;
      }
      *(void *)&long long v103 = 0;
      *((void *)&v103 + 1) = v66;
      sub_100050D38(0, (unint64_t *)&qword_10015E9E8, (uint64_t)&type metadata for Int, (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range);
      sub_10004C948();
      uint64_t v67 = v93;
      sub_100124440();
      sub_10004C8B8();
      uint64_t v34 = v68;
      unint64_t v29 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v68 - 8);
      uint64_t v26 = 1;
      uint64_t v69 = v29[6](v67, 1, v68);
      if (v69 == 1) {
        goto LABEL_36;
      }
      __chkstk_darwin(v69);
      LODWORD(v102) = v65 & 1;
      if (v65) {
        char v70 = 1;
      }
      else {
        char v70 = 2;
      }
      if (v65) {
        uint64_t v71 = 2;
      }
      else {
        uint64_t v71 = 1;
      }
      type metadata accessor for TickerCellViewModel(0);
      uint64_t v72 = v90;
      sub_1001243D0();
      ((void (*)(char *, uint64_t))v29[1])(v67, v34);
      uint64_t v74 = v100;
      uint64_t v73 = v101;
      BOOL v75 = v91;
      (*(void (**)(char *, void, uint64_t))(v100 + 104))(v91, enum case for PriceChangeDisplay.currency(_:), v101);
      unint64_t v76 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
      unint64_t v77 = v97;
      uint64_t v78 = &v97[v76[11]];
      sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 1, 1, v79);
      *(void *)unint64_t v77 = 0;
      *((void *)v77 + 1) = 0;
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(&v77[v76[5]], v72, v99);
      v77[v76[6]] = v70;
      uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v74 + 32))(&v77[v76[7]], v75, v73);
      *(void *)&v77[v76[8]] = 6;
      *(void *)&v77[v76[9]] = v71;
      uint64_t v80 = v76[10];
      char v81 = v102;
    }
    else
    {
      if (v36 != enum case for WidgetFamily.accessoryRectangular(_:))
      {
LABEL_38:
        ((void (*)(uint64_t (**)(char *, uint64_t, uint64_t), char *, uint64_t))v34)(v29, v35, v26);
        *(void *)&long long v103 = 0;
        *((void *)&v103 + 1) = 0xE000000000000000;
        sub_1001260E0(65);
        v104._object = (void *)0x8000000100131490;
        v104._countAndFlagsBits = 0xD00000000000003DLL;
        sub_100125BB0(v104);
        sub_100052498(&qword_10015E790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
        v105._countAndFlagsBits = sub_1001264F0();
        sub_100125BB0(v105);
        swift_bridgeObjectRelease();
        v106._countAndFlagsBits = 11815;
        v106._object = (void *)0xE200000000000000;
        sub_100125BB0(v106);
        uint64_t result = sub_100126290();
        __break(1u);
        return result;
      }
      long long v103 = xmmword_100129180;
      sub_100050D38(0, (unint64_t *)&qword_10015E9E8, (uint64_t)&type metadata for Int, (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range);
      sub_10004C948();
      unint64_t v35 = v92;
      sub_100124440();
      sub_10004C8B8();
      uint64_t v83 = v82;
      uint64_t v34 = *(void *)(v82 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v35, 1, v82) == 1)
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      type metadata accessor for TickerCellViewModel(0);
      uint64_t v84 = v89;
      sub_1001243D0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v83);
      BOOL v85 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
      unint64_t v77 = v97;
      (*(void (**)(char *, void, uint64_t))(v100 + 104))(&v97[v85[7]], enum case for PriceChangeDisplay.currency(_:), v101);
      uint64_t v86 = &v77[v85[11]];
      sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, 1, 1, v87);
      *(void *)unint64_t v77 = 0;
      *((void *)v77 + 1) = 0;
      uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v98 + 32))(&v77[v85[5]], v84, v99);
      v77[v85[6]] = 3;
      *(void *)&v77[v85[8]] = 3;
      *(void *)&v77[v85[9]] = 1;
      uint64_t v80 = v85[10];
      char v81 = v65 & 1;
    }
    v77[v80] = v81;
  }
  return result;
}

void sub_10004C8B8()
{
  if (!qword_10015F960)
  {
    sub_100050D38(255, (unint64_t *)&qword_10015E9E8, (uint64_t)&type metadata for Int, (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range);
    sub_10004C948();
    unint64_t v0 = sub_100124420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F960);
    }
  }
}

unint64_t sub_10004C948()
{
  unint64_t result = qword_10015F968;
  if (!qword_10015F968)
  {
    sub_100050D38(255, (unint64_t *)&qword_10015E9E8, (uint64_t)&type metadata for Int, (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for Range);
    sub_10002E4EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015F968);
  }
  return result;
}

uint64_t sub_10004C9EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A08D0(3, a1);
}

uint64_t sub_10004CA18@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A08D0(*(unsigned __int8 *)(v1 + 16), a1);
}

uint64_t *sub_10004CA44(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1001258F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_100032BBC(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *((void *)v16 + 1);
    uint64_t v19 = *((void *)v16 + 2);
    uint64_t v20 = *((void *)v16 + 3);
    char v21 = v16[32];
    sub_10004CE10(*(void *)v16, v18, v19, v20, v21);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    *((void *)v15 + 2) = v19;
    *((void *)v15 + 3) = v20;
    v15[32] = v21;
    uint64_t v22 = a3[7];
    uint64_t v23 = (uint64_t *)((char *)a1 + v22);
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 8);
    *uint64_t v23 = *(uint64_t *)((char *)a2 + v22);
    v23[1] = v25;
    uint64_t v26 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
    uint64_t v27 = v26[5];
    uint64_t v28 = (char *)v23 + v27;
    unint64_t v29 = &v24[v27];
    sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v31 = v30;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    v32(v28, v29, v31);
    *((unsigned char *)v23 + v26[6]) = v24[v26[6]];
    uint64_t v33 = v26[7];
    uint64_t v34 = (char *)v23 + v33;
    unint64_t v35 = &v24[v33];
    uint64_t v36 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    *(void *)((char *)v23 + v26[8]) = *(void *)&v24[v26[8]];
    *(void *)((char *)v23 + v26[9]) = *(void *)&v24[v26[9]];
    *((unsigned char *)v23 + v26[10]) = v24[v26[10]];
    uint64_t v37 = v26[11];
    uint64_t v38 = (char *)v23 + v37;
    uint64_t v39 = &v24[v37];
    sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v41 = v40;
    uint64_t v42 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v39, 1, v40))
    {
      sub_100029100();
      memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v38, v39, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v38, 0, 1, v41);
    }
  }
  return a1;
}

uint64_t sub_10004CE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10004CE1C(uint64_t a1, int *a2)
{
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1001258F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_100032D54(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  sub_100037598(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  uint64_t v6 = a1 + a2[7];
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
  uint64_t v8 = v6 + v7[5];
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v6 + v7[7];
  uint64_t v11 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v6 + v7[11];
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v14 = v13;
  uint64_t v17 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v12, 1, v13);
  if (!result)
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    return v16(v12, v14);
  }
  return result;
}

void *sub_10004D094(void *a1, void *a2, int *a3)
{
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100032BBC(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  uint64_t v17 = *((void *)v14 + 2);
  uint64_t v18 = *((void *)v14 + 3);
  char v19 = v14[32];
  sub_10004CE10(*(void *)v14, v16, v17, v18, v19);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  *((void *)v13 + 2) = v17;
  *((void *)v13 + 3) = v18;
  v13[32] = v19;
  uint64_t v20 = a3[7];
  char v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20 + 8);
  void *v21 = *(void *)((char *)a2 + v20);
  v21[1] = v23;
  uint64_t v24 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
  uint64_t v25 = v24[5];
  uint64_t v26 = (char *)v21 + v25;
  uint64_t v27 = &v22[v25];
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v29 = v28;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  v30(v26, v27, v29);
  *((unsigned char *)v21 + v24[6]) = v22[v24[6]];
  uint64_t v31 = v24[7];
  uint64_t v32 = (char *)v21 + v31;
  uint64_t v33 = &v22[v31];
  uint64_t v34 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  *(void *)((char *)v21 + v24[8]) = *(void *)&v22[v24[8]];
  *(void *)((char *)v21 + v24[9]) = *(void *)&v22[v24[9]];
  *((unsigned char *)v21 + v24[10]) = v22[v24[10]];
  uint64_t v35 = v24[11];
  uint64_t v36 = (char *)v21 + v35;
  uint64_t v37 = &v22[v35];
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v39 = v38;
  uint64_t v40 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v37, 1, v38))
  {
    sub_100029100();
    memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v36, v37, v39);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v39);
  }
  return a1;
}

void *sub_10004D414(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100052094((uint64_t)a1, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100032BBC(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_100032D54(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *((void *)v16 + 1);
  uint64_t v19 = *((void *)v16 + 2);
  uint64_t v20 = *((void *)v16 + 3);
  char v21 = v16[32];
  sub_10004CE10(*(void *)v16, v18, v19, v20, v21);
  uint64_t v22 = *(void *)v15;
  uint64_t v23 = *((void *)v15 + 1);
  uint64_t v24 = *((void *)v15 + 2);
  uint64_t v25 = *((void *)v15 + 3);
  char v26 = v15[32];
  *(void *)uint64_t v15 = v17;
  *((void *)v15 + 1) = v18;
  *((void *)v15 + 2) = v19;
  *((void *)v15 + 3) = v20;
  v15[32] = v21;
  sub_100037598(v22, v23, v24, v25, v26);
  uint64_t v27 = a3[7];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  void *v28 = *(void *)((char *)a2 + v27);
  v28[1] = *(void *)((char *)a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
  uint64_t v31 = v30[5];
  uint64_t v32 = (char *)v28 + v31;
  uint64_t v33 = &v29[v31];
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  *((unsigned char *)v28 + v30[6]) = v29[v30[6]];
  uint64_t v35 = v30[7];
  uint64_t v36 = (char *)v28 + v35;
  uint64_t v37 = &v29[v35];
  uint64_t v38 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  *(void *)((char *)v28 + v30[8]) = *(void *)&v29[v30[8]];
  *(void *)((char *)v28 + v30[9]) = *(void *)&v29[v30[9]];
  *((unsigned char *)v28 + v30[10]) = v29[v30[10]];
  uint64_t v39 = v30[11];
  uint64_t v40 = (char *)v28 + v39;
  uint64_t v41 = &v29[v39];
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v43 = v42;
  uint64_t v44 = *(void *)(v42 - 8);
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  LODWORD(v37) = v45(v40, 1, v42);
  int v46 = v45(v41, 1, v43);
  if (!v37)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 24))(v40, v41, v43);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v40, v43);
    goto LABEL_11;
  }
  if (v46)
  {
LABEL_11:
    sub_100029100();
    memcpy(v40, v41, *(void *)(*(void *)(v47 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v40, v41, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v40, 0, 1, v43);
  return a1;
}

char *sub_10004D830(char *a1, char *a2, int *a3)
{
  sub_10003A32C(0);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1001258F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  char v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(void *)char v11 = *(void *)v12;
  v11[8] = v12[8];
  char v13 = &a1[v10];
  uint64_t v14 = &a2[v10];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)char v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[32] = v14[32];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  uint64_t v19 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
  uint64_t v20 = v19[5];
  char v21 = &v17[v20];
  uint64_t v22 = &v18[v20];
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  v17[v19[6]] = v18[v19[6]];
  uint64_t v24 = v19[7];
  uint64_t v25 = &v17[v24];
  char v26 = &v18[v24];
  uint64_t v27 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  *(void *)&v17[v19[8]] = *(void *)&v18[v19[8]];
  *(void *)&v17[v19[9]] = *(void *)&v18[v19[9]];
  v17[v19[10]] = v18[v19[10]];
  uint64_t v28 = v19[11];
  uint64_t v29 = &v17[v28];
  uint64_t v30 = &v18[v28];
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
  {
    sub_100029100();
    memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v29, v30, v32);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
  }
  return a1;
}

char *sub_10004DB68(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100052094((uint64_t)a1, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1001258F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  char v11 = &a2[v9];
  uint64_t v12 = *(void *)v11;
  LOBYTE(v11) = v11[8];
  uint64_t v13 = *(void *)v10;
  char v14 = v10[8];
  *(void *)uint64_t v10 = v12;
  v10[8] = (char)v11;
  sub_100032D54(v13, v14);
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  char v18 = v17[32];
  uint64_t v19 = *(void *)v16;
  uint64_t v20 = *((void *)v16 + 1);
  uint64_t v21 = *((void *)v16 + 2);
  uint64_t v22 = *((void *)v16 + 3);
  char v23 = v16[32];
  long long v24 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v24;
  v16[32] = v18;
  sub_100037598(v19, v20, v21, v22, v23);
  uint64_t v25 = a3[7];
  char v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = *(void *)&a2[v25 + 8];
  *(void *)char v26 = *(void *)&a2[v25];
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
  uint64_t v30 = v29[5];
  uint64_t v31 = &v26[v30];
  uint64_t v32 = &v27[v30];
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  v26[v29[6]] = v27[v29[6]];
  uint64_t v34 = v29[7];
  uint64_t v35 = &v26[v34];
  uint64_t v36 = &v27[v34];
  uint64_t v37 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  *(void *)&v26[v29[8]] = *(void *)&v27[v29[8]];
  *(void *)&v26[v29[9]] = *(void *)&v27[v29[9]];
  v26[v29[10]] = v27[v29[10]];
  uint64_t v38 = v29[11];
  uint64_t v39 = &v26[v38];
  uint64_t v40 = &v27[v38];
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v42 = v41;
  uint64_t v43 = *(void *)(v41 - 8);
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  LODWORD(v36) = v44(v39, 1, v41);
  int v45 = v44(v40, 1, v42);
  if (!v36)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v39, v40, v42);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v42);
    goto LABEL_10;
  }
  if (v45)
  {
LABEL_10:
    sub_100029100();
    memcpy(v39, v40, *(void *)(*(void *)(v46 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v39, v40, v42);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
  return a1;
}

uint64_t sub_10004DF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004DF5C);
}

uint64_t sub_10004DF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000522E0(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 254)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = type metadata accessor for WatchlistOverviewContentViewModel(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10004E0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004E0C8);
}

void sub_10004E0C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000522E0(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  else
  {
    uint64_t v11 = type metadata accessor for WatchlistOverviewContentViewModel(0);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    v12(v14, a2, a2, v13);
  }
}

uint64_t type metadata accessor for WatchlistOverviewContentView(uint64_t a1)
{
  return sub_100009E3C(a1, qword_10015F9C8);
}

void sub_10004E244()
{
  sub_10003A32C(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for WatchlistOverviewContentViewModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10004E320()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10004E33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  sub_100051180();
  __chkstk_darwin(v3 - 8);
  uint64_t v88 = (uint64_t *)((char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000510F0(0, &qword_10015FAC0, (void (*)(uint64_t))sub_100051180);
  uint64_t v91 = *(void *)(v5 - 8);
  uint64_t v92 = v5;
  __chkstk_darwin(v5);
  uint64_t v89 = (uint64_t)&v70 - v6;
  sub_100029100();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v95 = *(void *)(v10 - 8);
  uint64_t v96 = v10;
  __chkstk_darwin(v10);
  uint64_t v87 = (char *)&v70 - v11;
  sub_10005107C();
  __chkstk_darwin(v12 - 8);
  uint64_t v93 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v70 - v15;
  sub_1000523E4(0, &qword_10015FA60, (uint64_t (*)(uint64_t))sub_100050D88, sub_100051048, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for VStack);
  __chkstk_darwin(v17 - 8);
  uint64_t v90 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v70 - v20;
  __chkstk_darwin(v22);
  long long v24 = (char *)&v70 - v23;
  uint64_t v25 = type metadata accessor for WatchlistOverviewContentView(0);
  uint64_t v26 = *(int *)(v25 + 28);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = *(void *)(a1 + v26 + 8);
  uint64_t v86 = v25;
  if (v28)
  {
    uint64_t v29 = v25;
    v159[0] = *v27;
    v159[1] = v28;
    sub_10001BA50();
    uint64_t v83 = v9;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_100125350();
    uint64_t v81 = v31;
    uint64_t v82 = v30;
    uint64_t v84 = v24;
    BOOL v85 = v16;
    char v33 = v32;
    uint64_t v80 = v34;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v78 = swift_getKeyPath();
    int v77 = sub_100124FC0();
    sub_100125220();
    sub_1001251A0();
    uint64_t v76 = sub_1001251F0();
    swift_release();
    uint64_t v75 = swift_getKeyPath();
    uint64_t v35 = a1 + *(int *)(v29 + 24);
    char v157 = *(unsigned char *)(v35 + 32);
    long long v36 = *(_OWORD *)(v35 + 16);
    v156[0] = *(_OWORD *)v35;
    v156[1] = v36;
    sub_100051B2C((uint64_t)v156, (uint64_t)v158);
    sub_100051C00((uint64_t)v158, (void (*)(void, void, void, void, void))sub_10004CE10);
    uint64_t v37 = v27;
    double v38 = sub_10005F554();
    sub_100051C00((uint64_t)v156, (void (*)(void, void, void, void, void))sub_100037598);
    uint64_t v39 = swift_getKeyPath();
    uint64_t v40 = swift_allocObject();
    *(double *)(v40 + 16) = v38;
    *(unsigned char *)(v40 + 24) = 0;
    *(void *)(v40 + 32) = 0;
    *(unsigned char *)(v40 + 40) = 0;
    char v99 = v33 & 1;
    char v98 = 0;
    char v97 = 0;
    sub_1001257D0();
    sub_100124990();
    uint64_t v73 = v150;
    uint64_t v74 = v148;
    uint64_t v71 = v153;
    uint64_t v72 = v152;
    *(void *)&long long v100 = v82;
    *((void *)&v100 + 1) = v81;
    LOBYTE(v101) = v99;
    *((void *)&v101 + 1) = v80;
    *(void *)&long long v102 = 0;
    *((void *)&v102 + 1) = KeyPath;
    uint64_t v103 = 0;
    uint64_t v104 = 0;
    *(void *)&long long v105 = 0;
    BYTE8(v105) = v98;
    *(void *)&long long v106 = v78;
    *((void *)&v106 + 1) = 1;
    LOBYTE(v107) = v97;
    DWORD1(v107) = v77;
    *((void *)&v107 + 1) = v75;
    *(void *)&long long v108 = v76;
    *((void *)&v108 + 1) = v39;
    *(void *)&long long v109 = sub_1000321B4;
    *((void *)&v109 + 1) = v40;
    long long v114 = v102;
    long long v115 = 0u;
    long long v112 = v100;
    long long v113 = v101;
    long long v119 = v108;
    long long v120 = v109;
    long long v117 = v106;
    long long v118 = v107;
    long long v116 = v105;
    LOBYTE(v154[0]) = 1;
    char v111 = v149;
    char v110 = v151;
    char v41 = v149;
    uint64_t v42 = a1;
    char v43 = v151;
    v121[0] = v82;
    v121[1] = v81;
    char v122 = v99;
    uint64_t v123 = v80;
    uint64_t v124 = 0;
    uint64_t v125 = KeyPath;
    uint64_t v126 = 0;
    uint64_t v128 = 0;
    uint64_t v127 = 0;
    char v129 = v98;
    uint64_t v130 = v78;
    uint64_t v131 = 1;
    char v132 = v97;
    int v133 = v77;
    uint64_t v134 = v75;
    uint64_t v135 = v76;
    uint64_t v136 = v39;
    uint64_t v137 = sub_1000321B4;
    uint64_t v138 = v40;
    long long v24 = v84;
    sub_100051CE4((uint64_t)&v100);
    sub_100051DB8((uint64_t)v121);
    v139[6] = v118;
    v139[7] = v119;
    v139[8] = v120;
    v139[2] = v114;
    v139[3] = v115;
    v139[4] = v116;
    v139[5] = v117;
    v139[0] = v112;
    v139[1] = v113;
    uint64_t v140 = 0;
    char v141 = 1;
    uint64_t v16 = v85;
    uint64_t v142 = v74;
    char v143 = v41;
    uint64_t v144 = v73;
    char v145 = v43;
    a1 = v42;
    uint64_t v9 = v83;
    uint64_t v146 = v72;
    uint64_t v147 = v71;
    nullsub_1(v139, v44);
  }
  else
  {
    uint64_t v37 = (void *)(a1 + v26);
    sub_10005158C(v139);
  }
  sub_10005201C((uint64_t)v139, (uint64_t)v159, (uint64_t (*)(void))sub_1000509EC);
  *(void *)uint64_t v21 = sub_100124EF0();
  *((void *)v21 + 1) = 0;
  v21[16] = 0;
  sub_1000515B0(0, &qword_10015FB10, sub_100050D88);
  sub_10004EDC0(a1, (uint64_t)&v21[*(int *)(v45 + 44)]);
  sub_100051614((uint64_t)v21, (uint64_t)v24);
  uint64_t v46 = type metadata accessor for WatchlistOverviewContentViewModel(0);
  sub_100051764((uint64_t)v37 + *(int *)(v46 + 44), (uint64_t)v9, (uint64_t (*)(void))sub_100029100);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v9, 1, v96) == 1)
  {
    sub_100052094((uint64_t)v9, (uint64_t (*)(void))sub_100029100);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v16, 1, 1, v92);
  }
  else
  {
    uint64_t v47 = v95;
    uint64_t v48 = a1;
    uint64_t v49 = (uint64_t)v87;
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v87, v9, v96);
    uint64_t v50 = sub_1001257D0();
    uint64_t v51 = (uint64_t)v88;
    *uint64_t v88 = v50;
    *(void *)(v51 + 8) = v52;
    sub_100051AA8();
    sub_10004FD40(v48, v49, v51 + *(int *)(v53 + 44));
    uint64_t v54 = v48 + *(int *)(v86 + 24);
    long long v55 = *(_OWORD *)(v54 + 16);
    v154[0] = *(_OWORD *)v54;
    v154[1] = v55;
    char v155 = *(unsigned char *)(v54 + 32);
    sub_100051B2C((uint64_t)v154, (uint64_t)&v100);
    sub_100051C00((uint64_t)&v100, (void (*)(void, void, void, void, void))sub_10004CE10);
    sub_10005F554();
    uint64_t v57 = v56;
    sub_100051C00((uint64_t)v154, (void (*)(void, void, void, void, void))sub_100037598);
    uint64_t v58 = swift_getKeyPath();
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = 0;
    *(unsigned char *)(v59 + 24) = 0;
    *(void *)(v59 + 32) = v57;
    *(unsigned char *)(v59 + 40) = 0;
    uint64_t v60 = v89;
    sub_100051764(v51, v89, (uint64_t (*)(void))sub_100051180);
    uint64_t v61 = v47;
    uint64_t v62 = v92;
    uint64_t v63 = (uint64_t *)(v60 + *(int *)(v92 + 36));
    *uint64_t v63 = v58;
    v63[1] = (uint64_t)sub_1000321B4;
    v63[2] = v59;
    sub_100052094(v51, (uint64_t (*)(void))sub_100051180);
    sub_100051C58(v60, (uint64_t)v16, &qword_10015FAC0, (void (*)(uint64_t))sub_100051180);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v16, 0, 1, v62);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v49, v96);
  }
  uint64_t v65 = (uint64_t)v93;
  uint64_t v64 = v94;
  uint64_t v66 = (uint64_t)v90;
  sub_10005201C((uint64_t)v159, (uint64_t)&v112, (uint64_t (*)(void))sub_1000509EC);
  sub_1000516BC((uint64_t)v24, v66);
  sub_100051764((uint64_t)v16, v65, (uint64_t (*)(void))sub_10005107C);
  sub_10005201C((uint64_t)&v112, (uint64_t)v121, (uint64_t (*)(void))sub_1000509EC);
  sub_10005201C((uint64_t)v121, v64, (uint64_t (*)(void))sub_1000509EC);
  sub_100050920();
  uint64_t v68 = v67;
  sub_1000516BC(v66, v64 + *(int *)(v67 + 48));
  sub_100051764(v65, v64 + *(int *)(v68 + 64), (uint64_t (*)(void))sub_10005107C);
  sub_100051950(v121, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000517CC);
  sub_100052094((uint64_t)v16, (uint64_t (*)(void))sub_10005107C);
  sub_1000518B0((uint64_t)v24);
  sub_100052094(v65, (uint64_t (*)(void))sub_10005107C);
  sub_1000518B0(v66);
  sub_10005201C((uint64_t)&v112, (uint64_t)v139, (uint64_t (*)(void))sub_1000509EC);
  return sub_100051950(v139, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000519C4);
}

uint64_t sub_10004EDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v3 = sub_1001258F0();
  uint64_t v105 = *(void *)(v3 - 8);
  uint64_t v106 = v3;
  __chkstk_darwin(v3);
  uint64_t v102 = (uint64_t)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v104 = (uint64_t)&v100 - v6;
  __chkstk_darwin(v7);
  uint64_t v101 = (uint64_t)&v100 - v8;
  __chkstk_darwin(v9);
  uint64_t v103 = (uint64_t)&v100 - v10;
  sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  *(void *)&long long v117 = *(void *)(v11 - 8);
  *((void *)&v117 + 1) = v11;
  __chkstk_darwin(v11);
  long long v107 = (char *)&v100 - v12;
  sub_100029100();
  __chkstk_darwin(v13 - 8);
  *((void *)&v116 + 1) = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  *(void *)&long long v116 = (char *)&v100 - v16;
  uint64_t v17 = (int *)type metadata accessor for WatchlistOverviewContentView(0);
  __chkstk_darwin(v17);
  uint64_t v100 = (uint64_t)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v110 = (uint64_t)&v100 - v20;
  sub_1000523E4(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v100 - v24;
  sub_100050E48();
  uint64_t v27 = v26;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000510F0(0, &qword_10015FA78, (void (*)(uint64_t))sub_100050E48);
  uint64_t v115 = v30;
  __chkstk_darwin(v30);
  uint64_t v118 = (uint64_t)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v114 = (uint64_t)&v100 - v33;
  __chkstk_darwin(v34);
  uint64_t v121 = (uint64_t)&v100 - v35;
  uint64_t v36 = a1 + v17[7];
  uint64_t v37 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
  uint64_t v38 = v36 + v37[5];
  char v111 = v25;
  uint64_t v112 = v23;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v113 = v22;
  v39(v25, v38, v22);
  uint64_t v40 = *(void *)(v36 + v37[8]);
  uint64_t v108 = *(void *)(v36 + v37[9]);
  uint64_t v109 = v40;
  uint64_t v41 = a1 + v17[5];
  uint64_t v42 = a1;
  uint64_t v43 = *(void *)v41;
  LOBYTE(v25) = *(unsigned char *)(v41 + 8);
  sub_100032BBC(*(void *)v41, (char)v25);
  LOBYTE(a1) = sub_10005ECE0(v43, (char)v25);
  sub_100032D54(v43, (char)v25);
  uint64_t v44 = v42;
  uint64_t v45 = v110;
  uint64_t v120 = v44;
  sub_100051764(v44, v110, type metadata accessor for WatchlistOverviewContentView);
  if (a1)
  {
    int v46 = *(unsigned __int8 *)(v45 + v17[7] + v37[6]);
    sub_100052094(v45, type metadata accessor for WatchlistOverviewContentView);
    BOOL v47 = v46 != 3;
  }
  else
  {
    sub_100052094(v45, type metadata accessor for WatchlistOverviewContentView);
    BOOL v47 = 0;
  }
  BOOL v48 = *(unsigned char *)(v36 + v37[6]) != 3;
  (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v29, v111, v113);
  *(void *)&v29[v27[13]] = v108;
  *(void *)&v29[v27[14]] = v109;
  *(void *)&v29[v27[15]] = 0x4038000000000000;
  v29[v27[16]] = v47;
  v29[v27[17]] = v48;
  uint64_t v49 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))&v29[v27[18]];
  *uint64_t v49 = sub_10004FC90;
  v49[1] = 0;
  uint64_t v50 = 0;
  double v51 = 0.0;
  uint64_t v52 = v17;
  if (!*(void *)(v36 + 8))
  {
    uint64_t v53 = v120 + v17[6];
    long long v54 = *(_OWORD *)(v53 + 16);
    v136[0] = *(_OWORD *)v53;
    v136[1] = v54;
    char v137 = *(unsigned char *)(v53 + 32);
    sub_100051B2C((uint64_t)v136, (uint64_t)v138);
    sub_100051C00((uint64_t)v138, (void (*)(void, void, void, void, void))sub_10004CE10);
    double v51 = sub_10005F554();
    sub_100051C00((uint64_t)v136, (void (*)(void, void, void, void, void))sub_100037598);
  }
  uint64_t v55 = v36 + v37[11];
  uint64_t v56 = v116;
  sub_100051764(v55, v116, (uint64_t (*)(void))sub_100029100);
  long long v57 = v117;
  uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, void))(v117 + 48);
  int v59 = v58(v56, 1, *((void *)&v117 + 1));
  sub_100052094(v56, (uint64_t (*)(void))sub_100029100);
  if (v59 == 1)
  {
    uint64_t v60 = v120 + v52[6];
    long long v61 = *(_OWORD *)(v60 + 16);
    v134[0] = *(_OWORD *)v60;
    v134[1] = v61;
    char v135 = *(unsigned char *)(v60 + 32);
    sub_100051B2C((uint64_t)v134, (uint64_t)v139);
    sub_100051C00((uint64_t)v139, (void (*)(void, void, void, void, void))sub_10004CE10);
    sub_10005F554();
    uint64_t v50 = v62;
    sub_100051C00((uint64_t)v134, (void (*)(void, void, void, void, void))sub_100037598);
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v64 = swift_allocObject();
  *(double *)(v64 + 16) = v51;
  *(unsigned char *)(v64 + 24) = 0;
  *(void *)(v64 + 32) = v50;
  *(unsigned char *)(v64 + 40) = 0;
  uint64_t v65 = v114;
  sub_100051764((uint64_t)v29, v114, (uint64_t (*)(void))sub_100050E48);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v115 + 36));
  uint64_t *v66 = KeyPath;
  v66[1] = (uint64_t)sub_1000321B4;
  v66[2] = v64;
  sub_100052094((uint64_t)v29, (uint64_t (*)(void))sub_100050E48);
  sub_100051C58(v65, v121, &qword_10015FA78, (void (*)(uint64_t))sub_100050E48);
  uint64_t v67 = *((void *)&v116 + 1);
  sub_100051764(v55, *((uint64_t *)&v116 + 1), (uint64_t (*)(void))sub_100029100);
  if (v58(v67, 1, *((void *)&v57 + 1)) == 1)
  {
    sub_100052094(v67, (uint64_t (*)(void))sub_100029100);
LABEL_11:
    long long v117 = 0uLL;
    long long v116 = 0uLL;
    uint64_t v70 = 0;
    uint64_t v115 = 0;
    uint64_t v71 = 0;
    uint64_t v72 = 0;
    int v73 = 65280;
LABEL_23:
    LODWORD(v120) = v73;
    uint64_t v90 = v121;
    uint64_t v91 = v118;
    sub_1000520F4(v121, v118, (uint64_t)&qword_10015FA78, (uint64_t)sub_100050E48, (uint64_t (*)(void, uint64_t, uint64_t))sub_1000510F0);
    uint64_t v92 = v119;
    sub_1000520F4(v91, v119, (uint64_t)&qword_10015FA78, (uint64_t)sub_100050E48, (uint64_t (*)(void, uint64_t, uint64_t))sub_1000510F0);
    sub_100050DBC();
    uint64_t v94 = v92 + *(int *)(v93 + 48);
    uint64_t v95 = *((void *)&v117 + 1);
    *(void *)uint64_t v94 = v117;
    *(void *)(v94 + 8) = v95;
    uint64_t v96 = *((void *)&v116 + 1);
    *(void *)(v94 + 16) = v116;
    *(void *)(v94 + 24) = v96;
    uint64_t v97 = v115;
    *(void *)(v94 + 32) = v70;
    *(void *)(v94 + 40) = v97;
    *(void *)(v94 + 48) = v71;
    *(void *)(v94 + 56) = v72;
    *(_WORD *)(v94 + 64) = v120;
    sub_100052164(v90, (uint64_t)&qword_10015FA78, (uint64_t)sub_100050E48, (uint64_t (*)(void))sub_1000510F0);
    return sub_100052164(v91, (uint64_t)&qword_10015FA78, (uint64_t)sub_100050E48, (uint64_t (*)(void))sub_1000510F0);
  }
  uint64_t v68 = v107;
  (*(void (**)(char *, uint64_t, void))(v57 + 32))(v107, v67, *((void *)&v57 + 1));
  char v69 = sub_1001243A0();
  (*(void (**)(char *, void))(v57 + 8))(v68, *((void *)&v57 + 1));
  if (v69) {
    goto LABEL_11;
  }
  uint64_t v74 = v103;
  uint64_t v75 = v120;
  sub_10005EEE4(v103);
  uint64_t v77 = v105;
  uint64_t v76 = v106;
  uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v105 + 88))(v74, v106);
  if (v78 == enum case for WidgetFamily.systemSmall(_:)
    || (uint64_t v79 = v78, v78 == enum case for WidgetFamily.systemMedium(_:)))
  {
    uint64_t v83 = v101;
    sub_10005EEE4(v101);
    uint64_t v84 = v104;
    (*(void (**)(uint64_t, void, uint64_t))(v77 + 104))(v104, enum case for WidgetFamily.systemLarge(_:), v76);
    sub_100052498(&qword_10015FB40, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    sub_100125C60();
    sub_100125C60();
    uint64_t v85 = v123;
    uint64_t v86 = *(void *)&v122[0];
    uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v87(v84, v76);
    v87(v83, v76);
    uint64_t v88 = 0x4020000000000000;
    if (v85 == v86) {
      uint64_t v88 = 0x4030000000000000;
    }
    *(void *)&v122[0] = v88;
    sub_100050D38(0, (unint64_t *)&qword_10015FA58, (uint64_t)&type metadata for Spacer, (uint64_t)&type metadata for _FrameLayout, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_1000521C4();
    *(_OWORD *)((char *)v122 + 8) = 0u;
    *(_OWORD *)((char *)&v122[1] + 8) = 0u;
    *(_OWORD *)((char *)&v122[2] + 8) = 0u;
    *(_OWORD *)((char *)&v122[3] + 1) = 0u;
    goto LABEL_19;
  }
  if (v78 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v80 = v102;
    sub_10005EEE4(v102);
    uint64_t v81 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 104))(v104, v79, v76);
    sub_100052498(&qword_10015FB40, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    sub_100125C60();
    sub_100125C60();
    uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v82(v81, v76);
    v82(v80, v76);
    sub_1001257D0();
    sub_100124990();
    v122[0] = xmmword_100127710;
    *(void *)&v122[1] = v129;
    *((void *)&v122[1] + 1) = v130;
    *(void *)&v122[2] = v131;
    *((void *)&v122[2] + 1) = v132;
    v122[3] = v133;
    LOBYTE(v122[4]) = 1;
    sub_100050D38(0, (unint64_t *)&qword_10015FA58, (uint64_t)&type metadata for Spacer, (uint64_t)&type metadata for _FrameLayout, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_1000521C4();
LABEL_19:
    sub_100124F80();
    v122[0] = v123;
    v122[1] = v124;
    v122[2] = v125;
    v122[3] = v126;
    LOWORD(v122[4]) = v127;
    sub_100050FBC();
    sub_100052260();
    sub_100124F80();
    uint64_t v70 = v125;
    uint64_t v72 = *((void *)&v126 + 1);
    uint64_t v71 = v126;
    uint64_t v115 = *((void *)&v125 + 1);
    long long v116 = v124;
    long long v117 = v123;
    if (v128) {
      int v89 = 256;
    }
    else {
      int v89 = 0;
    }
    int v73 = v89 | v127;
    goto LABEL_23;
  }
  sub_100051764(v75, v100, type metadata accessor for WatchlistOverviewContentView);
  *(void *)&long long v123 = 0;
  *((void *)&v123 + 1) = 0xE000000000000000;
  sub_1001260E0(59);
  v140._object = (void *)0x8000000100131500;
  v140._countAndFlagsBits = 0xD000000000000037;
  sub_100125BB0(v140);
  uint64_t v99 = v104;
  sub_10005EEE4(v104);
  sub_100052498(&qword_10015E790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  v141._countAndFlagsBits = sub_1001264F0();
  sub_100125BB0(v141);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v99, v76);
  v142._countAndFlagsBits = 11815;
  v142._object = (void *)0xE200000000000000;
  sub_100125BB0(v142);
  uint64_t result = sub_100126290();
  __break(1u);
  return result;
}

uint64_t sub_10004FC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100051764(a1, a2, type metadata accessor for TickerCellViewModel);
  uint64_t v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for TickerCellView(0) + 20));
  *uint64_t v3 = swift_getKeyPath();
  sub_1000522E0(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10004FD40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v4 = type metadata accessor for WatchlistOverviewContentView(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v51 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100051E8C(0, &qword_10015FB28, (uint64_t (*)(uint64_t))type metadata accessor for HeadlinesList, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v52 = v6;
  __chkstk_darwin(v6);
  uint64_t v53 = (uint64_t)&v47 - v7;
  sub_100051E8C(0, &qword_10015FAE0, (uint64_t (*)(uint64_t))type metadata accessor for HeadlinesList, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent);
  uint64_t v62 = v8;
  __chkstk_darwin(v8);
  long long v54 = (char *)&v47 - v9;
  uint64_t v58 = type metadata accessor for HeadlinesList();
  __chkstk_darwin(v58);
  uint64_t v55 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100051200(0, &qword_10015FB30, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v57 = v11;
  __chkstk_darwin(v11);
  uint64_t v56 = (uint64_t)&v47 - v12;
  sub_1000512BC(0, &qword_10015FB38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v47 - v14;
  sub_1000512BC(0, &qword_10015FAD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  uint64_t v61 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v47 - v17;
  uint64_t v19 = type metadata accessor for HeadlineView(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v47 - v23;
  uint64_t v25 = sub_1001258F0();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v49 = (uint64_t)&v47 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v47 - v29;
  sub_10005EEE4((uint64_t)&v47 - v29);
  uint64_t v50 = v26;
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v30, v25);
  if (v31 == enum case for WidgetFamily.systemSmall(_:))
  {
    sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    sub_1001243F0();
    uint64_t v32 = (uint64_t *)&v21[*(int *)(v19 + 20)];
    *uint64_t v32 = swift_getKeyPath();
    sub_10003A32C(0);
    swift_storeEnumTagMultiPayload();
    sub_10005201C((uint64_t)v21, (uint64_t)v24, type metadata accessor for HeadlineView);
    sub_100051764((uint64_t)v24, (uint64_t)v15, type metadata accessor for HeadlineView);
    swift_storeEnumTagMultiPayload();
    sub_100052498(&qword_10015FAF8, (void (*)(uint64_t))type metadata accessor for HeadlineView);
    sub_100052498(&qword_10015FB00, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
    sub_100124F80();
    sub_1000520F4((uint64_t)v18, v56, (uint64_t)&qword_10015FAD8, (uint64_t)&type metadata accessor for _ConditionalContent, (uint64_t (*)(void, uint64_t, uint64_t))sub_1000512BC);
    swift_storeEnumTagMultiPayload();
    sub_1000513C0();
    sub_1000514B4();
    sub_100124F80();
    sub_100052164((uint64_t)v18, (uint64_t)&qword_10015FAD8, (uint64_t)&type metadata accessor for _ConditionalContent, (uint64_t (*)(void))sub_1000512BC);
    uint64_t v33 = type metadata accessor for HeadlineView;
    uint64_t v34 = (uint64_t)v24;
    return sub_100052094(v34, v33);
  }
  uint64_t v35 = (uint64_t)v15;
  uint64_t v36 = v58;
  uint64_t v37 = v59;
  BOOL v48 = v18;
  uint64_t v38 = v56;
  if (v31 == enum case for WidgetFamily.systemMedium(_:))
  {
    sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v40 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v55, v37, v39);
    *(void *)(v40 + *(int *)(v36 + 20)) = 1;
    *(void *)(v40 + *(int *)(v36 + 24)) = 0x4028000000000000;
    sub_100051764(v40, v35, (uint64_t (*)(void))type metadata accessor for HeadlinesList);
    swift_storeEnumTagMultiPayload();
    sub_100052498(&qword_10015FAF8, (void (*)(uint64_t))type metadata accessor for HeadlineView);
    sub_100052498(&qword_10015FB00, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
    uint64_t v41 = (uint64_t)v48;
    sub_100124F80();
    sub_1000520F4(v41, v38, (uint64_t)&qword_10015FAD8, (uint64_t)&type metadata accessor for _ConditionalContent, (uint64_t (*)(void, uint64_t, uint64_t))sub_1000512BC);
    swift_storeEnumTagMultiPayload();
    sub_1000513C0();
    sub_1000514B4();
    sub_100124F80();
    sub_100052164(v41, (uint64_t)&qword_10015FAD8, (uint64_t)&type metadata accessor for _ConditionalContent, (uint64_t (*)(void))sub_1000512BC);
    uint64_t v33 = (uint64_t (*)(void))type metadata accessor for HeadlinesList;
    uint64_t v34 = v40;
    return sub_100052094(v34, v33);
  }
  if (v31 == enum case for WidgetFamily.systemLarge(_:))
  {
    sub_1000523E4(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v43 = (uint64_t)v55;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v55, v37, v42);
    *(void *)(v43 + *(int *)(v36 + 20)) = 3;
    *(void *)(v43 + *(int *)(v36 + 24)) = 0x4028000000000000;
    sub_100051764(v43, v53, (uint64_t (*)(void))type metadata accessor for HeadlinesList);
    swift_storeEnumTagMultiPayload();
    sub_100052498(&qword_10015FB00, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
    uint64_t v44 = (uint64_t)v54;
    sub_100124F80();
    sub_100051EF8(v44, v38);
    swift_storeEnumTagMultiPayload();
    sub_1000513C0();
    sub_1000514B4();
    sub_100124F80();
    sub_100051F8C(v44);
    uint64_t v33 = (uint64_t (*)(void))type metadata accessor for HeadlinesList;
    uint64_t v34 = v43;
    return sub_100052094(v34, v33);
  }
  sub_100051764(a1, v51, type metadata accessor for WatchlistOverviewContentView);
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  sub_1001260E0(51);
  v65._object = (void *)0x80000001001314D0;
  v65._countAndFlagsBits = 0xD00000000000002FLL;
  sub_100125BB0(v65);
  uint64_t v46 = v49;
  sub_10005EEE4(v49);
  sub_100052498(&qword_10015E790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  v66._countAndFlagsBits = sub_1001264F0();
  sub_100125BB0(v66);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v46, v25);
  v67._countAndFlagsBits = 11815;
  v67._object = (void *)0xE200000000000000;
  sub_100125BB0(v67);
  uint64_t result = sub_100126290();
  __break(1u);
  return result;
}

void *sub_10005088C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100124F00();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_1000515B0(0, &qword_10015FA08, sub_1000508EC);
  return sub_10004E33C(v1, a1 + *(int *)(v3 + 44));
}

void sub_1000508EC(uint64_t a1)
{
}

void sub_100050920()
{
  if (!qword_10015FA18)
  {
    sub_1000509EC(255);
    sub_1000523E4(255, &qword_10015FA60, (uint64_t (*)(uint64_t))sub_100050D88, sub_100051048, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for VStack);
    sub_10005107C();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_10015FA18);
    }
  }
}

void sub_1000509EC(uint64_t a1)
{
}

void sub_100050A20(uint64_t a1)
{
}

void sub_100050A54()
{
  if (!qword_10015FA30)
  {
    sub_1000510F0(255, &qword_10015FA38, (void (*)(uint64_t))sub_100050B0C);
    sub_100050D38(255, (unint64_t *)&qword_10015FA58, (uint64_t)&type metadata for Spacer, (uint64_t)&type metadata for _FrameLayout, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015FA30);
    }
  }
}

void sub_100050B0C()
{
  if (!qword_10015FA40)
  {
    sub_100050B8C();
    sub_100050CCC(255, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FA40);
    }
  }
}

void sub_100050B8C()
{
  if (!qword_10015FA48)
  {
    sub_100050C20();
    sub_100050D38(255, (unint64_t *)&qword_10015F058, (uint64_t)&type metadata for HierarchicalShapeStyle, (uint64_t)&protocol witness table for HierarchicalShapeStyle, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for _ForegroundStyleModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FA48);
    }
  }
}

void sub_100050C20()
{
  if (!qword_10015FA50)
  {
    sub_100050D38(255, (unint64_t *)&qword_10015F3E0, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for OverflowIntoTextMarginsModifier, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_100050CCC(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FA50);
    }
  }
}

void sub_100050CCC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_100051BB4(255, a3, a4, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    unint64_t v5 = sub_1001250A0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_100050D38(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_100050D88(uint64_t a1)
{
}

void sub_100050DBC()
{
  if (!qword_10015FA70)
  {
    sub_1000510F0(255, &qword_10015FA78, (void (*)(uint64_t))sub_100050E48);
    sub_100050F34();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015FA70);
    }
  }
}

void sub_100050E48()
{
  if (!qword_10015FA80)
  {
    type metadata accessor for TickerCellViewModel(255);
    type metadata accessor for TickerCellView(255);
    sub_100052498(&qword_10015FA88, (void (*)(uint64_t))type metadata accessor for TickerCellViewModel);
    sub_100052498(&qword_10015FA90, (void (*)(uint64_t))type metadata accessor for TickerCellView);
    unint64_t v0 = type metadata accessor for TickerGrid();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FA80);
    }
  }
}

void sub_100050F34()
{
  if (!qword_10015FA98)
  {
    sub_100051E8C(255, &qword_10015FAA0, (uint64_t (*)(uint64_t))sub_100050FBC, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent);
    unint64_t v0 = sub_100126010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FA98);
    }
  }
}

void sub_100050FBC()
{
  if (!qword_10015FAA8)
  {
    sub_100050D38(255, (unint64_t *)&qword_10015FA58, (uint64_t)&type metadata for Spacer, (uint64_t)&type metadata for _FrameLayout, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    unint64_t v0 = sub_100124F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FAA8);
    }
  }
}

uint64_t sub_100051048()
{
  return sub_100052498(&qword_10015FAB0, sub_100050D88);
}

void sub_10005107C()
{
  if (!qword_10015FAB8)
  {
    sub_1000510F0(255, &qword_10015FAC0, (void (*)(uint64_t))sub_100051180);
    unint64_t v0 = sub_100126010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FAB8);
    }
  }
}

void sub_1000510F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_100051BB4(255, (unint64_t *)&qword_10015EC20, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyTransformModifier);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100051180()
{
  if (!qword_10015FAC8)
  {
    sub_100051200(255, &qword_10015FAD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_10005132C();
    unint64_t v0 = sub_100125730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FAC8);
    }
  }
}

void sub_100051200(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1000512BC(255, &qword_10015FAD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    uint64_t v7 = v6;
    sub_100051E8C(255, &qword_10015FAE0, (uint64_t (*)(uint64_t))type metadata accessor for HeadlinesList, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1000512BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for HeadlineView(255);
    uint64_t v7 = type metadata accessor for HeadlinesList();
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_10005132C()
{
  unint64_t result = qword_10015FAE8;
  if (!qword_10015FAE8)
  {
    sub_100051200(255, &qword_10015FAD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_1000513C0();
    sub_1000514B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FAE8);
  }
  return result;
}

unint64_t sub_1000513C0()
{
  unint64_t result = qword_10015FAF0;
  if (!qword_10015FAF0)
  {
    sub_1000512BC(255, &qword_10015FAD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_100052498(&qword_10015FAF8, (void (*)(uint64_t))type metadata accessor for HeadlineView);
    sub_100052498(&qword_10015FB00, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FAF0);
  }
  return result;
}

unint64_t sub_1000514B4()
{
  unint64_t result = qword_10015FB08;
  if (!qword_10015FB08)
  {
    sub_100051E8C(255, &qword_10015FAE0, (uint64_t (*)(uint64_t))type metadata accessor for HeadlinesList, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent);
    sub_100052498(&qword_10015FB00, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FB08);
  }
  return result;
}

double sub_10005158C(_OWORD *a1)
{
  double result = 0.0;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

void sub_1000515B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001249F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100051614(uint64_t a1, uint64_t a2)
{
  sub_1000523E4(0, &qword_10015FA60, (uint64_t (*)(uint64_t))sub_100050D88, sub_100051048, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for VStack);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000516BC(uint64_t a1, uint64_t a2)
{
  sub_1000523E4(0, &qword_10015FA60, (uint64_t (*)(uint64_t))sub_100050D88, sub_100051048, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for VStack);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100051764(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000517CC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a4)
  {
    sub_10001BC2C(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10004CE10(a6, a7, a8, a9, a10 & 1);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000518B0(uint64_t a1)
{
  sub_1000523E4(0, &qword_10015FA60, (uint64_t (*)(uint64_t))sub_100050D88, sub_100051048, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for VStack);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100051950(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25]);
  return a1;
}

uint64_t sub_1000519C4(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a4)
  {
    sub_10001BAA4(result, a2, a3 & 1);
    swift_bridgeObjectRelease();
    swift_release();
    sub_100037598(a6, a7, a8, a9, a10 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_100051AA8()
{
  if (!qword_10015FB18)
  {
    sub_100051200(255, &qword_10015FAD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FB18);
    }
  }
}

uint64_t sub_100051B2C(uint64_t a1, uint64_t a2)
{
  sub_100051BB4(0, &qword_10015FB20, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for Environment.Content);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100051BB4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_100051C00(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100051C48()
{
  return swift_deallocObject();
}

uint64_t sub_100051C58(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000510F0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_100051CD4()
{
  return swift_deallocObject();
}

uint64_t sub_100051CE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  char v6 = *(unsigned char *)(a1 + 72);
  sub_10001BC2C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10004CE10(v2, v3, v4, v5, v6);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100051DB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  char v6 = *(unsigned char *)(a1 + 72);
  sub_10001BAA4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_release();
  sub_100037598(v2, v3, v4, v5, v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

void sub_100051E8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, &type metadata for Never);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100051EF8(uint64_t a1, uint64_t a2)
{
  sub_100051E8C(0, &qword_10015FAE0, (uint64_t (*)(uint64_t))type metadata accessor for HeadlinesList, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100051F8C(uint64_t a1)
{
  sub_100051E8C(0, &qword_10015FAE0, (uint64_t (*)(uint64_t))type metadata accessor for HeadlinesList, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005201C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100052084()
{
  return swift_deallocObject();
}

uint64_t sub_100052094(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000520F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_100052164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1000521C4()
{
  unint64_t result = qword_10015FB48;
  if (!qword_10015FB48)
  {
    sub_100050D38(255, (unint64_t *)&qword_10015FA58, (uint64_t)&type metadata for Spacer, (uint64_t)&type metadata for _FrameLayout, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FB48);
  }
  return result;
}

unint64_t sub_100052260()
{
  unint64_t result = qword_10015FB50;
  if (!qword_10015FB50)
  {
    sub_100050FBC();
    sub_1000521C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FB50);
  }
  return result;
}

void sub_1000522E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_100052348()
{
  unint64_t result = qword_10015FB60;
  if (!qword_10015FB60)
  {
    sub_1000523E4(255, &qword_10015FB68, (uint64_t (*)(uint64_t))sub_1000508EC, sub_100052464, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for VStack);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FB60);
  }
  return result;
}

void sub_1000523E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_100052464()
{
  return sub_100052498(&qword_10015FB70, sub_1000508EC);
}

uint64_t sub_100052498(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000524E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10004CA18(a1);
}

unsigned char *sub_1000524F8(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (unsigned char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *((void *)v4 + 1) = a2[1];
    *((void *)v4 + 2) = v7;
    uint64_t v8 = a2[4];
    *((void *)v4 + 3) = a2[3];
    *((void *)v4 + 4) = v8;
    uint64_t v9 = v4 + 40;
    uint64_t v10 = a2 + 5;
    uint64_t v11 = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 == 1)
    {
      long long v12 = *(_OWORD *)(a2 + 7);
      *uint64_t v9 = *v10;
      *(_OWORD *)(v4 + 56) = v12;
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      v4[48] = *((unsigned char *)a2 + 48);
      *((void *)v4 + 7) = a2[7];
      *((void *)v4 + 8) = v11;
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = &v4[v14];
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_100053FD8(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_1000526B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_100053FD8(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1001258F0();
    char v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1000527B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = (_OWORD *)(a1 + 40);
  uint64_t v9 = a2 + 40;
  uint64_t v10 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    long long v11 = *(_OWORD *)(v9 + 16);
    *uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(a1 + 56) = v11;
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(v9 + 8);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v10;
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_100053FD8(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100052914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 40);
  uint64_t v7 = (_OWORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) == 1)
  {
    if (v8 == 1)
    {
      long long v9 = *(_OWORD *)(a2 + 56);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 56) = v9;
      if (a1 == a2) {
        return a1;
      }
    }
    else
    {
      uint64_t v11 = *(void *)v7;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)uint64_t v6 = v11;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      if (a1 == a2) {
        return a1;
      }
    }
  }
  else if (v8 == 1)
  {
    sub_10003088C(a1 + 40);
    long long v10 = *(_OWORD *)(a2 + 56);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 56) = v10;
    if (a1 == a2) {
      return a1;
    }
  }
  else
  {
    uint64_t v12 = *(void *)v7;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)uint64_t v6 = v12;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (a1 == a2) {
      return a1;
    }
  }
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  sub_1000400C8(a1 + v13);
  sub_100053FD8(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    void *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100052B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  sub_100053FD8(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1001258F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100052C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(a1 + 40);
  uint64_t v9 = (void *)(a2 + 40);
  if (*(void *)(a1 + 64) != 1)
  {
    uint64_t v10 = *(void *)(a2 + 64);
    if (v10 != 1)
    {
      *uint64_t v8 = *v9;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v10;
      swift_bridgeObjectRelease();
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_7;
    }
    sub_10003088C(a1 + 40);
  }
  long long v11 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(a1 + 56) = v11;
  if (a1 == a2) {
    return a1;
  }
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  sub_1000400C8(a1 + v12);
  sub_100053FD8(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v16 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1001258F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100052DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100052DE4);
}

uint64_t sub_100052DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_100053FD8(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100052EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100052ED8);
}

uint64_t sub_100052ED8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_100053FD8(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LineTicker()
{
  uint64_t result = qword_10015FBD0;
  if (!qword_10015FBD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100052FFC()
{
  sub_100053FD8(319, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000530D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000530F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100125060();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053B54();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053D88();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v12 = v30;
  uint64_t v31 = v11;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_100124E40();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  sub_100053E64();
  sub_1000533D4((char *)v2, (uint64_t)&v10[*(int *)(v15 + 44)]);
  sub_100125030();
  sub_100053E0C();
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100053EFC((uint64_t)v10, (uint64_t (*)(void))sub_100053B54);
  uint64_t v16 = *(void *)(v2 + 8);
  uint64_t v17 = *(void *)(v2 + 16);
  uint64_t v18 = *(void *)(v2 + 32);
  uint64_t v28 = *(void *)(v2 + 24);
  uint64_t v29 = v16;
  uint64_t v19 = *(void *)(v2 + 40);
  uint64_t v20 = *(void *)(v2 + 48);
  uint64_t v21 = *(void *)(v2 + 56);
  uint64_t v22 = *(void *)(v2 + 64);
  LOBYTE(v2) = *(unsigned char *)v2;
  uint64_t v23 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 16);
  uint64_t v24 = v31;
  v23(a1, v14, v31);
  sub_100053F5C(0, &qword_10015FC58, (uint64_t (*)(uint64_t))sub_100053D88, (uint64_t)&type metadata for AccessibilitySimpleTicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  uint64_t v26 = a1 + *(int *)(v25 + 36);
  *(unsigned char *)uint64_t v26 = v2;
  *(void *)(v26 + 8) = v29;
  *(void *)(v26 + 16) = v17;
  *(void *)(v26 + 24) = v28;
  *(void *)(v26 + 32) = v18;
  *(void *)(v26 + 40) = v19;
  *(void *)(v26 + 48) = v20;
  *(void *)(v26 + 56) = v21;
  *(void *)(v26 + 64) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000321B8(v19, v20, v21, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v14, v24);
}

uint64_t sub_1000533D4@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v3 = sub_100125210();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  __chkstk_darwin(v3);
  uint64_t v61 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001258F0();
  uint64_t v67 = *(void *)(v5 - 8);
  uint64_t v68 = v5;
  __chkstk_darwin(v5);
  Swift::String v65 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  Swift::String v66 = (char *)&v61 - v8;
  uint64_t v71 = type metadata accessor for StockPriceView();
  __chkstk_darwin(v71);
  uint64_t v10 = (uint64_t *)((char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100053C60();
  uint64_t v73 = v11;
  __chkstk_darwin(v11);
  uint64_t v75 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v72 = (uint64_t)&v61 - v14;
  __chkstk_darwin(v15);
  uint64_t v74 = (uint64_t)&v61 - v16;
  uint64_t v17 = type metadata accessor for SymbolTrendView();
  uint64_t v18 = (int *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v61 - v22;
  char v24 = *a1;
  uint64_t v26 = *((void *)a1 + 1);
  uint64_t v25 = *((void *)a1 + 2);
  uint64_t v28 = *((void *)a1 + 3);
  uint64_t v27 = *((void *)a1 + 4);
  uint64_t KeyPath = (char *)swift_getKeyPath();
  *uint64_t v20 = v24;
  *((void *)v20 + 1) = v26;
  *((void *)v20 + 2) = v25;
  *((void *)v20 + 3) = v28;
  *((void *)v20 + 4) = v27;
  uint64_t v29 = (uint64_t *)&v20[v18[8]];
  *uint64_t v29 = swift_getKeyPath();
  sub_100053FD8(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v69 = v30;
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = (uint64_t *)&v20[v18[9]];
  *uint64_t v31 = swift_getKeyPath();
  sub_100053FD8(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = &v20[v18[10]];
  *(void *)uint64_t v32 = KeyPath;
  v32[8] = 0;
  uint64_t KeyPath = v23;
  uint64_t v33 = (uint64_t)v23;
  uint64_t v34 = v65;
  sub_10005403C((uint64_t)v20, v33, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  uint64_t v35 = *((void *)a1 + 5);
  uint64_t v36 = *((void *)a1 + 6);
  uint64_t v37 = *((void *)a1 + 7);
  uint64_t v38 = *((void *)a1 + 8);
  type metadata accessor for LineTicker();
  uint64_t v39 = (uint64_t)v66;
  swift_bridgeObjectRetain();
  uint64_t v40 = v67;
  swift_bridgeObjectRetain();
  uint64_t v64 = v35;
  sub_1000321B8(v35, v36, v37, v38);
  sub_10005EEE4(v39);
  uint64_t v41 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v34, v39, v68);
  int v42 = (*(uint64_t (**)(char *, uint64_t))(v40 + 88))(v34, v41);
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  if (v42 == enum case for WidgetFamily.accessoryCircular(_:)
    || v42 == enum case for WidgetFamily.accessoryRectangular(_:)
    || v42 == enum case for WidgetFamily.accessoryInline(_:))
  {
    v43(v39, v41);
    uint64_t v47 = sub_100125150();
  }
  else
  {
    v43((uint64_t)v34, v41);
    v43(v39, v41);
    sub_100125260();
    sub_100125160();
    swift_release();
    uint64_t v45 = v61;
    uint64_t v44 = v62;
    uint64_t v46 = v63;
    (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for Font.Leading.tight(_:), v63);
    uint64_t v47 = sub_100125240();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  uint64_t v48 = swift_getKeyPath();
  *uint64_t v10 = v64;
  v10[1] = v36;
  void v10[2] = v37;
  v10[3] = v38;
  v10[4] = v47;
  uint64_t v49 = v71;
  uint64_t v50 = (uint64_t *)((char *)v10 + *(int *)(v71 + 24));
  *uint64_t v50 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = (char *)v10 + *(int *)(v49 + 28);
  *(void *)uint64_t v51 = v48;
  v51[8] = 0;
  uint64_t v52 = *(int *)(v49 + 32);
  if (qword_10015D598 != -1) {
    swift_once();
  }
  sub_1000050BC();
  swift_allocObject();
  swift_retain();
  *(uint64_t *)((char *)v10 + v52) = sub_100123FD0();
  uint64_t v53 = v72;
  sub_1000540A4((uint64_t)v10, v72, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  *(void *)(v53 + *(int *)(v73 + 36)) = 0x3FF0000000000000;
  sub_100053EFC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  uint64_t v54 = v74;
  sub_10005403C(v53, v74, (uint64_t (*)(void))sub_100053C60);
  uint64_t v55 = (uint64_t)KeyPath;
  sub_1000540A4((uint64_t)KeyPath, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  uint64_t v56 = v75;
  sub_1000540A4(v54, v75, (uint64_t (*)(void))sub_100053C60);
  uint64_t v57 = v76;
  sub_1000540A4((uint64_t)v20, v76, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  sub_100053BE8();
  uint64_t v59 = v57 + *(int *)(v58 + 48);
  *(void *)uint64_t v59 = 0x4020000000000000;
  *(unsigned char *)(v59 + 8) = 0;
  sub_1000540A4(v56, v57 + *(int *)(v58 + 64), (uint64_t (*)(void))sub_100053C60);
  sub_100053EFC(v54, (uint64_t (*)(void))sub_100053C60);
  sub_100053EFC(v55, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  sub_100053EFC(v56, (uint64_t (*)(void))sub_100053C60);
  return sub_100053EFC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
}

void sub_100053B54()
{
  if (!qword_10015FC10)
  {
    sub_100053FD8(255, &qword_10015FC18, (uint64_t (*)(uint64_t))sub_100053BE8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_100053D00();
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FC10);
    }
  }
}

void sub_100053BE8()
{
  if (!qword_10015FC20)
  {
    type metadata accessor for SymbolTrendView();
    sub_100053C60();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_10015FC20);
    }
  }
}

void sub_100053C60()
{
  if (!qword_10015FC28)
  {
    type metadata accessor for StockPriceView();
    sub_100053F5C(255, (unint64_t *)&qword_10015FC30, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutPriorityTraitKey, (uint64_t)&protocol witness table for LayoutPriorityTraitKey, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _TraitWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FC28);
    }
  }
}

unint64_t sub_100053D00()
{
  unint64_t result = qword_10015FC38;
  if (!qword_10015FC38)
  {
    sub_100053FD8(255, &qword_10015FC18, (uint64_t (*)(uint64_t))sub_100053BE8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FC38);
  }
  return result;
}

void sub_100053D88()
{
  if (!qword_10015FC40)
  {
    sub_100053B54();
    sub_100053E0C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_10015FC40);
    }
  }
}

unint64_t sub_100053E0C()
{
  unint64_t result = qword_10015FC48;
  if (!qword_10015FC48)
  {
    sub_100053B54();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FC48);
  }
  return result;
}

void sub_100053E64()
{
  if (!qword_10015FC50)
  {
    sub_100053FD8(255, &qword_10015FC18, (uint64_t (*)(uint64_t))sub_100053BE8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FC50);
    }
  }
}

uint64_t sub_100053EFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100053F5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_100053FD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10005403C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000540A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100054110()
{
  unint64_t result = qword_10015FC60;
  if (!qword_10015FC60)
  {
    sub_100053F5C(255, &qword_10015FC58, (uint64_t (*)(uint64_t))sub_100053D88, (uint64_t)&type metadata for AccessibilitySimpleTicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_100053B54();
    sub_100053E0C();
    swift_getOpaqueTypeConformance2();
    sub_1000541F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FC60);
  }
  return result;
}

unint64_t sub_1000541F0()
{
  unint64_t result = qword_10015FC68;
  if (!qword_10015FC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FC68);
  }
  return result;
}

uint64_t sub_100054244(uint64_t a1, char a2, char a3)
{
  uint64_t v7 = sub_1001233E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 1) {
    return 0;
  }
  uint64_t v11 = *(void **)(v3 + 16);
  sub_100123390();
  Class isa = sub_100123350().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v13 = [v11 formattedCount:a1 withLocale:isa longform:a2 & 1 compactDisplay:a3 & 1];

  if (!v13) {
    return 0;
  }
  uint64_t v14 = sub_100125B10();

  return v14;
}

uint64_t sub_100054394()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnitNumberFormatter()
{
  return self;
}

uint64_t sub_1000543F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FEF0);
  uint64_t result = sub_100124100();
  if (!v19)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FEF8);
  uint64_t result = sub_100124100();
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FED8);
  uint64_t result = sub_100124100();
  if (!v15)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015E7B0);
  uint64_t result = sub_100124100();
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, (unint64_t *)&unk_10015FF00);
  uint64_t result = sub_100124100();
  if (!v11)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v5 = type metadata accessor for WatchlistViewModelService(0);
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = OBJC_IVAR____TtC12StocksWidget25WatchlistViewModelService_logger;
  if (qword_10015D4A0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100124570();
  uint64_t v9 = sub_100019244(v8, (uint64_t)qword_100172528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6 + v7, v9, v8);
  sub_100029474(&v18, v6 + 16);
  sub_100029474(&v16, v6 + 56);
  sub_100029474(&v14, v6 + 96);
  sub_100029474(&v12, v6 + 136);
  uint64_t result = sub_100029474(&v10, v6 + 176);
  a2[3] = v5;
  a2[4] = (uint64_t)&off_100151228;
  *a2 = v6;
  return result;
}

uint64_t sub_1000546A8()
{
  type metadata accessor for DemoTimelineManager();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = OBJC_IVAR____TtC12StocksWidget19DemoTimelineManager_logger;
  if (qword_10015D4C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100124570();
  uint64_t v3 = sub_100019244(v2, (uint64_t)qword_100172588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v0 + v1, v3, v2);
  uint64_t v4 = (void *)(v0 + OBJC_IVAR____TtC12StocksWidget19DemoTimelineManager_stocksSuiteKey);
  *uint64_t v4 = 0xD00000000000001CLL;
  v4[1] = 0x80000001001315C0;
  uint64_t v5 = v0 + OBJC_IVAR____TtC12StocksWidget19DemoTimelineManager____lazy_storage___demoDirectory;
  uint64_t v6 = sub_100123150();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  return v0;
}

uint64_t sub_1000547E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NoopStocksIntentHandler();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  a1[3] = v2;
  uint64_t result = sub_10005694C(&qword_10015FEE8, (void (*)(uint64_t))type metadata accessor for NoopStocksIntentHandler);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_100054870@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015E7B0);
  uint64_t result = sub_100124100();
  if (!v15)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FED8);
  uint64_t result = sub_100124100();
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FEE0);
  uint64_t result = sub_100124100();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v5 = type metadata accessor for TodayViewModelService();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = OBJC_IVAR____TtC12StocksWidget21TodayViewModelService_logger;
  if (qword_10015D4A0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100124570();
  uint64_t v9 = sub_100019244(v8, (uint64_t)qword_100172528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6 + v7, v9, v8);
  sub_100029474(&v14, v6 + 16);
  sub_100029474(&v12, v6 + 56);
  uint64_t result = sub_100029474(&v10, v6 + 96);
  a2[3] = v5;
  a2[4] = (uint64_t)&off_1001540C8;
  *a2 = v6;
  return result;
}

uint64_t sub_100054A70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015E7B0);
  uint64_t result = sub_100124100();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for ReloadPolicyProvider();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_100029474(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100154C08;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100054B24@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FEC8);
  uint64_t result = sub_100124100();
  if (!v22)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FED0);
  uint64_t result = sub_100124100();
  uint64_t v5 = v19;
  if (!v19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = v20;
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FEB0);
  uint64_t result = sub_100124100();
  if (!v18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015E7B0);
  uint64_t result = sub_100124100();
  if (!v16)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_100009D98(v15, v16);
  swift_getKeyPath();
  uint64_t v7 = sub_100123AE0();
  swift_release();
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FDE0);
  uint64_t result = sub_100124100();
  if (!v13)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v8 = type metadata accessor for HeadlineViewModelService();
  uint64_t v9 = (char *)swift_allocObject();
  uint64_t v10 = OBJC_IVAR____TtC12StocksWidget24HeadlineViewModelService_logger;
  if (qword_10015D4A0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100124570();
  uint64_t v12 = sub_100019244(v11, (uint64_t)qword_100172528);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(&v9[v10], v12, v11);
  sub_100029474(&v21, (uint64_t)(v9 + 16));
  *((void *)v9 + 7) = v5;
  *((void *)v9 + 8) = v6;
  sub_100029474(&v17, (uint64_t)(v9 + 72));
  *((void *)v9 + 14) = v7;
  *((void *)v9 + 15) = v13;
  *((void *)v9 + 16) = v14;
  uint64_t result = sub_100009D48((uint64_t)v15);
  a2[3] = (char *)v8;
  a2[4] = (char *)&off_1001512C8;
  *a2 = v9;
  return result;
}

void *sub_100054E28@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for QuoteDetailItemFactory();
  swift_allocObject();
  uint64_t result = sub_1000C07D4();
  a1[3] = v2;
  a1[4] = &off_100153AD0;
  *a1 = result;
  return result;
}

uint64_t sub_100054E80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1000568C8();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D98(a1, a1[3]);
  uint64_t v7 = sub_1001233E0();
  sub_100124100();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = &type metadata for SystemTheme;
    uint64_t v15 = &off_100152F60;
    uint64_t v10 = type metadata accessor for BaseStyler();
    uint64_t v11 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v11 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_locale, v6, v7);
    sub_1000DB450((uint64_t)&v13, 0, 2u, (uint64_t *)v12);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    sub_100029474(v12, v11 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_theme);
    uint64_t result = sub_100029474(&v13, v11 + OBJC_IVAR____TtC12StocksWidget10BaseStyler_systemTheme);
    a2[3] = v10;
    a2[4] = (uint64_t)&off_100151D38;
    *a2 = v11;
  }
  return result;
}

uint64_t sub_100055050()
{
  uint64_t v0 = sub_1001242F0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001233E0();
  sub_100124270();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.singleton(_:), v0);
  sub_1001240A0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100055180@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FEB0);
  uint64_t result = sub_100124100();
  if (!v14)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FDE0);
  uint64_t result = sub_1001240E0();
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_100009D98(a1, a1[3]);
  uint64_t result = sub_1001240E0();
  if (!v9)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  type metadata accessor for MandatoryHeadlineService(0);
  uint64_t v5 = (char *)swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v6 = OBJC_IVAR____TtC12StocksWidget24MandatoryHeadlineService_logger;
  if (qword_10015D4A0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100124570();
  uint64_t v8 = sub_100019244(v7, (uint64_t)qword_100172528);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(&v5[v6], v8, v7);
  sub_100029474(&v13, (uint64_t)(v5 + 112));
  *((void *)v5 + 19) = v11;
  *((void *)v5 + 20) = v12;
  *((void *)v5 + 21) = v9;
  *((void *)v5 + 22) = v10;
  uint64_t result = sub_10005694C(&qword_10015FEB8, (void (*)(uint64_t))type metadata accessor for MandatoryHeadlineService);
  *a2 = v5;
  a2[1] = (char *)result;
  return result;
}

uint64_t sub_1000553C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FEA0);
  uint64_t result = sub_100124100();
  if (v9)
  {
    type metadata accessor for TopStoriesMandatoryHeadlineService(0);
    uint64_t v4 = swift_allocObject();
    swift_defaultActor_initialize();
    uint64_t v5 = OBJC_IVAR____TtC12StocksWidget34TopStoriesMandatoryHeadlineService_logger;
    if (qword_10015D4A0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_100124570();
    uint64_t v7 = sub_100019244(v6, (uint64_t)qword_100172528);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v4 + v5, v7, v6);
    sub_100029474(&v8, v4 + 112);
    uint64_t result = sub_10005694C(&qword_10015FEA8, (void (*)(uint64_t))type metadata accessor for TopStoriesMandatoryHeadlineService);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10005552C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FDE8);
  uint64_t result = sub_100124100();
  if (!v14)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = v15;
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FE88);
  uint64_t result = sub_100124100();
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FE90);
  uint64_t result = sub_100124100();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  type metadata accessor for WidgetConfigMandatoryHeadlineService(0);
  uint64_t v6 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v7 = OBJC_IVAR____TtC12StocksWidget36WidgetConfigMandatoryHeadlineService_logger;
  if (qword_10015D4A0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100124570();
  uint64_t v9 = sub_100019244(v8, (uint64_t)qword_100172528);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6 + v7, v9, v8);
  *(void *)(v6 + 112) = v14;
  *(void *)(v6 + 120) = v5;
  sub_100029474(&v12, v6 + 128);
  sub_100029474(&v10, v6 + 168);
  uint64_t result = sub_10005694C(&qword_10015FE98, (void (*)(uint64_t))type metadata accessor for WidgetConfigMandatoryHeadlineService);
  *a2 = v6;
  a2[1] = result;
  return result;
}

uint64_t sub_100055758@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_10003EAE0(0, &qword_10015FDF8);
  uint64_t result = sub_1001240D0();
  if (result)
  {
    uint64_t v5 = result;
    sub_100009D98(a1, a1[3]);
    sub_100056994(0, &qword_10015E7B0);
    uint64_t result = sub_100124100();
    if (v8)
    {
      type metadata accessor for WidgetSectionConfigRecordService();
      uint64_t v6 = swift_allocObject();
      swift_defaultActor_initialize();
      *(void *)(v6 + 112) = v5;
      sub_100029474(&v7, v6 + 120);
      uint64_t result = sub_10005694C(&qword_10015FE80, (void (*)(uint64_t))type metadata accessor for WidgetSectionConfigRecordService);
      *a2 = v6;
      a2[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000558A4(void *a1)
{
  sub_100009D98(a1, a1[3]);
  sub_10003EAE0(0, &qword_10015FE68);
  uint64_t result = sub_1001240F0();
  if (result)
  {
    uint64_t v3 = (void *)result;
    sub_100009D98(a1, a1[3]);
    sub_10005682C();
    uint64_t result = sub_1001240D0();
    if (result)
    {
      uint64_t v4 = (void *)result;
      id v5 = [v3 recordSourceWithSchema:result];
      swift_unknownObjectRelease();

      return (uint64_t)v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100055998(void *a1)
{
  sub_100009D98(a1, a1[3]);
  sub_10003EAE0(0, &qword_10015FE68);
  uint64_t result = sub_1001240F0();
  if (result)
  {
    uint64_t v3 = (void *)result;
    sub_100009D98(a1, a1[3]);
    sub_10003EAE0(0, &qword_10015FDF0);
    uint64_t result = sub_1001240D0();
    if (result)
    {
      uint64_t v4 = result;
      sub_10005686C();
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1001294E0;
      *(void *)(v5 + 32) = v4;
      sub_100125CE0();
      swift_unknownObjectRetain();
      Class isa = sub_100125C90().super.isa;
      swift_bridgeObjectRelease();
      id v7 = [v3 recordTreeSourceWithRecordSources:isa];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      return (uint64_t)v7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100055B04()
{
  id v0 = objc_allocWithZone((Class)FCJSONRecordSourceSchema);
  NSString v1 = sub_100125AD0();
  NSString v2 = sub_100125AD0();
  Class isa = sub_100125C90().super.isa;
  Class v4 = sub_100125C90().super.isa;
  id v5 = [v0 initWithRecordType:v1 recordIDPrefix:v2 keys:isa localizableKeys:v4];

  return v5;
}

uint64_t sub_100055BDC()
{
  return sub_1000F8044();
}

uint64_t sub_100055C14(uint64_t a1, void *a2)
{
  sub_100009D98(a2, a2[3]);
  type metadata accessor for WidgetTerminationService();
  uint64_t result = sub_1001240F0();
  if (result)
  {
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100055C7C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StocksWidgetAssembly()
{
  return self;
}

uint64_t sub_100055CB4(uint64_t a1)
{
  uint64_t v2 = sub_100124110();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  uint64_t v25 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001242F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100124140();
  v24[2] = sub_100056994(0, &qword_10015FDA8);
  sub_100124270();
  swift_release();
  uint64_t v8 = enum case for Scope.singleton(_:);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v9(v7, enum case for Scope.singleton(_:), v4);
  long long v10 = v9;
  sub_1001240A0();
  swift_release();
  swift_release();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  sub_100124140();
  type metadata accessor for DemoTimelineManager();
  sub_100124260();
  swift_release();
  v10(v7, v8, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  v11(v7, v4);
  sub_100124140();
  sub_100056994(0, (unint64_t *)&unk_10015FDB0);
  sub_100124270();
  swift_release();
  v10(v7, v8, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  v11(v7, v4);
  sub_100124140();
  sub_100056994(0, &qword_10015E7A8);
  sub_100124270();
  swift_release();
  v10(v7, v8, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  v11(v7, v4);
  sub_100124140();
  sub_100056994(0, (unint64_t *)&unk_10015FDC0);
  sub_100124270();
  swift_release();
  unsigned int v30 = v8;
  v10(v7, v8, v4);
  v24[1] = v5 + 104;
  sub_1001240A0();
  swift_release();
  swift_release();
  v11(v7, v4);
  v24[0] = v11;
  sub_100124140();
  sub_100056994(0, &qword_10015E800);
  sub_100124270();
  swift_release();
  swift_release();
  sub_100124140();
  sub_100056994(0, (unint64_t *)&unk_10015FDD0);
  sub_100124270();
  swift_release();
  v10(v7, v8, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  v11(v7, v4);
  uint64_t v29 = a1;
  sub_100124140();
  sub_100056994(0, (unint64_t *)&qword_10015EEC8);
  sub_100124270();
  swift_release();
  swift_release();
  sub_100124150();
  sub_100124250();
  swift_release();
  sub_100124150();
  sub_100056994(0, &qword_10015FDE0);
  sub_100124270();
  swift_release();
  uint64_t v12 = v30;
  uint64_t v28 = v10;
  v10(v7, v30, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  uint64_t v13 = (void (*)(char *, uint64_t))v24[0];
  ((void (*)(char *, uint64_t))v24[0])(v7, v4);
  sub_100124150();
  sub_100124270();
  swift_release();
  v10(v7, v12, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  uint64_t v14 = v13;
  v13(v7, v4);
  sub_100124150();
  sub_100124270();
  swift_release();
  uint64_t v15 = v30;
  uint64_t v16 = v28;
  v28(v7, v30, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_100124150();
  sub_100056994(0, &qword_10015FDE8);
  sub_100124270();
  swift_release();
  v16(v7, v15, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_100124150();
  sub_10003EAE0(0, &qword_10015FDF0);
  sub_100124260();
  swift_release();
  uint64_t v17 = v30;
  v16(v7, v30, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_100124140();
  sub_10003EAE0(0, &qword_10015FDF8);
  sub_100124260();
  swift_release();
  uint64_t v18 = v17;
  uint64_t v19 = v28;
  v28(v7, v18, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_100124150();
  sub_10005682C();
  sub_100124260();
  swift_release();
  swift_release();
  sub_100124150();
  type metadata accessor for WidgetTerminationService();
  sub_100124260();
  swift_release();
  v19(v7, v30, v4);
  sub_1001240A0();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_100124160();
  sub_100009D98(v31, v31[3]);
  long long v21 = v25;
  uint64_t v20 = v26;
  uint64_t v22 = v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, enum case for CallbackScope.any(_:), v27);
  sub_100124290();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
  return sub_100009D48((uint64_t)v31);
}

unint64_t sub_10005682C()
{
  unint64_t result = qword_10015FE60;
  if (!qword_10015FE60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10015FE60);
  }
  return result;
}

void sub_10005686C()
{
  if (!qword_10015FE70)
  {
    unint64_t v0 = sub_100126500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FE70);
    }
  }
}

void sub_1000568C8()
{
  if (!qword_10015FEC0)
  {
    sub_1001233E0();
    unint64_t v0 = sub_100126010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FEC0);
    }
  }
}

uint64_t sub_100056920@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100123790();
  *a1 = v3;
  return result;
}

uint64_t sub_10005694C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100056994(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1000569E4()
{
  type metadata accessor for PriceChangeFormatter();
  uint64_t result = swift_initStaticObject();
  qword_1001725C0 = result;
  return result;
}

uint64_t sub_100056A14()
{
  type metadata accessor for PercentChangeFormatter();
  uint64_t result = swift_initStaticObject();
  qword_1001725C8 = result;
  return result;
}

id sub_100056A44()
{
  type metadata accessor for UnitNumberFormatter();
  uint64_t v0 = swift_allocObject();
  id result = [objc_allocWithZone((Class)SCICUNumberFormatter) init];
  *(void *)(v0 + 16) = result;
  qword_1001725D0 = v0;
  return result;
}

uint64_t StockType.shouldShowCurrencySymbol.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100123E40();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 != enum case for StockType.unknown(_:)
    && v7 != enum case for StockType.currency(_:)
    && v7 != enum case for StockType.cryptocurrency(_:)
    && v7 != enum case for StockType.equity(_:)
    && v7 != enum case for StockType.etf(_:)
    && v7 != enum case for StockType.futures(_:))
  {
    if (v7 == enum case for StockType.index(_:)) {
      return 0;
    }
    if (v7 != enum case for StockType.mutualFund(_:)) {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  return 1;
}

unint64_t sub_100056C2C(char a1)
{
  unint64_t result = 0x6563697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6168436563697270;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x79636E6572727563;
      break;
    case 4:
      unint64_t result = 0x6B6361626C6C6166;
      break;
    case 5:
      unint64_t result = 0x65676E6168637865;
      break;
    case 6:
      unint64_t result = 0x7079546B636F7473;
      break;
    case 7:
      unint64_t result = 0x656C61636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100056D54(void *a1)
{
  sub_100058BE8(0, &qword_10015FFE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int v7 = &v9[-v6];
  sub_100009D98(a1, a1[3]);
  sub_100058B94();
  sub_100126650();
  v9[15] = 0;
  sub_100126450();
  if (!v1)
  {
    v9[14] = 1;
    sub_100126450();
    v9[13] = 2;
    sub_100126450();
    v9[12] = 3;
    sub_100126440();
    v9[11] = 4;
    sub_100126480();
    type metadata accessor for PriceViewModel();
    v9[10] = 5;
    sub_1001236A0();
    sub_100058C4C(&qword_10015FFE8, (void (*)(uint64_t))&type metadata accessor for ExchangeStatus);
    sub_1001264C0();
    v9[9] = 6;
    sub_100123E40();
    sub_100058C4C(&qword_10015FFF0, (void (*)(uint64_t))&type metadata accessor for StockType);
    sub_1001264C0();
    v9[8] = 7;
    sub_1001233E0();
    sub_100058C4C(&qword_10015FFF8, (void (*)(uint64_t))&type metadata accessor for Locale);
    sub_1001264C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000570C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v40 = sub_1001233E0();
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100123E40();
  uint64_t v41 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1001236A0();
  uint64_t v45 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  int v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100058BE8(0, &qword_10015FFB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v44 = v8;
  uint64_t v42 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v10 = (char *)&v36 - v9;
  uint64_t v47 = (int *)type metadata accessor for PriceViewModel();
  __chkstk_darwin(v47);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1;
  sub_100009D98(a1, a1[3]);
  sub_100058B94();
  uint64_t v14 = v10;
  uint64_t v15 = v49;
  sub_100126640();
  if (v15) {
    return sub_100009D48((uint64_t)a1);
  }
  uint64_t v49 = v7;
  uint64_t v37 = v5;
  uint64_t v17 = v42;
  uint64_t v16 = v43;
  char v57 = 0;
  uint64_t v18 = v44;
  uint64_t v19 = v14;
  *(void *)uint64_t v12 = sub_100126380();
  v12[8] = v20 & 1;
  char v56 = 1;
  uint64_t v21 = (uint64_t)v13;
  *((void *)v12 + 2) = sub_100126380();
  v12[24] = v22 & 1;
  char v55 = 2;
  *((void *)v12 + 4) = sub_100126380();
  v12[40] = v23 & 1;
  char v54 = 3;
  *((void *)v12 + 6) = sub_100126370();
  *((void *)v12 + 7) = v24;
  char v53 = 4;
  *((void *)v12 + 8) = sub_1001263B0();
  *((void *)v12 + 9) = v25;
  char v52 = 5;
  sub_100058C4C(&qword_10015FFC8, (void (*)(uint64_t))&type metadata accessor for ExchangeStatus);
  uint64_t v27 = v48;
  uint64_t v26 = v49;
  sub_1001263F0();
  uint64_t v28 = v27;
  uint64_t v29 = v12;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v12[v47[9]], v26, v28);
  char v51 = 6;
  sub_100058C4C(&qword_10015FFD0, (void (*)(uint64_t))&type metadata accessor for StockType);
  unsigned int v30 = v37;
  uint64_t v31 = v46;
  sub_1001263F0();
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v29[v47[10]], v30, v31);
  char v50 = 7;
  sub_100058C4C(&qword_10015FFD8, (void (*)(uint64_t))&type metadata accessor for Locale);
  uint64_t v32 = (uint64_t)v29;
  uint64_t v33 = v16;
  uint64_t v34 = v40;
  sub_1001263F0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v32 + v47[11], v33, v34);
  sub_100057E18(v32, v39);
  sub_100009D48(v21);
  return sub_100057E7C(v32);
}

unint64_t sub_1000577F4()
{
  return sub_100056C2C(*v0);
}

uint64_t sub_1000577FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100058F30(a1, a2);
  *a3 = result;
  return result;
}

void sub_100057824(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_100057830(uint64_t a1)
{
  unint64_t v2 = sub_100058B94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10005786C(uint64_t a1)
{
  unint64_t v2 = sub_100058B94();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000578A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000570C0(a1, a2);
}

uint64_t sub_1000578C0(void *a1)
{
  return sub_100056D54(a1);
}

uint64_t sub_1000578DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1001238A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for PriceChangeDisplay.currency(_:) || v7 == enum case for PriceChangeDisplay.percentage(_:))
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    long long v10 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
    v18._countAndFlagsBits = 0x8000000100131630;
    v11._countAndFlagsBits = 0x65676E616863;
    v11._object = (void *)0xE600000000000000;
    v12.value._countAndFlagsBits = 0;
    v12.value._object = 0;
    v13.super.Class isa = v10;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
  }
  else
  {
    if (v7 != enum case for PriceChangeDisplay.marketCapitalization(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return 0;
    }
    type metadata accessor for Localized();
    uint64_t v15 = swift_getObjCClassFromMetadata();
    long long v10 = (objc_class *)[self bundleForClass:v15];
    v18._countAndFlagsBits = 0x8000000100131600;
    v11._countAndFlagsBits = 0x632074656B72616DLL;
    v11._object = (void *)0xEA00000000007061;
    v12.value._countAndFlagsBits = 0;
    v12.value._object = 0;
    v13.super.Class isa = v10;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
  }
  uint64_t v16 = sub_100123070(v11, v12, v13, v14, v18);

  return v16;
}

uint64_t sub_100057B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PriceViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - v8;
  __chkstk_darwin(v10);
  Swift::String_optional v12 = (double *)((char *)&v26 - v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (double *)((char *)&v26 - v14);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a2 + 8))
    {
      sub_100057E18(a1, (uint64_t)&v26 - v14);
      sub_100057E18(a2, (uint64_t)v12);
      goto LABEL_12;
    }
    goto LABEL_5;
  }
  if (*(unsigned char *)(a2 + 8))
  {
LABEL_5:
    sub_100057E18(a1, (uint64_t)&v26 - v14);
    sub_100057E18(a2, (uint64_t)v12);
LABEL_6:
    sub_100057E7C((uint64_t)v12);
    sub_100057E7C((uint64_t)v15);
    goto LABEL_7;
  }
  double v18 = *(double *)a1;
  double v19 = *(double *)a2;
  sub_100057E18(a1, (uint64_t)&v26 - v14);
  sub_100057E18(a2, (uint64_t)v12);
  if (v18 != v19) {
    goto LABEL_6;
  }
LABEL_12:
  double v20 = v15[2];
  char v21 = *((unsigned char *)v15 + 24);
  sub_100057E7C((uint64_t)v15);
  double v22 = v12[2];
  char v23 = *((unsigned char *)v12 + 24);
  sub_100057E7C((uint64_t)v12);
  if (v21)
  {
    if (v23)
    {
      sub_100057E18(a1, (uint64_t)v9);
      sub_100057E18(a2, (uint64_t)v6);
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v23)
  {
LABEL_7:
    sub_100057E18(a1, (uint64_t)v9);
    sub_100057E18(a2, (uint64_t)v6);
LABEL_8:
    sub_100057E7C((uint64_t)v6);
    sub_100057E7C((uint64_t)v9);
LABEL_9:
    LOBYTE(v16) = 0;
    return v16 & 1;
  }
  sub_100057E18(a1, (uint64_t)v9);
  sub_100057E18(a2, (uint64_t)v6);
  if (v20 != v22) {
    goto LABEL_8;
  }
LABEL_17:
  uint64_t v24 = *((void *)v9 + 7);
  uint64_t v16 = *((void *)v6 + 7);
  if (!v24)
  {
    swift_bridgeObjectRetain();
    sub_100057E7C((uint64_t)v6);
    sub_100057E7C((uint64_t)v9);
    if (!v16)
    {
      LOBYTE(v16) = 1;
      return v16 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v16)
  {
    if (*((void *)v9 + 6) == *((void *)v6 + 6) && v24 == v16) {
      LOBYTE(v16) = 1;
    }
    else {
      LOBYTE(v16) = sub_100126530();
    }
  }
  swift_bridgeObjectRetain();
  sub_100057E7C((uint64_t)v6);
  sub_100057E7C((uint64_t)v9);
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t type metadata accessor for PriceViewModel()
{
  uint64_t result = qword_10015FF68;
  if (!qword_10015FF68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100057E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PriceViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100057E7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PriceViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100057ED8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = a2[9];
    uint64_t v9 = a3[9];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v8;
    uint64_t v12 = sub_1001236A0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[10];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_100123E40();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[11];
    double v19 = (char *)v4 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = sub_1001233E0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t sub_1000580A0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_1001236A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = sub_100123E40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[11];
  uint64_t v9 = sub_1001233E0();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

uint64_t sub_1000581A8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v11 = sub_1001236A0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_100123E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[11];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1001233E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t sub_100058320(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = sub_1001236A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = sub_100123E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[11];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = sub_1001233E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t sub_1000584A4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 64);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v10 = sub_1001236A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100123E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1001233E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t sub_1000585F0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1001236A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_100123E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[11];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1001233E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_100058754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100058768);
}

uint64_t sub_100058768(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 72);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1001236A0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_100123E40();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1001233E0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];

  return v15(v17, a2, v16);
}

uint64_t sub_1000588E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000588F4);
}

uint64_t sub_1000588F4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 72) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1001236A0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_100123E40();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1001233E0();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];

  return v15(v17, a2, a2, v16);
}

uint64_t sub_100058A6C()
{
  uint64_t result = sub_1001236A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100123E40();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1001233E0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_100058B94()
{
  unint64_t result = qword_10015FFC0;
  if (!qword_10015FFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015FFC0);
  }
  return result;
}

void sub_100058BE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_100058B94();
    unint64_t v7 = a3(a1, &type metadata for PriceViewModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_100058C4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PriceViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PriceViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100058DF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriceViewModel.CodingKeys()
{
  return &type metadata for PriceViewModel.CodingKeys;
}

unint64_t sub_100058E2C()
{
  unint64_t result = qword_100160000;
  if (!qword_100160000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160000);
  }
  return result;
}

unint64_t sub_100058E84()
{
  unint64_t result = qword_100160008;
  if (!qword_100160008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160008);
  }
  return result;
}

unint64_t sub_100058EDC()
{
  unint64_t result = qword_100160010;
  if (!qword_100160010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160010);
  }
  return result;
}

uint64_t sub_100058F30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001001315E0 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000074786554 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEE00737574617453 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7079546B636F7473 && a2 == 0xE900000000000065 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

ValueMetadata *type metadata accessor for DetailWidget()
{
  return &type metadata for DetailWidget;
}

uint64_t sub_1000592EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100059308()
{
  return sub_100124C20();
}

uint64_t sub_10005932C(uint64_t a1)
{
  uint64_t v2 = sub_1001248B0();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_100124C30();
}

uint64_t sub_1000593F4()
{
  return sub_100124D90();
}

uint64_t sub_100059418@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100124DC0();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_100059448@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v1 = type metadata accessor for DetailTimelineProvider(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100059CD0();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100059E50();
  uint64_t v47 = v9;
  uint64_t v44 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100059F04();
  uint64_t v50 = v12;
  uint64_t v46 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v52 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100059FF0();
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v49 = v14;
  __chkstk_darwin(v14);
  uint64_t v45 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123B70();
  if (qword_10015D4B0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100124570();
  uint64_t v17 = sub_100019244(v16, (uint64_t)qword_100172558);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v3, v17, v16);
  type metadata accessor for DetailWidgetView();
  sub_100059E08(&qword_100160020, (void (*)(uint64_t))type metadata accessor for DetailWidgetView);
  sub_100059E08(&qword_100160048, (void (*)(uint64_t))type metadata accessor for DetailTimelineProvider);
  sub_100125940();
  sub_100124EC0();
  uint64_t v18 = sub_100125340();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  uint64_t v23 = sub_100059E08(&qword_100160030, (void (*)(uint64_t))sub_100059CD0);
  sub_100124F40();
  sub_10001BAA4(v18, v20, v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100124EC0();
  uint64_t v24 = sub_100125340();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  uint64_t v53 = v5;
  uint64_t v54 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = v47;
  sub_100124F20();
  sub_10001BAA4(v24, v26, v28);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v30);
  sub_10005A134(0, &qword_10015EF50, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v31 = sub_1001258F0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void *)(v32 + 72);
  unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_100129750;
  unint64_t v36 = v35 + v34;
  uint64_t v37 = *(void (**)(unint64_t, void, uint64_t))(v32 + 104);
  v37(v36, enum case for WidgetFamily.systemSmall(_:), v31);
  v37(v36 + v33, enum case for WidgetFamily.systemMedium(_:), v31);
  v37(v36 + 2 * v33, enum case for WidgetFamily.systemLarge(_:), v31);
  v37(v36 + 3 * v33, enum case for WidgetFamily.accessoryInline(_:), v31);
  v37(v36 + 4 * v33, enum case for WidgetFamily.accessoryRectangular(_:), v31);
  v37(v36 + 5 * v33, enum case for WidgetFamily.accessoryCircular(_:), v31);
  uint64_t v53 = v30;
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v38 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v45;
  uint64_t v40 = v50;
  uint64_t v41 = v52;
  sub_100124F30();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v40);
  uint64_t v53 = v40;
  uint64_t v54 = v38;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v49;
  sub_100124F50();
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v39, v42);
}

uint64_t sub_100059C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10005EB8C(a1, a2, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
  uint64_t v3 = type metadata accessor for DetailWidgetView();
  uint64_t v4 = (uint64_t *)(a2 + *(int *)(v3 + 20));
  *uint64_t v4 = swift_getKeyPath();
  sub_10003A32C(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = a2 + *(int *)(v3 + 24);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v5 = result;
  *(void *)(v5 + 8) = 0;
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = 0;
  return result;
}

void sub_100059CD0()
{
  if (!qword_100160018)
  {
    sub_100123B70();
    type metadata accessor for DetailWidgetView();
    sub_100059E08(qword_10015E6A0, (void (*)(uint64_t))&type metadata accessor for SymbolWidgetConfigurationIntent);
    sub_100059E08(&qword_100160020, (void (*)(uint64_t))type metadata accessor for DetailWidgetView);
    unint64_t v0 = sub_100125950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160018);
    }
  }
}

uint64_t type metadata accessor for DetailWidgetView()
{
  uint64_t result = qword_1001600A8;
  if (!qword_1001600A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100059E08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100059E50()
{
  if (!qword_100160028)
  {
    sub_100059CD0();
    sub_100059E08(&qword_100160030, (void (*)(uint64_t))sub_100059CD0);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160028);
    }
  }
}

void sub_100059F04()
{
  if (!qword_100160038)
  {
    sub_100059E50();
    sub_100059CD0();
    sub_100059E08(&qword_100160030, (void (*)(uint64_t))sub_100059CD0);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160038);
    }
  }
}

void sub_100059FF0()
{
  if (!qword_100160040)
  {
    sub_100059F04();
    sub_100059E50();
    sub_100059CD0();
    sub_100059E08(&qword_100160030, (void (*)(uint64_t))sub_100059CD0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160040);
    }
  }
}

uint64_t sub_10005A110()
{
  return sub_100124D90();
}

void sub_10005A134(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10005A198@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100124DC0();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

void *sub_10005A1C8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001232B0();
    uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    uint64_t v77 = v7;
    ((void (*)(void *, void *))v76)(a1, a2);
    uint64_t v78 = (int *)type metadata accessor for DetailTimelineEntry();
    uint64_t v8 = v78[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    *(void *)uint64_t v9 = *(void *)((char *)a2 + v8);
    *((void *)v9 + 1) = v11;
    uint64_t v12 = *(void *)((char *)a2 + v8 + 24);
    *((void *)v9 + 2) = *(void *)((char *)a2 + v8 + 16);
    *((void *)v9 + 3) = v12;
    uint64_t v13 = *(void *)((char *)a2 + v8 + 40);
    *((void *)v9 + 4) = *(void *)((char *)a2 + v8 + 32);
    *((void *)v9 + 5) = v13;
    uint64_t v14 = (_OWORD *)((char *)a1 + v8 + 48);
    uint64_t v15 = (_OWORD *)((char *)a2 + v8 + 48);
    uint64_t v16 = *(void *)((char *)a2 + v8 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v79 = a3;
    uint64_t v80 = a2;
    if (v16 == 1)
    {
      long long v17 = *((_OWORD *)v10 + 4);
      _OWORD *v14 = *v15;
      *((_OWORD *)v9 + 4) = v17;
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      v9[56] = v10[56];
      *((void *)v9 + 8) = *((void *)v10 + 8);
      *((void *)v9 + 9) = v16;
      swift_bridgeObjectRetain();
    }
    *((void *)v9 + 10) = *((void *)v10 + 10);
    v9[88] = v10[88];
    uint64_t v19 = *((void *)v10 + 13);
    *((void *)v9 + 12) = *((void *)v10 + 12);
    *((void *)v9 + 13) = v19;
    *((void *)v9 + 14) = *((void *)v10 + 14);
    v9[120] = v10[120];
    *((void *)v9 + 16) = *((void *)v10 + 16);
    v9[136] = v10[136];
    v9[137] = v10[137];
    uint64_t v81 = (int *)type metadata accessor for DetailContentViewModel(0);
    uint64_t v20 = v81[9];
    char v21 = &v9[v20];
    char v22 = &v10[v20];
    uint64_t v23 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v24 = *((void *)v23 - 1);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, int *))(v24 + 48);
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      sub_10005A134(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *(void *)char v21 = *(void *)v22;
      uint64_t v27 = v23[5];
      char v28 = &v21[v27];
      uint64_t v29 = &v22[v27];
      uint64_t v75 = &v22[v27];
      swift_bridgeObjectRetain();
      v76(v28, v29, v77);
      sub_10002FE38();
      v76(&v28[*(int *)(v30 + 36)], &v75[*(int *)(v30 + 36)], v77);
      uint64_t v31 = v23[6];
      uint64_t v32 = &v21[v31];
      uint64_t v33 = &v22[v31];
      uint64_t v34 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      *(_OWORD *)&v21[v23[7]] = *(_OWORD *)&v22[v23[7]];
      uint64_t v35 = v23[8];
      unint64_t v36 = &v21[v35];
      uint64_t v37 = &v22[v35];
      *(void *)unint64_t v36 = *(void *)v37;
      v36[8] = v37[8];
      v21[v23[9]] = v22[v23[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
    }
    *(void *)&v9[v81[10]] = *(void *)&v10[v81[10]];
    uint64_t v38 = v81[11];
    uint64_t v39 = &v9[v38];
    uint64_t v40 = &v10[v38];
    sub_10005A9D8();
    uint64_t v42 = v41;
    uint64_t v43 = *(void *)(v41 - 8);
    uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    swift_bridgeObjectRetain();
    if (v44(v40, 1, v42))
    {
      sub_10005A134(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v39, v40, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v39, v40, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
    }
    uint64_t v46 = v81[12];
    uint64_t v47 = &v9[v46];
    uint64_t v48 = &v10[v46];
    uint64_t v49 = sub_100123150();
    uint64_t v50 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      sub_10005A134(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    uint64_t v52 = v78[6];
    uint64_t v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)v80 + v52;
    uint64_t v55 = sub_100123670();
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      sub_10005A134(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    uint64_t v58 = v78[7];
    uint64_t v59 = (char *)a1 + v58;
    uint64_t v60 = (char *)v80 + v58;
    uint64_t v61 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    *((unsigned char *)a1 + v78[8]) = *((unsigned char *)v80 + v78[8]);
    *((unsigned char *)a1 + v78[9]) = *((unsigned char *)v80 + v78[9]);
    uint64_t v62 = *(int *)(v79 + 20);
    uint64_t v63 = (void *)((char *)a1 + v62);
    uint64_t v64 = (void *)((char *)v80 + v62);
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v65 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
    }
    else
    {
      *uint64_t v63 = *v64;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = *(int *)(v79 + 24);
    uint64_t v67 = (char *)a1 + v66;
    uint64_t v68 = (char *)v80 + v66;
    uint64_t v69 = *(void *)v68;
    uint64_t v70 = *((void *)v68 + 1);
    uint64_t v71 = *((void *)v68 + 2);
    uint64_t v72 = *((void *)v68 + 3);
    char v73 = v68[32];
    sub_10004CE10(*(void *)v68, v70, v71, v72, v73);
    *(void *)uint64_t v67 = v69;
    *((void *)v67 + 1) = v70;
    *((void *)v67 + 2) = v71;
    *((void *)v67 + 3) = v72;
    v67[32] = v73;
  }
  return a1;
}

void sub_10005A9D8()
{
  if (!qword_10015E708)
  {
    sub_10002919C(255);
    sub_100059E08(&qword_10015E718, sub_10002919C);
    unint64_t v0 = sub_100124420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E708);
    }
  }
}

uint64_t sub_10005AA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001232B0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v7 = a1 + v6[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v9 = v7 + v8[9];
  uint64_t v10 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = v6;
    uint64_t v11 = a2;
    uint64_t v12 = v9 + *(int *)(v10 + 20);
    v5(v12, v4);
    sub_10002FE38();
    uint64_t v14 = v12 + *(int *)(v13 + 36);
    a2 = v11;
    uint64_t v6 = v38;
    v5(v14, v4);
    uint64_t v15 = v9 + *(int *)(v10 + 24);
    uint64_t v16 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v7 + v8[11];
  sub_10005A9D8();
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }
  uint64_t v21 = v7 + v8[12];
  uint64_t v22 = sub_100123150();
  uint64_t v23 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  uint64_t v24 = a1 + v6[6];
  uint64_t v25 = sub_100123670();
  uint64_t v26 = *(void *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  uint64_t v27 = a1 + v6[7];
  uint64_t v28 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = a1 + *(int *)(a2 + 20);
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = sub_1001258F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  }
  else
  {
    swift_release();
  }
  uint64_t v31 = a1 + *(int *)(a2 + 24);
  uint64_t v32 = *(void *)v31;
  uint64_t v33 = *(void *)(v31 + 8);
  uint64_t v34 = *(void *)(v31 + 16);
  uint64_t v35 = *(void *)(v31 + 24);
  char v36 = *(unsigned char *)(v31 + 32);

  return sub_100037598(v32, v33, v34, v35, v36);
}

uint64_t sub_10005AE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1001232B0();
  uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v72(a1, a2, v5);
  uint64_t v74 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v6 = v74[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  *(void *)(v7 + 8) = v9;
  uint64_t v10 = *(void *)(a2 + v6 + 24);
  *(void *)(v7 + 16) = *(void *)(a2 + v6 + 16);
  *(void *)(v7 + 24) = v10;
  uint64_t v11 = *(void *)(a2 + v6 + 40);
  *(void *)(v7 + 32) = *(void *)(a2 + v6 + 32);
  *(void *)(v7 + 40) = v11;
  uint64_t v12 = (_OWORD *)(a1 + v6 + 48);
  uint64_t v13 = (_OWORD *)(a2 + v6 + 48);
  uint64_t v14 = *(void *)(a2 + v6 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v76 = a2;
  uint64_t v77 = a1;
  if (v14 == 1)
  {
    long long v15 = *(_OWORD *)(v8 + 64);
    *uint64_t v12 = *v13;
    *(_OWORD *)(v7 + 64) = v15;
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    *(unsigned char *)(v7 + 56) = *(unsigned char *)(v8 + 56);
    *(void *)(v7 + 64) = *(void *)(v8 + 64);
    *(void *)(v7 + 72) = v14;
    swift_bridgeObjectRetain();
  }
  *(void *)(v7 + 80) = *(void *)(v8 + 80);
  *(unsigned char *)(v7 + 88) = *(unsigned char *)(v8 + 88);
  uint64_t v16 = *(void *)(v8 + 104);
  *(void *)(v7 + 96) = *(void *)(v8 + 96);
  *(void *)(v7 + 104) = v16;
  *(void *)(v7 + 112) = *(void *)(v8 + 112);
  *(unsigned char *)(v7 + 120) = *(unsigned char *)(v8 + 120);
  *(void *)(v7 + 128) = *(void *)(v8 + 128);
  *(unsigned char *)(v7 + 136) = *(unsigned char *)(v8 + 136);
  *(unsigned char *)(v7 + 137) = *(unsigned char *)(v8 + 137);
  char v73 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v17 = v73[9];
  uint64_t v18 = (void *)(v7 + v17);
  uint64_t v19 = (void *)(v8 + v17);
  uint64_t v20 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(unsigned int (**)(void *, uint64_t, int *))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    sub_10005A134(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    uint64_t v24 = v20[5];
    uint64_t v25 = (char *)v18 + v24;
    uint64_t v26 = (char *)v19 + v24;
    swift_bridgeObjectRetain();
    v72((uint64_t)v25, (uint64_t)v26, v5);
    sub_10002FE38();
    v72((uint64_t)&v25[*(int *)(v27 + 36)], (uint64_t)&v26[*(int *)(v27 + 36)], v5);
    uint64_t v28 = v20[6];
    uint64_t v29 = (char *)v18 + v28;
    uint64_t v30 = (char *)v19 + v28;
    uint64_t v31 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
    uint64_t v32 = v20[8];
    uint64_t v33 = (char *)v18 + v32;
    uint64_t v34 = (char *)v19 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  }
  *(void *)(v7 + v73[10]) = *(void *)(v8 + v73[10]);
  uint64_t v35 = v73[11];
  char v36 = (void *)(v7 + v35);
  uint64_t v37 = (const void *)(v8 + v35);
  sub_10005A9D8();
  uint64_t v39 = v38;
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48);
  swift_bridgeObjectRetain();
  if (v41(v37, 1, v39))
  {
    sub_10005A134(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v36, v37, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v40 + 16))(v36, v37, v39);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v39);
  }
  uint64_t v43 = v73[12];
  uint64_t v44 = (void *)(v7 + v43);
  uint64_t v45 = (const void *)(v8 + v43);
  uint64_t v46 = sub_100123150();
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    sub_10005A134(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v44, v45, v46);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  uint64_t v49 = v74[6];
  uint64_t v50 = (void *)(v77 + v49);
  uint64_t v51 = (const void *)(v76 + v49);
  uint64_t v52 = sub_100123670();
  uint64_t v53 = *(void *)(v52 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    sub_10005A134(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  uint64_t v55 = v74[7];
  uint64_t v56 = v77 + v55;
  uint64_t v57 = v76 + v55;
  uint64_t v58 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  *(unsigned char *)(v77 + v74[8]) = *(unsigned char *)(v76 + v74[8]);
  *(unsigned char *)(v77 + v74[9]) = *(unsigned char *)(v76 + v74[9]);
  uint64_t v59 = *(int *)(a3 + 20);
  uint64_t v60 = (void *)(v77 + v59);
  uint64_t v61 = (void *)(v76 + v59);
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v62 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
  }
  else
  {
    *uint64_t v60 = *v61;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = *(int *)(a3 + 24);
  uint64_t v64 = v77 + v63;
  uint64_t v65 = v76 + v63;
  uint64_t v66 = *(void *)v65;
  uint64_t v67 = *(void *)(v65 + 8);
  uint64_t v68 = *(void *)(v65 + 16);
  uint64_t v69 = *(void *)(v65 + 24);
  char v70 = *(unsigned char *)(v65 + 32);
  sub_10004CE10(*(void *)v65, v67, v68, v69, v70);
  *(void *)uint64_t v64 = v66;
  *(void *)(v64 + 8) = v67;
  *(void *)(v64 + 16) = v68;
  *(void *)(v64 + 24) = v69;
  *(unsigned char *)(v64 + 32) = v70;
  return v77;
}

uint64_t sub_10005B64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1001232B0();
  uint64_t v110 = *(void *)(v5 - 8);
  uint64_t v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 24);
  v108(a1, a2, v5);
  uint64_t v6 = type metadata accessor for DetailTimelineEntry();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (_OWORD *)(v8 + 48);
  uint64_t v11 = (_OWORD *)(v9 + 48);
  uint64_t v12 = *(void *)(v9 + 72);
  uint64_t v113 = a2;
  uint64_t v114 = a1;
  char v111 = (int *)v6;
  if (*(void *)(v8 + 72) == 1)
  {
    if (v12 == 1)
    {
      long long v13 = *(_OWORD *)(v9 + 64);
      *uint64_t v10 = *v11;
      *(_OWORD *)(v8 + 64) = v13;
    }
    else
    {
      uint64_t v15 = *(void *)v11;
      *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
      *(void *)uint64_t v10 = v15;
      *(void *)(v8 + 64) = *(void *)(v9 + 64);
      *(void *)(v8 + 72) = *(void *)(v9 + 72);
      swift_bridgeObjectRetain();
    }
  }
  else if (v12 == 1)
  {
    sub_10003088C(v8 + 48);
    long long v14 = *(_OWORD *)(v9 + 64);
    *uint64_t v10 = *v11;
    *(_OWORD *)(v8 + 64) = v14;
  }
  else
  {
    uint64_t v16 = *(void *)v11;
    *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
    *(void *)uint64_t v10 = v16;
    *(void *)(v8 + 64) = *(void *)(v9 + 64);
    *(void *)(v8 + 72) = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(void *)(v9 + 80);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(v9 + 88);
  *(void *)(v8 + 80) = v17;
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v9 + 112);
  *(unsigned char *)(v8 + 120) = *(unsigned char *)(v9 + 120);
  *(void *)(v8 + 112) = v18;
  uint64_t v19 = *(void *)(v9 + 128);
  *(unsigned char *)(v8 + 136) = *(unsigned char *)(v9 + 136);
  *(void *)(v8 + 128) = v19;
  *(unsigned char *)(v8 + 137) = *(unsigned char *)(v9 + 137);
  uint64_t v115 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v20 = v115[9];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = (void *)(v9 + v20);
  uint64_t v23 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v24 = *((void *)v23 - 1);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      void *v21 = *v22;
      uint64_t v28 = v23[5];
      uint64_t v29 = (char *)v21 + v28;
      long long v107 = (char *)v22 + v28;
      uint64_t v109 = (char *)v21 + v28;
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      swift_bridgeObjectRetain();
      v30(v29, v107, v5);
      sub_10002FE38();
      v30(&v109[*(int *)(v31 + 36)], &v107[*(int *)(v31 + 36)], v5);
      uint64_t v32 = v23[6];
      uint64_t v33 = (char *)v21 + v32;
      uint64_t v34 = (char *)v22 + v32;
      uint64_t v35 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      *(_OWORD *)((char *)v21 + v23[7]) = *(_OWORD *)((char *)v22 + v23[7]);
      uint64_t v36 = v23[8];
      uint64_t v37 = (char *)v21 + v36;
      uint64_t v38 = (char *)v22 + v36;
      char v39 = v38[8];
      *(void *)uint64_t v37 = *(void *)v38;
      v37[8] = v39;
      *((unsigned char *)v21 + v23[9]) = *((unsigned char *)v22 + v23[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v27)
  {
    sub_10005C16C((uint64_t)v21, type metadata accessor for PreparedSparkline);
LABEL_13:
    sub_10005A134(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v21, v22, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_14;
  }
  void *v21 = *v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v92 = v23[5];
  uint64_t v93 = (char *)v21 + v92;
  uint64_t v94 = (char *)v22 + v92;
  v108((uint64_t)v21 + v92, (uint64_t)v22 + v92, v5);
  sub_10002FE38();
  v108((uint64_t)&v93[*(int *)(v95 + 36)], (uint64_t)&v94[*(int *)(v95 + 36)], v5);
  uint64_t v96 = v23[6];
  uint64_t v97 = (char *)v21 + v96;
  char v98 = (char *)v22 + v96;
  uint64_t v99 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 24))(v97, v98, v99);
  uint64_t v100 = v23[7];
  uint64_t v101 = (void *)((char *)v21 + v100);
  uint64_t v102 = (void *)((char *)v22 + v100);
  *uint64_t v101 = *v102;
  v101[1] = v102[1];
  uint64_t v103 = v23[8];
  uint64_t v104 = (char *)v21 + v103;
  uint64_t v105 = (char *)v22 + v103;
  char v106 = v105[8];
  *(void *)uint64_t v104 = *(void *)v105;
  v104[8] = v106;
  *((unsigned char *)v21 + v23[9]) = *((unsigned char *)v22 + v23[9]);
LABEL_14:
  *(void *)(v8 + v115[10]) = *(void *)(v9 + v115[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v115[11];
  uint64_t v42 = (void *)(v8 + v41);
  uint64_t v43 = (void *)(v9 + v41);
  sub_10005A9D8();
  uint64_t v45 = v44;
  uint64_t v46 = *(void *)(v44 - 8);
  uint64_t v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  int v48 = v47(v42, 1, v44);
  int v49 = v47(v43, 1, v45);
  if (v48)
  {
    uint64_t v50 = v113;
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v42, v43, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v42, 0, 1, v45);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  uint64_t v50 = v113;
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v42, v45);
LABEL_19:
    sub_10005A134(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v42, v43, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v42, v43, v45);
LABEL_20:
  uint64_t v52 = v115[12];
  uint64_t v53 = (void *)(v8 + v52);
  uint64_t v54 = (void *)(v9 + v52);
  uint64_t v55 = sub_100123150();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v56 + 48);
  int v58 = v57(v53, 1, v55);
  int v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v56 + 8))(v53, v55);
LABEL_25:
    sub_10005A134(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v53, v54, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v56 + 24))(v53, v54, v55);
LABEL_26:
  uint64_t v61 = v111[6];
  uint64_t v62 = (void *)(v114 + v61);
  uint64_t v63 = (void *)(v50 + v61);
  uint64_t v64 = sub_100123670();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v65 + 48);
  int v67 = v66(v62, 1, v64);
  int v68 = v66(v63, 1, v64);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v68)
  {
    (*(void (**)(void *, uint64_t))(v65 + 8))(v62, v64);
LABEL_31:
    sub_10005A134(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v62, v63, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v65 + 24))(v62, v63, v64);
LABEL_32:
  uint64_t v70 = v111[7];
  uint64_t v71 = v114 + v70;
  uint64_t v72 = v50 + v70;
  uint64_t v73 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  *(unsigned char *)(v114 + v111[8]) = *(unsigned char *)(v50 + v111[8]);
  *(unsigned char *)(v114 + v111[9]) = *(unsigned char *)(v50 + v111[9]);
  if (v114 != v50)
  {
    uint64_t v74 = *(int *)(a3 + 20);
    uint64_t v75 = (void *)(v114 + v74);
    uint64_t v76 = (void *)(v50 + v74);
    sub_10005C16C(v114 + v74, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v77 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
    }
    else
    {
      void *v75 = *v76;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v78 = *(int *)(a3 + 24);
  uint64_t v79 = v114 + v78;
  uint64_t v80 = v50 + v78;
  uint64_t v81 = *(void *)v80;
  uint64_t v82 = *(void *)(v80 + 8);
  uint64_t v83 = *(void *)(v80 + 16);
  uint64_t v84 = *(void *)(v80 + 24);
  char v85 = *(unsigned char *)(v80 + 32);
  sub_10004CE10(*(void *)v80, v82, v83, v84, v85);
  uint64_t v86 = *(void *)v79;
  uint64_t v87 = *(void *)(v79 + 8);
  uint64_t v88 = *(void *)(v79 + 16);
  uint64_t v89 = *(void *)(v79 + 24);
  char v90 = *(unsigned char *)(v79 + 32);
  *(void *)uint64_t v79 = v81;
  *(void *)(v79 + 8) = v82;
  *(void *)(v79 + 16) = v83;
  *(void *)(v79 + 24) = v84;
  *(unsigned char *)(v79 + 32) = v85;
  sub_100037598(v86, v87, v88, v89, v90);
  return v114;
}

uint64_t sub_10005C16C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10005C1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1001232B0();
  uint64_t v6 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  uint64_t v72 = *v6;
  (*v6)(a1, a2, v5);
  uint64_t v7 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v75 = a2;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(a2 + v8 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(v9 + 16) = v11;
  long long v12 = *(_OWORD *)(a2 + v8 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(a2 + v8 + 32);
  *(_OWORD *)(v9 + 48) = v12;
  long long v13 = *(_OWORD *)(a2 + v8 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(a2 + v8 + 64);
  *(_OWORD *)(v9 + 80) = v13;
  *(_OWORD *)(v9 + 121) = *(_OWORD *)(a2 + v8 + 121);
  long long v14 = *(_OWORD *)(a2 + v8 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a2 + v8 + 96);
  *(_OWORD *)(v9 + 112) = v14;
  *(unsigned char *)(v9 + 137) = *(unsigned char *)(a2 + v8 + 137);
  uint64_t v73 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v15 = v73[9];
  uint64_t v16 = (void *)(v9 + v15);
  uint64_t v17 = (void *)(v10 + v15);
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    sub_10005A134(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    uint64_t v21 = v18[5];
    uint64_t v70 = v7;
    uint64_t v71 = a1;
    uint64_t v22 = (char *)v16 + v21;
    uint64_t v23 = (char *)v17 + v21;
    v72((uint64_t)v16 + v21, (uint64_t)v17 + v21, v5);
    sub_10002FE38();
    uint64_t v25 = *(int *)(v24 + 36);
    int v26 = &v22[v25];
    a1 = v71;
    v72((uint64_t)v26, (uint64_t)&v23[v25], v5);
    uint64_t v27 = v18[6];
    uint64_t v28 = (char *)v16 + v27;
    uint64_t v29 = (char *)v17 + v27;
    uint64_t v30 = sub_1001234F0();
    uint64_t v31 = v28;
    uint64_t v7 = v70;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v31, v29, v30);
    *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
    uint64_t v32 = v18[8];
    uint64_t v33 = (char *)v16 + v32;
    uint64_t v34 = (char *)v17 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  *(void *)(v9 + v73[10]) = *(void *)(v10 + v73[10]);
  uint64_t v35 = v73[11];
  uint64_t v36 = (void *)(v9 + v35);
  uint64_t v37 = (const void *)(v10 + v35);
  sub_10005A9D8();
  uint64_t v39 = v38;
  uint64_t v40 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v37, 1, v38))
  {
    sub_10005A134(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v40 + 32))(v36, v37, v39);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v39);
  }
  uint64_t v42 = v73[12];
  uint64_t v43 = (void *)(v9 + v42);
  uint64_t v44 = (const void *)(v10 + v42);
  uint64_t v45 = sub_100123150();
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    sub_10005A134(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  uint64_t v48 = v7[6];
  int v49 = (void *)(a1 + v48);
  uint64_t v50 = (const void *)(v75 + v48);
  uint64_t v51 = sub_100123670();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    sub_10005A134(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v52 + 32))(v49, v50, v51);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  uint64_t v54 = v7[7];
  uint64_t v55 = v7;
  uint64_t v56 = a1 + v54;
  uint64_t v57 = v75 + v54;
  uint64_t v58 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  *(unsigned char *)(a1 + v55[8]) = *(unsigned char *)(v75 + v55[8]);
  *(unsigned char *)(a1 + v55[9]) = *(unsigned char *)(v75 + v55[9]);
  uint64_t v59 = *(int *)(a3 + 20);
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (const void *)(v75 + v59);
  sub_10003A32C(0);
  uint64_t v63 = v62;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v64 = sub_1001258F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v64 - 8) + 32))(v60, v61, v64);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
  }
  uint64_t v65 = *(int *)(a3 + 24);
  uint64_t v66 = a1 + v65;
  uint64_t v67 = v75 + v65;
  long long v68 = *(_OWORD *)(v67 + 16);
  *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
  *(_OWORD *)(v66 + 16) = v68;
  *(unsigned char *)(v66 + 32) = *(unsigned char *)(v67 + 32);
  return a1;
}

uint64_t sub_10005C8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1001232B0();
  uint64_t v101 = *(void *)(v5 - 8);
  uint64_t v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 40);
  v100(a1, a2, v5);
  uint64_t v6 = type metadata accessor for DetailTimelineEntry();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v12;
  swift_bridgeObjectRelease();
  long long v13 = (_OWORD *)(v8 + 48);
  long long v14 = (_OWORD *)(v9 + 48);
  uint64_t v104 = a2;
  uint64_t v105 = a1;
  uint64_t v102 = (int *)v6;
  if (*(void *)(v8 + 72) == 1) {
    goto LABEL_4;
  }
  uint64_t v15 = *(void *)(v9 + 72);
  if (v15 == 1)
  {
    sub_10003088C(v8 + 48);
LABEL_4:
    long long v16 = *(_OWORD *)(v9 + 64);
    *long long v13 = *v14;
    *(_OWORD *)(v8 + 64) = v16;
    goto LABEL_6;
  }
  *(void *)long long v13 = *(void *)v14;
  *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(v9 + 88);
  uint64_t v17 = *(void *)(v9 + 104);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = v17;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 112) = *(void *)(v9 + 112);
  *(unsigned char *)(v8 + 120) = *(unsigned char *)(v9 + 120);
  *(void *)(v8 + 128) = *(void *)(v9 + 128);
  *(_WORD *)(v8 + 136) = *(_WORD *)(v9 + 136);
  char v106 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v18 = v106[9];
  uint64_t v19 = (char *)(v8 + v18);
  uint64_t v20 = (char *)(v9 + v18);
  uint64_t v21 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      uint64_t v26 = v21[5];
      uint64_t v27 = &v19[v26];
      uint64_t v28 = &v20[v26];
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
      v29(&v19[v26], &v20[v26], v5);
      sub_10002FE38();
      v29(&v27[*(int *)(v30 + 36)], &v28[*(int *)(v30 + 36)], v5);
      uint64_t v31 = v21[6];
      uint64_t v32 = &v19[v31];
      uint64_t v33 = &v20[v31];
      uint64_t v34 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      *(_OWORD *)&v19[v21[7]] = *(_OWORD *)&v20[v21[7]];
      uint64_t v35 = v21[8];
      uint64_t v36 = &v19[v35];
      uint64_t v37 = &v20[v35];
      *(void *)uint64_t v36 = *(void *)v37;
      v36[8] = v37[8];
      v19[v21[9]] = v20[v21[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v25)
  {
    sub_10005C16C((uint64_t)v19, type metadata accessor for PreparedSparkline);
LABEL_11:
    sub_10005A134(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v19, v20, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_12;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  swift_bridgeObjectRelease();
  uint64_t v89 = v21[5];
  char v90 = &v19[v89];
  uint64_t v91 = &v20[v89];
  v100((uint64_t)&v19[v89], (uint64_t)&v20[v89], v5);
  sub_10002FE38();
  v100((uint64_t)&v90[*(int *)(v92 + 36)], (uint64_t)&v91[*(int *)(v92 + 36)], v5);
  uint64_t v93 = v21[6];
  uint64_t v94 = &v19[v93];
  uint64_t v95 = &v20[v93];
  uint64_t v96 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  *(_OWORD *)&v19[v21[7]] = *(_OWORD *)&v20[v21[7]];
  uint64_t v97 = v21[8];
  char v98 = &v19[v97];
  uint64_t v99 = &v20[v97];
  v98[8] = v99[8];
  *(void *)char v98 = *(void *)v99;
  v19[v21[9]] = v20[v21[9]];
LABEL_12:
  *(void *)(v8 + v106[10]) = *(void *)(v9 + v106[10]);
  swift_bridgeObjectRelease();
  uint64_t v39 = v106[11];
  uint64_t v40 = (void *)(v8 + v39);
  uint64_t v41 = (void *)(v9 + v39);
  sub_10005A9D8();
  uint64_t v43 = v42;
  uint64_t v44 = *(void *)(v42 - 8);
  uint64_t v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  int v46 = v45(v40, 1, v42);
  int v47 = v45(v41, 1, v43);
  if (v46)
  {
    uint64_t v48 = v104;
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 32))(v40, v41, v43);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v40, 0, 1, v43);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v48 = v104;
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v44 + 8))(v40, v43);
LABEL_17:
    sub_10005A134(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v40, v41, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v44 + 40))(v40, v41, v43);
LABEL_18:
  uint64_t v50 = v106[12];
  uint64_t v51 = (void *)(v8 + v50);
  uint64_t v52 = (void *)(v9 + v50);
  uint64_t v53 = sub_100123150();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
  int v56 = v55(v51, 1, v53);
  int v57 = v55(v52, 1, v53);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, void *, uint64_t))(v54 + 32))(v51, v52, v53);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v57)
  {
    (*(void (**)(void *, uint64_t))(v54 + 8))(v51, v53);
LABEL_23:
    sub_10005A134(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v51, v52, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v54 + 40))(v51, v52, v53);
LABEL_24:
  uint64_t v59 = v102[6];
  uint64_t v60 = (void *)(v105 + v59);
  uint64_t v61 = (void *)(v48 + v59);
  uint64_t v62 = sub_100123670();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v60, v61, v62);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v66)
  {
    (*(void (**)(void *, uint64_t))(v63 + 8))(v60, v62);
LABEL_29:
    sub_10005A134(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v60, v61, v62);
LABEL_30:
  uint64_t v68 = v102[7];
  uint64_t v69 = v105 + v68;
  uint64_t v70 = v48 + v68;
  uint64_t v71 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 40))(v69, v70, v71);
  *(unsigned char *)(v105 + v102[8]) = *(unsigned char *)(v48 + v102[8]);
  *(unsigned char *)(v105 + v102[9]) = *(unsigned char *)(v48 + v102[9]);
  if (v105 != v48)
  {
    uint64_t v72 = *(int *)(a3 + 20);
    uint64_t v73 = (void *)(v105 + v72);
    uint64_t v74 = (const void *)(v48 + v72);
    sub_10005C16C(v105 + v72, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    uint64_t v76 = v75;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v77 = sub_1001258F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v77 - 8) + 32))(v73, v74, v77);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
    }
  }
  uint64_t v78 = *(int *)(a3 + 24);
  uint64_t v79 = v105 + v78;
  uint64_t v80 = v48 + v78;
  char v81 = *(unsigned char *)(v80 + 32);
  uint64_t v82 = *(void *)v79;
  uint64_t v83 = *(void *)(v79 + 8);
  uint64_t v84 = *(void *)(v79 + 16);
  uint64_t v85 = *(void *)(v79 + 24);
  char v86 = *(unsigned char *)(v79 + 32);
  long long v87 = *(_OWORD *)(v80 + 16);
  *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
  *(_OWORD *)(v79 + 16) = v87;
  *(unsigned char *)(v79 + 32) = v81;
  sub_100037598(v82, v83, v84, v85, v86);
  return v105;
}

uint64_t sub_10005D338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005D34C);
}

uint64_t sub_10005D34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailTimelineEntry();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    sub_10005A134(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 32);
      if (v14 > 1) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_10005D490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005D4A4);
}

void sub_10005D4A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DetailTimelineEntry();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_10005A134(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24) + 32) = -(char)a2;
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

void sub_10005D5E8()
{
  type metadata accessor for DetailTimelineEntry();
  if (v0 <= 0x3F)
  {
    sub_10003A32C(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10005D6B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005D7D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005D7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v72 = sub_100124B70();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  char v81 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for DetailContentViewModel(0);
  __chkstk_darwin(v70);
  uint64_t v78 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for DetailContentView(0);
  __chkstk_darwin(v79);
  uint64_t v80 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005E9E4();
  uint64_t v76 = v6;
  uint64_t v75 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v74 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005E960();
  uint64_t v86 = v8;
  __chkstk_darwin(v8);
  uint64_t v73 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v77 = (uint64_t)&v67 - v11;
  sub_10005EAE0(0, &qword_100160130, (uint64_t (*)(uint64_t))sub_10005E8AC, (uint64_t (*)(uint64_t))sub_10005E960, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v83 = v12;
  __chkstk_darwin(v12);
  uint64_t v85 = (uint64_t)&v67 - v13;
  uint64_t v88 = type metadata accessor for DetailTimelineEntry();
  __chkstk_darwin(v88);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for DetailComplicationContentView();
  __chkstk_darwin(v82);
  uint64_t v17 = (uint64_t *)((char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v67 - v19;
  sub_10005E8AC();
  uint64_t v84 = v21;
  uint64_t v69 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v68 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  int v25 = (char *)&v67 - v24;
  uint64_t v26 = sub_1001258F0();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v67 - v31;
  uint64_t v67 = type metadata accessor for DetailWidgetView();
  uint64_t v33 = a1;
  sub_10005EEE4((uint64_t)v32);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v29, v32, v26);
  int v34 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v29, v26);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v27 + 8);
  if (v34 == enum case for WidgetFamily.accessoryCircular(_:)
    || v34 == enum case for WidgetFamily.accessoryRectangular(_:)
    || v34 == enum case for WidgetFamily.accessoryInline(_:))
  {
    v35(v32, v26);
    sub_10005EB8C(v33, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
    if (qword_10015D5E8 != -1) {
      swift_once();
    }
    sub_100029758((uint64_t)&unk_100172748, (uint64_t)v94);
    sub_100009D98(v94, v95);
    sub_100037604();
    uint64_t result = sub_100124100();
    if (*((void *)&v92 + 1))
    {
      *uint64_t v17 = swift_getKeyPath();
      sub_10003A32C(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v82;
      uint64_t v45 = (uint64_t *)((char *)v17 + *(int *)(v82 + 20));
      *uint64_t v45 = swift_getKeyPath();
      sub_10005F8EC(0);
      swift_storeEnumTagMultiPayload();
      sub_10005F1A8((uint64_t)v15, (uint64_t)v17 + *(int *)(v44 + 24), (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
      sub_100029474(&v91, (uint64_t)v17 + *(int *)(v44 + 28));
      sub_10005F1A8((uint64_t)v17, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DetailComplicationContentView);
      sub_100009D48((uint64_t)v94);
      uint64_t v46 = sub_100059E08(&qword_100160100, (void (*)(uint64_t))type metadata accessor for DetailComplicationContentView);
      int v47 = v68;
      sub_1001253E0();
      sub_10005C16C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DetailComplicationContentView);
      uint64_t v48 = v69;
      uint64_t v49 = v47;
      uint64_t v50 = v84;
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v25, v49, v84);
      (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v85, v25, v50);
      swift_storeEnumTagMultiPayload();
      v94[0] = v44;
      v94[1] = v46;
      swift_getOpaqueTypeConformance2();
      sub_10005F7A0();
      sub_100124F80();
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v25, v50);
    }
    goto LABEL_16;
  }
  v35(v29, v26);
  v35(v32, v26);
  uint64_t v36 = v88;
  uint64_t v37 = v33;
  uint64_t v38 = v78;
  sub_10005EB8C(v33 + *(int *)(v88 + 20), v78, type metadata accessor for DetailContentViewModel);
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, (uint64_t)v94);
  sub_100009D98(v94, v95);
  sub_100037604();
  uint64_t result = sub_100124100();
  uint64_t v40 = v81;
  uint64_t v41 = (uint64_t)v80;
  uint64_t v42 = v79;
  if (!*((void *)&v92 + 1))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  *(void *)(v41 + *(int *)(v42 + 24)) = swift_getKeyPath();
  sub_10003A32C(0);
  swift_storeEnumTagMultiPayload();
  sub_10005F1A8(v38, v41, type metadata accessor for DetailContentViewModel);
  sub_100029474(&v91, v41 + *(int *)(v42 + 20));
  sub_100009D48((uint64_t)v94);
  uint64_t v43 = v72;
  if (*(unsigned char *)(v37 + *(int *)(v36 + 32)) == 1)
  {
    sub_100124B60();
  }
  else
  {
    v94[0] = _swiftEmptyArrayStorage;
    sub_100059E08(&qword_10015F100, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_10005F210(0);
    sub_100059E08((unint64_t *)&qword_10015F110, sub_10005F210);
    sub_100126090();
  }
  uint64_t v51 = v71;
  uint64_t v52 = v67;
  sub_100059E08(&qword_100160118, (void (*)(uint64_t))type metadata accessor for DetailContentView);
  uint64_t v53 = v74;
  sub_1001254D0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v40, v43);
  sub_10005C16C(v41, type metadata accessor for DetailContentView);
  uint64_t v54 = v37 + *(int *)(v52 + 24);
  char v93 = *(unsigned char *)(v54 + 32);
  long long v55 = *(_OWORD *)(v54 + 16);
  long long v91 = *(_OWORD *)v54;
  long long v92 = v55;
  sub_100051B2C((uint64_t)&v91, (uint64_t)v94);
  sub_100051C00((uint64_t)v94, (void (*)(void, void, void, void, void))sub_10004CE10);
  double v56 = sub_10005F554();
  sub_100051C00((uint64_t)&v91, (void (*)(void, void, void, void, void))sub_100037598);
  sub_100051C00((uint64_t)v94, (void (*)(void, void, void, void, void))sub_10004CE10);
  sub_10005F554();
  uint64_t v58 = v57;
  sub_100051C00((uint64_t)&v91, (void (*)(void, void, void, void, void))sub_100037598);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v60 = swift_allocObject();
  *(double *)(v60 + 16) = v56;
  *(unsigned char *)(v60 + 24) = 0;
  *(void *)(v60 + 32) = v58;
  *(unsigned char *)(v60 + 40) = 0;
  uint64_t v61 = v75;
  uint64_t v62 = (uint64_t)v73;
  uint64_t v63 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v73, v53, v76);
  uint64_t v64 = (uint64_t *)(v62 + *(int *)(v86 + 36));
  *uint64_t v64 = KeyPath;
  v64[1] = (uint64_t)sub_10003275C;
  v64[2] = v60;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v53, v63);
  uint64_t v65 = v77;
  sub_10005F1A8(v62, v77, (uint64_t (*)(void))sub_10005E960);
  sub_10005EB8C(v65, v85, (uint64_t (*)(void))sub_10005E960);
  swift_storeEnumTagMultiPayload();
  uint64_t v66 = sub_100059E08(&qword_100160100, (void (*)(uint64_t))type metadata accessor for DetailComplicationContentView);
  uint64_t v89 = v82;
  uint64_t v90 = v66;
  swift_getOpaqueTypeConformance2();
  sub_10005F7A0();
  sub_100124F80();
  return sub_10005C16C(v65, (uint64_t (*)(void))sub_10005E960);
}

uint64_t sub_10005E558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1001248B0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005E810();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005EA98(0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005D7F4(v1, (uint64_t)v9);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ColorScheme.dark(_:), v3);
  uint64_t v15 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  sub_10003C8EC(0);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v15 + *(int *)(v16 + 28), v6, v3);
  *uint64_t v15 = KeyPath;
  sub_10005EB8C((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_10005E810);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_10005C16C((uint64_t)v9, (uint64_t (*)(void))sub_10005E810);
  uint64_t v17 = v1 + *(int *)(type metadata accessor for DetailTimelineEntry() + 28);
  uint64_t v18 = swift_getKeyPath();
  sub_10005EC98(0);
  uint64_t v20 = (uint64_t *)(a1 + *(int *)(v19 + 36));
  sub_10003C850(0);
  uint64_t v22 = (char *)v20 + *(int *)(v21 + 28);
  uint64_t v23 = sub_1001238A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v17, v23);
  *uint64_t v20 = v18;
  return sub_10005F1A8((uint64_t)v13, a1, (uint64_t (*)(void))sub_10005EA98);
}

void sub_10005E810()
{
  if (!qword_1001600E8)
  {
    sub_10005EAE0(255, &qword_1001600F0, (uint64_t (*)(uint64_t))sub_10005E8AC, (uint64_t (*)(uint64_t))sub_10005E960, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v0 = sub_100125580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001600E8);
    }
  }
}

void sub_10005E8AC()
{
  if (!qword_1001600F8)
  {
    type metadata accessor for DetailComplicationContentView();
    sub_100059E08(&qword_100160100, (void (*)(uint64_t))type metadata accessor for DetailComplicationContentView);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001600F8);
    }
  }
}

void sub_10005E960()
{
  if (!qword_100160108)
  {
    sub_10005E9E4();
    sub_10005F244(255, (unint64_t *)&qword_10015EC20, (uint64_t (*)(void, void *))&type metadata accessor for _EnvironmentKeyTransformModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160108);
    }
  }
}

void sub_10005E9E4()
{
  if (!qword_100160110)
  {
    type metadata accessor for DetailContentView(255);
    sub_100059E08(&qword_100160118, (void (*)(uint64_t))type metadata accessor for DetailContentView);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160110);
    }
  }
}

void sub_10005EA98(uint64_t a1)
{
}

void sub_10005EAE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_10005EB64()
{
  return sub_100124C20();
}

uint64_t sub_10005EB8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

double sub_10005EBF4@<D0>(_OWORD *a1@<X8>)
{
  sub_10005F920();
  sub_100124E10();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_10005EC44()
{
  return sub_100124E20();
}

void sub_10005EC98(uint64_t a1)
{
}

uint64_t sub_10005ECE0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100124E00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_100125F50();
  uint64_t v9 = sub_1001250D0();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 136315138;
    uint64_t v13 = sub_1000AB124(1819242306, 0xE400000000000000, &v14);
    sub_100126030();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100124DF0();
  swift_getAtKeyPath();
  sub_100032D54(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_10005EEE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100124E00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003A32C(0);
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005EB8C(v2, (uint64_t)v10, (uint64_t (*)(void))sub_10003A32C);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1001258F0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_100125F50();
    uint64_t v14 = sub_1001250D0();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v18[1] = a1;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v18[2] = sub_1000AB124(0x6146746567646957, 0xEC000000796C696DLL, &v19);
      sub_100126030();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100124DF0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_10005F1A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_10005F210(uint64_t a1)
{
}

void sub_10005F244(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for EdgeInsets);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10005F294@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100124E00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100060928(0);
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005EB8C(v2, (uint64_t)v10, (uint64_t (*)(void))sub_100060928);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1001258C0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_100125F50();
    uint64_t v14 = sub_1001250D0();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v18[1] = a1;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v18[2] = sub_1000AB124(0xD000000000000013, 0x80000001001317B0, &v19);
      sub_100126030();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100124DF0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

double sub_10005F554()
{
  uint64_t v1 = sub_100124E00();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1) {
    return *(double *)v0;
  }
  swift_retain();
  os_log_type_t v6 = sub_100125F50();
  uint64_t v7 = sub_1001250D0();
  os_log_type_t v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v10[0] = v9 + 4;
    v10[1] = sub_1000AB124(0x65736E4965676445, 0xEA00000000007374, &v11);
    sub_100126030();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100124DF0();
  swift_getAtKeyPath();
  sub_100051C00((uint64_t)v0, (void (*)(void, void, void, void, void))sub_100037598);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return *(double *)&v11;
}

uint64_t sub_10005F790()
{
  return swift_deallocObject();
}

unint64_t sub_10005F7A0()
{
  unint64_t result = qword_100160138;
  if (!qword_100160138)
  {
    sub_10005E960();
    type metadata accessor for DetailContentView(255);
    sub_100059E08(&qword_100160118, (void (*)(uint64_t))type metadata accessor for DetailContentView);
    swift_getOpaqueTypeConformance2();
    sub_10005F878();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160138);
  }
  return result;
}

unint64_t sub_10005F878()
{
  unint64_t result = qword_100160140;
  if (!qword_100160140)
  {
    sub_10005F244(255, (unint64_t *)&qword_10015EC20, (uint64_t (*)(void, void *))&type metadata accessor for _EnvironmentKeyTransformModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160140);
  }
  return result;
}

void sub_10005F8EC(uint64_t a1)
{
}

unint64_t sub_10005F920()
{
  unint64_t result = qword_100160148;
  if (!qword_100160148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160148);
  }
  return result;
}

uint64_t sub_10005F974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100124E00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000608F4(0);
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005EB8C(v2, (uint64_t)v10, (uint64_t (*)(void))sub_1000608F4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_100124B70();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_100125F50();
    uint64_t v14 = sub_1001250D0();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v18[1] = a1;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v18[2] = sub_1000AB124(0xD000000000000010, 0x8000000100131790, &v19);
      sub_100126030();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100124DF0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_10005FC34(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100124E00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_100125F50();
    uint64_t v9 = sub_1001250D0();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_1000AB124(0x6C616E6F6974704FLL, 0xEE003E746E6F463CLL, &v14);
      sub_100126030();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100124DF0();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_10005FE48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100124E00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006095C(0);
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005EB8C(v2, (uint64_t)v10, (uint64_t (*)(void))sub_10006095C);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_100125200();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_100125F50();
    uint64_t v14 = sub_1001250D0();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v18[1] = a1;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v18[2] = sub_1000AB124(0x747865746E6F43, 0xE700000000000000, &v19);
      sub_100126030();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100124DF0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_100060104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100124E00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005F8EC(0);
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005EB8C(v2, (uint64_t)v10, (uint64_t (*)(void))sub_10005F8EC);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1001238A0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = sub_100125F50();
    uint64_t v14 = sub_1001250D0();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v18[1] = a1;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v18[2] = sub_1000AB124(0xD000000000000012, 0x8000000100131770, &v19);
      sub_100126030();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_100124DF0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

double sub_1000603C4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100124E00();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_100125F50();
  uint64_t v9 = sub_1001250D0();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1000AB124(0x74616F6C464743, 0xE700000000000000, &v14);
    sub_100126030();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100124DF0();
  swift_getAtKeyPath();
  sub_100032D54(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_1000605D0()
{
  return sub_100060674(&qword_100160150, sub_10005EC98, (void (*)(void))sub_10006062C, (void (*)(void))sub_1000608C0);
}

uint64_t sub_10006062C()
{
  return sub_100060674(&qword_100160158, sub_10005EA98, (void (*)(void))sub_100060700, (void (*)(void))sub_10006088C);
}

uint64_t sub_100060674(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100060700()
{
  unint64_t result = qword_100160160;
  if (!qword_100160160)
  {
    sub_10005E810();
    sub_100060770();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160160);
  }
  return result;
}

unint64_t sub_100060770()
{
  unint64_t result = qword_100160168;
  if (!qword_100160168)
  {
    sub_10005EAE0(255, &qword_1001600F0, (uint64_t (*)(uint64_t))sub_10005E8AC, (uint64_t (*)(uint64_t))sub_10005E960, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    type metadata accessor for DetailComplicationContentView();
    sub_100059E08(&qword_100160100, (void (*)(uint64_t))type metadata accessor for DetailComplicationContentView);
    swift_getOpaqueTypeConformance2();
    sub_10005F7A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160168);
  }
  return result;
}

uint64_t sub_10006088C()
{
  return sub_100059E08(&qword_10015F0E8, sub_10003C8EC);
}

uint64_t sub_1000608C0()
{
  return sub_100059E08(&qword_10015F0E0, sub_10003C850);
}

void sub_1000608F4(uint64_t a1)
{
}

void sub_100060928(uint64_t a1)
{
}

void sub_10006095C(uint64_t a1)
{
}

__n128 sub_100060994@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>, double a9@<D0>)
{
  int v49 = a7;
  int v54 = a6;
  uint64_t v53 = a5;
  int v52 = a4;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v46 = a1;
  sub_100041E44();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for PreparedSparkline(0);
  uint64_t v14 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v48 = (uint64_t *)((char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_1001254F0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100060E68(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (int *)type metadata accessor for SparklineView(0);
  uint64_t v24 = (uint64_t *)(a8 + v23[11]);
  *uint64_t v24 = swift_getKeyPath();
  sub_1000608F4(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v23[12];
  sub_1001251B0();
  uint64_t v26 = sub_100125180();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v22, 1, 1, v26);
  uint64_t v27 = sub_1001251E0();
  sub_10006DAE8((uint64_t)v22, (uint64_t (*)(void))sub_100060E68);
  *(void *)(a8 + v25) = v27;
  uint64_t v28 = v23[13];
  uint64_t v29 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 104);
  v30(v19, enum case for Color.RGBColorSpace.sRGB(_:), v16);
  *(void *)(a8 + v28) = sub_100125560();
  uint64_t v31 = a8 + v23[14];
  sub_1001248C0();
  long long v32 = v56;
  *(_OWORD *)uint64_t v31 = v55;
  *(_OWORD *)(v31 + 16) = v32;
  *(void *)(v31 + 32) = v57;
  uint64_t v33 = v23[15];
  uint64_t v34 = v16;
  uint64_t v35 = v46;
  v30(v19, v29, v34);
  *(void *)(a8 + v33) = sub_100125560();
  sub_10006BE44(v35, (uint64_t)v13, (uint64_t (*)(void))sub_100041E44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v47) == 1)
  {
    uint64_t v36 = v48;
    sub_10008D810(v48);
    sub_10006DAE8(v35, (uint64_t (*)(void))sub_100041E44);
    sub_10006DAE8((uint64_t)v13, (uint64_t (*)(void))sub_100041E44);
  }
  else
  {
    sub_10006DAE8(v35, (uint64_t (*)(void))sub_100041E44);
    uint64_t v36 = v48;
    sub_10006BEB0((uint64_t)v13, (uint64_t)v48, type metadata accessor for PreparedSparkline);
  }
  char v37 = v49 & 1;
  sub_10006BEB0((uint64_t)v36, a8, type metadata accessor for PreparedSparkline);
  uint64_t v38 = a8 + v23[5];
  uint64_t v39 = v50;
  long long v40 = v50[1];
  *(_OWORD *)uint64_t v38 = *v50;
  *(_OWORD *)(v38 + 16) = v40;
  *(void *)(v38 + 32) = *((void *)v39 + 4);
  uint64_t v41 = a8 + v23[6];
  uint64_t v42 = v51;
  __n128 result = *(__n128 *)v51;
  long long v44 = *(_OWORD *)(v51 + 16);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v51;
  *(_OWORD *)(v41 + 16) = v44;
  *(void *)(v41 + 32) = *(void *)(v42 + 32);
  *(double *)(a8 + v23[7]) = a9;
  *(unsigned char *)(a8 + v23[8]) = v52 & 1;
  uint64_t v45 = a8 + v23[9];
  *(void *)uint64_t v45 = v53;
  *(unsigned char *)(v45 + 8) = v54;
  *(unsigned char *)(a8 + v23[10]) = v37;
  return result;
}

void sub_100060E68(uint64_t a1)
{
}

uint64_t type metadata accessor for SparklineView(uint64_t a1)
{
  return sub_100009E3C(a1, qword_100160250);
}

uint64_t sub_100060EBC()
{
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, (uint64_t)v3);
  sub_100009D98(v3, v3[3]);
  sub_100037604();
  uint64_t result = sub_100124100();
  if (v2)
  {
    sub_100029474(&v1, (uint64_t)&unk_100160180);
    return sub_100009D48((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100060F7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v135 = a1;
  uint64_t v134 = type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable(0);
  __chkstk_darwin(v134);
  uint64_t v133 = (uint64_t)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100125060();
  uint64_t v131 = *(void *)(v4 - 8);
  uint64_t v132 = v4;
  __chkstk_darwin(v4);
  unsigned __int8 v130 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100124B00();
  uint64_t v128 = *(void *)(v6 - 8);
  uint64_t v129 = v6;
  __chkstk_darwin(v6);
  unsigned __int8 v127 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for SparklineView(0);
  uint64_t v114 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v115 = v8;
  uint64_t v117 = (uint64_t)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069120(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069154();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v136 = v12;
  uint64_t v137 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006A2C4();
  uint64_t v100 = v16;
  uint64_t v99 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v138 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006A400();
  uint64_t v103 = v18;
  uint64_t v102 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v101 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006A5E4();
  uint64_t v106 = v20;
  uint64_t v105 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v104 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006AFC4();
  uint64_t v109 = v22;
  uint64_t v108 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  long long v107 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006B41C();
  uint64_t v113 = v24;
  uint64_t v111 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v110 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006B7E0(0);
  uint64_t v116 = v26;
  __chkstk_darwin(v26);
  uint64_t v112 = (char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006B85C();
  uint64_t v124 = v28;
  uint64_t v122 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v119 = (char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006BBEC();
  uint64_t v126 = v30;
  uint64_t v125 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v121 = (char *)&v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006BCF0();
  uint64_t v123 = v32;
  uint64_t v120 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v118 = (char *)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v140 = v1;
  sub_10006C738(0, &qword_1001602C0, (uint64_t (*)(uint64_t))sub_1000691FC, (uint64_t (*)(uint64_t))sub_100069338, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for BuilderConditional);
  sub_10006A128();
  sub_100124740();
  uint64_t v34 = type metadata accessor for PreparedSparkline(0);
  uint64_t v35 = sub_100124860();
  uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
  v96(v11, 1, 1, v35);
  sub_10002FE38();
  unint64_t v37 = v36;
  uint64_t v38 = sub_10006DBDC(&qword_1001603B0, (void (*)(uint64_t))sub_100069154);
  unint64_t v39 = sub_10006A398();
  uint64_t v40 = v136;
  unint64_t v97 = v37;
  sub_1001253A0();
  char v98 = v11;
  sub_10006DAE8((uint64_t)v11, (uint64_t (*)(void))sub_100069120);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v137 + 8))(v15, v40);
  if (v2[*(int *)(v139 + 32)] != 1 || (uint64_t v42 = (double *)&v2[*(int *)(v34 + 32)], ((_BYTE)v42[1] & 1) != 0))
  {
    uint64_t v43 = (double *)&v2[*(int *)(v34 + 28)];
    double v44 = *v43;
    double v45 = v43[1];
LABEL_9:
    double v145 = v44;
    double v146 = v45;
    uint64_t v47 = (uint64_t)v98;
    v96(v98, 1, 1, v35);
    sub_10006C894(0, (unint64_t *)&qword_1001603C8, (uint64_t)&type metadata for Double, (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    unint64_t v49 = v48;
    uint64_t v141 = v40;
    unint64_t v142 = v97;
    uint64_t v143 = v38;
    unint64_t v144 = v39;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    unint64_t v51 = sub_10006A550();
    int v52 = v101;
    uint64_t v53 = v100;
    int v54 = v138;
    sub_1001253B0();
    sub_10006DAE8(v47, (uint64_t (*)(void))sub_100069120);
    uint64_t v55 = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v54, v53);
    uint64_t v138 = (char *)&v96;
    __chkstk_darwin(v55);
    uint64_t v56 = (uint64_t)v2;
    *(&v96 - 2) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v2;
    sub_10006A7C8(0);
    unint64_t v58 = v57;
    uint64_t v141 = v53;
    unint64_t v142 = v49;
    uint64_t v143 = OpaqueTypeConformance2;
    unint64_t v144 = v51;
    uint64_t v59 = swift_getOpaqueTypeConformance2();
    uint64_t v60 = sub_10006B378(&qword_100160460, sub_10006A7C8, (void (*)(void))sub_10006AF90);
    uint64_t v61 = v104;
    uint64_t v62 = v103;
    sub_100125360();
    uint64_t v63 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v52, v62);
    __chkstk_darwin(v63);
    *(&v96 - 2) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v2;
    sub_10006B230(0);
    unint64_t v65 = v64;
    uint64_t v141 = v62;
    unint64_t v142 = v58;
    uint64_t v143 = v59;
    unint64_t v144 = v60;
    uint64_t v66 = swift_getOpaqueTypeConformance2();
    uint64_t v67 = sub_10006B378(&qword_100160488, sub_10006B230, (void (*)(void))sub_10006B3E8);
    uint64_t v68 = v107;
    uint64_t v69 = v106;
    sub_100125380();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v61, v69);
    uint64_t v70 = v117;
    sub_10006BE44(v56, v117, type metadata accessor for SparklineView);
    unint64_t v71 = (*(unsigned __int8 *)(v114 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v72 = swift_allocObject();
    sub_10006BEB0(v70, v72 + v71, type metadata accessor for SparklineView);
    sub_10006B6D8();
    uint64_t v141 = v69;
    unint64_t v142 = v65;
    uint64_t v143 = v66;
    unint64_t v144 = v67;
    swift_getOpaqueTypeConformance2();
    sub_10006B738();
    uint64_t v73 = v110;
    uint64_t v74 = v109;
    sub_1001253C0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v68, v74);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v77 = v128;
    uint64_t v76 = v129;
    uint64_t v78 = v127;
    (*(void (**)(char *, void, uint64_t))(v128 + 104))(v127, enum case for LayoutDirection.leftToRight(_:), v129);
    uint64_t v79 = v116;
    uint64_t v80 = (uint64_t)v112;
    char v81 = (uint64_t *)&v112[*(int *)(v116 + 36)];
    sub_10006B828(0);
    (*(void (**)(char *, char *, uint64_t))(v77 + 16))((char *)v81 + *(int *)(v82 + 28), v78, v76);
    uint64_t *v81 = KeyPath;
    uint64_t v83 = v111;
    uint64_t v84 = v113;
    (*(void (**)(uint64_t, char *, uint64_t))(v111 + 16))(v80, v73, v113);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v76);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v73, v84);
    uint64_t v85 = v130;
    sub_100125030();
    unint64_t v86 = sub_10006B8E0();
    uint64_t v87 = v119;
    sub_100125480();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v85, v132);
    sub_10006DAE8(v80, (uint64_t (*)(void))sub_10006B7E0);
    uint64_t v88 = v133;
    sub_10006BE44(v56, v133, type metadata accessor for PreparedSparkline);
    uint64_t v141 = v79;
    unint64_t v142 = v86;
    uint64_t v89 = swift_getOpaqueTypeConformance2();
    uint64_t v90 = sub_10006DBDC(&qword_1001604E8, (void (*)(uint64_t))type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable);
    long long v91 = v121;
    uint64_t v92 = v124;
    uint64_t v93 = v134;
    sub_1001254B0();
    sub_10006DAE8(v88, type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v87, v92);
    uint64_t v141 = v92;
    unint64_t v142 = v93;
    uint64_t v143 = v89;
    unint64_t v144 = v90;
    swift_getOpaqueTypeConformance2();
    uint64_t v94 = v118;
    uint64_t v95 = v126;
    sub_1001253D0();
    (*(void (**)(char *, uint64_t))(v125 + 8))(v91, v95);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v120 + 32))(v135, v94, v123);
  }
  double v45 = *v42;
  uint64_t v46 = (double *)&v2[*(int *)(v34 + 28)];
  double v44 = *v46;
  if (v45 < *v46) {
    double v44 = v45;
  }
  if (v45 <= v46[1]) {
    double v45 = v46[1];
  }
  if (v44 <= v45) {
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_100062024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100069338(0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000691FC();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v25 - v15;
  uint64_t v17 = type metadata accessor for SparklineView(0);
  v25[1] = v25;
  char v18 = *(unsigned char *)(a1 + *(int *)(v17 + 40));
  v25[4] = a1;
  sub_100069400();
  sub_100069D3C();
  sub_100124730();
  if (v18)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(a2, v8, v5);
    sub_10006C738(0, &qword_100160538, (uint64_t (*)(uint64_t))sub_1000691FC, (uint64_t (*)(uint64_t))sub_100069338, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for BuilderConditional.Storage);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    sub_10006A040();
    v25[0] = v20;
    sub_10006DBDC(&qword_100160398, sub_100069338);
    sub_10006A0F4(255);
    uint64_t v21 = a2;
    uint64_t v23 = v22;
    uint64_t v24 = sub_10006DBDC(&qword_100160390, sub_10006A0F4);
    v25[6] = v23;
    v25[7] = v24;
    swift_getOpaqueTypeConformance2();
    sub_1001245C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v13, v10);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v21, v16, v10);
    sub_10006C738(0, &qword_100160538, (uint64_t (*)(uint64_t))sub_1000691FC, (uint64_t (*)(uint64_t))sub_100069338, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for BuilderConditional.Storage);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

uint64_t sub_100062444()
{
  return sub_1001253D0();
}

uint64_t sub_1000624C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v3 = sub_100124600();
  __chkstk_darwin(v3 - 8);
  uint64_t v67 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006C330(0);
  __chkstk_darwin(v5 - 8);
  unint64_t v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100124630();
  __chkstk_darwin(v7 - 8);
  unint64_t v64 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100124680();
  __chkstk_darwin(v9 - 8);
  unint64_t v71 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SparklineView(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v78 = v11 - 8;
  uint64_t v63 = v12;
  __chkstk_darwin(v11 - 8);
  uint64_t v62 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v13;
  __chkstk_darwin(v14);
  uint64_t v75 = (char *)&v58 - v15;
  uint64_t v16 = sub_100124B70();
  unint64_t v17 = *(void *)(v16 - 8);
  uint64_t v79 = v16;
  unint64_t v80 = v17;
  __chkstk_darwin(v16);
  uint64_t v77 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v76 = (uint64_t)&v58 - v20;
  uint64_t v21 = sub_1001234F0();
  uint64_t v73 = *(void *)(v21 - 8);
  uint64_t v74 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1001234A0();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  sub_10002FE38();
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100123490();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1001247F0();
  uint64_t v32 = *(void *)(v31 - 8);
  __n128 v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v58 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v28;
  unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 104);
  unsigned int v69 = enum case for Calendar.Component.hour(_:);
  uint64_t v70 = v27;
  uint64_t v68 = v36;
  ((void (*)(char *, __n128))v36)(v30, v33);
  uint64_t v37 = type metadata accessor for PreparedSparkline(0);
  sub_10006BE44(a1 + *(int *)(v37 + 20), (uint64_t)v26, (uint64_t (*)(void))sub_10002FE38);
  sub_100123470();
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v23, a1 + *(int *)(v37 + 24), v74);
  uint64_t v38 = (uint64_t)v75;
  sub_100123480();
  sub_1001247E0();
  uint64_t v39 = sub_1001247D0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
  uint64_t v74 = *(void *)(v39 + 16);
  swift_bridgeObjectRelease();
  uint64_t v40 = v76;
  sub_10005F974(v76);
  uint64_t v41 = v77;
  sub_100124B60();
  sub_10006DBDC(&qword_10015F100, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  uint64_t v42 = v79;
  LOBYTE(v39) = sub_100126080();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v80 + 8);
  v43(v41, v42);
  v43((char *)v40, v42);
  sub_10006BE44(a1, v38, type metadata accessor for SparklineView);
  if (v39)
  {
    sub_10006DAE8(v38, type metadata accessor for SparklineView);
    uint64_t v44 = v72;
  }
  else
  {
    unint64_t v45 = v74;
    uint64_t v46 = v68;
    uint64_t v47 = v69;
    uint64_t v48 = v70;
    uint64_t v49 = *(void *)(*(void *)v38 + 16);
    sub_10006DAE8(v38, type metadata accessor for SparklineView);
    uint64_t v44 = v72;
    if (v49)
    {
      unint64_t v80 = v45 / 3;
      sub_100124660();
      v46(v30, v47, v48);
      uint64_t v50 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v65, 1, 1, v60);
      sub_100124610();
      sub_10006DAE8(v50, (uint64_t (*)(void))sub_10006C330);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v30, v48);
      uint64_t v51 = a1;
      uint64_t v52 = v62;
      sub_10006BE44(v51, v62, type metadata accessor for SparklineView);
      unint64_t v53 = (*(unsigned __int8 *)(v63 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v80;
      sub_10006BEB0(v52, v54 + v53, type metadata accessor for SparklineView);
      sub_1001245F0();
      sub_10006A844();
      sub_10006ACC8();
      sub_100124830();
      sub_10006A7FC(0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v44, 0, 1, v55);
    }
  }
  sub_10006A7FC(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v44, 1, 1, v57);
}

uint64_t sub_100062D90@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  long long v182 = a3;
  uint64_t v175 = a4;
  sub_10006C62C();
  uint64_t v174 = v6;
  __chkstk_darwin(v6);
  uint64_t v173 = (uint64_t)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006C69C();
  uint64_t v168 = v8;
  __chkstk_darwin(v8);
  long long v167 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001247A0();
  __chkstk_darwin(v10 - 8);
  uint64_t v161 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_1001247C0();
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v160 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006AC30(0, &qword_100160438, (void (*)(uint64_t))&type metadata accessor for AxisTick);
  uint64_t v166 = v13;
  uint64_t v165 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v164 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  long long v181 = (char *)&v134 - v16;
  uint64_t v17 = sub_1001246E0();
  __chkstk_darwin(v17 - 8);
  uint64_t v153 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100124720();
  __chkstk_darwin(v19 - 8);
  char v151 = (char *)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006C894(0, &qword_100160428, (uint64_t)&type metadata for Never, (uint64_t)&protocol witness table for Never, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for AxisValueLabel);
  uint64_t v156 = v21;
  uint64_t v154 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v152 = (char *)&v134 - v22;
  sub_10006AAFC();
  uint64_t v158 = v23;
  uint64_t v157 = *((void *)v23 - 1);
  __chkstk_darwin(v23);
  char v155 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006AA00();
  uint64_t v159 = v25;
  uint64_t v180 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  long long v179 = (char *)&v134 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  long long v178 = (char *)&v134 - v28;
  uint64_t v150 = (void (*)(char *, uint64_t))sub_1001231D0();
  uint64_t v149 = *((void *)v150 - 1);
  __chkstk_darwin(v150);
  double v146 = (char *)&v134 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_1001231E0();
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  double v145 = (char *)&v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1001230E0();
  __chkstk_darwin(v31 - 8);
  unint64_t v144 = (char *)&v134 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1001233E0();
  __chkstk_darwin(v33 - 8);
  uint64_t v143 = (char *)&v134 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1001234F0();
  uint64_t v139 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  unint64_t v142 = (char *)&v134 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1001234A0();
  __chkstk_darwin(v36 - 8);
  uint64_t v138 = (char *)&v134 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006D770(0, &qword_100160520, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle.TimeStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v38 - 8);
  uint64_t v136 = (char *)&v134 - v39;
  sub_10006D770(0, &qword_100160528, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle.DateStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v40 - 8);
  uint64_t v135 = (char *)&v134 - v41;
  uint64_t v177 = sub_1001231F0();
  uint64_t v137 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  Swift::String v140 = (char *)&v134 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  char v176 = (char *)&v134 - v44;
  sub_10006A934(0);
  __chkstk_darwin(v45 - 8);
  long long v172 = (char *)&v134 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v171 = (uint64_t)&v134 - v48;
  uint64_t v49 = sub_100124590();
  uint64_t v50 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v52 = (char *)&v134 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006AC30(0, &qword_100160400, (void (*)(uint64_t))&type metadata accessor for AxisGridLine);
  uint64_t v54 = v53;
  uint64_t v55 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v57 = (char *)&v134 - v56;
  sub_10006A8B8();
  __chkstk_darwin(v58 - 8);
  uint64_t v170 = (uint64_t)&v134 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  uint64_t v62 = (char *)&v134 - v61;
  long long v169 = a1;
  uint64_t v63 = sub_100124850();
  if (a2 >= 0) {
    uint64_t v64 = a2;
  }
  else {
    uint64_t v64 = a2 + 1;
  }
  uint64_t v65 = v64 >> 1;
  if (v65 == -1) {
    goto LABEL_9;
  }
  if (v65) {
    v63 %= v65;
  }
  if (!v63)
  {
LABEL_9:
    uint64_t v66 = type metadata accessor for SparklineView(0);
    uint64_t v67 = a2;
    uint64_t v68 = v62;
    unsigned int v69 = v182;
    uint64_t v70 = &v182[*(int *)(v66 + 56)];
    uint64_t v72 = *((void *)v70 + 2);
    uint64_t v71 = *((void *)v70 + 3);
    uint64_t v73 = *((void *)v70 + 4);
    long long v188 = *(_OWORD *)v70;
    uint64_t v189 = v72;
    uint64_t v190 = v71;
    uint64_t v191 = v73;
    swift_bridgeObjectRetain();
    sub_100124580();
    uint64_t v74 = *(void *)&v69[*(int *)(v66 + 60)];
    uint64_t v62 = v68;
    a2 = v67;
    *(void *)&long long v184 = v74;
    sub_100124770();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v49);
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v62, v57, v54);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v62, 0, 1, v54);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v62, 1, 1, v54);
  }
  uint64_t v75 = sub_100124850();
  if (a2 == -1) {
    goto LABEL_15;
  }
  if (a2) {
    v75 %= a2;
  }
  if (!v75)
  {
LABEL_15:
    uint64_t v79 = sub_100123180();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v135, 1, 1, v79);
    uint64_t v80 = sub_100123170();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v136, 1, 1, v80);
    sub_100123470();
    uint64_t v81 = *(int *)(type metadata accessor for PreparedSparkline(0) + 24);
    long long v169 = v62;
    uint64_t v82 = v182;
    uint64_t v83 = &v182[v81];
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
    uint64_t v85 = v142;
    uint64_t v86 = v141;
    v84(v142, &v182[v81], v141);
    sub_100123480();
    v84(v85, v83, v86);
    sub_100123360();
    sub_1001230D0();
    uint64_t v87 = v140;
    sub_100123190();
    uint64_t v88 = v146;
    sub_1001231C0();
    uint64_t v89 = v145;
    sub_1001231B0();
    (*(void (**)(char *, void *))(v149 + 8))(v88, v150);
    uint64_t v90 = v176;
    sub_1001231A0();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v89, v148);
    uint64_t v91 = v137;
    uint64_t v92 = *(void (**)(char *, uint64_t))(v137 + 8);
    uint64_t v149 = v137 + 8;
    uint64_t v150 = v92;
    uint64_t v93 = v177;
    v92(v87, v177);
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v87, v90, v93);
    sub_100124710();
    sub_1001246D0();
    sub_10006DBDC(&qword_100160530, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    uint64_t v94 = v152;
    sub_100124640();
    uint64_t v95 = (int *)type metadata accessor for SparklineView(0);
    unint64_t v96 = sub_10006ABAC();
    unint64_t v97 = v155;
    uint64_t v98 = v156;
    sub_100124780();
    (*(void (**)(char *, uint64_t))(v154 + 8))(v94, v98);
    uint64_t v183 = *(void *)&v82[v95[13]];
    *(void *)&long long v184 = v98;
    *((void *)&v184 + 1) = v96;
    swift_getOpaqueTypeConformance2();
    uint64_t v99 = v179;
    uint64_t v100 = v158;
    sub_100124770();
    (*(void (**)(char *, void (*)(void, void, void)))(v157 + 8))(v97, v100);
    uint64_t v101 = v180;
    uint64_t v102 = *(void (**)(void, void, void))(v180 + 32);
    uint64_t v157 = v180 + 32;
    uint64_t v158 = v102;
    uint64_t v103 = v178;
    uint64_t v104 = v99;
    uint64_t v105 = v99;
    uint64_t v106 = v159;
    v102(v178, v104, v159);
    sub_100124790();
    long long v107 = &v82[v95[14]];
    uint64_t v109 = *((void *)v107 + 2);
    uint64_t v108 = *((void *)v107 + 3);
    uint64_t v110 = *((void *)v107 + 4);
    long long v184 = *(_OWORD *)v107;
    uint64_t v185 = v109;
    uint64_t v186 = v108;
    uint64_t v187 = v110;
    swift_bridgeObjectRetain();
    uint64_t v111 = v160;
    sub_1001247B0();
    uint64_t v183 = *(void *)&v82[v95[15]];
    uint64_t v112 = v164;
    uint64_t v113 = v163;
    sub_100124770();
    (*(void (**)(char *, uint64_t))(v162 + 8))(v111, v113);
    uint64_t v114 = v165;
    uint64_t v115 = *(char **)(v165 + 32);
    uint64_t v163 = v165 + 32;
    long long v182 = v115;
    uint64_t v116 = v181;
    uint64_t v117 = v166;
    ((void (*)(char *, char *, uint64_t))v115)(v181, v112, v166);
    uint64_t v162 = *(void *)(v101 + 16);
    ((void (*)(char *, char *, uint64_t))v162)(v105, v103, v106);
    uint64_t v118 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
    uint64_t v119 = v112;
    v118(v112, v116, v117);
    uint64_t v120 = v118;
    uint64_t v121 = v167;
    ((void (*)(char *, char *, uint64_t))v162)(v167, v105, v106);
    uint64_t v122 = v168;
    uint64_t v123 = &v121[*(int *)(v168 + 48)];
    v120(v123, v119, v117);
    uint64_t v78 = (uint64_t)v172;
    uint64_t v124 = v121;
    uint64_t v62 = v169;
    v158(v172, v124, v106);
    ((void (*)(uint64_t, char *, uint64_t))v182)(v78 + *(int *)(v122 + 48), v123, v117);
    uint64_t v125 = *(void (**)(char *, uint64_t))(v114 + 8);
    v125(v181, v117);
    uint64_t v126 = *(void (**)(char *, uint64_t))(v180 + 8);
    v126(v178, v106);
    v150(v176, v177);
    v125(v119, v117);
    v126(v179, v106);
    sub_10006A968();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v78, 0, 1, v127);
    uint64_t v77 = v171;
    sub_10006BEB0(v78, v171, (uint64_t (*)(void))sub_10006A934);
  }
  else
  {
    sub_10006A968();
    uint64_t v77 = v171;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v171, 1, 1, v76);
    uint64_t v78 = (uint64_t)v172;
  }
  uint64_t v128 = v170;
  sub_10006BE44((uint64_t)v62, v170, (uint64_t (*)(void))sub_10006A8B8);
  sub_10006BE44(v77, v78, (uint64_t (*)(void))sub_10006A934);
  sub_10006AD8C();
  uint64_t v129 = v173;
  sub_10006BE44(v128, v173, (uint64_t (*)(void))sub_10006A8B8);
  sub_10006B378(&qword_100160450, sub_10006A934, (void (*)(void))sub_10006AE40);
  uint64_t v130 = v174;
  uint64_t v131 = v129 + *(int *)(v174 + 48);
  sub_10006BE44(v78, v131, (uint64_t (*)(void))sub_10006A934);
  uint64_t v132 = v175;
  sub_10006BEB0(v129, v175, (uint64_t (*)(void))sub_10006A8B8);
  sub_10006BEB0(v131, v132 + *(int *)(v130 + 48), (uint64_t (*)(void))sub_10006A934);
  sub_10006DAE8(v77, (uint64_t (*)(void))sub_10006A934);
  sub_10006DAE8((uint64_t)v62, (uint64_t (*)(void))sub_10006A8B8);
  sub_10006DAE8(v78, (uint64_t (*)(void))sub_10006A934);
  return sub_10006DAE8(v128, (uint64_t (*)(void))sub_10006A8B8);
}

uint64_t sub_1000642AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_100124600();
  __chkstk_darwin(v3 - 8);
  uint64_t v42 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100124630();
  __chkstk_darwin(v5 - 8);
  uint64_t v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100124680();
  __chkstk_darwin(v7 - 8);
  uint64_t v40 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SparklineView(0);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v39 + 64);
  __chkstk_darwin(v9);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = sub_100124B70();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v38 - v20;
  sub_10005F974((uint64_t)&v38 - v20);
  sub_100124B60();
  sub_10006DBDC(&qword_10015F100, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v22 = sub_100126080();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v18, v15);
  v23(v21, v15);
  sub_10006BE44(a1, (uint64_t)v14, type metadata accessor for SparklineView);
  if (v22)
  {
    sub_10006DAE8((uint64_t)v14, type metadata accessor for SparklineView);
    uint64_t v24 = v43;
  }
  else
  {
    uint64_t v25 = v39;
    uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v26 = *(void *)(*(void *)v14 + 16);
    sub_10006DAE8((uint64_t)v14, type metadata accessor for SparklineView);
    uint64_t v24 = v43;
    if (v26)
    {
      sub_100124670();
      uint64_t v44 = 0;
      sub_10006BF94();
      sub_100124620();
      sub_10006BE44(a1, (uint64_t)v11, type metadata accessor for SparklineView);
      unint64_t v27 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v28 = swift_allocObject();
      sub_10006BEB0((uint64_t)v11, v28 + v27, type metadata accessor for SparklineView);
      sub_1001245F0();
      sub_10006AA00();
      sub_10006AAFC();
      uint64_t v30 = v29;
      sub_10006C894(255, &qword_100160428, (uint64_t)&type metadata for Never, (uint64_t)&protocol witness table for Never, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for AxisValueLabel);
      uint64_t v32 = v31;
      unint64_t v33 = sub_10006ABAC();
      uint64_t v44 = v32;
      uint64_t v45 = (void *)v33;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v44 = v30;
      uint64_t v45 = &type metadata for Color;
      uint64_t v46 = OpaqueTypeConformance2;
      uint64_t v47 = &protocol witness table for Color;
      swift_getOpaqueTypeConformance2();
      sub_100124830();
      sub_10006B264();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v24, 0, 1, v35);
    }
  }
  sub_10006B264();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v24, 1, 1, v37);
}

uint64_t sub_100064818@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v18[0] = a2;
  uint64_t v3 = sub_1001246E0();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100124720();
  __chkstk_darwin(v4 - 8);
  sub_10006C894(0, &qword_100160428, (uint64_t)&type metadata for Never, (uint64_t)&protocol witness table for Never, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for AxisValueLabel);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v18 - v8;
  sub_10006AAFC();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = 0;
  unint64_t v20 = 0;
  char v21 = 0;
  long long v22 = xmmword_100128D30;
  unint64_t v23 = 0xA300000000000000;
  sub_100124710();
  sub_1001246D0();
  sub_10006C2DC();
  sub_100124640();
  uint64_t v15 = type metadata accessor for SparklineView(0);
  unint64_t v16 = sub_10006ABAC();
  sub_100124780();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18[1] = *(void *)(a1 + *(int *)(v15 + 52));
  uint64_t v19 = v6;
  unint64_t v20 = v16;
  swift_getOpaqueTypeConformance2();
  sub_100124770();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_100064B5C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = sub_1001250F0();
  type metadata accessor for SparklineView(0);
  sub_100124890();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = sub_100124690();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a2, a1, v13);
  sub_10006B6D8();
  uint64_t v15 = a2 + *(int *)(v14 + 36);
  *(unsigned char *)uint64_t v15 = v4;
  *(void *)(v15 + 8) = v6;
  *(void *)(v15 + 16) = v8;
  *(void *)(v15 + 24) = v10;
  *(void *)(v15 + 32) = v12;
  *(unsigned char *)(v15 + 40) = 0;
}

uint64_t sub_100064C2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SparklineView(0);
  __chkstk_darwin(v2);
  char v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100124B70();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - v10;
  sub_10005F974((uint64_t)&v22 - v10);
  sub_100124B60();
  sub_10006DBDC(&qword_10015F100, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v12 = sub_100126080();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v13(v11, v5);
  sub_10006BE44(v1, (uint64_t)v4, type metadata accessor for SparklineView);
  if (v12)
  {
    sub_10006DAE8((uint64_t)v4, type metadata accessor for SparklineView);
LABEL_8:
    if (qword_10015D4E8 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_100160198;
    uint64_t v18 = unk_1001601A0;
    sub_100009D98(qword_100160180, qword_100160198);
    (*(void (**)(uint64_t))(*(void *)(v18 + 16) + 408))(v17);
    return sub_100125570();
  }
  uint64_t v14 = *(void *)(*(void *)v4 + 16);
  sub_10006DAE8((uint64_t)v4, type metadata accessor for SparklineView);
  if (!v14) {
    goto LABEL_8;
  }
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for PreparedSparkline(0) + 36)))
  {
    if (qword_10015D4E8 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_100160198;
    uint64_t v16 = unk_1001601A0;
    sub_100009D98(qword_100160180, qword_100160198);
    (*(void (**)(uint64_t, uint64_t))(v16 + 64))(v15, v16);
  }
  else
  {
    if (qword_10015D4E8 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_100160198;
    uint64_t v21 = unk_1001601A0;
    sub_100009D98(qword_100160180, qword_100160198);
    (*(void (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21);
  }
  return sub_100125570();
}

uint64_t sub_100064F84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100069C40(0);
  uint64_t v112 = v4;
  uint64_t v110 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v109 = (char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069B64();
  uint64_t v115 = v6;
  uint64_t v113 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v111 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069A50();
  uint64_t v9 = v8;
  uint64_t v117 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v116 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v108 = (char *)&v102 - v12;
  __chkstk_darwin(v13);
  uint64_t v114 = (char *)&v102 - v14;
  sub_10006C7BC();
  __chkstk_darwin(v15 - 8);
  long long v107 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v135 = (char *)&v102 - v18;
  __chkstk_darwin(v19);
  uint64_t v121 = (char *)&v102 - v20;
  sub_10006C824();
  __chkstk_darwin(v21 - 8);
  uint64_t v134 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v120 = (char *)&v102 - v24;
  sub_100069920(0);
  uint64_t v125 = v25;
  uint64_t v123 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v122 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069858();
  uint64_t v128 = v27;
  uint64_t v126 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v124 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069744();
  uint64_t v130 = v29;
  uint64_t v129 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v127 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069600();
  uint64_t v138 = *(void *)(v31 - 8);
  uint64_t v139 = v31;
  __chkstk_darwin(v31);
  uint64_t v137 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v136 = (char *)&v102 - v34;
  sub_10006C894(0, &qword_100160550, (uint64_t)&type metadata for Double, (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for PlottableValue);
  __chkstk_darwin(v35 - 8);
  uint64_t v36 = sub_100124820();
  uint64_t v103 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v102 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006957C();
  uint64_t v106 = v39;
  uint64_t v105 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v102 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000694B4();
  uint64_t v43 = v42;
  uint64_t v44 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v104 = (char *)&v102 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069480(0);
  __chkstk_darwin(v46 - 8);
  uint64_t v133 = (uint64_t)&v102 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  uint64_t v140 = (uint64_t)&v102 - v49;
  uint64_t v132 = type metadata accessor for PreparedSparkline(0);
  uint64_t v131 = (double *)((char *)a1 + *(int *)(v132 + 32));
  char v50 = *((unsigned char *)v131 + 8);
  uint64_t v119 = a2;
  uint64_t v118 = v9;
  if (v50) {
    goto LABEL_2;
  }
  double v51 = *v131;
  uint64_t result = type metadata accessor for SparklineView(0);
  uint64_t v53 = result;
  uint64_t v54 = (double *)((char *)a1 + *(int *)(v132 + 28));
  double v55 = *v54;
  if (*((unsigned char *)a1 + *(int *)(result + 32)))
  {
    if (v51 < v55) {
      double v55 = v51;
    }
    double v56 = v54[1];
    if (v51 > v56) {
      double v56 = v51;
    }
    if (v55 > v56)
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v55 > v51) {
      goto LABEL_2;
    }
  }
  else
  {
    double v56 = v54[1];
    if (v55 > v51)
    {
LABEL_2:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v140, 1, 1, v43);
      goto LABEL_14;
    }
  }
  if (v51 > v56) {
    goto LABEL_2;
  }
  sub_100124EC0();
  *(double *)&long long v149 = v51;
  sub_100124650();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100124810();
  uint64_t v57 = (char *)a1 + *(int *)(v53 + 24);
  long long v58 = *((_OWORD *)v57 + 1);
  long long v149 = *(_OWORD *)v57;
  long long v150 = v58;
  uint64_t v151 = *((void *)v57 + 4);
  sub_1001245E0();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v38, v36);
  sub_100064C2C();
  uint64_t v59 = sub_100125530();
  swift_release();
  uint64_t v141 = v59;
  *(void *)&long long v146 = v36;
  *((void *)&v146 + 1) = &protocol witness table for RuleMark;
  swift_getOpaqueTypeConformance2();
  uint64_t v60 = v104;
  uint64_t v61 = v106;
  sub_1001245B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v41, v61);
  uint64_t v62 = v140;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v140, v60, v43);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v62, 0, 1, v43);
LABEL_14:
  *(void *)&long long v146 = *a1;
  swift_bridgeObjectRetain();
  sub_100124EC0();
  swift_getKeyPath();
  sub_1001246B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100124EC0();
  swift_getKeyPath();
  sub_1001246B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000699E8(0);
  uint64_t v64 = v63;
  uint64_t v65 = sub_1001232B0();
  uint64_t v66 = sub_10006DBDC(&qword_100160328, sub_1000699E8);
  uint64_t v67 = v122;
  uint64_t v121 = v64;
  uint64_t v120 = (char *)v65;
  uint64_t v106 = v66;
  sub_100124800();
  uint64_t v68 = type metadata accessor for SparklineView(0);
  unsigned int v69 = (char *)a1 + *(int *)(v68 + 20);
  uint64_t v148 = *((void *)v69 + 4);
  long long v70 = *((_OWORD *)v69 + 1);
  long long v146 = *(_OWORD *)v69;
  long long v147 = v70;
  uint64_t v71 = sub_10006B378(&qword_100160330, sub_100069920, (void (*)(void))sub_100069A1C);
  uint64_t v72 = v124;
  uint64_t v73 = v125;
  sub_1001245E0();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v67, v73);
  uint64_t v145 = sub_100064C2C();
  uint64_t v141 = v73;
  unint64_t v142 = (void *)v71;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v75 = v127;
  uint64_t v76 = v128;
  sub_1001245B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v72, v76);
  uint64_t v141 = v76;
  unint64_t v142 = &type metadata for Color;
  uint64_t v143 = OpaqueTypeConformance2;
  unint64_t v144 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  uint64_t v77 = v137;
  uint64_t v78 = v130;
  sub_1001245D0();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v75, v78);
  (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v136, v77, v139);
  uint64_t v141 = *a1;
  swift_bridgeObjectRetain();
  sub_100124EC0();
  swift_getKeyPath();
  sub_1001246B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100124EC0();
  swift_getKeyPath();
  sub_1001246B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = sub_100124EC0();
  if (*((unsigned char *)a1 + *(int *)(v68 + 32)) != 1 || ((_BYTE)v131[1] & 1) != 0)
  {
    double v79 = *(double *)((char *)a1 + *(int *)(v132 + 28));
LABEL_22:
    uint64_t v145 = *(void *)&v79;
    type metadata accessor for PreparedSparkline.Entry(0);
    sub_1001246A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v82 = v109;
    sub_100124760();
    sub_10006D708(0, (unint64_t *)&qword_100160558);
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_100128E90;
    sub_100064C2C();
    uint64_t v84 = sub_100125530();
    swift_release();
    *(void *)(v83 + 32) = v84;
    sub_100064C2C();
    uint64_t v85 = sub_100125530();
    swift_release();
    *(void *)(v83 + 40) = v85;
    uint64_t v141 = v83;
    sub_100125CE0();
    uint64_t v141 = sub_100125790();
    uint64_t v86 = sub_10006B378(&qword_100160360, sub_100069C40, (void (*)(void))sub_100069D08);
    uint64_t v87 = v111;
    uint64_t v88 = v112;
    sub_1001245B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v82, v88);
    uint64_t v141 = v88;
    unint64_t v142 = &type metadata for Gradient;
    uint64_t v143 = v86;
    unint64_t v144 = &protocol witness table for Gradient;
    swift_getOpaqueTypeConformance2();
    uint64_t v89 = v108;
    uint64_t v90 = v115;
    sub_1001245D0();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v87, v90);
    uint64_t v91 = v117;
    uint64_t v92 = v114;
    uint64_t v93 = v118;
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v89, v118);
    uint64_t v94 = v133;
    sub_10006BE44(v140, v133, (uint64_t (*)(void))sub_100069480);
    uint64_t v141 = v94;
    uint64_t v96 = v138;
    uint64_t v95 = v139;
    unint64_t v97 = v137;
    uint64_t v98 = v136;
    (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v137, v136, v139);
    unint64_t v142 = v97;
    uint64_t v99 = v116;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v116, v92, v93);
    uint64_t v143 = (uint64_t)v99;
    sub_1000662F4(&v141, v119);
    uint64_t v100 = *(void (**)(char *, uint64_t))(v91 + 8);
    v100(v92, v93);
    uint64_t v101 = *(void (**)(char *, uint64_t))(v96 + 8);
    v101(v98, v95);
    sub_10006DAE8(v140, (uint64_t (*)(void))sub_100069480);
    v100(v99, v93);
    v101(v97, v95);
    return sub_10006DAE8(v133, (uint64_t (*)(void))sub_100069480);
  }
  double v80 = *v131;
  uint64_t v81 = (double *)((char *)a1 + *(int *)(v132 + 28));
  double v79 = *v81;
  if (*v131 < *v81) {
    double v79 = *v131;
  }
  if (v80 <= v81[1]) {
    double v80 = v81[1];
  }
  if (v79 <= v80) {
    goto LABEL_22;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1000662F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10006C8E4();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100069480(0);
  sub_100069F5C();
  sub_10006BE44(*a1, (uint64_t)v7, (uint64_t (*)(void))sub_100069480);
  sub_100069600();
  uint64_t v9 = v8;
  sub_100069744();
  sub_100069858();
  sub_100069920(255);
  sub_10006B378(&qword_100160330, sub_100069920, (void (*)(void))sub_100069A1C);
  uint64_t v10 = &v7[*(int *)(v5 + 56)];
  uint64_t v11 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, a1[1], v9);
  sub_100069A50();
  uint64_t v13 = v12;
  sub_100069B64();
  sub_100069C40(255);
  sub_10006B378(&qword_100160360, sub_100069C40, (void (*)(void))sub_100069D08);
  uint64_t v14 = &v7[*(int *)(v5 + 72)];
  uint64_t v15 = a1[2];
  uint64_t v16 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, v15, v13);
  sub_10006BEB0((uint64_t)v7, a2, (uint64_t (*)(void))sub_100069480);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2 + *(int *)(v5 + 56), v10, v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2 + *(int *)(v5 + 72), v14, v13);
}

id sub_10006658C()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v0 setDateStyle:0];
  id result = [v0 setTimeStyle:1];
  qword_1001601A8 = (uint64_t)v0;
  return result;
}

id sub_1000665F0()
{
  uint64_t v0 = sub_1001233E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  sub_100123390();
  Class isa = sub_100123350().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setLocale:isa];

  id result = [v4 setMaximumFractionDigits:4];
  qword_1001601B0 = (uint64_t)v4;
  return result;
}

void sub_100066710()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
  v6._countAndFlagsBits = 0x8000000100131850;
  v7._countAndFlagsBits = 0x7250206B636F7453;
  v7._object = (void *)0xEB00000000656369;
  v8.value._countAndFlagsBits = 0;
  v8.value._object = 0;
  v2.super.Class isa = v1;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  uint64_t v3 = sub_100123070(v7, v8, v2, v9, v6);
  uint64_t v5 = v4;

  qword_1001601B8 = v3;
  unk_1001601C0 = v5;
}

void sub_1000667DC()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
  v6._countAndFlagsBits = 0x8000000100131810;
  v7._countAndFlagsBits = 1701669204;
  v7._object = (void *)0xE400000000000000;
  v8.value._countAndFlagsBits = 0;
  v8.value._object = 0;
  v2.super.Class isa = v1;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  uint64_t v3 = sub_100123070(v7, v8, v2, v9, v6);
  uint64_t v5 = v4;

  qword_1001601C8 = v3;
  unk_1001601D0 = v5;
}

void sub_100066898()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v1 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
  v6._countAndFlagsBits = 0x80000001001317D0;
  v7._countAndFlagsBits = 0x6563697250;
  v7._object = (void *)0xE500000000000000;
  v8.value._countAndFlagsBits = 0;
  v8.value._object = 0;
  v2.super.Class isa = v1;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  uint64_t v3 = sub_100123070(v7, v8, v2, v9, v6);
  uint64_t v5 = v4;

  qword_1001601D8 = v3;
  unk_1001601E0 = v5;
}

uint64_t sub_100066958()
{
  uint64_t v1 = (uint64_t *)v0;
  uint64_t v2 = type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  v15[2] = sub_10003EBFC(0, &qword_100160600);
  if (qword_10015D500 != -1) {
    swift_once();
  }
  v15[1] = qword_1001601B8;
  sub_10003EBFC(0, &qword_100160608);
  uint64_t v5 = qword_10015D508;
  swift_bridgeObjectRetain();
  if (v5 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  sub_100066D80();
  sub_10006BE44(v0, (uint64_t)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  sub_10006BEB0((uint64_t)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable);
  sub_100125FC0();
  if (qword_10015D510 != -1) {
    swift_once();
  }
  type metadata accessor for PreparedSparkline(0);
  swift_bridgeObjectRetain();
  sub_100125FC0();
  sub_10006D708(0, (unint64_t *)&qword_10015FE70);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001294E0;
  uint64_t v9 = *v1;
  __chkstk_darwin(v8);
  v15[-2] = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10001C568((void (*)(uint64_t *__return_ptr, uint64_t))sub_10006D750, (uint64_t)&v15[-4], v9);
  swift_bridgeObjectRelease();
  id v10 = objc_allocWithZone((Class)AXDataSeriesDescriptor);
  NSString v11 = sub_100125AD0();
  swift_bridgeObjectRelease();
  sub_10003EBFC(0, &qword_100160610);
  Class isa = sub_100125C90().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithName:v11 isContinuous:1 dataPoints:isa];

  *(void *)(v8 + 32) = v13;
  void v15[3] = v8;
  sub_100125CE0();
  return sub_100125F70();
}

void *sub_100066D80()
{
  uint64_t v0 = sub_100123430();
  uint64_t v62 = *(void *)(v0 - 8);
  uint64_t v63 = v0;
  __chkstk_darwin(v0);
  uint64_t v61 = (char *)&v54 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100123440();
  uint64_t v60 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v59 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100123410();
  uint64_t v57 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029204(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v71 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001232B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v64 = (char *)&v54 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v70 = sub_1001234A0();
  uint64_t v72 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100123060();
  uint64_t v65 = *(void *)(v17 - 8);
  uint64_t v66 = (void (*)(char *, uint64_t))v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = [self currentCalendar];
  sub_100123450();

  sub_10006D770(0, &qword_100160618, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v21 = sub_100123490();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100127010;
  (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, enum case for Calendar.Component.hour(_:), v21);
  uint64_t v25 = v6;
  sub_10006D7D4(v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_100123270();
  sub_100123420();
  swift_bridgeObjectRelease();
  uint64_t v58 = v7;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v26 = v7 + 8;
  double v55 = v14;
  uint64_t v73 = v27;
  v27(v14, v6);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v72 + 8);
  v72 += 8;
  v28(v16, v70);
  uint64_t v29 = sub_100123050();
  LOBYTE(v21) = v30;
  (*(void (**)(char *, void))(v65 + 8))(v19, v66);
  if (v21) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v54 = v26;
  uint64_t v65 = v29;
  double v56 = v16;
  sub_100123470();
  type metadata accessor for PreparedSparkline(0);
  uint64_t v31 = v57;
  (*(void (**)(char *, void, uint64_t))(v57 + 104))(v67, enum case for Calendar.MatchingPolicy.nextTime(_:), v68);
  uint64_t v32 = v60;
  uint64_t v33 = *(void (**)(char *, void, uint64_t))(v60 + 104);
  uint64_t v66 = v28;
  uint64_t v34 = v59;
  v33(v59, enum case for Calendar.RepeatedTimePolicy.first(_:), v69);
  uint64_t v36 = v61;
  uint64_t v35 = v62;
  uint64_t v37 = v63;
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for Calendar.SearchDirection.forward(_:), v63);
  sub_100123460();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v69);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v67, v68);
  v66(v56, v70);
  uint64_t v38 = v58;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v71, 1, v25) == 1)
  {
    sub_10006DAE8(v71, (uint64_t (*)(void))sub_100029204);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 32);
  uint64_t v41 = v64;
  v40(v64, v71, v25);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v9, v41, v25);
  sub_10002FE38();
  sub_100123210();
  uint64_t v39 = _swiftEmptyArrayStorage;
  if (v42 <= 0.0)
  {
    uint64_t v72 = v25;
    uint64_t v45 = v55;
    do
    {
      sub_100123210();
      double v48 = v47;
      sub_100123210();
      double v50 = v48 / v49;
      if (v50 >= 0.0 && v50 <= 1.0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v39 = sub_10009B94C(0, v39[2] + 1, 1, v39);
        }
        unint64_t v53 = v39[2];
        unint64_t v52 = v39[3];
        if (v53 >= v52 >> 1) {
          uint64_t v39 = sub_10009B94C((void *)(v52 > 1), v53 + 1, 1, v39);
        }
        v39[2] = v53 + 1;
        *(double *)&v39[v53 + 4] = v50;
        uint64_t v25 = v72;
      }
      sub_100125E10();
      sub_100123220();
      v73(v9, v25);
      v40(v9, (uint64_t)v45, v25);
      sub_100123210();
    }
    while (v46 <= 0.0);
  }
  uint64_t v43 = v73;
  v73(v9, v25);
  v43(v64, v25);
  return v39;
}

uint64_t sub_100067650(uint64_t a1)
{
  uint64_t v2 = sub_1001232B0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - v7;
  if (qword_10015D4F0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_1001601A8;
  uint64_t v10 = type metadata accessor for PreparedSparkline(0);
  id v11 = v9;
  Class isa = sub_1001234C0().super.isa;
  [v11 setTimeZone:isa];

  uint64_t v13 = (void *)qword_1001601A8;
  uint64_t v14 = a1 + *(int *)(v10 + 20);
  sub_10002FE38();
  id v15 = v13;
  sub_100123210();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
  sub_100123200();
  Class v16 = sub_100123230().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  id v17 = [v15 stringFromDate:v16];

  uint64_t v18 = sub_100125B10();
  return v18;
}

uint64_t sub_100067878(double a1)
{
  if (qword_10015D4F8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1001601B0;
  id v3 = objc_allocWithZone((Class)NSNumber);
  id v4 = v2;
  id v5 = [v3 initWithDouble:a1];
  id v6 = [v4 stringFromNumber:v5];

  if (v6)
  {
    uint64_t v7 = sub_100125B10();
  }
  else
  {
    sub_100125E00();
    return 0;
  }
  return v7;
}

AXDataPoint sub_10006798C@<X0>(uint64_t a1@<X0>, AXDataPoint *a2@<X8>)
{
  sub_10003EBFC(0, &qword_100160610);
  type metadata accessor for PreparedSparkline(0);
  sub_100123210();
  double v5 = v4;
  sub_10002FE38();
  sub_100123210();
  Swift::Double v7 = v5 / v6;
  v10.value = *(Swift::Double *)(a1 + *(int *)(type metadata accessor for PreparedSparkline.Entry(0) + 20));
  v8._rawValue = _swiftEmptyArrayStorage;
  v10.is_nil = 0;
  v11.value._countAndFlagsBits = 0;
  v11.value._object = 0;
  result.super.Class isa = sub_100125F20(v7, v10, v8, v11).super.isa;
  a2->super.Class isa = result.super.isa;
  return result;
}

uint64_t sub_100067A68()
{
  return sub_100124CC0();
}

uint64_t sub_100067A8C()
{
  return sub_100124CC0();
}

uint64_t sub_100067AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100067ADC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

uint64_t sub_100067ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100067BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100067ADC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for RedactionReasons, (uint64_t (*)(char *))&EnvironmentValues.redactionReasons.setter);
}

void *sub_100067BEC(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    Swift::Double v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    Swift::Double v7 = a1;
    uint64_t v8 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)v7 + v9;
    Swift::String_optional v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1001232B0();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    sub_10002FE38();
    v13(&v10[*(int *)(v14 + 36)], &v11[*(int *)(v14 + 36)], v12);
    uint64_t v15 = v8[6];
    Class v16 = (char *)v7 + v15;
    id v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    *(_OWORD *)((char *)v7 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
    uint64_t v19 = v8[8];
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    *((unsigned char *)v7 + v8[9]) = *((unsigned char *)a2 + v8[9]);
    uint64_t v22 = a3[5];
    uint64_t v23 = a3[6];
    uint64_t v24 = (void *)((char *)v7 + v22);
    uint64_t v25 = (void *)((char *)a2 + v22);
    *uint64_t v24 = *v25;
    v24[1] = v25[1];
    uint64_t v26 = v25[3];
    v24[2] = v25[2];
    void v24[3] = v26;
    v24[4] = v25[4];
    uint64_t v27 = (void *)((char *)v7 + v23);
    uint64_t v28 = (void *)((char *)a2 + v23);
    *uint64_t v27 = *v28;
    v27[1] = v28[1];
    uint64_t v29 = v28[3];
    uint64_t v27[2] = v28[2];
    v27[3] = v29;
    v27[4] = v28[4];
    uint64_t v30 = a3[8];
    *(void *)((char *)v7 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)v7 + v30) = *((unsigned char *)a2 + v30);
    uint64_t v31 = a3[9];
    uint64_t v32 = a3[10];
    uint64_t v33 = (char *)v7 + v31;
    uint64_t v34 = (char *)a2 + v31;
    *(void *)uint64_t v33 = *(void *)v34;
    char v35 = *((unsigned char *)a2 + v32);
    v33[8] = v34[8];
    *((unsigned char *)v7 + v32) = v35;
    uint64_t v36 = a3[11];
    uint64_t v37 = (void *)((char *)v7 + v36);
    uint64_t v38 = (void *)((char *)a2 + v36);
    sub_1000608F4(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = sub_100124B70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *uint64_t v37 = *v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = a3[13];
    *(void *)((char *)v7 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *(void *)((char *)v7 + v40) = *(void *)((char *)a2 + v40);
    uint64_t v41 = a3[14];
    uint64_t v42 = a3[15];
    uint64_t v43 = (void *)((char *)v7 + v41);
    uint64_t v44 = (void *)((char *)a2 + v41);
    *uint64_t v43 = *v44;
    v43[1] = v44[1];
    uint64_t v45 = v44[3];
    v43[2] = v44[2];
    v43[3] = v45;
    v43[4] = v44[4];
    *(void *)((char *)v7 + v42) = *(void *)((char *)a2 + v42);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_100067F10(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1001232B0();
  Swift::Double v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  sub_10002FE38();
  v7(v5 + *(int *)(v8 + 36), v6);
  uint64_t v9 = a1 + *(int *)(v4 + 24);
  uint64_t v10 = sub_1001234F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + *(int *)(a2 + 44);
  sub_1000608F4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_100124B70();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_1000680CC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001232B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  sub_10002FE38();
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  uint64_t v17 = v6[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  uint64_t v20 = a3[5];
  uint64_t v21 = a3[6];
  uint64_t v22 = (void *)((char *)a1 + v20);
  uint64_t v23 = (void *)((char *)a2 + v20);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  uint64_t v24 = v23[3];
  v22[2] = v23[2];
  v22[3] = v24;
  v22[4] = v23[4];
  uint64_t v25 = (void *)((char *)a1 + v21);
  uint64_t v26 = (void *)((char *)a2 + v21);
  void *v25 = *v26;
  v25[1] = v26[1];
  uint64_t v27 = v26[3];
  long long v25[2] = v26[2];
  v25[3] = v27;
  v25[4] = v26[4];
  uint64_t v28 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = (char *)a1 + v29;
  uint64_t v32 = (char *)a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  char v33 = *((unsigned char *)a2 + v30);
  v31[8] = v32[8];
  *((unsigned char *)a1 + v30) = v33;
  uint64_t v34 = a3[11];
  char v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  sub_1000608F4(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = sub_100124B70();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  }
  else
  {
    *char v35 = *v36;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
  uint64_t v39 = a3[14];
  uint64_t v40 = a3[15];
  uint64_t v41 = (void *)((char *)a1 + v39);
  uint64_t v42 = (void *)((char *)a2 + v39);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  uint64_t v43 = v42[3];
  v41[2] = v42[2];
  v41[3] = v43;
  v41[4] = v42[4];
  *(void *)((char *)a1 + v40) = *(void *)((char *)a2 + v40);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1000683AC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001232B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  sub_10002FE38();
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v6[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  uint64_t v20 = v6[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  char v23 = v22[8];
  *(void *)uint64_t v21 = *(void *)v22;
  unsigned char v21[8] = v23;
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  uint64_t v24 = a3[5];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *(void *)uint64_t v25 = *(void *)((char *)a2 + v24);
  *((_DWORD *)v25 + 2) = *(_DWORD *)((char *)a2 + v24 + 8);
  *((_DWORD *)v25 + 3) = *(_DWORD *)((char *)a2 + v24 + 12);
  *((void *)v25 + 2) = *(void *)((char *)a2 + v24 + 16);
  *((void *)v25 + 3) = *(void *)((char *)a2 + v24 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v25 + 4) = *((void *)v26 + 4);
  uint64_t v27 = a3[6];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  *(void *)uint64_t v28 = *(void *)((char *)a2 + v27);
  *((_DWORD *)v28 + 2) = *(_DWORD *)((char *)a2 + v27 + 8);
  *((_DWORD *)v28 + 3) = *(_DWORD *)((char *)a2 + v27 + 12);
  *((void *)v28 + 2) = *(void *)((char *)a2 + v27 + 16);
  *((void *)v28 + 3) = *(void *)((char *)a2 + v27 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v28 + 4) = *((void *)v29 + 4);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v30 = a3[9];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)v32;
  v31[8] = v32[8];
  *(void *)uint64_t v31 = v33;
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  if (a1 != a2)
  {
    uint64_t v34 = a3[11];
    char v35 = (void *)((char *)a1 + v34);
    uint64_t v36 = (void *)((char *)a2 + v34);
    sub_10006DAE8((uint64_t)a1 + v34, (uint64_t (*)(void))sub_1000608F4);
    sub_1000608F4(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = sub_100124B70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      *char v35 = *v36;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_retain();
  swift_release();
  uint64_t v38 = a3[14];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  *(void *)uint64_t v39 = *(void *)((char *)a2 + v38);
  *((_DWORD *)v39 + 2) = *(_DWORD *)((char *)a2 + v38 + 8);
  *((_DWORD *)v39 + 3) = *(_DWORD *)((char *)a2 + v38 + 12);
  *((void *)v39 + 2) = *(void *)((char *)a2 + v38 + 16);
  *((void *)v39 + 3) = *(void *)((char *)a2 + v38 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v39 + 4) = *((void *)v40 + 4);
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_100068740(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001232B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  sub_10002FE38();
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  uint64_t v17 = v6[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  uint64_t v20 = a3[5];
  uint64_t v21 = a3[6];
  uint64_t v22 = (char *)a1 + v20;
  char v23 = (char *)a2 + v20;
  long long v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((void *)v22 + 4) = *((void *)v23 + 4);
  uint64_t v25 = (char *)a1 + v21;
  uint64_t v26 = (char *)a2 + v21;
  long long v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  *((void *)v25 + 4) = *((void *)v26 + 4);
  uint64_t v28 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = (char *)a1 + v29;
  uint64_t v32 = (char *)a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  char v33 = *((unsigned char *)a2 + v30);
  v31[8] = v32[8];
  *((unsigned char *)a1 + v30) = v33;
  uint64_t v34 = a3[11];
  char v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  sub_1000608F4(0);
  uint64_t v38 = v37;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = sub_100124B70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v35, v36, v39);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  uint64_t v40 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v40) = *(void *)((char *)a2 + v40);
  uint64_t v41 = a3[14];
  uint64_t v42 = a3[15];
  uint64_t v43 = (char *)a1 + v41;
  uint64_t v44 = (char *)a2 + v41;
  long long v45 = *((_OWORD *)v44 + 1);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *((_OWORD *)v43 + 1) = v45;
  *((void *)v43 + 4) = *((void *)v44 + 4);
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  return a1;
}

void *sub_1000689CC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001232B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  sub_10002FE38();
  v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  uint64_t v17 = v6[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  v18[8] = v19[8];
  *(void *)uint64_t v18 = *(void *)v19;
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  uint64_t v20 = a3[5];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20 + 8);
  void *v21 = *(void *)((char *)a2 + v20);
  v21[1] = v23;
  long long v21[2] = *(void *)((char *)a2 + v20 + 16);
  v21[3] = *(void *)((char *)a2 + v20 + 24);
  swift_bridgeObjectRelease();
  v21[4] = *((void *)v22 + 4);
  uint64_t v24 = a3[6];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)((char *)a2 + v24 + 8);
  void *v25 = *(void *)((char *)a2 + v24);
  v25[1] = v27;
  long long v25[2] = *(void *)((char *)a2 + v24 + 16);
  v25[3] = *(void *)((char *)a2 + v24 + 24);
  swift_bridgeObjectRelease();
  v25[4] = *((void *)v26 + 4);
  uint64_t v28 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = (char *)a1 + v29;
  uint64_t v32 = (char *)a2 + v29;
  v31[8] = v32[8];
  *(void *)uint64_t v31 = *(void *)v32;
  *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
  if (a1 != a2)
  {
    uint64_t v33 = a3[11];
    uint64_t v34 = (char *)a1 + v33;
    char v35 = (char *)a2 + v33;
    sub_10006DAE8((uint64_t)a1 + v33, (uint64_t (*)(void))sub_1000608F4);
    sub_1000608F4(0);
    uint64_t v37 = v36;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = sub_100124B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v34, v35, v38);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
  }
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_release();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_release();
  uint64_t v39 = a3[14];
  uint64_t v40 = (void *)((char *)a1 + v39);
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = *(void *)((char *)a2 + v39 + 8);
  *uint64_t v40 = *(void *)((char *)a2 + v39);
  v40[1] = v42;
  v40[2] = *(void *)((char *)a2 + v39 + 16);
  v40[3] = *(void *)((char *)a2 + v39 + 24);
  swift_bridgeObjectRelease();
  v40[4] = *((void *)v41 + 4);
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_release();
  return a1;
}

uint64_t sub_100068CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100068D04);
}

uint64_t sub_100068D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PreparedSparkline(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_10006D770(0, &qword_1001601F0, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 44);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100068E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100068E78);
}

uint64_t sub_100068E78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for PreparedSparkline(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  else
  {
    sub_10006D770(0, &qword_1001601F0, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 44);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_100068FD8()
{
  type metadata accessor for PreparedSparkline(319);
  if (v0 <= 0x3F)
  {
    sub_1000608F4(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000690E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable(uint64_t a1)
{
  return sub_100009E3C(a1, qword_1001605C0);
}

void sub_100069120(uint64_t a1)
{
}

void sub_100069154()
{
  if (!qword_1001602B8)
  {
    sub_10006C738(255, &qword_1001602C0, (uint64_t (*)(uint64_t))sub_1000691FC, (uint64_t (*)(uint64_t))sub_100069338, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for BuilderConditional);
    sub_10006A128();
    unint64_t v0 = sub_100124750();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001602B8);
    }
  }
}

void sub_1000691FC()
{
  if (!qword_1001602C8)
  {
    sub_100069338(255);
    sub_10006A040();
    sub_10006DBDC(&qword_100160398, sub_100069338);
    sub_10006A0F4(255);
    sub_10006DBDC(&qword_100160390, sub_10006A0F4);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001602C8);
    }
  }
}

void sub_100069338(uint64_t a1)
{
}

void sub_100069380(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_100069400()
{
  if (!qword_1001602D8)
  {
    sub_100069480(255);
    sub_100069600();
    sub_100069A50();
    unint64_t v0 = sub_1001245A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001602D8);
    }
  }
}

void sub_100069480(uint64_t a1)
{
}

void sub_1000694B4()
{
  if (!qword_1001602E8)
  {
    sub_10006957C();
    sub_100124820();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001602E8);
    }
  }
}

void sub_10006957C()
{
  if (!qword_1001602F0)
  {
    sub_100124820();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001602F0);
    }
  }
}

void sub_100069600()
{
  if (!qword_1001602F8)
  {
    sub_100069744();
    sub_100069858();
    sub_100069920(255);
    sub_10006B378(&qword_100160330, sub_100069920, (void (*)(void))sub_100069A1C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001602F8);
    }
  }
}

void sub_100069744()
{
  if (!qword_100160300)
  {
    sub_100069858();
    sub_100069920(255);
    sub_10006B378(&qword_100160330, sub_100069920, (void (*)(void))sub_100069A1C);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160300);
    }
  }
}

void sub_100069858()
{
  if (!qword_100160308)
  {
    sub_100069920(255);
    sub_10006B378(&qword_100160330, sub_100069920, (void (*)(void))sub_100069A1C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160308);
    }
  }
}

void sub_100069920(uint64_t a1)
{
}

void sub_100069954()
{
  if (!qword_100160318)
  {
    sub_1000699E8(255);
    sub_10006DBDC(&qword_100160328, sub_1000699E8);
    unint64_t v0 = sub_100124700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160318);
    }
  }
}

void sub_1000699E8(uint64_t a1)
{
}

uint64_t sub_100069A1C()
{
  return sub_10006DBDC(&qword_100160338, (void (*)(uint64_t))sub_100069954);
}

void sub_100069A50()
{
  if (!qword_100160340)
  {
    sub_100069B64();
    sub_100069C40(255);
    sub_10006B378(&qword_100160360, sub_100069C40, (void (*)(void))sub_100069D08);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160340);
    }
  }
}

void sub_100069B64()
{
  if (!qword_100160348)
  {
    sub_100069C40(255);
    sub_10006B378(&qword_100160360, sub_100069C40, (void (*)(void))sub_100069D08);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160348);
    }
  }
}

void sub_100069C40(uint64_t a1)
{
}

void sub_100069C74()
{
  if (!qword_100160358)
  {
    sub_1000699E8(255);
    sub_10006DBDC(&qword_100160328, sub_1000699E8);
    unint64_t v0 = sub_1001246F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160358);
    }
  }
}

uint64_t sub_100069D08()
{
  return sub_10006DBDC(&qword_100160368, (void (*)(uint64_t))sub_100069C74);
}

unint64_t sub_100069D3C()
{
  unint64_t result = qword_100160370;
  if (!qword_100160370)
  {
    sub_100069400();
    sub_100069F5C();
    sub_100069744();
    sub_100069858();
    sub_100069920(255);
    sub_10006B378(&qword_100160330, sub_100069920, (void (*)(void))sub_100069A1C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100069B64();
    sub_100069C40(255);
    sub_10006B378(&qword_100160360, sub_100069C40, (void (*)(void))sub_100069D08);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160370);
  }
  return result;
}

unint64_t sub_100069F5C()
{
  unint64_t result = qword_100160378;
  if (!qword_100160378)
  {
    sub_100069480(255);
    sub_10006957C();
    sub_100124820();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160378);
  }
  return result;
}

void sub_10006A040()
{
  if (!qword_100160380)
  {
    sub_10006A0F4(255);
    sub_10006DBDC(&qword_100160390, sub_10006A0F4);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160380);
    }
  }
}

void sub_10006A0F4(uint64_t a1)
{
}

unint64_t sub_10006A128()
{
  unint64_t result = qword_1001603A0;
  if (!qword_1001603A0)
  {
    sub_10006C738(255, &qword_1001602C0, (uint64_t (*)(uint64_t))sub_1000691FC, (uint64_t (*)(uint64_t))sub_100069338, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for BuilderConditional);
    sub_100069338(255);
    sub_10006A040();
    sub_10006DBDC(&qword_100160398, sub_100069338);
    sub_10006A0F4(255);
    sub_10006DBDC(&qword_100160390, sub_10006A0F4);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001603A0);
  }
  return result;
}

void sub_10006A2C4()
{
  if (!qword_1001603A8)
  {
    sub_100069154();
    sub_10002FE38();
    sub_10006DBDC(&qword_1001603B0, (void (*)(uint64_t))sub_100069154);
    sub_10006A398();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001603A8);
    }
  }
}

unint64_t sub_10006A398()
{
  unint64_t result = qword_1001603B8;
  if (!qword_1001603B8)
  {
    sub_10002FE38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001603B8);
  }
  return result;
}

void sub_10006A400()
{
  if (!qword_1001603C0)
  {
    sub_10006A2C4();
    sub_10006C894(255, (unint64_t *)&qword_1001603C8, (uint64_t)&type metadata for Double, (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    sub_100069154();
    sub_10002FE38();
    sub_10006DBDC(&qword_1001603B0, (void (*)(uint64_t))sub_100069154);
    sub_10006A398();
    swift_getOpaqueTypeConformance2();
    sub_10006A550();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001603C0);
    }
  }
}

unint64_t sub_10006A550()
{
  unint64_t result = qword_1001603D0;
  if (!qword_1001603D0)
  {
    sub_10006C894(255, (unint64_t *)&qword_1001603C8, (uint64_t)&type metadata for Double, (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001603D0);
  }
  return result;
}

void sub_10006A5E4()
{
  if (!qword_1001603D8)
  {
    sub_10006A400();
    sub_10006A7C8(255);
    sub_10006A2C4();
    sub_10006C894(255, (unint64_t *)&qword_1001603C8, (uint64_t)&type metadata for Double, (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    sub_100069154();
    sub_10002FE38();
    sub_10006DBDC(&qword_1001603B0, (void (*)(uint64_t))sub_100069154);
    sub_10006A398();
    swift_getOpaqueTypeConformance2();
    sub_10006A550();
    swift_getOpaqueTypeConformance2();
    sub_10006B378(&qword_100160460, sub_10006A7C8, (void (*)(void))sub_10006AF90);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001603D8);
    }
  }
}

void sub_10006A7C8(uint64_t a1)
{
}

void sub_10006A7FC(uint64_t a1)
{
}

void sub_10006A844()
{
  if (!qword_1001603F0)
  {
    sub_10006A8B8();
    sub_10006A934(255);
    unint64_t v0 = sub_1001245A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001603F0);
    }
  }
}

void sub_10006A8B8()
{
  if (!qword_1001603F8)
  {
    sub_10006AC30(255, &qword_100160400, (void (*)(uint64_t))&type metadata accessor for AxisGridLine);
    unint64_t v0 = sub_100126010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001603F8);
    }
  }
}

void sub_10006A934(uint64_t a1)
{
}

void sub_10006A968()
{
  if (!qword_100160410)
  {
    sub_10006AA00();
    sub_10006AC30(255, &qword_100160438, (void (*)(uint64_t))&type metadata accessor for AxisTick);
    unint64_t v0 = sub_1001245A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160410);
    }
  }
}

void sub_10006AA00()
{
  if (!qword_100160418)
  {
    sub_10006AAFC();
    sub_10006C894(255, &qword_100160428, (uint64_t)&type metadata for Never, (uint64_t)&protocol witness table for Never, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for AxisValueLabel);
    sub_10006ABAC();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160418);
    }
  }
}

void sub_10006AAFC()
{
  if (!qword_100160420)
  {
    sub_10006C894(255, &qword_100160428, (uint64_t)&type metadata for Never, (uint64_t)&protocol witness table for Never, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for AxisValueLabel);
    sub_10006ABAC();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160420);
    }
  }
}

unint64_t sub_10006ABAC()
{
  unint64_t result = qword_100160430;
  if (!qword_100160430)
  {
    sub_10006C894(255, &qword_100160428, (uint64_t)&type metadata for Never, (uint64_t)&protocol witness table for Never, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for AxisValueLabel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160430);
  }
  return result;
}

void sub_10006AC30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v5) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

unint64_t sub_10006ACC8()
{
  unint64_t result = qword_100160440;
  if (!qword_100160440)
  {
    sub_10006A844();
    sub_10006AD8C();
    sub_10006B378(&qword_100160450, sub_10006A934, (void (*)(void))sub_10006AE40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160440);
  }
  return result;
}

unint64_t sub_10006AD8C()
{
  unint64_t result = qword_100160448;
  if (!qword_100160448)
  {
    sub_10006A8B8();
    sub_100124590();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160448);
  }
  return result;
}

unint64_t sub_10006AE40()
{
  unint64_t result = qword_100160458;
  if (!qword_100160458)
  {
    sub_10006A968();
    sub_10006AAFC();
    sub_10006C894(255, &qword_100160428, (uint64_t)&type metadata for Never, (uint64_t)&protocol witness table for Never, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for AxisValueLabel);
    sub_10006ABAC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1001247C0();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160458);
  }
  return result;
}

uint64_t sub_10006AF90()
{
  return sub_10006DBDC(&qword_100160468, sub_10006A7FC);
}

void sub_10006AFC4()
{
  if (!qword_100160470)
  {
    sub_10006A5E4();
    sub_10006B230(255);
    sub_10006A400();
    sub_10006A7C8(255);
    sub_10006A2C4();
    sub_10006C894(255, (unint64_t *)&qword_1001603C8, (uint64_t)&type metadata for Double, (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    sub_100069154();
    sub_10002FE38();
    sub_10006DBDC(&qword_1001603B0, (void (*)(uint64_t))sub_100069154);
    sub_10006A398();
    swift_getOpaqueTypeConformance2();
    sub_10006A550();
    swift_getOpaqueTypeConformance2();
    sub_10006B378(&qword_100160460, sub_10006A7C8, (void (*)(void))sub_10006AF90);
    swift_getOpaqueTypeConformance2();
    sub_10006B378(&qword_100160488, sub_10006B230, (void (*)(void))sub_10006B3E8);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160470);
    }
  }
}

void sub_10006B230(uint64_t a1)
{
}

void sub_10006B264()
{
  if (!qword_100160480)
  {
    sub_10006AA00();
    sub_10006AAFC();
    sub_10006C894(255, &qword_100160428, (uint64_t)&type metadata for Never, (uint64_t)&protocol witness table for Never, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for AxisValueLabel);
    sub_10006ABAC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_100124840();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160480);
    }
  }
}

uint64_t sub_10006B378(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006B3E8()
{
  return sub_10006DBDC(&qword_100160490, (void (*)(uint64_t))sub_10006B264);
}

void sub_10006B41C()
{
  if (!qword_100160498)
  {
    sub_10006AFC4();
    sub_10006B6D8();
    sub_10006A5E4();
    sub_10006B230(255);
    sub_10006A400();
    sub_10006A7C8(255);
    sub_10006A2C4();
    sub_10006C894(255, (unint64_t *)&qword_1001603C8, (uint64_t)&type metadata for Double, (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    sub_100069154();
    sub_10002FE38();
    sub_10006DBDC(&qword_1001603B0, (void (*)(uint64_t))sub_100069154);
    sub_10006A398();
    swift_getOpaqueTypeConformance2();
    sub_10006A550();
    swift_getOpaqueTypeConformance2();
    sub_10006B378(&qword_100160460, sub_10006A7C8, (void (*)(void))sub_10006AF90);
    swift_getOpaqueTypeConformance2();
    sub_10006B378(&qword_100160488, sub_10006B230, (void (*)(void))sub_10006B3E8);
    swift_getOpaqueTypeConformance2();
    sub_10006B738();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100160498);
    }
  }
}

void sub_10006B6D8()
{
  if (!qword_1001604A0)
  {
    sub_100124690();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001604A0);
    }
  }
}

unint64_t sub_10006B738()
{
  unint64_t result = qword_1001604A8;
  if (!qword_1001604A8)
  {
    sub_10006B6D8();
    sub_10006DBDC(&qword_1001604B0, (void (*)(uint64_t))&type metadata accessor for ChartPlotContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001604A8);
  }
  return result;
}

void sub_10006B7E0(uint64_t a1)
{
}

void sub_10006B828(uint64_t a1)
{
}

void sub_10006B85C()
{
  if (!qword_1001604C8)
  {
    sub_10006B7E0(255);
    sub_10006B8E0();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001604C8);
    }
  }
}

unint64_t sub_10006B8E0()
{
  unint64_t result = qword_1001604D0;
  if (!qword_1001604D0)
  {
    sub_10006B7E0(255);
    sub_10006AFC4();
    sub_10006B6D8();
    sub_10006A5E4();
    sub_10006B230(255);
    sub_10006A400();
    sub_10006A7C8(255);
    sub_10006A2C4();
    sub_10006C894(255, (unint64_t *)&qword_1001603C8, (uint64_t)&type metadata for Double, (uint64_t)&protocol witness table for Double, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    sub_100069154();
    sub_10002FE38();
    sub_10006DBDC(&qword_1001603B0, (void (*)(uint64_t))sub_100069154);
    sub_10006A398();
    swift_getOpaqueTypeConformance2();
    sub_10006A550();
    swift_getOpaqueTypeConformance2();
    sub_10006B378(&qword_100160460, sub_10006A7C8, (void (*)(void))sub_10006AF90);
    swift_getOpaqueTypeConformance2();
    sub_10006B378(&qword_100160488, sub_10006B230, (void (*)(void))sub_10006B3E8);
    swift_getOpaqueTypeConformance2();
    sub_10006B738();
    swift_getOpaqueTypeConformance2();
    sub_10006DBDC(&qword_1001604D8, sub_10006B828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001604D0);
  }
  return result;
}

void sub_10006BBEC()
{
  if (!qword_1001604E0)
  {
    sub_10006B85C();
    type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable(255);
    sub_10006B7E0(255);
    sub_10006B8E0();
    swift_getOpaqueTypeConformance2();
    sub_10006DBDC(&qword_1001604E8, (void (*)(uint64_t))type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001604E0);
    }
  }
}

void sub_10006BCF0()
{
  if (!qword_1001604F0)
  {
    sub_10006BBEC();
    sub_10006B85C();
    type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable(255);
    sub_10006B7E0(255);
    sub_10006B8E0();
    swift_getOpaqueTypeConformance2();
    sub_10006DBDC(&qword_1001604E8, (void (*)(uint64_t))type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001604F0);
    }
  }
}

uint64_t sub_10006BE2C@<X0>(uint64_t a1@<X8>)
{
  return sub_100062024(*(void *)(v1 + 16), a1);
}

uint64_t sub_10006BE34@<X0>(uint64_t a1@<X8>)
{
  return sub_1000624C4(*(void *)(v1 + 16), a1);
}

uint64_t sub_10006BE3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000642AC(*(void *)(v1 + 16), a1);
}

uint64_t sub_10006BE44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006BEB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006BF18(uint64_t a1)
{
  return sub_10006C248(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100064B5C);
}

uint64_t sub_10006BF30()
{
  return sub_100124C80();
}

uint64_t sub_10006BF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100067ADC(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

unint64_t sub_10006BF94()
{
  unint64_t result = qword_1001604F8;
  if (!qword_1001604F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001604F8);
  }
  return result;
}

uint64_t sub_10006BFEC()
{
  uint64_t v1 = type metadata accessor for SparklineView(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for PreparedSparkline(0);
  unint64_t v4 = v0 + v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_1001232B0();
  uint64_t v6 = *(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_10002FE38();
  v6(v4 + *(int *)(v7 + 36), v5);
  unint64_t v8 = v0 + v2 + *(int *)(v3 + 24);
  uint64_t v9 = sub_1001234F0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = v0 + v2 + *(int *)(v1 + 44);
  sub_1000608F4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_100124B70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10006C230(uint64_t a1)
{
  return sub_10006C248(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100064818);
}

uint64_t sub_10006C248(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for SparklineView(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_10006C2DC()
{
  unint64_t result = qword_100160500;
  if (!qword_100160500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160500);
  }
  return result;
}

void sub_10006C330(uint64_t a1)
{
}

uint64_t sub_10006C364()
{
  uint64_t v1 = type metadata accessor for SparklineView(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for PreparedSparkline(0);
  unint64_t v4 = v0 + v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_1001232B0();
  uint64_t v6 = *(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_10002FE38();
  v6(v4 + *(int *)(v7 + 36), v5);
  unint64_t v8 = v0 + v2 + *(int *)(v3 + 24);
  uint64_t v9 = sub_1001234F0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = v0 + v2 + *(int *)(v1 + 44);
  sub_1000608F4(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_100124B70();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10006C5A8@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SparklineView(0) - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (char *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_100062D90(a1, v6, v7, a2);
}

void sub_10006C62C()
{
  if (!qword_100160510)
  {
    sub_10006A8B8();
    sub_10006A934(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100160510);
    }
  }
}

void sub_10006C69C()
{
  if (!qword_100160518)
  {
    sub_10006AA00();
    sub_10006AC30(255, &qword_100160438, (void (*)(uint64_t))&type metadata accessor for AxisTick);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100160518);
    }
  }
}

uint64_t sub_10006C730@<X0>(uint64_t a1@<X8>)
{
  return sub_100064F84(*(void **)(v1 + 16), a1);
}

void sub_10006C738(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_10006C7BC()
{
  if (!qword_100160540)
  {
    type metadata accessor for PreparedSparkline.Entry(255);
    unint64_t v0 = sub_1001246C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160540);
    }
  }
}

void sub_10006C824()
{
  if (!qword_100160548)
  {
    type metadata accessor for PreparedSparkline.Entry(255);
    sub_1001232B0();
    unint64_t v0 = sub_1001246C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160548);
    }
  }
}

void sub_10006C894(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_10006C8E4()
{
  if (!qword_100160560)
  {
    sub_100069480(255);
    sub_100069600();
    sub_100069A50();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_100160560);
    }
  }
}

void *sub_10006C96C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PreparedSparkline(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (void *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)v4;
    uint64_t v8 = *(int *)(v4 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001232B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    sub_10002FE38();
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
    uint64_t v14 = v7[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
    uint64_t v18 = v7[8];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
  }
  return a1;
}

uint64_t sub_10006CB08(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for PreparedSparkline(0);
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  uint64_t v4 = sub_1001232B0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  sub_10002FE38();
  v5(v3 + *(int *)(v6 + 36), v4);
  uint64_t v7 = a1 + *(int *)(v2 + 24);
  uint64_t v8 = sub_1001234F0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

void *sub_10006CBFC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001232B0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  sub_10002FE38();
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  uint64_t v11 = v4[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
  uint64_t v15 = v4[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
  return a1;
}

void *sub_10006CD4C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001232B0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24);
  v9(v6, v7, v8);
  sub_10002FE38();
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  uint64_t v11 = v4[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v4[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  uint64_t v18 = v4[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  char v21 = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v21;
  *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
  return a1;
}

void *sub_10006CEAC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001232B0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  sub_10002FE38();
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  uint64_t v11 = v4[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
  uint64_t v15 = v4[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
  return a1;
}

void *sub_10006CFEC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1001232B0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40);
  v9(v6, v7, v8);
  sub_10002FE38();
  v9(&v6[*(int *)(v10 + 36)], &v7[*(int *)(v10 + 36)], v8);
  uint64_t v11 = v4[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
  uint64_t v15 = v4[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = *(void *)v17;
  *((unsigned char *)a1 + v4[9]) = *((unsigned char *)a2 + v4[9]);
  return a1;
}

uint64_t sub_10006D134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006D148);
}

uint64_t sub_10006D148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10006D1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006D1C8);
}

uint64_t sub_10006D1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreparedSparkline(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10006D238()
{
  uint64_t result = type metadata accessor for PreparedSparkline(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SparklineView.WidgetAccentabilityMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006D390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SparklineView.WidgetAccentabilityMode()
{
  return &type metadata for SparklineView.WidgetAccentabilityMode;
}

uint64_t sub_10006D3C8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10006D4D4()
{
  unint64_t result = qword_1001605F8;
  if (!qword_1001605F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001605F8);
  }
  return result;
}

uint64_t sub_10006D528()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable(0)
                                      - 8)
                          + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for PreparedSparkline(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = sub_1001232B0();
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_10002FE38();
  v6(v4 + *(int *)(v7 + 36), v5);
  uint64_t v8 = v2 + *(int *)(v3 + 24);
  uint64_t v9 = sub_1001234F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_deallocObject();
}

uint64_t sub_10006D698()
{
  uint64_t v1 = *(void *)(type metadata accessor for SparklineViewAccessibilityChartDescriptorRepresentable(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100067650(v2);
}

void sub_10006D708(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_100126500();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

AXDataPoint sub_10006D750@<X0>(uint64_t a1@<X0>, AXDataPoint *a2@<X8>)
{
  return sub_10006798C(a1, a2);
}

void sub_10006D770(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_10006D7D4(uint64_t a1)
{
  uint64_t v2 = sub_100123490();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10006DB48();
    uint64_t v9 = sub_1001260C0();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_10006DBDC(&qword_100160628, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_100125A30();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_10006DBDC(&qword_100160630, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_100125A90();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10006DAE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10006DB48()
{
  if (!qword_100160620)
  {
    sub_100123490();
    sub_10006DBDC(&qword_100160628, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
    unint64_t v0 = sub_1001260D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160620);
    }
  }
}

uint64_t sub_10006DBDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10006DC28(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001232B0();
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    uint64_t v67 = v7;
    ((void (*)(void *, void *))v66)(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    *(void *)uint64_t v9 = *(void *)((char *)a2 + v8);
    *((void *)v9 + 1) = v11;
    uint64_t v12 = *(void *)((char *)a2 + v8 + 24);
    *((void *)v9 + 2) = *(void *)((char *)a2 + v8 + 16);
    *((void *)v9 + 3) = v12;
    uint64_t v13 = *(void *)((char *)a2 + v8 + 40);
    *((void *)v9 + 4) = *(void *)((char *)a2 + v8 + 32);
    *((void *)v9 + 5) = v13;
    uint64_t v14 = (_OWORD *)((char *)a1 + v8 + 48);
    uint64_t v15 = (_OWORD *)((char *)a2 + v8 + 48);
    uint64_t v16 = *(void *)((char *)a2 + v8 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v68 = a3;
    uint64_t v69 = a2;
    if (v16 == 1)
    {
      long long v17 = *((_OWORD *)v10 + 4);
      _OWORD *v14 = *v15;
      *((_OWORD *)v9 + 4) = v17;
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      v9[56] = v10[56];
      *((void *)v9 + 8) = *((void *)v10 + 8);
      *((void *)v9 + 9) = v16;
      swift_bridgeObjectRetain();
    }
    *((void *)v9 + 10) = *((void *)v10 + 10);
    v9[88] = v10[88];
    uint64_t v19 = *((void *)v10 + 13);
    *((void *)v9 + 12) = *((void *)v10 + 12);
    *((void *)v9 + 13) = v19;
    *((void *)v9 + 14) = *((void *)v10 + 14);
    v9[120] = v10[120];
    *((void *)v9 + 16) = *((void *)v10 + 16);
    v9[136] = v10[136];
    v9[137] = v10[137];
    uint64_t v70 = (int *)type metadata accessor for DetailContentViewModel(0);
    uint64_t v20 = v70[9];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    char v23 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v24 = *((void *)v23 - 1);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, int *))(v24 + 48);
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      sub_100072A38(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v21 = *(void *)v22;
      uint64_t v27 = v23[5];
      BOOL v28 = &v21[v27];
      uint64_t v29 = &v22[v27];
      uint64_t v64 = &v21[v27];
      uint64_t v65 = &v22[v27];
      swift_bridgeObjectRetain();
      v66(v28, v29, v67);
      sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
      v66(&v64[*(int *)(v30 + 36)], &v65[*(int *)(v30 + 36)], v67);
      uint64_t v31 = v23[6];
      uint64_t v32 = &v21[v31];
      uint64_t v33 = &v22[v31];
      uint64_t v34 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      *(_OWORD *)&v21[v23[7]] = *(_OWORD *)&v22[v23[7]];
      uint64_t v35 = v23[8];
      uint64_t v36 = &v21[v35];
      uint64_t v37 = &v22[v35];
      *(void *)uint64_t v36 = *(void *)v37;
      v36[8] = v37[8];
      v21[v23[9]] = v22[v23[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
    }
    *(void *)&v9[v70[10]] = *(void *)&v10[v70[10]];
    uint64_t v38 = v70[11];
    uint64_t v39 = &v9[v38];
    uint64_t v40 = &v10[v38];
    sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v42 = v41;
    uint64_t v43 = *(void *)(v41 - 8);
    uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    swift_bridgeObjectRetain();
    if (v44(v40, 1, v42))
    {
      sub_100029100();
      memcpy(v39, v40, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v39, v40, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
    }
    uint64_t v46 = v70[12];
    double v47 = &v9[v46];
    double v48 = &v10[v46];
    uint64_t v49 = sub_100123150();
    uint64_t v50 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      sub_100072A38(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    uint64_t v52 = v68[6];
    unint64_t v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)v69 + v52;
    uint64_t v55 = sub_100123670();
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      sub_100029068(0);
      memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    uint64_t v58 = v68[7];
    uint64_t v59 = (char *)a1 + v58;
    uint64_t v60 = (char *)v69 + v58;
    uint64_t v61 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    uint64_t v62 = v68[9];
    *((unsigned char *)a1 + v68[8]) = *((unsigned char *)v69 + v68[8]);
    *((unsigned char *)a1 + v62) = *((unsigned char *)v69 + v62);
  }
  return a1;
}

void sub_10006E380(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_10006E400(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006E448(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1001232B0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v8 = v6 + v7[9];
  uint64_t v9 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    v5(v10, v4);
    sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    v5(v10 + *(int *)(v11 + 36), v4);
    uint64_t v12 = v8 + *(int *)(v9 + 24);
    uint64_t v13 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = v6 + v7[11];
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  uint64_t v18 = v6 + v7[12];
  uint64_t v19 = sub_100123150();
  uint64_t v20 = *(void *)(v19 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  }
  uint64_t v21 = a1 + a2[6];
  uint64_t v22 = sub_100123670();
  uint64_t v23 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  uint64_t v24 = a1 + a2[7];
  uint64_t v25 = sub_1001238A0();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);

  return v26(v24, v25);
}

uint64_t sub_10006E858(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001232B0();
  uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v62(a1, a2, v6);
  uint64_t v64 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  uint64_t v11 = *(void *)(a2 + v7 + 24);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 24) = v11;
  uint64_t v12 = *(void *)(a2 + v7 + 40);
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  *(void *)(v8 + 40) = v12;
  uint64_t v13 = (_OWORD *)(a1 + v7 + 48);
  uint64_t v14 = (_OWORD *)(a2 + v7 + 48);
  uint64_t v15 = *(void *)(a2 + v7 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v65 = a2;
  uint64_t v66 = a1;
  if (v15 == 1)
  {
    long long v16 = *(_OWORD *)(v9 + 64);
    *uint64_t v13 = *v14;
    *(_OWORD *)(v8 + 64) = v16;
  }
  else
  {
    *(void *)uint64_t v13 = *(void *)v14;
    *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
    *(void *)(v8 + 64) = *(void *)(v9 + 64);
    *(void *)(v8 + 72) = v15;
    swift_bridgeObjectRetain();
  }
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(v9 + 88);
  uint64_t v17 = *(void *)(v9 + 104);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = v17;
  *(void *)(v8 + 112) = *(void *)(v9 + 112);
  *(unsigned char *)(v8 + 120) = *(unsigned char *)(v9 + 120);
  *(void *)(v8 + 128) = *(void *)(v9 + 128);
  *(unsigned char *)(v8 + 136) = *(unsigned char *)(v9 + 136);
  *(unsigned char *)(v8 + 137) = *(unsigned char *)(v9 + 137);
  uint64_t v63 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v18 = v63[9];
  uint64_t v19 = (void *)(v8 + v18);
  uint64_t v20 = (void *)(v9 + v18);
  uint64_t v21 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(unsigned int (**)(void *, uint64_t, int *))(v22 + 48);
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    sub_100072A38(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    uint64_t v25 = v21[5];
    uint64_t v26 = (char *)v19 + v25;
    uint64_t v27 = (char *)v20 + v25;
    swift_bridgeObjectRetain();
    v62((uint64_t)v26, (uint64_t)v27, v6);
    sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    v62((uint64_t)&v26[*(int *)(v28 + 36)], (uint64_t)&v27[*(int *)(v28 + 36)], v6);
    uint64_t v29 = v21[6];
    uint64_t v30 = (char *)v19 + v29;
    uint64_t v31 = (char *)v20 + v29;
    uint64_t v32 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    *(_OWORD *)((char *)v19 + v21[7]) = *(_OWORD *)((char *)v20 + v21[7]);
    uint64_t v33 = v21[8];
    uint64_t v34 = (char *)v19 + v33;
    uint64_t v35 = (char *)v20 + v33;
    *(void *)uint64_t v34 = *(void *)v35;
    v34[8] = v35[8];
    *((unsigned char *)v19 + v21[9]) = *((unsigned char *)v20 + v21[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  *(void *)(v8 + v63[10]) = *(void *)(v9 + v63[10]);
  uint64_t v36 = v63[11];
  uint64_t v37 = (void *)(v8 + v36);
  uint64_t v38 = (const void *)(v9 + v36);
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v40 = v39;
  uint64_t v41 = *(void *)(v39 - 8);
  uint64_t v42 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48);
  swift_bridgeObjectRetain();
  if (v42(v38, 1, v40))
  {
    sub_100029100();
    memcpy(v37, v38, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(v37, v38, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
  }
  uint64_t v44 = v63[12];
  uint64_t v45 = (void *)(v8 + v44);
  uint64_t v46 = (const void *)(v9 + v44);
  uint64_t v47 = sub_100123150();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    sub_100072A38(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  uint64_t v50 = v64[6];
  uint64_t v51 = (void *)(v66 + v50);
  uint64_t v52 = (const void *)(v65 + v50);
  uint64_t v53 = sub_100123670();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    sub_100029068(0);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v54 + 16))(v51, v52, v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  uint64_t v56 = v64[7];
  uint64_t v57 = v66 + v56;
  uint64_t v58 = v65 + v56;
  uint64_t v59 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
  uint64_t v60 = v64[9];
  *(unsigned char *)(v66 + v64[8]) = *(unsigned char *)(v65 + v64[8]);
  *(unsigned char *)(v66 + v60) = *(unsigned char *)(v65 + v60);
  return v66;
}

uint64_t sub_10006EF5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001232B0();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 24);
  v91(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (_OWORD *)(v8 + 48);
  uint64_t v11 = (_OWORD *)(v9 + 48);
  uint64_t v12 = *(void *)(v9 + 72);
  uint64_t v95 = a2;
  uint64_t v96 = a1;
  uint64_t v94 = a3;
  if (*(void *)(v8 + 72) == 1)
  {
    if (v12 == 1)
    {
      long long v13 = *(_OWORD *)(v9 + 64);
      *uint64_t v10 = *v11;
      *(_OWORD *)(v8 + 64) = v13;
    }
    else
    {
      uint64_t v15 = *(void *)v11;
      *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
      *(void *)uint64_t v10 = v15;
      *(void *)(v8 + 64) = *(void *)(v9 + 64);
      *(void *)(v8 + 72) = *(void *)(v9 + 72);
      swift_bridgeObjectRetain();
    }
  }
  else if (v12 == 1)
  {
    sub_10003088C(v8 + 48);
    long long v14 = *(_OWORD *)(v9 + 64);
    *uint64_t v10 = *v11;
    *(_OWORD *)(v8 + 64) = v14;
  }
  else
  {
    uint64_t v16 = *(void *)v11;
    *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
    *(void *)uint64_t v10 = v16;
    *(void *)(v8 + 64) = *(void *)(v9 + 64);
    *(void *)(v8 + 72) = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(void *)(v9 + 80);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(v9 + 88);
  *(void *)(v8 + 80) = v17;
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v9 + 112);
  *(unsigned char *)(v8 + 120) = *(unsigned char *)(v9 + 120);
  *(void *)(v8 + 112) = v18;
  uint64_t v19 = *(void *)(v9 + 128);
  *(unsigned char *)(v8 + 136) = *(unsigned char *)(v9 + 136);
  *(void *)(v8 + 128) = v19;
  *(unsigned char *)(v8 + 137) = *(unsigned char *)(v9 + 137);
  unint64_t v97 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v20 = v97[9];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = (void *)(v9 + v20);
  uint64_t v23 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v24 = *((void *)v23 - 1);
  uint64_t v25 = *(uint64_t (**)(void *, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      void *v21 = *v22;
      uint64_t v28 = v23[5];
      uint64_t v29 = (char *)v21 + v28;
      uint64_t v90 = (char *)v22 + v28;
      uint64_t v92 = (char *)v21 + v28;
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
      swift_bridgeObjectRetain();
      v30(v29, v90, v6);
      sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
      v30(&v92[*(int *)(v31 + 36)], &v90[*(int *)(v31 + 36)], v6);
      uint64_t v32 = v23[6];
      uint64_t v33 = (char *)v21 + v32;
      uint64_t v34 = (char *)v22 + v32;
      uint64_t v35 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      *(_OWORD *)((char *)v21 + v23[7]) = *(_OWORD *)((char *)v22 + v23[7]);
      uint64_t v36 = v23[8];
      uint64_t v37 = (char *)v21 + v36;
      uint64_t v38 = (char *)v22 + v36;
      char v39 = v38[8];
      *(void *)uint64_t v37 = *(void *)v38;
      v37[8] = v39;
      *((unsigned char *)v21 + v23[9]) = *((unsigned char *)v22 + v23[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v27)
  {
    sub_1000728D8((uint64_t)v21, type metadata accessor for PreparedSparkline);
LABEL_13:
    sub_100072A38(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v21, v22, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_14;
  }
  void *v21 = *v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v75 = v23[5];
  uint64_t v76 = (char *)v21 + v75;
  uint64_t v77 = (char *)v22 + v75;
  v91((uint64_t)v21 + v75, (uint64_t)v22 + v75, v6);
  sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
  v91((uint64_t)&v76[*(int *)(v78 + 36)], (uint64_t)&v77[*(int *)(v78 + 36)], v6);
  uint64_t v79 = v23[6];
  double v80 = (char *)v21 + v79;
  uint64_t v81 = (char *)v22 + v79;
  uint64_t v82 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
  uint64_t v83 = v23[7];
  uint64_t v84 = (void *)((char *)v21 + v83);
  uint64_t v85 = (void *)((char *)v22 + v83);
  *uint64_t v84 = *v85;
  v84[1] = v85[1];
  uint64_t v86 = v23[8];
  uint64_t v87 = (char *)v21 + v86;
  uint64_t v88 = (char *)v22 + v86;
  char v89 = v88[8];
  *(void *)uint64_t v87 = *(void *)v88;
  v87[8] = v89;
  *((unsigned char *)v21 + v23[9]) = *((unsigned char *)v22 + v23[9]);
LABEL_14:
  *(void *)(v8 + v97[10]) = *(void *)(v9 + v97[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v97[11];
  uint64_t v42 = (void *)(v8 + v41);
  uint64_t v43 = (void *)(v9 + v41);
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v45 = v44;
  uint64_t v46 = *(void *)(v44 - 8);
  uint64_t v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  int v48 = v47(v42, 1, v44);
  int v49 = v47(v43, 1, v45);
  if (v48)
  {
    uint64_t v50 = v95;
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v42, v43, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v42, 0, 1, v45);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  uint64_t v50 = v95;
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v42, v45);
LABEL_19:
    sub_100029100();
    memcpy(v42, v43, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v42, v43, v45);
LABEL_20:
  uint64_t v52 = v97[12];
  uint64_t v53 = (void *)(v8 + v52);
  uint64_t v54 = (void *)(v9 + v52);
  uint64_t v55 = sub_100123150();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v56 + 48);
  int v58 = v57(v53, 1, v55);
  int v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v56 + 8))(v53, v55);
LABEL_25:
    sub_100072A38(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v53, v54, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v56 + 24))(v53, v54, v55);
LABEL_26:
  uint64_t v61 = v94[6];
  uint64_t v62 = (void *)(v96 + v61);
  uint64_t v63 = (void *)(v50 + v61);
  uint64_t v64 = sub_100123670();
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v65 + 48);
  int v67 = v66(v62, 1, v64);
  int v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v65 + 24))(v62, v63, v64);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v65 + 8))(v62, v64);
    goto LABEL_31;
  }
  if (v68)
  {
LABEL_31:
    sub_100029068(0);
    memcpy(v62, v63, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v65 + 16))(v62, v63, v64);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
LABEL_32:
  uint64_t v70 = v94[7];
  uint64_t v71 = v96 + v70;
  uint64_t v72 = v50 + v70;
  uint64_t v73 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  *(unsigned char *)(v96 + v94[8]) = *(unsigned char *)(v50 + v94[8]);
  *(unsigned char *)(v96 + v94[9]) = *(unsigned char *)(v50 + v94[9]);
  return v96;
}

uint64_t sub_10006F9D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001232B0();
  uint64_t v7 = (void (**)(void))(*(void *)(v6 - 8) + 32);
  uint64_t v62 = *v7;
  ((void (*)(uint64_t, uint64_t, uint64_t))*v7)(a1, a2, v6);
  uint64_t v64 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(a2 + v8 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(v9 + 16) = v11;
  long long v12 = *(_OWORD *)(a2 + v8 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(a2 + v8 + 32);
  *(_OWORD *)(v9 + 48) = v12;
  *(_OWORD *)(v9 + 121) = *(_OWORD *)(a2 + v8 + 121);
  long long v13 = *(_OWORD *)(a2 + v8 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(a2 + v8 + 96);
  *(_OWORD *)(v9 + 112) = v13;
  long long v14 = *(_OWORD *)(a2 + v8 + 80);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(a2 + v8 + 64);
  *(_OWORD *)(v9 + 80) = v14;
  *(unsigned char *)(v9 + 137) = *(unsigned char *)(a2 + v8 + 137);
  uint64_t v63 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v15 = v63[9];
  uint64_t v16 = (void *)(v9 + v15);
  uint64_t v17 = (void *)(v10 + v15);
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    sub_100072A38(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    uint64_t v21 = v18[5];
    uint64_t v60 = a2;
    uint64_t v61 = a1;
    int v59 = (char *)v16 + v21;
    uint64_t v22 = (char *)v17 + v21;
    v62();
    sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    uint64_t v24 = *(int *)(v23 + 36);
    uint64_t v25 = &v22[v24];
    a2 = v60;
    ((void (*)(char *, char *, uint64_t))v62)(&v59[v24], v25, v6);
    uint64_t v26 = v18[6];
    int v27 = (char *)v16 + v26;
    uint64_t v28 = (char *)v17 + v26;
    uint64_t v29 = sub_1001234F0();
    uint64_t v30 = v28;
    a1 = v61;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v30, v29);
    *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
    uint64_t v31 = v18[8];
    uint64_t v32 = (char *)v16 + v31;
    uint64_t v33 = (char *)v17 + v31;
    *(void *)uint64_t v32 = *(void *)v33;
    v32[8] = v33[8];
    *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  *(void *)(v9 + v63[10]) = *(void *)(v10 + v63[10]);
  uint64_t v34 = v63[11];
  uint64_t v35 = (void *)(v9 + v34);
  uint64_t v36 = (const void *)(v10 + v34);
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v38 = v37;
  uint64_t v39 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v36, 1, v37))
  {
    sub_100029100();
    memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v35, v36, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v38);
  }
  uint64_t v41 = v63[12];
  uint64_t v42 = (void *)(v9 + v41);
  uint64_t v43 = (const void *)(v10 + v41);
  uint64_t v44 = sub_100123150();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    sub_100072A38(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  uint64_t v47 = v64[6];
  int v48 = (void *)(a1 + v47);
  int v49 = (const void *)(a2 + v47);
  uint64_t v50 = sub_100123670();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    sub_100029068(0);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v51 + 32))(v48, v49, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  uint64_t v53 = v64[7];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
  uint64_t v57 = v64[9];
  *(unsigned char *)(a1 + v64[8]) = *(unsigned char *)(a2 + v64[8]);
  *(unsigned char *)(a1 + v57) = *(unsigned char *)(a2 + v57);
  return a1;
}

uint64_t sub_10007004C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001232B0();
  uint64_t v86 = *(void *)(v6 - 8);
  uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 40);
  v84(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v12;
  swift_bridgeObjectRelease();
  long long v13 = (_OWORD *)(v8 + 48);
  long long v14 = (_OWORD *)(v9 + 48);
  uint64_t v88 = a2;
  uint64_t v89 = a1;
  uint64_t v87 = a3;
  if (*(void *)(v8 + 72) == 1) {
    goto LABEL_4;
  }
  uint64_t v15 = *(void *)(v9 + 72);
  if (v15 == 1)
  {
    sub_10003088C(v8 + 48);
LABEL_4:
    long long v16 = *(_OWORD *)(v9 + 64);
    *long long v13 = *v14;
    *(_OWORD *)(v8 + 64) = v16;
    goto LABEL_6;
  }
  *(void *)long long v13 = *(void *)v14;
  *(unsigned char *)(v8 + 56) = *(unsigned char *)(v9 + 56);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(v9 + 88);
  uint64_t v17 = *(void *)(v9 + 104);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = v17;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 112) = *(void *)(v9 + 112);
  *(unsigned char *)(v8 + 120) = *(unsigned char *)(v9 + 120);
  *(void *)(v8 + 128) = *(void *)(v9 + 128);
  *(_WORD *)(v8 + 136) = *(_WORD *)(v9 + 136);
  uint64_t v90 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v18 = v90[9];
  uint64_t v19 = (void *)(v8 + v18);
  uint64_t v20 = (void *)(v9 + v18);
  uint64_t v21 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      *uint64_t v19 = *v20;
      uint64_t v26 = v21[5];
      uint64_t v85 = (char *)v19 + v26;
      int v27 = (char *)v20 + v26;
      uint64_t v28 = *(void (**)(void))(v86 + 32);
      v28();
      sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
      ((void (*)(char *, char *, uint64_t))v28)(&v85[*(int *)(v29 + 36)], &v27[*(int *)(v29 + 36)], v6);
      uint64_t v30 = v21[6];
      uint64_t v31 = (char *)v19 + v30;
      uint64_t v32 = (char *)v20 + v30;
      uint64_t v33 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      *(_OWORD *)((char *)v19 + v21[7]) = *(_OWORD *)((char *)v20 + v21[7]);
      uint64_t v34 = v21[8];
      uint64_t v35 = (char *)v19 + v34;
      uint64_t v36 = (char *)v20 + v34;
      *(void *)uint64_t v35 = *(void *)v36;
      v35[8] = v36[8];
      *((unsigned char *)v19 + v21[9]) = *((unsigned char *)v20 + v21[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v25)
  {
    sub_1000728D8((uint64_t)v19, type metadata accessor for PreparedSparkline);
LABEL_11:
    sub_100072A38(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v19, v20, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_12;
  }
  *uint64_t v19 = *v20;
  swift_bridgeObjectRelease();
  uint64_t v73 = v21[5];
  uint64_t v74 = (char *)v19 + v73;
  uint64_t v75 = (char *)v20 + v73;
  v84((uint64_t)v19 + v73, (uint64_t)v20 + v73, v6);
  sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
  v84((uint64_t)&v74[*(int *)(v76 + 36)], (uint64_t)&v75[*(int *)(v76 + 36)], v6);
  uint64_t v77 = v21[6];
  uint64_t v78 = (char *)v19 + v77;
  uint64_t v79 = (char *)v20 + v77;
  uint64_t v80 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 40))(v78, v79, v80);
  *(_OWORD *)((char *)v19 + v21[7]) = *(_OWORD *)((char *)v20 + v21[7]);
  uint64_t v81 = v21[8];
  uint64_t v82 = (char *)v19 + v81;
  uint64_t v83 = (char *)v20 + v81;
  v82[8] = v83[8];
  *(void *)uint64_t v82 = *(void *)v83;
  *((unsigned char *)v19 + v21[9]) = *((unsigned char *)v20 + v21[9]);
LABEL_12:
  *(void *)(v8 + v90[10]) = *(void *)(v9 + v90[10]);
  swift_bridgeObjectRelease();
  uint64_t v38 = v90[11];
  uint64_t v39 = (void *)(v8 + v38);
  uint64_t v40 = (void *)(v9 + v38);
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v42 = v41;
  uint64_t v43 = *(void *)(v41 - 8);
  uint64_t v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
  int v45 = v44(v39, 1, v41);
  int v46 = v44(v40, 1, v42);
  if (v45)
  {
    uint64_t v47 = v88;
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v43 + 32))(v39, v40, v42);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v47 = v88;
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v39, v42);
LABEL_17:
    sub_100029100();
    memcpy(v39, v40, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v43 + 40))(v39, v40, v42);
LABEL_18:
  uint64_t v49 = v90[12];
  uint64_t v50 = (void *)(v8 + v49);
  uint64_t v51 = (void *)(v9 + v49);
  uint64_t v52 = sub_100123150();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v53 + 48);
  int v55 = v54(v50, 1, v52);
  int v56 = v54(v51, 1, v52);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, void *, uint64_t))(v53 + 32))(v50, v51, v52);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v56)
  {
    (*(void (**)(void *, uint64_t))(v53 + 8))(v50, v52);
LABEL_23:
    sub_100072A38(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v50, v51, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v53 + 40))(v50, v51, v52);
LABEL_24:
  uint64_t v58 = v87[6];
  int v59 = (void *)(v89 + v58);
  uint64_t v60 = (void *)(v47 + v58);
  uint64_t v61 = sub_100123670();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
  int v64 = v63(v59, 1, v61);
  int v65 = v63(v60, 1, v61);
  if (!v64)
  {
    if (!v65)
    {
      (*(void (**)(void *, void *, uint64_t))(v62 + 40))(v59, v60, v61);
      goto LABEL_30;
    }
    (*(void (**)(void *, uint64_t))(v62 + 8))(v59, v61);
    goto LABEL_29;
  }
  if (v65)
  {
LABEL_29:
    sub_100029068(0);
    memcpy(v59, v60, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v62 + 32))(v59, v60, v61);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
LABEL_30:
  uint64_t v67 = v87[7];
  uint64_t v68 = v89 + v67;
  uint64_t v69 = v47 + v67;
  uint64_t v70 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
  uint64_t v71 = v87[9];
  *(unsigned char *)(v89 + v87[8]) = *(unsigned char *)(v47 + v87[8]);
  *(unsigned char *)(v89 + v71) = *(unsigned char *)(v47 + v71);
  return v89;
}

uint64_t sub_100070A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100070A14);
}

uint64_t sub_100070A14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001232B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = type metadata accessor for DetailContentViewModel(0);
    if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
    {
      uint64_t v8 = v11;
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = a3[5];
    }
    else
    {
      sub_100029068(0);
      if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
      {
        uint64_t v8 = v14;
        uint64_t v12 = *(void *)(v14 - 8);
        uint64_t v13 = a3[6];
      }
      else
      {
        uint64_t v15 = sub_1001238A0();
        if (*(_DWORD *)(*(void *)(v15 - 8) + 84) != a2)
        {
          unsigned int v17 = *(unsigned __int8 *)(a1 + a3[8]);
          if (v17 >= 2) {
            return ((v17 + 2147483646) & 0x7FFFFFFF) + 1;
          }
          else {
            return 0;
          }
        }
        uint64_t v8 = v15;
        uint64_t v12 = *(void *)(v15 - 8);
        uint64_t v13 = a3[7];
      }
    }
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_100070BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100070BE4);
}

uint64_t sub_100070BE4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1001232B0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for DetailContentViewModel(0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      sub_100029068(0);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[6];
      }
      else
      {
        uint64_t result = sub_1001238A0();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(unsigned char *)(a1 + a4[8]) = a2 + 1;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[7];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for DetailTimelineEntry()
{
  uint64_t result = qword_100160690;
  if (!qword_100160690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100070DD8()
{
  sub_1001232B0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DetailContentViewModel(319);
    if (v1 <= 0x3F)
    {
      sub_100029068(319);
      if (v2 <= 0x3F)
      {
        sub_1001238A0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_100070F24@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v52 = a2;
  uint64_t v51 = a3;
  uint64_t v4 = sub_1001232B0();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  __chkstk_darwin(v4);
  int v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001238A0();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  __chkstk_darwin(v6);
  int v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029068(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v44 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001258F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v42 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v41 = type metadata accessor for DetailContentViewModel(0);
  uint64_t v16 = __chkstk_darwin(v41);
  uint64_t v43 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v41 - v18;
  int v20 = enum case for WidgetFamily.accessoryRectangular(_:);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v15, enum case for WidgetFamily.accessoryRectangular(_:), v10);
  sub_10006E400(&qword_10015FB40, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  uint64_t v21 = a1;
  sub_100125C60();
  sub_100125C60();
  uint64_t v23 = v53;
  uint64_t v22 = v54;
  int v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v15, v10);
  if (v22 == v23)
  {
    if (qword_10015D550 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_100019244(v41, (uint64_t)qword_100172640);
    sub_100072A9C(v25, (uint64_t)v19, type metadata accessor for DetailContentViewModel);
  }
  else
  {
    uint64_t v26 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v42, v21, v10);
    int v27 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v26, v10);
    BOOL v29 = v27 == enum case for WidgetFamily.accessoryCircular(_:)
       || v27 == v20
       || v27 == enum case for WidgetFamily.accessoryInline(_:);
    char v30 = v29;
    if (!v29) {
      v24(v26, v10);
    }
    sub_100081498(v30, (uint64_t)v19);
  }
  uint64_t v31 = v43;
  sub_100072A9C((uint64_t)v19, v43, type metadata accessor for DetailContentViewModel);
  uint64_t v32 = sub_100123670();
  uint64_t v33 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v44, 1, 1, v32);
  uint64_t v35 = v49;
  uint64_t v34 = v50;
  uint64_t v36 = v46;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v46, enum case for PriceChangeDisplay.currency(_:), v50);
  uint64_t v37 = v45;
  sub_1001232A0();
  sub_1000728D8((uint64_t)v19, type metadata accessor for DetailContentViewModel);
  uint64_t v38 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v51, v37, v48);
  uint64_t v39 = (int *)type metadata accessor for DetailTimelineEntry();
  sub_100072938(v31, v38 + v39[5], type metadata accessor for DetailContentViewModel);
  sub_100072938(v33, v38 + v39[6], (uint64_t (*)(void))sub_100029068);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v38 + v39[7], v36, v34);
  *(unsigned char *)(v38 + v39[8]) = 1;
  *(unsigned char *)(v38 + v39[9]) = v52 & 1;
  return result;
}

uint64_t sub_1000714C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v2 = type metadata accessor for DetailTimelineEntry();
  __chkstk_darwin(v2);
  uint64_t v39 = (uint64_t)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001236A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v36[0] = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000729A0();
  uint64_t v8 = v7;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029068(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100072A04(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v37 = (uint64_t)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v36 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v36 - v20;
  v36[1] = v2;
  uint64_t v22 = *(int *)(v2 + 24);
  uint64_t v38 = v1;
  sub_100072A9C(v1 + v22, (uint64_t)v13, (uint64_t (*)(void))sub_100029068);
  uint64_t v23 = sub_100123670();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v13, 1, v23) == 1)
  {
    sub_1000728D8((uint64_t)v13, (uint64_t (*)(void))sub_100029068);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v25(v21, 1, 1, v4);
  }
  else
  {
    sub_100123610();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v23);
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v25(v21, 0, 1, v4);
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v18, enum case for ExchangeStatus.open(_:), v4);
  v25(v18, 0, 1, v4);
  uint64_t v26 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_100072A9C((uint64_t)v21, (uint64_t)v10, (uint64_t (*)(void))sub_100072A04);
  sub_100072A9C((uint64_t)v18, v26, (uint64_t (*)(void))sub_100072A04);
  int v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v27((uint64_t)v10, 1, v4) != 1)
  {
    uint64_t v29 = v37;
    sub_100072A9C((uint64_t)v10, v37, (uint64_t (*)(void))sub_100072A04);
    if (v27(v26, 1, v4) != 1)
    {
      uint64_t v30 = v29;
      uint64_t v31 = v36[0];
      (*(void (**)(void, uint64_t, uint64_t))(v5 + 32))(v36[0], v26, v4);
      sub_10006E400(&qword_1001606E8, (void (*)(uint64_t))&type metadata accessor for ExchangeStatus);
      sub_100125A90();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v32(v31, v4);
      sub_1000728D8((uint64_t)v18, (uint64_t (*)(void))sub_100072A04);
      sub_1000728D8((uint64_t)v21, (uint64_t (*)(void))sub_100072A04);
      v32(v30, v4);
      sub_1000728D8((uint64_t)v10, (uint64_t (*)(void))sub_100072A04);
      uint64_t v28 = v39;
      sub_100072A9C(v38, v39, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
      goto LABEL_11;
    }
    sub_1000728D8((uint64_t)v18, (uint64_t (*)(void))sub_100072A04);
    sub_1000728D8((uint64_t)v21, (uint64_t (*)(void))sub_100072A04);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
    goto LABEL_9;
  }
  sub_1000728D8((uint64_t)v18, (uint64_t (*)(void))sub_100072A04);
  sub_1000728D8((uint64_t)v21, (uint64_t (*)(void))sub_100072A04);
  if (v27(v26, 1, v4) != 1)
  {
LABEL_9:
    sub_1000728D8((uint64_t)v10, (uint64_t (*)(void))sub_1000729A0);
    uint64_t v28 = v39;
    sub_100072A9C(v38, v39, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
    goto LABEL_11;
  }
  sub_1000728D8((uint64_t)v10, (uint64_t (*)(void))sub_100072A04);
  uint64_t v28 = v39;
  sub_100072A9C(v38, v39, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
LABEL_11:
  sub_1000728D8(v28, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
  uint64_t v33 = v40;
  sub_100125960();
  uint64_t v34 = sub_100125970();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
}

unint64_t sub_100071BAC(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 2:
      unint64_t result = 0x65746F7571;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0x726F7272457369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100071C74(void *a1)
{
  sub_100072B58(0, &qword_100160720, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v7 = &v9[-v6];
  sub_100009D98(a1, a1[3]);
  sub_100072B04();
  sub_100126650();
  v9[15] = 0;
  sub_1001232B0();
  sub_10006E400(&qword_100160728, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001264C0();
  if (!v1)
  {
    type metadata accessor for DetailTimelineEntry();
    v9[14] = 1;
    type metadata accessor for DetailContentViewModel(0);
    sub_10006E400(&qword_100160730, (void (*)(uint64_t))type metadata accessor for DetailContentViewModel);
    sub_1001264C0();
    v9[13] = 2;
    sub_100123670();
    sub_10006E400(&qword_100160738, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    sub_100126470();
    v9[12] = 3;
    sub_1001238A0();
    sub_10006E400(&qword_100160740, (void (*)(uint64_t))&type metadata accessor for PriceChangeDisplay);
    sub_1001264C0();
    v9[11] = 4;
    sub_100126490();
    v9[10] = 5;
    sub_100126490();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100071FD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v40 = sub_1001238A0();
  uint64_t v34 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v30 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029068(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v31 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DetailContentViewModel(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001232B0();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100072B58(0, &qword_1001606F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v32 = *(void *)(v12 - 8);
  uint64_t v33 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v37 = type metadata accessor for DetailTimelineEntry();
  __chkstk_darwin(v37);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001232A0();
  uint64_t v17 = a1[3];
  uint64_t v36 = a1;
  sub_100009D98(a1, v17);
  sub_100072B04();
  uint64_t v35 = v14;
  uint64_t v18 = v39;
  sub_100126640();
  if (v18)
  {
    uint64_t v19 = v9;
    uint64_t v21 = v38;
    sub_100009D48((uint64_t)v36);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v16, v19);
  }
  else
  {
    uint64_t v20 = (uint64_t)v8;
    char v46 = 0;
    sub_10006E400(&qword_100160700, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001263F0();
    (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v16, v11, v9);
    char v45 = 1;
    sub_10006E400(&qword_100160708, (void (*)(uint64_t))type metadata accessor for DetailContentViewModel);
    sub_1001263F0();
    uint64_t v23 = (int *)v37;
    sub_100072938(v20, (uint64_t)&v16[*(int *)(v37 + 20)], type metadata accessor for DetailContentViewModel);
    sub_100123670();
    char v44 = 2;
    sub_10006E400(&qword_100160710, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    uint64_t v24 = (uint64_t)v31;
    sub_1001263A0();
    uint64_t v25 = v32;
    sub_100072938(v24, (uint64_t)&v16[v23[6]], (uint64_t (*)(void))sub_100029068);
    char v43 = 3;
    sub_10006E400(&qword_100160718, (void (*)(uint64_t))&type metadata accessor for PriceChangeDisplay);
    uint64_t v26 = v30;
    uint64_t v27 = v40;
    sub_1001263F0();
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v16[v23[7]], v26, v27);
    char v42 = 4;
    v16[v23[8]] = sub_1001263C0() & 1;
    char v41 = 5;
    char v28 = sub_1001263C0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v35, v33);
    v16[v23[9]] = v28 & 1;
    sub_100072A9C((uint64_t)v16, v29, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
    sub_100009D48((uint64_t)v36);
    return sub_1000728D8((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
  }
}

unint64_t sub_100072788()
{
  return sub_100071BAC(*v0);
}

uint64_t sub_100072790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100072E58(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000727B8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1000727C4(uint64_t a1)
{
  unint64_t v2 = sub_100072B04();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100072800(uint64_t a1)
{
  unint64_t v2 = sub_100072B04();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007283C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1001232B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1000728A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100071FD4(a1, a2);
}

uint64_t sub_1000728C0(void *a1)
{
  return sub_100071C74(a1);
}

uint64_t sub_1000728D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100072938(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1000729A0()
{
  if (!qword_1001606D8)
  {
    sub_100072A04(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1001606D8);
    }
  }
}

void sub_100072A04(uint64_t a1)
{
}

void sub_100072A38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100072A9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100072B04()
{
  unint64_t result = qword_1001606F8;
  if (!qword_1001606F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001606F8);
  }
  return result;
}

void sub_100072B58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_100072B04();
    unint64_t v7 = a3(a1, &type metadata for DetailTimelineEntry.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for DetailTimelineEntry.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DetailTimelineEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100072D18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailTimelineEntry.CodingKeys()
{
  return &type metadata for DetailTimelineEntry.CodingKeys;
}

unint64_t sub_100072D54()
{
  unint64_t result = qword_100160748;
  if (!qword_100160748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160748);
  }
  return result;
}

unint64_t sub_100072DAC()
{
  unint64_t result = qword_100160750;
  if (!qword_100160750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160750);
  }
  return result;
}

unint64_t sub_100072E04()
{
  unint64_t result = qword_100160758;
  if (!qword_100160758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160758);
  }
  return result;
}

uint64_t sub_100072E58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746F7571 && a2 == 0xE500000000000000 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100131880 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001001318A0 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F7272457369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

Swift::Double __swiftcall Double.percentChange(with:)(Swift::Double with)
{
  double v2 = v1 - with;
  Swift::Double result = with / v2;
  if (v2 <= 0.0) {
    return 0.0;
  }
  return result;
}

Swift::Int sub_1000730C8()
{
  return sub_100126630();
}

Swift::Int sub_100073100()
{
  return sub_100126630();
}

uint64_t sub_100073134()
{
  *(void *)(v1 + 40) = v0;
  return _swift_task_switch(sub_100073154, v0, 0);
}

uint64_t sub_100073154()
{
  *(void *)(v0 + 48) = *(void *)(*(void *)(v0 + 40)
                                   + OBJC_IVAR____TtC12StocksWidget24TodayPrivateDataProvider_cache);
  sub_1001242D0();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 16) bundleSubscription];
    if (v2)
    {
      int v3 = v2;
      id v4 = [v2 bundleChannelIDs];
      uint64_t v5 = (uint64_t)[v4 count];

      if (v5 >= 1)
      {
        char v6 = sub_100124550();
        os_log_type_t v7 = sub_100125F60();
        if (os_log_type_enabled(v6, v7))
        {
          int v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v8 = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, v7, "Skipping today dropbox to use cached value", v8, 2u);
          swift_slowDealloc();
        }

        uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
        return v9(v1);
      }
    }
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + 56) = OBJC_IVAR____TtC12StocksWidget24TodayPrivateDataProvider_logger;
  uint64_t v11 = sub_100124550();
  os_log_type_t v12 = sub_100125F60();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Peeking at today dropbox", v13, 2u);
    swift_slowDealloc();
  }
  uint64_t v14 = *(void *)(v0 + 40);

  *(void *)(v0 + 64) = *(void *)(v14 + 112);
  return _swift_task_switch(sub_100073398, 0, 0);
}

uint64_t sub_100073398()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = swift_task_alloc();
  v0[9] = v2;
  *(void *)(v2 + 16) = v1;
  int v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  unint64_t v4 = sub_100073D8C();
  *int v3 = v0;
  v3[1] = sub_100073488;
  return withCancellation<A>(after:operation:)(v0 + 3, 5000000000000000000, 0, &unk_100160868, v2, v4);
}

uint64_t sub_100073488()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000736C4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1000735A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000735A4()
{
  uint64_t v1 = v0[5];
  v0[12] = v0[3];
  return _swift_task_switch(sub_1000735C8, v1, 0);
}

uint64_t sub_1000735C8()
{
  v0[4] = v0[12];
  swift_unknownObjectRetain();
  sub_1001242E0();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F60();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Did peek at today dropbox", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v4 = v0[12];
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_1000736C4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_task_dealloc();
  return _swift_task_switch(sub_100073730, v1, 0);
}

uint64_t sub_100073730()
{
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Did peek at today dropbox", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10007380C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget24TodayPrivateDataProvider_logger;
  uint64_t v2 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1000738A0()
{
  return type metadata accessor for TodayPrivateDataProvider();
}

uint64_t type metadata accessor for TodayPrivateDataProvider()
{
  uint64_t result = qword_1001607A0;
  if (!qword_1001607A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000738F4()
{
  uint64_t result = sub_100124570();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TodayPrivateDataProvider.SingletonKey()
{
  return &type metadata for TodayPrivateDataProvider.SingletonKey;
}

unint64_t sub_1000739CC()
{
  unint64_t result = qword_100160858;
  if (!qword_100160858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100160858);
  }
  return result;
}

uint64_t sub_100073A20()
{
  return v0;
}

uint64_t sub_100073A2C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100073A4C, 0, 0);
}

uint64_t sub_100073A4C()
{
  unint64_t v1 = (void *)v0[3];
  uint64_t v2 = swift_allocObject();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  unint64_t v5 = sub_100073D8C();
  *uint64_t v4 = v0;
  v4[1] = sub_100073B3C;
  uint64_t v6 = v0[2];
  return withEagerCancellation<A>(_:)(v6, &unk_100160880, v2, v5);
}

uint64_t sub_100073B3C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100073C78, 0, 0);
  }
  else
  {
    swift_release();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100073C78()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100073CDC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_10001470C;
  return _swift_task_switch(sub_100073A4C, 0, 0);
}

unint64_t sub_100073D8C()
{
  unint64_t result = qword_10015F260;
  if (!qword_10015F260)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, &qword_10015F260);
  }
  return result;
}

uint64_t sub_100073DE4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100073E04, 0, 0);
}

uint64_t sub_100073E04()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  unint64_t v4 = sub_100073D8C();
  *uint64_t v3 = v0;
  v3[1] = sub_100073EF8;
  uint64_t v5 = v0[2];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000011, 0x8000000100131920, sub_100074350, v2, v4);
}

uint64_t sub_100073EF8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_10007400C(uint64_t a1, void *a2)
{
  sub_100074358();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __n128 v8 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_100074450;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100074208;
  aBlock[3] = &unk_100152180;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  [a2 peekWithAccessor:v11];
  _Block_release(v11);
}

uint64_t sub_1000741B0()
{
  return sub_100125D90();
}

uint64_t sub_100074208(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_100074268()
{
  return swift_deallocObject();
}

uint64_t sub_1000742A0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_100013D40;
  return _swift_task_switch(sub_100073E04, 0, 0);
}

void sub_100074350(uint64_t a1)
{
  sub_10007400C(a1, *(void **)(v1 + 16));
}

void sub_100074358()
{
  if (!qword_100160888)
  {
    sub_100073D8C();
    unint64_t v0 = sub_100125DA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160888);
    }
  }
}

uint64_t sub_1000743C0()
{
  sub_100074358();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100074450()
{
  sub_100074358();

  return sub_1000741B0();
}

uint64_t sub_1000744C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000744D0()
{
  return swift_release();
}

uint64_t sub_1000744D8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  swift_getKeyPath();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(unsigned char *)(v8 + 24) = a2 & 1;
  *(void *)(v8 + 32) = a3;
  *(unsigned char *)(v8 + 40) = a4 & 1;
  sub_100125490();
  swift_release();

  return swift_release();
}

double sub_1000745B8()
{
  sub_10005F920();
  sub_100124E10();
  return v1;
}

void *sub_1000745F8(void *result, uint64_t a2, char a3, uint64_t a4, char a5)
{
  if (a3)
  {
    if (a5) {
      return result;
    }
LABEL_5:
    result[2] = a4;
    return result;
  }
  *unint64_t result = a2;
  if ((a5 & 1) == 0) {
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_10007461C()
{
  return swift_deallocObject();
}

void *sub_10007462C(void *result)
{
  uint64_t v2 = *(void *)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 40);
  if (*(unsigned char *)(v1 + 24))
  {
    if (*(unsigned char *)(v1 + 40)) {
      return result;
    }
LABEL_5:
    result[2] = v2;
    return result;
  }
  *unint64_t result = *(void *)(v1 + 16);
  if ((v3 & 1) == 0) {
    goto LABEL_5;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextMarginKey()
{
  return &type metadata for TextMarginKey;
}

double sub_100074668()
{
  double result = 0.0;
  xmmword_100160890 = 0u;
  unk_1001608A0 = 0u;
  return result;
}

double sub_10007467C@<D0>(_OWORD *a1@<X8>)
{
  if (qword_10015D518 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_100160890;
  long long v3 = unk_1001608A0;
  *a1 = xmmword_100160890;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000746DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_100074740();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_100074740()
{
  unint64_t result = qword_1001608B0;
  if (!qword_1001608B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001608B0);
  }
  return result;
}

uint64_t destroy for OverflowIntoTextMarginsModifier(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);

  return sub_100037598(v2, v3, v4, v5, v6);
}

uint64_t initializeWithCopy for OverflowIntoTextMarginsModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  swift_retain();
  sub_10004CE10(v3, v4, v5, v6, v7);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithCopy for OverflowIntoTextMarginsModifier(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_10004CE10(v4, v5, v6, v7, (char)v2);
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_100037598(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for HeadlineAttribution(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for OverflowIntoTextMarginsModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v4;
  sub_100037598(v5, v6, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for OverflowIntoTextMarginsModifier(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OverflowIntoTextMarginsModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OverflowIntoTextMarginsModifier()
{
  return &type metadata for OverflowIntoTextMarginsModifier;
}

uint64_t sub_100074A18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100074A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for TextOverflowModifier();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (double *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100074E10();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100074EB0(v2, (uint64_t)v27, &qword_10015EDD8, (uint64_t)&type metadata for Font, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
  long long v11 = *(_OWORD *)(v2 + 24);
  v24[0] = *(_OWORD *)(v2 + 8);
  v24[1] = v11;
  char v25 = *(unsigned char *)(v2 + 40);
  sub_100074EB0((uint64_t)v24, (uint64_t)v26, &qword_10015FB20, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for Environment.Content);
  sub_100051C00((uint64_t)v26, (void (*)(void, void, void, void, void))sub_10004CE10);
  double v12 = sub_10005F554();
  sub_100051C00((uint64_t)v24, (void (*)(void, void, void, void, void))sub_100037598);
  sub_100051C00((uint64_t)v26, (void (*)(void, void, void, void, void))sub_10004CE10);
  sub_10005F554();
  uint64_t v14 = v13;
  sub_100051C00((uint64_t)v24, (void (*)(void, void, void, void, void))sub_100037598);
  sub_100074EB0((uint64_t)v27, (uint64_t)v6, &qword_10015EDD8, (uint64_t)&type metadata for Font, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
  v6[1] = v12;
  *((void *)v6 + 2) = v14;
  *((void *)v6 + 3) = swift_getKeyPath();
  *((unsigned char *)v6 + 32) = 0;
  uint64_t v15 = (uint64_t *)((char *)v6 + *(int *)(v4 + 40));
  *uint64_t v15 = swift_getKeyPath();
  sub_100076F50(0, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  sub_100076B40(0, &qword_1001608C0, (uint64_t (*)(void))sub_100036274, (uint64_t)&type metadata for OverflowIntoTextMarginsModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ViewModifier_Content);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v22, v16);
  sub_100075BCC((uint64_t)v6, (uint64_t)&v10[*(int *)(v8 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v18 = v23;
  sub_100076C90((uint64_t)v10, v23, (uint64_t (*)(void))sub_100074E10);
  sub_100075C30();
  uint64_t v20 = v18 + *(int *)(v19 + 36);
  *(void *)uint64_t v20 = KeyPath;
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  sub_100075D08((uint64_t)v27);
  return sub_100076CF8((uint64_t)v10, (uint64_t (*)(void))sub_100074E10);
}

uint64_t sub_100074D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100074A34(a1, a2);
}

uint64_t type metadata accessor for TextOverflowModifier()
{
  uint64_t result = qword_100160938;
  if (!qword_100160938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100074E10()
{
  if (!qword_1001608B8)
  {
    sub_100076B40(255, &qword_1001608C0, (uint64_t (*)(void))sub_100036274, (uint64_t)&type metadata for OverflowIntoTextMarginsModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ViewModifier_Content);
    type metadata accessor for TextOverflowModifier();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001608B8);
    }
  }
}

uint64_t sub_100074EB0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  sub_100075CBC(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_100074F20()
{
  uint64_t v1 = sub_100125200();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TextOverflowModifier();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  sub_100076C90((uint64_t)v0, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TextOverflowModifier);
  if (!v8)
  {
    uint64_t v9 = *((void *)v7 + 3);
    char v10 = v7[32];
    j__swift_retain();
    uint64_t v11 = sub_10005FC34(v9, v10);
    j__swift_release();
    if (!v11) {
      sub_100125150();
    }
  }
  swift_retain();
  sub_100076CF8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TextOverflowModifier);
  sub_10005FE48((uint64_t)v4);
  uint64_t v12 = sub_100125130();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

uint64_t sub_1000750F8()
{
  uint64_t v0 = sub_100124920();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - v5;
  sub_100076F50(0, &qword_10015E9A8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubview, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = sub_1001249E0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100033D60((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100076238((uint64_t)v9, &qword_10015E9A8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubview, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    return sub_1001248F0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_100124910();
    sub_1001249D0();
    sub_1001250F0();
    sub_100124900();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v1 + 8);
    v15(v3, v0);
    v15(v6, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

double sub_1000753C4(uint64_t a1, char a2, uint64_t a3, char a4)
{
  v20[0] = a1;
  v20[1] = a3;
  uint64_t v6 = sub_100124A60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100076F50(0, &qword_10015E9A8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubview, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = sub_1001249E0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100033D60((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100076238((uint64_t)v12, &qword_10015E9A8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubview, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    return 0.0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    char v22 = a2 & 1;
    char v21 = a4 & 1;
    sub_1001249A0();
    sub_100124E40();
    sub_100124A70();
    sub_100124E50();
    sub_100124A70();
    sub_100124E60();
    sub_100124A70();
    sub_100124E30();
    sub_100124A70();
    sub_100124A40();
    double v17 = v18;
    sub_100124A50();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v17;
}

uint64_t sub_1000756F4(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v22 = a1;
  uint64_t v23 = a3;
  uint64_t v6 = sub_100124A60();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100076F50(0, &qword_10015E9A8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubview, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = sub_1001249E0();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100033D60((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_100076238((uint64_t)v12, &qword_10015E9A8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubview, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  char v18 = a2 & 1;
  char v27 = v18;
  char v19 = a4 & 1;
  char v26 = v19;
  uint64_t v21 = v6;
  sub_1001249A0();
  sub_100124E40();
  sub_100124A70();
  sub_100124E50();
  sub_100124A70();
  sub_100124E60();
  sub_100124A70();
  sub_100124E30();
  sub_100124A70();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  sub_100125840();
  char v25 = v18;
  char v24 = v19;
  sub_1001249C0();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100075A3C()
{
  return sub_1000750F8();
}

double sub_100075A48(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_1000753C4(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_100075A68(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_1000756F4(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_100075A88()
{
  return sub_100124970();
}

uint64_t sub_100075AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = (const __CTFont *)sub_100074F20();
  CGFloat CapHeight = CTFontGetCapHeight(v5);

  *(CGFloat *)a2 = CapHeight;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v2 + 8);
  sub_100076A70();
  uint64_t v8 = a2 + *(int *)(v7 + 44);
  sub_100076BFC();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);

  return v10(v8, a1, v9);
}

uint64_t sub_100075B50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100124D40();
  *a1 = result;
  return result;
}

uint64_t sub_100075B7C()
{
  return sub_100124D50();
}

uint64_t sub_100075BA8()
{
  return sub_100124D10();
}

uint64_t sub_100075BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TextOverflowModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100075C30()
{
  if (!qword_1001608C8)
  {
    sub_100074E10();
    sub_100075CBC(255, &qword_1001608D0, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001608C8);
    }
  }
}

void sub_100075CBC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_100075D08(uint64_t a1)
{
  return a1;
}

uint64_t sub_100075D34(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v8 = a2[3];
    char v9 = *((unsigned char *)a2 + 32);
    swift_retain();
    j__swift_retain();
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = v9;
    uint64_t v10 = *(int *)(a3 + 32);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    sub_100076F50(0, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_100125200();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100075EB0(uint64_t a1, uint64_t a2)
{
  swift_release();
  j__swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_100076F50(0, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_100125200();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100075FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_retain();
  j__swift_retain();
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  char v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_100076F50(0, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_100125200();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *char v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000760C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  j__swift_retain();
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 32);
    char v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_100076238(a1 + v8, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_100076F50(0, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_100125200();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *char v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100076238(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_100076F50(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_100076294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  sub_100076F50(0, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v8 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_100125200();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000763AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v6;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_100076238(a1 + v7, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_100076F50(0, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    uint64_t v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_100125200();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100076510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100076524);
}

uint64_t sub_100076524(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_100076F50(0, &qword_1001608D8, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100076610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100076624);
}

void *sub_100076624(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    sub_100076F50(0, &qword_1001608D8, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000766FC()
{
  sub_100076F50(319, &qword_100160178, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1000767E0()
{
  unint64_t result = qword_100160980;
  if (!qword_100160980)
  {
    sub_100075C30();
    sub_100076858();
    sub_1000769D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160980);
  }
  return result;
}

unint64_t sub_100076858()
{
  unint64_t result = qword_100160988;
  if (!qword_100160988)
  {
    sub_100074E10();
    sub_100076900();
    sub_100076990(&qword_100160998, (void (*)(uint64_t))type metadata accessor for TextOverflowModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160988);
  }
  return result;
}

unint64_t sub_100076900()
{
  unint64_t result = qword_100160990;
  if (!qword_100160990)
  {
    sub_100076B40(255, &qword_1001608C0, (uint64_t (*)(void))sub_100036274, (uint64_t)&type metadata for OverflowIntoTextMarginsModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ViewModifier_Content);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160990);
  }
  return result;
}

uint64_t sub_100076990(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000769D8()
{
  unint64_t result = qword_1001609A0;
  if (!qword_1001609A0)
  {
    sub_100075CBC(255, &qword_1001608D0, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609A0);
  }
  return result;
}

uint64_t sub_100076A54()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100076A70()
{
  if (!qword_1001609A8)
  {
    sub_100076B40(255, &qword_1001609B0, (uint64_t (*)(void))sub_100076BA8, (uint64_t)&type metadata for TextOverflowModifier.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _LayoutRoot);
    sub_100076BFC();
    sub_100076E7C(&qword_1001609C8);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001609A8);
    }
  }
}

void sub_100076B40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_100076BA8()
{
  unint64_t result = qword_1001609B8;
  if (!qword_1001609B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609B8);
  }
  return result;
}

void sub_100076BFC()
{
  if (!qword_1001609C0)
  {
    type metadata accessor for TextOverflowModifier();
    sub_100076990(&qword_100160998, (void (*)(uint64_t))type metadata accessor for TextOverflowModifier);
    unint64_t v0 = sub_100124FB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001609C0);
    }
  }
}

uint64_t sub_100076C90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100076CF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextOverflowModifier.Layout(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TextOverflowModifier.Layout(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TextOverflowModifier.Layout()
{
  return &type metadata for TextOverflowModifier.Layout;
}

unint64_t sub_100076DB8()
{
  unint64_t result = qword_1001609D0;
  if (!qword_1001609D0)
  {
    sub_100076A70();
    sub_100076E7C(&qword_1001609D8);
    sub_100076990(&qword_1001609E0, (void (*)(uint64_t))sub_100076BFC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609D0);
  }
  return result;
}

uint64_t sub_100076E7C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100076B40(255, &qword_1001609B0, (uint64_t (*)(void))sub_100076BA8, (uint64_t)&type metadata for TextOverflowModifier.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _LayoutRoot);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100076EFC()
{
  unint64_t result = qword_1001609E8;
  if (!qword_1001609E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609E8);
  }
  return result;
}

void sub_100076F50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_100076FB8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = &_mh_execute_header;
  if (((unint64_t)&_mh_execute_header & 0xFFFFFFFFFE03C781) == 0) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = (unint64_t)v7 | 0x9FC387F;
  id v9 = objc_allocWithZone((Class)FCContentContext);
  id v10 = a1;
  id v11 = a4;
  swift_unknownObjectRetain();
  sub_100123100(v12);
  uint64_t v14 = v13;
  id v15 = [v9 initWithConfiguration:v10 configurationManager:a2 contentHostDirectory:v13 networkBehaviorMonitor:v11 desiredHeadlineFieldOptions:v8 feedUsage:10 appActivityMonitor:0 backgroundTaskable:0 pptContext:0];

  swift_unknownObjectRelease();
  return v15;
}

uint64_t sub_100077170()
{
  type metadata accessor for PriceFormatter();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100123360();
  qword_1001609F0 = v0;
  return result;
}

uint64_t sub_1000771C0(void *a1)
{
  sub_10007A39C(0, &qword_100160AB0, (uint64_t (*)(void))sub_10007A348, (uint64_t)&_s22StocksPriceFormatStyleV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_100009D98(a1, a1[3]);
  sub_10007A348();
  sub_100126650();
  char v13 = 0;
  sub_100126440();
  if (!v1)
  {
    char v12 = 1;
    sub_100126490();
    char v11 = 2;
    sub_1001264B0();
    char v10 = 3;
    sub_100126480();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int sub_1000773A4()
{
  sub_1001265F0();
  if (*(void *)(v0 + 8))
  {
    sub_100126610(1u);
    swift_bridgeObjectRetain();
    sub_100125BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100126610(0);
  }
  sub_100126610(*(unsigned char *)(v0 + 16) & 1);
  sub_100126600(*(void *)(v0 + 24));
  swift_bridgeObjectRetain();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  return sub_100126630();
}

unint64_t sub_100077478()
{
  unint64_t result = 0x79636E6572727563;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0x647574696E67616DLL;
      break;
    case 3:
      unint64_t result = 0x6B6361626C6C6166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100077520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100078E1C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100077548(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100077554(uint64_t a1)
{
  unint64_t v2 = sub_10007A348();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100077590(uint64_t a1)
{
  unint64_t v2 = sub_10007A348();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000775CC@<X0>(double *a1@<X0>, uint64_t *a2@<X8>)
{
  double v4 = *a1;
  uint64_t v6 = *(void *)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  char v10 = *(unsigned char *)(v2 + 16) | (2 * (v5 != 0));
  if (qword_10015D520 != -1) {
    swift_once();
  }
  uint64_t result = sub_10002EB14(v6, v5, v7, 1, v10, v4);
  if (!v12)
  {
    swift_bridgeObjectRetain();
    uint64_t result = v8;
    uint64_t v12 = v9;
  }
  *a2 = result;
  a2[1] = v12;
  return result;
}

double sub_10007769C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10007900C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1000776E0(void *a1)
{
  return sub_1000771C0(a1);
}

uint64_t sub_1000776FC()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 16);
  Swift::UInt v2 = *(void *)(v0 + 24);
  if (*(void *)(v0 + 8))
  {
    sub_100126610(1u);
    swift_bridgeObjectRetain();
    sub_100125BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100126610(0);
  }
  sub_100126610(v1);
  sub_100126600(v2);
  swift_bridgeObjectRetain();
  sub_100125BA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000777C0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Swift::UInt8 v2 = *(unsigned char *)(v0 + 16);
  Swift::UInt v3 = *(void *)(v0 + 24);
  sub_1001265F0();
  if (v1)
  {
    sub_100126610(1u);
    swift_bridgeObjectRetain();
    sub_100125BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100126610(0);
  }
  sub_100126610(v2);
  sub_100126600(v3);
  swift_bridgeObjectRetain();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  return sub_100126630();
}

uint64_t sub_100077890(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_100078D54((uint64_t)v7, (uint64_t)v8) & 1;
}

uint64_t sub_1000778D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v14 = *(void *)(v4 + 56);
    swift_bridgeObjectRetain();
  }
  else if ((*(unsigned char *)v4 & 1) != 0 && a4)
  {
    uint64_t v8 = *(void *)(v4 + 32);
    uint64_t v9 = *(void *)(v4 + 40);
    if (*(unsigned char *)(v4 + 24)) {
      char v10 = 3;
    }
    else {
      char v10 = 2;
    }
    uint64_t v11 = qword_10015D520;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10002EB14(a3, a4, v8, 1, v10, *(double *)&a1);
    if (v13)
    {
      uint64_t v14 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  else
  {
    uint64_t v15 = *(void *)(v4 + 8);
    uint64_t v16 = *(void *)(v4 + 16);
    uint64_t v17 = *(void *)(v4 + 32);
    uint64_t v18 = *(void *)(v4 + 40);
    char v19 = 3;
    if (!v16) {
      char v19 = 1;
    }
    if (*(unsigned char *)(v4 + 24)) {
      char v20 = v19;
    }
    else {
      char v20 = 2 * (v16 != 0);
    }
    if (qword_10015D520 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_10002EB14(v15, v16, v17, 1, v20, *(double *)&a1);
    if (v22)
    {
      return v21;
    }
    else
    {
      swift_bridgeObjectRetain();
      return v18;
    }
  }
  return v14;
}

uint64_t sub_100077A98()
{
  sub_100126610(*(unsigned char *)v0 & 1);
  char v1 = *(unsigned char *)(v0 + 24);
  Swift::UInt v2 = *(void *)(v0 + 32);
  if (*(void *)(v0 + 16))
  {
    sub_100126610(1u);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100125BA0();
  }
  else
  {
    sub_100126610(0);
    swift_bridgeObjectRetain();
  }
  sub_100126610(v1 & 1);
  sub_100126600(v2);
  swift_bridgeObjectRetain();
  sub_100125BA0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  sub_100125BA0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100077BA0(void *a1)
{
  uint64_t v3 = v1;
  sub_10007A39C(0, &qword_100160A98, (uint64_t (*)(void))sub_10007A2F4, (uint64_t)&_s11FormatStyleV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_100009D98(a1, a1[3]);
  sub_10007A2F4();
  sub_100126650();
  LOBYTE(v12[0]) = 0;
  sub_100126490();
  if (!v2)
  {
    long long v10 = *(_OWORD *)(v3 + 24);
    v12[0] = *(_OWORD *)(v3 + 8);
    v12[1] = v10;
    long long v12[2] = *(_OWORD *)(v3 + 40);
    char v13 = 1;
    sub_10007A248();
    sub_1001264C0();
    LOBYTE(v12[0]) = 2;
    sub_100126480();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100077D84()
{
  uint64_t v1 = 0x74537265626D756ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6B6361626C6C6166;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72727543776F6873;
  }
}

uint64_t sub_100077DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100079290(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100077E20(uint64_t a1)
{
  unint64_t v2 = sub_10007A2F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100077E5C(uint64_t a1)
{
  unint64_t v2 = sub_10007A2F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100077E98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000785C8(a1, (uint64_t (*)(void, void, void, void))sub_1000778D8, a2);
}

__n128 sub_100077EB0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100079430(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100077F04(void *a1)
{
  return sub_100077BA0(a1);
}

Swift::Int sub_100077F1C()
{
  return sub_100126630();
}

Swift::Int sub_100077F60()
{
  return sub_100126630();
}

uint64_t sub_100077F9C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  _OWORD v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_100078C08((unsigned __int8 *)v7, (unsigned __int8 *)v9) & 1;
}

uint64_t sub_100077FF8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  if (a2)
  {
    uint64_t v9 = *(void *)(v4 + 56);
    goto LABEL_16;
  }
  uint64_t v9 = a1;
  if (*(double *)&a1 <= 1000000.0)
  {
LABEL_7:
    uint64_t v16 = *(void *)(v6 + 8);
    uint64_t v17 = *(void *)(v6 + 16);
    uint64_t v5 = *(void *)(v6 + 32);
    uint64_t v9 = *(void *)(v6 + 40);
    if ((*(unsigned char *)v6 & 1) != 0 && a4)
    {
      if (*(unsigned char *)(v6 + 24)) {
        LOBYTE(v6) = 3;
      }
      else {
        LOBYTE(v6) = 2;
      }
      uint64_t v18 = qword_10015D520;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 == -1) {
        goto LABEL_13;
      }
      goto LABEL_31;
    }
    char v23 = 3;
    if (!v17) {
      char v23 = 1;
    }
    if (*(unsigned char *)(v6 + 24)) {
      char v24 = v23;
    }
    else {
      char v24 = 2 * (v17 != 0);
    }
    if (qword_10015D520 != -1)
    {
      uint64_t v27 = *(void *)(v6 + 8);
      uint64_t v28 = *(void *)(v6 + 16);
      swift_once();
      uint64_t v17 = v28;
      uint64_t v16 = v27;
    }
    uint64_t v25 = sub_10002EB14(v16, v17, v5, 1, v24, *(double *)&a1);
    if (v26) {
      return v25;
    }
LABEL_16:
    swift_bridgeObjectRetain();
    return v9;
  }
  type metadata accessor for UnitNumberFormatter();
  uint64_t inited = swift_initStackObject();
  id v12 = [objc_allocWithZone((Class)SCICUNumberFormatter) init];
  *(void *)(inited + 16) = v12;
  if ((~v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (*(double *)&a1 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (*(double *)&a1 < 9.22337204e18)
  {
    char v13 = v12;
    uint64_t v9 = sub_100054244((uint64_t)*(double *)&a1, 0, 0);
    uint64_t v15 = v14;

    if (v15) {
      return v9;
    }
    goto LABEL_7;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  swift_once();
LABEL_13:
  uint64_t v19 = sub_10002EB14(a3, a4, v5, 1, v6, *(double *)&a1);
  if (v20)
  {
    uint64_t v21 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_100078258(void *a1)
{
  uint64_t v2 = v1;
  sub_10007A39C(0, &qword_100160A30, (uint64_t (*)(void))sub_100079934, (uint64_t)&_s17WidgetFormatStyleV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v12 - v7;
  sub_100009D98(a1, a1[3]);
  sub_100079934();
  sub_100126650();
  long long v9 = *(_OWORD *)(v2 + 48);
  long long v12[2] = *(_OWORD *)(v2 + 32);
  _OWORD v12[3] = v9;
  uint64_t v13 = *(void *)(v2 + 64);
  long long v10 = *(_OWORD *)(v2 + 16);
  v12[0] = *(_OWORD *)v2;
  v12[1] = v10;
  sub_1000799DC();
  sub_1001264C0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int sub_1000783E8()
{
  return sub_100126630();
}

void sub_10007842C()
{
}

Swift::Int sub_100078454()
{
  return sub_100126630();
}

uint64_t sub_100078494()
{
  return 1702060386;
}

uint64_t sub_1000784A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1702060386 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_100126530();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_10007852C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_100078538(uint64_t a1)
{
  unint64_t v2 = sub_100079934();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100078574(uint64_t a1)
{
  unint64_t v2 = sub_100079934();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000785B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000785C8(a1, (uint64_t (*)(void, void, void, void))sub_100077FF8, a2);
}

uint64_t sub_1000785C8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void, void, void)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24));
  *a3 = result;
  a3[1] = v5;
  return result;
}

__n128 _s11FormatStyleVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

ValueMetadata *_s17WidgetFormatStyleVMa()
{
  return &_s17WidgetFormatStyleVN;
}

__n128 sub_10007865C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10007973C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1000786B0(void *a1)
{
  return sub_100078258(a1);
}

Swift::Int sub_1000786C8()
{
  return sub_100126630();
}

uint64_t sub_10007878C()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100077A98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10007883C()
{
  return sub_100126630();
}

BOOL sub_1000788FC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  _OWORD v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_100078AB8((unsigned __int8 *)v7, (unsigned __int8 *)v9);
}

unint64_t sub_10007895C()
{
  unint64_t result = qword_1001609F8;
  if (!qword_1001609F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001609F8);
  }
  return result;
}

unint64_t sub_1000789B4()
{
  unint64_t result = qword_100160A00;
  if (!qword_100160A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A00);
  }
  return result;
}

unint64_t sub_100078A0C()
{
  unint64_t result = qword_100160A08;
  if (!qword_100160A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A08);
  }
  return result;
}

unint64_t sub_100078A64()
{
  unint64_t result = qword_100160A10;
  if (!qword_100160A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A10);
  }
  return result;
}

BOOL sub_100078AB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if ((*a1 ^ *a2)) {
    return 0;
  }
  uint64_t v4 = *((void *)a1 + 2);
  int v5 = a1[24];
  uint64_t v7 = *((void *)a1 + 4);
  uint64_t v6 = *((void *)a1 + 5);
  uint64_t v9 = *((void *)a1 + 6);
  uint64_t v8 = *((void *)a1 + 7);
  uint64_t v10 = *((void *)a1 + 8);
  uint64_t v11 = *((void *)a2 + 2);
  int v12 = a2[24];
  uint64_t v13 = *((void *)a2 + 4);
  uint64_t v14 = *((void *)a2 + 5);
  uint64_t v16 = *((void *)a2 + 6);
  uint64_t v15 = *((void *)a2 + 7);
  uint64_t v17 = *((void *)a2 + 8);
  if (v4)
  {
    if (!v11) {
      return 0;
    }
    if (*((void *)a1 + 1) != *((void *)a2 + 1) || v4 != v11)
    {
      uint64_t v24 = *((void *)a2 + 7);
      uint64_t v25 = *((void *)a2 + 8);
      uint64_t v18 = *((void *)a1 + 8);
      uint64_t v19 = *((void *)a1 + 7);
      uint64_t v20 = *((void *)a1 + 6);
      char v21 = sub_100126530();
      uint64_t v9 = v20;
      uint64_t v8 = v19;
      uint64_t v10 = v18;
      uint64_t v15 = v24;
      uint64_t v17 = v25;
      if ((v21 & 1) == 0) {
        return 0;
      }
    }
  }
  else if (v11)
  {
    return 0;
  }
  if (((v5 ^ v12) & 1) != 0 || v7 != v13) {
    return 0;
  }
  if (v6 != v14 || v9 != v16)
  {
    uint64_t v22 = v8;
    char v23 = sub_100126530();
    uint64_t v8 = v22;
    if ((v23 & 1) == 0) {
      return 0;
    }
  }
  return v8 == v15 && v10 == v17 || (sub_100126530() & 1) != 0;
}

uint64_t sub_100078C08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if ((*a1 ^ *a2)) {
    return 0;
  }
  uint64_t v5 = *((void *)a1 + 2);
  int v6 = a1[24];
  uint64_t v8 = *((void *)a1 + 4);
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v9 = *((void *)a1 + 6);
  uint64_t v10 = *((void *)a2 + 2);
  int v11 = a2[24];
  uint64_t v13 = *((void *)a2 + 4);
  uint64_t v12 = *((void *)a2 + 5);
  uint64_t v14 = *((void *)a2 + 6);
  if (v5)
  {
    if (v10)
    {
      if (*((void *)a1 + 1) != *((void *)a2 + 1) || v5 != v10)
      {
        char v15 = sub_100126530();
        uint64_t result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v10) {
    return 0;
  }
LABEL_11:
  uint64_t result = 0;
  if (((v6 ^ v11) & 1) == 0 && v8 == v13)
  {
    if (v7 == v12 && v9 == v14 || (v16 = sub_100126530(), uint64_t result = 0, (v16 & 1) != 0))
    {
      if (*((void *)a1 + 7) == *((void *)a2 + 7) && *((void *)a1 + 8) == *((void *)a2 + 8))
      {
        return 1;
      }
      else
      {
        return sub_100126530();
      }
    }
  }
  return result;
}

uint64_t sub_100078D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (v7 = sub_100126530(), uint64_t result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    if (((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
      && *(void *)(a1 + 24) == *(void *)(a2 + 24))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)) {
        return 1;
      }
      return sub_100126530();
    }
    return 0;
  }
  return result;
}

uint64_t sub_100078E1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000100131960 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x647574696E67616DLL && a2 == 0xE900000000000065 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000074786554)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_10007900C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  sub_10007A39C(0, &qword_100160AA0, (uint64_t (*)(void))sub_10007A348, (uint64_t)&_s22StocksPriceFormatStyleV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  sub_100009D98(a1, a1[3]);
  sub_10007A348();
  sub_100126640();
  if (v2)
  {
    sub_100009D48((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = v6;
    uint64_t v10 = v20;
    char v25 = 0;
    uint64_t v11 = sub_100126370();
    uint64_t v13 = v12;
    char v24 = 1;
    int v21 = sub_1001263C0();
    char v23 = 2;
    uint64_t v19 = sub_1001263E0();
    char v22 = 3;
    uint64_t v15 = sub_1001263B0();
    char v16 = v8;
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v5);
    uint64_t result = sub_100009D48((uint64_t)a1);
    *(void *)uint64_t v10 = v11;
    *(void *)(v10 + 8) = v13;
    *(unsigned char *)(v10 + 16) = v21 & 1;
    *(void *)(v10 + 24) = v19;
    *(void *)(v10 + 32) = v15;
    *(void *)(v10 + 40) = v18;
  }
  return result;
}

uint64_t sub_100079290(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72727543776F6873 && a2 == 0xEC00000079636E65;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74537265626D756ELL && a2 == 0xEB00000000656C79 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000074786554)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100079430@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  sub_10007A39C(0, &qword_100160A88, (uint64_t (*)(void))sub_10007A2F4, (uint64_t)&_s11FormatStyleV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - v7;
  sub_100009D98(a1, a1[3]);
  sub_10007A2F4();
  sub_100126640();
  if (v2)
  {
    sub_100009D48((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = v6;
    uint64_t v10 = v26;
    LOBYTE(v27) = 0;
    char v11 = sub_1001263C0();
    char v34 = 1;
    sub_10007A1F0();
    sub_1001263F0();
    uint64_t v12 = v28;
    int v33 = v29;
    uint64_t v23 = v30;
    uint64_t v24 = v27;
    uint64_t v13 = v32;
    uint64_t v22 = v31;
    LOBYTE(v27) = 2;
    swift_bridgeObjectRetain();
    uint64_t v25 = v13;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1001263B0();
    uint64_t v16 = v15;
    HIDWORD(v21) = v11 & 1;
    uint64_t v17 = v14;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_100009D48((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v18 = v25;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v10 = BYTE4(v21);
    *(void *)(v10 + 8) = v24;
    *(void *)(v10 + 16) = v12;
    *(unsigned char *)(v10 + 24) = v33;
    uint64_t v20 = v22;
    *(void *)(v10 + 32) = v23;
    *(void *)(v10 + 40) = v20;
    *(void *)(v10 + 48) = v18;
    *(void *)(v10 + 56) = v17;
    *(void *)(v10 + 64) = v16;
  }
  return result;
}

uint64_t sub_10007973C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  sub_10007A39C(0, &qword_100160A18, (uint64_t (*)(void))sub_100079934, (uint64_t)&_s17WidgetFormatStyleV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  sub_100009D98(a1, a1[3]);
  sub_100079934();
  sub_100126640();
  if (v2) {
    return sub_100009D48((uint64_t)a1);
  }
  uint64_t v9 = v26;
  sub_100079988();
  sub_1001263F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v10 = v19;
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  char v13 = v22;
  long long v17 = v24;
  long long v18 = v23;
  uint64_t v14 = v25;
  uint64_t result = sub_100009D48((uint64_t)a1);
  *(unsigned char *)uint64_t v9 = v10;
  *(void *)(v9 + 8) = v11;
  *(void *)(v9 + 16) = v12;
  *(unsigned char *)(v9 + 24) = v13;
  long long v16 = v17;
  *(_OWORD *)(v9 + 32) = v18;
  *(_OWORD *)(v9 + 48) = v16;
  *(void *)(v9 + 64) = v14;
  return result;
}

unint64_t sub_100079934()
{
  unint64_t result = qword_100160A20;
  if (!qword_100160A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A20);
  }
  return result;
}

unint64_t sub_100079988()
{
  unint64_t result = qword_100160A28;
  if (!qword_100160A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A28);
  }
  return result;
}

unint64_t sub_1000799DC()
{
  unint64_t result = qword_100160A38;
  if (!qword_100160A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A38);
  }
  return result;
}

uint64_t _s17WidgetFormatStyleV10CodingKeysOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s17WidgetFormatStyleV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100079B20);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s17WidgetFormatStyleV10CodingKeysOMa()
{
  return &_s17WidgetFormatStyleV10CodingKeysON;
}

uint64_t _s22StocksPriceFormatStyleVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s22StocksPriceFormatStyleVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22StocksPriceFormatStyleVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22StocksPriceFormatStyleVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22StocksPriceFormatStyleVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22StocksPriceFormatStyleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s22StocksPriceFormatStyleVMa()
{
  return &_s22StocksPriceFormatStyleVN;
}

uint64_t _s11FormatStyleVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s11FormatStyleVwcp_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11FormatStyleVwca_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11FormatStyleVwta_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11FormatStyleVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100079F74(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s11FormatStyleVMa()
{
  return &_s11FormatStyleVN;
}

unint64_t sub_100079FD8()
{
  unint64_t result = qword_100160A40;
  if (!qword_100160A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A40);
  }
  return result;
}

unint64_t sub_10007A038()
{
  unint64_t result = qword_100160A48;
  if (!qword_100160A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A48);
  }
  return result;
}

unint64_t sub_10007A090()
{
  unint64_t result = qword_100160A50;
  if (!qword_100160A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A50);
  }
  return result;
}

unint64_t sub_10007A0E8()
{
  unint64_t result = qword_100160A58;
  if (!qword_100160A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A58);
  }
  return result;
}

unint64_t sub_10007A140()
{
  unint64_t result = qword_100160A60;
  if (!qword_100160A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A60);
  }
  return result;
}

unint64_t sub_10007A198()
{
  unint64_t result = qword_100160A68;
  if (!qword_100160A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A68);
  }
  return result;
}

unint64_t sub_10007A1F0()
{
  unint64_t result = qword_100160A70;
  if (!qword_100160A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A70);
  }
  return result;
}

unint64_t sub_10007A248()
{
  unint64_t result = qword_100160A78;
  if (!qword_100160A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A78);
  }
  return result;
}

unint64_t sub_10007A2A0()
{
  unint64_t result = qword_100160A80;
  if (!qword_100160A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A80);
  }
  return result;
}

unint64_t sub_10007A2F4()
{
  unint64_t result = qword_100160A90;
  if (!qword_100160A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160A90);
  }
  return result;
}

unint64_t sub_10007A348()
{
  unint64_t result = qword_100160AA8;
  if (!qword_100160AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160AA8);
  }
  return result;
}

void sub_10007A39C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for TickerCellViewModel.CellType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22StocksPriceFormatStyleV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007A560);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s22StocksPriceFormatStyleV10CodingKeysOMa()
{
  return &_s22StocksPriceFormatStyleV10CodingKeysON;
}

unsigned char *_s11FormatStyleV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007A664);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11FormatStyleV10CodingKeysOMa()
{
  return &_s11FormatStyleV10CodingKeysON;
}

unint64_t sub_10007A6A0()
{
  unint64_t result = qword_100160AB8;
  if (!qword_100160AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160AB8);
  }
  return result;
}

unint64_t sub_10007A6F8()
{
  unint64_t result = qword_100160AC0;
  if (!qword_100160AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160AC0);
  }
  return result;
}

unint64_t sub_10007A750()
{
  unint64_t result = qword_100160AC8;
  if (!qword_100160AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160AC8);
  }
  return result;
}

unint64_t sub_10007A7A8()
{
  unint64_t result = qword_100160AD0;
  if (!qword_100160AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160AD0);
  }
  return result;
}

unint64_t sub_10007A800()
{
  unint64_t result = qword_100160AD8;
  if (!qword_100160AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160AD8);
  }
  return result;
}

unint64_t sub_10007A858()
{
  unint64_t result = qword_100160AE0;
  if (!qword_100160AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160AE0);
  }
  return result;
}

uint64_t sub_10007A8BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  sub_10007B13C();
  uint64_t v29 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007B1F0(0, &qword_100160B90, &qword_100160B98);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v31 = (char *)&v27 - v8;
  sub_10007B198();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v14;
  sub_10007B1F0(0, &qword_100160BA8, &qword_100160BB0);
  __n128 v16 = __chkstk_darwin(v15);
  int v33 = (char *)&v27 - v17;
  uint64_t v18 = enum case for FeatureState.disabled<A>(_:);
  (*(void (**)(__n128))(v19 + 104))(v16);
  id v32 = sub_10007B248();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v14, v18, v11);
  int v30 = sub_1001237A0();
  int v28 = sub_100123750();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 104))(v9, v18, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 104))(v4, v18, v29);
  sub_10007B96C((uint64_t)_swiftEmptyArrayStorage);
  id v20 = objc_allocWithZone((Class)FCPersonalizationPublisherDampeningConfig);
  Class isa = sub_1001259F0().super.isa;
  swift_bridgeObjectRelease();
  [v20 initWithConfig:isa];

  sub_10007B96C((uint64_t)_swiftEmptyArrayStorage);
  id v22 = objc_allocWithZone((Class)FCPersonalizationPublisherDampeningConfig);
  Class v23 = sub_1001259F0().super.isa;
  swift_bridgeObjectRelease();
  [v22 initWithConfig:v23];

  id v24 = objc_allocWithZone((Class)FCStatelessPersonalizationPublisherFavorability);
  sub_10007BDA8(0, &qword_100160BB8, (uint64_t)&type metadata for AnyHashable, (uint64_t)&protocol witness table for AnyHashable, (uint64_t (*)(void, uint64_t, char *))&type metadata accessor for Dictionary);
  Class v25 = sub_100125C90().super.isa;
  [v24 initWithArray:v25];

  return sub_1001244B0();
}

uint64_t sub_10007AD20@<X0>(uint64_t a1@<X8>)
{
  return sub_10007A8BC(a1);
}

uint64_t sub_10007AD4C(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = sub_1001244C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007A8BC((uint64_t)v6);
  a2(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10007AE30()
{
  sub_100009D48(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetPersonalizationConfigurationManager()
{
  return self;
}

uint64_t sub_10007AE8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1001237F0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D98((void *)(*(void *)v1 + 16), *(void *)(*(void *)v1 + 40));
  sub_100123AB0();
  sub_10007A8BC(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10007AF8C()
{
  sub_1001237F0();
  sub_100124380();
  uint64_t v0 = (void *)sub_100124300();
  sub_1001244C0();
  uint64_t v1 = sub_100124330();
  swift_release();

  return v1;
}

uint64_t sub_10007B02C(uint64_t a1, uint64_t a2)
{
  sub_100009D98((void *)(*(void *)v2 + 16), *(void *)(*(void *)v2 + 40));
  sub_100123AA0();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_retain();
  uint64_t v6 = (void *)sub_100124300();
  sub_100124180();
  swift_release();
  swift_release();

  return sub_100009D48((uint64_t)v8);
}

uint64_t sub_10007B0FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10007B134(uint64_t a1)
{
  return sub_10007AD4C(a1, *(void (**)(char *))(v1 + 16));
}

void sub_10007B13C()
{
  if (!qword_100160B88)
  {
    unint64_t v0 = sub_1001244A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160B88);
    }
  }
}

void sub_10007B198()
{
  if (!qword_100160BA0)
  {
    sub_100124490();
    unint64_t v0 = sub_1001244A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160BA0);
    }
  }
}

void sub_10007B1F0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_10003EBFC(255, a3);
    unint64_t v4 = sub_1001244A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_10007B248()
{
  uint64_t v0 = sub_100123B40();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123000();
  swift_allocObject();
  sub_100122FF0();
  sub_100123770();
  sub_10007BD50();
  uint64_t v4 = sub_100122FE0();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_release();
  uint64_t v7 = self;
  Class isa = sub_100123160().super.isa;
  v17[0] = 0;
  id v9 = [v7 JSONObjectWithData:isa options:4 error:v17];

  id v10 = v17[0];
  if (!v9) {
    goto LABEL_5;
  }
  id v11 = v17[0];
  sub_100126070();
  swift_unknownObjectRelease();
  sub_10007BDA8(0, &qword_100160BD8, (uint64_t)&type metadata for String, (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, char *))&type metadata accessor for Dictionary);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    id v13 = [objc_allocWithZone((Class)FCPersonalizationTreatment) init];
    goto LABEL_7;
  }
  sub_10007B57C(v16[1]);
  swift_bridgeObjectRelease();
  id v10 = objc_allocWithZone((Class)FCPersonalizationTreatment);
  Class v12 = sub_1001259F0().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithPersonalizationTreatmentDictionary:v12];

  if (!v13)
  {
    __break(1u);
LABEL_5:
    id v14 = v10;
    sub_100123080();

    swift_willThrow();
    swift_errorRelease();
    goto LABEL_6;
  }
LABEL_7:
  sub_100048F7C(v4, v6);
  return v13;
}

uint64_t sub_10007B57C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10007BDA8(0, &qword_100160BC0, (uint64_t)&type metadata for AnyHashable, (uint64_t)&protocol witness table for AnyHashable, (uint64_t (*)(void, uint64_t, char *))&type metadata accessor for _DictionaryStorage);
    uint64_t v2 = (void *)sub_1001262F0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10007BE04(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_10003F5D4(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_10003F5D4(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_10003F5D4(v36, v37);
    sub_10003F5D4(v37, &v33);
    uint64_t result = sub_1001260A0(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_10003F5D4(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_10007BE60();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_10007B96C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10007BDA8(0, &qword_100160BC0, (uint64_t)&type metadata for AnyHashable, (uint64_t)&protocol witness table for AnyHashable, (uint64_t (*)(void, uint64_t, char *))&type metadata accessor for _DictionaryStorage);
  uint64_t v2 = sub_1001262F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10007BB08(v6, (uint64_t)v15);
    unint64_t result = sub_10007BAC4((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_10003F5D4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10007BAC4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1001260A0(*(void *)(v2 + 40));

  return sub_10007BBD8(a1, v4);
}

uint64_t sub_10007BB08(uint64_t a1, uint64_t a2)
{
  sub_10007BB6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10007BB6C()
{
  if (!qword_100160BC8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100160BC8);
    }
  }
}

unint64_t sub_10007BBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10007BCA0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1001260B0();
      sub_10007BCFC((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_10007BCA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10007BCFC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10007BD50()
{
  unint64_t result = qword_100160BD0;
  if (!qword_100160BD0)
  {
    sub_100123B40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160BD0);
  }
  return result;
}

void sub_10007BDA8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, char *))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, &type metadata for Any[8]);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_10007BE04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10007BE60()
{
  return swift_release();
}

uint64_t sub_10007BE68()
{
  sub_100009D98((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_100123AC0();
}

void *sub_10007BEB4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_1001232B0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      sub_10003A874();
      char v43 = v8;
      uint64_t v9 = v8[12];
      long long v10 = (void *)((char *)a1 + v9);
      long long v11 = (char *)a2 + v9;
      uint64_t v12 = *(void *)((char *)a2 + v9 + 8);
      *long long v10 = *(void *)((char *)a2 + v9);
      v10[1] = v12;
      BOOL v13 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
      uint64_t v14 = v13[5];
      char v41 = &v11[v14];
      char v42 = (char *)v10 + v14;
      sub_10007C260(0, &qword_10015EF70, sub_10003A98C, (void (*)(void))sub_10003A9C0);
      uint64_t v16 = v15;
      long long v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v42, v41, v16);
      *((unsigned char *)v10 + v13[6]) = v11[v13[6]];
      uint64_t v18 = v13[7];
      uint64_t v19 = (char *)v10 + v18;
      uint64_t v20 = &v11[v18];
      uint64_t v21 = sub_1001238A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      *(void *)((char *)v10 + v13[8]) = *(void *)&v11[v13[8]];
      *(void *)((char *)v10 + v13[9]) = *(void *)&v11[v13[9]];
      *((unsigned char *)v10 + v13[10]) = v11[v13[10]];
      uint64_t v22 = v13[11];
      char v23 = (char *)v10 + v22;
      unint64_t v24 = &v11[v22];
      sub_10007C260(0, (unint64_t *)&qword_10015E708, sub_10002919C, (void (*)(void))sub_1000291D0);
      uint64_t v26 = v25;
      uint64_t v27 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25))
      {
        sub_100029100();
        memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v23, v24, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
      }
      *((unsigned char *)a1 + v43[16]) = *((unsigned char *)a2 + v43[16]);
      *((unsigned char *)a1 + v43[20]) = *((unsigned char *)a2 + v43[20]);
      *((unsigned char *)a1 + v43[24]) = *((unsigned char *)a2 + v43[24]);
    }
    else
    {
      sub_10003A7CC();
      uint64_t v31 = *(int *)(v30 + 48);
      id v32 = (void *)((char *)a1 + v31);
      long long v33 = (void *)((char *)a2 + v31);
      uint64_t v35 = *v33;
      uint64_t v34 = v33[1];
      *id v32 = v35;
      v32[1] = v34;
      uint64_t v36 = *(int *)(v30 + 64);
      uint64_t v37 = (void *)((char *)a1 + v36);
      uint64_t v38 = (void *)((char *)a2 + v36);
      uint64_t v39 = v38[1];
      *uint64_t v37 = *v38;
      v37[1] = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10007C260(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_100124420();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_10007C2D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007C324(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    sub_10003A874();
    uint64_t v5 = a1 + *(int *)(v4 + 48);
    swift_bridgeObjectRelease();
    unint64_t v6 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
    uint64_t v7 = v5 + v6[5];
    sub_10007C260(0, &qword_10015EF70, sub_10003A98C, (void (*)(void))sub_10003A9C0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = v5 + v6[7];
    uint64_t v10 = sub_1001238A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = v5 + v6[11];
    sub_10007C260(0, (unint64_t *)&qword_10015E708, sub_10002919C, (void (*)(void))sub_1000291D0);
    uint64_t v13 = v12;
    uint64_t v16 = *(void *)(v12 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v11, 1, v12);
    if (!result)
    {
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
      return v15(v11, v13);
    }
  }
  else
  {
    sub_10003A7CC();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10007C58C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    sub_10003A874();
    uint64_t v40 = v6;
    uint64_t v7 = v6[12];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = a2 + v7;
    uint64_t v10 = *(void *)(a2 + v7 + 8);
    *uint64_t v8 = *(void *)(a2 + v7);
    v8[1] = v10;
    uint64_t v11 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
    uint64_t v12 = v11[5];
    uint64_t v39 = (char *)v8 + v12;
    uint64_t v13 = v9 + v12;
    sub_10007C260(0, &qword_10015EF70, sub_10003A98C, (void (*)(void))sub_10003A9C0);
    uint64_t v15 = v14;
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v39, v13, v15);
    *((unsigned char *)v8 + v11[6]) = *(unsigned char *)(v9 + v11[6]);
    uint64_t v17 = v11[7];
    uint64_t v18 = (char *)v8 + v17;
    uint64_t v19 = v9 + v17;
    uint64_t v20 = sub_1001238A0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    *(void *)((char *)v8 + v11[8]) = *(void *)(v9 + v11[8]);
    *(void *)((char *)v8 + v11[9]) = *(void *)(v9 + v11[9]);
    *((unsigned char *)v8 + v11[10]) = *(unsigned char *)(v9 + v11[10]);
    uint64_t v21 = v11[11];
    uint64_t v22 = (char *)v8 + v21;
    char v23 = (const void *)(v9 + v21);
    sub_10007C260(0, (unint64_t *)&qword_10015E708, sub_10002919C, (void (*)(void))sub_1000291D0);
    uint64_t v25 = v24;
    uint64_t v26 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v23, 1, v24))
    {
      sub_100029100();
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v26 + 16))(v22, v23, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v22, 0, 1, v25);
    }
    *(unsigned char *)(a1 + v40[16]) = *(unsigned char *)(a2 + v40[16]);
    *(unsigned char *)(a1 + v40[20]) = *(unsigned char *)(a2 + v40[20]);
    *(unsigned char *)(a1 + v40[24]) = *(unsigned char *)(a2 + v40[24]);
  }
  else
  {
    sub_10003A7CC();
    uint64_t v29 = *(int *)(v28 + 48);
    uint64_t v30 = (void *)(a1 + v29);
    uint64_t v31 = (uint64_t *)(a2 + v29);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    void *v30 = v33;
    v30[1] = v32;
    uint64_t v34 = *(int *)(v28 + 64);
    uint64_t v35 = (void *)(a1 + v34);
    uint64_t v36 = (void *)(a2 + v34);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10007C8EC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10007DCA0(a1, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_1001232B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      sub_10003A874();
      uint64_t v36 = v6;
      uint64_t v7 = v6[12];
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = a2 + v7;
      *uint64_t v8 = *(void *)(a2 + v7);
      v8[1] = *(void *)(a2 + v7 + 8);
      uint64_t v10 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
      uint64_t v11 = v10[5];
      uint64_t v35 = (char *)v8 + v11;
      uint64_t v12 = v9 + v11;
      sub_10007C260(0, &qword_10015EF70, sub_10003A98C, (void (*)(void))sub_10003A9C0);
      uint64_t v14 = v13;
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v35, v12, v14);
      *((unsigned char *)v8 + v10[6]) = *(unsigned char *)(v9 + v10[6]);
      uint64_t v16 = v10[7];
      uint64_t v17 = (char *)v8 + v16;
      uint64_t v18 = v9 + v16;
      uint64_t v19 = sub_1001238A0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      *(void *)((char *)v8 + v10[8]) = *(void *)(v9 + v10[8]);
      *(void *)((char *)v8 + v10[9]) = *(void *)(v9 + v10[9]);
      *((unsigned char *)v8 + v10[10]) = *(unsigned char *)(v9 + v10[10]);
      uint64_t v20 = v10[11];
      uint64_t v21 = (char *)v8 + v20;
      uint64_t v22 = (const void *)(v9 + v20);
      sub_10007C260(0, (unint64_t *)&qword_10015E708, sub_10002919C, (void (*)(void))sub_1000291D0);
      uint64_t v24 = v23;
      uint64_t v25 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v23))
      {
        sub_100029100();
        memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v25 + 16))(v21, v22, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
      }
      *(unsigned char *)(a1 + v36[16]) = *(unsigned char *)(a2 + v36[16]);
      *(unsigned char *)(a1 + v36[20]) = *(unsigned char *)(a2 + v36[20]);
      *(unsigned char *)(a1 + v36[24]) = *(unsigned char *)(a2 + v36[24]);
    }
    else
    {
      sub_10003A7CC();
      uint64_t v28 = *(int *)(v27 + 48);
      uint64_t v29 = (void *)(a1 + v28);
      uint64_t v30 = (void *)(a2 + v28);
      *uint64_t v29 = *v30;
      v29[1] = v30[1];
      uint64_t v31 = *(int *)(v27 + 64);
      uint64_t v32 = (void *)(a1 + v31);
      uint64_t v33 = (void *)(a2 + v31);
      *uint64_t v32 = *v33;
      v32[1] = v33[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for OverviewTimelineEntry()
{
  uint64_t result = qword_100160C50;
  if (!qword_100160C50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007CCD4(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    sub_10003A874();
    uint64_t v7 = v6;
    uint64_t v8 = v6[12];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = v9 + v12;
    uint64_t v14 = v10 + v12;
    sub_10007C260(0, &qword_10015EF70, sub_10003A98C, (void (*)(void))sub_10003A9C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    *(unsigned char *)(v9 + v11[6]) = *(unsigned char *)(v10 + v11[6]);
    uint64_t v16 = v11[7];
    uint64_t v17 = v9 + v16;
    uint64_t v18 = v10 + v16;
    uint64_t v19 = sub_1001238A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    *(void *)(v9 + v11[8]) = *(void *)(v10 + v11[8]);
    *(void *)(v9 + v11[9]) = *(void *)(v10 + v11[9]);
    *(unsigned char *)(v9 + v11[10]) = *(unsigned char *)(v10 + v11[10]);
    uint64_t v20 = v11[11];
    uint64_t v21 = (void *)(v9 + v20);
    uint64_t v22 = (const void *)(v10 + v20);
    sub_10007C260(0, (unint64_t *)&qword_10015E708, sub_10002919C, (void (*)(void))sub_1000291D0);
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v23))
    {
      sub_100029100();
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v21, v22, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    }
    *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
    *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
    *(unsigned char *)(a1 + v7[24]) = *(unsigned char *)(a2 + v7[24]);
  }
  else
  {
    sub_10003A7CC();
    *(_OWORD *)(a1 + *(int *)(v27 + 48)) = *(_OWORD *)(a2 + *(int *)(v27 + 48));
    *(_OWORD *)(a1 + *(int *)(v27 + 64)) = *(_OWORD *)(a2 + *(int *)(v27 + 64));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10007CFF8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10007DCA0(a1, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_1001232B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      sub_10003A874();
      uint64_t v7 = v6;
      uint64_t v8 = v6[12];
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
      uint64_t v11 = (int *)type metadata accessor for WatchlistOverviewContentViewModel(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = v9 + v12;
      uint64_t v14 = v10 + v12;
      sub_10007C260(0, &qword_10015EF70, sub_10003A98C, (void (*)(void))sub_10003A9C0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(unsigned char *)(v9 + v11[6]) = *(unsigned char *)(v10 + v11[6]);
      uint64_t v16 = v11[7];
      uint64_t v17 = v9 + v16;
      uint64_t v18 = v10 + v16;
      uint64_t v19 = sub_1001238A0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      *(void *)(v9 + v11[8]) = *(void *)(v10 + v11[8]);
      *(void *)(v9 + v11[9]) = *(void *)(v10 + v11[9]);
      *(unsigned char *)(v9 + v11[10]) = *(unsigned char *)(v10 + v11[10]);
      uint64_t v20 = v11[11];
      uint64_t v21 = (void *)(v9 + v20);
      uint64_t v22 = (const void *)(v10 + v20);
      sub_10007C260(0, (unint64_t *)&qword_10015E708, sub_10002919C, (void (*)(void))sub_1000291D0);
      uint64_t v24 = v23;
      uint64_t v25 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v23))
      {
        sub_100029100();
        memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v21, v22, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
      }
      *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
      *(unsigned char *)(a1 + v7[20]) = *(unsigned char *)(a2 + v7[20]);
      *(unsigned char *)(a1 + v7[24]) = *(unsigned char *)(a2 + v7[24]);
    }
    else
    {
      sub_10003A7CC();
      *(_OWORD *)(a1 + *(int *)(v27 + 48)) = *(_OWORD *)(a2 + *(int *)(v27 + 48));
      *(_OWORD *)(a1 + *(int *)(v27 + 64)) = *(_OWORD *)(a2 + *(int *)(v27 + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007D340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_10007D368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_10007D394()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10007D3A4()
{
  uint64_t result = sub_1001232B0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v5 = &v4;
    uint64_t result = type metadata accessor for WatchlistOverviewContentViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout();
      unint64_t v6 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10007D4BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for OverviewTimelineEntry();
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DDB8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10003A874();
    uint64_t v8 = v7;
    sub_100125960();
    uint64_t v10 = (uint64_t)&v6[*(int *)(v8 + 48)];
    uint64_t v11 = sub_100125970();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
    sub_10007DCA0(v10, type metadata accessor for WatchlistOverviewContentViewModel);
  }
  else
  {
    sub_10003A7CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100125960();
    uint64_t v9 = sub_100125970();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
  uint64_t v12 = sub_1001232B0();
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v6, v12);
}

uint64_t sub_10007D6C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_10007C260(0, &qword_10015EF70, sub_10003A98C, (void (*)(void))sub_10003A9C0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = &v20[-v7];
  uint64_t v9 = type metadata accessor for WatchlistOverviewContentViewModel(0);
  __chkstk_darwin(v9);
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for OverviewTimelineEntry();
  __chkstk_darwin(v12);
  uint64_t v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10007DDB8(v2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10003A874();
    sub_10007DC3C((uint64_t)&v14[*(int *)(v15 + 48)], (uint64_t)v11);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v8, &v11[*(int *)(v9 + 20)], v5);
    sub_100029068(0);
    sub_1001243D0();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    sub_10007DCA0((uint64_t)v11, type metadata accessor for WatchlistOverviewContentViewModel);
    sub_10007C260(0, &qword_100160C88, sub_10007DD00, (void (*)(void))sub_10007DD98);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);
  }
  else
  {
    sub_10003A7CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10007C260(0, &qword_100160C88, sub_10007DD00, (void (*)(void))sub_10007DD98);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a1, 1, 1, v17);
  }
  uint64_t v18 = sub_1001232B0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v18 - 8) + 8))(v14, v18);
}

uint64_t sub_10007DA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TickerCellViewModel(0);
  return sub_10007DDB8(a1 + *(int *)(v4 + 52), a2, (uint64_t (*)(void))sub_100029068);
}

uint64_t sub_10007DAC0@<X0>(uint64_t a1@<X8>)
{
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007DDB8(v5, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10003A874();
    uint64_t v7 = (uint64_t)&v4[*(int *)(v6 + 48)];
    uint64_t v8 = sub_1001232B0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, v4, v8);
    return sub_10007DCA0(v7, type metadata accessor for WatchlistOverviewContentViewModel);
  }
  else
  {
    sub_10003A7CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_1001232B0();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v4, v10);
  }
}

uint64_t sub_10007DC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchlistOverviewContentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007DCA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10007DD00(uint64_t a1)
{
}

void sub_10007DD34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10007DD98()
{
  return sub_10007C2D0(&qword_100160C98, sub_10007DD00);
}

uint64_t sub_10007DDB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007DE20(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = (_OWORD *)(a1 + 48);
    uint64_t v11 = a2 + 6;
    uint64_t v12 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      long long v13 = *((_OWORD *)a2 + 4);
      *uint64_t v10 = *v11;
      *(_OWORD *)(a1 + 64) = v13;
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v12;
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(void *)(a1 + 88) = a2[11];
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v15 = a2[13];
    uint64_t v16 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v16;
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    *(void *)(a1 + 136) = a2[17];
    uint64_t v17 = *(int *)(v6 + 36);
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    *(void *)(a1 + 104) = v15;
    uint64_t v20 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v21 = *((void *)v20 - 1);
    uint64_t v22 = *(unsigned int (**)(void *, uint64_t, int *))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      sub_1000805B8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      *uint64_t v18 = *v19;
      uint64_t v24 = v20[5];
      char v41 = (char *)v18 + v24;
      uint64_t v25 = (char *)v19 + v24;
      uint64_t v26 = sub_1001232B0();
      uint64_t v42 = v6;
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v41, v25, v26);
      sub_10002FE38();
      v27(&v41[*(int *)(v28 + 36)], &v25[*(int *)(v28 + 36)], v26);
      uint64_t v6 = v42;
      uint64_t v29 = v20[6];
      uint64_t v30 = (char *)v18 + v29;
      uint64_t v31 = (char *)v19 + v29;
      uint64_t v32 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
      uint64_t v33 = v20[8];
      uint64_t v34 = (char *)v18 + v33;
      uint64_t v35 = (char *)v19 + v33;
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v35[8];
      *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v36 = *(int *)(v6 + 40);
    uint64_t v37 = a1 + v36;
    uint64_t v38 = (uint64_t)a2 + v36;
    sub_10005A9D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t sub_10007E1B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1001232B0();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v6, v7);
    sub_10002FE38();
    v8(v6 + *(int *)(v9 + 36), v7);
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    uint64_t v11 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + *(int *)(a2 + 40);
  sub_10005A9D8();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v12, v13);
}

uint64_t sub_10007E368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = (_OWORD *)(a1 + 48);
  uint64_t v10 = a2 + 48;
  uint64_t v11 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    long long v12 = *(_OWORD *)(v10 + 16);
    *uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(v10 + 8);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v11;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v14;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *(void *)(a1 + 104) = v13;
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(unsigned int (**)(void *, uint64_t, int *))(v19 + 48);
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    sub_1000805B8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    uint64_t v22 = v18[5];
    uint64_t v40 = (char *)v16 + v22;
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v41 = a3;
    uint64_t v24 = sub_1001232B0();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v40, v23, v24);
    sub_10002FE38();
    uint64_t v27 = v24;
    a3 = v41;
    v25(&v40[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v27);
    uint64_t v28 = v18[6];
    uint64_t v29 = (char *)v16 + v28;
    uint64_t v30 = (char *)v17 + v28;
    uint64_t v31 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
    uint64_t v32 = v18[8];
    uint64_t v33 = (char *)v16 + v32;
    uint64_t v34 = (char *)v17 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v35 = *(int *)(a3 + 40);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_10005A9D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t sub_10007E6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) == 1)
  {
    if (v7 == 1)
    {
      long long v8 = *(_OWORD *)(a2 + 64);
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 64) = v8;
    }
    else
    {
      uint64_t v10 = *(void *)v6;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)uint64_t v5 = v10;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_10003088C(a1 + 48);
    long long v9 = *(_OWORD *)(a2 + 64);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    uint64_t v11 = *(void *)v6;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)uint64_t v5 = v11;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v13;
  uint64_t v14 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v14;
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      *uint64_t v16 = *v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v41 = v18[5];
      uint64_t v42 = (char *)v16 + v41;
      char v43 = (char *)v17 + v41;
      uint64_t v44 = sub_1001232B0();
      char v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24);
      v45(v42, v43, v44);
      sub_10002FE38();
      v45(&v42[*(int *)(v46 + 36)], &v43[*(int *)(v46 + 36)], v44);
      uint64_t v47 = v18[6];
      uint64_t v48 = (char *)v16 + v47;
      uint64_t v49 = (char *)v17 + v47;
      uint64_t v50 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
      uint64_t v51 = v18[7];
      int v52 = (void *)((char *)v16 + v51);
      uint64_t v53 = (void *)((char *)v17 + v51);
      *int v52 = *v53;
      v52[1] = v53[1];
      uint64_t v54 = v18[8];
      int v55 = (char *)v16 + v54;
      int v56 = (char *)v17 + v54;
      char v57 = v56[8];
      *(void *)int v55 = *(void *)v56;
      v55[8] = v57;
      *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
      goto LABEL_14;
    }
    sub_10008069C((uint64_t)v16, type metadata accessor for PreparedSparkline);
    goto LABEL_13;
  }
  if (v22)
  {
LABEL_13:
    sub_1000805B8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v16, v17, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  *uint64_t v16 = *v17;
  uint64_t v23 = v18[5];
  uint64_t v58 = (char *)v16 + v23;
  int v59 = (char *)v17 + v23;
  uint64_t v24 = sub_1001232B0();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v58, v59, v24);
  sub_10002FE38();
  v25(&v58[*(int *)(v26 + 36)], &v59[*(int *)(v26 + 36)], v24);
  uint64_t v27 = v18[6];
  uint64_t v28 = (char *)v16 + v27;
  uint64_t v29 = (char *)v17 + v27;
  uint64_t v30 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
  uint64_t v31 = v18[8];
  uint64_t v32 = (char *)v16 + v31;
  uint64_t v33 = (char *)v17 + v31;
  char v34 = v33[8];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v34;
  *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_14:
  uint64_t v36 = *(int *)(a3 + 40);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  sub_10005A9D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  return a1;
}

uint64_t sub_10007EBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v8 = *(int *)(a3 + 36);
  long long v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v11 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    sub_1000805B8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *long long v9 = *v10;
    uint64_t v14 = v11[5];
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v31 = (char *)v10 + v14;
    uint64_t v16 = sub_1001232B0();
    uint64_t v32 = v12;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
    v17(v15, v31, v16);
    sub_10002FE38();
    v17(&v15[*(int *)(v18 + 36)], &v31[*(int *)(v18 + 36)], v16);
    uint64_t v19 = v11[6];
    uint64_t v20 = (char *)v9 + v19;
    int v21 = (char *)v10 + v19;
    uint64_t v22 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    *(_OWORD *)((char *)v9 + v11[7]) = *(_OWORD *)((char *)v10 + v11[7]);
    uint64_t v23 = v11[8];
    uint64_t v24 = (char *)v9 + v23;
    uint64_t v25 = (char *)v10 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    *((unsigned char *)v9 + v11[9]) = *((unsigned char *)v10 + v11[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v32 + 56))(v9, 0, 1, v11);
  }
  uint64_t v26 = *(int *)(a3 + 40);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  sub_10005A9D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

uint64_t sub_10007EEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 48);
  long long v9 = (_OWORD *)(a2 + 48);
  if (*(void *)(a1 + 72) == 1) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(a2 + 72);
  if (v10 == 1)
  {
    sub_10003088C(a1 + 48);
LABEL_4:
    long long v11 = *(_OWORD *)(a2 + 64);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 64) = v11;
    goto LABEL_6;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      void *v14 = *v15;
      swift_bridgeObjectRelease();
      uint64_t v40 = v16[5];
      uint64_t v41 = (char *)v14 + v40;
      uint64_t v42 = (char *)v15 + v40;
      uint64_t v43 = sub_1001232B0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 40);
      v44(v41, v42, v43);
      sub_10002FE38();
      v44(&v41[*(int *)(v45 + 36)], &v42[*(int *)(v45 + 36)], v43);
      uint64_t v46 = v16[6];
      uint64_t v47 = (char *)v14 + v46;
      uint64_t v48 = (char *)v15 + v46;
      uint64_t v49 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40))(v47, v48, v49);
      *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
      uint64_t v50 = v16[8];
      uint64_t v51 = (char *)v14 + v50;
      int v52 = (char *)v15 + v50;
      v51[8] = v52[8];
      *(void *)uint64_t v51 = *(void *)v52;
      *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
      goto LABEL_12;
    }
    sub_10008069C((uint64_t)v14, type metadata accessor for PreparedSparkline);
    goto LABEL_11;
  }
  if (v20)
  {
LABEL_11:
    sub_1000805B8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v14, v15, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  void *v14 = *v15;
  uint64_t v21 = v16[5];
  uint64_t v22 = (char *)v14 + v21;
  uint64_t v23 = (char *)v15 + v21;
  uint64_t v24 = sub_1001232B0();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  sub_10002FE38();
  v25(&v22[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v24);
  uint64_t v27 = v16[6];
  uint64_t v28 = (char *)v14 + v27;
  uint64_t v29 = (char *)v15 + v27;
  uint64_t v30 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
  uint64_t v31 = v16[8];
  uint64_t v32 = (char *)v14 + v31;
  uint64_t v33 = (char *)v15 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
LABEL_12:
  uint64_t v35 = *(int *)(a3 + 40);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_10005A9D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t sub_10007F33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007F350);
}

uint64_t sub_10007F350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1000805B8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_10005A9D8();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10007F4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007F4C0);
}

uint64_t sub_10007F4C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1000805B8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_10005A9D8();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for LargeDetailWithNewsContentView()
{
  uint64_t result = qword_100160CF8;
  if (!qword_100160CF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007F668()
{
  sub_1000805B8(319, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_10005A9D8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10007F794()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007F7B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v84 = type metadata accessor for HeadlinesList();
  __chkstk_darwin(v84);
  uint64_t v86 = &v65[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000804F4(0, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  uint64_t v85 = v4;
  __chkstk_darwin(v4);
  uint64_t v89 = &v65[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v88 = &v65[-v7];
  uint64_t v83 = sub_100125750();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = &v65[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100080494();
  uint64_t v80 = v9;
  __chkstk_darwin(v9);
  uint64_t v87 = &v65[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v93 = &v65[-v12];
  uint64_t v13 = type metadata accessor for RowWithChartTicker();
  __chkstk_darwin(v13);
  uint64_t v15 = &v65[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000804F4(0, &qword_100160D60, (void (*)(uint64_t))type metadata accessor for RowWithChartTicker);
  uint64_t v78 = v16;
  __chkstk_darwin(v16);
  uint64_t v92 = &v65[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v91 = &v65[-v19];
  LODWORD(v77) = *((unsigned __int8 *)a1 + 80);
  uint64_t v20 = a1[1];
  uint64_t v76 = *a1;
  uint64_t v21 = a1[3];
  uint64_t v75 = a1[2];
  uint64_t v22 = a1[5];
  uint64_t v74 = a1[4];
  uint64_t v23 = a1[6];
  uint64_t v71 = a1[7];
  uint64_t v25 = a1[8];
  uint64_t v24 = a1[9];
  uint64_t v73 = a1[11];
  uint64_t v72 = (uint64_t (*)())*((unsigned __int8 *)a1 + 96);
  uint64_t v26 = a1[14];
  uint64_t v70 = a1[13];
  uint64_t v69 = a1[15];
  uint64_t v68 = *((unsigned __int8 *)a1 + 128);
  uint64_t v67 = a1[17];
  int v66 = *((unsigned __int8 *)a1 + 144);
  uint64_t v79 = type metadata accessor for LargeDetailWithNewsContentView();
  sub_100032264((uint64_t)a1 + *(int *)(v79 + 36), (uint64_t)&v15[*(int *)(v13 + 36)]);
  *uint64_t v15 = v77;
  *((void *)v15 + 1) = v76;
  *((void *)v15 + 2) = v20;
  *((void *)v15 + 3) = v75;
  *((void *)v15 + 4) = v21;
  *((void *)v15 + 5) = v74;
  *((void *)v15 + 6) = v22;
  uint64_t v27 = v71;
  *((void *)v15 + 7) = v23;
  *((void *)v15 + 8) = v27;
  *((void *)v15 + 9) = v25;
  *((void *)v15 + 10) = v24;
  uint64_t v28 = v72;
  *((void *)v15 + 11) = v73;
  *((void *)v15 + 12) = v28;
  *((void *)v15 + 13) = v70;
  *((void *)v15 + 14) = v26;
  uint64_t v29 = v68;
  *((void *)v15 + 15) = v69;
  *((void *)v15 + 16) = v29;
  *((void *)v15 + 17) = v67;
  v15[144] = v66;
  uint64_t v77 = v13;
  uint64_t v76 = *(int *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000321B8(v23, v27, v25, v24);
  uint64_t v30 = qword_10015D598;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  sub_100080560(0, (unint64_t *)&qword_10015D670, (uint64_t)&type metadata for Bool, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for SettingProperty);
  swift_allocObject();
  swift_retain();
  *(void *)&v15[v76] = sub_100123FD0();
  uint64_t v31 = (uint64_t *)&v15[*(int *)(v77 + 44)];
  *uint64_t v31 = swift_getKeyPath();
  sub_1000805B8(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  *(unsigned char *)(v33 + 24) = 1;
  *(void *)(v33 + 32) = 0;
  *(unsigned char *)(v33 + 40) = 0;
  uint64_t v34 = v92;
  sub_100080634((uint64_t)v15, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for RowWithChartTicker);
  uint64_t v35 = (uint64_t *)&v34[*(int *)(v78 + 36)];
  *uint64_t v35 = KeyPath;
  v35[1] = (uint64_t)sub_1000321B4;
  v35[2] = v33;
  sub_10008069C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for RowWithChartTicker);
  uint64_t v72 = type metadata accessor for RowWithChartTicker;
  uint64_t v36 = v91;
  sub_100080774((uint64_t)v34, (uint64_t)v91, &qword_100160D60, (void (*)(uint64_t))type metadata accessor for RowWithChartTicker);
  sub_1001257D0();
  sub_100124990();
  uint64_t v78 = v94;
  LODWORD(v77) = v95;
  uint64_t v76 = v96;
  LODWORD(v75) = v97;
  uint64_t v74 = v98;
  uint64_t v73 = v99;
  uint64_t v37 = v81;
  sub_100125740();
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = v82;
  uint64_t v40 = (uint64_t)v87;
  uint64_t v41 = v83;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v82 + 16))(v87, v37, v83);
  uint64_t v42 = v40 + *(int *)(v80 + 36);
  *(unsigned char *)uint64_t v42 = 1;
  *(void *)(v42 + 8) = v38;
  *(void *)(v42 + 16) = 0;
  *(void *)(v42 + 24) = 0;
  *(void *)(v42 + 32) = 0;
  *(unsigned char *)(v42 + 40) = 0;
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v37, v41);
  sub_100080700(v40, (uint64_t)v93);
  sub_1001257D0();
  sub_100124990();
  uint64_t v83 = v100;
  LODWORD(v82) = v101;
  uint64_t v81 = v102;
  LODWORD(v80) = v103;
  uint64_t v71 = v104;
  uint64_t v70 = v105;
  uint64_t v43 = (uint64_t)a1 + *(int *)(v79 + 40);
  sub_10005A9D8();
  uint64_t v45 = (uint64_t)v86;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v86, v43, v44);
  uint64_t v46 = v84;
  *(void *)(v45 + *(int *)(v84 + 20)) = 3;
  *(void *)(v45 + *(int *)(v46 + 24)) = 0x4028000000000000;
  uint64_t v47 = swift_getKeyPath();
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = 0;
  *(unsigned char *)(v48 + 24) = 0;
  *(void *)(v48 + 32) = 0;
  *(unsigned char *)(v48 + 40) = 1;
  uint64_t v49 = v89;
  sub_100080634(v45, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for HeadlinesList);
  uint64_t v50 = (uint64_t *)&v49[*(int *)(v85 + 36)];
  *uint64_t v50 = v47;
  v50[1] = (uint64_t)sub_1000321B4;
  v50[2] = v48;
  sub_10008069C(v45, (uint64_t (*)(void))type metadata accessor for HeadlinesList);
  uint64_t v51 = v88;
  sub_100080774((uint64_t)v49, (uint64_t)v88, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  uint64_t v52 = (uint64_t)v36;
  uint64_t v53 = (uint64_t)v34;
  uint64_t v54 = (uint64_t)v34;
  int v55 = (void (*)(uint64_t))v72;
  sub_1000807E0(v52, v54, &qword_100160D60, (void (*)(uint64_t))v72);
  int v56 = v93;
  sub_100080634((uint64_t)v93, v40, (uint64_t (*)(void))sub_100080494);
  sub_1000807E0((uint64_t)v51, (uint64_t)v49, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  uint64_t v57 = v90;
  sub_1000807E0(v53, v90, &qword_100160D60, v55);
  sub_100080398();
  uint64_t v59 = v58;
  uint64_t v60 = v57 + *(int *)(v58 + 48);
  *(void *)uint64_t v60 = 0;
  *(unsigned char *)(v60 + 8) = 1;
  *(void *)(v60 + 16) = v78;
  *(unsigned char *)(v60 + 24) = v77;
  *(void *)(v60 + 32) = v76;
  *(unsigned char *)(v60 + 40) = v75;
  uint64_t v61 = v73;
  *(void *)(v60 + 48) = v74;
  *(void *)(v60 + 56) = v61;
  sub_100080634(v40, v57 + *(int *)(v58 + 64), (uint64_t (*)(void))sub_100080494);
  uint64_t v62 = v57 + *(int *)(v59 + 80);
  *(void *)uint64_t v62 = 0;
  *(unsigned char *)(v62 + 8) = 1;
  *(void *)(v62 + 16) = v83;
  *(unsigned char *)(v62 + 24) = v82;
  *(void *)(v62 + 32) = v81;
  *(unsigned char *)(v62 + 40) = v80;
  uint64_t v63 = v70;
  *(void *)(v62 + 48) = v71;
  *(void *)(v62 + 56) = v63;
  sub_1000807E0((uint64_t)v49, v57 + *(int *)(v59 + 96), &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  sub_10008084C((uint64_t)v51, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  sub_10008069C((uint64_t)v56, (uint64_t (*)(void))sub_100080494);
  sub_10008084C((uint64_t)v91, &qword_100160D60, v55);
  sub_10008084C((uint64_t)v49, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  sub_10008069C(v40, (uint64_t (*)(void))sub_100080494);
  return sub_10008084C((uint64_t)v92, &qword_100160D60, v55);
}

uint64_t sub_1000802B8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100124EF0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  sub_100080300();
  return sub_10007F7B0(v1, a1 + *(int *)(v3 + 44));
}

void sub_100080300()
{
  if (!qword_100160D48)
  {
    sub_1000805B8(255, &qword_100160D50, (uint64_t (*)(uint64_t))sub_100080398, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160D48);
    }
  }
}

void sub_100080398()
{
  if (!qword_100160D58)
  {
    sub_1000804F4(255, &qword_100160D60, (void (*)(uint64_t))type metadata accessor for RowWithChartTicker);
    sub_100080560(255, (unint64_t *)&qword_10015FA58, (uint64_t)&type metadata for Spacer, (uint64_t)&type metadata for _FrameLayout, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_100080494();
    sub_1000804F4(255, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_100160D58);
    }
  }
}

void sub_100080494()
{
  if (!qword_100160D68)
  {
    sub_100125750();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160D68);
    }
  }
}

void sub_1000804F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_100031E94();
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100080560(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1000805B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100080624()
{
  return swift_deallocObject();
}

uint64_t sub_100080634(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10008069C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100080700(uint64_t a1, uint64_t a2)
{
  sub_100080494();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100080764()
{
  return swift_deallocObject();
}

uint64_t sub_100080774(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000804F4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1000807E0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000804F4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_10008084C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1000804F4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1000808A8()
{
  return sub_1000808F0(&qword_100160D78, (void (*)(uint64_t))sub_100080938);
}

uint64_t sub_1000808F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100080938()
{
  if (!qword_100160D80)
  {
    sub_1000805B8(255, &qword_100160D50, (uint64_t (*)(uint64_t))sub_100080398, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000809CC();
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160D80);
    }
  }
}

unint64_t sub_1000809CC()
{
  unint64_t result = qword_100160D88;
  if (!qword_100160D88)
  {
    sub_1000805B8(255, &qword_100160D50, (uint64_t (*)(uint64_t))sub_100080398, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100160D88);
  }
  return result;
}

uint64_t sub_100080A54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_1000055F8(0, &qword_1001625E0);
  uint64_t result = sub_100124100();
  if (v25)
  {
    sub_100009D98(a1, a1[3]);
    sub_1000055F8(0, &qword_100160EC8);
    uint64_t result = sub_100124100();
    if (v23)
    {
      uint64_t v5 = sub_100081398((uint64_t)v24, v25);
      __n128 v6 = __chkstk_darwin(v5);
      unint64_t v8 = (void *)((char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for TodayPrivateDataProvider();
      v21[3] = v11;
      v21[4] = &off_100152120;
      v21[0] = v10;
      uint64_t v12 = type metadata accessor for WidgetScoringService();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_100081398((uint64_t)v21, v11);
      __n128 v15 = __chkstk_darwin(v14);
      uint64_t v17 = (void *)((char *)&v21[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v18 + 16))(v17, v15);
      uint64_t v19 = *v17;
      v13[5] = v11;
      v13[6] = &off_100152120;
      v13[2] = v19;
      v13[12] = 0;
      sub_100029474(&v22, (uint64_t)(v13 + 7));
      sub_100009D48((uint64_t)v21);
      sub_100009D48((uint64_t)v24);
      a2[3] = v12;
      uint64_t result = sub_1000813E8(qword_100160EF0, (void (*)(uint64_t))type metadata accessor for WidgetScoringService);
      a2[4] = result;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100080D10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  uint64_t v3 = type metadata accessor for WidgetPersonalizationConfigurationManager();
  uint64_t result = sub_1001240F0();
  if (result)
  {
    uint64_t v5 = result;
    a2[3] = v3;
    uint64_t result = sub_1000813E8(&qword_100160EE8, (void (*)(uint64_t))type metadata accessor for WidgetPersonalizationConfigurationManager);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100080DB8(void *a1)
{
  sub_100009D98(a1, a1[3]);
  sub_1000055F8(0, &qword_10015E7B0);
  uint64_t result = sub_100124100();
  if (v4)
  {
    type metadata accessor for WidgetPersonalizationConfigurationManager();
    uint64_t v2 = swift_allocObject();
    sub_100029474(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100080E54@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100009D98(a1, a1[3]);
  sub_1000055F8(0, &qword_100160ED8);
  uint64_t result = sub_100124100();
  if (!v10)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_100009D98(a1, a1[3]);
  sub_1000055F8(0, &qword_10015FEF0);
  uint64_t result = sub_100124100();
  if (!v9)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_100009D98(a1, a1[3]);
  sub_1000055F8(0, &qword_10015E7B0);
  uint64_t result = sub_100124100();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_100009D98(a1, a1[3]);
  sub_1000055F8(0, &qword_100160EC0);
  uint64_t result = sub_100124100();
  if (v7)
  {
    uint64_t v5 = sub_100124510();
    swift_allocObject();
    uint64_t v6 = sub_100124500();
    a2[3] = v5;
    uint64_t result = sub_1000813E8(&qword_100160EE0, (void (*)(uint64_t))&type metadata accessor for NewsHeadlineScorerFactory);
    a2[4] = result;
    *a2 = v6;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PersonalizationAssembly()
{
  return self;
}

uint64_t sub_10008105C@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_100123BA0();
  a1[4] = (uint64_t)&protocol witness table for NoopFeedPersonalizerHeadlineScorer;
  sub_100081430(a1);
  return sub_100123B90();
}

uint64_t type metadata accessor for NoopPersonalizationAssembly()
{
  return self;
}

uint64_t sub_1000810C4()
{
  sub_100124140();
  sub_1000055F8(0, &qword_100160EC0);
  sub_100124270();
  swift_release();

  return swift_release();
}

uint64_t sub_100081144()
{
  uint64_t v0 = sub_1001242F0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100124140();
  sub_1000055F8(0, &qword_100160EC0);
  sub_100124270();
  swift_release();
  swift_release();
  sub_100124140();
  sub_1000055F8(0, &qword_100160EC8);
  sub_100124270();
  swift_release();
  swift_release();
  sub_100124150();
  type metadata accessor for WidgetPersonalizationConfigurationManager();
  sub_100124260();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.singleton(_:), v0);
  sub_1001240A0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100124140();
  sub_1000055F8(0, &qword_100160ED0);
  sub_100124270();
  swift_release();
  return swift_release();
}

uint64_t sub_100081398(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1000813E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100081430(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100081498@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_100083390(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_100123D40();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WidgetStock();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_10015D530 != -1) {
      swift_once();
    }
    uint64_t v14 = static Stock.compactPlaceholder;
  }
  else
  {
    if (qword_10015D528 != -1) {
      swift_once();
    }
    uint64_t v14 = static Stock.placeholder;
  }
  uint64_t v15 = sub_100019244(v7, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
  uint64_t v16 = &v13[*(int *)(v11 + 20)];
  uint64_t v17 = sub_100123670();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = (uint64_t)&v13[*(int *)(v11 + 24)];
  sub_10008DBD0(v18);
  uint64_t v19 = type metadata accessor for PreparedSparkline(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v10, v7);
  if (qword_10015D548 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_100172638;
  sub_10005A9D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
  swift_bridgeObjectRetain();
  return sub_1000C87C4((uint64_t)v13, v20, (uint64_t)v6, a2);
}

uint64_t sub_1000817F8()
{
  uint64_t v0 = sub_100123E40();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100123D40();
  sub_10001927C(v4, static Stock.placeholder);
  sub_100019244(v4, (uint64_t)static Stock.placeholder);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for StockType.equity(_:), v0);
  return sub_100123D10();
}

uint64_t Stock.placeholder.unsafeMutableAddressor()
{
  return sub_100081B74(&qword_10015D528, (uint64_t)static Stock.placeholder);
}

uint64_t static Stock.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100081BEC(&qword_10015D528, (uint64_t)static Stock.placeholder, a1);
}

uint64_t sub_10008198C(uint64_t a1)
{
  return sub_1000819A0(a1, static Stock.compactPlaceholder);
}

uint64_t sub_1000819A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100123E40();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100123D40();
  sub_10001927C(v7, a2);
  sub_100019244(v7, (uint64_t)a2);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for StockType.equity(_:), v3);
  return sub_100123D10();
}

uint64_t Stock.compactPlaceholder.unsafeMutableAddressor()
{
  return sub_100081B74(&qword_10015D530, (uint64_t)static Stock.compactPlaceholder);
}

uint64_t static Stock.compactPlaceholder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100081BEC(&qword_10015D530, (uint64_t)static Stock.compactPlaceholder, a1);
}

uint64_t sub_100081B2C(uint64_t a1)
{
  return sub_1000819A0(a1, static Stock.largeComplicationPlaceholder);
}

uint64_t Stock.largeComplicationPlaceholder.unsafeMutableAddressor()
{
  return sub_100081B74(&qword_10015D538, (uint64_t)static Stock.largeComplicationPlaceholder);
}

uint64_t sub_100081B74(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_100123D40();

  return sub_100019244(v3, a2);
}

uint64_t static Stock.largeComplicationPlaceholder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100081BEC(&qword_10015D538, (uint64_t)static Stock.largeComplicationPlaceholder, a1);
}

uint64_t sub_100081BEC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100123D40();
  uint64_t v6 = sub_100019244(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_100081C84()
{
  sub_100083390(0, &qword_10015E740, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - v1;
  uint64_t v3 = sub_1001236A0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100123670();
  sub_10001927C(v7, qword_100172620);
  sub_100019244(v7, (uint64_t)qword_100172620);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ExchangeStatus.open(_:), v3);
  uint64_t v8 = sub_1001232B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  return sub_100123650();
}

uint64_t sub_100081E60()
{
  uint64_t v19 = sub_1001232E0();
  uint64_t v0 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v22 = &_swiftEmptyArrayStorage;
  uint64_t v3 = 10;
  sub_10009BB5C(0, 10, 0);
  uint64_t v18 = (void (**)(char *, uint64_t))(v0 + 8);
  do
  {
    sub_1001232D0();
    uint64_t v20 = sub_1001232C0();
    uint64_t v5 = v4;
    (*v18)(v2, v19);
    unint64_t v21 = 0;
    swift_stdlib_random();
    v23._countAndFlagsBits = 46;
    v23._object = (void *)0xE100000000000000;
    uint64_t v6 = sub_100125BD0(v23, (v21 >> 62) + 3);
    uint64_t v8 = v7;
    unint64_t v21 = 0;
    swift_stdlib_random();
    v24._countAndFlagsBits = 46;
    v24._object = (void *)0xE100000000000000;
    uint64_t v9 = sub_100125BD0(v24, (v21 >> 63) | 2);
    uint64_t v11 = v10;
    uint64_t v12 = (uint64_t)v22;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10009BB5C(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = (uint64_t)v22;
    }
    unint64_t v15 = *(void *)(v12 + 16);
    unint64_t v14 = *(void *)(v12 + 24);
    if (v15 >= v14 >> 1)
    {
      uint64_t result = sub_10009BB5C(v14 > 1, v15 + 1, 1);
      uint64_t v12 = (uint64_t)v22;
    }
    *(void *)(v12 + 16) = v15 + 1;
    uint64_t v16 = (void *)(v12 + 48 * v15);
    v16[4] = v20;
    v16[5] = v5;
    void v16[6] = v6;
    v16[7] = v8;
    v16[8] = v9;
    v16[9] = v11;
    --v3;
  }
  while (v3);
  qword_100172638 = v12;
  return result;
}

uint64_t sub_100082064()
{
  sub_100083390(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - v1;
  uint64_t v3 = type metadata accessor for WidgetStock();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DetailContentViewModel(0);
  sub_10001927C(v6, qword_100172640);
  uint64_t v7 = sub_100019244(v6, (uint64_t)qword_100172640);
  if (qword_10015D558 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100019244(v3, (uint64_t)qword_100172658);
  sub_100082530(v8, (uint64_t)v5);
  if (qword_10015D548 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_100172638;
  sub_10005A9D8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v2, 1, 1, v10);
  swift_bridgeObjectRetain();
  return sub_1000C87C4((uint64_t)v5, v9, (uint64_t)v2, v7);
}

uint64_t sub_10008225C()
{
  sub_100083390(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v16 - v1;
  uint64_t v3 = sub_100123D40();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WidgetStock();
  sub_10001927C(v7, qword_100172658);
  uint64_t v8 = sub_100019244(v7, (uint64_t)qword_100172658);
  if (qword_10015D538 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100019244(v3, (uint64_t)static Stock.largeComplicationPlaceholder);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  if (qword_10015D540 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100123670();
  uint64_t v11 = sub_100019244(v10, (uint64_t)qword_100172620);
  uint64_t v12 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v2, v11, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v2, 0, 1, v10);
  uint64_t v13 = v8 + *(int *)(v7 + 24);
  uint64_t v14 = type metadata accessor for PreparedSparkline(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8, v6, v3);
  return sub_100009FB0((uint64_t)v2, v8 + *(int *)(v7 + 20));
}

uint64_t sub_100082530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetStock();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100082594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_100126010();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  __n128 v13 = __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v19 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, a1, v7, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v16 = v3 + *(int *)(a2 + 60);
    uint64_t v17 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v20, v16, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v10, AssociatedTypeWitness);
    sub_100122F50();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, AssociatedTypeWitness);
  }
}

uint64_t sub_1000827F8()
{
  return sub_100125A40();
}

uint64_t sub_100082874()
{
  if (sub_100125A90())
  {
    swift_getAssociatedTypeWitness();
    type metadata accessor for NilPlaceholderFormatStyle();
    char v0 = sub_100125A90();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_100082940(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F686563616C70 && a2 == 0xEB00000000726564)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100082A3C(char a1)
{
  if (a1) {
    return 0x6C6F686563616C70;
  }
  else {
    return 1702060386;
  }
}

uint64_t sub_100082A74(void *a1, uint64_t a2)
{
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v12 = v10;
  long long v11 = *(_OWORD *)(a2 + 24);
  long long v9 = *(_OWORD *)(a2 + 40);
  long long v13 = v11;
  long long v14 = v9;
  type metadata accessor for NilPlaceholderFormatStyle.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_1001264D0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - v5;
  sub_100009D98(a1, a1[3]);
  sub_100126650();
  LOBYTE(v12) = 0;
  uint64_t v7 = v15;
  sub_1001264C0();
  if (!v7)
  {
    LOBYTE(v12) = 1;
    swift_getAssociatedTypeWitness();
    sub_1001264C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int sub_100082C70()
{
  return sub_100126630();
}

uint64_t sub_100082CB8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v37 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v38 = (char *)&v34 - v13;
  uint64_t v41 = *(void *)(a2 - 8);
  __chkstk_darwin(v14);
  uint64_t v43 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  type metadata accessor for NilPlaceholderFormatStyle.CodingKeys();
  swift_getWitnessTable();
  uint64_t v46 = sub_100126410();
  uint64_t v40 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v17 = (char *)&v34 - v16;
  uint64_t v44 = a3;
  uint64_t v45 = a2;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v39 = a4;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v18 = type metadata accessor for NilPlaceholderFormatStyle();
  uint64_t v35 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v34 - v19;
  sub_100009D98(a1, a1[3]);
  uint64_t v21 = (uint64_t)v52;
  sub_100126640();
  if (v21) {
    return sub_100009D48((uint64_t)a1);
  }
  uint64_t v23 = v40;
  uint64_t v22 = v41;
  uint64_t v52 = a1;
  uint64_t v24 = AssociatedTypeWitness;
  uint64_t v25 = v43;
  LOBYTE(v47) = 0;
  sub_1001263F0();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  uint64_t v44 = v20;
  v26(v20, v25, v45);
  LOBYTE(v47) = 1;
  uint64_t v27 = v38;
  uint64_t v28 = v24;
  sub_1001263F0();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v46);
  uint64_t v29 = v18;
  uint64_t v30 = *(int *)(v18 + 60);
  uint64_t v31 = v44;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v44[v30], v27, v28);
  uint64_t v32 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v37, v31, v29);
  sub_100009D48((uint64_t)v52);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v31, v29);
}

BOOL sub_100083120(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static StockChartHighlightStyle.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10008313C()
{
  return StockChartHighlightStyle.hashValue.getter(*v0);
}

void sub_100083154(uint64_t a1)
{
  StockChartHighlightStyle.hash(into:)(a1, *v1);
}

Swift::Int sub_10008316C()
{
  sub_1001265F0();
  StockChartHighlightStyle.hash(into:)((uint64_t)v2, *v0);
  return sub_100126630();
}

uint64_t sub_1000831BC()
{
  return sub_100082A3C(*v0);
}

uint64_t sub_1000831D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100082940(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10008320C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100084248();
  *a1 = result;
  return result;
}

uint64_t sub_100083244(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100083298(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1000832F0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100082CB8(a1, *(void *)(a2 + 16), *(char **)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), *(void *)(a2 + 48), a3);
}

uint64_t sub_100083318(void *a1, uint64_t a2)
{
  return sub_100082A74(a1, a2);
}

Swift::Int sub_100083338()
{
  return sub_100126630();
}

uint64_t sub_10008337C()
{
  return sub_100082874();
}

void sub_100083390(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000833F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

uint64_t sub_1000833FC()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_1000834EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v12 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (v11 & (unint64_t)~v10) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 0x18)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = AssociatedTypeWitness;
    uint64_t v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, ((unint64_t)a2 + v11) & v17, v16);
  }
  return a1;
}

uint64_t sub_10008366C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = AssociatedTypeWitness;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v9, v8);
}

uint64_t sub_100083738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_10008380C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1000838E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1000839B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))((v6 + *(unsigned __int8 *)(v8 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (v6 + *(unsigned __int8 *)(v8 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_100083A88(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v13 & ~v12) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_100083D1C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = (v15 & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x100084030);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for NilPlaceholderFormatStyle()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100084070()
{
  return swift_getWitnessTable();
}

uint64_t sub_10008408C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000840A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000840C4()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for NilPlaceholderFormatStyle.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000840F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

unsigned char *sub_100084100(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000841CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1000841F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100084210()
{
  return swift_getWitnessTable();
}

uint64_t sub_10008422C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100084248()
{
  return 2;
}

uint64_t sub_100084250@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + 48) = 1;
  *(void *)(a3 + 56) = 1;
  unsigned int v4 = self;
  *(void *)(a3 + 64) = [v4 labelColor];
  *(void *)(a3 + 72) = [v4 systemBackgroundColor];
  *(void *)(a3 + 80) = [v4 secondarySystemFillColor];
  *(void *)(a3 + 88) = [objc_allocWithZone((Class)UIColor) initWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:1.0];
  *(void *)(a3 + 96) = [v4 separatorColor];
  *(void *)(a3 + 104) = [v4 separatorColor];
  *(void *)(a3 + 112) = [objc_allocWithZone((Class)UIColor) initWithRed:0.882352941 green:0.960784314 blue:0.905882353 alpha:1.0];
  *(void *)(a3 + 120) = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.490196078 blue:0.105882353 alpha:1.0];
  *(void *)(a3 + 128) = [objc_allocWithZone((Class)UIColor) initWithRed:0.203921569 green:0.780392157 blue:0.349019608 alpha:1.0];
  *(void *)(a3 + 136) = [objc_allocWithZone((Class)UIColor) initWithRed:0.247058824 green:0.941176471 blue:0.419607843 alpha:1.0];
  *(void *)(a3 + 144) = [objc_allocWithZone((Class)UIColor) initWithRed:0.870588235 green:0.0274509804 blue:0.109803922 alpha:1.0];
  *(void *)(a3 + 152) = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.231372549 blue:0.188235294 alpha:1.0];
  *(void *)(a3 + 160) = [objc_allocWithZone((Class)UIColor) initWithRed:0.231372549 green:0.588235294 blue:0.97254902 alpha:1.0];
  *(void *)(a3 + 168) = [v4 secondaryLabelColor];
  *(void *)(a3 + 176) = [v4 tertiaryLabelColor];
  *(void *)(a3 + 184) = [objc_allocWithZone((Class)UIColor) initWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:1.0];
  *(void *)(a3 + 192) = [objc_allocWithZone((Class)UIColor) initWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:0.14];
  *(void *)(a3 + 200) = [objc_allocWithZone((Class)UIColor) initWithRed:0.298039216 green:0.850980392 blue:0.392156863 alpha:1.0];
  *(void *)(a3 + 208) = [objc_allocWithZone((Class)UIColor) initWithRed:0.352941176 green:0.784313725 blue:0.980392157 alpha:1.0];
  *(void *)(a3 + 216) = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.592156863 blue:1.0 alpha:1.0];
  *(void *)(a3 + 224) = [objc_allocWithZone((Class)UIColor) initWithRed:0.552941176 green:0.294117647 blue:1.0 alpha:1.0];
  *(void *)(a3 + 232) = [objc_allocWithZone((Class)UIColor) initWithRed:0.407843137 green:0.0 blue:1.0 alpha:1.0];
  *(unsigned char *)(a3 + 240) = 1;
  *(void *)(a3 + 248) = [objc_allocWithZone((Class)UIColor) initWithWhite:0.670588235 alpha:1.0];
  id v5 = [v4 whiteColor];
  id v6 = [v5 colorWithAlphaComponent:0.25];

  *(void *)(a3 + 256) = v6;
  id v7 = [v4 whiteColor];
  id v8 = [v7 colorWithAlphaComponent:0.25];

  *(void *)(a3 + 264) = v8;
  id v9 = [v4 whiteColor];
  id v10 = [v9 colorWithAlphaComponent:0.6];

  *(void *)(a3 + 272) = v10;
  id v11 = [v4 grayColor];
  id v12 = [v11 colorWithAlphaComponent:0.3];

  *(void *)(a3 + 280) = v12;
  *(void *)(a3 + 288) = [objc_allocWithZone((Class)UIColor) initWithRed:0.365 green:0.365 blue:0.365 alpha:1.0];
  *(void *)(a3 + 296) = [v4 whiteColor];
  *(void *)(a3 + 304) = [v4 blackColor];
  *(void *)(a3 + 312) = [v4 secondaryLabelColor];
  *(void *)(a3 + 320) = [v4 secondarySystemBackgroundColor];
  *(void *)(a3 + 328) = [v4 secondaryLabelColor];
  *(void *)(a3 + 336) = [v4 labelColor];
  *(void *)(a3 + 344) = [v4 secondarySystemFillColor];
  *(void *)(a3 + 352) = [objc_allocWithZone((Class)UIColor) initWithRed:0.305882353 green:0.305882353 blue:0.31372549 alpha:0.2];
  *(void *)(a3 + 360) = [objc_allocWithZone((Class)UIColor) initWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:1.0];
  *(void *)(a3 + 368) = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:1.0 blue:1.0 alpha:0.3];
  *(void *)(a3 + 376) = [v4 secondaryLabelColor];
  *(void *)(a3 + 384) = [v4 labelColor];
  uint64_t result = sub_100029474(a1, a3);
  *(void *)(a3 + 40) = a2;
  return result;
}

void destroy for DarkTheme(uint64_t a1)
{
  sub_100009D48(a1);

  unint64_t v2 = *(void **)(a1 + 384);
}

uint64_t initializeWithCopy for DarkTheme(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  id v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v6 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  id v8 = *(void **)(a2 + 72);
  id v7 = *(void **)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v7;
  id v10 = *(void **)(a2 + 88);
  id v9 = *(void **)(a2 + 96);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v9;
  id v12 = *(void **)(a2 + 104);
  id v11 = *(void **)(a2 + 112);
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = v11;
  uint64_t v14 = *(void **)(a2 + 120);
  unsigned int v13 = *(void **)(a2 + 128);
  *(void *)(a1 + 120) = v14;
  *(void *)(a1 + 128) = v13;
  uint64_t v67 = v13;
  uint64_t v68 = *(void **)(a2 + 136);
  uint64_t v15 = *(void **)(a2 + 144);
  *(void *)(a1 + 136) = v68;
  *(void *)(a1 + 144) = v15;
  uint64_t v69 = v15;
  uint64_t v70 = *(void **)(a2 + 152);
  size_t v16 = *(void **)(a2 + 160);
  *(void *)(a1 + 152) = v70;
  *(void *)(a1 + 160) = v16;
  uint64_t v71 = v16;
  uint64_t v72 = *(void **)(a2 + 168);
  int v17 = *(void **)(a2 + 176);
  *(void *)(a1 + 168) = v72;
  *(void *)(a1 + 176) = v17;
  uint64_t v73 = v17;
  uint64_t v74 = *(void **)(a2 + 184);
  unsigned int v18 = *(void **)(a2 + 192);
  *(void *)(a1 + 184) = v74;
  *(void *)(a1 + 192) = v18;
  uint64_t v75 = v18;
  uint64_t v76 = *(void **)(a2 + 200);
  int v19 = *(void **)(a2 + 208);
  *(void *)(a1 + 200) = v76;
  *(void *)(a1 + 208) = v19;
  uint64_t v77 = v19;
  uint64_t v78 = *(void **)(a2 + 216);
  uint64_t v79 = *(void **)(a2 + 224);
  *(void *)(a1 + 216) = v78;
  *(void *)(a1 + 224) = v79;
  uint64_t v81 = *(void **)(a2 + 232);
  *(void *)(a1 + 232) = v81;
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  unsigned int v20 = *(void **)(a2 + 256);
  uint64_t v80 = *(void **)(a2 + 248);
  *(void *)(a1 + 248) = v80;
  *(void *)(a1 + 256) = v20;
  uint64_t v82 = v20;
  uint64_t v83 = *(void **)(a2 + 264);
  int v21 = *(void **)(a2 + 272);
  *(void *)(a1 + 264) = v83;
  *(void *)(a1 + 272) = v21;
  uint64_t v84 = v21;
  uint64_t v85 = *(void **)(a2 + 280);
  uint64_t v22 = *(void **)(a2 + 288);
  *(void *)(a1 + 280) = v85;
  *(void *)(a1 + 288) = v22;
  uint64_t v86 = v22;
  uint64_t v87 = *(void **)(a2 + 296);
  uint64_t v88 = *(void **)(a2 + 304);
  *(void *)(a1 + 296) = v87;
  *(void *)(a1 + 304) = v88;
  uint64_t v89 = *(void **)(a2 + 312);
  uint64_t v90 = *(void **)(a2 + 320);
  *(void *)(a1 + 312) = v89;
  *(void *)(a1 + 320) = v90;
  uint64_t v91 = *(void **)(a2 + 328);
  uint64_t v92 = *(void **)(a2 + 336);
  *(void *)(a1 + 328) = v91;
  *(void *)(a1 + 336) = v92;
  uint64_t v93 = *(void **)(a2 + 344);
  uint64_t v94 = *(void **)(a2 + 352);
  *(void *)(a1 + 344) = v93;
  *(void *)(a1 + 352) = v94;
  unsigned __int8 v95 = *(void **)(a2 + 360);
  uint64_t v96 = *(void **)(a2 + 368);
  *(void *)(a1 + 360) = v95;
  *(void *)(a1 + 368) = v96;
  uint64_t v23 = *(void **)(a2 + 376);
  uint64_t v24 = *(void **)(a2 + 384);
  unsigned __int8 v97 = v23;
  *(void *)(a1 + 376) = v23;
  *(void *)(a1 + 384) = v24;
  id v25 = v5;
  id v26 = v6;
  id v27 = v8;
  id v28 = v7;
  id v29 = v10;
  id v30 = v9;
  id v31 = v12;
  id v32 = v11;
  id v33 = v14;
  id v34 = v67;
  id v35 = v68;
  id v36 = v69;
  id v37 = v70;
  id v38 = v71;
  id v39 = v72;
  id v40 = v73;
  id v41 = v74;
  id v42 = v75;
  id v43 = v76;
  id v44 = v77;
  id v45 = v78;
  id v46 = v79;
  id v47 = v81;
  id v48 = v80;
  id v49 = v82;
  id v50 = v83;
  id v51 = v84;
  id v52 = v85;
  id v53 = v86;
  id v54 = v87;
  id v55 = v88;
  id v56 = v89;
  id v57 = v90;
  id v58 = v91;
  id v59 = v92;
  id v60 = v93;
  id v61 = v94;
  id v62 = v95;
  id v63 = v96;
  id v64 = v97;
  id v65 = v24;
  return a1;
}

uint64_t assignWithCopy for DarkTheme(uint64_t a1, uint64_t a2)
{
  sub_1000850CC((uint64_t *)a1, (uint64_t *)a2);
  long long v4 = *(void **)(a1 + 40);
  id v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  id v7 = *(void **)(a2 + 64);
  id v8 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 72);
  id v11 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v10;
  id v12 = v10;

  unsigned int v13 = *(void **)(a2 + 80);
  uint64_t v14 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v13;
  id v15 = v13;

  size_t v16 = *(void **)(a2 + 88);
  int v17 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = v16;
  id v18 = v16;

  int v19 = *(void **)(a2 + 96);
  unsigned int v20 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v19;
  id v21 = v19;

  uint64_t v22 = *(void **)(a2 + 104);
  uint64_t v23 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v22;
  id v24 = v22;

  id v25 = *(void **)(a2 + 112);
  id v26 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v25;
  id v27 = v25;

  id v28 = *(void **)(a2 + 120);
  id v29 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v28;
  id v30 = v28;

  id v31 = *(void **)(a2 + 128);
  id v32 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = v31;
  id v33 = v31;

  id v34 = *(void **)(a2 + 136);
  id v35 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v34;
  id v36 = v34;

  id v37 = *(void **)(a2 + 144);
  id v38 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v37;
  id v39 = v37;

  id v40 = *(void **)(a2 + 152);
  id v41 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v40;
  id v42 = v40;

  id v43 = *(void **)(a2 + 160);
  id v44 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v43;
  id v45 = v43;

  id v46 = *(void **)(a2 + 168);
  id v47 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v46;
  id v48 = v46;

  id v49 = *(void **)(a2 + 176);
  id v50 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v49;
  id v51 = v49;

  id v52 = *(void **)(a2 + 184);
  id v53 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = v52;
  id v54 = v52;

  id v55 = *(void **)(a2 + 192);
  id v56 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = v55;
  id v57 = v55;

  id v58 = *(void **)(a2 + 200);
  id v59 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v58;
  id v60 = v58;

  id v61 = *(void **)(a2 + 208);
  id v62 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = v61;
  id v63 = v61;

  id v64 = *(void **)(a2 + 216);
  id v65 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = v64;
  id v66 = v64;

  uint64_t v67 = *(void **)(a2 + 224);
  uint64_t v68 = *(void **)(a1 + 224);
  *(void *)(a1 + 224) = v67;
  id v69 = v67;

  uint64_t v70 = *(void **)(a2 + 232);
  uint64_t v71 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = v70;
  id v72 = v70;

  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  uint64_t v73 = *(void **)(a2 + 248);
  uint64_t v74 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = v73;
  id v75 = v73;

  uint64_t v76 = *(void **)(a2 + 256);
  uint64_t v77 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = v76;
  id v78 = v76;

  uint64_t v79 = *(void **)(a2 + 264);
  uint64_t v80 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = v79;
  id v81 = v79;

  uint64_t v82 = *(void **)(a2 + 272);
  uint64_t v83 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = v82;
  id v84 = v82;

  uint64_t v85 = *(void **)(a2 + 280);
  uint64_t v86 = *(void **)(a1 + 280);
  *(void *)(a1 + 280) = v85;
  id v87 = v85;

  uint64_t v88 = *(void **)(a2 + 288);
  uint64_t v89 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = v88;
  id v90 = v88;

  uint64_t v91 = *(void **)(a2 + 296);
  uint64_t v92 = *(void **)(a1 + 296);
  *(void *)(a1 + 296) = v91;
  id v93 = v91;

  uint64_t v94 = *(void **)(a2 + 304);
  unsigned __int8 v95 = *(void **)(a1 + 304);
  *(void *)(a1 + 304) = v94;
  id v96 = v94;

  unsigned __int8 v97 = *(void **)(a2 + 312);
  uint64_t v98 = *(void **)(a1 + 312);
  *(void *)(a1 + 312) = v97;
  id v99 = v97;

  uint64_t v100 = *(void **)(a2 + 320);
  unsigned __int8 v101 = *(void **)(a1 + 320);
  *(void *)(a1 + 320) = v100;
  id v102 = v100;

  unsigned __int8 v103 = *(void **)(a2 + 328);
  uint64_t v104 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = v103;
  id v105 = v103;

  uint64_t v106 = *(void **)(a2 + 336);
  long long v107 = *(void **)(a1 + 336);
  *(void *)(a1 + 336) = v106;
  id v108 = v106;

  uint64_t v109 = *(void **)(a2 + 344);
  uint64_t v110 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = v109;
  id v111 = v109;

  uint64_t v112 = *(void **)(a2 + 352);
  uint64_t v113 = *(void **)(a1 + 352);
  *(void *)(a1 + 352) = v112;
  id v114 = v112;

  uint64_t v115 = *(void **)(a2 + 360);
  uint64_t v116 = *(void **)(a1 + 360);
  *(void *)(a1 + 360) = v115;
  id v117 = v115;

  uint64_t v118 = *(void **)(a2 + 368);
  uint64_t v119 = *(void **)(a1 + 368);
  *(void *)(a1 + 368) = v118;
  id v120 = v118;

  uint64_t v121 = *(void **)(a2 + 376);
  uint64_t v122 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = v121;
  id v123 = v121;

  uint64_t v124 = *(void **)(a2 + 384);
  uint64_t v125 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = v124;
  id v126 = v124;

  return a1;
}

uint64_t *sub_1000850CC(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        id v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *initializeWithTake for DarkTheme(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x188uLL);
}

uint64_t assignWithTake for DarkTheme(uint64_t a1, uint64_t a2)
{
  sub_100009D48(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void **)(a1 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void **)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;

  int v9 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  uint64_t v10 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  id v11 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  uint64_t v12 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  unsigned int v13 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  uint64_t v14 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  id v15 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

  size_t v16 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  int v17 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  id v18 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);

  int v19 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);

  unsigned int v20 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  id v21 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);

  uint64_t v22 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);

  uint64_t v23 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);

  id v24 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  id v25 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);

  id v26 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);

  id v27 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);

  id v28 = *(void **)(a1 + 224);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);

  id v29 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);

  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  id v30 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);

  id v31 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);

  id v32 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);

  id v33 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);

  id v34 = *(void **)(a1 + 280);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);

  id v35 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);

  id v36 = *(void **)(a1 + 296);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);

  id v37 = *(void **)(a1 + 304);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);

  id v38 = *(void **)(a1 + 312);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);

  id v39 = *(void **)(a1 + 320);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);

  id v40 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);

  id v41 = *(void **)(a1 + 336);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);

  id v42 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);

  id v43 = *(void **)(a1 + 352);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);

  id v44 = *(void **)(a1 + 360);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);

  id v45 = *(void **)(a1 + 368);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);

  id v46 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);

  id v47 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);

  return a1;
}

uint64_t getEnumTagSinglePayload for DarkTheme(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 392)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DarkTheme(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 392) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 392) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DarkTheme()
{
  return &type metadata for DarkTheme;
}

id sub_1000856D4()
{
  unint64_t v1 = *(void **)(v0 + 40);
  if (v1 && (id v2 = [v1 horizontalSizeClass], (unint64_t)v2 >= 2))
  {
    if (v2 == (id)2)
    {
      sub_100085B7C();
      return (id)sub_100125FD0();
    }
    else
    {
      id result = (id)sub_100126290();
      __break(1u);
    }
  }
  else
  {
    id v3 = [self secondarySystemBackgroundColor];
    return v3;
  }
  return result;
}

uint64_t sub_1000857B0()
{
  return *(unsigned __int8 *)(v0 + 48);
}

id sub_1000857B8()
{
  return *(id *)(v0 + 72);
}

id sub_1000857C0(uint64_t a1, uint64_t a2)
{
  return sub_100085AF0(a1, a2, (SEL *)&selRef_systemBackgroundColor);
}

id sub_1000857D0()
{
  return *(id *)(v0 + 80);
}

id sub_1000857D8(uint64_t a1, uint64_t a2)
{
  return sub_100085AF0(a1, a2, (SEL *)&selRef_whiteColor);
}

uint64_t sub_1000857E8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_100009D98(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_10008583C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_100009D98(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

id sub_100085890()
{
  return *(id *)(v0 + 88);
}

id sub_100085898()
{
  return *(id *)(v0 + 96);
}

id sub_1000858A0()
{
  return *(id *)(v0 + 104);
}

id sub_1000858A8()
{
  BOOL v1 = UIAccessibilityDarkerSystemColorsEnabled();
  uint64_t v2 = 128;
  if (v1) {
    uint64_t v2 = 136;
  }
  id v3 = *(void **)(v0 + v2);

  return v3;
}

id sub_1000858E4()
{
  return *(id *)(v0 + 112);
}

id sub_1000858EC()
{
  return *(id *)(v0 + 152);
}

id sub_1000858F4()
{
  return *(id *)(v0 + 160);
}

id sub_100085900()
{
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    BOOL v1 = v0 + 15;
  }
  else
  {
    BOOL v2 = UIAccessibilityDarkerSystemColorsEnabled();
    BOOL v1 = v0 + 17;
    if (!v2) {
      BOOL v1 = v0 + 16;
    }
  }
  id v3 = *v1;

  return v3;
}

id sub_10008594C()
{
  BOOL v1 = UIAccessibilityDarkerSystemColorsEnabled();
  uint64_t v2 = 152;
  if (v1) {
    uint64_t v2 = 144;
  }
  id v3 = *(void **)(v0 + v2);

  return v3;
}

id sub_100085988()
{
  return *(id *)(v0 + 168);
}

id sub_100085990()
{
  return *(id *)(v0 + 176);
}

id sub_100085998()
{
  return *(id *)(v0 + 184);
}

id sub_1000859A0()
{
  return *(id *)(v0 + 192);
}

id sub_1000859A8()
{
  return *(id *)(v0 + 344);
}

id sub_1000859B0()
{
  return *(id *)(v0 + 352);
}

id sub_1000859BC()
{
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    BOOL v1 = UIAccessibilityDarkerSystemColorsEnabled();
    uint64_t v2 = v0 + 17;
    if (!v1) {
      uint64_t v2 = v0 + 16;
    }
  }
  else
  {
    uint64_t v2 = v0 + 25;
  }
  id v3 = *v2;

  return v3;
}

id sub_100085A08()
{
  return *(id *)(v0 + 208);
}

id sub_100085A10()
{
  return *(id *)(v0 + 216);
}

id sub_100085A18()
{
  return *(id *)(v0 + 224);
}

id sub_100085A20()
{
  return *(id *)(v0 + 232);
}

id sub_100085A28()
{
  return *(id *)(v0 + 248);
}

uint64_t sub_100085A30()
{
  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t sub_100085A38()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_100009D98(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

id sub_100085A8C()
{
  return *(id *)(v0 + 256);
}

id sub_100085A94()
{
  return *(id *)(v0 + 264);
}

id sub_100085A9C()
{
  return *(id *)(v0 + 272);
}

id sub_100085AA4()
{
  return *(id *)(v0 + 280);
}

id sub_100085AAC()
{
  return *(id *)(v0 + 288);
}

id sub_100085AB4()
{
  return *(id *)(v0 + 296);
}

id sub_100085ABC()
{
  return *(id *)(v0 + 304);
}

id sub_100085AC4(uint64_t a1, uint64_t a2)
{
  return sub_100085AF0(a1, a2, (SEL *)&selRef_secondarySystemBackgroundColor);
}

id sub_100085AD0()
{
  return *(id *)(v0 + 312);
}

id sub_100085AD8()
{
  return *(id *)(v0 + 320);
}

id sub_100085AE0()
{
  return *(id *)(v0 + 328);
}

id sub_100085AE8()
{
  return *(id *)(v0 + 336);
}

id sub_100085AF0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3 = [self *a3];

  return v3;
}

id sub_100085B38()
{
  return *(id *)(v0 + 360);
}

id sub_100085B40()
{
  return *(id *)(v0 + 368);
}

id sub_100085B48()
{
  return *(id *)(v0 + 376);
}

id sub_100085B50()
{
  return *(id *)(v0 + 384);
}

BOOL sub_100085B58()
{
  return !UIAccessibilityIsInvertColorsEnabled();
}

uint64_t sub_100085B74()
{
  return *(void *)(v0 + 56);
}

unint64_t sub_100085B7C()
{
  unint64_t result = qword_100160FF8;
  if (!qword_100160FF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100160FF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetSectionConfigRecord.SymbolConfiguration()
{
  return &type metadata for WidgetSectionConfigRecord.SymbolConfiguration;
}

uint64_t destroy for WidgetSectionConfigRecord()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s12StocksWidget25WidgetSectionConfigRecordVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WidgetSectionConfigRecord(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetSectionConfigRecord(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WidgetSectionConfigRecord()
{
  return &type metadata for WidgetSectionConfigRecord;
}

uint64_t destroy for SymbolName()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SymbolName(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SymbolName(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SymbolName(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolName(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolName(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetSectionConfigRecord.SymbolConfiguration.Article()
{
  return &type metadata for WidgetSectionConfigRecord.SymbolConfiguration.Article;
}

uint64_t sub_100085EE0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[2] = a5;
  v13[1] = a4;
  sub_100087AD4(0, &qword_100161090, (uint64_t (*)(void))sub_100087A80, (uint64_t)&type metadata for WidgetSectionConfigRecord.SymbolConfiguration.Article.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v13 - v9;
  sub_100009D98(a1, a1[3]);
  sub_100087A80();
  sub_100126650();
  char v15 = 0;
  uint64_t v11 = v13[3];
  sub_100126480();
  if (!v11)
  {
    char v14 = 1;
    sub_100126440();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100086084(void *a1, uint64_t a2)
{
  sub_100087AD4(0, &qword_100161050, (uint64_t (*)(void))sub_1000877F4, (uint64_t)&type metadata for WidgetSectionConfigRecord.SymbolConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v10 - v7;
  sub_100009D98(a1, a1[3]);
  sub_1000877F4();
  sub_100126650();
  v10[1] = a2;
  sub_100087848();
  sub_1000878F4(&qword_100161058, (void (*)(void))sub_100087960);
  sub_1001264C0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100086234()
{
  if (*v0) {
    return 0x65764F656C746974;
  }
  else {
    return 0x49656C6369747261;
  }
}

uint64_t sub_100086280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100086BE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000862A8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1000862B4(uint64_t a1)
{
  unint64_t v2 = sub_100087A80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000862F0(uint64_t a1)
{
  unint64_t v2 = sub_100087A80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10008632C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100086D08(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_10008635C(void *a1)
{
  return sub_100085EE0(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_10008637C()
{
  return 0xD000000000000011;
}

uint64_t sub_100086398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100086F44(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1000863C4(uint64_t a1)
{
  unint64_t v2 = sub_1000877F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100086400(uint64_t a1)
{
  unint64_t v2 = sub_1000877F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10008643C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100086FCC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100086468(void *a1)
{
  return sub_100086084(a1, *v1);
}

uint64_t sub_100086484(char *a1, char *a2)
{
  return sub_10003DF90(*a1, *a2);
}

Swift::Int sub_100086490()
{
  return sub_100126630();
}

uint64_t sub_100086520()
{
  sub_100125BA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10008659C()
{
  return sub_100126630();
}

uint64_t sub_100086628@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_100150EB8;
  v8._object = v3;
  Swift::Int v5 = sub_100126340(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_100086688(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x4E64726F6365725FLL;
  if (*v1) {
    unint64_t v2 = 0xD000000000000014;
  }
  unint64_t v3 = 0x8000000100130790;
  if (!*v1) {
    unint64_t v3 = 0xEB00000000656D61;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1000866D4()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0x4E64726F6365725FLL;
  }
}

uint64_t sub_10008671C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_100150EB8;
  v9._object = a2;
  Swift::Int v6 = sub_100126340(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_100086780(uint64_t a1)
{
  unint64_t v2 = sub_1000876E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000867BC(uint64_t a1)
{
  unint64_t v2 = sub_1000876E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000867F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t v5 = sub_100125B60();
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100122FC0();
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v24 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100087AD4(0, &qword_100161068, (uint64_t (*)(void))sub_1000876E4, (uint64_t)&type metadata for WidgetSectionConfigRecord.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v15 = (char *)&v22 - v14;
  sub_100009D98(a1, a1[3]);
  sub_1000876E4();
  sub_100126650();
  char v31 = 0;
  size_t v16 = v28;
  sub_100126480();
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  id v28 = v7;
  sub_100123000();
  swift_allocObject();
  sub_100122FF0();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v10, enum case for JSONEncoder.DateEncodingStrategy.iso8601(_:), v24);
  sub_100122FD0();
  uint64_t v29 = v25;
  sub_100087738();
  sub_1000879B4(&qword_100161070, (void (*)(void))sub_100087A2C);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_100122FE0();
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  sub_100125B50();
  uint64_t result = sub_100125B30();
  if (v21)
  {
    char v30 = 1;
    sub_100126480();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_100048F7C(v18, v20);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100086B94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000871C0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_100086BC4(void *a1)
{
  return sub_1000867F8(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_100086BE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49656C6369747261 && a2 == 0xE900000000000044;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65764F656C746974 && a2 == 0xED00006564697272)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100086D08(void *a1)
{
  sub_100087AD4(0, &qword_100161080, (uint64_t (*)(void))sub_100087A80, (uint64_t)&type metadata for WidgetSectionConfigRecord.SymbolConfiguration.Article.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  sub_100009D98(a1, a1[3]);
  sub_100087A80();
  sub_100126640();
  if (v1)
  {
    sub_100009D48((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1001263B0();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_100126370();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    sub_100009D48((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_100086F44(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100131A40)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_100126530();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *sub_100086FCC(void *a1)
{
  sub_100087AD4(0, &qword_100161028, (uint64_t (*)(void))sub_1000877F4, (uint64_t)&type metadata for WidgetSectionConfigRecord.SymbolConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v7 = (char *)v11 - v6;
  uint64_t v8 = sub_100009D98(a1, a1[3]);
  sub_1000877F4();
  uint64_t v9 = v8;
  sub_100126640();
  if (!v1)
  {
    sub_100087848();
    sub_1000878F4(&qword_100161040, (void (*)(void))sub_1000878A0);
    sub_1001263F0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = (void *)v11[1];
  }
  sub_100009D48((uint64_t)a1);
  return v9;
}

uint64_t sub_1000871C0(void *a1)
{
  uint64_t v2 = sub_100122F70();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  uint64_t v25 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100125B60();
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100087AD4(0, &qword_100161000, (uint64_t (*)(void))sub_1000876E4, (uint64_t)&type metadata for WidgetSectionConfigRecord.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v8 = v7;
  uint64_t v28 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - v9;
  sub_100009D98(a1, a1[3]);
  sub_1000876E4();
  unint64_t v11 = v29;
  sub_100126640();
  if (v11)
  {
    sub_100009D48((uint64_t)a1);
    return v4;
  }
  char v12 = v6;
  unint64_t v29 = v4;
  uint64_t v13 = v28;
  char v32 = 0;
  sub_1001263A0();
  if (v31) {
    uint64_t v4 = v30;
  }
  else {
    uint64_t v4 = 0x676E697373696DLL;
  }
  LOBYTE(v30) = 1;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100126370();
  if (!v16) {
    goto LABEL_15;
  }
  uint64_t v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v17 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    sub_10003D318((uint64_t)_swiftEmptyArrayStorage);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v8);
    goto LABEL_16;
  }
  uint64_t v21 = v10;
  uint64_t v22 = a1;
  sub_100125B50();
  uint64_t v23 = sub_100125B20();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, unint64_t))(v24 + 8))(v12, v29);
  unint64_t v29 = v19;
  if (v19 >> 60 != 15)
  {
    sub_100122FB0();
    swift_allocObject();
    sub_100122FA0();
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, enum case for JSONDecoder.DateDecodingStrategy.iso8601(_:), v27);
    sub_100122F80();
    sub_100087738();
    sub_1000879B4(&qword_100161018, (void (*)(void))sub_1000877A0);
    sub_100122F90();
    a1 = v22;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v8);
    swift_release();
    sub_10004A52C(v23, v29);
LABEL_16:
    swift_bridgeObjectRetain();
    sub_100009D48((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v4;
  }
  __break(1u);
  return result;
}

unint64_t sub_1000876E4()
{
  unint64_t result = qword_100161008;
  if (!qword_100161008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161008);
  }
  return result;
}

void sub_100087738()
{
  if (!qword_100161010)
  {
    unint64_t v0 = sub_100125A20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161010);
    }
  }
}

unint64_t sub_1000877A0()
{
  unint64_t result = qword_100161020;
  if (!qword_100161020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161020);
  }
  return result;
}

unint64_t sub_1000877F4()
{
  unint64_t result = qword_100161030;
  if (!qword_100161030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161030);
  }
  return result;
}

void sub_100087848()
{
  if (!qword_100161038)
  {
    unint64_t v0 = sub_100125D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161038);
    }
  }
}

unint64_t sub_1000878A0()
{
  unint64_t result = qword_100161048;
  if (!qword_100161048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161048);
  }
  return result;
}

uint64_t sub_1000878F4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100087848();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100087960()
{
  unint64_t result = qword_100161060;
  if (!qword_100161060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161060);
  }
  return result;
}

uint64_t sub_1000879B4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100087738();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100087A2C()
{
  unint64_t result = qword_100161078;
  if (!qword_100161078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161078);
  }
  return result;
}

unint64_t sub_100087A80()
{
  unint64_t result = qword_100161088;
  if (!qword_100161088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161088);
  }
  return result;
}

void sub_100087AD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

ValueMetadata *type metadata accessor for WidgetSectionConfigRecord.SymbolConfiguration.Article.CodingKeys()
{
  return &type metadata for WidgetSectionConfigRecord.SymbolConfiguration.Article.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for WidgetSectionConfigRecord.SymbolConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100087BF0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetSectionConfigRecord.SymbolConfiguration.CodingKeys()
{
  return &type metadata for WidgetSectionConfigRecord.SymbolConfiguration.CodingKeys;
}

unsigned char *_s12StocksWidget25WidgetSectionConfigRecordV19SymbolConfigurationV7ArticleV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100087CF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetSectionConfigRecord.CodingKeys()
{
  return &type metadata for WidgetSectionConfigRecord.CodingKeys;
}

unint64_t sub_100087D30()
{
  unint64_t result = qword_100161098;
  if (!qword_100161098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161098);
  }
  return result;
}

unint64_t sub_100087D88()
{
  unint64_t result = qword_1001610A0;
  if (!qword_1001610A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610A0);
  }
  return result;
}

unint64_t sub_100087DE0()
{
  unint64_t result = qword_1001610A8;
  if (!qword_1001610A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610A8);
  }
  return result;
}

unint64_t sub_100087E38()
{
  unint64_t result = qword_1001610B0;
  if (!qword_1001610B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610B0);
  }
  return result;
}

unint64_t sub_100087E90()
{
  unint64_t result = qword_1001610B8;
  if (!qword_1001610B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610B8);
  }
  return result;
}

unint64_t sub_100087EE8()
{
  unint64_t result = qword_1001610C0;
  if (!qword_1001610C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610C0);
  }
  return result;
}

unint64_t sub_100087F40()
{
  unint64_t result = qword_1001610C8;
  if (!qword_1001610C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610C8);
  }
  return result;
}

unint64_t sub_100087F98()
{
  unint64_t result = qword_1001610D0;
  if (!qword_1001610D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610D0);
  }
  return result;
}

unint64_t sub_100087FF0()
{
  unint64_t result = qword_1001610D8;
  if (!qword_1001610D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001610D8);
  }
  return result;
}

uint64_t destroy for SymbolSummaryTicker(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + 112);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SymbolSummaryTicker(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = (_OWORD *)(a1 + 56);
  uint64_t v8 = a2 + 56;
  uint64_t v9 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == 1)
  {
    long long v10 = *(_OWORD *)(v8 + 16);
    *uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 72) = v10;
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(v8 + 8);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v9;
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = (_OWORD *)(a1 + 88);
  char v12 = (_OWORD *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 112);
  if (v13 == 1)
  {
    long long v14 = *(_OWORD *)(a2 + 104);
    *uint64_t v11 = *v12;
    *(_OWORD *)(a1 + 104) = v14;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  }
  else
  {
    *(void *)uint64_t v11 = *(void *)v12;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v13;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for SymbolSummaryTicker(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 56);
  uint64_t v5 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *(_OWORD *)(a2 + 72);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 72) = v7;
    }
    else
    {
      uint64_t v9 = *(void *)v5;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)uint64_t v4 = v9;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_10003088C(a1 + 56);
    long long v8 = *(_OWORD *)(a2 + 72);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 72) = v8;
  }
  else
  {
    uint64_t v10 = *(void *)v5;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(void *)uint64_t v4 = v10;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = (_OWORD *)(a1 + 88);
  char v12 = (long long *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112) == 1)
  {
    if (v13 == 1)
    {
      long long v14 = *v12;
      long long v15 = *(_OWORD *)(a2 + 104);
      long long v16 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 104) = v15;
      *(_OWORD *)(a1 + 120) = v16;
      *uint64_t v11 = v14;
    }
    else
    {
      uint64_t v20 = *(void *)v12;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)uint64_t v11 = v20;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      uint64_t v21 = *(void *)(a2 + 120);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 120) = v21;
      uint64_t v22 = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 136) = v22;
      swift_bridgeObjectRetain();
    }
  }
  else if (v13 == 1)
  {
    sub_100088410(a1 + 88);
    long long v18 = *(_OWORD *)(a2 + 104);
    long long v17 = *(_OWORD *)(a2 + 120);
    long long v19 = *v12;
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 104) = v18;
    *(_OWORD *)(a1 + 120) = v17;
    *uint64_t v11 = v19;
  }
  else
  {
    uint64_t v23 = *(void *)v12;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)uint64_t v11 = v23;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 120) = v24;
    uint64_t v25 = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 136) = v25;
  }
  return a1;
}

uint64_t sub_100088410(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for SymbolSummaryTicker(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for SymbolSummaryTicker(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a1 + 56);
  long long v8 = (_OWORD *)(a2 + 56);
  if (*(void *)(a1 + 80) == 1) {
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  if (v9 == 1)
  {
    sub_10003088C(a1 + 56);
LABEL_4:
    long long v10 = *(_OWORD *)(a2 + 72);
    *long long v7 = *v8;
    *(_OWORD *)(a1 + 72) = v10;
    goto LABEL_6;
  }
  *(void *)long long v7 = *(void *)v8;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v11 = (void *)(a1 + 88);
  char v12 = (void *)(a2 + 88);
  if (*(void *)(a1 + 112) != 1)
  {
    uint64_t v13 = *(void *)(a2 + 112);
    if (v13 != 1)
    {
      *uint64_t v11 = *v12;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v13;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      return a1;
    }
    sub_100088410(a1 + 88);
  }
  long long v14 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(a1 + 104) = v14;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolSummaryTicker(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 145)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolSummaryTicker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 145) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolSummaryTicker()
{
  return &type metadata for SymbolSummaryTicker;
}

uint64_t sub_100088690()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000886AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v36 = a2;
  sub_100089C3C(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100089BAC(0, (unint64_t *)&qword_100161130, sub_100089C3C);
  uint64_t v34 = v6 - 8;
  __chkstk_darwin(v6 - 8);
  long long v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v35 = (uint64_t)&v33 - v10;
  sub_100089A28(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100089BAC(0, (unint64_t *)&qword_1001610F8, sub_100089A28);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  long long v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v33 - v19;
  *(void *)uint64_t v13 = sub_100124E40();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  sub_10008A108(0, &qword_100161190, sub_100089A70);
  sub_100088B54(a1, (uint64_t)&v13[*(int *)(v21 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(unsigned char *)(v23 + 24) = 1;
  *(void *)(v23 + 32) = 0;
  *(unsigned char *)(v23 + 40) = 0;
  sub_10008A1FC((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))sub_100089A28);
  uint64_t v24 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  *uint64_t v24 = KeyPath;
  v24[1] = (uint64_t)sub_1000321B4;
  _OWORD v24[2] = v23;
  sub_10008A18C((uint64_t)v13, (uint64_t (*)(void))sub_100089A28);
  sub_10008A264((uint64_t)v17, (uint64_t)v20, (unint64_t *)&qword_1001610F8, sub_100089A28);
  *(void *)uint64_t v5 = sub_100124E40();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_10008A108(0, &qword_100161198, sub_100089D04);
  sub_10008911C(v33, (uint64_t)&v5[*(int *)(v25 + 44)]);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  *(unsigned char *)(v27 + 24) = 0;
  *(void *)(v27 + 32) = 0;
  *(unsigned char *)(v27 + 40) = 1;
  sub_10008A1FC((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))sub_100089C3C);
  uint64_t v28 = (uint64_t *)&v8[*(int *)(v34 + 44)];
  uint64_t *v28 = v26;
  v28[1] = (uint64_t)sub_1000321B4;
  v28[2] = v27;
  sub_10008A18C((uint64_t)v5, (uint64_t (*)(void))sub_100089C3C);
  uint64_t v29 = v35;
  sub_10008A264((uint64_t)v8, v35, (unint64_t *)&qword_100161130, sub_100089C3C);
  sub_10008A2D0((uint64_t)v20, (uint64_t)v17, (unint64_t *)&qword_1001610F8, sub_100089A28);
  sub_10008A2D0(v29, (uint64_t)v8, (unint64_t *)&qword_100161130, sub_100089C3C);
  uint64_t v30 = v36;
  sub_10008A2D0((uint64_t)v17, v36, (unint64_t *)&qword_1001610F8, sub_100089A28);
  sub_100089980();
  sub_10008A2D0((uint64_t)v8, v30 + *(int *)(v31 + 48), (unint64_t *)&qword_100161130, sub_100089C3C);
  sub_10008A33C(v29, (unint64_t *)&qword_100161130, sub_100089C3C);
  sub_10008A33C((uint64_t)v20, (unint64_t *)&qword_1001610F8, sub_100089A28);
  sub_10008A33C((uint64_t)v8, (unint64_t *)&qword_100161130, sub_100089C3C);
  return sub_10008A33C((uint64_t)v17, (unint64_t *)&qword_1001610F8, sub_100089A28);
}

uint64_t sub_100088B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v36 = type metadata accessor for PriceChangeView();
  __chkstk_darwin(v36);
  uint64_t v4 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v38 = type metadata accessor for PriceChangeView;
  sub_100089E40(0, &qword_100161120, (void (*)(uint64_t))type metadata accessor for PriceChangeView, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v37 = (uint64_t)&v34 - v9;
  uint64_t v10 = (int *)type metadata accessor for SymbolTrendView();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100089E40(0, &qword_100161118, (void (*)(uint64_t))type metadata accessor for SymbolTrendView, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v35 = (uint64_t)&v34 - v17;
  sub_10008A3EC(a1, (uint64_t)v45, &qword_1001611B0, (uint64_t)&type metadata for ValueChangeTrend);
  long long v18 = *(_OWORD *)(a1 + 24);
  long long v41 = *(_OWORD *)(a1 + 8);
  long long v42 = v18;
  long long v43 = v18;
  long long v44 = v41;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10008A3EC((uint64_t)v45, (uint64_t)v12, &qword_1001611B0, (uint64_t)&type metadata for ValueChangeTrend);
  long long v20 = v41;
  *(_OWORD *)(v12 + 24) = v42;
  *(_OWORD *)(v12 + 8) = v20;
  uint64_t v21 = (uint64_t *)&v12[v10[6]];
  uint64_t *v21 = swift_getKeyPath();
  sub_10008A754(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)&v12[v10[7]];
  *uint64_t v22 = swift_getKeyPath();
  sub_10008A754(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = &v12[v10[8]];
  *(void *)uint64_t v23 = KeyPath;
  v23[8] = 0;
  sub_10008A7B8((uint64_t)&v44);
  sub_10008A7B8((uint64_t)&v43);
  sub_100089F50(&qword_1001611D0, (void (*)(uint64_t))type metadata accessor for SymbolTrendView);
  sub_1001254A0();
  sub_10008A18C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  uint64_t v24 = v35;
  sub_10008A5D4((uint64_t)v15, v35, &qword_100161118, (void (*)(uint64_t))type metadata accessor for SymbolTrendView);
  sub_10008A3EC(a1 + 88, (uint64_t)v40, &qword_1001611A8, (uint64_t)&type metadata for PriceChange);
  *uint64_t v4 = swift_getKeyPath();
  sub_10008A754(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v36;
  sub_10008A3EC((uint64_t)v40, (uint64_t)v4 + *(int *)(v36 + 20), &qword_1001611A8, (uint64_t)&type metadata for PriceChange);
  sub_10008A3EC((uint64_t)v45, (uint64_t)v4 + *(int *)(v25 + 24), &qword_1001611B0, (uint64_t)&type metadata for ValueChangeTrend);
  sub_10008A4C0(v40);
  sub_100089F50(&qword_1001611C0, (void (*)(uint64_t))type metadata accessor for PriceChangeView);
  sub_1001254A0();
  sub_10008A18C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  uint64_t v27 = v37;
  uint64_t v26 = (void (*)(uint64_t))v38;
  sub_10008A5D4((uint64_t)v7, v37, &qword_100161120, (void (*)(uint64_t))v38);
  uint64_t v28 = v24;
  sub_10008A654(v24, (uint64_t)v15, &qword_100161118, (void (*)(uint64_t))type metadata accessor for SymbolTrendView);
  uint64_t v29 = v27;
  sub_10008A654(v27, (uint64_t)v7, &qword_100161120, v26);
  uint64_t v30 = v39;
  sub_10008A654((uint64_t)v15, v39, &qword_100161118, (void (*)(uint64_t))type metadata accessor for SymbolTrendView);
  sub_100089AA4();
  uint64_t v32 = v30 + *(int *)(v31 + 48);
  *(void *)uint64_t v32 = 0x4020000000000000;
  *(unsigned char *)(v32 + 8) = 0;
  sub_10008A654((uint64_t)v7, v30 + *(int *)(v31 + 64), &qword_100161120, v26);
  sub_10008A6D4(v29, &qword_100161120, v26);
  sub_10008A6D4(v28, &qword_100161118, (void (*)(uint64_t))type metadata accessor for SymbolTrendView);
  sub_10008A6D4((uint64_t)v7, &qword_100161120, v26);
  return sub_10008A6D4((uint64_t)v15, &qword_100161118, (void (*)(uint64_t))type metadata accessor for SymbolTrendView);
}

uint64_t sub_10008911C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = type metadata accessor for PriceChangeView();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100089EB4(0);
  uint64_t v30 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100089E40(0, &qword_100161158, sub_100089EB4, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v29 - v14;
  sub_100089DE0();
  __chkstk_darwin(v16 - 8);
  long long v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v29 - v20;
  uint64_t v22 = *(void *)(a1 + 48);
  v33[0] = *(void *)(a1 + 40);
  v33[1] = v22;
  sub_10008A398();
  sub_1001254A0();
  sub_10008A3EC(a1 + 88, (uint64_t)v33, &qword_1001611A8, (uint64_t)&type metadata for PriceChange);
  sub_10008A3EC(a1, (uint64_t)&v32, &qword_1001611B0, (uint64_t)&type metadata for ValueChangeTrend);
  *uint64_t v6 = swift_getKeyPath();
  sub_10008A754(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  sub_10008A3EC((uint64_t)v33, (uint64_t)v6 + *(int *)(v4 + 28), &qword_1001611A8, (uint64_t)&type metadata for PriceChange);
  sub_10008A3EC((uint64_t)&v32, (uint64_t)v6 + *(int *)(v4 + 32), &qword_1001611B0, (uint64_t)&type metadata for ValueChangeTrend);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10008A1FC((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  uint64_t v24 = (uint64_t *)&v9[*(int *)(v30 + 36)];
  *uint64_t v24 = KeyPath;
  v24[1] = (uint64_t)sub_10008958C;
  _OWORD v24[2] = 0;
  sub_10008A4C0(v33);
  sub_10008A18C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  sub_10008A4FC();
  sub_1001254A0();
  sub_10008A18C((uint64_t)v9, (uint64_t (*)(void))sub_100089EB4);
  sub_10008A5D4((uint64_t)v12, (uint64_t)v15, &qword_100161158, sub_100089EB4);
  sub_10008A1FC((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))sub_100089DE0);
  sub_10008A654((uint64_t)v15, (uint64_t)v12, &qword_100161158, sub_100089EB4);
  uint64_t v25 = v31;
  sub_10008A1FC((uint64_t)v18, v31, (uint64_t (*)(void))sub_100089DE0);
  sub_100089D38();
  uint64_t v27 = v25 + *(int *)(v26 + 48);
  *(void *)uint64_t v27 = 0x4020000000000000;
  *(unsigned char *)(v27 + 8) = 0;
  sub_10008A654((uint64_t)v12, v25 + *(int *)(v26 + 64), &qword_100161158, sub_100089EB4);
  sub_10008A6D4((uint64_t)v15, &qword_100161158, sub_100089EB4);
  sub_10008A18C((uint64_t)v21, (uint64_t (*)(void))sub_100089DE0);
  sub_10008A6D4((uint64_t)v12, &qword_100161158, sub_100089EB4);
  return sub_10008A18C((uint64_t)v18, (uint64_t (*)(void))sub_100089DE0);
}

uint64_t sub_10008958C(uint64_t a1)
{
  uint64_t v2 = sub_1001238A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, a1, v2, v7);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  uint64_t v11 = enum case for PriceChangeDisplay.currency(_:);
  if (v10 == enum case for PriceChangeDisplay.currency(_:))
  {
    uint64_t v11 = enum case for PriceChangeDisplay.percentage(_:);
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 104))(v9, v11, v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v9, v2);
  }
  if (v10 == enum case for PriceChangeDisplay.percentage(_:)) {
    goto LABEL_5;
  }
  uint64_t v11 = enum case for PriceChangeDisplay.percentage(_:);
  if (v10 == enum case for PriceChangeDisplay.marketCapitalization(_:)) {
    goto LABEL_5;
  }
  uint64_t result = sub_100126520();
  __break(1u);
  return result;
}

uint64_t sub_100089740()
{
  uint64_t v1 = sub_100125060();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100089C84(0, &qword_1001610E0, (uint64_t (*)(uint64_t))sub_10008994C, sub_100089F98, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for VStack);
  __chkstk_darwin(v5);
  __n128 v7 = (char *)v14 - v6;
  long long v8 = *(_OWORD *)(v0 + 112);
  v14[6] = *(_OWORD *)(v0 + 96);
  v14[7] = v8;
  v14[8] = *(_OWORD *)(v0 + 128);
  char v15 = *(unsigned char *)(v0 + 144);
  long long v9 = *(_OWORD *)(v0 + 48);
  v14[2] = *(_OWORD *)(v0 + 32);
  v14[3] = v9;
  long long v10 = *(_OWORD *)(v0 + 80);
  v14[4] = *(_OWORD *)(v0 + 64);
  v14[5] = v10;
  long long v11 = *(_OWORD *)(v0 + 16);
  v14[0] = *(_OWORD *)v0;
  v14[1] = v11;
  *(void *)__n128 v7 = sub_100124EF0();
  *((void *)v7 + 1) = 0x4000000000000000;
  v7[16] = 0;
  sub_10008A108(0, &qword_100161180, sub_10008994C);
  sub_1000886AC((uint64_t)v14, (uint64_t)&v7[*(int *)(v12 + 44)]);
  sub_100125040();
  sub_100089FCC();
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_10008A068((uint64_t)v7);
}

void sub_10008994C(uint64_t a1)
{
}

void sub_100089980()
{
  if (!qword_1001610F0)
  {
    sub_100089BAC(255, (unint64_t *)&qword_1001610F8, sub_100089A28);
    sub_100089BAC(255, (unint64_t *)&qword_100161130, sub_100089C3C);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1001610F0);
    }
  }
}

void sub_100089A28(uint64_t a1)
{
}

void sub_100089A70(uint64_t a1)
{
}

void sub_100089AA4()
{
  if (!qword_100161110)
  {
    sub_100089E40(255, &qword_100161118, (void (*)(uint64_t))type metadata accessor for SymbolTrendView, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    sub_100089E40(255, &qword_100161120, (void (*)(uint64_t))type metadata accessor for PriceChangeView, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_100161110);
    }
  }
}

uint64_t sub_100089B78()
{
  return sub_100089F50(&qword_100161128, sub_100089A70);
}

void sub_100089BAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_10008A46C(255, (unint64_t *)&qword_10015EC20, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyTransformModifier);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100089C3C(uint64_t a1)
{
}

void sub_100089C84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_100089D04(uint64_t a1)
{
}

void sub_100089D38()
{
  if (!qword_100161148)
  {
    sub_100089DE0();
    sub_100089E40(255, &qword_100161158, sub_100089EB4, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_100161148);
    }
  }
}

void sub_100089DE0()
{
  if (!qword_100161150)
  {
    sub_1001250B0();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161150);
    }
  }
}

void sub_100089E40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_100124B20();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_100089EB4(uint64_t a1)
{
}

void sub_100089EE8(uint64_t a1)
{
}

uint64_t sub_100089F1C()
{
  return sub_100089F50(&qword_100161170, sub_100089D04);
}

uint64_t sub_100089F50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100089F98()
{
  return sub_100089F50(&qword_100161178, sub_10008994C);
}

unint64_t sub_100089FCC()
{
  unint64_t result = qword_100161188;
  if (!qword_100161188)
  {
    sub_100089C84(255, &qword_1001610E0, (uint64_t (*)(uint64_t))sub_10008994C, sub_100089F98, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for VStack);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161188);
  }
  return result;
}

uint64_t sub_10008A068(uint64_t a1)
{
  sub_100089C84(0, &qword_1001610E0, (uint64_t (*)(uint64_t))sub_10008994C, sub_100089F98, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for VStack);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10008A108(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001249F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10008A17C()
{
  return swift_deallocObject();
}

uint64_t sub_10008A18C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10008A1EC()
{
  return swift_deallocObject();
}

uint64_t sub_10008A1FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10008A264(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_100089BAC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_10008A2D0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_100089BAC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_10008A33C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_100089BAC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_10008A398()
{
  unint64_t result = qword_1001611A0;
  if (!qword_1001611A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001611A0);
  }
  return result;
}

uint64_t sub_10008A3EC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_10008A46C(0, a3, a4, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_10008A46C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t *sub_10008A4C0(uint64_t *a1)
{
  return a1;
}

unint64_t sub_10008A4FC()
{
  unint64_t result = qword_1001611B8;
  if (!qword_1001611B8)
  {
    sub_100089EB4(255);
    sub_100089F50(&qword_1001611C0, (void (*)(uint64_t))type metadata accessor for PriceChangeView);
    sub_100089F50(&qword_1001611C8, sub_100089EE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001611B8);
  }
  return result;
}

uint64_t sub_10008A5D4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_100089E40(0, a3, a4, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_10008A654(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_100089E40(0, a3, a4, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_10008A6D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_100089E40(0, a2, a3, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_10008A754(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10008A7B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008A7E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008A890()
{
  *(void *)(v1 + 240) = v0;
  return _swift_task_switch(sub_10008A8B0, v0, 0);
}

uint64_t sub_10008A8B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 2;
  uint64_t v19 = v0 + 28;
  uint64_t v20 = v0 + 17;
  uint64_t v3 = v0[30];
  uint64_t v4 = sub_10008B1DC(v3);
  uint64_t v6 = v5;
  v0[31] = v4;
  v0[32] = v5;
  sub_10008B668();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100127010;
  *(void *)(inited + 32) = 0xD000000000000019;
  *(void *)(inited + 40) = 0x80000001001315A0;
  *(void *)(inited + 48) = _swiftEmptyArrayStorage;
  sub_10003D440(inited);
  id v8 = [self ignoreCacheCachePolicy];
  v0[33] = v8;
  id v9 = objc_allocWithZone((Class)FCEdgeCacheHint);
  NSString v10 = sub_100125AD0();
  NSString v11 = sub_100125AD0();
  id v12 = [v9 initWithGroupName:v10 cacheControlKey:v11];
  v1[34] = v12;

  uint64_t v13 = *(void **)(v3 + 112);
  sub_10008B744(0, (unint64_t *)&qword_10015E810, (uint64_t (*)(void, void *))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100127010;
  *(void *)(v14 + 32) = v4;
  *(void *)(v14 + 40) = v6;
  swift_bridgeObjectRetain();
  Class isa = sub_100125C90().super.isa;
  v1[35] = isa;
  swift_bridgeObjectRelease();
  sub_10008B744(0, (unint64_t *)&qword_10015E1D0, (uint64_t (*)(void, void *))&type metadata accessor for Array);
  Class v16 = sub_1001259F0().super.isa;
  v1[36] = v16;
  swift_bridgeObjectRelease();
  v1[2] = v1;
  v1[7] = v19;
  v1[3] = sub_10008ABA8;
  uint64_t v17 = swift_continuation_init();
  v1[17] = _NSConcreteStackBlock;
  v1[18] = 0x40000000;
  v1[19] = sub_10008B34C;
  v1[20] = &unk_100152E98;
  v1[21] = v17;
  [v13 fetchRecordTreeWithRootIDs:isa branchKeysByRecordType:v16 cachePolicy:v8 edgeCacheHint:v12 completion:v20];
  return _swift_continuation_await(v2);
}

uint64_t sub_10008ABA8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 296) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 240);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10008AFE0;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 240);
    uint64_t v4 = sub_10008ACD0;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_10008ACD0()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v2 = *(void **)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 224);

  if (*(void *)(v3 + 16))
  {
    uint64_t v5 = *(void *)(v0 + 248);
    uint64_t v4 = *(void *)(v0 + 256);
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_10003E754(v5, v4);
    if (v7)
    {
      id v8 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v6);
      uint64_t v9 = *v8;
      unint64_t v10 = v8[1];
      sub_10008B7E8(*v8, v10);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_100122FB0();
      swift_allocObject();
      sub_100122FA0();
      sub_10008B840();
      sub_100122F90();
      uint64_t v24 = *(void **)(v0 + 264);

      sub_100048F7C(v9, v10);
      swift_release();

      uint64_t v25 = *(void *)(v0 + 200);
      unint64_t v26 = *(void *)(v0 + 208);
      unint64_t v27 = *(void *)(v0 + 216);
LABEL_14:
      uint64_t v28 = *(uint64_t (**)(uint64_t, unint64_t, unint64_t))(v0 + 8);
      return v28(v25, v26, v27);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  swift_bridgeObjectRelease();
  sub_10008B794();
  swift_allocError();
  *uint64_t v13 = v12;
  v13[1] = v11;
  swift_willThrow();
  swift_getErrorValue();
  if (sub_100126590())
  {
    if (qword_10015D4A0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_100124570();
    sub_100019244(v14, (uint64_t)qword_100172528);
    char v15 = sub_100124550();
    os_log_type_t v16 = sub_100125F40();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Widget Section Config service encountered missing record", v17, 2u);
      swift_slowDealloc();
    }
    uint64_t v19 = *(void **)(v0 + 264);
    long long v18 = *(void **)(v0 + 272);

    unint64_t v27 = sub_10003D318((uint64_t)_swiftEmptyArrayStorage);
    swift_errorRelease();

    unint64_t v26 = 0xE700000000000000;
    uint64_t v25 = 0x676E697373696DLL;
    goto LABEL_14;
  }
  uint64_t v21 = *(void **)(v0 + 264);
  uint64_t v20 = *(void **)(v0 + 272);
  swift_willThrow();

  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_10008AFE0()
{
  uint64_t v1 = (void *)v0[36];
  uint64_t v3 = (void *)v0[34];
  uint64_t v2 = (void *)v0[35];
  swift_willThrow();

  swift_getErrorValue();
  if (sub_100126590())
  {
    if (qword_10015D4A0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_100124570();
    sub_100019244(v4, (uint64_t)qword_100172528);
    uint64_t v5 = sub_100124550();
    os_log_type_t v6 = sub_100125F40();
    if (os_log_type_enabled(v5, v6))
    {
      char v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Widget Section Config service encountered missing record", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = (void *)v0[33];
    id v8 = (void *)v0[34];

    unint64_t v10 = sub_10003D318((uint64_t)_swiftEmptyArrayStorage);
    swift_errorRelease();

    uint64_t v11 = (uint64_t (*)(uint64_t, unint64_t, unint64_t))v0[1];
    return v11(0x676E697373696DLL, 0xE700000000000000, v10);
  }
  else
  {
    uint64_t v14 = (void *)v0[33];
    uint64_t v13 = (void *)v0[34];
    swift_willThrow();

    char v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_10008B1DC(uint64_t a1)
{
  uint64_t v2 = sub_1001237F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123EF0();
  type metadata accessor for WidgetSectionConfigRecordService();
  sub_10008B8EC(&qword_1001612C0);
  sub_100123F50();
  swift_release();
  uint64_t v6 = v9;
  uint64_t v7 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v7 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    sub_100009D98((void *)(a1 + 120), *(void *)(a1 + 144));
    sub_100123AB0();
    uint64_t v6 = sub_100123740();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6;
}

uint64_t sub_10008B34C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10008B894();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = sub_100125A00();
    return _swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_10008B420()
{
  swift_unknownObjectRelease();
  sub_100009D48(v0 + 120);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for WidgetSectionConfigRecordService()
{
  return self;
}

uint64_t sub_10008B484()
{
  type metadata accessor for WidgetSectionConfigRecordService();

  return sub_100123F50();
}

uint64_t sub_10008B4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = type metadata accessor for WidgetSectionConfigRecordService();

  return Configurable.setting<A>(_:defaultValue:)(a1, a2, v9, a6);
}

uint64_t sub_10008B53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = type metadata accessor for WidgetSectionConfigRecordService();

  return Configurable.setting<A>(_:_:)(a1, a2, a3, v11, a7);
}

uint64_t sub_10008B5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = type metadata accessor for WidgetSectionConfigRecordService();

  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, v13, a8);
}

uint64_t sub_10008B624(uint64_t a1)
{
  uint64_t result = sub_10008B8EC(&qword_100161298);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_10008B668()
{
  if (!qword_1001612A0)
  {
    sub_10008B6C0();
    unint64_t v0 = sub_100126500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001612A0);
    }
  }
}

void sub_10008B6C0()
{
  if (!qword_1001612A8)
  {
    sub_10008B744(255, (unint64_t *)&qword_10015E1D0, (uint64_t (*)(void, void *))&type metadata accessor for Array);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1001612A8);
    }
  }
}

void sub_10008B744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for String);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_10008B794()
{
  unint64_t result = qword_1001612B0;
  if (!qword_1001612B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001612B0);
  }
  return result;
}

uint64_t sub_10008B7E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

unint64_t sub_10008B840()
{
  unint64_t result = qword_1001612B8;
  if (!qword_1001612B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001612B8);
  }
  return result;
}

unint64_t sub_10008B894()
{
  unint64_t result = qword_10015D9B8;
  if (!qword_10015D9B8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_10015D9B8);
  }
  return result;
}

uint64_t sub_10008B8EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WidgetSectionConfigRecordService();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetSectionConfigRecordService.Errors()
{
  return &type metadata for WidgetSectionConfigRecordService.Errors;
}

ValueMetadata *type metadata accessor for SystemTheme()
{
  return &type metadata for SystemTheme;
}

id sub_10008B94C()
{
  id v0 = objc_allocWithZone((Class)UIColor);

  return [v0 initWithRed:0.305882353 green:0.674509804 blue:0.97254902 alpha:1.0];
}

id sub_10008B9A4()
{
  id v0 = [self clearColor];

  return v0;
}

void *sub_10008B9E8(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1001232B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    sub_10002FE38();
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
    uint64_t v14 = a3[6];
    char v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[8];
    *(_OWORD *)((char *)v7 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    uint64_t v19 = (char *)v7 + v18;
    uint64_t v20 = (char *)a2 + v18;
    v19[8] = v20[8];
    *(void *)uint64_t v19 = *(void *)v20;
    *((unsigned char *)v7 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return v7;
}

uint64_t sub_10008BB78(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1001232B0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_10002FE38();
  v6(v4 + *(int *)(v7 + 36), v5);
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = sub_1001234F0();
  unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

void *sub_10008BC64(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001232B0();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  sub_10002FE38();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

void *sub_10008BDA8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001232B0();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  sub_10002FE38();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  char v22 = v21[8];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v22;
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

void *sub_10008BF00(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001232B0();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  sub_10002FE38();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

void *sub_10008C034(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1001232B0();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  sub_10002FE38();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_10008C170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008C184);
}

uint64_t sub_10008C184(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10002FE38();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1001234F0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10008C2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008C2C4);
}

void *sub_10008C2C4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_10002FE38();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1001234F0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for PreparedSparkline(uint64_t a1)
{
  return sub_100009E3C(a1, qword_100161320);
}

void sub_10008C410()
{
  sub_10002FE38();
  if (v0 <= 0x3F)
  {
    sub_1001234F0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10008C504@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v162 = a4;
  long long v167 = a3;
  uint64_t v168 = a1;
  uint64_t v160 = a5;
  uint64_t v8 = sub_100124570();
  uint64_t v158 = *(void *)(v8 - 8);
  uint64_t v159 = v8;
  __chkstk_darwin(v8);
  long long v149 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1001234F0();
  __chkstk_darwin(v10 - 8);
  uint64_t v157 = (uint64_t *)((char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100041E44();
  __chkstk_darwin(v12 - 8);
  uint64_t v150 = (uint64_t)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_100123E40();
  char v155 = *(char **)(v152 - 8);
  __chkstk_darwin(v152);
  os_log_t v154 = (os_log_t)((char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v153 = (char *)&v134 - v16;
  uint64_t v145 = sub_1001232B0();
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v143 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029204(0);
  __chkstk_darwin(v18 - 8);
  unint64_t v142 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_1001236A0();
  uint64_t v141 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v140 = (char *)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002FE38();
  uint64_t v139 = v21;
  __chkstk_darwin(v21);
  uint64_t v156 = (uint64_t *)((char *)&v134 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23);
  uint64_t v138 = (char *)&v134 - v24;
  uint64_t v166 = sub_100123C50();
  uint64_t v164 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  unint64_t v26 = (char *)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_100123D40();
  uint64_t v163 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v28 = (char *)&v134 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009240C(0);
  __chkstk_darwin(v29 - 8);
  uint64_t v148 = (uint64_t)&v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v134 - v32;
  uint64_t v34 = sub_100123CA0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v134 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  id v40 = (char *)&v134 - v39;
  __chkstk_darwin(v41);
  long long v43 = (char *)&v134 - v42;
  __chkstk_darwin(v44);
  id v46 = (char *)&v134 - v45;
  uint64_t v161 = a2;
  sub_1000923A4(a2, (uint64_t)v33, (uint64_t (*)(void))sub_10009240C);
  long long v147 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  if (v147(v33, 1, v34) == 1)
  {
    uint64_t v151 = v35;
    uint64_t v146 = v34;
    sub_1000919DC((uint64_t)v33, (uint64_t (*)(void))sub_10009240C);
  }
  else
  {
    uint64_t v136 = v43;
    uint64_t v137 = v40;
    uint64_t v135 = v37;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v46, v33, v34);
    if ((sub_100123C20() & 1) == 0)
    {
      uint64_t v65 = v163;
      id v66 = *(void (**)(char *, uint64_t, uint64_t))(v163 + 16);
      uint64_t v156 = (uint64_t *)v28;
      v66(v28, (uint64_t)v167, v165);
      uint64_t v67 = v164;
      uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 16);
      uint64_t v157 = (uint64_t *)v26;
      v68(v26, (uint64_t)v168, v166);
      id v69 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
      v69(v136, v46, v34);
      v69(v137, v46, v34);
      uint64_t v70 = v135;
      v69(v135, v46, v34);
      uint64_t v71 = v162;
      id v72 = sub_100124550();
      int v73 = sub_100125F60();
      uint64_t v74 = v35;
      if (os_log_type_enabled(v72, (os_log_type_t)v73))
      {
        LODWORD(v153) = v73;
        os_log_t v154 = v72;
        char v155 = v46;
        uint64_t v75 = v67;
        uint64_t v76 = swift_slowAlloc();
        uint64_t v152 = swift_slowAlloc();
        uint64_t v169 = v152;
        *(_DWORD *)uint64_t v76 = 136447234;
        uint64_t v77 = (void (*)(void, void))v156;
        uint64_t v78 = sub_100123D20();
        *(void *)&long long v170 = sub_1000AB124(v78, v79, &v169);
        sub_100126030();
        swift_bridgeObjectRelease();
        uint64_t v80 = *(uint64_t **)(v65 + 8);
        uint64_t v163 = v65 + 8;
        uint64_t v156 = v80;
        ((void (*)(void, uint64_t))v80)(v77, v165);
        *(_WORD *)(v76 + 12) = 2082;
        uint64_t v150 = v76 + 14;
        uint64_t v81 = (uint64_t)v138;
        uint64_t v82 = (void (*)(void, void))v157;
        sub_100123C40();
        *(void *)&long long v170 = 0;
        *((void *)&v170 + 1) = 0xE000000000000000;
        uint64_t v83 = v145;
        sub_100126270();
        v176._countAndFlagsBits = 3026478;
        v176._object = (void *)0xE300000000000000;
        sub_100125BB0(v176);
        sub_100126270();
        long long v84 = v170;
        sub_1000919DC(v81, (uint64_t (*)(void))sub_10002FE38);
        *(void *)&long long v170 = sub_1000AB124(v84, *((unint64_t *)&v84 + 1), &v169);
        sub_100126030();
        swift_bridgeObjectRelease();
        uint64_t v85 = *(uint64_t **)(v75 + 8);
        uint64_t v164 = v75 + 8;
        uint64_t v157 = v85;
        ((void (*)(void, uint64_t))v85)(v82, v166);
        *(_WORD *)(v76 + 22) = 2082;
        uint64_t v86 = v140;
        id v87 = v136;
        sub_100123C60();
        uint64_t v88 = sub_100123690();
        unint64_t v90 = v89;
        (*(void (**)(char *, uint64_t))(v141 + 8))(v86, v151);
        *(void *)&long long v170 = sub_1000AB124(v88, v90, &v169);
        sub_100126030();
        swift_bridgeObjectRelease();
        uint64_t v91 = v87;
        uint64_t v92 = v34;
        uint64_t v93 = v34;
        uint64_t v94 = v74 + 8;
        unsigned __int8 v95 = *(void (**)(char *, uint64_t))(v74 + 8);
        v95(v91, v93);
        uint64_t v96 = v83;
        *(_WORD *)(v76 + 32) = 2082;
        uint64_t v97 = (uint64_t)v142;
        uint64_t v98 = v137;
        sub_100123C70();
        uint64_t v99 = v144;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v97, 1, v96) == 1)
        {
          sub_1000919DC(v97, (uint64_t (*)(void))sub_100029204);
          unint64_t v100 = 0xE300000000000000;
          uint64_t v101 = 7104878;
        }
        else
        {
          uint64_t v101 = sub_100123290();
          unint64_t v100 = v123;
          (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v97, v96);
        }
        *(void *)&long long v170 = sub_1000AB124(v101, v100, &v169);
        sub_100126030();
        swift_bridgeObjectRelease();
        uint64_t v146 = v92;
        uint64_t v151 = v94;
        uint64_t v124 = v95;
        v95(v98, v92);
        *(_WORD *)(v76 + 42) = 2082;
        uint64_t v125 = v143;
        id v126 = v135;
        sub_100123C80();
        sub_10009183C(&qword_10015E758, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v127 = sub_1001264F0();
        unint64_t v129 = v128;
        (*(void (**)(char *, uint64_t))(v99 + 8))(v125, v96);
        *(void *)&long long v170 = sub_1000AB124(v127, v129, &v169);
        sub_100126030();
        swift_bridgeObjectRelease();
        uint64_t v130 = v146;
        v124(v126, v146);
        os_log_t v131 = v154;
        _os_log_impl((void *)&_mh_execute_header, v154, (os_log_type_t)v153, "Sparkline model for %{public}s with date range %{public}s not considered valid for quote (exchangeStatus: %{public}s, serverCreatedAt: %{public}s, dateLastRefreshed: %{public}s)", (uint8_t *)v76, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v162, v159);
        ((void (*)(uint64_t *, uint64_t))v156)(v167, v165);
        sub_1000919DC(v161, (uint64_t (*)(void))sub_10009240C);
        ((void (*)(uint64_t *, uint64_t))v157)(v168, v166);
        v124(v155, v130);
      }
      else
      {

        uint64_t v116 = *(void (**)(char *, uint64_t))(v35 + 8);
        uint64_t v151 = v35 + 8;
        v116(v70, v34);
        v116(v137, v34);
        v116(v136, v34);
        uint64_t v117 = v65;
        uint64_t v118 = v34;
        uint64_t v119 = *(void (**)(uint64_t *, uint64_t))(v67 + 8);
        uint64_t v120 = v166;
        v119(v157, v166);
        uint64_t v121 = v165;
        uint64_t v122 = *(void (**)(uint64_t *, uint64_t))(v117 + 8);
        v122(v156, v165);
        (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v71, v159);
        v122(v167, v121);
        sub_1000919DC(v161, (uint64_t (*)(void))sub_10009240C);
        v119(v168, v120);
        v116(v46, v118);
      }
      goto LABEL_19;
    }
    uint64_t v151 = v35;
    id v47 = *(void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v146 = v34;
    v47(v46, v34);
  }
  id v48 = v155;
  os_log_t v49 = v154;
  id v50 = v153;
  uint64_t v51 = v152;
  id v52 = v167;
  sub_100123D00();
  (*((void (**)(os_log_t, void, uint64_t))v48 + 13))(v49, enum case for StockType.mutualFund(_:), v51);
  sub_10009183C(&qword_1001613C0, (void (*)(uint64_t))&type metadata accessor for StockType);
  char v53 = sub_100125A90();
  id v54 = (void (*)(os_log_t, uint64_t))*((void *)v48 + 1);
  v54(v49, v51);
  v54(v50, v51);
  if (v53)
  {
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v162, v159);
    (*(void (**)(uint64_t *, uint64_t))(v163 + 8))(v52, v165);
    sub_1000919DC(v161, (uint64_t (*)(void))sub_10009240C);
    (*(void (**)(uint64_t *, uint64_t))(v164 + 8))(v168, v166);
  }
  else
  {
    id v55 = v168;
    sub_100123C40();
    sub_1001234E0();
    uint64_t v56 = sub_100123BF0();
    int v58 = v57 & 1;
    uint64_t v59 = v161;
    uint64_t v60 = v148;
    sub_1000923A4(v161, v148, (uint64_t (*)(void))sub_10009240C);
    uint64_t v61 = v146;
    unsigned int v62 = v147((char *)v60, 1, v146);
    LODWORD(v155) = v58;
    if (v62 == 1)
    {
      sub_1000919DC(v60, (uint64_t (*)(void))sub_10009240C);
      uint64_t v63 = 0;
      int v64 = 1;
    }
    else
    {
      uint64_t v63 = sub_100123C90();
      uint64_t v102 = v61;
      int v64 = v103 & 1;
      (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v60, v102);
    }
    uint64_t v104 = v167;
    uint64_t v106 = v158;
    uint64_t v105 = v159;
    *(void *)&long long v170 = sub_100123C30();
    *((void *)&v170 + 1) = sub_1000915E4;
    uint64_t v171 = 0;
    long long v172 = sub_100013398;
    uint64_t v173 = 0;
    uint64_t v174 = sub_100013430;
    uint64_t v175 = 0;
    uint64_t v107 = (uint64_t)v149;
    uint64_t v108 = v162;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v149, v162, v105);
    double v109 = *(double *)&v56;
    uint64_t v110 = v150;
    sub_10008F7E8((uint64_t)v156, (uint64_t)v157, v109, (int)v155, *(double *)&v63, v64, &v170, v107, v150, a6);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v108, v105);
    (*(void (**)(uint64_t *, uint64_t))(v163 + 8))(v104, v165);
    sub_1000919DC(v59, (uint64_t (*)(void))sub_10009240C);
    (*(void (**)(uint64_t *, uint64_t))(v164 + 8))(v55, v166);
    uint64_t v111 = type metadata accessor for PreparedSparkline(0);
    uint64_t v112 = *(void *)(v111 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
    {
      uint64_t v113 = v110;
      uint64_t v114 = v160;
      sub_100091720(v113, v160, type metadata accessor for PreparedSparkline);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v112 + 56))(v114, 0, 1, v111);
    }
    sub_1000919DC(v110, (uint64_t (*)(void))sub_100041E44);
  }
LABEL_19:
  uint64_t v132 = v160;
  uint64_t v133 = type metadata accessor for PreparedSparkline(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v132, 1, 1, v133);
}

uint64_t sub_10008D810@<X0>(void *a1@<X8>)
{
  sub_10008F780();
  uint64_t v3 = v2;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - v7;
  sub_10002FE38();
  uint64_t v10 = v9;
  __chkstk_darwin(v9);
  uint64_t v38 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1001232B0();
  uint64_t v13 = *(void **)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v33 - v17;
  sub_100091A3C(14, 0, 0, (uint64_t)&v33 - v17);
  sub_100091A3C(20, 30, 0, (uint64_t)v15);
  sub_10009183C((unint64_t *)&qword_10015EB50, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = sub_100125A70();
  if (result)
  {
    uint64_t v35 = v3;
    uint64_t v36 = a1;
    uint64_t v33 = &v8[*(int *)(v3 + 48)];
    uint64_t v20 = v33;
    uint64_t v34 = v8;
    uint64_t v37 = v10;
    uint64_t v21 = (void (*)(char *, char *, uint64_t))v13[4];
    v21(v8, v18, v12);
    v21(v20, v15, v12);
    uint64_t v22 = &v5[*(int *)(v3 + 48)];
    uint64_t v23 = (uint64_t)v38;
    uint64_t v24 = (void (*)(char *, char *, uint64_t))v13[2];
    v24(v5, v8, v12);
    uint64_t v25 = v22;
    unint64_t v26 = v22;
    uint64_t v27 = v33;
    v24(v25, v33, v12);
    v21((char *)v23, v5, v12);
    uint64_t v28 = (void (*)(char *, uint64_t))v13[1];
    v28(v26, v12);
    uint64_t v29 = &v5[*(int *)(v35 + 48)];
    v21(v5, v34, v12);
    v21(v29, v27, v12);
    v21((char *)(v23 + *(int *)(v37 + 36)), v29, v12);
    v28(v5, v12);
    uint64_t v30 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v31 = v36;
    sub_100091720(v23, (uint64_t)v36 + v30[5], (uint64_t (*)(void))sub_10002FE38);
    uint64_t result = sub_1001234E0();
    *uint64_t v31 = _swiftEmptyArrayStorage;
    *(_OWORD *)((char *)v31 + v30[7]) = xmmword_10012B5C0;
    uint64_t v32 = (char *)v31 + v30[8];
    *(void *)uint64_t v32 = 0x4028000000000000;
    v32[8] = 0;
    *((unsigned char *)v31 + v30[9]) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10008DBD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v1 = sub_100124570();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1001234F0();
  __chkstk_darwin(v5 - 8);
  uint64_t v79 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008F780();
  uint64_t v8 = v7;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v70 - v12;
  uint64_t v14 = sub_1001232B0();
  uint64_t v15 = *(void **)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v70 - v19;
  sub_10002FE38();
  uint64_t v74 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v75 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v78 = (uint64_t)&v70 - v24;
  sub_100041E44();
  __chkstk_darwin(v25 - 8);
  uint64_t v76 = (uint64_t)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100091A3C(14, 0, 0, (uint64_t)v20);
  sub_100091A3C(20, 30, 0, (uint64_t)v18);
  sub_10009183C((unint64_t *)&qword_10015EB50, (void (*)(uint64_t))&type metadata accessor for Date);
  if (sub_100125A70())
  {
    uint64_t v71 = v2;
    uint64_t v72 = v1;
    int v73 = v4;
    uint64_t v27 = v11;
    uint64_t v28 = *(int *)(v8 + 48);
    uint64_t v29 = v18;
    uint64_t v30 = v8;
    uint64_t v70 = v8;
    uint64_t v31 = &v13[v28];
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v15[4];
    v32(v13, v20, v14);
    uint64_t v33 = v31;
    v32(v31, v29, v14);
    uint64_t v34 = &v27[*(int *)(v30 + 48)];
    uint64_t v35 = (void (*)(char *, char *, uint64_t))v15[2];
    v35(v27, v13, v14);
    v35(v34, v33, v14);
    uint64_t v36 = (uint64_t)v75;
    v32(v75, v27, v14);
    uint64_t v37 = (void (*)(char *, uint64_t))v15[1];
    v37(v34, v14);
    uint64_t v38 = &v27[*(int *)(v70 + 48)];
    v32(v27, v13, v14);
    v32(v38, v33, v14);
    v32((char *)(v36 + *(int *)(v74 + 36)), v38, v14);
    v37(v27, v14);
    sub_100091720(v36, v78, (uint64_t (*)(void))sub_10002FE38);
    sub_1001234E0();
    sub_1000916BC(0, &qword_100161370, (uint64_t (*)(uint64_t))sub_1000143B4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    sub_1000143B4();
    uint64_t v40 = v39 - 8;
    uint64_t v41 = *(void *)(*(void *)(v39 - 8) + 72);
    unint64_t v42 = (*(unsigned __int8 *)(*(void *)(v39 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v39 - 8) + 80);
    uint64_t v43 = 16 * v41;
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10012B5D0;
    unint64_t v44 = v14 + v42;
    uint64_t v45 = *(int *)(v40 + 56);
    sub_100091A3C(14, 0, 0, v14 + v42);
    *(void *)(v44 + v45) = 0x402419999999999ALL;
    uint64_t v46 = *(int *)(v40 + 56);
    sub_100091A3C(14, 22, 45, v14 + v42 + v41);
    *(void *)(v44 + v41 + v46) = 0x4023800000000000;
    uint64_t v47 = *(int *)(v40 + 56);
    sub_100091A3C(14, 47, 27, v14 + v42 + 2 * v41);
    *(void *)(v44 + 2 * v41 + v47) = 0x4021CCCCCCCCCCCDLL;
    uint64_t v48 = *(int *)(v40 + 56);
    sub_100091A3C(15, 11, 30, v14 + v42 + 3 * v41);
    *(void *)(v44 + 3 * v41 + v48) = 0x4022800000000000;
    uint64_t v49 = *(int *)(v40 + 56);
    sub_100091A3C(15, 36, 2, v14 + v42 + 4 * v41);
    *(void *)(v44 + 4 * v41 + v49) = 0x4028666666666666;
    uint64_t v50 = *(int *)(v40 + 56);
    sub_100091A3C(16, 0, 15, v14 + v42 + 5 * v41);
    *(void *)(v44 + 5 * v41 + v50) = 0x4025E66666666666;
    uint64_t v51 = *(int *)(v40 + 56);
    sub_100091A3C(16, 24, 18, v14 + v42 + 6 * v41);
    *(void *)(v44 + 6 * v41 + v51) = 0x402F000000000000;
    uint64_t v52 = *(int *)(v40 + 56);
    sub_100091A3C(16, 49, 0, v14 + v42 + 7 * v41);
    *(void *)(v44 + 7 * v41 + v52) = 0x4023B33333333333;
    uint64_t v53 = *(int *)(v40 + 56);
    sub_100091A3C(17, 12, 33, v14 + v42 + 8 * v41);
    *(void *)(v44 + 8 * v41 + v53) = 0x4021800000000000;
    uint64_t v54 = *(int *)(v40 + 56);
    sub_100091A3C(17, 39, 22, v14 + v42 + 9 * v41);
    *(void *)(v44 + 9 * v41 + v54) = 0x4028800000000000;
    uint64_t v55 = *(int *)(v40 + 56);
    sub_100091A3C(18, 0, 30, v14 + v42 + 10 * v41);
    *(void *)(v44 + 10 * v41 + v55) = 0x402A666666666666;
    uint64_t v56 = *(int *)(v40 + 56);
    sub_100091A3C(18, 24, 52, v14 + v42 + 11 * v41);
    *(void *)(v44 + 11 * v41 + v56) = 0x4033B33333333333;
    uint64_t v57 = *(int *)(v40 + 56);
    sub_100091A3C(18, 49, 15, v44 + 12 * v41);
    *(void *)(v44 + 12 * v41 + v57) = 0x402CCCCCCCCCCCCDLL;
    uint64_t v58 = *(int *)(v40 + 56);
    sub_100091A3C(19, 13, 18, v44 + 13 * v41);
    *(void *)(v44 + 13 * v41 + v58) = 0x402F666666666666;
    uint64_t v59 = *(int *)(v40 + 56);
    sub_100091A3C(19, 37, 40, v44 + 14 * v41);
    *(void *)(v44 + 14 * v41 + v59) = 0x40274CCCCCCCCCCDLL;
    uint64_t v60 = v44 + 15 * v41;
    uint64_t v61 = *(int *)(v40 + 56);
    sub_100091A3C(20, 1, 33, v60);
    *(void *)(v60 + v61) = 0x4030000000000000;
    uint64_t v62 = v44 + v43;
    uint64_t v63 = *(int *)(v40 + 56);
    sub_100091A3C(20, 30, 0, v62);
    *(void *)(v62 + v63) = 0x4032666666666666;
    if (qword_10015D4A0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v64 = v72;
  uint64_t v65 = sub_100019244(v72, (uint64_t)qword_100172528);
  uint64_t v66 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v73, v65, v64);
  uint64_t v67 = v76;
  sub_1000902D0(v78, v79, 0.0, 1, 0.0, 1, v14, v66, v76, 0.5);
  uint64_t v68 = type metadata accessor for PreparedSparkline(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 48))(v67, 1, v68);
  if (result != 1) {
    return sub_100091720(v67, v77, type metadata accessor for PreparedSparkline);
  }
  __break(1u);
  return result;
}

uint64_t sub_10008E52C(void *a1)
{
  sub_1000938D4(0, &qword_100161548, (uint64_t (*)(void))sub_100093880, (uint64_t)&type metadata for PreparedSparkline.Entry.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_100009D98(a1, a1[3]);
  sub_100093880();
  sub_100126650();
  char v11 = 0;
  sub_1001232B0();
  sub_100092CD0();
  sub_1001264C0();
  if (!v1)
  {
    type metadata accessor for PreparedSparkline.Entry(0);
    char v10 = 1;
    sub_1001264A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10008E6E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = sub_1001232B0();
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v28 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000938D4(0, &qword_100161538, (uint64_t (*)(void))sub_100093880, (uint64_t)&type metadata for PreparedSparkline.Entry.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for PreparedSparkline.Entry(0);
  __chkstk_darwin(v9);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D98(a1, a1[3]);
  sub_100093880();
  sub_100126640();
  if (v2) {
    return sub_100009D48((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v24;
  char v30 = 0;
  sub_100092BB4();
  uint64_t v14 = v27;
  uint64_t v15 = v25;
  sub_1001263F0();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v22 = (uint64_t)v12;
  v16(v12, v28, v14);
  char v29 = 1;
  sub_1001263D0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v15);
  uint64_t v20 = v22;
  uint64_t v19 = v23;
  *(void *)(v22 + *(int *)(v9 + 20)) = v18;
  sub_1000923A4(v20, v19, type metadata accessor for PreparedSparkline.Entry);
  sub_100009D48((uint64_t)a1);
  return sub_1000919DC(v20, type metadata accessor for PreparedSparkline.Entry);
}

uint64_t sub_10008EA54(void *a1)
{
  uint64_t v3 = v1;
  sub_1000938D4(0, &qword_100161450, (uint64_t (*)(void))sub_100092ABC, (uint64_t)&type metadata for PreparedSparkline.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v12 - v8;
  sub_100009D98(a1, a1[3]);
  sub_100092ABC();
  sub_100126650();
  *(void *)&long long v12 = *v3;
  char v13 = 0;
  sub_1000699E8(0);
  sub_100092B44(&qword_100161458, sub_1000699E8, (void (*)(void))sub_100092C9C);
  sub_1001264C0();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for PreparedSparkline(0);
    LOBYTE(v12) = 1;
    sub_10002FE38();
    sub_100092B44(&qword_100161468, (void (*)(uint64_t))sub_10002FE38, (void (*)(void))sub_100092CD0);
    sub_1001264C0();
    LOBYTE(v12) = 2;
    sub_1001234F0();
    sub_10009183C(&qword_100161470, (void (*)(uint64_t))&type metadata accessor for TimeZone);
    sub_1001264C0();
    long long v12 = *(_OWORD *)((char *)v3 + *(int *)(v10 + 28));
    char v13 = 3;
    sub_100092BE8();
    sub_100092D04(&qword_100161478);
    sub_1001264C0();
    LOBYTE(v12) = 4;
    sub_100126450();
    LOBYTE(v12) = *((unsigned char *)v3 + *(int *)(v10 + 36));
    char v13 = 5;
    sub_100092D64();
    sub_1001264C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10008EE20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v27 = sub_1001234F0();
  uint64_t v23 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v26 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002FE38();
  uint64_t v25 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000938D4(0, &qword_100161410, (uint64_t (*)(void))sub_100092ABC, (uint64_t)&type metadata for PreparedSparkline.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v29 = v7;
  uint64_t v24 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = (int *)type metadata accessor for PreparedSparkline(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D98(a1, a1[3]);
  sub_100092ABC();
  uint64_t v28 = v9;
  uint64_t v13 = (uint64_t)v30;
  sub_100126640();
  if (v13) {
    return sub_100009D48((uint64_t)a1);
  }
  uint64_t v14 = v26;
  uint64_t v21 = v12;
  char v30 = a1;
  uint64_t v15 = v27;
  sub_1000699E8(0);
  char v32 = 0;
  sub_100092B44(&qword_100161420, sub_1000699E8, (void (*)(void))sub_100092B10);
  sub_1001263F0();
  uint64_t v16 = v21;
  *(void *)uint64_t v21 = v31;
  LOBYTE(v31) = 1;
  sub_100092B44(&qword_100161430, (void (*)(uint64_t))sub_10002FE38, (void (*)(void))sub_100092BB4);
  sub_1001263F0();
  sub_100091720((uint64_t)v6, (uint64_t)&v16[v10[5]], (uint64_t (*)(void))sub_10002FE38);
  LOBYTE(v31) = 2;
  sub_10009183C(&qword_100161438, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  sub_1001263F0();
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v16[v10[6]], v14, v15);
  sub_100092BE8();
  char v32 = 3;
  sub_100092D04(&qword_100161440);
  sub_1001263F0();
  *(_OWORD *)&v16[v10[7]] = v31;
  LOBYTE(v31) = 4;
  uint64_t v17 = sub_100126380();
  uint64_t v18 = &v16[v10[8]];
  *(void *)uint64_t v18 = v17;
  v18[8] = v19 & 1;
  char v32 = 5;
  sub_100092C48();
  sub_1001263F0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v29);
  *(unsigned char *)v10[9] = v31;
  sub_1000923A4(0, v22, type metadata accessor for PreparedSparkline);
  sub_100009D48((uint64_t)v30);
  return sub_1000919DC(0, type metadata accessor for PreparedSparkline);
}

uint64_t sub_10008F478()
{
  if (*v0) {
    return 0x6563697270;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_10008F4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000934C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10008F4D0(uint64_t a1)
{
  unint64_t v2 = sub_100093880();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008F50C(uint64_t a1)
{
  unint64_t v2 = sub_100093880();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_10008F548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_100123260() & 1) != 0 && *(double *)(a1 + *(int *)(a3 + 20)) == *(double *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_10008F59C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10008E6E4(a1, a2);
}

uint64_t sub_10008F5B4(void *a1)
{
  return sub_10008E52C(a1);
}

uint64_t sub_10008F5CC()
{
  uint64_t result = 0x73656972746E65;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E756F42656D6974;
      break;
    case 2:
      uint64_t result = 0x656D695473697861;
      break;
    case 3:
      uint64_t result = 0x756F426563697270;
      break;
    case 4:
      uint64_t result = 0x73756F6976657270;
      break;
    case 5:
      uint64_t result = 0x646E657274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10008F6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000935A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10008F6D8(uint64_t a1)
{
  unint64_t v2 = sub_100092ABC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10008F714(uint64_t a1)
{
  unint64_t v2 = sub_100092ABC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10008F750@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10008EE20(a1, a2);
}

uint64_t sub_10008F768(void *a1)
{
  return sub_10008EA54(a1);
}

void sub_10008F780()
{
  if (!qword_100161368)
  {
    sub_1001232B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100161368);
    }
  }
}

uint64_t sub_10008F7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, int a4@<W3>, double a5@<X4>, int a6@<W5>, long long *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  uint64_t v91 = a8;
  LODWORD(v80) = a6;
  double v81 = a5;
  int v83 = a4;
  double v89 = a3;
  uint64_t v97 = a9;
  uint64_t v98 = a2;
  uint64_t v94 = a1;
  uint64_t v85 = type metadata accessor for PreparedSparkline.Entry(0);
  __chkstk_darwin(v85);
  uint64_t v79 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v82 = (char *)&v77 - v14;
  sub_1000917A8();
  uint64_t v87 = v15;
  uint64_t v86 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  long long v84 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v88 = (char *)&v77 - v18;
  sub_100091884(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000918B8();
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for PreparedSparkline(0);
  uint64_t v95 = *(void *)(v27 - 8);
  uint64_t v96 = (int *)v27;
  __chkstk_darwin(v27);
  unint64_t v90 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *((void *)a7 + 2);
  v103[0] = *(void *)a7;
  uint64_t v30 = *((void *)a7 + 6);
  long long v31 = a7[1];
  long long v99 = *a7;
  long long v100 = v31;
  long long v101 = a7[2];
  uint64_t v102 = v30;
  sub_100092440((uint64_t)v103);
  sub_1000143B4();
  sub_100092514(0, &qword_1001613C8, (void (*)(uint64_t))sub_10009246C, (void (*)(uint64_t))sub_1000143B4, (void (*)(void))sub_1000926DC);
  sub_100092710();
  uint64_t v93 = v29;
  swift_retain();
  swift_retain();
  uint64_t v92 = v30;
  swift_retain();
  uint64_t v32 = v24;
  sub_100124430();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23) == 1)
  {
    sub_1000919DC((uint64_t)v21, (uint64_t (*)(void))sub_100091884);
    uint64_t v33 = v91;
    uint64_t v34 = sub_100124550();
    os_log_type_t v35 = sub_100125F40();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Failed to create sparkline model: Insufficient data points", v36, 2u);
      swift_slowDealloc();
    }

    uint64_t v37 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v33, v37);
    sub_1000927AC((uint64_t)v103);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v38 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v98, v38);
    sub_1000919DC(v94, (uint64_t (*)(void))sub_10002FE38);
LABEL_11:
    uint64_t v71 = 1;
    uint64_t v43 = v96;
    uint64_t v72 = v97;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v95 + 56))(v72, v71, 1, v43);
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v21, v23);
  uint64_t v39 = v26;
  if (sub_1001243E0() >= 250)
  {
    uint64_t v65 = v91;
    uint64_t v66 = sub_100124550();
    os_log_type_t v67 = sub_100125F50();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "Failed to create sparkline model: too many categories", v68, 2u);
      swift_slowDealloc();
    }

    uint64_t v69 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v65, v69);
    sub_1000927AC((uint64_t)v103);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v70 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8))(v98, v70);
    sub_1000919DC(v94, (uint64_t (*)(void))sub_10002FE38);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v23);
    goto LABEL_11;
  }
  uint64_t v78 = v32;
  int v40 = v80 & 1;
  char v41 = v83;
  char v42 = v83 & 1;
  uint64_t v43 = v96;
  unint64_t v44 = v90;
  uint64_t v45 = v94;
  sub_1000923A4(v94, (uint64_t)&v90[v96[5]], (uint64_t (*)(void))sub_10002FE38);
  uint64_t v46 = (char *)v44 + v43[6];
  uint64_t v47 = sub_1001234F0();
  uint64_t v77 = *(void *)(v47 - 8);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v77 + 16);
  uint64_t v80 = v47;
  v48(v46, v98);
  uint64_t v49 = (double *)((char *)v44 + v43[8]);
  *uint64_t v49 = v89;
  *((unsigned char *)v49 + 8) = v42;
  uint64_t v50 = (uint64_t)v88;
  sub_100090C90(v81, v40, v45, (uint64_t)v88);
  uint64_t v51 = v87;
  sub_100124400();
  *unint64_t v44 = v99;
  sub_1000912C8(v50, a10);
  uint64_t v52 = (void *)((char *)v44 + v43[7]);
  *uint64_t v52 = v53;
  v52[1] = v54;
  sub_10009183C(&qword_1001613B0, sub_1000699E8);
  uint64_t v55 = (uint64_t)v82;
  sub_100124410();
  uint64_t v56 = v85;
  double v57 = *(double *)(v55 + *(int *)(v85 + 20));
  sub_1000919DC(v55, type metadata accessor for PreparedSparkline.Entry);
  uint64_t v82 = v39;
  uint64_t v58 = v86;
  uint64_t v59 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v84, v50, v51);
  if (v41)
  {
    uint64_t v60 = v45;
    uint64_t v61 = (uint64_t)v79;
    sub_1001243F0();
    uint64_t v62 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v91, v62);
    sub_1000927AC((uint64_t)v103);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v98, v80);
    sub_1000919DC(v60, (uint64_t (*)(void))sub_10002FE38);
    uint64_t v63 = *(void (**)(char *, uint64_t))(v58 + 8);
    v63(v59, v51);
    v63(v88, v51);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v82, v23);
    double v64 = *(double *)(v61 + *(int *)(v56 + 20));
    sub_1000919DC(v61, type metadata accessor for PreparedSparkline.Entry);
  }
  else
  {
    uint64_t v73 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v91, v73);
    sub_1000927AC((uint64_t)v103);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v98, v80);
    sub_1000919DC(v45, (uint64_t (*)(void))sub_10002FE38);
    uint64_t v74 = *(void (**)(char *, uint64_t))(v58 + 8);
    v74(v59, v51);
    v74((char *)v50, v51);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v82, v23);
    double v64 = v89;
  }
  uint64_t v75 = (uint64_t)v90;
  v90[v43[9]] = v57 - v64 < 0.0;
  uint64_t v72 = v97;
  sub_100091720(v75, v97, type metadata accessor for PreparedSparkline);
  uint64_t v71 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v95 + 56))(v72, v71, 1, v43);
}

uint64_t sub_1000902D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double a3@<X2>, int a4@<W3>, double a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  LODWORD(v77) = a6;
  double v78 = a5;
  int v80 = a4;
  double v86 = a3;
  uint64_t v91 = a2;
  uint64_t v92 = a1;
  uint64_t v90 = a9;
  uint64_t v85 = type metadata accessor for PreparedSparkline.Entry(0);
  uint64_t v13 = __chkstk_darwin(v85);
  uint64_t v76 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v79 = (char *)&v73 - v15;
  sub_1000917A8();
  uint64_t v83 = *(void *)(v16 - 8);
  uint64_t v84 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  double v81 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v82 = (uint64_t)&v73 - v19;
  sub_100091884(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000918B8();
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for PreparedSparkline(0);
  uint64_t v88 = *(void *)(v28 - 8);
  double v89 = (int *)v28;
  __chkstk_darwin(v28);
  uint64_t v30 = (uint64_t *)((char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v93 = a7;
  sub_1000143B4();
  sub_1000916BC(0, &qword_100161398, (uint64_t (*)(uint64_t))sub_1000143B4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
  sub_100091968(&qword_1001613A8);
  uint64_t v87 = a7;
  uint64_t v31 = v25;
  swift_bridgeObjectRetain();
  sub_100124430();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24) == 1)
  {
    sub_1000919DC((uint64_t)v22, (uint64_t (*)(void))sub_100091884);
    uint64_t v32 = sub_100124550();
    os_log_type_t v33 = sub_100125F40();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Failed to create sparkline model: Insufficient data points", v34, 2u);
      swift_slowDealloc();
    }

    uint64_t v35 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(a8, v35);
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v91, v36);
    sub_1000919DC(v92, (uint64_t (*)(void))sub_10002FE38);
LABEL_11:
    uint64_t v67 = 1;
    char v41 = v89;
    uint64_t v68 = v90;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v88 + 56))(v68, v67, 1, v41);
  }
  uint64_t v75 = a8;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v22, v24);
  uint64_t v37 = v27;
  if (sub_1001243E0() >= 250)
  {
    uint64_t v61 = v75;
    uint64_t v62 = sub_100124550();
    os_log_type_t v63 = sub_100125F50();
    if (os_log_type_enabled(v62, v63))
    {
      double v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Failed to create sparkline model: too many categories", v64, 2u);
      swift_slowDealloc();
    }

    uint64_t v65 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v61, v65);
    swift_bridgeObjectRelease();
    uint64_t v66 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v91, v66);
    sub_1000919DC(v92, (uint64_t (*)(void))sub_10002FE38);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v24);
    goto LABEL_11;
  }
  int v38 = v77 & 1;
  char v39 = v80;
  char v40 = v80 & 1;
  char v41 = v89;
  uint64_t v42 = v92;
  sub_1000923A4(v92, (uint64_t)v30 + v89[5], (uint64_t (*)(void))sub_10002FE38);
  uint64_t v43 = (char *)v30 + v41[6];
  uint64_t v44 = sub_1001234F0();
  uint64_t v74 = *(void *)(v44 - 8);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v74 + 16);
  uint64_t v77 = v44;
  v45(v43, v91);
  uint64_t v46 = (double *)((char *)v30 + v41[8]);
  double *v46 = v86;
  *((unsigned char *)v46 + 8) = v40;
  uint64_t v47 = v42;
  uint64_t v48 = v82;
  sub_100090C90(v78, v38, v47, v82);
  double v78 = *(double *)&v37;
  uint64_t v49 = v84;
  sub_100124400();
  void *v30 = v93;
  sub_1000912C8(v48, a10);
  uint64_t v50 = (void *)((char *)v30 + v41[7]);
  *uint64_t v50 = v51;
  v50[1] = v52;
  sub_10009183C(&qword_1001613B0, sub_1000699E8);
  uint64_t v53 = (uint64_t)v79;
  sub_100124410();
  double v54 = *(double *)(v53 + *(int *)(v85 + 20));
  sub_1000919DC(v53, type metadata accessor for PreparedSparkline.Entry);
  uint64_t v55 = v83;
  uint64_t v56 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v81, v48, v49);
  if (v39)
  {
    uint64_t v57 = (uint64_t)v76;
    sub_1001243F0();
    uint64_t v58 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v75, v58);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v91, v77);
    sub_1000919DC(v92, (uint64_t (*)(void))sub_10002FE38);
    uint64_t v59 = *(void (**)(char *, uint64_t))(v55 + 8);
    v59(v56, v49);
    v59((char *)v48, v49);
    (*(void (**)(double, uint64_t))(v31 + 8))(COERCE_DOUBLE(*(void *)&v78), v24);
    double v60 = *(double *)(v57 + *(int *)(v85 + 20));
    sub_1000919DC(v57, type metadata accessor for PreparedSparkline.Entry);
  }
  else
  {
    uint64_t v69 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v75, v69);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v91, v77);
    sub_1000919DC(v92, (uint64_t (*)(void))sub_10002FE38);
    uint64_t v70 = *(void (**)(char *, uint64_t))(v55 + 8);
    v70(v56, v49);
    v70((char *)v48, v49);
    (*(void (**)(double, uint64_t))(v31 + 8))(COERCE_DOUBLE(*(void *)&v78), v24);
    double v60 = v86;
  }
  *((unsigned char *)v30 + v41[9]) = v54 - v60 < 0.0;
  uint64_t v71 = (uint64_t)v30;
  uint64_t v68 = v90;
  sub_100091720(v71, v90, type metadata accessor for PreparedSparkline);
  uint64_t v67 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v88 + 56))(v68, v67, 1, v41);
}

uint64_t sub_100090C90@<X0>(double a1@<X1>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v46 = a3;
  LODWORD(v52) = a2;
  double v50 = a1;
  uint64_t v5 = sub_1001232B0();
  unint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = (void *)v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000917A8();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PreparedSparkline.Entry(0);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v49 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v45 = (char *)&v45 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v45 - v18;
  sub_1000918B8();
  sub_1001243D0();
  uint64_t v20 = *(void (**)(void, void, void))(v10 + 16);
  uint64_t v53 = a4;
  uint64_t v21 = a4;
  uint64_t v22 = v20;
  v20(v12, v21, v9);
  sub_10009183C(&qword_1001613B0, sub_1000699E8);
  sub_100124410();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v12, v9);
  if ((v52 & 1) == 0 && *(double *)&v19[*(int *)(v13 + 20)] != v50)
  {
    sub_10002FE38();
    uint64_t v52 = (void (*)(void, void, void))(v46 + *(int *)(v24 + 36));
    sub_100123220();
    char v25 = sub_100123240();
    (*(void (**)(char *, void *))(v47 + 8))(v7, v48);
    if (v25)
    {
      uint64_t v52 = v22;
      uint64_t v26 = (uint64_t)v45;
      sub_100123220();
      *(double *)(v26 + *(int *)(v13 + 20)) = v50;
      double v50 = COERCE_DOUBLE(sub_1001243B0());
      uint64_t v28 = v27;
      unint64_t v29 = *v27;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v48 = v28;
      unint64_t *v28 = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v29 = sub_10009B2A0(0, *(void *)(v29 + 16) + 1, 1, v29);
        void *v48 = v29;
      }
      unint64_t v32 = *(void *)(v29 + 16);
      unint64_t v31 = *(void *)(v29 + 24);
      unint64_t v33 = v32 + 1;
      if (v32 >= v31 >> 1)
      {
        unint64_t v47 = v32 + 1;
        uint64_t v44 = sub_10009B2A0(v31 > 1, v32 + 1, 1, v29);
        unint64_t v33 = v47;
        unint64_t v29 = v44;
        void *v48 = v44;
      }
      *(void *)(v29 + 16) = v33;
      sub_100091720(v26, v29+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v32, type metadata accessor for PreparedSparkline.Entry);
      (*(void (**)(unsigned char *, void))&v50)(v54, 0);
      uint64_t v22 = v52;
    }
  }
  v22(v12, v53, v9);
  uint64_t v34 = sub_1001243E0();
  v23(v12, v9);
  if (v34 == 1)
  {
    uint64_t v35 = (uint64_t)v49;
    sub_100123220();
    *(void *)(v35 + *(int *)(v13 + 20)) = *(void *)&v19[*(int *)(v13 + 20)];
    uint64_t v36 = (void (*)(unsigned char *, void))sub_1001243B0();
    int v38 = v37;
    unint64_t v39 = *v37;
    char v40 = swift_isUniquelyReferenced_nonNull_native();
    *int v38 = v39;
    if ((v40 & 1) == 0)
    {
      unint64_t v39 = sub_10009B2A0(0, *(void *)(v39 + 16) + 1, 1, v39);
      *int v38 = v39;
    }
    unint64_t v42 = *(void *)(v39 + 16);
    unint64_t v41 = *(void *)(v39 + 24);
    if (v42 >= v41 >> 1)
    {
      unint64_t v39 = sub_10009B2A0(v41 > 1, v42 + 1, 1, v39);
      *int v38 = v39;
    }
    *(void *)(v39 + 16) = v42 + 1;
    sub_100091720(v35, v39+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v42, type metadata accessor for PreparedSparkline.Entry);
    v36(v54, 0);
  }
  return sub_1000919DC((uint64_t)v19, type metadata accessor for PreparedSparkline.Entry);
}

uint64_t sub_100091230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000143B4();
  uint64_t v5 = *(void *)(a1 + *(int *)(v4 + 48));
  uint64_t v6 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  uint64_t result = type metadata accessor for PreparedSparkline.Entry(0);
  *(void *)(a2 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1000912C8(uint64_t a1, double a2)
{
  sub_1000917A8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PreparedSparkline.Entry(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v28 - v14;
  sub_10009183C(&qword_1001613B0, sub_1000699E8);
  sub_100124410();
  double v16 = *(double *)&v15[*(int *)(v9 + 20)];
  sub_1000919DC((uint64_t)v15, type metadata accessor for PreparedSparkline.Entry);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  sub_10009183C(&qword_1001613B8, (void (*)(uint64_t))sub_1000917A8);
  sub_100125BE0();
  uint64_t result = v28;
  unint64_t v18 = v29;
  unint64_t v19 = *(void *)(v28 + 16);
  if (v29 != v19)
  {
    double v21 = v16;
    double v20 = v16;
    while ((v18 & 0x8000000000000000) == 0)
    {
      if (v18 >= v19) {
        goto LABEL_18;
      }
      uint64_t v22 = result
          + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
          + *(void *)(v10 + 72) * v18;
      unint64_t v29 = v18 + 1;
      sub_1000923A4(v22, (uint64_t)v13, type metadata accessor for PreparedSparkline.Entry);
      uint64_t v23 = *(int *)(v9 + 20);
      double v24 = *(double *)&v13[v23];
      if (v20 >= v24) {
        double v20 = *(double *)&v13[v23];
      }
      if (v24 > v21) {
        double v21 = *(double *)&v13[v23];
      }
      sub_1000919DC((uint64_t)v13, type metadata accessor for PreparedSparkline.Entry);
      uint64_t result = v28;
      unint64_t v18 = v29;
      unint64_t v19 = *(void *)(v28 + 16);
      if (v29 == v19) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  double v20 = v16;
  double v21 = v16;
LABEL_11:
  uint64_t result = swift_bridgeObjectRelease();
  double v25 = a2 * 0.5 * v16;
  double v26 = v16 + v25;
  double v27 = v16 - v25;
  if (v21 > v26) {
    double v26 = v21;
  }
  if (v27 >= v20) {
    double v27 = v20;
  }
  if (v27 > v26) {
LABEL_19:
  }
    __break(1u);
  return result;
}

uint64_t sub_1000915E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100123C10();
  if (v3)
  {
    sub_1000143B4();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v11 = v12;
    uint64_t v9 = a1;
    uint64_t v10 = 1;
  }
  else
  {
    uint64_t v4 = v2;
    sub_1000143B4();
    uint64_t v6 = v5;
    uint64_t v7 = *(int *)(v5 + 48);
    sub_100123C00();
    *(void *)(a1 + v7) = v4;
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v9 = a1;
    uint64_t v10 = 0;
    uint64_t v11 = v6;
  }

  return v8(v9, v10, 1, v11);
}

void sub_1000916BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100091720(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PreparedSparkline.Entry(uint64_t a1)
{
  return sub_100009E3C(a1, qword_1001614E0);
}

void sub_1000917A8()
{
  if (!qword_100161378)
  {
    sub_1000699E8(255);
    sub_10009183C(&qword_100161380, sub_1000699E8);
    unint64_t v0 = sub_100124420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161378);
    }
  }
}

uint64_t sub_10009183C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100091884(uint64_t a1)
{
}

void sub_1000918B8()
{
  if (!qword_100161390)
  {
    sub_1000916BC(255, &qword_100161398, (uint64_t (*)(uint64_t))sub_1000143B4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
    sub_100091968(&qword_1001613A0);
    unint64_t v0 = sub_100124420();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161390);
    }
  }
}

uint64_t sub_100091968(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000916BC(255, &qword_100161398, (uint64_t (*)(uint64_t))sub_1000143B4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000919DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100091A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  uint64_t v37 = a4;
  uint64_t v53 = sub_100123430();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100123440();
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  __chkstk_darwin(v5);
  uint64_t v44 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100123410();
  uint64_t v7 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  char v40 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1001232B0();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001234F0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1001233F0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1001234A0();
  uint64_t v41 = *(void *)(v19 - 8);
  uint64_t v42 = v19;
  __chkstk_darwin(v19);
  double v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029204(0);
  __chkstk_darwin(v22 - 8);
  double v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for Calendar.Identifier.gregorian(_:), v15);
  sub_100123400();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (qword_10015D560 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_100019244(v11, (uint64_t)qword_100172670);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v25, v11);
  unint64_t v39 = v21;
  sub_100123480();
  int v38 = v10;
  sub_100123270();
  double v26 = v40;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v40, enum case for Calendar.MatchingPolicy.nextTime(_:), v54);
  uint64_t v28 = v46;
  uint64_t v27 = v47;
  unint64_t v29 = v44;
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v44, enum case for Calendar.RepeatedTimePolicy.first(_:), v47);
  uint64_t v30 = v51;
  unint64_t v31 = v48;
  uint64_t v32 = v53;
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v48, enum case for Calendar.SearchDirection.forward(_:), v53);
  unint64_t v33 = v39;
  sub_100123460();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v27);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v54);
  uint64_t v34 = v43;
  uint64_t v35 = v45;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v45);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v42);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v24, 1, v35);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v34 + 32))(v37, v24, v35);
  }
  __break(1u);
  return result;
}

uint64_t sub_10009206C()
{
  sub_1000916BC(0, &qword_10015E828, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - v1;
  uint64_t v3 = sub_1001234F0();
  sub_10001927C(v3, qword_100172670);
  uint64_t v4 = sub_100019244(v3, (uint64_t)qword_100172670);
  sub_1001234B0();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

BOOL sub_1000921B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreparedSparkline.Entry(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_1000923A4(a1 + v12, (uint64_t)v10, type metadata accessor for PreparedSparkline.Entry);
      sub_1000923A4(a2 + v12, (uint64_t)v6, type metadata accessor for PreparedSparkline.Entry);
      if ((sub_100123260() & 1) == 0) {
        break;
      }
      uint64_t v15 = *(int *)(v4 + 20);
      double v16 = *(double *)&v10[v15];
      double v17 = *(double *)&v6[v15];
      sub_1000919DC((uint64_t)v6, type metadata accessor for PreparedSparkline.Entry);
      sub_1000919DC((uint64_t)v10, type metadata accessor for PreparedSparkline.Entry);
      BOOL v19 = v14-- != 0;
      BOOL result = v16 == v17;
      if (v16 == v17)
      {
        v12 += v13;
        if (v19) {
          continue;
        }
      }
      return result;
    }
    sub_1000919DC((uint64_t)v6, type metadata accessor for PreparedSparkline.Entry);
    sub_1000919DC((uint64_t)v10, type metadata accessor for PreparedSparkline.Entry);
  }
  return 0;
}

uint64_t sub_1000923A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_10009240C(uint64_t a1)
{
}

uint64_t sub_100092440(uint64_t a1)
{
  return a1;
}

void sub_10009246C()
{
  if (!qword_1001613D0)
  {
    sub_100092514(255, &qword_1001613D8, sub_1000925A4, sub_1000925D8, (void (*)(void))sub_10009260C);
    sub_100092640();
    unint64_t v0 = sub_1001262C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001613D0);
    }
  }
}

void sub_100092514(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_100126260();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1000925A4(uint64_t a1)
{
}

void sub_1000925D8(uint64_t a1)
{
}

uint64_t sub_10009260C()
{
  return sub_10009183C(&qword_1001613E8, sub_1000925A4);
}

unint64_t sub_100092640()
{
  unint64_t result = qword_1001613F0;
  if (!qword_1001613F0)
  {
    sub_100092514(255, &qword_1001613D8, sub_1000925A4, sub_1000925D8, (void (*)(void))sub_10009260C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001613F0);
  }
  return result;
}

uint64_t sub_1000926DC()
{
  return sub_10009183C(&qword_1001613F8, (void (*)(uint64_t))sub_10009246C);
}

unint64_t sub_100092710()
{
  unint64_t result = qword_100161400;
  if (!qword_100161400)
  {
    sub_100092514(255, &qword_1001613C8, (void (*)(uint64_t))sub_10009246C, (void (*)(uint64_t))sub_1000143B4, (void (*)(void))sub_1000926DC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161400);
  }
  return result;
}

uint64_t sub_1000927AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000927D8(uint64_t *a1, uint64_t *a2)
{
  sub_10002FE38();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - v8;
  if (!sub_1000921B8(*a1, *a2)) {
    goto LABEL_14;
  }
  uint64_t v36 = type metadata accessor for PreparedSparkline(0);
  uint64_t v37 = a2;
  uint64_t v10 = *(int *)(v36 + 20);
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  sub_1001232B0();
  sub_10009183C(&qword_100161408, (void (*)(uint64_t))&type metadata accessor for Date);
  char v13 = sub_100125A90();
  sub_1000923A4(v11, (uint64_t)v9, (uint64_t (*)(void))sub_10002FE38);
  sub_1000923A4(v12, (uint64_t)v6, (uint64_t (*)(void))sub_10002FE38);
  if ((v13 & 1) == 0)
  {
    sub_1000919DC((uint64_t)v6, (uint64_t (*)(void))sub_10002FE38);
    sub_1000919DC((uint64_t)v9, (uint64_t (*)(void))sub_10002FE38);
    goto LABEL_14;
  }
  char v14 = sub_100125A90();
  sub_1000919DC((uint64_t)v6, (uint64_t (*)(void))sub_10002FE38);
  sub_1000919DC((uint64_t)v9, (uint64_t (*)(void))sub_10002FE38);
  if ((v14 & 1) == 0) {
    goto LABEL_14;
  }
  double v16 = (int *)v36;
  uint64_t v15 = v37;
  if ((sub_1001234D0() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v17 = v16[7];
  double v18 = *(double *)((char *)a1 + v17);
  double v19 = *(double *)((char *)a1 + v17 + 8);
  uint64_t v20 = (double *)((char *)v15 + v17);
  if (v18 != *v20 || v19 != v20[1]) {
    goto LABEL_14;
  }
  uint64_t v22 = v16[8];
  uint64_t v23 = (double *)((char *)a1 + v22);
  char v24 = *((unsigned char *)a1 + v22 + 8);
  uint64_t v25 = (double *)((char *)v15 + v22);
  int v26 = *((unsigned __int8 *)v15 + v22 + 8);
  if (v24)
  {
    if (v26) {
      goto LABEL_19;
    }
LABEL_14:
    char v27 = 0;
    return v27 & 1;
  }
  if (*v23 != *v25) {
    LOBYTE(v26) = 1;
  }
  if (v26) {
    goto LABEL_14;
  }
LABEL_19:
  uint64_t v29 = v16[9];
  int v30 = *((unsigned __int8 *)a1 + v29);
  int v31 = *((unsigned __int8 *)v15 + v29);
  if (v30) {
    uint64_t v32 = 1853321060;
  }
  else {
    uint64_t v32 = 28789;
  }
  if (v30) {
    unint64_t v33 = 0xE400000000000000;
  }
  else {
    unint64_t v33 = 0xE200000000000000;
  }
  if (v31) {
    uint64_t v34 = 1853321060;
  }
  else {
    uint64_t v34 = 28789;
  }
  if (v31) {
    unint64_t v35 = 0xE400000000000000;
  }
  else {
    unint64_t v35 = 0xE200000000000000;
  }
  if (v32 == v34 && v33 == v35)
  {
    swift_bridgeObjectRelease_n();
    char v27 = 1;
  }
  else
  {
    char v27 = sub_100126530();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v27 & 1;
}

unint64_t sub_100092ABC()
{
  unint64_t result = qword_100161418;
  if (!qword_100161418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161418);
  }
  return result;
}

uint64_t sub_100092B10()
{
  return sub_10009183C(&qword_100161428, (void (*)(uint64_t))type metadata accessor for PreparedSparkline.Entry);
}

uint64_t sub_100092B44(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100092BB4()
{
  return sub_10009183C(&qword_100160700, (void (*)(uint64_t))&type metadata accessor for Date);
}

void sub_100092BE8()
{
  if (!qword_1001603C8)
  {
    unint64_t v0 = sub_100125A80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001603C8);
    }
  }
}

unint64_t sub_100092C48()
{
  unint64_t result = qword_100161448;
  if (!qword_100161448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161448);
  }
  return result;
}

uint64_t sub_100092C9C()
{
  return sub_10009183C(&qword_100161460, (void (*)(uint64_t))type metadata accessor for PreparedSparkline.Entry);
}

uint64_t sub_100092CD0()
{
  return sub_10009183C(&qword_100160728, (void (*)(uint64_t))&type metadata accessor for Date);
}

uint64_t sub_100092D04(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100092BE8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100092D64()
{
  unint64_t result = qword_100161480;
  if (!qword_100161480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161480);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PreparedSparkline.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100092E84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreparedSparkline.CodingKeys()
{
  return &type metadata for PreparedSparkline.CodingKeys;
}

uint64_t *sub_100092EBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001232B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100092F88(uint64_t a1)
{
  uint64_t v2 = sub_1001232B0();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100092FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100093068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000930E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100093160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001232B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1000931DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000931F0);
}

uint64_t sub_1000931F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001232B0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10009325C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100093270);
}

uint64_t sub_100093270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001232B0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1000932E0()
{
  uint64_t result = sub_1001232B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100093378()
{
  return sub_10009183C(&qword_100161518, (void (*)(uint64_t))&type metadata accessor for Date);
}

unint64_t sub_1000933C4()
{
  unint64_t result = qword_100161520;
  if (!qword_100161520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161520);
  }
  return result;
}

unint64_t sub_10009341C()
{
  unint64_t result = qword_100161528;
  if (!qword_100161528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161528);
  }
  return result;
}

unint64_t sub_100093474()
{
  unint64_t result = qword_100161530;
  if (!qword_100161530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161530);
  }
  return result;
}

uint64_t sub_1000934C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6563697270 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000935A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656972746E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E756F42656D6974 && a2 == 0xEA00000000007364 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D695473697861 && a2 == 0xEC000000656E6F5ALL || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756F426563697270 && a2 == 0xEB0000000073646ELL || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73756F6976657270 && a2 == 0xED000065736F6C43 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646E657274 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_100093880()
{
  unint64_t result = qword_100161540;
  if (!qword_100161540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161540);
  }
  return result;
}

void sub_1000938D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PreparedSparkline.Entry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100093A08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreparedSparkline.Entry.CodingKeys()
{
  return &type metadata for PreparedSparkline.Entry.CodingKeys;
}

unint64_t sub_100093A44()
{
  unint64_t result = qword_100161550;
  if (!qword_100161550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161550);
  }
  return result;
}

unint64_t sub_100093A9C()
{
  unint64_t result = qword_100161558;
  if (!qword_100161558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161558);
  }
  return result;
}

unint64_t sub_100093AF4()
{
  unint64_t result = qword_100161560;
  if (!qword_100161560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161560);
  }
  return result;
}

uint64_t sub_100093B48()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for NoopStocksIntentHandler()
{
  return self;
}

uint64_t sub_100093B9C()
{
  return sub_100093BD4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_100093BD4(uint64_t (*a1)(void))
{
  return a1();
}

void *sub_100093BE0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10009BACC(0, v1, 0);
    int v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1) {
        sub_10009BACC(v6 > 1, v7 + 1, 1);
      }
      v3 += 4;
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v5;
      v8[5] = v4;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_100093CB8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10009BACC(0, v1, 0);
  unint64_t result = (void *)sub_10009CAF4(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v4;
  uint64_t v23 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
    uint64_t v12 = v11[1];
    uint64_t v24 = *v11;
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1) {
      unint64_t result = (void *)sub_10009BACC(v13 > 1, v14 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    uint64_t v15 = &_swiftEmptyArrayStorage[2 * v14];
    void v15[4] = v24;
    v15[5] = v12;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v10);
    if ((v16 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
    if (v17)
    {
      int64_t v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v21;
    }
    else
    {
      unint64_t v18 = v10 + 1;
      unint64_t v19 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v21;
      if (v10 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v10)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              unint64_t v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v5 = v8;
    if (v6 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100093EC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_10009B6B0(isUniquelyReferenced_nonNull_native, v22, 1, v3, &qword_100161948, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_100123E30() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t *v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

uint64_t sub_1000940AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_10009B418(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

uint64_t sub_100094200(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v70 = a2;
  uint64_t v9 = sub_100123E30();
  uint64_t v71 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v69 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E0B4(0, &qword_100161940, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v67 = (uint64_t)&v54 - v15;
  __n128 v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v54 - v18;
  unint64_t v68 = a4;
  unint64_t v20 = a4 >> 1;
  BOOL v21 = __OFSUB__(a4 >> 1, a3);
  uint64_t v22 = (a4 >> 1) - a3;
  if (v21)
  {
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v72 = a1;
  a1 = *v4;
  int64_t v23 = *(void *)(*v4 + 16);
  uint64_t v5 = v23 + v22;
  if (__OFADD__(v23, v22))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *int64_t v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (uint64_t v25 = *(void *)(a1 + 24) >> 1, v25 < v5))
  {
    if (v23 <= v5) {
      int64_t v26 = v23 + v22;
    }
    else {
      int64_t v26 = v23;
    }
    a1 = sub_10009B6B0(isUniquelyReferenced_nonNull_native, v26, 1, a1, &qword_100161948, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline);
    *int64_t v4 = a1;
    uint64_t v25 = *(void *)(a1 + 24) >> 1;
  }
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = v25 - v27;
  if (v20 == a3)
  {
    if (v22 <= 0)
    {
      uint64_t v22 = 0;
      uint64_t v5 = a3;
      goto LABEL_23;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t v22 = *(void *)(a1 + 16);
    uint64_t v36 = v71;
    uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v71 + 56);
    uint64_t v58 = v71 + 56;
    v57(v19, 1, 1, v9, v17);
    uint64_t v28 = v67;
    sub_10009E418((uint64_t)v19, v67);
    double v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
    uint64_t v65 = v36 + 48;
    if (v64(v28, 1, v9) == 1)
    {
LABEL_31:
      sub_10009E118((uint64_t)v19);
      swift_unknownObjectRelease();
      return sub_10009E118(v28);
    }
LABEL_33:
    uint64_t v62 = (void (**)(void, void, void))(v71 + 32);
    uint64_t v56 = (void (**)(char *))(v71 + 16);
    uint64_t v55 = (void (**)(char *, uint64_t))(v71 + 8);
    uint64_t v59 = v13;
    do
    {
      sub_10009E118(v28);
      unint64_t v38 = *v4;
      unint64_t v39 = *(void *)(*v4 + 24);
      int64_t v40 = v39 >> 1;
      uint64_t v66 = v5;
      if ((uint64_t)(v39 >> 1) < v22 + 1)
      {
        unint64_t v38 = sub_10009B6B0(v39 > 1, v22 + 1, 1, v38, &qword_100161948, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline);
        *int64_t v4 = v38;
        int64_t v40 = *(void *)(v38 + 24) >> 1;
      }
      uint64_t v41 = *(unsigned __int8 *)(v71 + 80);
      sub_10009E418((uint64_t)v19, (uint64_t)v13);
      if (v64((uint64_t)v13, 1, v9) == 1)
      {
        uint64_t v5 = v66;
LABEL_40:
        sub_10009E118((uint64_t)v13);
        uint64_t v37 = v22;
      }
      else
      {
        unint64_t v61 = v38 + ((v41 + 32) & ~v41);
        uint64_t v42 = *v62;
        if (v22 <= v40) {
          uint64_t v43 = v40;
        }
        else {
          uint64_t v43 = v22;
        }
        uint64_t v63 = v43;
        uint64_t v44 = v69;
        uint64_t v5 = v66;
        double v60 = v42;
        while (1)
        {
          uint64_t v48 = v44;
          uint64_t v49 = v13;
          uint64_t v50 = v44;
          uint64_t v51 = (void (*)(unint64_t, char *, uint64_t))v42;
          v42(v48, v49, v9);
          if (v63 == v22) {
            break;
          }
          sub_10009E118((uint64_t)v19);
          uint64_t v52 = *(void *)(v71 + 72);
          uint64_t v66 = v22;
          v51(v61 + v52 * v22, v50, v9);
          if (v5 == v20)
          {
            uint64_t v45 = 1;
            uint64_t v5 = v20;
            uint64_t v44 = v69;
            uint64_t v46 = v66;
            uint64_t v13 = v59;
          }
          else
          {
            uint64_t v53 = sub_10009C9AC(v73, v5, v72, v70, a3, v68);
            (*v56)(v19);
            ((void (*)(uint64_t *, void))v53)(v73, 0);
            BOOL v21 = __OFADD__(v5++, 1);
            uint64_t v13 = v59;
            if (v21) {
              goto LABEL_52;
            }
            uint64_t v45 = 0;
            uint64_t v44 = v69;
            uint64_t v46 = v66;
          }
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v57)(v19, v45, 1, v9);
          sub_10009E418((uint64_t)v19, (uint64_t)v13);
          unsigned int v47 = v64((uint64_t)v13, 1, v9);
          uint64_t v22 = v46 + 1;
          uint64_t v42 = v60;
          if (v47 == 1) {
            goto LABEL_40;
          }
        }
        (*v55)(v50, v9);
        uint64_t v37 = v63;
        uint64_t v22 = v63;
        uint64_t v13 = v59;
      }
      *(void *)(*v4 + 16) = v37;
      uint64_t v28 = v67;
      sub_10009E418((uint64_t)v19, v67);
    }
    while (v64(v28, 1, v9) != 1);
    goto LABEL_31;
  }
  if (v28 < v22)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v22 < 0
    || ((uint64_t v29 = *(void *)(v71 + 72),
         unint64_t v30 = a1
             + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))
             + v29 * v27,
         unint64_t v31 = v70 + v29 * a3,
         v31 < v30 + v29 * v22)
      ? (BOOL v32 = v30 >= v31 + v29 * v22)
      : (BOOL v32 = 1),
        !v32))
  {
LABEL_53:
    uint64_t result = sub_100126310();
    __break(1u);
    return result;
  }
  swift_arrayInitWithCopy();
  if (v22)
  {
    uint64_t v33 = *(void *)(a1 + 16);
    BOOL v21 = __OFADD__(v33, v22);
    uint64_t v34 = v33 + v22;
    if (v21)
    {
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    *(void *)(a1 + 16) = v34;
  }
  uint64_t v5 = v20;
LABEL_23:
  if (v22 == v28) {
    goto LABEL_30;
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_10009490C(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return _swift_task_switch(sub_100094930, v2, 0);
}

uint64_t sub_100094930()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0[7];
  sub_100009D98((void *)(v1 + 112), *(void *)(v1 + 136));
  if (sub_100123A00())
  {
    sub_100009D98((void *)(v1 + 112), *(void *)(v1 + 136));
    if (sub_100123A20())
    {
      sub_100009D98((void *)(v1 + 112), *(void *)(v1 + 136));
      char v2 = sub_100123A30();
      swift_bridgeObjectRetain_n();
      unint64_t v3 = sub_100124550();
      os_log_type_t v4 = sub_100125F60();
      BOOL v5 = os_log_type_enabled(v3, v4);
      unint64_t v6 = v0[6];
      if (v2)
      {
        if (v5)
        {
          uint64_t v26 = v0[5];
          uint64_t v7 = (uint8_t *)swift_slowAlloc();
          uint64_t v28 = swift_slowAlloc();
          *(_DWORD *)uint64_t v7 = 136315138;
          swift_bridgeObjectRetain();
          v0[4] = sub_1000AB124(v26, v6, &v28);
          sub_100126030();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v3, v4, "Using widget-specific config for fetching mandatory headlines for symbol=%s", v7, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v19 = *(void *)(v0[7] + 176);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 16) + **(int **)(v19 + 16));
        BOOL v21 = (void *)swift_task_alloc();
        v0[8] = v21;
        void *v21 = v0;
        uint64_t v22 = sub_100094F8C;
      }
      else
      {
        if (v5)
        {
          uint64_t v27 = v0[5];
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          uint64_t v28 = swift_slowAlloc();
          *(_DWORD *)uint64_t v18 = 136315138;
          swift_bridgeObjectRetain();
          v0[3] = sub_1000AB124(v27, v6, &v28);
          sub_100126030();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v3, v4, "Using Top Stories-service for fetching mandatory headlines for symbol=%s", v18, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v19 = *(void *)(v0[7] + 160);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 16) + **(int **)(v19 + 16));
        BOOL v21 = (void *)swift_task_alloc();
        v0[9] = v21;
        void *v21 = v0;
        uint64_t v22 = sub_10009508C;
      }
      v21[1] = v22;
      uint64_t v24 = v0[5];
      uint64_t v23 = v0[6];
      return v25(v24, v23, ObjectType, v19);
    }
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_100124550();
    os_log_type_t v11 = sub_100125F60();
    BOOL v12 = os_log_type_enabled(v8, v11);
    unint64_t v13 = v0[6];
    if (!v12)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_12;
    }
    uint64_t v14 = v0[5];
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_1000AB124(v14, v13, &v28);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v11, "Widget news curation is disabled, skipping mandatory headlines fetch for symbol=%s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_10;
  }
  uint64_t v8 = sub_100124550();
  os_log_type_t v9 = sub_100125F60();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Widget news curation is disabled, because no Apple News content is being served", v10, 2u);
LABEL_10:
    swift_slowDealloc();
  }

LABEL_12:
  uint64_t v16 = (uint64_t (*)(void *))v0[1];
  return v16(_swiftEmptyArrayStorage);
}

uint64_t sub_100094F8C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  BOOL v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_10009508C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  BOOL v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_10009518C(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return _swift_task_switch(sub_1000951AC, v1, 0);
}

uint64_t sub_1000951AC()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[9];
  sub_100009D98((void *)(v1 + 112), *(void *)(v1 + 136));
  if (sub_100123A00())
  {
    sub_100009D98((void *)(v1 + 112), *(void *)(v1 + 136));
    uint64_t v2 = v0 + 8;
    if (sub_100123A20())
    {
      sub_100009D98((void *)(v1 + 112), *(void *)(v1 + 136));
      char v3 = sub_100123A30();
      swift_bridgeObjectRetain_n();
      uint64_t v4 = sub_100124550();
      os_log_type_t v5 = sub_100125F60();
      BOOL v6 = os_log_type_enabled(v4, v5);
      uint64_t v7 = *v2;
      if (v3)
      {
        if (v6)
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          *(_DWORD *)uint64_t v8 = 136315138;
          v0[6] = v7;
          sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
          sub_10009DFA0();
          uint64_t v9 = sub_100125A50();
          v0[7] = sub_1000AB124(v9, v10, &v33);
          sub_100126030();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v4, v5, "Using Top Stories-service for fetching mandatory headlines for symbols=[%s]", v8, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v27 = *(void *)(v0[9] + 176);
        uint64_t ObjectType = swift_getObjectType();
        BOOL v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 + 24) + **(int **)(v27 + 24));
        uint64_t v29 = (void *)swift_task_alloc();
        v0[10] = v29;
        *uint64_t v29 = v0;
        uint64_t v30 = sub_1000958FC;
      }
      else
      {
        if (v6)
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          *(_DWORD *)uint64_t v24 = 136315138;
          v0[4] = v7;
          sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
          sub_10009DFA0();
          uint64_t v25 = sub_100125A50();
          v0[5] = sub_1000AB124(v25, v26, &v33);
          sub_100126030();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v4, v5, "Using widget-specific config for fetching mandatory headlines for symbols=[%s]", v24, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v27 = *(void *)(v0[9] + 160);
        uint64_t ObjectType = swift_getObjectType();
        BOOL v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 + 24) + **(int **)(v27 + 24));
        uint64_t v29 = (void *)swift_task_alloc();
        v0[11] = v29;
        *uint64_t v29 = v0;
        uint64_t v30 = sub_1000959FC;
      }
      v29[1] = v30;
      uint64_t v31 = v0[8];
      return v32(v31, ObjectType, v27);
    }
    swift_bridgeObjectRetain_n();
    __n128 v17 = sub_100124550();
    os_log_type_t v18 = sub_100125F60();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *v2;
    if (v19)
    {
      BOOL v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)BOOL v21 = 136315138;
      v0[2] = v20;
      sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
      sub_10009DFA0();
      uint64_t v22 = sub_100125A50();
      v0[3] = sub_1000AB124(v22, v23, &v33);
      sub_100126030();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Widget news curation is disabled, skipping mandatory headlines fetch for symbols=[%s]", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    os_log_type_t v11 = sub_100124550();
    os_log_type_t v12 = sub_100125F60();
    if (os_log_type_enabled(v11, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Widget news curation is disabled, because no Apple News content is being served", v13, 2u);
      swift_slowDealloc();
    }
  }
  unint64_t v14 = sub_10003D460((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v15 = (uint64_t (*)(unint64_t))v0[1];
  return v15(v14);
}

uint64_t sub_1000958FC(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  os_log_type_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1000959FC(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  os_log_type_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_100095AFC()
{
  sub_100009D48(v0 + 112);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget24MandatoryHeadlineService_logger;
  uint64_t v2 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100095B90()
{
  return type metadata accessor for MandatoryHeadlineService(0);
}

uint64_t type metadata accessor for MandatoryHeadlineService(uint64_t a1)
{
  return sub_100009E3C(a1, (uint64_t *)&unk_100161648);
}

uint64_t sub_100095BB8()
{
  return sub_10009AF20();
}

uint64_t sub_100095BCC(uint64_t a1, uint64_t a2)
{
  BOOL v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *BOOL v6 = v3;
  v6[1] = sub_10009E5E8;
  v6[6] = a2;
  v6[7] = v2;
  v6[5] = a1;
  return _swift_task_switch(sub_100094930, v2, 0);
}

uint64_t sub_100095C88(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10009E5E8;
  v4[8] = a1;
  v4[9] = v1;
  return _swift_task_switch(sub_1000951AC, v1, 0);
}

uint64_t sub_100095D34(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return _swift_task_switch(sub_100095D58, v2, 0);
}

uint64_t sub_100095D58()
{
  uint64_t v9 = v0;
  v0[11] = OBJC_IVAR____TtC12StocksWidget34TopStoriesMandatoryHeadlineService_logger;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F60();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = v0[9];
    uint64_t v4 = v0[8];
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136315138;
    swift_bridgeObjectRetain();
    v0[7] = sub_1000AB124(v4, v3, &v8);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Fetching top stories for symbol=%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100009D98((void *)(v0[10] + 112), *(void *)(v0[10] + 136));
  v0[12] = sub_1001239B0();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[13] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100095F7C;
  return Promise.resolveAsync()(v0 + 2);
}

uint64_t sub_100095F7C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = sub_100096440;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 80);
    swift_release();
    uint64_t v4 = sub_1000960A4;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1000960A4()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0[2];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_100124550();
  os_log_type_t v3 = sub_100125F60();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = v0[8];
    unint64_t v4 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    v0[5] = sub_1000AB124(v5, v4, v21);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2048;
    uint64_t v7 = *(void *)(v1 + 16);
    swift_bridgeObjectRelease();
    v0[6] = v7;
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Successfully fetched top stories for symbol=%s, count=%ld", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = v0[10];
  uint64_t v10 = v0[8];
  unint64_t v9 = v0[9];
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10009CED8(v1, v8, v10, v9);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_100124550();
  os_log_type_t v14 = sub_100125F60();
  BOOL v15 = os_log_type_enabled(v13, v14);
  unint64_t v16 = v0[9];
  if (v15)
  {
    uint64_t v17 = v0[8];
    uint64_t v18 = swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134218242;
    v0[3] = *(void *)(v12 + 16);
    sub_100126030();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[4] = sub_1000AB124(v17, v16, v21);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Filtered top stories down to relevant ones for symbol, count=%ld, symbol=%s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  BOOL v19 = (uint64_t (*)(uint64_t))v0[1];
  return v19(v12);
}

uint64_t sub_100096440()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000964A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v55 = a3;
  uint64_t v7 = sub_100123830();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  __chkstk_darwin(v7);
  uint64_t v57 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v51 = (char *)&v45 - v10;
  uint64_t v11 = sub_100123E30();
  uint64_t v12 = *(NSObject **)(v11 - 8);
  __chkstk_darwin(v11);
  os_log_type_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v45 - v17;
  uint64_t v54 = a2;
  os_log_t v52 = v12;
  Class isa = (void (*)(char *, uint64_t, uint64_t, __n128))v12[2].isa;
  isa((char *)&v45 - v17, a1, v11, v16);
  uint64_t v53 = v14;
  uint64_t v56 = a1;
  uint64_t v20 = a1;
  uint64_t v21 = v11;
  ((void (*)(char *, uint64_t, uint64_t))isa)(v14, v20, v11);
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_100124550();
  os_log_type_t v23 = sub_100125F30();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    uint64_t v62 = v50;
    *(_DWORD *)uint64_t v25 = 136315650;
    int v49 = v24;
    uint64_t v26 = sub_100123E00();
    if (v27)
    {
      unint64_t v28 = v27;
    }
    else
    {
      uint64_t v26 = 7104878;
      unint64_t v28 = 0xE300000000000000;
    }
    uint64_t v60 = sub_1000AB124(v26, v28, &v62);
    uint64_t v48 = &v61;
    sub_100126030();
    swift_bridgeObjectRelease();
    Class v46 = v52[1].isa;
    os_log_t v52 = v22;
    uint64_t v29 = v21;
    ((void (*)(char *, uint64_t))v46)(v18, v21);
    *(_WORD *)(v25 + 12) = 2048;
    uint64_t v47 = v25 + 14;
    uint64_t v30 = v53;
    sub_100123DD0();
    swift_getObjectType();
    uint64_t v31 = v51;
    sub_100125FA0();
    swift_unknownObjectRelease();
    uint64_t v32 = sub_100123820();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v31, v59);
    uint64_t v33 = *(void *)(v32 + 16);
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v46)(v30, v29);
    uint64_t v60 = v33;
    sub_100126030();
    *(_WORD *)(v25 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v34 = v55;
    uint64_t v60 = sub_1000AB124(v55, a4, &v62);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    os_log_t v35 = v52;
    _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v49, "Checking relevance of headline to symbol, headline=%s, entityMetadataCount=%ld, symbol=%s", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    Class v36 = v52[1].isa;
    ((void (*)(char *, uint64_t))v36)(v53, v21);

    ((void (*)(char *, uint64_t))v36)(v18, v21);
    swift_bridgeObjectRelease_n();
    uint64_t v34 = v55;
  }
  sub_100123DD0();
  swift_getObjectType();
  uint64_t v37 = v57;
  sub_100125FA0();
  swift_unknownObjectRelease();
  uint64_t v38 = sub_100123820();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v59);
  uint64_t v39 = *(void *)(v38 + 16);
  uint64_t v40 = v54;
  if (v39)
  {
    uint64_t v41 = *(void *)(sub_100123810() - 8);
    uint64_t v42 = v38 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
    uint64_t v43 = *(void *)(v41 + 72);
    swift_bridgeObjectRetain();
    while ((sub_100096A08(v42, v40, v34, a4) & 1) == 0)
    {
      v42 += v43;
      if (!--v39)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_100096A08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v29 = a3;
  uint64_t v7 = sub_100123810();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, v7, v9);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_100124550();
  os_log_type_t v13 = sub_100125F30();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = a1;
    uint64_t v16 = v15;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v31 = v26;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = sub_100123800();
    if (v18)
    {
      unint64_t v19 = v18;
    }
    else
    {
      uint64_t v17 = 7104878;
      unint64_t v19 = 0xE300000000000000;
    }
    HIDWORD(v25) = v14;
    uint64_t v30 = sub_1000AB124(v17, v19, &v31);
    uint64_t v28 = v4;
    sub_100126030();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v20 = v29;
    uint64_t v30 = sub_1000AB124(v29, a4, &v31);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, BYTE4(v25), "Checking relevance of entity metadata to symbol, metadataSymbol=%s, symbol=%s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    swift_bridgeObjectRelease_n();
    uint64_t v20 = v29;
  }
  uint64_t v21 = sub_100123800();
  if (v22)
  {
    if (v21 == v20 && v22 == a4) {
      char v23 = 1;
    }
    else {
      char v23 = sub_100126530();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_100096D24(uint64_t a1)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = v1;
  return _swift_task_switch(sub_100096D44, v1, 0);
}

uint64_t sub_100096D44()
{
  uint64_t v11 = v0;
  v0[8] = OBJC_IVAR____TtC12StocksWidget34TopStoriesMandatoryHeadlineService_logger;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[6];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v10 = v5;
    v0[4] = v3;
    sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    sub_10009DFA0();
    uint64_t v6 = sub_100125A50();
    v0[5] = sub_1000AB124(v6, v7, &v10);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Fetching top stories for symbols=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100009D98((void *)(v0[7] + 112), *(void *)(v0[7] + 136));
  v0[9] = sub_1001239B0();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100096FB0;
  return Promise.resolveAsync()(v0 + 2);
}

uint64_t sub_100096FB0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = sub_100097338;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 56);
    swift_release();
    uint64_t v4 = sub_1000970D8;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1000970D8()
{
  unint64_t v18 = v0;
  uint64_t v1 = v0[2];
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_100124550();
  os_log_type_t v3 = sub_100125F60();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    v0[3] = *(void *)(v1 + 16);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Successfully fetched top stories, count=%ld", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  v17[0] = (uint64_t)&_swiftEmptyDictionarySingleton;
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(sub_100123E30() - 8);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(v6 + 72);
    uint64_t v9 = v0[11];
    uint64_t v11 = (void *)v0[6];
    uint64_t v10 = v0[7];
    swift_bridgeObjectRetain();
    sub_10009739C(v17, v1 + v7, v11, v10);
    if (v9)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v14 = v5 - 1;
    if (v5 != 1)
    {
      uint64_t v15 = v1 + v8 + v7;
      do
      {
        sub_10009739C(v17, v15, (void *)v0[6], v0[7]);
        v15 += v8;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v13 = (void *)v17[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    os_log_type_t v13 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v16 = (uint64_t (*)(void *))v0[1];
  return v16(v13);
}

uint64_t sub_100097338()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10009739C(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v92 = a1;
  uint64_t v87 = sub_100123E30();
  uint64_t v7 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v91 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v86 = (char *)&v75 - v10;
  uint64_t v11 = sub_100123810();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v88 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100123830();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = a2;
  sub_100123DD0();
  swift_getObjectType();
  sub_100125FA0();
  swift_unknownObjectRelease();
  uint64_t v18 = sub_100123820();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v99 = *(void *)(v18 + 16);
  if (!v99)
  {
    swift_bridgeObjectRelease();
    uint64_t v73 = 0;
    return sub_10009E2AC((uint64_t)v73);
  }
  unint64_t v20 = 0;
  uint64_t v85 = a4 + OBJC_IVAR____TtC12StocksWidget34TopStoriesMandatoryHeadlineService_logger;
  unint64_t v98 = v18 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v97 = v12 + 16;
  uint64_t v90 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v84 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v81 = v7 + 32;
  uint64_t v94 = 0;
  uint64_t v95 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v76 = a3 + 9;
  *(void *)&long long v19 = 136315394;
  long long v78 = v19;
  uint64_t v77 = &type metadata for Any[8];
  uint64_t v21 = v7;
  uint64_t v22 = v12;
  uint64_t v24 = v87;
  char v23 = v88;
  uint64_t v82 = v21;
  uint64_t v83 = a3;
  uint64_t v79 = v11;
  uint64_t v89 = v12;
  uint64_t v96 = v18;
  while (1)
  {
    if (v20 >= *(void *)(v18 + 16))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v23, v98 + *(void *)(v22 + 72) * v20, v11);
    uint64_t v25 = sub_100123800();
    if (!v26)
    {
      (*v95)(v23, v11);
      goto LABEL_4;
    }
    unint64_t v27 = v26;
    uint64_t v28 = a3[2];
    if (!v28) {
      goto LABEL_32;
    }
    uint64_t v29 = v25;
    uint64_t v30 = a3[4];
    uint64_t v31 = a3[5];
    uint64_t v100 = v29;
    if ((v30 != v29 || v27 != v31) && (sub_100126530() & 1) == 0)
    {
      char v23 = v88;
      if (v28 == 1) {
        goto LABEL_32;
      }
      if (a3[6] != v100 || v27 != a3[7])
      {
        char v66 = sub_100126530();
        uint64_t v67 = v100;
        if ((v66 & 1) == 0) {
          break;
        }
      }
    }
LABEL_11:
    uint64_t v32 = *v90;
    uint64_t v33 = v86;
    (*v90)(v86, v93, v24);
    swift_bridgeObjectRetain_n();
    uint64_t v34 = v24;
    os_log_t v35 = sub_100124550();
    os_log_type_t v36 = sub_100125F60();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      int v80 = v32;
      uint64_t v38 = v37;
      uint64_t v101 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = v78;
      uint64_t v39 = sub_100123DE0();
      *(void *)(v38 + 4) = sub_1000AB124(v39, v40, &v101);
      swift_bridgeObjectRelease();
      (*v84)(v33, v34);
      *(_WORD *)(v38 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v41 = v34;
      uint64_t v42 = v100;
      *(void *)(v38 + 14) = sub_1000AB124(v100, v27, &v101);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Found headline relevant for symbol, headlineID=%s, symbol=%s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      uint64_t v11 = v79;
      swift_slowDealloc();
      uint64_t v32 = v80;
      swift_slowDealloc();

      uint64_t v43 = v41;
    }
    else
    {

      (*v84)(v33, v34);
      swift_bridgeObjectRelease_n();
      uint64_t v43 = v34;
      uint64_t v42 = v100;
    }
    v32(v91, v93, v43);
    sub_10009E2AC((uint64_t)v94);
    uint64_t v44 = v92;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v101 = *v44;
    uint64_t v46 = v101;
    *uint64_t v44 = 0x8000000000000000;
    unint64_t v48 = sub_10003E754(v42, v27);
    uint64_t v49 = *(void *)(v46 + 16);
    BOOL v50 = (v47 & 1) == 0;
    uint64_t v51 = v49 + v50;
    if (__OFADD__(v49, v50)) {
      goto LABEL_51;
    }
    char v52 = v47;
    if (*(void *)(v46 + 24) >= v51)
    {
      a3 = v83;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10009C658((void (*)(void))sub_10009E01C);
        uint64_t v46 = v101;
      }
    }
    else
    {
      sub_10009C340(v51, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_10009E01C);
      uint64_t v46 = v101;
      unint64_t v53 = sub_10003E754(v100, v27);
      a3 = v83;
      if ((v52 & 1) != (v54 & 1)) {
        goto LABEL_54;
      }
      unint64_t v48 = v53;
    }
    uint64_t v55 = v92;
    uint64_t *v92 = v46;
    swift_bridgeObjectRelease();
    uint64_t v56 = (void *)*v55;
    if ((v52 & 1) == 0)
    {
      v56[(v48 >> 6) + 8] |= 1 << v48;
      uint64_t v57 = (void *)(v56[6] + 16 * v48);
      *uint64_t v57 = v100;
      v57[1] = v27;
      *(void *)(v56[7] + 8 * v48) = _swiftEmptyArrayStorage;
      uint64_t v58 = v56[2];
      uint64_t v59 = v58 + 1;
      BOOL v60 = __OFADD__(v58, 1);
      swift_bridgeObjectRetain();
      if (v60) {
        goto LABEL_52;
      }
      v56[2] = v59;
    }
    swift_bridgeObjectRetain();
    uint64_t v61 = v56[7];
    swift_bridgeObjectRelease();
    unint64_t v62 = *(void *)(v61 + 8 * v48);
    char v63 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v61 + 8 * v48) = v62;
    if ((v63 & 1) == 0)
    {
      unint64_t v62 = sub_10009B6B0(0, *(void *)(v62 + 16) + 1, 1, v62, &qword_100161948, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline);
      *(void *)(v61 + 8 * v48) = v62;
    }
    unint64_t v65 = *(void *)(v62 + 16);
    unint64_t v64 = *(void *)(v62 + 24);
    if (v65 >= v64 >> 1)
    {
      unint64_t v62 = sub_10009B6B0(v64 > 1, v65 + 1, 1, v62, &qword_100161948, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline);
      *(void *)(v61 + 8 * v48) = v62;
    }
    uint64_t v22 = v89;
    *(void *)(v62 + 16) = v65 + 1;
    uint64_t v24 = v87;
    (*(void (**)(unint64_t, char *, uint64_t))(v82 + 32))(v62+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v65, v91, v87);
    swift_bridgeObjectRelease();
    char v23 = v88;
    (*v95)(v88, v11);
    uint64_t v94 = sub_100097CD8;
LABEL_4:
    ++v20;
    uint64_t v18 = v96;
    if (v20 == v99)
    {
      swift_bridgeObjectRelease();
      uint64_t v73 = v94;
      return sub_10009E2AC((uint64_t)v73);
    }
  }
  char v23 = v88;
  if (v28 == 2)
  {
LABEL_32:
    (*v95)(v23, v11);
    swift_bridgeObjectRelease();
    uint64_t v22 = v89;
    goto LABEL_4;
  }
  unint64_t v68 = v76;
  uint64_t v69 = 2;
  while (1)
  {
    uint64_t v70 = v69 + 1;
    if (__OFADD__(v69, 1)) {
      break;
    }
    BOOL v71 = *(v68 - 1) == v67 && v27 == *v68;
    if (v71) {
      goto LABEL_11;
    }
    char v72 = sub_100126530();
    uint64_t v67 = v100;
    if (v72) {
      goto LABEL_11;
    }
    v68 += 2;
    ++v69;
    BOOL v71 = v70 == v28;
    char v23 = v88;
    if (v71) {
      goto LABEL_32;
    }
  }
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_100126570();
  __break(1u);
  return result;
}

void sub_100097CD8(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
}

uint64_t sub_100097CE8()
{
  sub_100009D48(v0 + 112);
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget34TopStoriesMandatoryHeadlineService_logger;
  uint64_t v2 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100097D6C()
{
  return type metadata accessor for TopStoriesMandatoryHeadlineService(0);
}

uint64_t type metadata accessor for TopStoriesMandatoryHeadlineService(uint64_t a1)
{
  return sub_100009E3C(a1, (uint64_t *)&unk_100161740);
}

uint64_t sub_100097D94()
{
  uint64_t result = sub_100124570();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100097E38(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_10009E5E8;
  v6[9] = a2;
  v6[10] = v2;
  v6[8] = a1;
  return _swift_task_switch(sub_100095D58, v2, 0);
}

uint64_t sub_100097EF4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10009E5E8;
  v4[6] = a1;
  v4[7] = v1;
  return _swift_task_switch(sub_100096D44, v1, 0);
}

uint64_t sub_100097FA0(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  uint64_t v4 = sub_100123E30();
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  v3[19] = swift_task_alloc();
  uint64_t v5 = sub_1001236B0();
  v3[20] = v5;
  v3[21] = *(void *)(v5 - 8);
  v3[22] = swift_task_alloc();
  return _swift_task_switch(sub_1000980C0, v2, 0);
}

uint64_t sub_1000980C0()
{
  uint64_t v9 = v0;
  v0[23] = OBJC_IVAR____TtC12StocksWidget36WidgetConfigMandatoryHeadlineService_logger;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F60();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = v0[15];
    uint64_t v4 = v0[14];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    v0[13] = sub_1000AB124(v4, v3, &v8);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Fetching widget config record to determine mandatory headlines for symbol=%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v6 = (void *)swift_task_alloc();
  v0[24] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1000982B0;
  return sub_10008A890();
}

uint64_t sub_1000982B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[25] = a2;
  v5[26] = a3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v5[1];
    return v6();
  }
  else
  {
    uint64_t v8 = v5[16];
    return _swift_task_switch(sub_1000983F8, v8, 0);
  }
}

uint64_t sub_1000983F8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[14];
  sub_100009D98((void *)(v0[16] + 168), *(void *)(v0[16] + 192));
  sub_10009E4AC(0, (unint64_t *)&qword_10015E810, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100127010;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  v0[27] = sub_100123970();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[28] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100098544;
  return Promise.resolveAsync()(v0 + 5);
}

uint64_t sub_100098544()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 128);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100099348;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 128);
    swift_release();
    uint64_t v4 = sub_1000986A4;
    uint64_t v5 = v6;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1000986A4()
{
  uint64_t v49 = v0;
  uint64_t v1 = v0[5];
  if (!*(void *)(v1 + 16)) {
    goto LABEL_13;
  }
  uint64_t v3 = v0[14];
  uint64_t v2 = v0[15];
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10003E754(v3, v2);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v6 = *(void **)(*(void *)(v1 + 56) + 8 * v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_10009CB7C(v7, v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v9)
  {
    v0[30] = v11;
    swift_bridgeObjectRelease();
    if (*(void *)(v11 + 16))
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_100124550();
      os_log_type_t v13 = sub_100125F60();
      BOOL v14 = os_log_type_enabled(v12, v13);
      unint64_t v15 = v0[15];
      if (v14)
      {
        os_log_type_t v46 = v13;
        uint64_t v16 = v0[14];
        uint64_t v17 = swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315394;
        swift_bridgeObjectRetain();
        v0[10] = sub_1000AB124(v16, v15, &v47);
        sub_100126030();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v17 + 12) = 2080;
        int64_t v18 = *(void *)(v11 + 16);
        long long v19 = _swiftEmptyArrayStorage;
        if (v18)
        {
          uint64_t v43 = v17;
          uint64_t v44 = v12;
          unint64_t v48 = _swiftEmptyArrayStorage;
          sub_10009BACC(0, v18, 0);
          long long v19 = v48;
          unint64_t v20 = v48[2];
          uint64_t v21 = 2 * v20;
          uint64_t v45 = v11;
          uint64_t v22 = (uint64_t *)(v11 + 40);
          do
          {
            uint64_t v23 = *(v22 - 1);
            uint64_t v24 = *v22;
            unint64_t v48 = v19;
            int64_t v25 = v20 + 1;
            unint64_t v26 = v19[3];
            swift_bridgeObjectRetain();
            if (v20 >= v26 >> 1)
            {
              sub_10009BACC(v26 > 1, v25, 1);
              long long v19 = v48;
            }
            void v19[2] = v25;
            unint64_t v27 = &v19[v21];
            v27[4] = v23;
            v27[5] = v24;
            v21 += 2;
            v22 += 4;
            ++v20;
            --v18;
          }
          while (v18);
          uint64_t v11 = v45;
          uint64_t v17 = v43;
          uint64_t v12 = v44;
        }
        v0[11] = v19;
        sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
        sub_10009DFA0();
        uint64_t v36 = sub_100125A50();
        unint64_t v38 = v37;
        swift_bridgeObjectRelease();
        v0[12] = sub_1000AB124(v36, v38, &v47);
        sub_100126030();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v46, "Fetching mandatory headlines for symbol=%s headlineIDs=[%s]", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v39 = v0[21];
      uint64_t v40 = v0[22];
      uint64_t v41 = v0[20];
      sub_100009D98((void *)(v0[16] + 128), *(void *)(v0[16] + 152));
      sub_100093BE0(v11);
      (*(void (**)(uint64_t, void, uint64_t))(v39 + 104))(v40, enum case for HeadlineOrigin.topStories(_:), v41);
      v0[31] = sub_100123A50();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
      uint64_t v42 = (void *)swift_task_alloc();
      v0[32] = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_100098D14;
      return Promise.resolveAsync()(v0 + 2);
    }
    goto LABEL_14;
  }
LABEL_15:
  swift_bridgeObjectRetain_n();
  uint64_t v28 = sub_100124550();
  os_log_type_t v29 = sub_100125F60();
  BOOL v30 = os_log_type_enabled(v28, v29);
  unint64_t v31 = v0[15];
  if (v30)
  {
    uint64_t v32 = v0[14];
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    unint64_t v48 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315138;
    swift_bridgeObjectRetain();
    v0[4] = sub_1000AB124(v32, v31, (uint64_t *)&v48);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "No mandatory headlines found for symbol=%s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(void *))v0[1];
  return v34(_swiftEmptyArrayStorage);
}

uint64_t sub_100098D14()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 128);
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1000993B8;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 128);
    swift_release();
    unint64_t v4 = sub_100098E6C;
    uint64_t v5 = v6;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100098E6C()
{
  uint64_t v45 = v0;
  uint64_t v1 = v0[2];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_100124550();
  os_log_type_t v3 = sub_100125F60();
  if (!os_log_type_enabled(v2, v3))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  os_log_type_t v38 = v3;
  log = v2;
  uint64_t v5 = v0[14];
  unint64_t v4 = v0[15];
  uint64_t v6 = swift_slowAlloc();
  uint64_t v43 = swift_slowAlloc();
  *(_DWORD *)uint64_t v6 = 136315394;
  swift_bridgeObjectRetain();
  v0[7] = sub_1000AB124(v5, v4, &v43);
  sub_100126030();
  swift_bridgeObjectRelease_n();
  uint64_t v39 = (uint8_t *)v6;
  *(_WORD *)(v6 + 12) = 2080;
  int64_t v7 = *(void *)(v1 + 16);
  if (v7)
  {
    uint64_t v42 = v0;
    uint64_t v8 = v0[18];
    uint64_t v44 = _swiftEmptyArrayStorage;
    sub_10009BAEC(0, v7, 0);
    uint64_t v10 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16);
    uint64_t v9 = v8 + 16;
    uint64_t v41 = v10;
    uint64_t v37 = v1;
    unint64_t v11 = v1 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v12 = *(void *)(v9 + 56);
    do
    {
      uint64_t v13 = v42[19];
      uint64_t v14 = v42[17];
      v41(v13, v11, v14);
      uint64_t v15 = sub_100123E00();
      uint64_t v17 = v16;
      (*(void (**)(uint64_t, uint64_t))(v9 - 8))(v13, v14);
      int64_t v18 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10009BAEC(0, v18[2] + 1, 1);
        int64_t v18 = v44;
      }
      unint64_t v20 = v18[2];
      unint64_t v19 = v18[3];
      unint64_t v21 = v20 + 1;
      if (v20 >= v19 >> 1)
      {
        sub_10009BAEC(v19 > 1, v20 + 1, 1);
        int64_t v18 = v44;
      }
      void v18[2] = v21;
      uint64_t v22 = &v18[2 * v20];
      v22[4] = v15;
      v22[5] = v17;
      v11 += v12;
      --v7;
    }
    while (v7);
    uint64_t v0 = v42;
    uint64_t v1 = v37;
    goto LABEL_12;
  }
  int64_t v18 = _swiftEmptyArrayStorage;
  unint64_t v21 = _swiftEmptyArrayStorage[2];
  uint64_t v23 = _swiftEmptyArrayStorage;
  if (v21)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v24 = v18 + 5;
    uint64_t v23 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v26 = *v24;
      if (*v24)
      {
        uint64_t v27 = *(v24 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = sub_10009B2E8(0, v23[2] + 1, 1, v23);
        }
        unint64_t v29 = v23[2];
        unint64_t v28 = v23[3];
        if (v29 >= v28 >> 1) {
          uint64_t v23 = sub_10009B2E8((void *)(v28 > 1), v29 + 1, 1, v23);
        }
        uint64_t v23[2] = v29 + 1;
        int64_t v25 = &v23[2 * v29];
        v25[4] = v27;
        v25[5] = v26;
      }
      v24 += 2;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v0[8] = v23;
  sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
  sub_10009DFA0();
  uint64_t v30 = sub_100125A50();
  unint64_t v32 = v31;
  swift_bridgeObjectRelease();
  v0[9] = sub_1000AB124(v30, v32, &v43);
  sub_100126030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  _os_log_impl((void *)&_mh_execute_header, log, v38, "Fetched mandatory headlines for symbol=%s headlines=[%s]", v39, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_22:
  uint64_t v33 = v0[30];
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v34 = sub_10009D6F4(v33, v1);
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_t v35 = (uint64_t (*)(void *))v0[1];
  return v35(v34);
}

uint64_t sub_100099348()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000993B8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100099428(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  uint64_t v3 = sub_1001236B0();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_1000994E8, v1, 0);
}

uint64_t sub_1000994E8()
{
  unint64_t v11 = v0;
  v0[22] = OBJC_IVAR____TtC12StocksWidget36WidgetConfigMandatoryHeadlineService_logger;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[17];
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)unint64_t v4 = 136315138;
    uint64_t v10 = v5;
    v0[15] = v3;
    sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    sub_10009DFA0();
    uint64_t v6 = sub_100125A50();
    v0[16] = sub_1000AB124(v6, v7, &v10);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Fetching widget config record to determine mandatory headlines for symbols=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = (void *)swift_task_alloc();
  v0[23] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100099720;
  return sub_10008A890();
}

uint64_t sub_100099720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  uint64_t v6 = (void *)*v4;
  v5[24] = a2;
  v5[25] = a3;
  swift_task_dealloc();
  if (v3)
  {
    swift_task_dealloc();
    unint64_t v7 = (uint64_t (*)(void))v6[1];
    return v7();
  }
  else
  {
    uint64_t v9 = v5[18];
    return _swift_task_switch(sub_100099870, v9, 0);
  }
}

uint64_t sub_100099870()
{
  sub_100009D98((void *)(v0[18] + 168), *(void *)(v0[18] + 192));
  v0[26] = sub_100123970();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[27] = v1;
  void *v1 = v0;
  v1[1] = sub_100099948;
  return Promise.resolveAsync()(v0 + 4);
}

uint64_t sub_100099948()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_10009A4F4;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 144);
    swift_release();
    unint64_t v4 = sub_100099AA8;
    uint64_t v5 = v6;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100099AA8()
{
  uint64_t v45 = v0;
  uint64_t v1 = v0[4];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_100124550();
  os_log_type_t v3 = sub_100125F60();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v4 = 136315138;
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_100093CB8(v5);
    swift_bridgeObjectRelease();
    v0[13] = v6;
    sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    sub_10009DFA0();
    uint64_t v7 = sub_100125A50();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[14] = sub_1000AB124(v7, v9, (uint64_t *)&v44);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Successfully fetched widget config record for symbolIDs=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = v0[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v0[29] = sub_10009D4EC((uint64_t)&_swiftEmptyDictionarySingleton, v10, v1);
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_10009AA9C(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_100124550();
  os_log_type_t v14 = sub_100125F60();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v16 = v0[17];
  if (v15)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    v0[8] = v16;
    sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    sub_10009DFA0();
    uint64_t v18 = sub_100125A50();
    v0[9] = sub_1000AB124(v18, v19, &v43);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    int64_t v20 = v12[2];
    unint64_t v21 = _swiftEmptyArrayStorage;
    if (v20)
    {
      os_log_type_t v39 = v14;
      uint64_t v40 = v17;
      uint64_t v41 = v13;
      uint64_t v44 = _swiftEmptyArrayStorage;
      sub_10009BACC(0, v20, 0);
      unint64_t v21 = v44;
      unint64_t v22 = v44[2];
      uint64_t v23 = 2 * v22;
      uint64_t v42 = v12;
      uint64_t v24 = v12 + 5;
      do
      {
        uint64_t v25 = *(v24 - 1);
        uint64_t v26 = *v24;
        uint64_t v44 = v21;
        int64_t v27 = v22 + 1;
        unint64_t v28 = v21[3];
        swift_bridgeObjectRetain();
        if (v22 >= v28 >> 1)
        {
          sub_10009BACC(v28 > 1, v27, 1);
          unint64_t v21 = v44;
        }
        uint64_t v21[2] = v27;
        unint64_t v29 = &v21[v23];
        v29[4] = v25;
        v29[5] = v26;
        v23 += 2;
        v24 += 4;
        ++v22;
        --v20;
      }
      while (v20);
      uint64_t v13 = v41;
      uint64_t v12 = v42;
      uint64_t v17 = v40;
      os_log_type_t v14 = v39;
    }
    v0[10] = v21;
    uint64_t v30 = sub_100125A50();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    v0[11] = sub_1000AB124(v30, v32, &v43);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Fetching all relevant headlines for symbols=[%s], headlineIDs=[%s]", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v33 = (uint64_t)v12;
  uint64_t v34 = v0[20];
  uint64_t v35 = v0[21];
  uint64_t v36 = v0[19];
  sub_100009D98((void *)(v0[18] + 128), *(void *)(v0[18] + 152));
  sub_100093BE0(v33);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v35, enum case for HeadlineOrigin.topStories(_:), v36);
  v0[30] = sub_100123A50();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
  uint64_t v37 = (void *)swift_task_alloc();
  v0[31] = v37;
  *uint64_t v37 = v0;
  v37[1] = sub_10009A14C;
  return Promise.resolveAsync()(v0 + 2);
}

uint64_t sub_10009A14C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_10009A558;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 144);
    swift_release();
    unint64_t v4 = sub_10009A2A4;
    uint64_t v5 = v6;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_10009A2A4()
{
  os_log_type_t v14 = v0;
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[2];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_10009DD40(v1, v2);
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  unint64_t v4 = sub_100124550();
  os_log_type_t v5 = sub_100125F60();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[17];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v13 = v8;
    v0[6] = v6;
    sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    sub_10009DFA0();
    uint64_t v9 = sub_100125A50();
    v0[7] = sub_1000AB124(v9, v10, &v13);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Successfully fetched all relevant headlines for symbols=[%s]", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v3);
}

uint64_t sub_10009A4F4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10009A558()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10009A5BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10009D284(a3, v6, v5);
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v7 + 16))
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v11 = sub_100124550();
      os_log_type_t v12 = sub_100125F60();
      if (os_log_type_enabled(v11, v12))
      {
        os_log_type_t v30 = v12;
        uint64_t v31 = v8;
        unint64_t v32 = a1;
        uint64_t v13 = swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136315394;
        int64_t v14 = *(void *)(v7 + 16);
        if (v14)
        {
          unint64_t v28 = v11;
          unint64_t v29 = v10;
          sub_10009BACC(0, v14, 0);
          uint64_t v15 = (uint64_t *)(v7 + 40);
          do
          {
            uint64_t v16 = *(v15 - 1);
            uint64_t v17 = *v15;
            unint64_t v19 = _swiftEmptyArrayStorage[2];
            unint64_t v18 = _swiftEmptyArrayStorage[3];
            swift_bridgeObjectRetain();
            if (v19 >= v18 >> 1) {
              sub_10009BACC(v18 > 1, v19 + 1, 1);
            }
            v15 += 4;
            _swiftEmptyArrayStorage[2] = v19 + 1;
            int64_t v20 = &_swiftEmptyArrayStorage[2 * v19];
            v20[4] = v16;
            v20[5] = v17;
            --v14;
          }
          while (v14);
          uint64_t v11 = v28;
          unint64_t v10 = v29;
        }
        sub_10009E4AC(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
        sub_10009DFA0();
        uint64_t v24 = sub_100125A50();
        unint64_t v26 = v25;
        swift_bridgeObjectRelease();
        sub_1000AB124(v24, v26, &v33);
        sub_100126030();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v8 = v31;
        sub_1000AB124(v31, v10, &v33);
        sub_100126030();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v11, v30, "Found relevant headlines for symbol, headlineIDs=[%s], symbol=%s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        a1 = v32;
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *a1;
      *a1 = 0x8000000000000000;
      sub_10009C814(v7, v8, v10, isUniquelyReferenced_nonNull_native);
      *a1 = v33;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_100124550();
    os_log_type_t v22 = sub_100125F60();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      swift_bridgeObjectRetain();
      sub_1000AB124(v6, v5, &v33);
      sub_100126030();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "No symbol found matching feedID=%s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

void *sub_10009AA9C(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1000940AC(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10009AC0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_100123DD0();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  void v13[4] = sub_10009B280;
  v13[5] = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10009ADE4;
  v13[3] = &unk_100153130;
  int64_t v9 = _Block_copy(v13);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  id v10 = (id)FCMutateHeadlineWithBlock();
  _Block_release(v9);
  swift_unknownObjectRelease();
  if (v10)
  {
    sub_100123DF0();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v11 = sub_100123E30();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a4, a1, v11);
  }
  return swift_unknownObjectRelease();
}

void sub_10009AD7C(void *a1)
{
  if (a1)
  {
    NSString v2 = sub_100125AD0();
    [a1 setTitle:v2];
  }
}

void sub_10009ADE4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_10009AE50()
{
  swift_unknownObjectRelease();
  sub_100009D48(v0 + 128);
  sub_100009D48(v0 + 168);
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget36WidgetConfigMandatoryHeadlineService_logger;
  uint64_t v2 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_10009AEE4()
{
  return type metadata accessor for WidgetConfigMandatoryHeadlineService(0);
}

uint64_t type metadata accessor for WidgetConfigMandatoryHeadlineService(uint64_t a1)
{
  return sub_100009E3C(a1, (uint64_t *)&unk_100161828);
}

uint64_t sub_10009AF0C()
{
  return sub_10009AF20();
}

uint64_t sub_10009AF20()
{
  uint64_t result = sub_100124570();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10009AFC0(uint64_t a1, uint64_t a2)
{
  int64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *int64_t v5 = v2;
  v5[1] = sub_10009E5E8;
  return sub_100097FA0(a1, a2);
}

uint64_t sub_10009B064(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100014E5C;
  return sub_100099428(a1);
}

uint64_t sub_10009B0F8(uint64_t a1)
{
  uint64_t result = sub_10009B1A8(&qword_100161908, (void (*)(uint64_t))type metadata accessor for WidgetConfigMandatoryHeadlineService);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10009B150(uint64_t a1)
{
  uint64_t result = sub_10009B1A8(&qword_100161920, (void (*)(uint64_t))type metadata accessor for TopStoriesMandatoryHeadlineService);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10009B1A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009B1F0(uint64_t a1)
{
  uint64_t result = sub_10009B1A8(&qword_100161938, (void (*)(uint64_t))type metadata accessor for MandatoryHeadlineService);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10009B248()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10009B280(void *a1)
{
}

uint64_t sub_10009B288(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009B298()
{
  return swift_release();
}

uint64_t sub_10009B2A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10009B6B0(a1, a2, a3, a4, &qword_100161980, type metadata accessor for PreparedSparkline.Entry, type metadata accessor for PreparedSparkline.Entry, type metadata accessor for PreparedSparkline.Entry);
}

void *sub_10009B2E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10009E4AC(0, (unint64_t *)&qword_10015E810, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10009CDE4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10009B418(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10009E4AC(0, &qword_100161950, (uint64_t)&type metadata for WidgetSectionConfigRecord.SymbolConfiguration.Article, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10009D190(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009B548(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10009B6B0(a1, a2, a3, a4, &qword_100161970, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_10009B590(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10009B6B0(a1, a2, a3, a4, &qword_10015E730, (uint64_t (*)(uint64_t))type metadata accessor for DetailTimelineEntry, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
}

uint64_t sub_10009B5D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10009B6B0(a1, a2, a3, a4, &qword_100161968, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(void))&type metadata accessor for WidgetQuote, (uint64_t (*)(void))&type metadata accessor for WidgetQuote);
}

uint64_t sub_10009B620(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10009B6B0(a1, a2, a3, a4, &qword_100161998, (uint64_t (*)(uint64_t))&type metadata accessor for Stock, (uint64_t (*)(void))&type metadata accessor for Stock, (uint64_t (*)(void))&type metadata accessor for Stock);
}

uint64_t sub_10009B668(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10009B6B0(a1, a2, a3, a4, &qword_100161988, type metadata accessor for HeadlineViewModel, type metadata accessor for HeadlineViewModel, type metadata accessor for HeadlineViewModel);
}

uint64_t sub_10009B6B0(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    unint64_t v19 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10009E0B4(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v19 = (void *)swift_allocObject();
  size_t v20 = j__malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_100126280();
    __break(1u);
    return result;
  }
  void v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10009E2BC(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void *sub_10009B94C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10009E4AC(0, &qword_1001619A0, (uint64_t)&type metadata for Double, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10009E4F8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009BA7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009C0DC(a1, a2, a3, (void *)*v3, &qword_100161990, (uint64_t (*)(uint64_t))type metadata accessor for WidgetStock, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10009BACC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009BBCC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10009BAEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009BD58(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10009BB0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009C0DC(a1, a2, a3, (void *)*v3, &qword_100161948, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10009BB5C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009BF00(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10009BB7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009C0DC(a1, a2, a3, (void *)*v3, &qword_100161998, (uint64_t (*)(uint64_t))&type metadata accessor for Stock, (uint64_t (*)(void))&type metadata accessor for Stock);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10009BBCC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10009E4AC(0, (unint64_t *)&qword_10015E810, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

uint64_t sub_10009BD58(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10009E230();
    id v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_10009E4AC(0, &qword_10015EF60, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

uint64_t sub_10009BF00(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10009E4AC(0, &qword_100161978, (uint64_t)&type metadata for QuoteDetailItem, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    id v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

uint64_t sub_10009C0A8(char a1, int64_t a2, char a3, void *a4)
{
  return sub_10009C0DC(a1, a2, a3, a4, &qword_10015E730, (uint64_t (*)(uint64_t))type metadata accessor for DetailTimelineEntry, (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
}

uint64_t sub_10009C0DC(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10009E0B4(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = j__malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  uint64_t v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)v17 + v21;
  unint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  unint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

uint64_t sub_10009C340(uint64_t a1, char a2, void (*a3)(void))
{
  id v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v37 = a2;
  uint64_t v7 = sub_1001262E0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    os_log_type_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1001265F0();
    sub_100125BA0();
    uint64_t result = sub_100126630();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v4 = v8;
  return result;
}

void *sub_10009C658(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1001262D0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10009C814(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10003E754(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10009C658((void (*)(void))sub_10009E1A4);
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10009C340(v15, a4 & 1, (void (*)(void))sub_10009E1A4);
  unint64_t v21 = sub_10003E754(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_100126570();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  int64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *int64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;

  return swift_bridgeObjectRetain();
}

void (*sub_10009C9AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(void *a1)
{
  uint64_t v10 = sub_100123E30();
  *a1 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  a1[1] = v11;
  uint64_t result = (void (*)(void *))malloc(*(void *)(v11 + 64));
  a1[2] = (uint64_t)result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(void))(v12 + 16))();
    return sub_10009CAA8;
  }
  return result;
}

void sub_10009CAA8(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t sub_10009CAF4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10009CB7C(uint64_t a1, void *a2)
{
  int64_t v2 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v4 = v5;
  uint64_t v28 = result;
  uint64_t v6 = 1 << *(unsigned char *)(result - 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v4;
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  unint64_t v27 = a2 + 7;
  do
  {
    do
    {
LABEL_4:
      while (v8)
      {
        unint64_t v9 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v10 = v9 | (v2 << 6);
        uint64_t v11 = a2[2];
        if (v11) {
          goto LABEL_23;
        }
      }
      int64_t v12 = v2 + 1;
      if (__OFADD__(v2, 1)) {
        goto LABEL_42;
      }
      if (v12 >= v30) {
        return 0;
      }
      unint64_t v13 = *(void *)(v28 + 8 * v12);
      ++v2;
      if (!v13)
      {
        int64_t v2 = v12 + 1;
        if (v12 + 1 >= v30) {
          return 0;
        }
        unint64_t v13 = *(void *)(v28 + 8 * v2);
        if (!v13)
        {
          int64_t v2 = v12 + 2;
          if (v12 + 2 >= v30) {
            return 0;
          }
          unint64_t v13 = *(void *)(v28 + 8 * v2);
          if (!v13)
          {
            int64_t v2 = v12 + 3;
            if (v12 + 3 >= v30) {
              return 0;
            }
            unint64_t v13 = *(void *)(v28 + 8 * v2);
            if (!v13)
            {
              int64_t v14 = v12 + 4;
              if (v14 >= v30) {
                return 0;
              }
              unint64_t v13 = *(void *)(v28 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  int64_t v2 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_43;
                  }
                  if (v2 >= v30) {
                    return 0;
                  }
                  unint64_t v13 = *(void *)(v28 + 8 * v2);
                  ++v14;
                  if (v13) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v2 = v14;
            }
          }
        }
      }
LABEL_22:
      unint64_t v8 = (v13 - 1) & v13;
      unint64_t v10 = __clz(__rbit64(v13)) + (v2 << 6);
      uint64_t v11 = a2[2];
    }
    while (!v11);
LABEL_23:
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v18 = a2;
    uint64_t v19 = a2[4];
    uint64_t v20 = a2[5];
    BOOL v21 = v19 == *v15 && v20 == v17;
    if (v21 || (v22 = v2, uint64_t result = sub_100126530(), (result & 1) != 0))
    {
LABEL_38:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return v16;
    }
    a2 = v18;
    int64_t v2 = v22;
  }
  while (v11 == 1);
  int64_t v23 = v27;
  uint64_t v24 = 1;
  while (1)
  {
    uint64_t v25 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (*(v23 - 1) == v16 && *v23 == v17) {
      goto LABEL_38;
    }
    uint64_t result = sub_100126530();
    if (result) {
      goto LABEL_38;
    }
    v23 += 2;
    ++v24;
    if (v25 == v11)
    {
      a2 = v18;
      int64_t v2 = v22;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_10009CDE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

void sub_10009CED8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v27 = sub_100123E30();
  uint64_t v7 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin(v9);
  int64_t v12 = (char *)&v23 - v11;
  int64_t v35 = _swiftEmptyArrayStorage;
  uint64_t v31 = *(void *)(a1 + 16);
  if (v31)
  {
    unint64_t v13 = 0;
    uint64_t v25 = a1;
    uint64_t v26 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v30 = v7 + 16;
    unint64_t v24 = a4;
    uint64_t v14 = v27;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v16 = *(void *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v12, a1 + v15 + v16 * v13, v14, v10);
      char v17 = sub_1000964A4((uint64_t)v12, v33, v34, a4);
      if (v4)
      {
        (*v26)(v12, v14);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if (v17)
      {
        uint64_t v28 = *v29;
        v28(v32, v12, v14);
        unint64_t v18 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10009BB0C(0, v18[2] + 1, 1);
          unint64_t v18 = v35;
        }
        unint64_t v20 = v18[2];
        unint64_t v19 = v18[3];
        if (v20 >= v19 >> 1)
        {
          sub_10009BB0C(v19 > 1, v20 + 1, 1);
          unint64_t v18 = v35;
        }
        void v18[2] = v20 + 1;
        unint64_t v21 = (unint64_t)v18 + v15 + v20 * v16;
        uint64_t v22 = v27;
        v28((char *)v21, v32, v27);
        int64_t v35 = v18;
        uint64_t v14 = v22;
        a4 = v24;
        a1 = v25;
      }
      else
      {
        (*v26)(v12, v14);
      }
      if (v31 == ++v13) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10009D190(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

uint64_t sub_10009D284(uint64_t result, uint64_t a2, uint64_t a3)
{
  int64_t v5 = 0;
  uint64_t v23 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
LABEL_4:
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v5 << 6);
    }
    else
    {
      int64_t v11 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_41;
      }
      if (v11 >= v24) {
        return 0;
      }
      unint64_t v12 = *(void *)(v23 + 8 * v11);
      ++v5;
      if (!v12)
      {
        int64_t v5 = v11 + 1;
        if (v11 + 1 >= v24) {
          return 0;
        }
        unint64_t v12 = *(void *)(v23 + 8 * v5);
        if (!v12)
        {
          int64_t v5 = v11 + 2;
          if (v11 + 2 >= v24) {
            return 0;
          }
          unint64_t v12 = *(void *)(v23 + 8 * v5);
          if (!v12)
          {
            int64_t v5 = v11 + 3;
            if (v11 + 3 >= v24) {
              return 0;
            }
            unint64_t v12 = *(void *)(v23 + 8 * v5);
            if (!v12)
            {
              int64_t v13 = v11 + 4;
              if (v13 >= v24) {
                return 0;
              }
              unint64_t v12 = *(void *)(v23 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v5 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_42;
                  }
                  if (v5 >= v24) {
                    return 0;
                  }
                  unint64_t v12 = *(void *)(v23 + 8 * v5);
                  ++v13;
                  if (v12) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v5 = v13;
            }
          }
        }
      }
LABEL_21:
      unint64_t v8 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
    }
    uint64_t v14 = *(void **)(*(void *)(result + 56) + 8 * v10);
    uint64_t v15 = v14[2];
    if (v15)
    {
      int64_t v25 = v5;
      uint64_t v16 = result;
      uint64_t v22 = *(void *)(*(void *)(result + 48) + 16 * v10);
      BOOL v17 = v14[4] == a2 && v14[5] == a3;
      if (v17 || (sub_100126530() & 1) != 0)
      {
LABEL_38:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return v22;
      }
      uint64_t result = v16;
      int64_t v5 = v25;
      if (v15 != 1) {
        break;
      }
    }
  }
  unint64_t v18 = v14 + 7;
  uint64_t v19 = 1;
  while (1)
  {
    uint64_t v20 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (*(v18 - 1) == a2 && *v18 == a3) {
      goto LABEL_38;
    }
    uint64_t result = sub_100126530();
    if (result) {
      goto LABEL_38;
    }
    v18 += 2;
    ++v19;
    if (v20 == v15)
    {
      uint64_t result = v16;
      int64_t v5 = v25;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_10009D4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a1;
  uint64_t v6 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 64);
  int64_t v20 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    BOOL v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = v17[1];
    uint64_t v19 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    v21[0] = *v17;
    v21[1] = v18;
    uint64_t v21[2] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10009A5BC(&v22, v21, a3);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v20) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v20) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v20) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v20) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v20)
  {
LABEL_26:
    swift_release();
    return v22;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v20) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10009D6F4(uint64_t a1, uint64_t a2)
{
  sub_10009E0B4(0, &qword_100161940, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v45 - v5;
  uint64_t v7 = sub_100123E30();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v45 - v11;
  __chkstk_darwin(v13);
  uint64_t v47 = (char *)&v45 - v14;
  __chkstk_darwin(v15);
  BOOL v17 = (char *)&v45 - v16;
  __chkstk_darwin(v18);
  unint64_t v48 = (char *)&v45 - v19;
  uint64_t v57 = *(void *)(a1 + 16);
  if (!v57) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v56 = a1 + 32;
  uint64_t v20 = *(void *)(a2 + 16);
  char v63 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v64 = v8 + 16;
  unint64_t v21 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  unint64_t v53 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  char v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v45 = a1;
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  uint64_t v61 = _swiftEmptyArrayStorage;
  uint64_t v55 = v20;
  uint64_t v59 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v49 = v6;
  uint64_t v50 = a2;
  uint64_t v51 = v8;
  uint64_t v46 = v17;
  do
  {
    uint64_t v62 = v22;
    uint64_t v23 = (uint64_t *)(v56 + 32 * v22);
    uint64_t v24 = v23[3];
    uint64_t v65 = v23[1];
    if (v20)
    {
      uint64_t v25 = v24;
      uint64_t v26 = *v23;
      uint64_t v52 = v23[2];
      uint64_t v27 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v28 = *(void *)(v8 + 72);
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      swift_bridgeObjectRetain();
      uint64_t v60 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v30 = v20;
      while (1)
      {
        v29(v12, v27, v7);
        if (sub_100123DE0() == v26 && v31 == v65)
        {
          a2 = v50;
          swift_bridgeObjectRelease();
          goto LABEL_16;
        }
        char v32 = sub_100126530();
        swift_bridgeObjectRelease();
        if (v32) {
          break;
        }
        (*v63)(v12, v7);
        v27 += v28;
        if (!--v30)
        {
          a2 = v50;
          swift_bridgeObjectRelease();
          uint64_t v6 = v49;
          uint64_t v8 = v51;
          unint64_t v21 = v59;
          goto LABEL_13;
        }
      }
      a2 = v50;
LABEL_16:
      uint64_t v6 = v49;
      uint64_t v33 = (uint64_t)v46;
      unint64_t v21 = v59;
      uint64_t v34 = v60;
      swift_bridgeObjectRelease();
      int64_t v35 = *v21;
      uint64_t v36 = v47;
      (*v21)(v47, v12, v7);
      v35((char *)v33, v36, v7);
      if (v34)
      {
        sub_10009AC0C(v33, v52, v34, (uint64_t)v6);
        (*v63)((char *)v33, v7);
        (*v53)(v6, 0, 1, v7);
        swift_bridgeObjectRelease();
      }
      else
      {
        v35(v6, (char *)v33, v7);
        (*v53)(v6, 0, 1, v7);
      }
      uint64_t v8 = v51;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_13:
      (*v53)(v6, 1, 1, v7);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if ((*v54)(v6, 1, v7) == 1)
    {
      sub_10009E118((uint64_t)v6);
    }
    else
    {
      char v37 = *v21;
      os_log_type_t v38 = v48;
      (*v21)(v48, v6, v7);
      v37(v58, v38, v7);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v39 = (unint64_t)v61;
      }
      else {
        unint64_t v39 = sub_10009B6B0(0, v61[2] + 1, 1, (unint64_t)v61, &qword_100161948, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline);
      }
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      if (v41 >= v40 >> 1) {
        unint64_t v39 = sub_10009B6B0(v40 > 1, v41 + 1, 1, v39, &qword_100161948, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline, (uint64_t (*)(void))&type metadata accessor for Headline);
      }
      *(void *)(v39 + 16) = v41 + 1;
      unint64_t v42 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v61 = (void *)v39;
      unint64_t v43 = v39 + v42 + *(void *)(v8 + 72) * v41;
      unint64_t v21 = v59;
      v37((char *)v43, v58, v7);
    }
    uint64_t v22 = v62 + 1;
    uint64_t v20 = v55;
  }
  while (v62 + 1 != v57);
  swift_bridgeObjectRelease();
  return v61;
}

uint64_t sub_10009DD40(uint64_t a1, uint64_t a2)
{
  sub_10009E01C();
  uint64_t result = sub_1001262D0();
  int64_t v4 = 0;
  uint64_t v25 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v23 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v24 = result + 64;
  uint64_t v27 = (void *)result;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v28 = (v10 - 1) & v10;
  int64_t v29 = v4;
  for (unint64_t i = __clz(__rbit64(v10)) | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v13 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v25 + 48) + 16 * i);
    uint64_t v17 = v16[1];
    uint64_t v30 = *v16;
    uint64_t v18 = *(void *)(*(void *)(v25 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v19 = sub_10009D6F4(v18, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v24 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t result = (uint64_t)v27;
    uint64_t v20 = (void *)(v27[6] + 16 * i);
    *uint64_t v20 = v30;
    v20[1] = v17;
    *(void *)(v27[7] + 8 * i) = v19;
    uint64_t v21 = v27[2];
    BOOL v12 = __OFADD__(v21, 1);
    uint64_t v22 = v21 + 1;
    if (v12)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v27[2] = v22;
    unint64_t v10 = v28;
    int64_t v4 = v29;
    if (v28) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v12 = __OFADD__(v4, 1);
    int64_t v13 = v4 + 1;
    if (v12) {
      goto LABEL_25;
    }
    if (v13 >= v23) {
      return result;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    if (!v14) {
      break;
    }
LABEL_15:
    uint64_t v28 = (v14 - 1) & v14;
    int64_t v29 = v13;
  }
  int64_t v15 = v13 + 1;
  if (v13 + 1 >= v23) {
    return result;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v23) {
    return result;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v13 + 3;
  if (v13 + 3 >= v23) {
    return result;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_14:
    int64_t v13 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v23) {
      return result;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_10009DFA0()
{
  unint64_t result = qword_10015E1D8;
  if (!qword_10015E1D8)
  {
    sub_10009E4AC(255, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015E1D8);
  }
  return result;
}

void sub_10009E01C()
{
  if (!qword_10015F288)
  {
    sub_10009E0B4(255, (unint64_t *)&qword_10015F290, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
    unint64_t v0 = sub_100126300();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F288);
    }
  }
}

void sub_10009E0B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10009E118(uint64_t a1)
{
  sub_10009E0B4(0, &qword_100161940, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10009E1A4()
{
  if (!qword_100161958)
  {
    sub_10009E4AC(255, (unint64_t *)&qword_100161038, (uint64_t)&type metadata for WidgetSectionConfigRecord.SymbolConfiguration.Article, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    unint64_t v0 = sub_100126300();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161958);
    }
  }
}

void sub_10009E230()
{
  if (!qword_100161960)
  {
    sub_10009E4AC(255, &qword_10015EF60, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    unint64_t v0 = sub_100126500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161960);
    }
  }
}

uint64_t sub_10009E2AC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10009E2BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

uint64_t sub_10009E418(uint64_t a1, uint64_t a2)
{
  sub_10009E0B4(0, &qword_100161940, (uint64_t (*)(uint64_t))&type metadata accessor for Headline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10009E4AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

char *sub_10009E4F8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_100126310();
  __break(1u);
  return result;
}

void *sub_10009E5EC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v10 = a2[13];
    uint64_t v11 = a3[10];
    __dst = (void *)(a1 + v11);
    unint64_t v48 = (uint64_t *)((char *)a2 + v11);
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v10;
    unint64_t v12 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v47 = *((void *)v12 - 1);
    unint64_t v13 = *(unsigned int (**)(void *, uint64_t, int *))(v47 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v48, 1, v12))
    {
      sub_100041E44();
      memcpy(__dst, v48, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      void *__dst = *v48;
      uint64_t v16 = v12[5];
      uint64_t v46 = (char *)__dst + v16;
      uint64_t v17 = (char *)v48 + v16;
      uint64_t v18 = sub_1001232B0();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v46, v17, v18);
      sub_10002FE38();
      v19(&v46[*(int *)(v20 + 36)], &v17[*(int *)(v20 + 36)], v18);
      uint64_t v21 = v12[6];
      uint64_t v22 = (char *)__dst + v21;
      int64_t v23 = (char *)v48 + v21;
      uint64_t v24 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *(_OWORD *)((char *)__dst + v12[7]) = *(_OWORD *)((char *)v48 + v12[7]);
      uint64_t v25 = v12[8];
      uint64_t v26 = (char *)__dst + v25;
      uint64_t v27 = (char *)v48 + v25;
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      *((unsigned char *)__dst + v12[9]) = *((unsigned char *)v48 + v12[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v47 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v28 = a3[11];
    uint64_t v29 = a3[12];
    uint64_t v30 = (char *)v4 + v28;
    uint64_t v31 = (uint64_t)a2 + v28;
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = *(unsigned char *)(v31 + 8);
    uint64_t v32 = *(void *)(v31 + 32);
    *((void *)v30 + 3) = *(void *)(v31 + 24);
    *((void *)v30 + 4) = v32;
    v30[40] = *(unsigned char *)(v31 + 40);
    v30[56] = *(unsigned char *)(v31 + 56);
    *((void *)v30 + 2) = *(void *)(v31 + 16);
    *((void *)v30 + 6) = *(void *)(v31 + 48);
    uint64_t v33 = (char *)v4 + v29;
    uint64_t v34 = (char *)a2 + v29;
    uint64_t v35 = sub_100123150();
    uint64_t v36 = *(void *)(v35 - 8);
    char v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain();
    if (v37(v34, 1, v35))
    {
      sub_10009EAD4(0);
      memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    uint64_t v39 = a3[13];
    unint64_t v40 = (char *)v4 + v39;
    unint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = sub_100123670();
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      sub_100029068(0);
      memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
  }
  return v4;
}

void sub_10009EAD4(uint64_t a1)
{
}

void sub_10009EB08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10009EB6C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1001232B0();
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v6, v7);
    sub_10002FE38();
    v8(v6 + *(int *)(v9 + 36), v7);
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    uint64_t v11 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = sub_100123150();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = a1 + a2[13];
  uint64_t v16 = sub_100123670();
  uint64_t v19 = *(void *)(v16 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v16);
  if (!result)
  {
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
    return v18(v15, v16);
  }
  return result;
}

uint64_t sub_10009EE18(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t v10 = a3[10];
  __dst = (void *)(a1 + v10);
  uint64_t v46 = (void *)(a2 + v10);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v11 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v45 = *((void *)v11 - 1);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, int *))(v45 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v46, 1, v11))
  {
    sub_100041E44();
    memcpy(__dst, v46, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    void *__dst = *v46;
    uint64_t v14 = v11[5];
    uint64_t v44 = (char *)__dst + v14;
    uint64_t v15 = (char *)v46 + v14;
    uint64_t v16 = sub_1001232B0();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v44, v15, v16);
    sub_10002FE38();
    v17(&v44[*(int *)(v18 + 36)], &v15[*(int *)(v18 + 36)], v16);
    uint64_t v19 = v11[6];
    uint64_t v20 = (char *)__dst + v19;
    uint64_t v21 = (char *)v46 + v19;
    uint64_t v22 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    *(_OWORD *)((char *)__dst + v11[7]) = *(_OWORD *)((char *)v46 + v11[7]);
    uint64_t v23 = v11[8];
    uint64_t v24 = (char *)__dst + v23;
    uint64_t v25 = (char *)v46 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    *((unsigned char *)__dst + v11[9]) = *((unsigned char *)v46 + v11[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v45 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  uint64_t v30 = *(void *)(v29 + 32);
  *(void *)(v28 + 24) = *(void *)(v29 + 24);
  *(void *)(v28 + 32) = v30;
  *(unsigned char *)(v28 + 40) = *(unsigned char *)(v29 + 40);
  *(unsigned char *)(v28 + 56) = *(unsigned char *)(v29 + 56);
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  *(void *)(v28 + 48) = *(void *)(v29 + 48);
  uint64_t v31 = (void *)(a1 + v27);
  uint64_t v32 = (const void *)(a2 + v27);
  uint64_t v33 = sub_100123150();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
  swift_bridgeObjectRetain();
  if (v35(v32, 1, v33))
  {
    sub_10009EAD4(0);
    memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  uint64_t v37 = a3[13];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (const void *)(a2 + v37);
  uint64_t v40 = sub_100123670();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    sub_100029068(0);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  return a1;
}

uint64_t sub_10009F2AC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *uint64_t v8 = *v9;
      uint64_t v15 = v10[5];
      uint64_t v70 = (char *)v8 + v15;
      BOOL v71 = (char *)v9 + v15;
      uint64_t v16 = sub_1001232B0();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v70, v71, v16);
      sub_10002FE38();
      v17(&v70[*(int *)(v18 + 36)], &v71[*(int *)(v18 + 36)], v16);
      uint64_t v19 = v10[6];
      uint64_t v20 = (char *)v8 + v19;
      uint64_t v21 = (char *)v9 + v19;
      uint64_t v22 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      *(_OWORD *)((char *)v8 + v10[7]) = *(_OWORD *)((char *)v9 + v10[7]);
      uint64_t v23 = v10[8];
      uint64_t v24 = (char *)v8 + v23;
      uint64_t v25 = (char *)v9 + v23;
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v26;
      *((unsigned char *)v8 + v10[9]) = *((unsigned char *)v9 + v10[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1000A1228((uint64_t)v8, type metadata accessor for PreparedSparkline);
LABEL_6:
    sub_100041E44();
    memcpy(v8, v9, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v8 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v53 = v10[5];
  char v54 = (char *)v8 + v53;
  uint64_t v55 = (char *)v9 + v53;
  uint64_t v56 = sub_1001232B0();
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 24);
  v57(v54, v55, v56);
  sub_10002FE38();
  v57(&v54[*(int *)(v58 + 36)], &v55[*(int *)(v58 + 36)], v56);
  uint64_t v59 = v10[6];
  uint64_t v60 = (char *)v8 + v59;
  uint64_t v61 = (char *)v9 + v59;
  uint64_t v62 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 24))(v60, v61, v62);
  uint64_t v63 = v10[7];
  uint64_t v64 = (void *)((char *)v8 + v63);
  uint64_t v65 = (void *)((char *)v9 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  uint64_t v66 = v10[8];
  uint64_t v67 = (char *)v8 + v66;
  unint64_t v68 = (char *)v9 + v66;
  char v69 = v68[8];
  *(void *)uint64_t v67 = *(void *)v68;
  v67[8] = v69;
  *((unsigned char *)v8 + v10[9]) = *((unsigned char *)v9 + v10[9]);
LABEL_7:
  uint64_t v28 = a3[11];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(a2 + v28);
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  *(void *)uint64_t v29 = v31;
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  *(void *)(v29 + 24) = *(void *)(v30 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v30 + 32);
  *(unsigned char *)(v29 + 40) = *(unsigned char *)(v30 + 40);
  *(void *)(v29 + 32) = v32;
  uint64_t v33 = *(void *)(v30 + 48);
  *(unsigned char *)(v29 + 56) = *(unsigned char *)(v30 + 56);
  *(void *)(v29 + 48) = v33;
  uint64_t v34 = a3[12];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = sub_100123150();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, void *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v35, v37);
LABEL_12:
    sub_10009EAD4(0);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v38 + 24))(v35, v36, v37);
LABEL_13:
  uint64_t v43 = a3[13];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = sub_100123670();
  uint64_t v47 = *(void *)(v46 - 8);
  unint64_t v48 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v47 + 48);
  int v49 = v48(v44, 1, v46);
  int v50 = v48(v45, 1, v46);
  if (!v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, void *, uint64_t))(v47 + 24))(v44, v45, v46);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v44, v46);
    goto LABEL_18;
  }
  if (v50)
  {
LABEL_18:
    sub_100029068(0);
    memcpy(v44, v45, *(void *)(*(void *)(v51 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v47 + 16))(v44, v45, v46);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  return a1;
}

uint64_t sub_10009F9B4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 96);
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  uint64_t v10 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    sub_100041E44();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[5];
    int v14 = (char *)v8 + v13;
    uint64_t v42 = (char *)v9 + v13;
    uint64_t v15 = sub_1001232B0();
    uint64_t v43 = v11;
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    v16(v14, v42, v15);
    sub_10002FE38();
    v16(&v14[*(int *)(v17 + 36)], &v42[*(int *)(v17 + 36)], v15);
    uint64_t v18 = v10[6];
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = (char *)v9 + v18;
    uint64_t v21 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(_OWORD *)((char *)v8 + v10[7]) = *(_OWORD *)((char *)v9 + v10[7]);
    uint64_t v22 = v10[8];
    uint64_t v23 = (char *)v8 + v22;
    uint64_t v24 = (char *)v9 + v22;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    *((unsigned char *)v8 + v10[9]) = *((unsigned char *)v9 + v10[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v43 + 56))(v8, 0, 1, v10);
  }
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = (_OWORD *)(a1 + v25);
  uint64_t v28 = (_OWORD *)(a2 + v25);
  long long v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v27[2] = v28[2];
  *(_OWORD *)((char *)v27 + 41) = *(_OWORD *)((char *)v28 + 41);
  uint64_t v30 = (void *)(a1 + v26);
  uint64_t v31 = (const void *)(a2 + v26);
  uint64_t v32 = sub_100123150();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    sub_10009EAD4(0);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = sub_100123670();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_100029068(0);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  return a1;
}

uint64_t sub_10009FDD8(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v70 = a3;
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  int v14 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      *uint64_t v12 = *v13;
      uint64_t v19 = v14[5];
      uint64_t v20 = (char *)v12 + v19;
      unint64_t v68 = (char *)v12 + v19;
      char v69 = (char *)v13 + v19;
      uint64_t v21 = sub_1001232B0();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v22(v20, v69, v21);
      sub_10002FE38();
      v22(&v68[*(int *)(v23 + 36)], &v69[*(int *)(v23 + 36)], v21);
      uint64_t v24 = v14[6];
      uint64_t v25 = (char *)v12 + v24;
      uint64_t v26 = (char *)v13 + v24;
      uint64_t v27 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      *(_OWORD *)((char *)v12 + v14[7]) = *(_OWORD *)((char *)v13 + v14[7]);
      uint64_t v28 = v14[8];
      long long v29 = (char *)v12 + v28;
      uint64_t v30 = (char *)v13 + v28;
      *(void *)long long v29 = *(void *)v30;
      v29[8] = v30[8];
      *((unsigned char *)v12 + v14[9]) = *((unsigned char *)v13 + v14[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1000A1228((uint64_t)v12, type metadata accessor for PreparedSparkline);
LABEL_6:
    sub_100041E44();
    memcpy(v12, v13, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v12 = *v13;
  swift_bridgeObjectRelease();
  uint64_t v55 = v14[5];
  uint64_t v56 = (char *)v12 + v55;
  uint64_t v57 = (char *)v13 + v55;
  uint64_t v58 = sub_1001232B0();
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 40);
  v59(v56, v57, v58);
  sub_10002FE38();
  v59(&v56[*(int *)(v60 + 36)], &v57[*(int *)(v60 + 36)], v58);
  uint64_t v61 = v14[6];
  uint64_t v62 = (char *)v12 + v61;
  uint64_t v63 = (char *)v13 + v61;
  uint64_t v64 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  *(_OWORD *)((char *)v12 + v14[7]) = *(_OWORD *)((char *)v13 + v14[7]);
  uint64_t v65 = v14[8];
  uint64_t v66 = (char *)v12 + v65;
  uint64_t v67 = (char *)v13 + v65;
  v66[8] = v67[8];
  *(void *)uint64_t v66 = *(void *)v67;
  *((unsigned char *)v12 + v14[9]) = *((unsigned char *)v13 + v14[9]);
LABEL_7:
  uint64_t v32 = v70[11];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(void *)uint64_t v33 = *(void *)(a2 + v32);
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(a2 + v32 + 8);
  uint64_t v35 = *(void *)(a2 + v32 + 24);
  *(void *)(v33 + 16) = *(void *)(a2 + v32 + 16);
  *(void *)(v33 + 24) = v35;
  swift_bridgeObjectRelease();
  *(void *)(v33 + 32) = *(void *)(v34 + 32);
  *(unsigned char *)(v33 + 40) = *(unsigned char *)(v34 + 40);
  *(void *)(v33 + 48) = *(void *)(v34 + 48);
  *(unsigned char *)(v33 + 56) = *(unsigned char *)(v34 + 56);
  uint64_t v36 = v70[12];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  uint64_t v39 = sub_100123150();
  uint64_t v40 = *(void *)(v39 - 8);
  int v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v40 + 32))(v37, v38, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v43)
  {
    (*(void (**)(void *, uint64_t))(v40 + 8))(v37, v39);
LABEL_12:
    sub_10009EAD4(0);
    memcpy(v37, v38, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v40 + 40))(v37, v38, v39);
LABEL_13:
  uint64_t v45 = v70[13];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = sub_100123670();
  uint64_t v49 = *(void *)(v48 - 8);
  int v50 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v49 + 48);
  int v51 = v50(v46, 1, v48);
  int v52 = v50(v47, 1, v48);
  if (!v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, void *, uint64_t))(v49 + 40))(v46, v47, v48);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v49 + 8))(v46, v48);
    goto LABEL_18;
  }
  if (v52)
  {
LABEL_18:
    sub_100029068(0);
    memcpy(v46, v47, *(void *)(*(void *)(v53 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v49 + 32))(v46, v47, v48);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  return a1;
}

uint64_t sub_1000A0458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A046C);
}

uint64_t sub_1000A046C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_100041E44();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[10];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_10009EAD4(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[12];
    goto LABEL_9;
  }
  sub_100029068(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[13];

  return v15(v17, a2, v16);
}

uint64_t sub_1000A05E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A05F8);
}

uint64_t sub_1000A05F8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
    return result;
  }
  sub_100041E44();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[10];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_10009EAD4(0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[12];
    goto LABEL_7;
  }
  sub_100029068(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[13];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for TickerCellViewModel(uint64_t a1)
{
  return sub_100009E3C(a1, qword_100161A00);
}

void sub_1000A0790()
{
  sub_100041E44();
  if (v0 <= 0x3F)
  {
    sub_10009EAD4(319);
    if (v1 <= 0x3F)
    {
      sub_100029068(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1000A08D0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v54 = a1;
  sub_100029068(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v41[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10009EAD4(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100041E44();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1001232E0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v41[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001232D0();
  uint64_t v16 = sub_1001232C0();
  uint64_t v52 = v17;
  uint64_t v53 = v16;
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  v55._countAndFlagsBits = 46;
  v55._object = (void *)0xE100000000000000;
  uint64_t v18 = sub_100125BD0(v55, 3);
  uint64_t v50 = v19;
  uint64_t v51 = v18;
  v56._countAndFlagsBits = 46;
  v56._object = (void *)0xE100000000000000;
  uint64_t v20 = sub_100125BD0(v56, 5);
  uint64_t v48 = v21;
  uint64_t v49 = v20;
  v57._countAndFlagsBits = 46;
  v57._object = (void *)0xE100000000000000;
  uint64_t v22 = sub_100125BD0(v57, 9);
  uint64_t v46 = v23;
  uint64_t v47 = v22;
  sub_10008DBD0((uint64_t)v11);
  uint64_t v24 = type metadata accessor for PreparedSparkline(0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 0, 1, v24);
  uint64_t v45 = qword_100162B70;
  int v44 = byte_100162B78;
  uint64_t v25 = unk_100162B88;
  uint64_t v43 = qword_100162B80;
  uint64_t v26 = qword_100162B90;
  char v27 = byte_100162B98;
  uint64_t v28 = qword_100162BA0;
  int v42 = byte_100162BA8;
  uint64_t v29 = sub_100123150();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v8, 1, 1, v29);
  uint64_t v30 = qword_10015D540;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_100123670();
  uint64_t v32 = sub_100019244(v31, (uint64_t)qword_100172620);
  uint64_t v33 = *(void *)(v31 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v33 + 16))(v5, v32, v31);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v5, 0, 1, v31);
  *(unsigned char *)a2 = v54;
  uint64_t v34 = v52;
  *(void *)(a2 + 8) = v53;
  *(void *)(a2 + 16) = v34;
  uint64_t v35 = v50;
  *(void *)(a2 + 24) = v51;
  *(void *)(a2 + 32) = v35;
  uint64_t v36 = v48;
  *(void *)(a2 + 40) = v49;
  *(void *)(a2 + 48) = v36;
  uint64_t v37 = v46;
  *(void *)(a2 + 56) = v47;
  *(void *)(a2 + 64) = v37;
  *(unsigned char *)(a2 + 72) = 2;
  *(void *)(a2 + 80) = 0;
  *(unsigned char *)(a2 + 88) = 1;
  uint64_t v38 = (int *)type metadata accessor for TickerCellViewModel(0);
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  sub_1000A9400((uint64_t)v11, a2 + v38[10], (uint64_t (*)(void))sub_100041E44);
  uint64_t v39 = a2 + v38[11];
  *(void *)uint64_t v39 = v45;
  *(unsigned char *)(v39 + 8) = v44;
  *(void *)(v39 + 16) = v43;
  *(void *)(v39 + 24) = v25;
  *(void *)(v39 + 32) = v26;
  *(unsigned char *)(v39 + 40) = v27;
  *(void *)(v39 + 48) = v28;
  *(unsigned char *)(v39 + 56) = v42;
  sub_1000A9400((uint64_t)v8, a2 + v38[12], (uint64_t (*)(void))sub_10009EAD4);
  return sub_1000A9400((uint64_t)v5, a2 + v38[13], (uint64_t (*)(void))sub_100029068);
}

uint64_t sub_1000A0D3C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = *(void *)(v1 + 8);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000A0D48@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  sub_10009EAD4(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v55[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100041E44();
  __chkstk_darwin(v9 - 8);
  uint64_t v66 = &v55[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100029068(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v67 = &v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v15 = &v55[-v14];
  uint64_t v16 = type metadata accessor for WidgetStock();
  __chkstk_darwin(v16);
  uint64_t v18 = &v55[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_100123CB0();
  uint64_t v64 = v20;
  uint64_t v65 = v19;
  sub_1000A1288(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  uint64_t v21 = sub_100123CC0();
  uint64_t v62 = v22;
  uint64_t v63 = v21;
  uint64_t v23 = sub_100123D30();
  uint64_t v60 = v24;
  uint64_t v61 = v23;
  sub_1000A1228((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  uint64_t v25 = sub_100123CF0();
  uint64_t v57 = a1 + *(int *)(v16 + 20);
  uint64_t v58 = v26;
  sub_1000A1288(v57, (uint64_t)v15, (uint64_t (*)(void))sub_100029068);
  uint64_t v27 = sub_100123670();
  uint64_t v28 = *(void *)(v27 - 8);
  int v29 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v27);
  int v68 = a2;
  uint64_t v59 = v25;
  uint64_t v30 = v8;
  if (v29 == 1)
  {
    sub_1000A1228((uint64_t)v15, (uint64_t (*)(void))sub_100029068);
LABEL_6:
    int v34 = 2;
    goto LABEL_7;
  }
  double v31 = COERCE_DOUBLE(sub_1001235F0());
  char v33 = v32;
  (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v15, v27);
  if (v33) {
    goto LABEL_6;
  }
  if (v31 >= 0.0)
  {
    int v56 = 0;
    goto LABEL_8;
  }
  int v34 = 1;
LABEL_7:
  int v56 = v34;
LABEL_8:
  uint64_t v35 = sub_1000F46DC();
  char v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v42 = a1 + *(int *)(v16 + 24);
  uint64_t v43 = v66;
  sub_1000A1288(v42, (uint64_t)v66, (uint64_t (*)(void))sub_100041E44);
  sub_1000A1288(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  sub_1000D0CD8((uint64_t)v18, (uint64_t)v69);
  uint64_t v44 = (uint64_t)v30;
  sub_100123CD0();
  uint64_t v45 = sub_100123150();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v30, 0, 1, v45);
  uint64_t v46 = v67;
  sub_1000A1288(v57, (uint64_t)v67, (uint64_t (*)(void))sub_100029068);
  sub_1000A1228(a1, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  *(unsigned char *)a3 = v68;
  uint64_t v47 = v64;
  *(void *)(a3 + 8) = v65;
  *(void *)(a3 + 16) = v47;
  uint64_t v48 = v62;
  *(void *)(a3 + 24) = v63;
  *(void *)(a3 + 32) = v48;
  uint64_t v49 = v60;
  *(void *)(a3 + 40) = v61;
  *(void *)(a3 + 48) = v49;
  uint64_t v50 = v58;
  *(void *)(a3 + 56) = v59;
  *(void *)(a3 + 64) = v50;
  *(unsigned char *)(a3 + 72) = v56;
  *(void *)(a3 + 80) = v35;
  *(unsigned char *)(a3 + 88) = v37 & 1;
  *(void *)(a3 + 96) = v39;
  *(void *)(a3 + 104) = v41;
  uint64_t v51 = (int *)type metadata accessor for TickerCellViewModel(0);
  sub_1000A9400((uint64_t)v43, a3 + v51[10], (uint64_t (*)(void))sub_100041E44);
  uint64_t v52 = (_OWORD *)(a3 + v51[11]);
  long long v53 = v69[1];
  *uint64_t v52 = v69[0];
  v52[1] = v53;
  v52[2] = v70[0];
  *(_OWORD *)((char *)v52 + 41) = *(_OWORD *)((char *)v70 + 9);
  sub_1000A9400(v44, a3 + v51[12], (uint64_t (*)(void))sub_10009EAD4);
  return sub_1000A9400((uint64_t)v46, a3 + v51[13], (uint64_t (*)(void))sub_100029068);
}

uint64_t sub_1000A1228(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000A1288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1000A12F0()
{
  qword_100172688 = 0x4020000000000000;
}

void sub_1000A1300()
{
  qword_100172690 = 0x4000000000000000;
}

uint64_t sub_1000A1310@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v68 = a1;
  uint64_t v69 = 9666786;
  uint64_t v3 = sub_1001238A0();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  __chkstk_darwin(v3);
  uint64_t v65 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = _s11FormatStyleVMa_0();
  __chkstk_darwin(v61);
  uint64_t v62 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100125060();
  uint64_t v6 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009EB08(0, &qword_100161B20, (uint64_t (*)(uint64_t))sub_1000A82D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
  uint64_t v10 = v9;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v57 - v11;
  sub_1000A8F5C();
  unint64_t v14 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  unint64_t v59 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A83CC(0, &qword_100161C78, (uint64_t (*)(uint64_t))sub_1000A8F5C, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  uint64_t v63 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v57 - v18;
  sub_1000A1A74(v2, (uint64_t)v12);
  sub_100125030();
  unint64_t v20 = sub_1000A9010();
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v64);
  sub_1000A9128((uint64_t)v12, &qword_100161B20, (uint64_t (*)(uint64_t))sub_1000A82D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
  uint64_t v21 = *(void *)(v2 + 64);
  uint64_t v72 = *(void *)(v2 + 56);
  uint64_t v73 = v21;
  swift_bridgeObjectRetain();
  v74._countAndFlagsBits = 8236;
  v74._object = (void *)0xE200000000000000;
  sub_100125BB0(v74);
  uint64_t v22 = *(void *)(v2 + 40);
  uint64_t v23 = *(void **)(v2 + 48);
  swift_bridgeObjectRetain();
  v75._countAndFlagsBits = v22;
  v75._object = v23;
  sub_100125BB0(v75);
  swift_bridgeObjectRelease();
  uint64_t v70 = v10;
  unint64_t v71 = v20;
  swift_getOpaqueTypeConformance2();
  unint64_t v24 = sub_10001BA50();
  uint64_t v64 = (uint64_t)v19;
  uint64_t v25 = v58;
  unint64_t v60 = v24;
  sub_100125460();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v16, v25);
  if (*(unsigned char *)(v2 + 88)) {
    goto LABEL_7;
  }
  double v26 = *(double *)(v2 + 80);
  if (qword_10015D520 != -1) {
    swift_once();
  }
  id v27 = (id)sub_10002F64C(0, 3, 1, v26);
  [v27 setNumberStyle:1];
  id v28 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v26];
  id v29 = [v27 stringFromNumber:v28];

  if (!v29)
  {

LABEL_7:
    unint64_t v59 = 0xA300000000000000;
    goto LABEL_8;
  }
  uint64_t v69 = sub_100125B10();
  unint64_t v59 = v30;

LABEL_8:
  uint64_t v31 = v2 + *(int *)(type metadata accessor for TickerCellViewModel(0) + 44);
  uint64_t v57 = *(void *)v31;
  int v32 = *(unsigned __int8 *)(v31 + 8);
  uint64_t v33 = *(void *)(v31 + 32);
  char v34 = *(unsigned char *)(v31 + 40);
  uint64_t v35 = *(void *)(v31 + 48);
  int v36 = *(unsigned __int8 *)(v31 + 56);
  uint64_t v58 = v2 + *(int *)(type metadata accessor for TickerCellView(0) + 20);
  uint64_t v37 = v65;
  sub_100060104(v65);
  uint64_t v38 = v66;
  uint64_t v39 = v67;
  uint64_t v40 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v62, v37, v67);
  uint64_t v41 = (int *)v61;
  *(unsigned char *)(v40 + *(int *)(v61 + 20)) = 0;
  *(unsigned char *)(v40 + v41[6]) = 0;
  *(unsigned char *)(v40 + v41[7]) = 1;
  uint64_t v42 = (void *)(v40 + v41[8]);
  *uint64_t v42 = 0;
  v42[1] = 0xE000000000000000;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v43(v37, v39);
  uint64_t v44 = sub_1000AEBE4(v57, v32, v33, v34, v35, v36);
  uint64_t v46 = v45;
  sub_1000A1228(v40, (uint64_t (*)(void))_s11FormatStyleVMa_0);
  sub_1000A9184(0, (unint64_t *)&qword_10015E810, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1001276F0;
  unint64_t v48 = v59;
  *(void *)(v47 + 32) = v69;
  *(void *)(v47 + 40) = v48;
  sub_100060104(v37);
  uint64_t v49 = sub_1000578DC();
  uint64_t v51 = v50;
  v43(v37, v39);
  *(void *)(v47 + 48) = v49;
  *(void *)(v47 + 56) = v51;
  *(void *)(v47 + 64) = v44;
  *(void *)(v47 + 72) = v46;
  uint64_t v72 = v47;
  sub_1000A9184(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
  sub_10009DFA0();
  uint64_t v52 = sub_100125A50();
  uint64_t v54 = v53;
  swift_bridgeObjectRelease();
  uint64_t v72 = v52;
  uint64_t v73 = v54;
  uint64_t v55 = v64;
  sub_100124B10();
  swift_bridgeObjectRelease();
  return sub_1000A9570(v55, &qword_100161C78, (uint64_t (*)(uint64_t))sub_1000A8F5C, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
}

uint64_t sub_1000A1A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27[2] = a2;
  sub_1000A8320();
  uint64_t v28 = v3;
  v27[0] = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A83CC(0, &qword_100161C80, (uint64_t (*)(uint64_t))sub_1000A8320, (uint64_t (*)(uint64_t))sub_1000A8384, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  v27[1] = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v27 - v7;
  sub_1000A8384(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009EAD4(0);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100123150();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v27 - v20;
  uint64_t v22 = type metadata accessor for TickerCellViewModel(0);
  sub_1000A1288(a1 + *(int *)(v22 + 48), (uint64_t)v14, (uint64_t (*)(void))sub_10009EAD4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000A1228((uint64_t)v14, (uint64_t (*)(void))sub_10009EAD4);
    sub_1000A1F04((uint64_t)v11);
    sub_1000A1288((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))sub_1000A8384);
    swift_storeEnumTagMultiPayload();
    sub_1000A90F4();
    sub_1000A8D28();
    sub_100124F80();
    return sub_1000A1228((uint64_t)v11, (uint64_t (*)(void))sub_1000A8384);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
    uint64_t v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    __chkstk_darwin(v24);
    v27[-2] = a1;
    sub_1000A8D28();
    sub_100125290();
    uint64_t v25 = v27[0];
    uint64_t v26 = v28;
    (*(void (**)(char *, char *, uint64_t))(v27[0] + 16))(v8, v5, v28);
    swift_storeEnumTagMultiPayload();
    sub_1000A90F4();
    sub_100124F80();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
}

uint64_t sub_1000A1F04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v94 = a1;
  uint64_t v88 = type metadata accessor for LineTicker();
  __chkstk_darwin(v88);
  uint64_t v3 = (char *)&v72 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v83 = (uint64_t)&v72 - v5;
  sub_1000A83CC(0, &qword_100161C88, (uint64_t (*)(uint64_t))type metadata accessor for RowWithChartTicker, (uint64_t (*)(uint64_t))type metadata accessor for LineTicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v85 = v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (uint64_t)&v72 - v7;
  sub_1000A8CE0(0);
  uint64_t v93 = v8;
  __chkstk_darwin(v8);
  uint64_t v89 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for RowWithChartTicker();
  __chkstk_darwin(v86);
  uint64_t v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v84 = (uint64_t)&v72 - v13;
  sub_1000A88AC();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A83CC(0, &qword_100161C90, (uint64_t (*)(uint64_t))sub_1000A8450, (uint64_t (*)(uint64_t))sub_1000A8CE0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v90 = v17;
  __chkstk_darwin(v17);
  uint64_t v92 = (uint64_t)&v72 - v18;
  sub_1000A83CC(0, &qword_100161C98, (uint64_t (*)(uint64_t))sub_1000A8498, (uint64_t (*)(uint64_t))sub_1000A88AC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v72 - v20;
  sub_1000A8450(0);
  uint64_t v91 = v22;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A8498();
  __chkstk_darwin(v25);
  id v27 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)v1)
  {
    case 1:
      if (qword_10015D570 != -1) {
        swift_once();
      }
      uint64_t v32 = qword_100172690;
      *(void *)uint64_t v16 = sub_100124EF0();
      *((void *)v16 + 1) = v32;
      v16[16] = 0;
      sub_1000A9200(0, &qword_100161CA0, sub_1000A8940);
      sub_1000A38FC(v1, (uint64_t)&v16[*(int *)(v33 + 44)]);
      sub_1000A1288((uint64_t)v16, (uint64_t)v21, (uint64_t (*)(void))sub_1000A88AC);
      swift_storeEnumTagMultiPayload();
      sub_1000A8E44();
      sub_1000A8E78();
      sub_100124F80();
      sub_1000A1288((uint64_t)v24, v92, (uint64_t (*)(void))sub_1000A8450);
      swift_storeEnumTagMultiPayload();
      sub_1000A8D70();
      sub_1000A8EAC();
      sub_100124F80();
      sub_1000A1228((uint64_t)v24, (uint64_t (*)(void))sub_1000A8450);
      unint64_t v30 = (uint64_t (*)(void))sub_1000A88AC;
      uint64_t v31 = (uint64_t)v16;
      break;
    case 2:
      LODWORD(v83) = *(unsigned __int8 *)(v1 + 72);
      uint64_t v34 = *(void *)(v1 + 24);
      uint64_t v35 = *(void *)(v1 + 32);
      uint64_t v36 = *(void *)(v1 + 48);
      uint64_t v81 = *(void *)(v1 + 40);
      uint64_t v82 = v34;
      uint64_t v37 = *(void *)(v1 + 56);
      uint64_t v38 = *(void *)(v1 + 64);
      uint64_t v79 = *(void *)(v1 + 80);
      uint64_t v80 = v37;
      uint64_t v39 = *(unsigned __int8 *)(v1 + 88);
      uint64_t v77 = v35;
      uint64_t v78 = v39;
      uint64_t v40 = *(void *)(v1 + 104);
      uint64_t v76 = *(void *)(v1 + 96);
      uint64_t v41 = type metadata accessor for TickerCellViewModel(0);
      uint64_t v42 = *(int *)(v41 + 40);
      uint64_t v43 = v1 + *(int *)(v41 + 44);
      uint64_t v44 = *(void *)v43;
      uint64_t v45 = *(unsigned __int8 *)(v43 + 8);
      uint64_t v47 = *(void *)(v43 + 16);
      uint64_t v46 = *(void *)(v43 + 24);
      uint64_t v48 = *(void *)(v43 + 32);
      uint64_t v73 = *(unsigned __int8 *)(v43 + 40);
      uint64_t v74 = *(void *)(v43 + 48);
      int v75 = *(unsigned __int8 *)(v43 + 56);
      uint64_t v49 = v1 + v42;
      uint64_t v50 = v86;
      sub_1000A1288(v49, (uint64_t)&v11[*(int *)(v86 + 36)], (uint64_t (*)(void))sub_100041E44);
      *uint64_t v11 = v83;
      uint64_t v51 = v77;
      *((void *)v11 + 1) = v82;
      *((void *)v11 + 2) = v51;
      *((void *)v11 + 3) = v81;
      *((void *)v11 + 4) = v36;
      *((void *)v11 + 5) = v80;
      *((void *)v11 + 6) = v38;
      uint64_t v52 = v78;
      *((void *)v11 + 7) = v79;
      *((void *)v11 + 8) = v52;
      *((void *)v11 + 9) = v76;
      *((void *)v11 + 10) = v40;
      *((void *)v11 + 11) = v44;
      *((void *)v11 + 12) = v45;
      *((void *)v11 + 13) = v47;
      *((void *)v11 + 14) = v46;
      uint64_t v53 = v73;
      *((void *)v11 + 15) = v48;
      *((void *)v11 + 16) = v53;
      *((void *)v11 + 17) = v74;
      v11[144] = v75;
      uint64_t v54 = *(int *)(v50 + 40);
      uint64_t v55 = qword_10015D598;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55 != -1) {
        swift_once();
      }
      sub_1000050BC();
      swift_allocObject();
      swift_retain();
      *(void *)&v11[v54] = sub_100123FD0();
      int v56 = (uint64_t *)&v11[*(int *)(v50 + 44)];
      *int v56 = swift_getKeyPath();
      sub_10009EB08(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      swift_storeEnumTagMultiPayload();
      uint64_t v57 = v84;
      sub_1000A9400((uint64_t)v11, v84, (uint64_t (*)(void))type metadata accessor for RowWithChartTicker);
      sub_1000A1288(v57, v87, (uint64_t (*)(void))type metadata accessor for RowWithChartTicker);
      swift_storeEnumTagMultiPayload();
      sub_1000A8EF4();
      sub_1000A8F28();
      uint64_t v58 = (uint64_t)v89;
      sub_100124F80();
      sub_1000A1288(v58, v92, (uint64_t (*)(void))sub_1000A8CE0);
      swift_storeEnumTagMultiPayload();
      sub_1000A8D70();
      sub_1000A8EAC();
      sub_100124F80();
      sub_1000A1228(v58, (uint64_t (*)(void))sub_1000A8CE0);
      unint64_t v30 = (uint64_t (*)(void))type metadata accessor for RowWithChartTicker;
      uint64_t v31 = v57;
      break;
    case 3:
      char v59 = *(unsigned char *)(v1 + 72);
      uint64_t v60 = *(void *)(v1 + 24);
      uint64_t v61 = *(void *)(v1 + 32);
      uint64_t v62 = *(void *)(v1 + 40);
      uint64_t v63 = *(void *)(v1 + 48);
      uint64_t v64 = *(void *)(v1 + 80);
      uint64_t v65 = *(unsigned __int8 *)(v1 + 88);
      uint64_t v66 = *(void *)(v1 + 96);
      uint64_t v67 = *(void *)(v1 + 104);
      *uint64_t v3 = v59;
      *((void *)v3 + 1) = v60;
      *((void *)v3 + 2) = v61;
      *((void *)v3 + 3) = v62;
      *((void *)v3 + 4) = v63;
      *((void *)v3 + 5) = v64;
      *((void *)v3 + 6) = v65;
      *((void *)v3 + 7) = v66;
      *((void *)v3 + 8) = v67;
      uint64_t v68 = (uint64_t *)&v3[*(int *)(v88 + 28)];
      uint64_t *v68 = swift_getKeyPath();
      sub_10009EB08(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = v83;
      sub_1000A9400((uint64_t)v3, v83, (uint64_t (*)(void))type metadata accessor for LineTicker);
      sub_1000A1288(v69, v87, (uint64_t (*)(void))type metadata accessor for LineTicker);
      swift_storeEnumTagMultiPayload();
      sub_1000A8EF4();
      sub_1000A8F28();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v70 = (uint64_t)v89;
      sub_100124F80();
      sub_1000A1288(v70, v92, (uint64_t (*)(void))sub_1000A8CE0);
      swift_storeEnumTagMultiPayload();
      sub_1000A8D70();
      sub_1000A8EAC();
      sub_100124F80();
      sub_1000A1228(v70, (uint64_t (*)(void))sub_1000A8CE0);
      unint64_t v30 = (uint64_t (*)(void))type metadata accessor for LineTicker;
      uint64_t v31 = v69;
      break;
    default:
      if (qword_10015D570 != -1) {
        swift_once();
      }
      uint64_t v28 = qword_100172690;
      *(void *)id v27 = sub_100124EF0();
      *((void *)v27 + 1) = v28;
      v27[16] = 0;
      sub_1000A9200(0, &qword_100161CA8, sub_1000A852C);
      sub_1000A2AB8(v1, (uint64_t)&v27[*(int *)(v29 + 44)]);
      sub_1000A1288((uint64_t)v27, (uint64_t)v21, (uint64_t (*)(void))sub_1000A8498);
      swift_storeEnumTagMultiPayload();
      sub_1000A8E44();
      sub_1000A8E78();
      sub_100124F80();
      sub_1000A1288((uint64_t)v24, v92, (uint64_t (*)(void))sub_1000A8450);
      swift_storeEnumTagMultiPayload();
      sub_1000A8D70();
      sub_1000A8EAC();
      sub_100124F80();
      sub_1000A1228((uint64_t)v24, (uint64_t (*)(void))sub_1000A8450);
      unint64_t v30 = (uint64_t (*)(void))sub_1000A8498;
      uint64_t v31 = (uint64_t)v27;
      break;
  }
  return sub_1000A1228(v31, v30);
}

uint64_t sub_1000A2AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v37 = a2;
  sub_1000A872C();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A8608(0, &qword_100161B68, (void (*)(uint64_t))sub_1000A872C);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v36 = (uint64_t)&v34 - v11;
  sub_100053B54();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A8608(0, &qword_100161B60, (void (*)(uint64_t))sub_100053B54);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v34 = (uint64_t)&v34 - v20;
  *(void *)uint64_t v14 = sub_100124E40();
  *((void *)v14 + 1) = 0;
  v14[16] = 0;
  sub_1000A9200(0, (unint64_t *)&qword_10015FC50, sub_1000A8698);
  sub_1000A2F80(a1, (uint64_t)&v14[*(int *)(v21 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(unsigned char *)(v23 + 24) = 1;
  *(void *)(v23 + 32) = 0;
  *(unsigned char *)(v23 + 40) = 0;
  sub_1000A1288((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))sub_100053B54);
  uint64_t v24 = (uint64_t *)&v18[*(int *)(v16 + 44)];
  *uint64_t v24 = KeyPath;
  v24[1] = (uint64_t)sub_1000321B4;
  _OWORD v24[2] = v23;
  sub_1000A1228((uint64_t)v14, (uint64_t (*)(void))sub_100053B54);
  uint64_t v25 = v34;
  sub_1000A92C8((uint64_t)v18, v34, &qword_100161B60, (void (*)(uint64_t))sub_100053B54);
  *(void *)uint64_t v5 = sub_100124E40();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_1000A9200(0, &qword_100161CB0, sub_1000A87C0);
  sub_1000A35E4(v35, &v5[*(int *)(v26 + 44)]);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0;
  *(unsigned char *)(v28 + 24) = 0;
  *(void *)(v28 + 32) = 0;
  *(unsigned char *)(v28 + 40) = 1;
  sub_1000A1288((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))sub_1000A872C);
  uint64_t v29 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  *uint64_t v29 = v27;
  v29[1] = (uint64_t)sub_1000321B4;
  v29[2] = v28;
  sub_1000A1228((uint64_t)v5, (uint64_t (*)(void))sub_1000A872C);
  uint64_t v30 = v36;
  sub_1000A92C8((uint64_t)v9, v36, &qword_100161B68, (void (*)(uint64_t))sub_1000A872C);
  sub_1000A9334(v25, (uint64_t)v18, &qword_100161B60, (void (*)(uint64_t))sub_100053B54);
  sub_1000A9334(v30, (uint64_t)v9, &qword_100161B68, (void (*)(uint64_t))sub_1000A872C);
  uint64_t v31 = v37;
  sub_1000A9334((uint64_t)v18, v37, &qword_100161B60, (void (*)(uint64_t))sub_100053B54);
  sub_1000A8560();
  sub_1000A9334((uint64_t)v9, v31 + *(int *)(v32 + 48), &qword_100161B68, (void (*)(uint64_t))sub_1000A872C);
  sub_1000A93A0(v30, (uint64_t)&qword_100161B68, (uint64_t)sub_1000A872C, (uint64_t (*)(void))sub_1000A8608);
  sub_1000A93A0(v25, (uint64_t)&qword_100161B60, (uint64_t)sub_100053B54, (uint64_t (*)(void))sub_1000A8608);
  sub_1000A93A0((uint64_t)v9, (uint64_t)&qword_100161B68, (uint64_t)sub_1000A872C, (uint64_t (*)(void))sub_1000A8608);
  return sub_1000A93A0((uint64_t)v18, (uint64_t)&qword_100161B60, (uint64_t)sub_100053B54, (uint64_t (*)(void))sub_1000A8608);
}

uint64_t sub_1000A2F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v3 = sub_100125210();
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  __chkstk_darwin(v3);
  uint64_t v49 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for StockPriceView();
  __chkstk_darwin(v53);
  uint64_t v6 = (void *)((char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A83CC(0, (unint64_t *)&qword_10015FC28, (uint64_t (*)(uint64_t))type metadata accessor for StockPriceView, (uint64_t (*)(uint64_t))sub_1000A86CC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  uint64_t v54 = v7;
  __chkstk_darwin(v7);
  uint64_t v56 = (uint64_t)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v55 = (uint64_t)v47 - v10;
  uint64_t v11 = type metadata accessor for SymbolTrendView();
  uint64_t v12 = (int *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v47 - v16;
  char v18 = *(unsigned char *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v21 = *(void *)(a1 + 40);
  uint64_t v22 = *(void *)(a1 + 48);
  uint64_t KeyPath = (char *)swift_getKeyPath();
  char *v14 = v18;
  *((void *)v14 + 1) = v20;
  *((void *)v14 + 2) = v19;
  *((void *)v14 + 3) = v21;
  *((void *)v14 + 4) = v22;
  uint64_t v23 = (uint64_t *)&v14[v12[8]];
  *uint64_t v23 = swift_getKeyPath();
  sub_10009EB08(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  v47[1] = v24;
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (uint64_t *)&v14[v12[9]];
  uint64_t *v25 = swift_getKeyPath();
  sub_10009EB08(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = &v14[v12[10]];
  *(void *)uint64_t v26 = KeyPath;
  v26[8] = 0;
  uint64_t KeyPath = v17;
  sub_1000A9400((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  uint64_t v27 = qword_10015D568;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v48 = qword_100172688;
  v47[0] = *(void *)(a1 + 80);
  uint64_t v28 = *(unsigned __int8 *)(a1 + 88);
  uint64_t v30 = *(void *)(a1 + 96);
  uint64_t v29 = *(void *)(a1 + 104);
  swift_bridgeObjectRetain();
  sub_100125260();
  sub_100125160();
  swift_release();
  uint64_t v32 = v51;
  uint64_t v31 = v52;
  uint64_t v33 = v49;
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v49, enum case for Font.Leading.tight(_:), v52);
  uint64_t v34 = sub_100125240();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
  uint64_t v35 = swift_getKeyPath();
  *uint64_t v6 = v47[0];
  v6[1] = v28;
  _OWORD v6[2] = v30;
  v6[3] = v29;
  _OWORD v6[4] = v34;
  uint64_t v36 = v53;
  uint64_t v37 = (void *)((char *)v6 + *(int *)(v53 + 24));
  *uint64_t v37 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = (char *)v6 + *(int *)(v36 + 28);
  *(void *)uint64_t v38 = v35;
  v38[8] = 0;
  uint64_t v39 = *(int *)(v36 + 32);
  if (qword_10015D598 != -1) {
    swift_once();
  }
  sub_1000050BC();
  swift_allocObject();
  swift_retain();
  *(void *)((char *)v6 + v39) = sub_100123FD0();
  uint64_t v40 = v56;
  sub_1000A1288((uint64_t)v6, v56, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  *(void *)(v40 + *(int *)(v54 + 36)) = 0x3FF0000000000000;
  sub_1000A1228((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  uint64_t v41 = v55;
  sub_1000A9468(v40, v55, (unint64_t *)&qword_10015FC28, (uint64_t (*)(uint64_t))type metadata accessor for StockPriceView, (uint64_t (*)(uint64_t))sub_1000A86CC);
  uint64_t v42 = (uint64_t)KeyPath;
  sub_1000A1288((uint64_t)KeyPath, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  sub_1000A94EC(v41, v40, (unint64_t *)&qword_10015FC28, (uint64_t (*)(uint64_t))type metadata accessor for StockPriceView, (uint64_t (*)(uint64_t))sub_1000A86CC);
  uint64_t v43 = v57;
  sub_1000A1288((uint64_t)v14, v57, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  sub_100053BE8();
  uint64_t v45 = v43 + *(int *)(v44 + 48);
  *(void *)uint64_t v45 = v48;
  *(unsigned char *)(v45 + 8) = 0;
  sub_1000A94EC(v40, v43 + *(int *)(v44 + 64), (unint64_t *)&qword_10015FC28, (uint64_t (*)(uint64_t))type metadata accessor for StockPriceView, (uint64_t (*)(uint64_t))sub_1000A86CC);
  sub_1000A9570(v41, (unint64_t *)&qword_10015FC28, (uint64_t (*)(uint64_t))type metadata accessor for StockPriceView, (uint64_t (*)(uint64_t))sub_1000A86CC);
  sub_1000A1228(v42, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  sub_1000A9570(v40, (unint64_t *)&qword_10015FC28, (uint64_t (*)(uint64_t))type metadata accessor for StockPriceView, (uint64_t (*)(uint64_t))sub_1000A86CC);
  return sub_1000A1228((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
}

uint64_t sub_1000A35E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v33 = type metadata accessor for PriceChangeView();
  __chkstk_darwin(v33);
  uint64_t v4 = (uint64_t *)((char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A8864(0);
  uint64_t v31 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v34 = (uint64_t)&v29 - v9;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v32 = *(void *)(a1 + 56);
  uint64_t v11 = qword_10015D568;
  uint64_t v35 = v10;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_100172688;
  uint64_t v12 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TickerCellViewModel(0) + 44));
  uint64_t v13 = *v12;
  uint64_t v29 = *((unsigned __int8 *)v12 + 8);
  uint64_t v14 = v12[2];
  uint64_t v15 = v12[3];
  uint64_t v16 = v12[4];
  uint64_t v17 = *((unsigned __int8 *)v12 + 40);
  uint64_t v18 = v12[6];
  char v19 = *((unsigned char *)v12 + 56);
  char v20 = *(unsigned char *)(a1 + 72);
  *uint64_t v4 = swift_getKeyPath();
  sub_10009EB08(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v33;
  uint64_t v22 = (char *)v4 + *(int *)(v33 + 20);
  uint64_t v23 = v29;
  *(void *)uint64_t v22 = v13;
  *((void *)v22 + 1) = v23;
  *((void *)v22 + 2) = v14;
  *((void *)v22 + 3) = v15;
  *((void *)v22 + 4) = v16;
  *((void *)v22 + 5) = v17;
  *((void *)v22 + 6) = v18;
  v22[56] = v19;
  *((unsigned char *)v4 + *(int *)(v21 + 24)) = v20;
  sub_1000A1288((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  *(void *)&v7[*(int *)(v31 + 36)] = 0x3FF0000000000000;
  swift_bridgeObjectRetain();
  sub_1000A1228((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  uint64_t v24 = v34;
  sub_1000A9400((uint64_t)v7, v34, (uint64_t (*)(void))sub_1000A8864);
  sub_1000A1288(v24, (uint64_t)v7, (uint64_t (*)(void))sub_1000A8864);
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  *uint64_t v36 = v32;
  v25[1] = v26;
  long long v25[2] = v30;
  *((unsigned char *)v25 + 24) = 0;
  sub_1000A87F4();
  sub_1000A1288((uint64_t)v7, (uint64_t)v25 + *(int *)(v27 + 64), (uint64_t (*)(void))sub_1000A8864);
  swift_bridgeObjectRetain();
  sub_1000A1228(v24, (uint64_t (*)(void))sub_1000A8864);
  sub_1000A1228((uint64_t)v7, (uint64_t (*)(void))sub_1000A8864);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A38FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v37 = a2;
  sub_1000A8B5C();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A8608(0, &qword_100161BE0, (void (*)(uint64_t))sub_1000A8B5C);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v36 = (uint64_t)&v34 - v11;
  sub_1000A8A1C();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A8608(0, &qword_100161BB8, (void (*)(uint64_t))sub_1000A8A1C);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v34 = (uint64_t)&v34 - v20;
  *(void *)uint64_t v14 = sub_100124E40();
  *((void *)v14 + 1) = 0;
  v14[16] = 0;
  sub_1000A9200(0, &qword_100161CB8, sub_1000A8AB0);
  sub_1000A3DC4(a1, (uint64_t)&v14[*(int *)(v21 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(unsigned char *)(v23 + 24) = 1;
  *(void *)(v23 + 32) = 0;
  *(unsigned char *)(v23 + 40) = 0;
  sub_1000A1288((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))sub_1000A8A1C);
  uint64_t v24 = (uint64_t *)&v18[*(int *)(v16 + 44)];
  *uint64_t v24 = KeyPath;
  v24[1] = (uint64_t)sub_1000321B4;
  _OWORD v24[2] = v23;
  sub_1000A1228((uint64_t)v14, (uint64_t (*)(void))sub_1000A8A1C);
  uint64_t v25 = v34;
  sub_1000A92C8((uint64_t)v18, v34, &qword_100161BB8, (void (*)(uint64_t))sub_1000A8A1C);
  *(void *)uint64_t v5 = sub_100124E40();
  *((void *)v5 + 1) = 0;
  v5[16] = 0;
  sub_1000A9200(0, &qword_100161CC0, sub_1000A8BF0);
  sub_1000A42B8(v35, (uint64_t)&v5[*(int *)(v26 + 44)]);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 0;
  *(unsigned char *)(v28 + 24) = 0;
  *(void *)(v28 + 32) = 0;
  *(unsigned char *)(v28 + 40) = 1;
  sub_1000A1288((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))sub_1000A8B5C);
  uint64_t v29 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  *uint64_t v29 = v27;
  v29[1] = (uint64_t)sub_1000321B4;
  v29[2] = v28;
  sub_1000A1228((uint64_t)v5, (uint64_t (*)(void))sub_1000A8B5C);
  uint64_t v30 = v36;
  sub_1000A92C8((uint64_t)v9, v36, &qword_100161BE0, (void (*)(uint64_t))sub_1000A8B5C);
  sub_1000A9334(v25, (uint64_t)v18, &qword_100161BB8, (void (*)(uint64_t))sub_1000A8A1C);
  sub_1000A9334(v30, (uint64_t)v9, &qword_100161BE0, (void (*)(uint64_t))sub_1000A8B5C);
  uint64_t v31 = v37;
  sub_1000A9334((uint64_t)v18, v37, &qword_100161BB8, (void (*)(uint64_t))sub_1000A8A1C);
  sub_1000A8974();
  sub_1000A9334((uint64_t)v9, v31 + *(int *)(v32 + 48), &qword_100161BE0, (void (*)(uint64_t))sub_1000A8B5C);
  sub_1000A93A0(v30, (uint64_t)&qword_100161BE0, (uint64_t)sub_1000A8B5C, (uint64_t (*)(void))sub_1000A8608);
  sub_1000A93A0(v25, (uint64_t)&qword_100161BB8, (uint64_t)sub_1000A8A1C, (uint64_t (*)(void))sub_1000A8608);
  sub_1000A93A0((uint64_t)v9, (uint64_t)&qword_100161BE0, (uint64_t)sub_1000A8B5C, (uint64_t (*)(void))sub_1000A8608);
  return sub_1000A93A0((uint64_t)v18, (uint64_t)&qword_100161BB8, (uint64_t)sub_1000A8A1C, (uint64_t (*)(void))sub_1000A8608);
}

uint64_t sub_1000A3DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v49 = type metadata accessor for PriceChangeView();
  __chkstk_darwin(v49);
  uint64_t v50 = (uint64_t *)((char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A8864(0);
  uint64_t v48 = v4;
  __chkstk_darwin(v4);
  uint64_t v53 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v52 = (uint64_t)&v45 - v7;
  uint64_t v8 = type metadata accessor for SymbolTrendView();
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v45 - v13;
  char v15 = *(unsigned char *)(a1 + 72);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v11 = v15;
  *((void *)v11 + 1) = v17;
  *((void *)v11 + 2) = v16;
  *((void *)v11 + 3) = v18;
  *((void *)v11 + 4) = v19;
  uint64_t v21 = (uint64_t *)&v11[v9[8]];
  uint64_t *v21 = swift_getKeyPath();
  sub_10009EB08(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)&v11[v9[9]];
  *uint64_t v22 = swift_getKeyPath();
  sub_10009EB08(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = &v11[v9[10]];
  *(void *)uint64_t v23 = KeyPath;
  v23[8] = 0;
  uint64_t v51 = v14;
  sub_1000A9400((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  uint64_t v24 = qword_10015D568;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_100172688;
  uint64_t v25 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TickerCellViewModel(0) + 44));
  uint64_t v46 = *v25;
  uint64_t v26 = *((unsigned __int8 *)v25 + 8);
  uint64_t v28 = v25[2];
  uint64_t v27 = v25[3];
  uint64_t v29 = v25[4];
  uint64_t v30 = *((unsigned __int8 *)v25 + 40);
  uint64_t v31 = v25[6];
  char v32 = *((unsigned char *)v25 + 56);
  char v33 = *(unsigned char *)(a1 + 72);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = (uint64_t)v50;
  *uint64_t v50 = v34;
  sub_10009EB08(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = v49;
  uint64_t v37 = v35 + *(int *)(v49 + 20);
  *(void *)uint64_t v37 = v46;
  *(void *)(v37 + 8) = v26;
  *(void *)(v37 + 16) = v28;
  *(void *)(v37 + 24) = v27;
  *(void *)(v37 + 32) = v29;
  *(void *)(v37 + 40) = v30;
  *(void *)(v37 + 48) = v31;
  *(unsigned char *)(v37 + 56) = v32;
  *(unsigned char *)(v35 + *(int *)(v36 + 24)) = v33;
  uint64_t v38 = v53;
  sub_1000A1288(v35, v53, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  *(void *)(v38 + *(int *)(v48 + 36)) = 0x3FF0000000000000;
  swift_bridgeObjectRetain();
  sub_1000A1228(v35, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  uint64_t v39 = v52;
  sub_1000A9400(v38, v52, (uint64_t (*)(void))sub_1000A8864);
  uint64_t v40 = (uint64_t)v51;
  sub_1000A1288((uint64_t)v51, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  sub_1000A1288(v39, v38, (uint64_t (*)(void))sub_1000A8864);
  uint64_t v41 = v54;
  sub_1000A1288((uint64_t)v11, v54, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  sub_1000A8AE4();
  uint64_t v43 = v41 + *(int *)(v42 + 48);
  *(void *)uint64_t v43 = v47;
  *(unsigned char *)(v43 + 8) = 0;
  sub_1000A1288(v38, v41 + *(int *)(v42 + 64), (uint64_t (*)(void))sub_1000A8864);
  sub_1000A1228(v39, (uint64_t (*)(void))sub_1000A8864);
  sub_1000A1228(v40, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  sub_1000A1228(v38, (uint64_t (*)(void))sub_1000A8864);
  return sub_1000A1228((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
}

uint64_t sub_1000A42B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v56 = type metadata accessor for PriceChangeView();
  __chkstk_darwin(v56);
  uint64_t v57 = (uint64_t *)((char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000A8864(0);
  uint64_t v55 = v4;
  __chkstk_darwin(v4);
  uint64_t v58 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A83CC(0, &qword_100161C00, (uint64_t (*)(uint64_t))sub_1000A8864, (uint64_t (*)(uint64_t))sub_100089EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  uint64_t v54 = v6;
  __chkstk_darwin(v6);
  uint64_t v60 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v59 = (uint64_t)&v50 - v9;
  uint64_t v10 = type metadata accessor for StockPriceView();
  uint64_t v11 = (int *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v17 = *(void *)(a1 + 80);
  uint64_t v18 = *(unsigned __int8 *)(a1 + 88);
  uint64_t v20 = *(void *)(a1 + 96);
  uint64_t v19 = *(void *)(a1 + 104);
  swift_bridgeObjectRetain();
  sub_100125250();
  sub_1001251B0();
  uint64_t v21 = sub_1001251F0();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v13 = v17;
  v13[1] = v18;
  v13[2] = v20;
  v13[3] = v19;
  void v13[4] = v21;
  uint64_t v23 = (void *)((char *)v13 + v11[8]);
  *uint64_t v23 = swift_getKeyPath();
  sub_10009EB08(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (char *)v13 + v11[9];
  *(void *)uint64_t v24 = KeyPath;
  v24[8] = 0;
  uint64_t v25 = v11[10];
  if (qword_10015D598 != -1) {
    swift_once();
  }
  sub_1000050BC();
  swift_allocObject();
  swift_retain();
  *(void *)((char *)v13 + v25) = sub_100123FD0();
  sub_1000A9400((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  uint64_t v53 = v16;
  if (qword_10015D568 != -1) {
    swift_once();
  }
  uint64_t v52 = qword_100172688;
  uint64_t v26 = (uint64_t *)(a1 + *(int *)(type metadata accessor for TickerCellViewModel(0) + 44));
  uint64_t v51 = *v26;
  uint64_t v27 = *((unsigned __int8 *)v26 + 8);
  uint64_t v29 = v26[2];
  uint64_t v28 = v26[3];
  uint64_t v30 = v26[4];
  uint64_t v31 = *((unsigned __int8 *)v26 + 40);
  uint64_t v32 = v26[6];
  uint64_t v33 = a1;
  char v34 = *((unsigned char *)v26 + 56);
  char v35 = *(unsigned char *)(v33 + 72);
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = (uint64_t)v57;
  *uint64_t v57 = v36;
  sub_10009EB08(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = v56;
  uint64_t v39 = v37 + *(int *)(v56 + 20);
  *(void *)uint64_t v39 = v51;
  *(void *)(v39 + 8) = v27;
  *(void *)(v39 + 16) = v29;
  *(void *)(v39 + 24) = v28;
  *(void *)(v39 + 32) = v30;
  *(void *)(v39 + 40) = v31;
  *(void *)(v39 + 48) = v32;
  *(unsigned char *)(v39 + 56) = v34;
  *(unsigned char *)(v37 + *(int *)(v38 + 24)) = v35;
  uint64_t v40 = v58;
  sub_1000A1288(v37, v58, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  *(void *)(v40 + *(int *)(v55 + 36)) = 0x3FF0000000000000;
  swift_bridgeObjectRetain();
  sub_1000A1228(v37, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  uint64_t v41 = swift_getKeyPath();
  uint64_t v42 = v60;
  sub_1000A1288(v40, v60, (uint64_t (*)(void))sub_1000A8864);
  uint64_t v43 = (uint64_t *)(v42 + *(int *)(v54 + 36));
  *uint64_t v43 = v41;
  v43[1] = (uint64_t)sub_1000A4904;
  v43[2] = 0;
  sub_1000A1228(v40, (uint64_t (*)(void))sub_1000A8864);
  uint64_t v44 = v59;
  sub_1000A9468(v42, v59, &qword_100161C00, (uint64_t (*)(uint64_t))sub_1000A8864, (uint64_t (*)(uint64_t))sub_100089EE8);
  uint64_t v45 = (uint64_t)v53;
  sub_1000A1288((uint64_t)v53, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  sub_1000A94EC(v44, v42, &qword_100161C00, (uint64_t (*)(uint64_t))sub_1000A8864, (uint64_t (*)(uint64_t))sub_100089EE8);
  uint64_t v46 = v61;
  sub_1000A1288((uint64_t)v13, v61, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  sub_1000A8C24();
  uint64_t v48 = v46 + *(int *)(v47 + 48);
  *(void *)uint64_t v48 = v52;
  *(unsigned char *)(v48 + 8) = 0;
  sub_1000A94EC(v42, v46 + *(int *)(v47 + 64), &qword_100161C00, (uint64_t (*)(uint64_t))sub_1000A8864, (uint64_t (*)(uint64_t))sub_100089EE8);
  sub_1000A9570(v44, &qword_100161C00, (uint64_t (*)(uint64_t))sub_1000A8864, (uint64_t (*)(uint64_t))sub_100089EE8);
  sub_1000A1228(v45, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  sub_1000A9570(v42, &qword_100161C00, (uint64_t (*)(uint64_t))sub_1000A8864, (uint64_t (*)(uint64_t))sub_100089EE8);
  return sub_1000A1228((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StockPriceView);
}

uint64_t sub_1000A4904(uint64_t a1)
{
  uint64_t v2 = sub_1001238A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, a1, v2, v7);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  uint64_t v11 = enum case for PriceChangeDisplay.currency(_:);
  if (v10 == enum case for PriceChangeDisplay.currency(_:))
  {
    uint64_t v11 = enum case for PriceChangeDisplay.percentage(_:);
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 104))(v9, v11, v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v9, v2);
  }
  if (v10 == enum case for PriceChangeDisplay.percentage(_:)) {
    goto LABEL_5;
  }
  uint64_t v11 = enum case for PriceChangeDisplay.percentage(_:);
  if (v10 == enum case for PriceChangeDisplay.marketCapitalization(_:)) {
    goto LABEL_5;
  }
  uint64_t result = sub_100126520();
  __break(1u);
  return result;
}

BOOL sub_1000A4ABC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_100123670();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  __n128 v7 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A5A10(0, &qword_100161A58, sub_100029068);
  uint64_t v112 = v8;
  __chkstk_darwin(v8);
  int v10 = (char *)&v104 - v9;
  sub_100029068(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v110 = (uint64_t)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v115 = (uint64_t)&v104 - v14;
  __chkstk_darwin(v15);
  uint64_t v113 = (uint64_t)&v104 - v16;
  uint64_t v118 = sub_100123150();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v111 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A5A10(0, &qword_100161A60, sub_10009EAD4);
  uint64_t v116 = v18;
  __chkstk_darwin(v18);
  uint64_t v121 = (uint64_t)&v104 - v19;
  sub_10009EAD4(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v114 = (uint64_t)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v125 = (uint64_t)&v104 - v23;
  __chkstk_darwin(v24);
  uint64_t v120 = (uint64_t)&v104 - v25;
  uint64_t v123 = type metadata accessor for PreparedSparkline(0);
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v119 = (uint64_t)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A5A10(0, &qword_100161A68, (void (*)(uint64_t))sub_100041E44);
  uint64_t v28 = v27;
  __chkstk_darwin(v27);
  uint64_t v124 = (uint64_t)&v104 - v29;
  sub_100041E44();
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  char v35 = (char *)&v104 - v34;
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v104 - v37;
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v108 = v7;
  uint64_t v107 = v5;
  double v109 = v10;
  uint64_t v106 = v4;
  if (*((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2)
    || (v39 = sub_100126530(), BOOL result = 0, (v39 & 1) != 0))
  {
    if ((uint64_t v41 = *((void *)a1 + 5),
          uint64_t v42 = *((void *)a1 + 6),
          uint64_t v43 = *((void *)a2 + 5),
          uint64_t v44 = *((void *)a2 + 6),
          *((void *)a1 + 3) == *((void *)a2 + 3))
      && *((void *)a1 + 4) == *((void *)a2 + 4)
      || (v45 = sub_100126530(), BOOL result = 0, (v45 & 1) != 0))
    {
      if (v41 == v43 && v42 == v44 || (v46 = sub_100126530(), BOOL result = 0, (v46 & 1) != 0))
      {
        if (*((void *)a1 + 7) == *((void *)a2 + 7) && *((void *)a1 + 8) == *((void *)a2 + 8)
          || (v47 = sub_100126530(), BOOL result = 0, (v47 & 1) != 0))
        {
          int v48 = a1[72];
          int v49 = a2[72];
          if (v48 == 2)
          {
            if (v49 != 2) {
              return 0;
            }
          }
          else
          {
            if (v49 == 2) {
              return 0;
            }
            if (v48) {
              uint64_t v50 = 1853321060;
            }
            else {
              uint64_t v50 = 28789;
            }
            if (v48) {
              unint64_t v51 = 0xE400000000000000;
            }
            else {
              unint64_t v51 = 0xE200000000000000;
            }
            if (v49) {
              uint64_t v52 = 1853321060;
            }
            else {
              uint64_t v52 = 28789;
            }
            if (v49) {
              unint64_t v53 = 0xE400000000000000;
            }
            else {
              unint64_t v53 = 0xE200000000000000;
            }
            if (v50 == v52 && v51 == v53)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v54 = sub_100126530();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              BOOL result = 0;
              if ((v54 & 1) == 0) {
                return result;
              }
            }
          }
          if (!sub_1000B2CB8(*((void *)a1 + 10), a1[88], *((void *)a1 + 12), *((void *)a1 + 13), *((void *)a2 + 10), a2[88], *((void *)a2 + 12), *((void *)a2 + 13)))return 0; {
          uint64_t v55 = type metadata accessor for TickerCellViewModel(0);
          }
          sub_1000A1288((uint64_t)&a1[*(int *)(v55 + 40)], (uint64_t)v38, (uint64_t (*)(void))sub_100041E44);
          uint64_t v105 = v55;
          sub_1000A1288((uint64_t)&a2[*(int *)(v55 + 40)], (uint64_t)v35, (uint64_t (*)(void))sub_100041E44);
          uint64_t v56 = v124;
          uint64_t v57 = v124 + *(int *)(v28 + 48);
          sub_1000A1288((uint64_t)v38, v124, (uint64_t (*)(void))sub_100041E44);
          sub_1000A1288((uint64_t)v35, v57, (uint64_t (*)(void))sub_100041E44);
          uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
          uint64_t v59 = v123;
          if (v58(v56, 1, v123) == 1)
          {
            sub_1000A1228((uint64_t)v35, (uint64_t (*)(void))sub_100041E44);
            sub_1000A1228((uint64_t)v38, (uint64_t (*)(void))sub_100041E44);
            int v60 = v58(v57, 1, v59);
            uint64_t v61 = v125;
            if (v60 == 1)
            {
              sub_1000A1228(v56, (uint64_t (*)(void))sub_100041E44);
LABEL_43:
              uint64_t v69 = v105;
              uint64_t v70 = &a1[*(int *)(v105 + 44)];
              long long v71 = *((_OWORD *)v70 + 2);
              v126[1] = *((_OWORD *)v70 + 1);
              v127[0] = v71;
              *(_OWORD *)((char *)v127 + 9) = *(_OWORD *)(v70 + 41);
              v126[0] = *(_OWORD *)v70;
              uint64_t v72 = &a2[*(int *)(v105 + 44)];
              *(_OWORD *)&v129[9] = *(_OWORD *)(v72 + 41);
              long long v73 = *((_OWORD *)v72 + 2);
              v128[1] = *((_OWORD *)v72 + 1);
              *(_OWORD *)unint64_t v129 = v73;
              v128[0] = *(_OWORD *)v72;
              if ((sub_1000D0BF0((uint64_t)v126, (uint64_t)v128) & 1) == 0) {
                return 0;
              }
              uint64_t v74 = v120;
              sub_1000A1288((uint64_t)&a1[*(int *)(v69 + 48)], v120, (uint64_t (*)(void))sub_10009EAD4);
              sub_1000A1288((uint64_t)&a2[*(int *)(v69 + 48)], v61, (uint64_t (*)(void))sub_10009EAD4);
              uint64_t v75 = v61;
              uint64_t v76 = v121;
              uint64_t v77 = v121 + *(int *)(v116 + 48);
              sub_1000A1288(v74, v121, (uint64_t (*)(void))sub_10009EAD4);
              sub_1000A1288(v75, v77, (uint64_t (*)(void))sub_10009EAD4);
              uint64_t v78 = v117;
              uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48);
              uint64_t v80 = v118;
              if (v79(v76, 1, v118) == 1)
              {
                sub_1000A1228(v75, (uint64_t (*)(void))sub_10009EAD4);
                sub_1000A1228(v74, (uint64_t (*)(void))sub_10009EAD4);
                int v81 = v79(v77, 1, v80);
                uint64_t v82 = (uint64_t)v109;
                uint64_t v83 = v107;
                uint64_t v84 = v108;
                if (v81 == 1)
                {
                  sub_1000A1228(v121, (uint64_t (*)(void))sub_10009EAD4);
LABEL_51:
                  uint64_t v93 = v105;
                  uint64_t v94 = (uint64_t)&a1[*(int *)(v105 + 52)];
                  uint64_t v95 = v113;
                  sub_1000A1288(v94, v113, (uint64_t (*)(void))sub_100029068);
                  uint64_t v96 = (uint64_t)&a2[*(int *)(v93 + 52)];
                  uint64_t v97 = v115;
                  sub_1000A1288(v96, v115, (uint64_t (*)(void))sub_100029068);
                  uint64_t v98 = v82 + *(int *)(v112 + 48);
                  sub_1000A1288(v95, v82, (uint64_t (*)(void))sub_100029068);
                  sub_1000A1288(v97, v98, (uint64_t (*)(void))sub_100029068);
                  uint64_t v99 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
                  uint64_t v100 = v106;
                  if (v99(v82, 1, v106) == 1)
                  {
                    sub_1000A1228(v97, (uint64_t (*)(void))sub_100029068);
                    sub_1000A1228(v95, (uint64_t (*)(void))sub_100029068);
                    if (v99(v98, 1, v100) == 1)
                    {
                      sub_1000A1228(v82, (uint64_t (*)(void))sub_100029068);
                      return 1;
                    }
                    goto LABEL_56;
                  }
                  uint64_t v101 = v110;
                  sub_1000A1288(v82, v110, (uint64_t (*)(void))sub_100029068);
                  if (v99(v98, 1, v100) == 1)
                  {
                    sub_1000A1228(v115, (uint64_t (*)(void))sub_100029068);
                    sub_1000A1228(v95, (uint64_t (*)(void))sub_100029068);
                    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v101, v100);
LABEL_56:
                    uint64_t v63 = &qword_100161A58;
                    uint64_t v64 = sub_100029068;
                    uint64_t v65 = v82;
                    goto LABEL_41;
                  }
                  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(v84, v98, v100);
                  sub_1000A5A70(&qword_100161A70, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
                  char v102 = sub_100125A90();
                  char v103 = *(void (**)(char *, uint64_t))(v83 + 8);
                  v103(v84, v100);
                  sub_1000A1228(v115, (uint64_t (*)(void))sub_100029068);
                  sub_1000A1228(v95, (uint64_t (*)(void))sub_100029068);
                  v103((char *)v101, v100);
                  sub_1000A1228(v82, (uint64_t (*)(void))sub_100029068);
                  return (v102 & 1) != 0;
                }
              }
              else
              {
                uint64_t v85 = v114;
                sub_1000A1288(v76, v114, (uint64_t (*)(void))sub_10009EAD4);
                int v86 = v79(v77, 1, v80);
                uint64_t v82 = (uint64_t)v109;
                uint64_t v87 = v80;
                uint64_t v88 = v108;
                if (v86 != 1)
                {
                  uint64_t v89 = v111;
                  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v111, v77, v87);
                  sub_1000A5A70(&qword_100161A78, (void (*)(uint64_t))&type metadata accessor for URL);
                  uint64_t v90 = v88;
                  LODWORD(v124) = sub_100125A90();
                  uint64_t v91 = *(void (**)(char *, uint64_t))(v78 + 8);
                  uint64_t v92 = v89;
                  uint64_t v83 = v107;
                  v91(v92, v87);
                  sub_1000A1228(v125, (uint64_t (*)(void))sub_10009EAD4);
                  sub_1000A1228(v120, (uint64_t (*)(void))sub_10009EAD4);
                  uint64_t v84 = v90;
                  v91((char *)v85, v87);
                  sub_1000A1228(v121, (uint64_t (*)(void))sub_10009EAD4);
                  if ((v124 & 1) == 0) {
                    return 0;
                  }
                  goto LABEL_51;
                }
                sub_1000A1228(v125, (uint64_t (*)(void))sub_10009EAD4);
                sub_1000A1228(v120, (uint64_t (*)(void))sub_10009EAD4);
                (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v85, v80);
              }
              uint64_t v63 = &qword_100161A60;
              uint64_t v64 = sub_10009EAD4;
              uint64_t v65 = v121;
LABEL_41:
              sub_1000A93A0(v65, (uint64_t)v63, (uint64_t)v64, (uint64_t (*)(void))sub_1000A5A10);
              return 0;
            }
          }
          else
          {
            sub_1000A1288(v56, (uint64_t)v32, (uint64_t (*)(void))sub_100041E44);
            int v62 = v58(v57, 1, v59);
            uint64_t v61 = v125;
            if (v62 != 1)
            {
              uint64_t v66 = v57;
              uint64_t v67 = v119;
              sub_1000A9400(v66, v119, type metadata accessor for PreparedSparkline);
              char v68 = sub_10008EA50(v32, v67);
              sub_1000A1228(v67, type metadata accessor for PreparedSparkline);
              sub_1000A1228((uint64_t)v35, (uint64_t (*)(void))sub_100041E44);
              sub_1000A1228((uint64_t)v38, (uint64_t (*)(void))sub_100041E44);
              sub_1000A1228((uint64_t)v32, type metadata accessor for PreparedSparkline);
              sub_1000A1228(v56, (uint64_t (*)(void))sub_100041E44);
              if ((v68 & 1) == 0) {
                return 0;
              }
              goto LABEL_43;
            }
            sub_1000A1228((uint64_t)v35, (uint64_t (*)(void))sub_100041E44);
            sub_1000A1228((uint64_t)v38, (uint64_t (*)(void))sub_100041E44);
            sub_1000A1228((uint64_t)v32, type metadata accessor for PreparedSparkline);
          }
          uint64_t v63 = &qword_100161A68;
          uint64_t v64 = sub_100041E44;
          uint64_t v65 = v56;
          goto LABEL_41;
        }
      }
    }
  }
  return result;
}

void sub_1000A5A10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1000A5A70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TickerCellViewModel.CellType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000A5B84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickerCellViewModel.CellType()
{
  return &type metadata for TickerCellViewModel.CellType;
}

unint64_t sub_1000A5BC0()
{
  unint64_t result = qword_100161A80;
  if (!qword_100161A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161A80);
  }
  return result;
}

void *sub_1000A5C14(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v10 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = type metadata accessor for TickerCellViewModel(0);
    uint64_t v12 = *(int *)(v11 + 40);
    __dst = (void *)((char *)v4 + v12);
    uint64_t v55 = (int *)v11;
    unint64_t v53 = (uint64_t *)((char *)a2 + v12);
    uint64_t v13 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v52 = *((void *)v13 - 1);
    uint64_t v14 = *(unsigned int (**)(void *, uint64_t, int *))(v52 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v53, 1, v13))
    {
      sub_100041E44();
      memcpy(__dst, v53, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      void *__dst = *v53;
      uint64_t v17 = v13[5];
      unint64_t v51 = (char *)__dst + v17;
      uint64_t v18 = (char *)v53 + v17;
      uint64_t v19 = sub_1001232B0();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v51, v18, v19);
      sub_10002FE38();
      v20(&v51[*(int *)(v21 + 36)], &v18[*(int *)(v21 + 36)], v19);
      uint64_t v22 = v13[6];
      uint64_t v23 = (char *)__dst + v22;
      uint64_t v24 = (char *)v53 + v22;
      uint64_t v25 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      *(_OWORD *)((char *)__dst + v13[7]) = *(_OWORD *)((char *)v53 + v13[7]);
      uint64_t v26 = v13[8];
      uint64_t v27 = (char *)__dst + v26;
      uint64_t v28 = (char *)v53 + v26;
      *(void *)uint64_t v27 = *(void *)v28;
      unsigned char v27[8] = v28[8];
      *((unsigned char *)__dst + v13[9]) = *((unsigned char *)v53 + v13[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v52 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v29 = v55[11];
    uint64_t v30 = (char *)v4 + v29;
    uint64_t v31 = (uint64_t)a2 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = *(unsigned char *)(v31 + 8);
    uint64_t v32 = *(void *)(v31 + 24);
    *((void *)v30 + 2) = *(void *)(v31 + 16);
    *((void *)v30 + 3) = v32;
    *((void *)v30 + 4) = *(void *)(v31 + 32);
    v30[40] = *(unsigned char *)(v31 + 40);
    *((void *)v30 + 6) = *(void *)(v31 + 48);
    v30[56] = *(unsigned char *)(v31 + 56);
    uint64_t v33 = v55[12];
    uint64_t v34 = (char *)v4 + v33;
    char v35 = (char *)a2 + v33;
    uint64_t v36 = sub_100123150();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain();
    if (v38(v35, 1, v36))
    {
      sub_10009EAD4(0);
      memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    uint64_t v40 = v55[13];
    uint64_t v41 = (char *)v4 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = sub_100123670();
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      sub_100029068(0);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    uint64_t v46 = *(int *)(a3 + 20);
    char v47 = (void *)((char *)v4 + v46);
    int v48 = (uint64_t *)((char *)a2 + v46);
    sub_10009EB08(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v49 = sub_1001238A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    }
    else
    {
      *char v47 = *v48;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_1000A61D0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned int v4 = (int *)type metadata accessor for TickerCellViewModel(0);
  uint64_t v5 = a1 + v4[10];
  uint64_t v6 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_1001232B0();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v7, v8);
    sub_10002FE38();
    v9(v7 + *(int *)(v10 + 36), v8);
    uint64_t v11 = v5 + *(int *)(v6 + 24);
    uint64_t v12 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + v4[12];
  uint64_t v14 = sub_100123150();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  uint64_t v16 = a1 + v4[13];
  uint64_t v17 = sub_100123670();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  uint64_t v19 = a1 + *(int *)(a2 + 20);
  sub_10009EB08(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_1001238A0();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
    return v21(v19, v20);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1000A6524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = type metadata accessor for TickerCellViewModel(0);
  uint64_t v11 = *(int *)(v10 + 40);
  __dst = (void *)(a1 + v11);
  unint64_t v53 = (int *)v10;
  unint64_t v51 = (void *)(a2 + v11);
  uint64_t v12 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v50 = *((void *)v12 - 1);
  uint64_t v13 = *(unsigned int (**)(void *, uint64_t, int *))(v50 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v51, 1, v12))
  {
    sub_100041E44();
    memcpy(__dst, v51, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    void *__dst = *v51;
    uint64_t v15 = v12[5];
    uint64_t v49 = (char *)__dst + v15;
    uint64_t v16 = (char *)v51 + v15;
    uint64_t v17 = sub_1001232B0();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v49, v16, v17);
    sub_10002FE38();
    v18(&v49[*(int *)(v19 + 36)], &v16[*(int *)(v19 + 36)], v17);
    uint64_t v20 = v12[6];
    uint64_t v21 = (char *)__dst + v20;
    uint64_t v22 = (char *)v51 + v20;
    uint64_t v23 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    *(_OWORD *)((char *)__dst + v12[7]) = *(_OWORD *)((char *)v51 + v12[7]);
    uint64_t v24 = v12[8];
    uint64_t v25 = (char *)__dst + v24;
    uint64_t v26 = (char *)v51 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    void v25[8] = v26[8];
    *((unsigned char *)__dst + v12[9]) = *((unsigned char *)v51 + v12[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v50 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v27 = v53[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  uint64_t v30 = *(void *)(v29 + 24);
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  *(void *)(v28 + 24) = v30;
  *(void *)(v28 + 32) = *(void *)(v29 + 32);
  *(unsigned char *)(v28 + 40) = *(unsigned char *)(v29 + 40);
  *(void *)(v28 + 48) = *(void *)(v29 + 48);
  *(unsigned char *)(v28 + 56) = *(unsigned char *)(v29 + 56);
  uint64_t v31 = v53[12];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = sub_100123150();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  if (v36(v33, 1, v34))
  {
    sub_10009EAD4(0);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  uint64_t v38 = v53[13];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (const void *)(a2 + v38);
  uint64_t v41 = sub_100123670();
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    sub_100029068(0);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v39, v40, v41);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  uint64_t v44 = *(int *)(a3 + 20);
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  sub_10009EB08(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = sub_1001238A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  else
  {
    *uint64_t v45 = *v46;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000A6A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v76 = (int *)type metadata accessor for TickerCellViewModel(0);
  uint64_t v6 = v76[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *uint64_t v7 = *v8;
      uint64_t v14 = v9[5];
      long long v73 = (char *)v7 + v14;
      uint64_t v74 = (char *)v8 + v14;
      uint64_t v15 = sub_1001232B0();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v73, v74, v15);
      sub_10002FE38();
      v16(&v73[*(int *)(v17 + 36)], &v74[*(int *)(v17 + 36)], v15);
      uint64_t v18 = v9[6];
      uint64_t v19 = (char *)v7 + v18;
      uint64_t v20 = (char *)v8 + v18;
      uint64_t v21 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      *(_OWORD *)((char *)v7 + v9[7]) = *(_OWORD *)((char *)v8 + v9[7]);
      uint64_t v22 = v9[8];
      uint64_t v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      char v25 = v24[8];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v25;
      *((unsigned char *)v7 + v9[9]) = *((unsigned char *)v8 + v9[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1000A1228((uint64_t)v7, type metadata accessor for PreparedSparkline);
LABEL_6:
    sub_100041E44();
    memcpy(v7, v8, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = v9[5];
  uint64_t v57 = (char *)v7 + v56;
  uint64_t v58 = (char *)v8 + v56;
  uint64_t v59 = sub_1001232B0();
  int v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 24);
  v60(v57, v58, v59);
  sub_10002FE38();
  v60(&v57[*(int *)(v61 + 36)], &v58[*(int *)(v61 + 36)], v59);
  uint64_t v62 = v9[6];
  uint64_t v63 = (char *)v7 + v62;
  uint64_t v64 = (char *)v8 + v62;
  uint64_t v65 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
  uint64_t v66 = v9[7];
  uint64_t v67 = (void *)((char *)v7 + v66);
  char v68 = (void *)((char *)v8 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  uint64_t v69 = v9[8];
  uint64_t v70 = (char *)v7 + v69;
  long long v71 = (char *)v8 + v69;
  char v72 = v71[8];
  *(void *)uint64_t v70 = *(void *)v71;
  v70[8] = v72;
  *((unsigned char *)v7 + v9[9]) = *((unsigned char *)v8 + v9[9]);
LABEL_7:
  uint64_t v27 = v76[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)(a2 + v27);
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v28 = v30;
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  *(void *)(v28 + 24) = *(void *)(v29 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v29 + 32);
  *(unsigned char *)(v28 + 40) = *(unsigned char *)(v29 + 40);
  *(void *)(v28 + 32) = v31;
  uint64_t v32 = *(void *)(v29 + 48);
  *(unsigned char *)(v28 + 56) = *(unsigned char *)(v29 + 56);
  *(void *)(v28 + 48) = v32;
  uint64_t v33 = v76[12];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = sub_100123150();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v34, v36);
LABEL_12:
    sub_10009EAD4(0);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v37 + 24))(v34, v35, v36);
LABEL_13:
  uint64_t v42 = v76[13];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  uint64_t v45 = sub_100123670();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  int v48 = v47(v43, 1, v45);
  int v49 = v47(v44, 1, v45);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_20;
    }
LABEL_19:
    sub_100029068(0);
    memcpy(v43, v44, *(void *)(*(void *)(v50 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_20;
  }
  if (v49)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v43, v44, v45);
  if (a1 == a2) {
    return a1;
  }
LABEL_20:
  uint64_t v51 = *(int *)(a3 + 20);
  uint64_t v52 = (void *)(a1 + v51);
  unint64_t v53 = (void *)(a2 + v51);
  sub_1000A9128(a1 + v51, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  sub_10009EB08(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v54 = sub_1001238A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  }
  else
  {
    *uint64_t v52 = *v53;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000A7288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  uint64_t v6 = (int *)type metadata accessor for TickerCellViewModel(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    sub_100041E44();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v13 = v10[5];
    uint64_t v14 = (char *)v8 + v13;
    int v48 = (char *)v9 + v13;
    uint64_t v15 = sub_1001232B0();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    v16(v14, v48, v15);
    sub_10002FE38();
    v16(&v14[*(int *)(v17 + 36)], &v48[*(int *)(v17 + 36)], v15);
    uint64_t v18 = v10[6];
    uint64_t v19 = (char *)v8 + v18;
    uint64_t v20 = (char *)v9 + v18;
    uint64_t v21 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(_OWORD *)((char *)v8 + v10[7]) = *(_OWORD *)((char *)v9 + v10[7]);
    uint64_t v22 = v10[8];
    uint64_t v23 = (char *)v8 + v22;
    uint64_t v24 = (char *)v9 + v22;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    *((unsigned char *)v8 + v10[9]) = *((unsigned char *)v9 + v10[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v25 = v6[11];
  uint64_t v26 = (_OWORD *)(a1 + v25);
  uint64_t v27 = (_OWORD *)(a2 + v25);
  long long v28 = v27[1];
  _OWORD *v26 = *v27;
  v26[1] = v28;
  v26[2] = v27[2];
  *(_OWORD *)((char *)v26 + 41) = *(_OWORD *)((char *)v27 + 41);
  uint64_t v29 = v6[12];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v32 = sub_100123150();
  uint64_t v33 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    sub_10009EAD4(0);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v35 = v6[13];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = sub_100123670();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_100029068(0);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  uint64_t v41 = *(int *)(a3 + 20);
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (const void *)(a2 + v41);
  sub_10009EB08(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v45 = v44;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v46 = sub_1001238A0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 32))(v42, v43, v46);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000A7790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  uint64_t v76 = (int *)type metadata accessor for TickerCellViewModel(0);
  uint64_t v10 = v76[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v11 = *v12;
      uint64_t v18 = v13[5];
      uint64_t v19 = (char *)v11 + v18;
      long long v73 = (char *)v11 + v18;
      uint64_t v74 = (char *)v12 + v18;
      uint64_t v20 = sub_1001232B0();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v21(v19, v74, v20);
      sub_10002FE38();
      v21(&v73[*(int *)(v22 + 36)], &v74[*(int *)(v22 + 36)], v20);
      uint64_t v23 = v13[6];
      uint64_t v24 = (char *)v11 + v23;
      uint64_t v25 = (char *)v12 + v23;
      uint64_t v26 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(_OWORD *)((char *)v11 + v13[7]) = *(_OWORD *)((char *)v12 + v13[7]);
      uint64_t v27 = v13[8];
      long long v28 = (char *)v11 + v27;
      uint64_t v29 = (char *)v12 + v27;
      *(void *)long long v28 = *(void *)v29;
      v28[8] = v29[8];
      *((unsigned char *)v11 + v13[9]) = *((unsigned char *)v12 + v13[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1000A1228((uint64_t)v11, type metadata accessor for PreparedSparkline);
LABEL_6:
    sub_100041E44();
    memcpy(v11, v12, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v11 = *v12;
  swift_bridgeObjectRelease();
  uint64_t v60 = v13[5];
  uint64_t v61 = (char *)v11 + v60;
  uint64_t v62 = (char *)v12 + v60;
  uint64_t v63 = sub_1001232B0();
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 40);
  v64(v61, v62, v63);
  sub_10002FE38();
  v64(&v61[*(int *)(v65 + 36)], &v62[*(int *)(v65 + 36)], v63);
  uint64_t v66 = v13[6];
  uint64_t v67 = (char *)v11 + v66;
  char v68 = (char *)v12 + v66;
  uint64_t v69 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
  *(_OWORD *)((char *)v11 + v13[7]) = *(_OWORD *)((char *)v12 + v13[7]);
  uint64_t v70 = v13[8];
  long long v71 = (char *)v11 + v70;
  char v72 = (char *)v12 + v70;
  v71[8] = v72[8];
  *(void *)long long v71 = *(void *)v72;
  *((unsigned char *)v11 + v13[9]) = *((unsigned char *)v12 + v13[9]);
LABEL_7:
  uint64_t v31 = v76[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(a2 + v31 + 8);
  uint64_t v34 = *(void *)(a2 + v31 + 24);
  *(void *)(v32 + 16) = *(void *)(a2 + v31 + 16);
  *(void *)(v32 + 24) = v34;
  swift_bridgeObjectRelease();
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  *(unsigned char *)(v32 + 40) = *(unsigned char *)(v33 + 40);
  *(void *)(v32 + 48) = *(void *)(v33 + 48);
  *(unsigned char *)(v32 + 56) = *(unsigned char *)(v33 + 56);
  uint64_t v35 = v76[12];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = sub_100123150();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v39 + 32))(v36, v37, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
LABEL_12:
    sub_10009EAD4(0);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v39 + 40))(v36, v37, v38);
LABEL_13:
  uint64_t v44 = v76[13];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  uint64_t v47 = sub_100123670();
  uint64_t v48 = *(void *)(v47 - 8);
  int v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v45, 1, v47);
  int v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v45, v46, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_20;
    }
LABEL_19:
    sub_100029068(0);
    memcpy(v45, v46, *(void *)(*(void *)(v52 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_20;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v45, v46, v47);
  if (a1 == a2) {
    return a1;
  }
LABEL_20:
  uint64_t v53 = *(int *)(a3 + 20);
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(a2 + v53);
  sub_1000A9128(a1 + v53, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  sub_10009EB08(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v57 = v56;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v58 = sub_1001238A0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v58 - 8) + 32))(v54, v55, v58);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000A7F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A7F34);
}

uint64_t sub_1000A7F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TickerCellViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_10009EB08(0, &qword_100161A88, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000A805C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A8070);
}

uint64_t sub_1000A8070(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TickerCellViewModel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_10009EB08(0, &qword_100161A88, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for TickerCellView(uint64_t a1)
{
  return sub_100009E3C(a1, qword_100161AE8);
}

void sub_1000A81C4()
{
  type metadata accessor for TickerCellViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_10009EB08(319, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000A82BC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000A82D8(uint64_t a1)
{
}

void sub_1000A8320()
{
  if (!qword_100161B30)
  {
    sub_1000A8384(255);
    sub_1000A8D28();
    unint64_t v0 = sub_1001252A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161B30);
    }
  }
}

void sub_1000A8384(uint64_t a1)
{
}

void sub_1000A83CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1000A8450(uint64_t a1)
{
}

void sub_1000A8498()
{
  if (!qword_100161B48)
  {
    sub_1000A852C(255);
    sub_1000A5A70(&qword_100161B98, sub_1000A852C);
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161B48);
    }
  }
}

void sub_1000A852C(uint64_t a1)
{
}

void sub_1000A8560()
{
  if (!qword_100161B58)
  {
    sub_1000A8608(255, &qword_100161B60, (void (*)(uint64_t))sub_100053B54);
    sub_1000A8608(255, &qword_100161B68, (void (*)(uint64_t))sub_1000A872C);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100161B58);
    }
  }
}

void sub_1000A8608(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1000A9184(255, (unint64_t *)&qword_10015EC20, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyTransformModifier);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000A8698(uint64_t a1)
{
}

void sub_1000A86CC()
{
  if (!qword_10015FC30)
  {
    sub_100124FE0();
    unint64_t v0 = sub_100124FA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FC30);
    }
  }
}

void sub_1000A872C()
{
  if (!qword_100161B70)
  {
    sub_1000A87C0(255);
    sub_1000A5A70(&qword_100161B90, sub_1000A87C0);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161B70);
    }
  }
}

void sub_1000A87C0(uint64_t a1)
{
}

void sub_1000A87F4()
{
  if (!qword_100161B80)
  {
    sub_1000A8864(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_100161B80);
    }
  }
}

void sub_1000A8864(uint64_t a1)
{
}

void sub_1000A88AC()
{
  if (!qword_100161BA0)
  {
    sub_1000A8940(255);
    sub_1000A5A70(&qword_100161C10, sub_1000A8940);
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161BA0);
    }
  }
}

void sub_1000A8940(uint64_t a1)
{
}

void sub_1000A8974()
{
  if (!qword_100161BB0)
  {
    sub_1000A8608(255, &qword_100161BB8, (void (*)(uint64_t))sub_1000A8A1C);
    sub_1000A8608(255, &qword_100161BE0, (void (*)(uint64_t))sub_1000A8B5C);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100161BB0);
    }
  }
}

void sub_1000A8A1C()
{
  if (!qword_100161BC0)
  {
    sub_1000A8AB0(255);
    sub_1000A5A70(&qword_100161BD8, sub_1000A8AB0);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161BC0);
    }
  }
}

void sub_1000A8AB0(uint64_t a1)
{
}

void sub_1000A8AE4()
{
  if (!qword_100161BD0)
  {
    type metadata accessor for SymbolTrendView();
    sub_1000A8864(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_100161BD0);
    }
  }
}

void sub_1000A8B5C()
{
  if (!qword_100161BE8)
  {
    sub_1000A8BF0(255);
    sub_1000A5A70(&qword_100161C08, sub_1000A8BF0);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161BE8);
    }
  }
}

void sub_1000A8BF0(uint64_t a1)
{
}

void sub_1000A8C24()
{
  if (!qword_100161BF8)
  {
    type metadata accessor for StockPriceView();
    sub_1000A83CC(255, &qword_100161C00, (uint64_t (*)(uint64_t))sub_1000A8864, (uint64_t (*)(uint64_t))sub_100089EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_100161BF8);
    }
  }
}

void sub_1000A8CE0(uint64_t a1)
{
}

uint64_t sub_1000A8D28()
{
  return sub_1000A8DB8(&qword_100161C20, sub_1000A8384, (void (*)(void))sub_1000A8D70, (void (*)(void))sub_1000A8EAC);
}

uint64_t sub_1000A8D70()
{
  return sub_1000A8DB8(&qword_100161C28, sub_1000A8450, (void (*)(void))sub_1000A8E44, (void (*)(void))sub_1000A8E78);
}

uint64_t sub_1000A8DB8(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A8E44()
{
  return sub_1000A5A70(&qword_100161C30, (void (*)(uint64_t))sub_1000A8498);
}

uint64_t sub_1000A8E78()
{
  return sub_1000A5A70(&qword_100161C38, (void (*)(uint64_t))sub_1000A88AC);
}

uint64_t sub_1000A8EAC()
{
  return sub_1000A8DB8(&qword_100161C40, sub_1000A8CE0, (void (*)(void))sub_1000A8EF4, (void (*)(void))sub_1000A8F28);
}

uint64_t sub_1000A8EF4()
{
  return sub_1000A5A70(&qword_100161C48, (void (*)(uint64_t))type metadata accessor for RowWithChartTicker);
}

uint64_t sub_1000A8F28()
{
  return sub_1000A5A70(&qword_100161C50, (void (*)(uint64_t))type metadata accessor for LineTicker);
}

void sub_1000A8F5C()
{
  if (!qword_100161C58)
  {
    sub_10009EB08(255, &qword_100161B20, (uint64_t (*)(uint64_t))sub_1000A82D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
    sub_1000A9010();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100161C58);
    }
  }
}

unint64_t sub_1000A9010()
{
  unint64_t result = qword_100161C60;
  if (!qword_100161C60)
  {
    sub_10009EB08(255, &qword_100161B20, (uint64_t (*)(uint64_t))sub_1000A82D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
    sub_1000A8DB8(&qword_100161C68, sub_1000A82D8, (void (*)(void))sub_1000A90F4, (void (*)(void))sub_1000A8D28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161C60);
  }
  return result;
}

uint64_t sub_1000A90F4()
{
  return sub_1000A5A70(&qword_100161C70, (void (*)(uint64_t))sub_1000A8320);
}

uint64_t sub_1000A9128(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_10009EB08(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1000A9184(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1000A91D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A1F04(a1);
}

void sub_1000A9200(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001249F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000A9274()
{
  return swift_deallocObject();
}

uint64_t sub_1000A9284()
{
  return swift_deallocObject();
}

uint64_t sub_1000A92A8()
{
  return swift_deallocObject();
}

uint64_t sub_1000A92B8()
{
  return swift_deallocObject();
}

uint64_t sub_1000A92C8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000A8608(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1000A9334(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000A8608(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1000A93A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1000A9400(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A9468(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  sub_1000A83CC(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1000A94EC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  sub_1000A83CC(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1000A9570(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t))
{
  sub_1000A83CC(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1000A95E4()
{
  unint64_t result = qword_100161CC8;
  if (!qword_100161CC8)
  {
    sub_1000A83CC(255, &qword_100161C78, (uint64_t (*)(uint64_t))sub_1000A8F5C, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_10009EB08(255, &qword_100161B20, (uint64_t (*)(uint64_t))sub_1000A82D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
    sub_1000A9010();
    swift_getOpaqueTypeConformance2();
    sub_1000A5A70(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161CC8);
  }
  return result;
}

uint64_t sub_1000A9730(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_100124240();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  sub_1000ACAAC(0, &qword_100161E30, (uint64_t (*)(uint64_t))&type metadata accessor for NewsUserProfile, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_1000A986C, 0, 0);
}

uint64_t sub_1000A986C()
{
  uint64_t v1 = v0[10];
  v0[11] = *(void *)(v0[4] + 56);
  sub_1001242D0();
  uint64_t v2 = sub_100123730();
  v0[12] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[13] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[4];
    sub_1000AB004(v0[10]);
    sub_100009D98((void *)(v4 + 16), *(void *)(v4 + 40));
    uint64_t v5 = (void *)swift_task_alloc();
    v0[14] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1000A9A18;
    return sub_100073134();
  }
  else
  {
    (*(void (**)(void, void, uint64_t))(v3 + 32))(v0[3], v0[10], v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1000A9A18(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1000A9F70;
  }
  else {
    uint64_t v4 = sub_1000A9B2C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000A9B2C()
{
  id v1 = [(id)swift_unknownObjectRetain() bundleSubscription];
  if (!v1)
  {
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 48);
    swift_unknownObjectRelease();
    type metadata accessor for TodayPrivateDataError();
    sub_1000AB0DC(&qword_100161E38, 255, (void (*)(uint64_t))type metadata accessor for TodayPrivateDataError);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, 1, 2, v7);
    swift_willThrow();
    swift_unknownObjectRelease();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_17;
  }
  uint64_t v2 = v1;
  id v3 = [v1 bundleChannelIDs];
  id v4 = [v3 count];

  if ((uint64_t)v4 <= 0)
  {
    uint64_t v10 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 48);
    swift_unknownObjectRelease();
    type metadata accessor for TodayPrivateDataError();
    sub_1000AB0DC(&qword_100161E38, 255, (void (*)(uint64_t))type metadata accessor for TodayPrivateDataError);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12, 2, 2, v10);
    swift_willThrow();
    swift_unknownObjectRelease();

    goto LABEL_7;
  }
  id v5 = [*(id *)(v0 + 120) rankedAllSubscribedTagIDs];
  if (v5)
  {
    uint64_t v6 = v5;
    sub_100125CA0();
  }
  id v14 = [*(id *)(v0 + 120) mutedTagIDs];
  if (v14)
  {
    uint64_t v15 = v14;
    int v16 = (void *)sub_100125E30();
  }
  else
  {
    int v16 = &_swiftEmptySetSingleton;
  }
  int v17 = *(void **)(v0 + 120);
  sub_1000AB930((uint64_t)v16);
  swift_bridgeObjectRelease();
  id v18 = [v17 autoFavoriteTagIDs];
  if (v18)
  {
    uint64_t v19 = v18;
    sub_100125CA0();
  }
  id v20 = [*(id *)(v0 + 120) purchasedTagIDs];
  swift_unknownObjectRelease();
  if (v20)
  {
    uint64_t v21 = (void *)sub_100125E30();
  }
  else
  {
    uint64_t v21 = &_swiftEmptySetSingleton;
  }
  uint64_t v23 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 104);
  uint64_t v24 = *(void *)(v0 + 72);
  uint64_t v25 = *(void *)(v0 + 24);
  sub_1000AB930((uint64_t)v21);
  swift_bridgeObjectRelease();
  id v26 = v2;
  sub_100123710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v24, v25, v23);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v23);
  sub_1001242E0();
  swift_unknownObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
LABEL_17:
  return v13();
}

uint64_t sub_1000A9F70()
{
  v0[2] = v0[16];
  swift_errorRetain();
  sub_10008B894();
  if (swift_dynamicCast())
  {
    uint64_t v2 = v0[7];
    uint64_t v1 = v0[8];
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
    type metadata accessor for TodayPrivateDataError();
    sub_1000AB0DC(&qword_100161E38, 255, (void (*)(uint64_t))type metadata accessor for TodayPrivateDataError);
    swift_allocError();
    uint64_t v6 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v5, v2, v3);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 2, v3);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000AA144()
{
  sub_100009D48(v0 + 16);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetNewsUserProfileProvider()
{
  return self;
}

uint64_t sub_1000AA1AC()
{
  uint64_t result = sub_100124570();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000AA248()
{
  return sub_100124320();
}

void sub_1000AA2C8()
{
}

uint64_t sub_1000AA2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SceneStateMonitor.sceneDidBecomeActive(with:sourceApplication:sceneID:)(a1, a2, a3, a4, a5, *v5);
}

void sub_1000AA320()
{
}

void sub_1000AA34C(Swift::String with)
{
}

void sub_1000AA378()
{
}

void sub_1000AA3A4()
{
}

void sub_1000AA3D0(Swift::String with)
{
}

uint64_t sub_1000AA3FC(uint64_t a1)
{
  return SceneStateMonitor.sceneWillConnectToSession(withOptions:)(a1, *v1);
}

void sub_1000AA428()
{
}

uint64_t sub_1000AA454()
{
  return sub_100124350();
}

uint64_t sub_1000AA4E0()
{
  uint64_t v1 = sub_100124570();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = sub_100123730();
  sub_100124380();
  uint64_t v15 = *(void (**)(char *))(v2 + 16);
  uint64_t v16 = v0 + qword_100172698;
  v15(v4);
  uint64_t v5 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = (v5 + 16) & ~v5;
  v14[2] = v5 | 7;
  v14[3] = v6 + v3;
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 32);
  v8(v7 + v6, v4, v1);
  uint64_t v9 = (void *)sub_100124300();
  sub_100124330();
  swift_release();
  swift_release();

  ((void (*)(char *, uint64_t, uint64_t))v15)(v4, v16, v1);
  uint64_t v10 = swift_allocObject();
  v8(v10 + v6, v4, v1);
  uint64_t v11 = (void *)sub_100124300();
  uint64_t v12 = sub_100124340();
  swift_release();

  swift_release();
  return v12;
}

uint64_t sub_1000AA704()
{
  uint64_t v0 = sub_100124550();
  os_log_type_t v1 = sub_100125F60();
  if (os_log_type_enabled(v0, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, v1, "fetching news user profile", v2, 2u);
    swift_slowDealloc();
  }

  return sub_100123AF0();
}

uint64_t sub_1000AA7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_1001260E0(60);
  v15._countAndFlagsBits = 40;
  v15._object = (void *)0xE100000000000000;
  sub_100125BB0(v15);
  sub_100123700();
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = sub_1001264F0();
  sub_100125BB0(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x6154646574756D20;
  v17._object = (void *)0xEE00202C73444967;
  sub_100125BB0(v17);
  uint64_t v4 = (void *)sub_100123720();
  id v5 = [v4 bundleChannelIDs];

  [v5 count];
  v18._countAndFlagsBits = sub_1001264F0();
  sub_100125BB0(v18);
  swift_bridgeObjectRelease();
  v19._object = (void *)0x8000000100131E20;
  v19._countAndFlagsBits = 0xD000000000000013;
  sub_100125BB0(v19);
  uint64_t v6 = (void *)sub_100123720();
  id v7 = [v6 subscriptionState];

  uint64_t v14 = (uint64_t)v7;
  type metadata accessor for FCSubscriptionState(0);
  sub_100126270();
  v20._countAndFlagsBits = 0xD000000000000014;
  v20._object = (void *)0x8000000100131E40;
  sub_100125BB0(v20);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_100124550();
  os_log_type_t v9 = sub_100125F60();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v13[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1000AB124(0, 0xE000000000000000, v13);
    sub_100126030();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "fetched news user profile: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = sub_100123730();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
}

void sub_1000AAB44()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v0 = sub_100124550();
  os_log_type_t v1 = sub_100125F40();
  if (os_log_type_enabled(v0, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v3 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 138543362;
    swift_errorRetain();
    uint64_t v4 = _swift_stdlib_bridgeErrorToNSError();
    sub_100126030();
    *uint64_t v3 = v4;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v0, v1, "failed to fetch news user profile with error: %{public}@", v2, 0xCu);
    sub_1000ACAAC(0, &qword_10015DF10, (uint64_t (*)(uint64_t))sub_100009DDC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_1000AACFC()
{
  return sub_1001242A0();
}

uint64_t sub_1000AAD54()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + qword_100172698;
  uint64_t v2 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1000AADC0()
{
  sub_1000AAD54();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LoggingNewsUserProfileProvider()
{
  return sub_10002E8B0();
}

ValueMetadata *type metadata accessor for WidgetNewsUserProfileProvider.CacheKey()
{
  return &type metadata for WidgetNewsUserProfileProvider.CacheKey;
}

unint64_t sub_1000AAE44()
{
  unint64_t result = qword_100161E00;
  if (!qword_100161E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161E00);
  }
  return result;
}

uint64_t sub_1000AAEA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000AAEBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000AAED8(uint64_t a1, uint64_t a2)
{
  return sub_1000AB0DC(&qword_100161E08, a2, (void (*)(uint64_t))type metadata accessor for WidgetNewsUserProfileProvider);
}

uint64_t sub_1000AAF20(uint64_t a1, uint64_t a2)
{
  return sub_1000AB0DC(&qword_100161E10, a2, (void (*)(uint64_t))type metadata accessor for WidgetNewsUserProfileProvider);
}

uint64_t sub_1000AAF68(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100013D40;
  return sub_1000A9730(a1, v1);
}

uint64_t sub_1000AB004(uint64_t a1)
{
  sub_1000ACAAC(0, &qword_100161E30, (uint64_t (*)(uint64_t))&type metadata accessor for NewsUserProfile, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for TodayPrivateDataError()
{
  uint64_t result = qword_100161EC8;
  if (!qword_100161EC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000AB0DC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000AB124(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1000AB1F8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10007BE04((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10007BE04((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100009D48((uint64_t)v12);
  return v7;
}

uint64_t sub_1000AB1F8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_100126040();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1000AB3B4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1001261C0();
  if (!v8)
  {
    sub_100126280();
    __break(1u);
LABEL_17:
    uint64_t result = sub_100126310();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1000AB3B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000AB44C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000AB638(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1000AB638(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1000AB44C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1000AB5C4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1001260F0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_100126280();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_100125BC0();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_100126310();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_100126280();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000AB5C4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10006D708(0, &qword_100161E50);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1000AB638(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10006D708(0, &qword_100161E50);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_100126310();
  __break(1u);
  return result;
}

void *sub_1000AB794(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      int64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 48 * a3;
        if (v10 < (unint64_t)&v8[6 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 48 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_10006D708(0, &qword_100161978);
      int64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      v8[2] = v5;
      _OWORD v8[3] = 2 * ((uint64_t)(v9 - 32) / 48);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)sub_100126310();
  __break(1u);
  return result;
}

void *sub_1000AB930(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10006D708(0, (unint64_t *)&qword_10015E810);
  unint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1000ABC90((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_10007BE60();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1000ABA24(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  if (v5 <= 0)
  {
    size_t v11 = _swiftEmptyArrayStorage;
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for WidgetStock() - 8);
      Swift::String v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      Swift::String v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1000ACAAC(0, &qword_100161990, (uint64_t (*)(uint64_t))type metadata accessor for WidgetStock, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v8 = *(void *)(type metadata accessor for WidgetStock() - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  size_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    void v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = (void *)sub_100126310();
  __break(1u);
  return result;
}

uint64_t sub_1000ABC90(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  size_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *size_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1000ABE90()
{
  unint64_t result = qword_100161E40;
  if (!qword_100161E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161E40);
  }
  return result;
}

uint64_t sub_1000ABEE4()
{
  return sub_1000AA704();
}

uint64_t sub_1000ABF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AA7E8(a1, a2);
}

void sub_1000ABF84()
{
  sub_100124570();

  sub_1000AAB44();
}

unsigned char *storeEnumTagSinglePayload for WidgetNewsUserProfileProvider.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000AC090);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetNewsUserProfileProvider.Error()
{
  return &type metadata for WidgetNewsUserProfileProvider.Error;
}

uint64_t *sub_1000AC0C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_100124240();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_1000AC214(uint64_t a1)
{
  uint64_t v2 = sub_100124240();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v2);
  if (!result)
  {
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_1000AC2E4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100124240();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1000AC3F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100124240();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_1000AC568(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100124240();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1000AC678(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100124240();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1000AC7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AC800);
}

uint64_t sub_1000AC800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124240();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000AC86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AC880);
}

uint64_t sub_1000AC880(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_100124240();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1000AC904(uint64_t a1)
{
  uint64_t v2 = sub_100124240();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_1000AC96C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124240();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t sub_1000AC9DC()
{
  uint64_t result = sub_100124240();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unint64_t sub_1000ACA58()
{
  unint64_t result = qword_100161ED8;
  if (!qword_100161ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161ED8);
  }
  return result;
}

void sub_1000ACAAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1000ACB38()
{
  unint64_t result = qword_100161EE0;
  if (!qword_100161EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161EE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SidebarAppearance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000ACC58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarAppearance()
{
  return &type metadata for SidebarAppearance;
}

uint64_t sub_1000ACC90@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 40) = 0;
  *(_OWORD *)(a2 + 48) = xmmword_100127700;
  int v3 = self;
  *(void *)(a2 + 64) = [v3 blackColor];
  *(void *)(a2 + 72) = [v3 whiteColor];
  sub_100085B7C();
  *(void *)(a2 + 80) = sub_100125FD0();
  *(void *)(a2 + 88) = [v3 systemWhiteColor];
  *(void *)(a2 + 96) = [objc_allocWithZone((Class)UIColor) initWithRed:0.490196078 green:0.498039216 blue:0.498039216 alpha:1.0];
  *(void *)(a2 + 104) = [objc_allocWithZone((Class)UIColor) initWithRed:0.8 green:0.8 blue:0.8 alpha:1.0];
  *(void *)(a2 + 112) = [objc_allocWithZone((Class)UIColor) initWithRed:0.882352941 green:0.960784314 blue:0.905882353 alpha:1.0];
  *(void *)(a2 + 120) = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.490196078 blue:0.105882353 alpha:1.0];
  *(void *)(a2 + 128) = [objc_allocWithZone((Class)UIColor) initWithRed:0.203921569 green:0.780392157 blue:0.349019608 alpha:1.0];
  *(void *)(a2 + 136) = [objc_allocWithZone((Class)UIColor) initWithRed:0.247058824 green:0.941176471 blue:0.419607843 alpha:1.0];
  *(void *)(a2 + 144) = [objc_allocWithZone((Class)UIColor) initWithRed:0.870588235 green:0.0274509804 blue:0.109803922 alpha:1.0];
  *(void *)(a2 + 152) = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.231372549 blue:0.188235294 alpha:1.0];
  *(void *)(a2 + 160) = [objc_allocWithZone((Class)UIColor) initWithRed:0.231372549 green:0.588235294 blue:0.97254902 alpha:1.0];
  *(void *)(a2 + 168) = [objc_allocWithZone((Class)UIColor) initWithRed:0.501960784 green:0.501960784 blue:0.501960784 alpha:1.0];
  *(void *)(a2 + 176) = [objc_allocWithZone((Class)UIColor) initWithRed:0.329411765 green:0.329411765 blue:0.329411765 alpha:1.0];
  *(void *)(a2 + 184) = [objc_allocWithZone((Class)UIColor) initWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:1.0];
  *(void *)(a2 + 192) = [objc_allocWithZone((Class)UIColor) initWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:0.12];
  *(void *)(a2 + 200) = [objc_allocWithZone((Class)UIColor) initWithRed:0.298039216 green:0.850980392 blue:0.392156863 alpha:1.0];
  *(void *)(a2 + 208) = [objc_allocWithZone((Class)UIColor) initWithRed:0.352941176 green:0.784313725 blue:0.980392157 alpha:1.0];
  *(void *)(a2 + 216) = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.592156863 blue:1.0 alpha:1.0];
  *(void *)(a2 + 224) = [objc_allocWithZone((Class)UIColor) initWithRed:0.552941176 green:0.294117647 blue:1.0 alpha:1.0];
  *(void *)(a2 + 232) = [objc_allocWithZone((Class)UIColor) initWithRed:0.407843137 green:0.0 blue:1.0 alpha:1.0];
  *(unsigned char *)(a2 + 240) = 1;
  *(void *)(a2 + 248) = [objc_allocWithZone((Class)UIColor) initWithWhite:0.670588235 alpha:1.0];
  id v4 = [v3 blackColor];
  id v5 = [v4 colorWithAlphaComponent:0.25];

  *(void *)(a2 + 256) = v5;
  id v6 = [v3 blackColor];
  id v7 = [v6 colorWithAlphaComponent:0.25];

  *(void *)(a2 + 264) = v7;
  id v8 = [v3 blackColor];
  id v9 = [v8 colorWithAlphaComponent:0.6];

  *(void *)(a2 + 272) = v9;
  id v10 = [v3 grayColor];
  id v11 = [v10 colorWithAlphaComponent:0.3];

  *(void *)(a2 + 280) = v11;
  *(void *)(a2 + 288) = [objc_allocWithZone((Class)UIColor) initWithRed:0.365 green:0.365 blue:0.365 alpha:1.0];
  *(void *)(a2 + 296) = [objc_allocWithZone((Class)UIColor) initWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:1.0];
  *(void *)(a2 + 304) = [v3 whiteColor];
  *(void *)(a2 + 312) = sub_100125FD0();
  *(void *)(a2 + 320) = [v3 secondaryLabelColor];
  id v12 = [v3 whiteColor];
  id v13 = [v3 secondarySystemBackgroundColor];
  id v14 = [v3 ts_dynamicColor:v12 withDarkStyleVariant:v13];

  *(void *)(a2 + 328) = v14;
  *(void *)(a2 + 336) = [v3 secondaryLabelColor];
  *(void *)(a2 + 344) = [v3 labelColor];
  *(void *)(a2 + 352) = [v3 systemBackgroundColor];
  *(void *)(a2 + 360) = [objc_allocWithZone((Class)UIColor) initWithRed:0.933333333 green:0.933333333 blue:0.937254902 alpha:1.0];
  *(void *)(a2 + 368) = [objc_allocWithZone((Class)UIColor) initWithRed:0.556862745 green:0.556862745 blue:0.576470588 alpha:1.0];
  *(void *)(a2 + 376) = [v3 separatorColor];
  *(void *)(a2 + 384) = [v3 secondaryLabelColor];
  *(void *)(a2 + 392) = [v3 labelColor];

  return sub_100029474(a1, a2);
}

void destroy for LightTheme(uint64_t a1)
{
  sub_100009D48(a1);

  uint64_t v2 = *(void **)(a1 + 392);
}

uint64_t initializeWithCopy for LightTheme(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  id v5 = *(void **)(a2 + 64);
  id v6 = *(void **)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  id v8 = *(void **)(a2 + 80);
  id v7 = *(void **)(a2 + 88);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v7;
  id v10 = *(void **)(a2 + 96);
  id v9 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = v10;
  *(void *)(a1 + 104) = v9;
  id v12 = *(void **)(a2 + 112);
  id v11 = *(void **)(a2 + 120);
  *(void *)(a1 + 112) = v12;
  *(void *)(a1 + 120) = v11;
  id v14 = *(void **)(a2 + 128);
  id v13 = *(void **)(a2 + 136);
  *(void *)(a1 + 128) = v14;
  *(void *)(a1 + 136) = v13;
  char v72 = v13;
  long long v73 = *(void **)(a2 + 144);
  unint64_t v15 = *(void **)(a2 + 152);
  *(void *)(a1 + 144) = v73;
  *(void *)(a1 + 152) = v15;
  uint64_t v74 = v15;
  uint64_t v75 = *(void **)(a2 + 160);
  unint64_t v16 = *(void **)(a2 + 168);
  *(void *)(a1 + 160) = v75;
  *(void *)(a1 + 168) = v16;
  uint64_t v76 = v16;
  uint64_t v77 = *(void **)(a2 + 176);
  int64_t v17 = *(void **)(a2 + 184);
  *(void *)(a1 + 176) = v77;
  *(void *)(a1 + 184) = v17;
  uint64_t v78 = v17;
  uint64_t v79 = *(void **)(a2 + 192);
  unint64_t v18 = *(void **)(a2 + 200);
  *(void *)(a1 + 192) = v79;
  *(void *)(a1 + 200) = v18;
  uint64_t v80 = v18;
  int v81 = *(void **)(a2 + 208);
  int64_t v19 = *(void **)(a2 + 216);
  *(void *)(a1 + 208) = v81;
  *(void *)(a1 + 216) = v19;
  uint64_t v82 = v19;
  uint64_t v83 = *(void **)(a2 + 224);
  uint64_t v85 = *(void **)(a2 + 232);
  *(void *)(a1 + 224) = v83;
  *(void *)(a1 + 232) = v85;
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  unint64_t v20 = *(void **)(a2 + 256);
  uint64_t v84 = *(void **)(a2 + 248);
  *(void *)(a1 + 248) = v84;
  *(void *)(a1 + 256) = v20;
  int v86 = v20;
  uint64_t v87 = *(void **)(a2 + 264);
  uint64_t v21 = *(void **)(a2 + 272);
  *(void *)(a1 + 264) = v87;
  *(void *)(a1 + 272) = v21;
  uint64_t v88 = v21;
  uint64_t v89 = *(void **)(a2 + 280);
  uint64_t v22 = *(void **)(a2 + 288);
  *(void *)(a1 + 280) = v89;
  *(void *)(a1 + 288) = v22;
  uint64_t v90 = v22;
  uint64_t v91 = *(void **)(a2 + 296);
  uint64_t v23 = *(void **)(a2 + 304);
  *(void *)(a1 + 296) = v91;
  *(void *)(a1 + 304) = v23;
  uint64_t v92 = v23;
  uint64_t v93 = *(void **)(a2 + 312);
  uint64_t v24 = *(void **)(a2 + 320);
  *(void *)(a1 + 312) = v93;
  *(void *)(a1 + 320) = v24;
  uint64_t v94 = v24;
  uint64_t v95 = *(void **)(a2 + 328);
  uint64_t v25 = *(void **)(a2 + 336);
  *(void *)(a1 + 328) = v95;
  *(void *)(a1 + 336) = v25;
  uint64_t v96 = v25;
  uint64_t v97 = *(void **)(a2 + 344);
  id v26 = *(void **)(a2 + 352);
  *(void *)(a1 + 344) = v97;
  *(void *)(a1 + 352) = v26;
  uint64_t v98 = v26;
  uint64_t v99 = *(void **)(a2 + 360);
  uint64_t v27 = *(void **)(a2 + 368);
  *(void *)(a1 + 360) = v99;
  *(void *)(a1 + 368) = v27;
  uint64_t v100 = v27;
  uint64_t v101 = *(void **)(a2 + 376);
  uint64_t v28 = *(void **)(a2 + 384);
  uint64_t v29 = *(void **)(a2 + 392);
  char v102 = v28;
  *(void *)(a1 + 376) = v101;
  *(void *)(a1 + 384) = v28;
  *(void *)(a1 + 392) = v29;
  id v30 = v5;
  id v31 = v6;
  id v32 = v8;
  id v33 = v7;
  id v34 = v10;
  id v35 = v9;
  id v36 = v12;
  id v37 = v11;
  id v38 = v14;
  id v39 = v72;
  id v40 = v73;
  id v41 = v74;
  id v42 = v75;
  id v43 = v76;
  id v44 = v77;
  id v45 = v78;
  id v46 = v79;
  id v47 = v80;
  id v48 = v81;
  id v49 = v82;
  id v50 = v83;
  id v51 = v85;
  id v52 = v84;
  id v53 = v86;
  id v54 = v87;
  id v55 = v88;
  id v56 = v89;
  id v57 = v90;
  id v58 = v91;
  id v59 = v92;
  id v60 = v93;
  id v61 = v94;
  id v62 = v95;
  id v63 = v96;
  id v64 = v97;
  id v65 = v98;
  id v66 = v99;
  id v67 = v100;
  id v68 = v101;
  id v69 = v102;
  id v70 = v29;
  return a1;
}

uint64_t assignWithCopy for LightTheme(uint64_t a1, uint64_t a2)
{
  sub_1000850CC((uint64_t *)a1, (uint64_t *)a2);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v4 = *(void **)(a2 + 64);
  id v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v4;
  id v6 = v4;

  id v7 = *(void **)(a2 + 72);
  id v8 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 80);
  id v11 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 88);
  id v14 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = v13;
  id v15 = v13;

  unint64_t v16 = *(void **)(a2 + 96);
  int64_t v17 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = v16;
  id v18 = v16;

  int64_t v19 = *(void **)(a2 + 104);
  unint64_t v20 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v19;
  id v21 = v19;

  uint64_t v22 = *(void **)(a2 + 112);
  uint64_t v23 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v22;
  id v24 = v22;

  uint64_t v25 = *(void **)(a2 + 120);
  id v26 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v25;
  id v27 = v25;

  uint64_t v28 = *(void **)(a2 + 128);
  uint64_t v29 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = v28;
  id v30 = v28;

  id v31 = *(void **)(a2 + 136);
  id v32 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v31;
  id v33 = v31;

  id v34 = *(void **)(a2 + 144);
  id v35 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v34;
  id v36 = v34;

  id v37 = *(void **)(a2 + 152);
  id v38 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = v37;
  id v39 = v37;

  id v40 = *(void **)(a2 + 160);
  id v41 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v40;
  id v42 = v40;

  id v43 = *(void **)(a2 + 168);
  id v44 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v43;
  id v45 = v43;

  id v46 = *(void **)(a2 + 176);
  id v47 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = v46;
  id v48 = v46;

  id v49 = *(void **)(a2 + 184);
  id v50 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = v49;
  id v51 = v49;

  id v52 = *(void **)(a2 + 192);
  id v53 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = v52;
  id v54 = v52;

  id v55 = *(void **)(a2 + 200);
  id v56 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v55;
  id v57 = v55;

  id v58 = *(void **)(a2 + 208);
  id v59 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = v58;
  id v60 = v58;

  id v61 = *(void **)(a2 + 216);
  id v62 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = v61;
  id v63 = v61;

  id v64 = *(void **)(a2 + 224);
  id v65 = *(void **)(a1 + 224);
  *(void *)(a1 + 224) = v64;
  id v66 = v64;

  id v67 = *(void **)(a2 + 232);
  id v68 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = v67;
  id v69 = v67;

  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  id v70 = *(void **)(a2 + 248);
  long long v71 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = v70;
  id v72 = v70;

  long long v73 = *(void **)(a2 + 256);
  uint64_t v74 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = v73;
  id v75 = v73;

  uint64_t v76 = *(void **)(a2 + 264);
  uint64_t v77 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = v76;
  id v78 = v76;

  uint64_t v79 = *(void **)(a2 + 272);
  uint64_t v80 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = v79;
  id v81 = v79;

  uint64_t v82 = *(void **)(a2 + 280);
  uint64_t v83 = *(void **)(a1 + 280);
  *(void *)(a1 + 280) = v82;
  id v84 = v82;

  uint64_t v85 = *(void **)(a2 + 288);
  int v86 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = v85;
  id v87 = v85;

  uint64_t v88 = *(void **)(a2 + 296);
  uint64_t v89 = *(void **)(a1 + 296);
  *(void *)(a1 + 296) = v88;
  id v90 = v88;

  uint64_t v91 = *(void **)(a2 + 304);
  uint64_t v92 = *(void **)(a1 + 304);
  *(void *)(a1 + 304) = v91;
  id v93 = v91;

  uint64_t v94 = *(void **)(a2 + 312);
  uint64_t v95 = *(void **)(a1 + 312);
  *(void *)(a1 + 312) = v94;
  id v96 = v94;

  uint64_t v97 = *(void **)(a2 + 320);
  uint64_t v98 = *(void **)(a1 + 320);
  *(void *)(a1 + 320) = v97;
  id v99 = v97;

  uint64_t v100 = *(void **)(a2 + 328);
  uint64_t v101 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = v100;
  id v102 = v100;

  char v103 = *(void **)(a2 + 336);
  uint64_t v104 = *(void **)(a1 + 336);
  *(void *)(a1 + 336) = v103;
  id v105 = v103;

  uint64_t v106 = *(void **)(a2 + 344);
  uint64_t v107 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = v106;
  id v108 = v106;

  double v109 = *(void **)(a2 + 352);
  uint64_t v110 = *(void **)(a1 + 352);
  *(void *)(a1 + 352) = v109;
  id v111 = v109;

  uint64_t v112 = *(void **)(a2 + 360);
  uint64_t v113 = *(void **)(a1 + 360);
  *(void *)(a1 + 360) = v112;
  id v114 = v112;

  uint64_t v115 = *(void **)(a2 + 368);
  uint64_t v116 = *(void **)(a1 + 368);
  *(void *)(a1 + 368) = v115;
  id v117 = v115;

  uint64_t v118 = *(void **)(a2 + 376);
  uint64_t v119 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = v118;
  id v120 = v118;

  uint64_t v121 = *(void **)(a2 + 384);
  uint64_t v122 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = v121;
  id v123 = v121;

  uint64_t v124 = *(void **)(a2 + 392);
  uint64_t v125 = *(void **)(a1 + 392);
  *(void *)(a1 + 392) = v124;
  id v126 = v124;

  return a1;
}

void *initializeWithTake for LightTheme(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x190uLL);
}

uint64_t assignWithTake for LightTheme(uint64_t a1, uint64_t a2)
{
  sub_100009D48(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  id v5 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  id v6 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  id v7 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  id v8 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  id v9 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  id v10 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  id v11 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  id v12 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

  id v13 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  id v14 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  id v15 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);

  unint64_t v16 = *(void **)(a1 + 152);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);

  int64_t v17 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  id v18 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);

  int64_t v19 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);

  unint64_t v20 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);

  id v21 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  uint64_t v22 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);

  uint64_t v23 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);

  id v24 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);

  uint64_t v25 = *(void **)(a1 + 224);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);

  id v26 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);

  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  id v27 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);

  uint64_t v28 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);

  uint64_t v29 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);

  id v30 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);

  id v31 = *(void **)(a1 + 280);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);

  id v32 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);

  id v33 = *(void **)(a1 + 296);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);

  id v34 = *(void **)(a1 + 304);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);

  id v35 = *(void **)(a1 + 312);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);

  id v36 = *(void **)(a1 + 320);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);

  id v37 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);

  id v38 = *(void **)(a1 + 336);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);

  id v39 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);

  id v40 = *(void **)(a1 + 352);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);

  id v41 = *(void **)(a1 + 360);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);

  id v42 = *(void **)(a1 + 368);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);

  id v43 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);

  id v44 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);

  id v45 = *(void **)(a1 + 392);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);

  return a1;
}

uint64_t getEnumTagSinglePayload for LightTheme(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 400)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LightTheme(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 392) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 400) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 400) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LightTheme()
{
  return &type metadata for LightTheme;
}

uint64_t sub_1000ADF88()
{
  return *(unsigned __int8 *)(v0 + 40);
}

id sub_1000ADF90(uint64_t a1, uint64_t a2)
{
  return sub_100085AF0(a1, a2, (SEL *)&selRef_systemGroupedBackgroundColor);
}

id sub_1000ADF9C()
{
  BOOL v1 = UIAccessibilityDarkerSystemColorsEnabled();
  uint64_t v2 = 128;
  if (v1) {
    uint64_t v2 = 120;
  }
  int v3 = *(void **)(v0 + v2);

  return v3;
}

id sub_1000ADFD8()
{
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    BOOL v1 = v0 + 17;
  }
  else
  {
    BOOL v2 = UIAccessibilityDarkerSystemColorsEnabled();
    BOOL v1 = v0 + 15;
    if (!v2) {
      BOOL v1 = v0 + 16;
    }
  }
  int v3 = *v1;

  return v3;
}

id sub_1000AE028()
{
  if (UIAccessibilityDarkerSystemColorsEnabled())
  {
    BOOL v1 = UIAccessibilityDarkerSystemColorsEnabled();
    BOOL v2 = v0 + 15;
    if (!v1) {
      BOOL v2 = v0 + 16;
    }
  }
  else
  {
    BOOL v2 = v0 + 25;
  }
  int v3 = *v2;

  return v3;
}

uint64_t sub_1000AE074()
{
  return sub_100125FD0();
}

id sub_1000AE0A0()
{
  return *(id *)(v0 + 392);
}

uint64_t sub_1000AE0A8()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_1000AE0B8()
{
  sub_1001238A0();
  sub_1000AFAFC(&qword_100161FC0, (void (*)(uint64_t))&type metadata accessor for PriceChangeDisplay);
  sub_100125A40();
  BOOL v1 = (int *)_s11FormatStyleVMa_0();
  sub_100126610(*(unsigned char *)(v0 + v1[5]));
  sub_100126610(*(unsigned char *)(v0 + v1[6]));
  sub_100126610(*(unsigned char *)(v0 + v1[7]));
  swift_bridgeObjectRetain();
  sub_100125BA0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000AE1A0(void *a1)
{
  sub_1000AFA98(0, &qword_100161FB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v7 = &v9[-v6];
  sub_100009D98(a1, a1[3]);
  sub_1000AFA44();
  sub_100126650();
  v9[15] = 0;
  sub_1001238A0();
  sub_1000AFAFC(&qword_100160740, (void (*)(uint64_t))&type metadata accessor for PriceChangeDisplay);
  sub_1001264C0();
  if (!v1)
  {
    _s11FormatStyleVMa_0();
    v9[14] = 1;
    sub_100126490();
    v9[13] = 2;
    sub_100126490();
    v9[12] = 3;
    sub_100126490();
    v9[11] = 4;
    sub_100126480();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000AE3F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_1001238A0();
  uint64_t v28 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v30 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AFA98(0, &qword_100161FA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v29 = v6;
  uint64_t v27 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v24 - v7;
  id v9 = (int *)_s11FormatStyleVMa_0();
  __chkstk_darwin(v9);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = &v11[*(int *)(v12 + 32)];
  *(void *)id v13 = 9666786;
  *((void *)v13 + 1) = 0xA300000000000000;
  id v31 = v13;
  sub_100009D98(a1, a1[3]);
  sub_1000AFA44();
  sub_100126640();
  if (v2)
  {
    sub_100009D48((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = a1;
    id v14 = v11;
    uint64_t v15 = v28;
    char v36 = 0;
    sub_1000AFAFC(&qword_100160718, (void (*)(uint64_t))&type metadata accessor for PriceChangeDisplay);
    uint64_t v16 = v29;
    sub_1001263F0();
    int64_t v17 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v18 = (uint64_t)v14;
    v17(v14, v30, v4);
    char v35 = 1;
    v14[v9[5]] = sub_1001263C0() & 1;
    char v34 = 2;
    v14[v9[6]] = sub_1001263C0() & 1;
    char v33 = 3;
    v14[v9[7]] = sub_1001263C0() & 1;
    char v32 = 4;
    uint64_t v19 = sub_1001263B0();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v16);
    uint64_t v22 = (uint64_t *)v31;
    swift_bridgeObjectRelease();
    *uint64_t v22 = v19;
    v22[1] = v21;
    sub_1000AF204(v18, v26);
    sub_100009D48((uint64_t)v25);
    return sub_1000AF268(v18);
  }
}

unint64_t sub_1000AE848()
{
  unint64_t result = 0x79616C70736964;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6665725065646968;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6B61657053726F66;
      break;
    case 4:
      unint64_t result = 0x6B6361626C6C6166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000AE90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000AFDE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000AE934(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1000AE940(uint64_t a1)
{
  unint64_t v2 = sub_1000AFA44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000AE97C(uint64_t a1)
{
  unint64_t v2 = sub_1000AFA44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000AE9B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000AEBE4(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000AE9FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AE3F4(a1, a2);
}

uint64_t sub_1000AEA14(void *a1)
{
  return sub_1000AE1A0(a1);
}

Swift::Int sub_1000AEA2C()
{
  return sub_100126630();
}

Swift::Int sub_1000AEA70()
{
  return sub_100126630();
}

uint64_t sub_1000AEAB0(uint64_t a1, uint64_t a2)
{
  sub_1001238A0();
  sub_1000AFAFC(&qword_100161FC8, (void (*)(uint64_t))&type metadata accessor for PriceChangeDisplay);
  sub_100125C60();
  sub_100125C60();
  if (v13 == v12
    && (uint64_t v4 = (int *)_s11FormatStyleVMa_0(), *(unsigned __int8 *)(a1 + v4[5]) == *(unsigned __int8 *)(a2 + v4[5]))
    && *(unsigned __int8 *)(a1 + v4[6]) == *(unsigned __int8 *)(a2 + v4[6])
    && *(unsigned __int8 *)(a1 + v4[7]) == *(unsigned __int8 *)(a2 + v4[7]))
  {
    uint64_t v7 = v4[8];
    uint64_t v8 = *(void *)(a1 + v7);
    uint64_t v9 = *(void *)(a1 + v7 + 8);
    uint64_t v10 = (void *)(a2 + v7);
    if (v8 == *v10 && v9 == v10[1]) {
      char v5 = 1;
    }
    else {
      char v5 = sub_100126530();
    }
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1000AEBE4(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5, int a6)
{
  LODWORD(v58) = a6;
  double v56 = *(double *)&a3;
  uint64_t v57 = a5;
  LODWORD(v59) = a2;
  double v55 = *(double *)&a1;
  uint64_t v8 = sub_1001233E0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (int *)_s11FormatStyleVMa_0();
  __chkstk_darwin(v11);
  id v52 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v51 = (char *)&v50 - v14;
  __chkstk_darwin(v15);
  int64_t v17 = (char *)&v50 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v50 - v19;
  uint64_t v21 = sub_1001238A0();
  uint64_t v22 = *(void *)(v21 - 8);
  __n128 v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v6;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16))(v25, v6, v21, v23);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v25, v21);
  if (v27 == enum case for PriceChangeDisplay.currency(_:))
  {
    if ((a4 & 1) == 0 && (LOBYTE(v59) & 1) == 0)
    {
      double v28 = v56;
      char v29 = v55 == 0.0 || v55 >= 5.0;
      id v30 = v11;
      if (*(unsigned char *)(v26 + v11[7]) != 1)
      {
        if (qword_10015D4D0 != -1)
        {
          double v59 = v56;
          swift_once();
          double v28 = v59;
        }
        uint64_t v31 = sub_1000B00A8(v29, v28);
        uint64_t v33 = v45;
        sub_1000AF204(v26, (uint64_t)v17);
        if (!v33)
        {
          id v46 = (uint64_t *)&v17[v11[8]];
          uint64_t v31 = *v46;
          uint64_t v33 = v46[1];
          swift_bridgeObjectRetain();
        }
        uint64_t v47 = (uint64_t)v17;
        goto LABEL_40;
      }
      if (qword_10015D4D0 != -1)
      {
        double v59 = v56;
        swift_once();
        double v28 = v59;
      }
      uint64_t v31 = sub_1000B01B4(v29, v28);
      uint64_t v33 = v32;
      uint64_t v34 = v26;
LABEL_37:
      sub_1000AF204(v34, (uint64_t)v20);
      if (!v33)
      {
        id v49 = (uint64_t *)&v20[v30[8]];
        uint64_t v31 = *v49;
        uint64_t v33 = v49[1];
        swift_bridgeObjectRetain();
      }
      uint64_t v47 = (uint64_t)v20;
LABEL_40:
      sub_1000AF268(v47);
LABEL_41:
      if (*(unsigned char *)(v26 + v30[6]) == 1)
      {
        uint64_t v64 = v31;
        uint64_t v65 = v33;
        uint64_t v62 = 32;
        unint64_t v63 = 0xE100000000000000;
        uint64_t v60 = 0;
        unint64_t v61 = 0xE000000000000000;
        sub_10001BA50();
        uint64_t v31 = sub_100126050();
        swift_bridgeObjectRelease();
      }
      return v31;
    }
LABEL_18:
    uint64_t v38 = v11[8];
    goto LABEL_27;
  }
  if (v27 == enum case for PriceChangeDisplay.percentage(_:))
  {
    if ((LOBYTE(v59) & 1) == 0 && (a4 & 1) == 0)
    {
      double v35 = v55;
      double v36 = v56;
      id v30 = v11;
      if (*(unsigned char *)(v6 + v11[7]) == 1)
      {
        if (qword_10015D4D8 != -1)
        {
          double v58 = v56;
          double v59 = v55;
          swift_once();
          double v36 = v58;
          double v35 = v59;
        }
        uint64_t v31 = sub_10011D6AC(v35, v36);
        uint64_t v33 = v37;
        uint64_t v34 = v26;
        uint64_t v20 = v51;
      }
      else
      {
        if (qword_10015D4D8 != -1)
        {
          double v58 = v56;
          double v59 = v55;
          swift_once();
          double v36 = v58;
          double v35 = v59;
        }
        uint64_t v31 = sub_10011D54C(*(unsigned char *)(v6 + v11[5]), v35, v36);
        uint64_t v33 = v48;
        uint64_t v34 = v26;
        uint64_t v20 = v52;
      }
      goto LABEL_37;
    }
    goto LABEL_18;
  }
  if (v27 == enum case for PriceChangeDisplay.marketCapitalization(_:))
  {
    id v30 = v11;
    if ((LOBYTE(v58) & 1) == 0)
    {
      if (qword_10015D4E0 != -1) {
        swift_once();
      }
      if (v57 >= 1)
      {
        uint64_t v39 = *(unsigned __int8 *)(v6 + v11[7]);
        id v40 = *(void **)(qword_1001725D0 + 16);
        sub_100123390();
        Class isa = sub_100123350().super.isa;
        (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v54);
        id v42 = [v40 formattedCount:v57 withLocale:isa longform:v39 compactDisplay:0];

        if (v42)
        {
          uint64_t v31 = sub_100125B10();
          uint64_t v33 = v43;

          goto LABEL_41;
        }
      }
    }
    uint64_t v38 = v30[8];
LABEL_27:
    uint64_t v31 = *(void *)(v6 + v38);
    swift_bridgeObjectRetain();
    return v31;
  }
  uint64_t result = sub_100126520();
  __break(1u);
  return result;
}

uint64_t _s11FormatStyleVMa_0()
{
  uint64_t result = qword_100161F40;
  if (!qword_100161F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000AF204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11FormatStyleVMa_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AF268(uint64_t a1)
{
  uint64_t v2 = _s11FormatStyleVMa_0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1000AF2C4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1001238A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v10 = (void *)((char *)a1 + v9);
    id v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000AF3B8(uint64_t a1)
{
  uint64_t v2 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000AF430(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000AF4D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000AF594(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1000AF62C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000AF6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AF6E8);
}

uint64_t sub_1000AF6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001238A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000AF7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AF7C0);
}

uint64_t sub_1000AF7C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1001238A0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1000AF880()
{
  uint64_t result = sub_1001238A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000AF924()
{
  return sub_1000AFAFC(&qword_100161F88, (void (*)(uint64_t))_s11FormatStyleVMa_0);
}

uint64_t sub_1000AF96C()
{
  return sub_1000AFAFC(&qword_100161F90, (void (*)(uint64_t))_s11FormatStyleVMa_0);
}

uint64_t sub_1000AF9B4()
{
  return sub_1000AFAFC(&qword_100161F98, (void (*)(uint64_t))_s11FormatStyleVMa_0);
}

uint64_t sub_1000AF9FC()
{
  return sub_1000AFAFC(&qword_100161FA0, (void (*)(uint64_t))_s11FormatStyleVMa_0);
}

unint64_t sub_1000AFA44()
{
  unint64_t result = qword_100161FB0;
  if (!qword_100161FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161FB0);
  }
  return result;
}

void sub_1000AFA98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1000AFA44();
    unint64_t v7 = a3(a1, &_s11FormatStyleV10CodingKeysON_0, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1000AFAFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s11FormatStyleV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11FormatStyleV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AFCA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11FormatStyleV10CodingKeysOMa_0()
{
  return &_s11FormatStyleV10CodingKeysON_0;
}

unint64_t sub_1000AFCDC()
{
  unint64_t result = qword_100161FD0;
  if (!qword_100161FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161FD0);
  }
  return result;
}

unint64_t sub_1000AFD34()
{
  unint64_t result = qword_100161FD8;
  if (!qword_100161FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161FD8);
  }
  return result;
}

unint64_t sub_1000AFD8C()
{
  unint64_t result = qword_100161FE0;
  if (!qword_100161FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100161FE0);
  }
  return result;
}

uint64_t sub_1000AFDE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79616C70736964 && a2 == 0xE700000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6665725065646968 && a2 == 0xEA00000000007869 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100132040 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B61657053726F66 && a2 == 0xEB00000000676E69 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEC00000074786554)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1000B0034()
{
  type metadata accessor for PriceFormatter();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100123360();
  qword_1001726A0 = v0;
  return result;
}

uint64_t type metadata accessor for PriceChangeFormatter()
{
  return self;
}

uint64_t sub_1000B00A8(char a1, double a2)
{
  if (qword_10015D578 != -1) {
    swift_once();
  }
  id v4 = (id)sub_10002F64C(a1, 3, 0, a2);
  [v4 setNumberStyle:1];
  id v5 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a2];
  id v6 = [v4 stringFromNumber:v5];

  if (v6)
  {
    uint64_t v7 = sub_100125B10();
  }
  else
  {

    return 0;
  }
  return v7;
}

uint64_t sub_1000B01B4(char a1, double a2)
{
  if (qword_10015D578 != -1) {
    swift_once();
  }
  double v4 = fabs(a2);
  id v5 = (id)sub_10002F64C(a1, 3, 1, v4);
  [v5 setNumberStyle:1];
  id v6 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v4];
  id v7 = [v5 stringFromNumber:v6];

  if (v7)
  {
    uint64_t v8 = sub_100125B10();
    uint64_t v10 = v9;

    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v12 = self;
    uint64_t v13 = (objc_class *)[v12 bundleForClass:ObjCClassFromMetadata];
    v27._countAndFlagsBits = 0xD000000000000013;
    v25._countAndFlagsBits = 0x80000001001320B0;
    v27._object = (void *)0x8000000100132090;
    v28.value._countAndFlagsBits = 0;
    v28.value._object = 0;
    v14.super.Class isa = v13;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    sub_100123070(v27, v28, v14, v30, v25);

    uint64_t v15 = (objc_class *)[v12 bundleForClass:ObjCClassFromMetadata];
    if (a2 >= 0.0)
    {
      v26._countAndFlagsBits = 0x8000000100132120;
      v16._countAndFlagsBits = 28789;
      v16._object = (void *)0xE200000000000000;
    }
    else
    {
      v26._countAndFlagsBits = 0x80000001001320E0;
      v16._countAndFlagsBits = 1853321060;
      v16._object = (void *)0xE400000000000000;
    }
    v29.value._countAndFlagsBits = 0;
    v29.value._object = 0;
    v18.super.Class isa = v15;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    uint64_t v19 = sub_100123070(v16, v29, v18, v31, v26);
    uint64_t v21 = v20;

    sub_100005590();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1001276F0;
    *(void *)(v22 + 56) = &type metadata for Double;
    *(void *)(v22 + 64) = &protocol witness table for Double;
    *(double *)(v22 + 32) = v4;
    *(void *)(v22 + 96) = &type metadata for String;
    unint64_t v23 = sub_100005648();
    *(void *)(v22 + 72) = v19;
    *(void *)(v22 + 80) = v21;
    *(void *)(v22 + 136) = &type metadata for String;
    *(void *)(v22 + 144) = v23;
    *(void *)(v22 + 104) = v23;
    *(void *)(v22 + 112) = v8;
    *(void *)(v22 + 120) = v10;
    uint64_t v17 = sub_100125AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    return 0;
  }
  return v17;
}

uint64_t sub_1000B048C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B04A0);
}

uint64_t sub_1000B04A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1000805B8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_10005A9D8();
      NSBundle v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000B05FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B0610);
}

uint64_t sub_1000B0610(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1000805B8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_10005A9D8();
      NSBundle v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for MediumDetailWithNewsContentView()
{
  uint64_t result = qword_1001620D8;
  if (!qword_1001620D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000B07B8()
{
  sub_1000805B8(319, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_10005A9D8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000B08E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B0900@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v85 = type metadata accessor for HeadlinesList();
  __chkstk_darwin(v85);
  id v87 = &v66[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000804F4(0, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  uint64_t v86 = v4;
  __chkstk_darwin(v4);
  id v90 = &v66[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v89 = &v66[-v7];
  uint64_t v84 = sub_100125750();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = &v66[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100080494();
  uint64_t v81 = v9;
  __chkstk_darwin(v9);
  uint64_t v88 = &v66[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v94 = &v66[-v12];
  uint64_t v13 = type metadata accessor for RowWithChartTicker();
  __chkstk_darwin(v13);
  uint64_t v15 = &v66[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000804F4(0, &qword_100160D60, (void (*)(uint64_t))type metadata accessor for RowWithChartTicker);
  uint64_t v79 = v16;
  __chkstk_darwin(v16);
  id v93 = &v66[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  uint64_t v92 = &v66[-v19];
  LODWORD(v78) = *((unsigned __int8 *)a1 + 80);
  uint64_t v20 = a1[1];
  uint64_t v77 = *a1;
  uint64_t v21 = a1[3];
  uint64_t v76 = a1[2];
  uint64_t v22 = a1[5];
  uint64_t v75 = a1[4];
  uint64_t v23 = a1[6];
  uint64_t v72 = a1[7];
  uint64_t v24 = a1[8];
  uint64_t v25 = a1[9];
  uint64_t v74 = a1[11];
  long long v73 = (uint64_t (*)())*((unsigned __int8 *)a1 + 96);
  uint64_t v26 = a1[14];
  uint64_t v71 = a1[13];
  uint64_t v70 = a1[15];
  uint64_t v69 = *((unsigned __int8 *)a1 + 128);
  uint64_t v68 = a1[17];
  int v67 = *((unsigned __int8 *)a1 + 144);
  uint64_t v80 = type metadata accessor for MediumDetailWithNewsContentView();
  sub_100032264((uint64_t)a1 + *(int *)(v80 + 36), (uint64_t)&v15[*(int *)(v13 + 36)]);
  *uint64_t v15 = v78;
  *((void *)v15 + 1) = v77;
  *((void *)v15 + 2) = v20;
  *((void *)v15 + 3) = v76;
  *((void *)v15 + 4) = v21;
  *((void *)v15 + 5) = v75;
  *((void *)v15 + 6) = v22;
  uint64_t v27 = v72;
  *((void *)v15 + 7) = v23;
  *((void *)v15 + 8) = v27;
  *((void *)v15 + 9) = v24;
  *((void *)v15 + 10) = v25;
  Swift::String_optional v28 = v73;
  *((void *)v15 + 11) = v74;
  *((void *)v15 + 12) = v28;
  *((void *)v15 + 13) = v71;
  *((void *)v15 + 14) = v26;
  uint64_t v29 = v69;
  *((void *)v15 + 15) = v70;
  *((void *)v15 + 16) = v29;
  *((void *)v15 + 17) = v68;
  v15[144] = v67;
  uint64_t v78 = v13;
  uint64_t v77 = *(int *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000321B8(v23, v27, v24, v25);
  uint64_t v30 = qword_10015D598;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  sub_100080560(0, (unint64_t *)&qword_10015D670, (uint64_t)&type metadata for Bool, (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for SettingProperty);
  swift_allocObject();
  swift_retain();
  *(void *)&v15[v77] = sub_100123FD0();
  Swift::String v31 = (uint64_t *)&v15[*(int *)(v78 + 44)];
  *Swift::String v31 = swift_getKeyPath();
  sub_1000805B8(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  *(unsigned char *)(v33 + 24) = 1;
  *(void *)(v33 + 32) = 0;
  *(unsigned char *)(v33 + 40) = 0;
  uint64_t v34 = v93;
  sub_100080634((uint64_t)v15, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for RowWithChartTicker);
  double v35 = (uint64_t *)&v34[*(int *)(v79 + 36)];
  *double v35 = KeyPath;
  v35[1] = (uint64_t)sub_1000321B4;
  v35[2] = v33;
  sub_10008069C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for RowWithChartTicker);
  long long v73 = type metadata accessor for RowWithChartTicker;
  double v36 = v92;
  sub_100080774((uint64_t)v34, (uint64_t)v92, &qword_100160D60, (void (*)(uint64_t))type metadata accessor for RowWithChartTicker);
  sub_1001257D0();
  sub_100124990();
  uint64_t v79 = v95;
  LODWORD(v78) = v96;
  uint64_t v77 = v97;
  LODWORD(v76) = v98;
  uint64_t v75 = v99;
  uint64_t v74 = v100;
  uint64_t v37 = v82;
  sub_100125740();
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = v83;
  uint64_t v40 = (uint64_t)v88;
  uint64_t v41 = v84;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v83 + 16))(v88, v37, v84);
  uint64_t v42 = v40 + *(int *)(v81 + 36);
  *(unsigned char *)uint64_t v42 = 1;
  *(void *)(v42 + 8) = v38;
  *(void *)(v42 + 16) = 0;
  *(void *)(v42 + 24) = 0;
  *(void *)(v42 + 32) = 0;
  *(unsigned char *)(v42 + 40) = 0;
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v37, v41);
  sub_100080700(v40, (uint64_t)v94);
  sub_1001257D0();
  sub_100124990();
  uint64_t v84 = v101;
  LODWORD(v83) = v102;
  uint64_t v82 = v103;
  LODWORD(v81) = v104;
  uint64_t v72 = v105;
  uint64_t v71 = v106;
  uint64_t v43 = (uint64_t)a1 + *(int *)(v80 + 40);
  sub_10005A9D8();
  uint64_t v45 = (uint64_t)v87;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v87, v43, v44);
  uint64_t v46 = sub_1001243E0();
  uint64_t v47 = v85;
  *(void *)(v45 + *(int *)(v85 + 20)) = v46;
  *(void *)(v45 + *(int *)(v47 + 24)) = 0x4028000000000000;
  uint64_t v48 = swift_getKeyPath();
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = 0;
  *(unsigned char *)(v49 + 24) = 0;
  *(void *)(v49 + 32) = 0;
  *(unsigned char *)(v49 + 40) = 1;
  uint64_t v50 = v90;
  sub_100080634(v45, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for HeadlinesList);
  id v51 = (uint64_t *)&v50[*(int *)(v86 + 36)];
  *id v51 = v48;
  v51[1] = (uint64_t)sub_1000321B4;
  v51[2] = v49;
  sub_10008069C(v45, (uint64_t (*)(void))type metadata accessor for HeadlinesList);
  id v52 = v89;
  sub_100080774((uint64_t)v50, (uint64_t)v89, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  uint64_t v53 = (uint64_t)v36;
  uint64_t v54 = (uint64_t)v34;
  uint64_t v55 = (uint64_t)v34;
  double v56 = (void (*)(uint64_t))v73;
  sub_1000807E0(v53, v55, &qword_100160D60, (void (*)(uint64_t))v73);
  uint64_t v57 = v94;
  sub_100080634((uint64_t)v94, v40, (uint64_t (*)(void))sub_100080494);
  sub_1000807E0((uint64_t)v52, (uint64_t)v50, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  uint64_t v58 = v91;
  sub_1000807E0(v54, v91, &qword_100160D60, v56);
  sub_100080398();
  uint64_t v60 = v59;
  uint64_t v61 = v58 + *(int *)(v59 + 48);
  *(void *)uint64_t v61 = 0;
  *(unsigned char *)(v61 + 8) = 1;
  *(void *)(v61 + 16) = v79;
  *(unsigned char *)(v61 + 24) = v78;
  *(void *)(v61 + 32) = v77;
  *(unsigned char *)(v61 + 40) = v76;
  uint64_t v62 = v74;
  *(void *)(v61 + 48) = v75;
  *(void *)(v61 + 56) = v62;
  sub_100080634(v40, v58 + *(int *)(v59 + 64), (uint64_t (*)(void))sub_100080494);
  uint64_t v63 = v58 + *(int *)(v60 + 80);
  *(void *)uint64_t v63 = 0;
  *(unsigned char *)(v63 + 8) = 1;
  *(void *)(v63 + 16) = v84;
  *(unsigned char *)(v63 + 24) = v83;
  *(void *)(v63 + 32) = v82;
  *(unsigned char *)(v63 + 40) = v81;
  uint64_t v64 = v71;
  *(void *)(v63 + 48) = v72;
  *(void *)(v63 + 56) = v64;
  sub_1000807E0((uint64_t)v50, v58 + *(int *)(v60 + 96), &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  sub_10008084C((uint64_t)v52, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  sub_10008069C((uint64_t)v57, (uint64_t (*)(void))sub_100080494);
  sub_10008084C((uint64_t)v92, &qword_100160D60, v56);
  sub_10008084C((uint64_t)v50, &qword_100160D70, (void (*)(uint64_t))type metadata accessor for HeadlinesList);
  sub_10008069C(v40, (uint64_t (*)(void))sub_100080494);
  return sub_10008084C((uint64_t)v93, &qword_100160D60, v56);
}

uint64_t sub_1000B1410@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100124EF0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  sub_100080300();
  return sub_1000B0900(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1000B1468()
{
  return swift_deallocObject();
}

uint64_t sub_1000B147C()
{
  return swift_deallocObject();
}

uint64_t *sub_1000B148C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10005A9D8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1000B1560(uint64_t a1)
{
  sub_10005A9D8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1000B15C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10005A9D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1000B1648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10005A9D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1000B16D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10005A9D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1000B1754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10005A9D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1000B17D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B17EC);
}

uint64_t sub_1000B17EC(uint64_t a1, uint64_t a2)
{
  sub_10005A9D8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000B1858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B186C);
}

uint64_t sub_1000B186C(uint64_t a1, uint64_t a2)
{
  sub_10005A9D8();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HeadlinesList()
{
  uint64_t result = qword_100162180;
  if (!qword_100162180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000B1928()
{
  sub_10005A9D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000B19C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B19E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for HeadlinesList();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = type metadata accessor for HeadlineView(0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003D2F8(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B26EC(a1, (uint64_t)v12, type metadata accessor for HeadlineViewModel);
  uint64_t v16 = (uint64_t *)&v12[*(int *)(v10 + 28)];
  *uint64_t v16 = swift_getKeyPath();
  sub_1000B2520(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = sub_1001257B0();
  sub_100039B04(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0, v17, v18);
  sub_1000B2754((uint64_t)v12, type metadata accessor for HeadlineView);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000B26EC(a2, (uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for HeadlinesList);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  sub_1000B22E8((uint64_t)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  sub_1000B26EC((uint64_t)v15, a3, (uint64_t (*)(void))sub_10003D2F8);
  sub_1000B2134();
  uint64_t v23 = (uint64_t *)(a3 + *(int *)(v22 + 36));
  *uint64_t v23 = KeyPath;
  v23[1] = (uint64_t)sub_1000B2668;
  uint64_t v23[2] = v21;
  return sub_1000B2754((uint64_t)v15, (uint64_t (*)(void))sub_10003D2F8);
}

void sub_1000B1CD8(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = a1 - 8;
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(a1);
  sub_10005A9D8();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v2 + *(int *)(v5 + 28));
  if (v13 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)(v2 + *(int *)(a1 + 24));
    *a2 = 1;
    a2[1] = 0;
    a2[2] = v13;
    a2[3] = v14;
    sub_1000B1F40();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v2, v9);
    sub_1000B26EC(v2, (uint64_t)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for HeadlinesList);
    unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v16 = swift_allocObject();
    sub_1000B22E8((uint64_t)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
    sub_1000B2134();
    sub_1000B219C();
    sub_1000B23CC();
    sub_1000B229C(&qword_100162210, (void (*)(uint64_t))type metadata accessor for HeadlineViewModel);
    sub_100125770();
  }
}

void sub_1000B1F40()
{
  if (!qword_1001621C0)
  {
    sub_1000B1FEC();
    sub_1000B209C();
    sub_1000B229C(&qword_1001621F8, (void (*)(uint64_t))sub_1000B1FEC);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001621C0);
    }
  }
}

void sub_1000B1FEC()
{
  if (!qword_1001621C8)
  {
    sub_1000B2048();
    unint64_t v0 = sub_100124930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001621C8);
    }
  }
}

unint64_t sub_1000B2048()
{
  unint64_t result = qword_1001621D0;
  if (!qword_1001621D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001621D0);
  }
  return result;
}

void sub_1000B209C()
{
  if (!qword_1001621D8)
  {
    sub_10005A9D8();
    sub_1000B2134();
    sub_1000B219C();
    unint64_t v0 = sub_100125780();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001621D8);
    }
  }
}

void sub_1000B2134()
{
  if (!qword_1001621E0)
  {
    sub_10003D2F8(255);
    sub_100031E94();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001621E0);
    }
  }
}

unint64_t sub_1000B219C()
{
  unint64_t result = qword_1001621E8;
  if (!qword_1001621E8)
  {
    sub_10005A9D8();
    sub_1000B2228(&qword_1001621F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001621E8);
  }
  return result;
}

uint64_t sub_1000B2228(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000B2520(255, &qword_10015E710, type metadata accessor for HeadlineViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B229C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B22E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadlinesList();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B234C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HeadlinesList() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000B19E0(a1, v6, a2);
}

unint64_t sub_1000B23CC()
{
  unint64_t result = qword_100162200;
  if (!qword_100162200)
  {
    sub_1000B2134();
    sub_1000B2474();
    sub_1000B229C((unint64_t *)&qword_100160140, (void (*)(uint64_t))sub_100031E94);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162200);
  }
  return result;
}

unint64_t sub_1000B2474()
{
  unint64_t result = qword_100162208;
  if (!qword_100162208)
  {
    sub_10003D2F8(255);
    sub_1000B229C(&qword_10015FAF8, (void (*)(uint64_t))type metadata accessor for HeadlineView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162208);
  }
  return result;
}

void sub_1000B2520(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000B2590()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for HeadlinesList() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  sub_10005A9D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_deallocObject();
}

uint64_t sub_1000B2668(double *a1)
{
  uint64_t v3 = type metadata accessor for HeadlinesList();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = v3 - 8;
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  double v7 = *a1;
  uint64_t v8 = *(int *)(result + 32);
  double v9 = *(double *)(v6 + v8);
  if (v9 < *a1) {
    double v7 = *(double *)(v6 + v8);
  }
  *a1 = v7;
  double v10 = a1[2];
  if (v9 < v10) {
    double v10 = v9;
  }
  a1[2] = v10;
  return result;
}

uint64_t sub_1000B26EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000B2754(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000B27B8()
{
  unint64_t result = qword_100162218;
  if (!qword_100162218)
  {
    sub_1000B1F40();
    sub_1000B229C(&qword_100162220, (void (*)(uint64_t))sub_1000B1FEC);
    sub_1000B2860();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162218);
  }
  return result;
}

unint64_t sub_1000B2860()
{
  unint64_t result = qword_100162228;
  if (!qword_100162228)
  {
    sub_1000B209C();
    sub_1000B23CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162228);
  }
  return result;
}

uint64_t destroy for StockPrice()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StockPrice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StockPrice(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StockPrice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StockPrice()
{
  return &type metadata for StockPrice;
}

uint64_t sub_1000B29C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  sub_1000B3054(0, &qword_100162240, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v13 - v10;
  sub_100009D98(a1, a1[3]);
  sub_1000B3000();
  sub_100126650();
  char v15 = 0;
  sub_100126450();
  if (!v5)
  {
    char v14 = 1;
    sub_100126440();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1000B2B48()
{
  if (*v0) {
    return 0x79636E6572727563;
  }
  else {
    return 0x746E756F6D61;
  }
}

uint64_t sub_1000B2B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000B2D34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000B2BB0(uint64_t a1)
{
  unint64_t v2 = sub_1000B3000();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000B2BEC(uint64_t a1)
{
  unint64_t v2 = sub_1000B3000();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_1000B2C28(uint64_t a1, uint64_t a2)
{
  return sub_1000B2CB8(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)a2, *(unsigned char *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1000B2C54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1000B2E38(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1000B2C8C(void *a1)
{
  return sub_1000B29C0(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

BOOL sub_1000B2CB8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    if ((a6 & 1) == 0) {
      return 0;
    }
  }
  else if ((a6 & 1) != 0 || *(double *)&a1 != *(double *)&a5)
  {
    return 0;
  }
  if (a4) {
    return a8 && (a3 == a7 && a4 == a8 || (sub_100126530() & 1) != 0);
  }
  return !a8;
}

uint64_t sub_1000B2D34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F6D61 && a2 == 0xE600000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000B2E38(void *a1)
{
  sub_1000B3054(0, &qword_100162230, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  sub_100009D98(a1, v8);
  sub_1000B3000();
  sub_100126640();
  if (!v1)
  {
    char v12 = 0;
    uint64_t v8 = sub_100126380();
    char v11 = 1;
    sub_100126370();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_100009D48((uint64_t)a1);
  return v8;
}

unint64_t sub_1000B3000()
{
  unint64_t result = qword_100162238;
  if (!qword_100162238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162238);
  }
  return result;
}

void sub_1000B3054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1000B3000();
    unint64_t v7 = a3(a1, &type metadata for StockPrice.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StockPrice.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B3184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockPrice.CodingKeys()
{
  return &type metadata for StockPrice.CodingKeys;
}

unint64_t sub_1000B31C0()
{
  unint64_t result = qword_100162248;
  if (!qword_100162248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162248);
  }
  return result;
}

unint64_t sub_1000B3218()
{
  unint64_t result = qword_100162250;
  if (!qword_100162250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162250);
  }
  return result;
}

unint64_t sub_1000B3270()
{
  unint64_t result = qword_100162258;
  if (!qword_100162258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162258);
  }
  return result;
}

uint64_t sub_1000B32C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B32D8);
}

uint64_t sub_1000B32D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124570();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1000B3344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B3358);
}

uint64_t sub_1000B3358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124570();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for OverviewTimelineProvider(uint64_t a1)
{
  return sub_100009E3C(a1, qword_1001622B8);
}

uint64_t sub_1000B33EC()
{
  return sub_1000B3468(qword_1001622F0, (void (*)(uint64_t))type metadata accessor for OverviewTimelineEntry);
}

uint64_t sub_1000B3420()
{
  return sub_1000B3468(&qword_10015EF18, (void (*)(uint64_t))&type metadata accessor for WatchlistWidgetConfigurationIntent);
}

uint64_t sub_1000B3468(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B34B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v5 = sub_100123A70();
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  __chkstk_darwin(v5);
  uint64_t v65 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001239E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v68 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v66 = (char *)&v63 - v11;
  sub_1000BE974(0);
  __chkstk_darwin(v12 - 8);
  int v67 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t v17 = sub_100123BD0();
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  uint64_t v69 = a1;
  v22(v21, a1, v17, v19);
  uint64_t v75 = a2;
  uint64_t v23 = sub_100124550();
  int v24 = sub_100125F60();
  BOOL v25 = os_log_type_enabled(v23, (os_log_type_t)v24);
  uint64_t v73 = v17;
  uint64_t v74 = v7;
  uint64_t v76 = v18;
  uint64_t v77 = v8;
  if (v25)
  {
    LODWORD(v64) = v24;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = v7;
    uint64_t v78 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    sub_100123BC0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7))
    {
      sub_1000BF0FC((uint64_t)v16, (uint64_t (*)(void))sub_1000BE974);
      unint64_t v28 = 0xE300000000000000;
      uint64_t v29 = 7104878;
    }
    else
    {
      Swift::String v31 = v66;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v66, v16, v27);
      sub_1000BF0FC((uint64_t)v16, (uint64_t (*)(void))sub_1000BE974);
      uint64_t v29 = sub_1001239D0();
      unint64_t v28 = v32;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v31, v27);
    }
    uint64_t v80 = sub_1000AB124(v29, v28, &v78);
    sub_100126030();
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v76 + 8);
    uint64_t v17 = v73;
    v30(v21, v73);
    _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v64, "Resolving intent: %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v7 = v74;
  }
  else
  {

    uint64_t v30 = *(void (**)(char *, uint64_t))(v18 + 8);
    v30(v21, v17);
  }
  uint64_t v33 = (uint64_t)v67;
  uint64_t v34 = v69;
  sub_100123BC0();
  uint64_t v35 = v77;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v33, 1, v7) == 1)
  {
    sub_1000BF0FC(v33, (uint64_t (*)(void))sub_1000BE974);
    uint64_t v36 = v75;
    uint64_t v37 = sub_100124550();
    os_log_type_t v38 = sub_100125F40();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315138;
      if (qword_10015D4C8 != -1) {
        swift_once();
      }
      sub_100126690();
      uint64_t v78 = sub_1000AB124(v78, v79, &v80);
      sub_100126030();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Malformed widget configuration, falling back to default entity, id=%s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v7 = v74;
      uint64_t v36 = v75;
      uint64_t v35 = v77;
    }
    else
    {
    }
    uint64_t v45 = v66;
    sub_1001239C0();
    uint64_t v46 = sub_1001239D0();
    uint64_t v48 = v47;
    uint64_t v49 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v36, v49);
    v30((char *)v34, v73);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v45, v7);
    uint64_t v50 = type metadata accessor for OverviewTimelineProvider.Configuration(0);
    id v51 = v72;
    uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v70 + 104))((char *)v72 + *(int *)(v50 + 28), enum case for NewsDisplayConfiguration.afterHours(_:), v71);
    *id v51 = v46;
    v51[1] = v48;
    *((_WORD *)v51 + 8) = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v68, v33, v7);
    uint64_t v40 = v75;
    uint64_t v41 = sub_100124550();
    os_log_type_t v42 = sub_100125F60();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v64 = (void (*)(uint64_t, uint64_t))v30;
    if (v43)
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315138;
      if (qword_10015D4C8 != -1) {
        swift_once();
      }
      sub_100126690();
      uint64_t v78 = sub_1000AB124(v78, v79, &v80);
      sub_100126030();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Successfully loaded widget entity, id=%s", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v35 = v77;
      uint64_t v17 = v73;
    }
    else
    {
    }
    uint64_t v53 = v68;
    uint64_t v54 = sub_1001239D0();
    uint64_t v56 = v55;
    char v57 = sub_1000B3E20(v34, v40, (uint64_t (*)(void))&WatchlistWidgetConfigurationIntent.showWatchlistNameValue.getter, "Missing showWatchlistName on intent, id=%s");
    char v58 = sub_1000B3E20(v34, v40, (uint64_t (*)(void))&WatchlistWidgetConfigurationIntent.showMoreDataValue.getter, "Missing showMoreDetails on intent, id=%s");
    uint64_t v59 = v65;
    sub_1000B3FB0(v65);
    uint64_t v60 = sub_100124570();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v40, v60);
    v64(v34, v17);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v53, v74);
    uint64_t v61 = v72;
    *uint64_t v72 = v54;
    v61[1] = v56;
    *((unsigned char *)v61 + 16) = v57 & 1;
    *((unsigned char *)v61 + 17) = v58 & 1;
    uint64_t v62 = type metadata accessor for OverviewTimelineProvider.Configuration(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 32))((char *)v61 + *(int *)(v62 + 28), v59, v71);
  }
  return result;
}

uint64_t sub_1000B3E20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), const char *a4)
{
  char v5 = a3();
  if (v5 != 2) {
    return v5 & 1;
  }
  uint64_t v6 = sub_100124550();
  os_log_type_t v7 = sub_100125F40();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    sub_1000AB124(v10, v11, &v12);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a4, v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return 0;
}

uint64_t sub_1000B3FB0@<X0>(uint64_t a1@<X8>)
{
  sub_100029E0C(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123BB0();
  uint64_t v5 = sub_100123A70();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  sub_1000BF0FC((uint64_t)v4, (uint64_t (*)(void))sub_100029E0C);
  os_log_type_t v7 = sub_100124550();
  os_log_type_t v8 = sub_100125F40();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    uint64_t v12 = sub_1000AB124(v12, v13, &v14);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Missing newsDisplayConfiguration on intent, id=%s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v6 + 104))(a1, enum case for NewsDisplayConfiguration.afterHours(_:), v5);
}

uint64_t sub_1000B4238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_100029204(0);
  v4[6] = swift_task_alloc();
  uint64_t v5 = sub_100122D20();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_1001232B0();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v7 = sub_1001239E0();
  v4[13] = v7;
  v4[14] = *(void *)(v7 - 8);
  v4[15] = swift_task_alloc();
  sub_1000BE974(0);
  v4[16] = swift_task_alloc();
  return _swift_task_switch(sub_1000B440C, 0, 0);
}

uint64_t sub_1000B440C()
{
  uint64_t v1 = v0[8].i64[0];
  uint64_t v2 = v0[6].i64[1];
  uint64_t v3 = v0[7].i64[0];
  sub_100123BC0();
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = v0[8].i64[0];
  if (v4)
  {
    sub_1000BF0FC(v0[8].i64[0], (uint64_t (*)(void))sub_1000BE974);
    uint64_t v6 = (void *)0xE300000000000000;
    uint64_t v7 = 7104878;
  }
  else
  {
    uint64_t v9 = v0[7].i64[0];
    uint64_t v8 = v0[7].i64[1];
    uint64_t v10 = v0[6].i64[1];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v0[8].i64[0], v10);
    sub_1000BF0FC(v5, (uint64_t (*)(void))sub_1000BE974);
    uint64_t v7 = sub_1001239D0();
    uint64_t v6 = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v12 = v0[5].i64[1];
  uint64_t v27 = v0[5].i64[0];
  uint64_t v13 = v0[4].i64[0];
  uint64_t v14 = v0[4].i64[1];
  uint64_t v15 = v0[3].i64[0];
  uint64_t v16 = v0[3].i64[1];
  v30._countAndFlagsBits = v7;
  v30._object = v6;
  sub_100125BB0(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 45;
  v31._object = (void *)0xE100000000000000;
  sub_100125BB0(v31);
  sub_100123BD0();
  sub_1000B3468(&qword_100162360, (void (*)(uint64_t))&type metadata accessor for WatchlistWidgetConfigurationIntent);
  sub_100122BA0();
  sub_100122D10();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v15, 1, v27) == 1)
  {
    uint64_t v17 = v0[3].i64[0];
    sub_100123270();
    sub_1000BF0FC(v17, (uint64_t (*)(void))sub_100029204);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[5].i64[1] + 32))(v0[6].i64[0], v0[3].i64[0], v0[5].i64[0]);
  }
  uint64_t v19 = v0[5].i64[1];
  uint64_t v18 = v0[6].i64[0];
  uint64_t v20 = v0[5].i64[0];
  uint64_t v21 = v0[1].i64[1];
  sub_1000B3468(&qword_10015E758, (void (*)(uint64_t))&type metadata accessor for Date);
  int8x16_t v28 = v0[2];
  v32._countAndFlagsBits = sub_1001264F0();
  sub_100125BB0(v32);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  v0[8].i64[1] = 0xEA00000000002D74;
  uint64_t v22 = (int8x16_t *)swift_task_alloc();
  v0[9].i64[0] = (uint64_t)v22;
  v22[1].i64[0] = 0x73696C6863746177;
  v22[1].i64[1] = 0xEA00000000002D74;
  v22[2] = vextq_s8(v28, v28, 8uLL);
  v22[3].i64[0] = v21;
  uint64_t v23 = (void *)swift_task_alloc();
  v0[9].i64[1] = (uint64_t)v23;
  uint64_t v24 = type metadata accessor for OverviewTimelineEntry();
  *uint64_t v23 = v0;
  v23[1] = sub_10001D1A0;
  uint64_t v25 = v0[1].i64[0];
  return withOSActivity<A>(_:operation:)(v25, "Watchlist Widget Snapshot", 25, 2, &unk_100162370, v22, v24);
}

uint64_t sub_1000B47B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  _OWORD v6[4] = a1;
  v6[5] = a2;
  return _swift_task_switch(sub_1000B47E0, 0, 0);
}

uint64_t sub_1000B47E0()
{
  if (qword_10015D4C8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  *(void *)(v0 + 16) = *(void *)(v0 + 40);
  *(void *)(v0 + 24) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 56);
  *(void *)(v3 + 32) = v1;
  swift_bridgeObjectRetain();
  int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  type metadata accessor for OverviewTimelineEntry();
  *int v4 = v0;
  v4[1] = sub_10001D508;
  uint64_t v5 = *(void *)(v0 + 32);
  return TaskLocal.withValue<A>(_:operation:isolation:file:line:)(v5, v0 + 16, &unk_100162380, v3, 0, 0, 0xD00000000000002BLL, 0x8000000100132180);
}

uint64_t sub_1000B4950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_100123BD0();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = type metadata accessor for OverviewTimelineProvider.Configuration(0);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  uint64_t v6 = sub_1001258F0();
  v4[19] = v6;
  v4[20] = *(void *)(v6 - 8);
  v4[21] = swift_task_alloc();
  uint64_t v7 = sub_1001259A0();
  v4[22] = v7;
  v4[23] = *(void *)(v7 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  uint64_t v8 = sub_100124570();
  v4[26] = v8;
  v4[27] = *(void *)(v8 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  return _swift_task_switch(sub_1000B4BD0, 0, 0);
}

uint64_t sub_1000B4BD0()
{
  uint64_t v91 = v0;
  uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 216) + 16);
  v89(*(void *)(v0 + 264), *(void *)(v0 + 64), *(void *)(v0 + 208));
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v87 = *(void *)(v0 + 264);
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v84 = *(void *)(v0 + 208);
    sub_100126690();
    *(void *)(v0 + 32) = sub_1000AB124(*(void *)(v0 + 16), *(void *)(v0 + 24), &v90);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Starting snapshot fetch, id=%s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v87;
    uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v88(v5, v84);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 264);
    uint64_t v7 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 216);

    uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v88(v6, v7);
  }
  uint64_t v9 = *(void *)(v0 + 200);
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v10 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 72);
  v89(*(void *)(v0 + 256), *(void *)(v0 + 64), *(void *)(v0 + 208));
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v14(v9, v13, v12);
  v14(v10, v13, v12);
  uint64_t v15 = sub_100124550();
  os_log_type_t v16 = sub_100125F60();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v18 = *(void *)(v0 + 256);
  uint64_t v19 = *(void *)(v0 + 208);
  uint64_t v20 = *(void *)(v0 + 200);
  uint64_t v21 = *(void *)(v0 + 176);
  uint64_t v22 = *(void *)(v0 + 184);
  if (v17)
  {
    uint64_t v82 = *(void *)(v0 + 256);
    uint64_t v85 = *(void *)(v0 + 208);
    uint64_t v23 = *(void *)(v0 + 160);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 152);
    uint64_t v79 = *(void *)(v0 + 192);
    log = v15;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315394;
    os_log_type_t type = v16;
    sub_100125980();
    sub_1000B3468(&qword_10015E790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    uint64_t v27 = sub_1001264F0();
    unint64_t v29 = v28;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    *(void *)(v0 + 48) = sub_1000AB124(v27, v29, &v90);
    sub_100126030();
    swift_bridgeObjectRelease();
    Swift::String v30 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v30(v20, v21);
    *(_WORD *)(v26 + 12) = 1024;
    LODWORD(v23) = sub_100125990() & 1;
    v30(v79, v21);
    *(_DWORD *)(v0 + 284) = v23;
    sub_100126030();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Snapshot context. family: %s, isPreview: %{BOOL}d", (uint8_t *)v26, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v31 = v82;
    uint64_t v32 = v85;
  }
  else
  {
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v33(*(void *)(v0 + 192), *(void *)(v0 + 176));
    v33(v20, v21);

    uint64_t v31 = v18;
    uint64_t v32 = v19;
  }
  v88(v31, v32);
  uint64_t v34 = *(void *)(v0 + 240);
  uint64_t v35 = *(void *)(v0 + 248);
  uint64_t v36 = *(void *)(v0 + 208);
  uint64_t v38 = *(void *)(v0 + 136);
  uint64_t v37 = *(uint64_t **)(v0 + 144);
  uint64_t v39 = *(void *)(v0 + 104);
  uint64_t v40 = *(void *)(v0 + 64);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 96) + 16))(v39, *(void *)(v0 + 80), *(void *)(v0 + 88));
  v89(v35, v40, v36);
  sub_1000B34B0(v39, v35, v37);
  v89(v34, v40, v36);
  sub_1000BEEDC((uint64_t)v37, v38, type metadata accessor for OverviewTimelineProvider.Configuration);
  uint64_t v41 = sub_100124550();
  os_log_type_t v42 = sub_100125F60();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v44 = *(void *)(v0 + 240);
  uint64_t v45 = *(void *)(v0 + 208);
  uint64_t v46 = *(void *)(v0 + 136);
  if (v43)
  {
    uint64_t v83 = *(void *)(v0 + 208);
    uint64_t v86 = *(void *)(v0 + 240);
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 136446210;
    uint64_t v48 = sub_100123A60();
    *(void *)(v0 + 40) = sub_1000AB124(v48, v49, &v90);
    sub_100126030();
    swift_bridgeObjectRelease();
    sub_1000BF0FC(v46, type metadata accessor for OverviewTimelineProvider.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Resolved configuration. newsDisplayConfiguration: %{public}s", v47, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v51 = v83;
    uint64_t v50 = v86;
  }
  else
  {
    sub_1000BF0FC(*(void *)(v0 + 136), type metadata accessor for OverviewTimelineProvider.Configuration);

    uint64_t v50 = v44;
    uint64_t v51 = v45;
  }
  v88(v50, v51);
  uint64_t v52 = *(void *)(v0 + 144);
  uint64_t v53 = *(void *)(v0 + 128);
  v89(*(void *)(v0 + 232), *(void *)(v0 + 64), *(void *)(v0 + 208));
  sub_1000BEEDC(v52, v53, type metadata accessor for OverviewTimelineProvider.Configuration);
  uint64_t v54 = sub_100124550();
  os_log_type_t v55 = sub_100125F60();
  BOOL v56 = os_log_type_enabled(v54, v55);
  uint64_t v57 = *(void *)(v0 + 128);
  if (v56)
  {
    char v58 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v58 = 67109120;
    int v59 = *(unsigned __int8 *)(v57 + 16);
    sub_1000BF0FC(v57, type metadata accessor for OverviewTimelineProvider.Configuration);
    *(_DWORD *)(v0 + 280) = v59;
    sub_100126030();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Resolved configuration. showWatchlistName: %{BOOL}d", v58, 8u);
    swift_slowDealloc();
  }
  else
  {
    sub_1000BF0FC(*(void *)(v0 + 128), type metadata accessor for OverviewTimelineProvider.Configuration);
  }
  uint64_t v61 = *(void *)(v0 + 224);
  uint64_t v60 = *(void *)(v0 + 232);
  uint64_t v62 = *(void *)(v0 + 208);
  uint64_t v63 = *(void *)(v0 + 144);
  uint64_t v64 = *(void *)(v0 + 120);
  uint64_t v65 = *(void *)(v0 + 64);

  v88(v60, v62);
  v89(v61, v65, v62);
  sub_1000BEEDC(v63, v64, type metadata accessor for OverviewTimelineProvider.Configuration);
  id v66 = sub_100124550();
  os_log_type_t v67 = sub_100125F60();
  BOOL v68 = os_log_type_enabled(v66, v67);
  uint64_t v69 = *(void *)(v0 + 120);
  if (v68)
  {
    uint64_t v70 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v70 = 67109120;
    int v71 = *(unsigned __int8 *)(v69 + 17);
    sub_1000BF0FC(v69, type metadata accessor for OverviewTimelineProvider.Configuration);
    *(_DWORD *)(v0 + 288) = v71;
    sub_100126030();
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "Resolved configuration. showMoreDetails: %{BOOL}d", v70, 8u);
    swift_slowDealloc();
  }
  else
  {
    sub_1000BF0FC(*(void *)(v0 + 120), type metadata accessor for OverviewTimelineProvider.Configuration);
  }
  uint64_t v72 = *(void *)(v0 + 224);
  uint64_t v73 = *(void *)(v0 + 208);

  v88(v72, v73);
  uint64_t v74 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v74;
  void *v74 = v0;
  v74[1] = sub_1000B5578;
  uint64_t v75 = *(void *)(v0 + 144);
  uint64_t v76 = *(void *)(v0 + 72);
  uint64_t v77 = *(void *)(v0 + 56);
  return sub_1000B57AC(v77, v75, v76);
}