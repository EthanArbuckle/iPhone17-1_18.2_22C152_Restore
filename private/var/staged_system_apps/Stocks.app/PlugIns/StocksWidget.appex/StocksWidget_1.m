uint64_t sub_1000B5578()
{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(sub_1000B5674, 0, 0);
}

uint64_t sub_1000B5674()
{
  sub_1000BF0FC(*(void *)(v0 + 144), type metadata accessor for OverviewTimelineProvider.Configuration);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000B57AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[95] = v3;
  v4[94] = a3;
  v4[93] = a2;
  v4[92] = a1;
  uint64_t v5 = sub_1001236A0();
  v4[96] = v5;
  v4[97] = *(void *)(v5 - 8);
  v4[98] = swift_task_alloc();
  sub_1000729A0();
  v4[99] = v6;
  v4[100] = swift_task_alloc();
  sub_100029068(0);
  v4[101] = swift_task_alloc();
  sub_100072A04(0);
  v4[102] = swift_task_alloc();
  v4[103] = swift_task_alloc();
  v4[104] = swift_task_alloc();
  sub_1000BEB7C(0, &qword_10015EF70, (uint64_t (*)(uint64_t))sub_10003A98C, sub_10003A9C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  v4[105] = v7;
  v4[106] = *(void *)(v7 - 8);
  v4[107] = swift_task_alloc();
  v4[108] = type metadata accessor for WatchlistOverviewContentViewModel(0);
  v4[109] = swift_task_alloc();
  uint64_t v8 = sub_1001259A0();
  v4[110] = v8;
  v4[111] = *(void *)(v8 - 8);
  v4[112] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for HeadlineViewModel(0);
  v4[113] = v9;
  v4[114] = *(void *)(v9 - 8);
  v4[115] = swift_task_alloc();
  sub_1000BEB7C(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  v4[116] = v10;
  v4[117] = *(void *)(v10 - 8);
  v4[118] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for WidgetStock();
  v4[119] = v11;
  v4[120] = *(void *)(v11 - 8);
  v4[121] = swift_task_alloc();
  v4[122] = swift_task_alloc();
  uint64_t v12 = sub_100123D40();
  v4[123] = v12;
  v4[124] = *(void *)(v12 - 8);
  v4[125] = swift_task_alloc();
  sub_100029100();
  v4[126] = swift_task_alloc();
  v4[127] = swift_task_alloc();
  v4[128] = swift_task_alloc();
  v4[129] = swift_task_alloc();
  sub_1000BEB40(0);
  v4[130] = swift_task_alloc();
  sub_1000BEB7C(0, &qword_10015E858, (uint64_t (*)(uint64_t))sub_10002A2F0, sub_10002A324, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  v4[131] = v13;
  v4[132] = *(void *)(v13 - 8);
  v4[133] = swift_task_alloc();
  v4[134] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for WidgetWatchlist(0);
  v4[135] = v14;
  v4[136] = *(void *)(v14 - 8);
  v4[137] = swift_task_alloc();
  uint64_t v15 = sub_100124570();
  v4[138] = v15;
  v4[139] = *(void *)(v15 - 8);
  v4[140] = swift_task_alloc();
  v4[141] = swift_task_alloc();
  v4[142] = swift_task_alloc();
  v4[143] = swift_task_alloc();
  v4[144] = swift_task_alloc();
  v4[145] = swift_task_alloc();
  v4[146] = swift_task_alloc();
  v4[147] = swift_task_alloc();
  sub_1000BEBFC(0);
  v4[148] = swift_task_alloc();
  v4[149] = swift_task_alloc();
  uint64_t v16 = sub_1001258F0();
  v4[150] = v16;
  v4[151] = *(void *)(v16 - 8);
  v4[152] = swift_task_alloc();
  v4[153] = swift_task_alloc();
  v4[154] = swift_task_alloc();
  v4[155] = swift_task_alloc();
  v4[156] = swift_task_alloc();
  v4[157] = swift_task_alloc();
  v4[158] = swift_task_alloc();
  v4[159] = swift_task_alloc();
  return _swift_task_switch(sub_1000B5F20, 0, 0);
}

uint64_t sub_1000B5F20()
{
  *(void *)(v0 + 1280) = sub_100125DC0();
  *(void *)(v0 + 1288) = sub_100125DB0();
  uint64_t v2 = sub_100125D80();
  return _swift_task_switch(sub_1000B5FB8, v2, v1);
}

uint64_t sub_1000B5FB8()
{
  swift_release();
  sub_1000055F8(0, &qword_10015FDA8);
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, v0 + 56);
  sub_100009D98((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = sub_100124100();
  if (*(void *)(v0 + 120))
  {
    sub_100029474((long long *)(v0 + 96), v0 + 16);
    sub_100009D48(v0 + 56);
    uint64_t v1 = (uint64_t)sub_1000B60E4;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1000B60E4()
{
  *(void *)(v0 + 1296) = sub_100125DB0();
  uint64_t v2 = sub_100125D80();
  return _swift_task_switch(sub_1000B6170, v2, v1);
}

uint64_t sub_1000B6170()
{
  swift_release();
  sub_1000055F8(0, &qword_10015E800);
  sub_100029758((uint64_t)&unk_100172748, v0 + 176);
  sub_100009D98((void *)(v0 + 176), *(void *)(v0 + 200));
  uint64_t v1 = sub_100124100();
  if (*(void *)(v0 + 240))
  {
    sub_100029474((long long *)(v0 + 216), v0 + 136);
    sub_100009D48(v0 + 176);
    uint64_t v1 = (uint64_t)sub_1000B626C;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1000B626C()
{
  uint64_t v1 = *(void *)(v0 + 1272);
  uint64_t v2 = *(void *)(v0 + 1264);
  uint64_t v3 = *(void *)(v0 + 1256);
  uint64_t v4 = *(void **)(v0 + 1208);
  uint64_t v5 = *(void *)(v0 + 1200);
  uint64_t v6 = *(void *)(v0 + 744);
  sub_100125980();
  uint64_t v29 = sub_1000BEC30(v1, *(unsigned char *)(v6 + 16), *(unsigned __int8 *)(v6 + 17), 0);
  *(void *)(v0 + 1304) = v29;
  uint64_t v7 = (void (*)(void, void))v4[1];
  *(void *)(v0 + 1312) = v7;
  *(void *)(v0 + 1320) = (unint64_t)(v4 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v28 = v7;
  v7(v1, v5);
  sub_100125980();
  uint64_t v8 = (void (*)(uint64_t, uint64_t, uint64_t))v4[2];
  *(void *)(v0 + 1328) = v8;
  *(void *)(v0 + 1336) = (unint64_t)(v4 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v3, v2, v5);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v4[11];
  *(void *)(v0 + 1344) = v9;
  *(void *)(v0 + 1352) = (unint64_t)(v4 + 11) & 0xFFFFFFFFFFFFLL | 0xA3B5000000000000;
  int v10 = v9(v3, v5);
  int v11 = enum case for WidgetFamily.systemSmall(_:);
  *(_DWORD *)(v0 + 1504) = enum case for WidgetFamily.systemSmall(_:);
  int v12 = enum case for WidgetFamily.systemMedium(_:);
  *(_DWORD *)(v0 + 1508) = enum case for WidgetFamily.systemMedium(_:);
  int v13 = enum case for WidgetFamily.systemLarge(_:);
  *(_DWORD *)(v0 + 1512) = enum case for WidgetFamily.systemLarge(_:);
  int v14 = enum case for WidgetFamily.accessoryRectangular(_:);
  *(_DWORD *)(v0 + 1516) = enum case for WidgetFamily.accessoryRectangular(_:);
  if (v10 != v11 && v10 != v12 && v10 != v13 && v10 != v14) {
    return sub_100126290();
  }
  int v27 = v14;
  uint64_t v16 = *(void *)(v0 + 1248);
  uint64_t v17 = *(void *)(v0 + 1200);
  v8(v16, *(void *)(v0 + 1264), v17);
  int v18 = v9(v16, v17);
  if (v18 == v11) {
    goto LABEL_10;
  }
  uint64_t v19 = 6;
  if (v18 != v12 && v18 != v13)
  {
    if (v18 != v27) {
      return sub_100126290();
    }
LABEL_10:
    uint64_t v19 = 3;
  }
  *(void *)(v0 + 1360) = v19;
  uint64_t v20 = *(void *)(v0 + 744);
  v28(*(void *)(v0 + 1264), *(void *)(v0 + 1200));
  if (*(void *)(v20 + 8))
  {
    uint64_t v21 = **(void **)(v0 + 744);
    uint64_t v22 = *(void *)(v20 + 8);
  }
  else
  {
    uint64_t v21 = sub_100123E50();
    uint64_t v22 = v23;
  }
  *(void *)(v0 + 1376) = v22;
  *(void *)(v0 + 1368) = v21;
  sub_100009D98((void *)(v0 + 16), *(void *)(v0 + 40));
  if (v19 <= v29) {
    uint64_t v24 = v29;
  }
  else {
    uint64_t v24 = v19;
  }
  swift_bridgeObjectRetain();
  v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 1384) = v25;
  void *v25 = v0;
  v25[1] = sub_1000B65A4;
  uint64_t v26 = *(void *)(v0 + 1192);
  return sub_100005D80(v26, v21, v22, v24);
}

uint64_t sub_1000B65A4()
{
  *(void *)(*(void *)v1 + 1392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1000B8BC0;
  }
  else
  {
    uint64_t v2 = sub_1000B66C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000B66C0()
{
  uint64_t v302 = v0;
  uint64_t v1 = *(void *)(v0 + 1176);
  uint64_t v2 = *(void *)(v0 + 1112);
  uint64_t v3 = *(void *)(v0 + 1104);
  uint64_t v4 = *(void *)(v0 + 760);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(void *)(v0 + 1400) = v5;
  *(void *)(v0 + 1408) = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v278 = (void *)(v0 + 136);
  v273 = v5;
  v5(v1, v4, v3);
  swift_bridgeObjectRetain_n();
  unint64_t v6 = sub_100124550();
  LOBYTE(v7) = sub_100125F60();
  if (!os_log_type_enabled((os_log_t)v6, (os_log_type_t)v7))
  {
    uint64_t v15 = *(void *)(v0 + 1176);
    uint64_t v16 = *(void *)(v0 + 1112);
    uint64_t v17 = *(void *)(v0 + 1104);
    swift_bridgeObjectRelease_n();

    int v14 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v14(v15, v17);
    goto LABEL_5;
  }
  unint64_t v8 = *(void *)(v0 + 1376);
  uint64_t v9 = *(void *)(v0 + 1368);
  uint64_t v267 = *(void *)(v0 + 1304);
  uint64_t v268 = *(void *)(v0 + 1360);
  uint64_t v10 = swift_slowAlloc();
  v301[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v10 = 136315906;
  swift_bridgeObjectRetain();
  *(void *)(v0 + 696) = sub_1000AB124(v9, v8, v301);
  sub_100126030();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v10 + 12) = 2048;
  *(void *)(v0 + 704) = v267;
  sub_100126030();
  *(_WORD *)(v10 + 22) = 2048;
  *(void *)(v0 + 712) = v268;
  sub_100126030();
  *(_WORD *)(v10 + 32) = 2080;
  if (qword_10015D4C8 != -1) {
    goto LABEL_142;
  }
  while (1)
  {
    uint64_t v11 = *(void *)(v0 + 1176);
    uint64_t v12 = *(void *)(v0 + 1112);
    uint64_t v13 = *(void *)(v0 + 1104);
    sub_100126690();
    *(void *)(v0 + 728) = sub_1000AB124(*(void *)(v0 + 456), *(void *)(v0 + 464), v301);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v6, (os_log_type_t)v7, "Fetching watchlist, watchlist=%s, countWithoutNews=%ld, countWithNews=%ld, id=%s", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    int v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v14(v11, v13);
LABEL_5:
    *(void *)(v0 + 1416) = v14;
    uint64_t v18 = *(void *)(v0 + 1184);
    uint64_t v19 = *(void *)(v0 + 1088);
    uint64_t v20 = *(void *)(v0 + 1080);
    sub_1000BEEDC(*(void *)(v0 + 1192), v18, (uint64_t (*)(void))sub_1000BEBFC);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v18, 1, v20) == 1)
    {
      uint64_t v21 = *(void *)(v0 + 1120);
      uint64_t v22 = *(void *)(v0 + 1104);
      uint64_t v23 = *(void *)(v0 + 760);
      sub_1000BF0FC(*(void *)(v0 + 1184), (uint64_t (*)(void))sub_1000BEBFC);
      v273(v21, v23, v22);
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_100124550();
      os_log_type_t v25 = sub_100125F40();
      BOOL v26 = os_log_type_enabled(v24, v25);
      unint64_t v27 = *(void *)(v0 + 1376);
      if (v26)
      {
        v269 = v14;
        uint64_t v28 = *(void *)(v0 + 1368);
        uint64_t v29 = swift_slowAlloc();
        v301[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 632) = sub_1000AB124(v28, v27, v301);
        sub_100126030();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v29 + 12) = 2080;
        if (qword_10015D4C8 != -1) {
          swift_once();
        }
        v279 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 1120);
        uint64_t v30 = *(void *)(v0 + 1104);
        sub_100126690();
        *(void *)(v0 + 624) = sub_1000AB124(*(void *)(v0 + 408), *(void *)(v0 + 416), v301);
        sub_100126030();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to find watchlist, watchlist=%s, id=%s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v269((uint64_t)v279, v30);
      }
      else
      {
        uint64_t v46 = *(void *)(v0 + 1120);
        uint64_t v47 = *(void *)(v0 + 1104);
        swift_bridgeObjectRelease_n();

        v14(v46, v47);
      }
      uint64_t v293 = *(void *)(v0 + 1192);
      uint64_t v48 = *(void *)(v0 + 736);
      sub_10003A7CC();
      v50 = (uint64_t *)(v48 + *(int *)(v49 + 48));
      v285 = (uint64_t *)(v48 + *(int *)(v49 + 64));
      sub_100123270();
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v52 = self;
      v53 = (objc_class *)[v52 bundleForClass:ObjCClassFromMetadata];
      v245._countAndFlagsBits = 0x80000001001321D0;
      v304._object = (void *)0x80000001001321B0;
      v304._countAndFlagsBits = 0xD000000000000011;
      v310.value._countAndFlagsBits = 0;
      v310.value._object = 0;
      v54.super.isa = v53;
      v313._countAndFlagsBits = 0;
      v313._object = (void *)0xE000000000000000;
      uint64_t v55 = sub_100123070(v304, v310, v54, v313, v245);
      uint64_t v57 = v56;

      uint64_t *v50 = v55;
      v50[1] = v57;
      v58 = (objc_class *)[v52 bundleForClass:ObjCClassFromMetadata];
      v305._countAndFlagsBits = 0xD00000000000001DLL;
      v246._countAndFlagsBits = 0x8000000100132240;
      v305._object = (void *)0x8000000100132220;
      v311.value._countAndFlagsBits = 0;
      v311.value._object = 0;
      v59.super.isa = v58;
      v314._countAndFlagsBits = 0;
      v314._object = (void *)0xE000000000000000;
      uint64_t v60 = sub_100123070(v305, v311, v59, v314, v246);
      uint64_t v62 = v61;

      sub_1000BF0FC(v293, (uint64_t (*)(void))sub_1000BEBFC);
      uint64_t *v285 = v60;
      v285[1] = v62;
      type metadata accessor for OverviewTimelineEntry();
LABEL_33:
      swift_storeEnumTagMultiPayload();
      goto LABEL_34;
    }
    uint64_t v31 = *(void *)(v0 + 1096);
    uint64_t v32 = *(void *)(v0 + 1056);
    uint64_t v33 = *(void *)(v0 + 1048);
    uint64_t v34 = *(void *)(v0 + 1040);
    sub_1000BF030(*(void *)(v0 + 1184), v31, type metadata accessor for WidgetWatchlist);
    *(void *)(v0 + 600) = *(void *)(v31 + 16);
    sub_10002A2F0(0);
    sub_10002A324();
    swift_bridgeObjectRetain();
    sub_100124440();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v34, 1, v33) == 1)
    {
      uint64_t v35 = *(void *)(v0 + 1128);
      uint64_t v36 = *(void *)(v0 + 1104);
      uint64_t v37 = *(void *)(v0 + 760);
      sub_1000BF0FC(*(void *)(v0 + 1040), (uint64_t (*)(void))sub_1000BEB40);
      v273(v35, v37, v36);
      swift_bridgeObjectRetain();
      v38 = sub_100124550();
      os_log_type_t v39 = sub_100125F60();
      BOOL v40 = os_log_type_enabled(v38, v39);
      unint64_t v41 = *(void *)(v0 + 1376);
      if (v40)
      {
        uint64_t v42 = *(void *)(v0 + 1368);
        uint64_t v43 = swift_slowAlloc();
        v301[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136315394;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 584) = sub_1000AB124(v42, v41, v301);
        sub_100126030();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v43 + 12) = 2080;
        if (qword_10015D4C8 != -1) {
          swift_once();
        }
        uint64_t v44 = *(void *)(v0 + 1128);
        uint64_t v45 = *(void *)(v0 + 1104);
        sub_100126690();
        *(void *)(v0 + 568) = sub_1000AB124(*(void *)(v0 + 472), *(void *)(v0 + 480), v301);
        sub_100126030();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "No symbols in watchlist, watchlist=%s, id=%s", (uint8_t *)v43, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v14(v44, v45);
      }
      else
      {
        uint64_t v90 = *(void *)(v0 + 1128);
        uint64_t v91 = *(void *)(v0 + 1104);
        swift_bridgeObjectRelease_n();

        v14(v90, v91);
      }
      uint64_t v92 = *(void *)(v0 + 1192);
      uint64_t v93 = *(void *)(v0 + 1096);
      uint64_t v94 = *(void *)(v0 + 736);
      sub_10003A7CC();
      v96 = (uint64_t *)(v94 + *(int *)(v95 + 48));
      v97 = (void *)(v94 + *(int *)(v95 + 64));
      sub_100123270();
      type metadata accessor for Localized();
      uint64_t v98 = swift_getObjCClassFromMetadata();
      v99 = (objc_class *)[self bundleForClass:v98];
      v245._countAndFlagsBits = 0x8000000100132290;
      v306._countAndFlagsBits = 0x6F626D7953206F4ELL;
      v306._object = (void *)0xEA0000000000736CLL;
      v312.value._countAndFlagsBits = 0;
      v312.value._object = 0;
      v100.super.isa = v99;
      v315._countAndFlagsBits = 0;
      v315._object = (void *)0xE000000000000000;
      uint64_t v101 = sub_100123070(v306, v312, v100, v315, v245);
      uint64_t v103 = v102;

      sub_1000BF0FC(v93, type metadata accessor for WidgetWatchlist);
      sub_1000BF0FC(v92, (uint64_t (*)(void))sub_1000BEBFC);
      uint64_t *v96 = v101;
      v96[1] = v103;
      type metadata accessor for OverviewTimelineEntry();
      void *v97 = 0;
      v97[1] = 0;
      goto LABEL_33;
    }
    v270 = v14;
    uint64_t v63 = *(void *)(v0 + 1360);
    uint64_t v64 = *(void *)(v0 + 1072);
    uint64_t v65 = *(void *)(v0 + 1064);
    uint64_t v66 = *(void *)(v0 + 1056);
    uint64_t v67 = *(void *)(v0 + 1048);
    uint64_t v68 = *(void *)(v0 + 1040);
    uint64_t v69 = *(void *)(v0 + 1032);
    uint64_t v70 = *(void *)(v0 + 936);
    uint64_t v256 = *(void *)(v0 + 928);
    uint64_t v294 = *(void *)(v0 + 752);
    uint64_t v259 = *(void *)(v0 + 744);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v64, v68, v67);
    v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16);
    *(void *)(v0 + 1424) = v71;
    *(void *)(v0 + 1432) = (v66 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v71(v65, v64, v67);
    sub_10001C994(v63);
    uint64_t v73 = v72;
    uint64_t v75 = v74;
    uint64_t v7 = v76;
    unint64_t v6 = v77;
    *(void *)(v0 + 1440) = v72;
    *(void *)(v0 + 1448) = v74;
    *(void *)(v0 + 1456) = v76;
    *(void *)(v0 + 1464) = v77;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v69, 1, 1, v256);
    uint64_t v78 = v294;
    uint64_t v295 = v75;
    if ((sub_1000BD9E4(v259, v78, v73, v75, v7, v6) & 1) == 0) {
      break;
    }
    int64_t v286 = v6 >> 1;
    uint64_t v79 = (v6 >> 1) - v7;
    if (__OFSUB__(v6 >> 1, v7))
    {
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      swift_once();
LABEL_70:
      v288 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
      uint64_t v149 = *(void *)(v0 + 1144);
      uint64_t v150 = *(void *)(v0 + 1104);
      sub_100126690();
      *(void *)(v0 + 608) = sub_1000AB124(*(void *)(v0 + 440), *(void *)(v0 + 448), v301);
      sub_100126030();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v6, (os_log_type_t)v68, "Fetched %ld headlines for %ld stocks, id=%s", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v288(v149, v150);
      goto LABEL_72;
    }
    unint64_t v6 = (unint64_t)_swiftEmptyArrayStorage;
    v80 = v270;
    if (!v79)
    {
LABEL_40:
      *(void *)(v0 + 1472) = v6;
      v273(*(void *)(v0 + 1160), *(void *)(v0 + 760), *(void *)(v0 + 1104));
      swift_bridgeObjectRetain_n();
      v119 = sub_100124550();
      os_log_type_t v120 = sub_100125F60();
      if (os_log_type_enabled(v119, v120))
      {
        uint64_t v121 = swift_slowAlloc();
        v301[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v121 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v122 = sub_100125CD0();
        unint64_t v124 = v123;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 672) = sub_1000AB124(v122, v124, v301);
        sub_100126030();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v121 + 12) = 2080;
        if (qword_10015D4C8 != -1) {
          swift_once();
        }
        v281 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 1160);
        uint64_t v125 = *(void *)(v0 + 1104);
        sub_100126690();
        *(void *)(v0 + 688) = sub_1000AB124(*(void *)(v0 + 520), *(void *)(v0 + 528), v301);
        sub_100126030();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v119, v120, "Fetching headlines for stocks, stocks=%s, id=%s", (uint8_t *)v121, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v270((uint64_t)v281, v125);
      }
      else
      {
        uint64_t v129 = *(void *)(v0 + 1160);
        uint64_t v130 = *(void *)(v0 + 1104);
        swift_bridgeObjectRelease_n();

        v80(v129, v130);
      }
      int v287 = *(_DWORD *)(v0 + 1508);
      int v296 = *(_DWORD *)(v0 + 1504);
      v131 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1344);
      v132 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1328);
      uint64_t v133 = *(void *)(v0 + 1240);
      uint64_t v134 = *(void *)(v0 + 1232);
      uint64_t v135 = *(void *)(v0 + 1200);
      sub_100125980();
      v132(v134, v133, v135);
      int v136 = v131(v134, v135);
      uint64_t v137 = 1;
      if (v136 == v296 || v136 == v287) {
        goto LABEL_128;
      }
      if (v136 == *(_DWORD *)(v0 + 1512))
      {
        uint64_t v137 = 4;
LABEL_128:
        (*(void (**)(void, void))(v0 + 1312))(*(void *)(v0 + 1240), *(void *)(v0 + 1200));
        sub_100009D98(v278, *(void *)(v0 + 160));
        v230 = (void *)swift_task_alloc();
        *(void *)(v0 + 1480) = v230;
        void *v230 = v0;
        v230[1] = sub_1000B9160;
        return sub_10000C97C(v6, v137);
      }
      if (v136 == *(_DWORD *)(v0 + 1516))
      {
        uint64_t v137 = 0;
        goto LABEL_128;
      }
      return sub_100126290();
    }
    v301[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_10009BB7C(0, v79 & ~(v79 >> 63), 0);
    if (v79 < 0) {
      goto LABEL_144;
    }
    uint64_t v81 = *(void *)(v0 + 992);
    v280 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 960);
    uint64_t v10 = v81 + 32;
    if (v7 <= v286) {
      uint64_t v82 = v286;
    }
    else {
      uint64_t v82 = v7;
    }
    while (v82 != v7)
    {
      uint64_t v83 = *(void *)(v0 + 1000);
      uint64_t v84 = *(void *)(v0 + 984);
      uint64_t v85 = *(void *)(v0 + 976);
      sub_1000BEEDC(v295 + (void)v280[9] * v7, v85, (uint64_t (*)(void))type metadata accessor for WidgetStock);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v83, v85, v84);
      sub_1000BF0FC(v85, (uint64_t (*)(void))type metadata accessor for WidgetStock);
      unint64_t v6 = v301[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10009BB7C(0, *(void *)(v6 + 16) + 1, 1);
        unint64_t v6 = v301[0];
      }
      unint64_t v87 = *(void *)(v6 + 16);
      unint64_t v86 = *(void *)(v6 + 24);
      if (v87 >= v86 >> 1)
      {
        sub_10009BB7C(v86 > 1, v87 + 1, 1);
        unint64_t v6 = v301[0];
      }
      uint64_t v88 = *(void *)(v0 + 1000);
      uint64_t v89 = *(void *)(v0 + 984);
      *(void *)(v6 + 16) = v87 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v81 + 32))(v6+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v87, v88, v89);
      v301[0] = v6;
      if (v286 == ++v7)
      {
        v80 = v270;
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_142:
    swift_once();
  }
  uint64_t v106 = *(void *)(v0 + 1008);
  uint64_t v107 = *(void *)(v0 + 936);
  uint64_t v108 = *(void *)(v0 + 928);
  sub_1000BEEDC(*(void *)(v0 + 1032), v106, (uint64_t (*)(void))sub_100029100);
  v274 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
  LODWORD(v108) = v274(v106, 1, v108);
  sub_1000BF0FC(v106, (uint64_t (*)(void))sub_100029100);
  LODWORD(v295) = v108;
  if (v108 != 1)
  {
    unint64_t v126 = *(void *)(v0 + 1464);
    uint64_t v127 = *(void *)(v0 + 1440);
    if (v126)
    {
      sub_100126550();
      swift_unknownObjectRetain_n();
      v140 = (void *)swift_dynamicCastClass();
      if (!v140)
      {
        swift_unknownObjectRelease();
        unint64_t v126 = *(void *)(v0 + 1464);
        v140 = _swiftEmptyArrayStorage;
      }
      uint64_t v141 = *(void *)(v0 + 1456);
      uint64_t v142 = v140[2];
      swift_release();
      if (__OFSUB__(v126 >> 1, v141))
      {
        __break(1u);
      }
      else if (v142 == (v126 >> 1) - v141)
      {
        v128 = (void *)swift_dynamicCastClass();
        if (!v128)
        {
          swift_unknownObjectRelease();
          v128 = _swiftEmptyArrayStorage;
        }
        goto LABEL_65;
      }
      swift_unknownObjectRelease();
      unint64_t v126 = *(void *)(v0 + 1464);
      uint64_t v127 = *(void *)(v0 + 1440);
    }
    else
    {
      swift_unknownObjectRetain();
    }
    v128 = sub_1000ABA24(v127, *(void *)(v0 + 1448), *(void *)(v0 + 1456), v126);
LABEL_65:
    swift_unknownObjectRelease();
    *(void *)(v0 + 616) = v128;
    goto LABEL_66;
  }
  uint64_t v109 = *(void *)(v0 + 1304);
  (*(void (**)(void, void, void))(v0 + 1424))(*(void *)(v0 + 1064), *(void *)(v0 + 1072), *(void *)(v0 + 1048));
  sub_10001C994(v109);
  uint64_t v111 = v110;
  uint64_t v113 = v112;
  uint64_t v115 = v114;
  unint64_t v117 = v116;
  if ((v116 & 1) == 0) {
    goto LABEL_39;
  }
  sub_100126550();
  swift_unknownObjectRetain_n();
  v138 = (void *)swift_dynamicCastClass();
  if (!v138)
  {
    swift_unknownObjectRelease();
    v138 = _swiftEmptyArrayStorage;
  }
  uint64_t v139 = v138[2];
  swift_release();
  if (__OFSUB__(v117 >> 1, v115))
  {
    __break(1u);
  }
  else if (v139 == (v117 >> 1) - v115)
  {
    v118 = (void *)swift_dynamicCastClass();
    if (!v118)
    {
      swift_unknownObjectRelease();
      v118 = _swiftEmptyArrayStorage;
    }
    goto LABEL_58;
  }
  swift_unknownObjectRelease();
LABEL_39:
  v118 = sub_1000ABA24(v111, v113, v115, v117);
LABEL_58:
  swift_unknownObjectRelease();
  *(void *)(v0 + 552) = v118;
LABEL_66:
  sub_1001243C0();
  (*(void (**)(void, void, void))(v0 + 1400))(*(void *)(v0 + 1144), *(void *)(v0 + 760), *(void *)(v0 + 1104));
  unint64_t v6 = sub_100124550();
  LOBYTE(v68) = sub_100125F60();
  if (os_log_type_enabled((os_log_t)v6, (os_log_type_t)v68))
  {
    uint64_t v143 = *(void *)(v0 + 1032);
    uint64_t v144 = *(void *)(v0 + 928);
    uint64_t v7 = swift_slowAlloc();
    v301[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218498;
    swift_beginAccess();
    uint64_t v145 = 0;
    if (!v274(v143, 1, v144))
    {
      uint64_t v146 = *(void *)(v0 + 944);
      uint64_t v147 = *(void *)(v0 + 936);
      uint64_t v148 = *(void *)(v0 + 928);
      (*(void (**)(uint64_t, void, uint64_t))(v147 + 16))(v146, *(void *)(v0 + 1032), v148);
      uint64_t v145 = sub_1001243E0();
      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v146, v148);
    }
    *(void *)(v0 + 576) = v145;
    sub_100126030();
    *(_WORD *)(v7 + 12) = 2048;
    swift_beginAccess();
    *(void *)(v0 + 592) = sub_1001243E0();
    sub_100126030();
    *(_WORD *)(v7 + 22) = 2080;
    if (qword_10015D4C8 != -1) {
      goto LABEL_145;
    }
    goto LABEL_70;
  }
  v151 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
  uint64_t v152 = *(void *)(v0 + 1144);
  uint64_t v153 = *(void *)(v0 + 1104);

  v151(v152, v153);
LABEL_72:
  uint64_t v154 = *(void *)(v0 + 744);
  int v155 = *(unsigned __int8 *)(v154 + 16);
  if (v155 == 1)
  {
    v156 = *(uint64_t **)(v0 + 1096);
    uint64_t v157 = v156[1];
    uint64_t v289 = *v156;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v289 = 0;
    uint64_t v157 = 0;
  }
  int v158 = *(_DWORD *)(v0 + 1504);
  v159 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1344);
  uint64_t v160 = *(void *)(v0 + 1216);
  uint64_t v161 = *(void *)(v0 + 1200);
  int v162 = *(unsigned __int8 *)(v154 + 17);
  sub_100125980();
  int v163 = v159(v160, v161);
  char v282 = v162;
  if (v163 == v158)
  {
    uint64_t v271 = 3;
    if (v295 == 1) {
      char v164 = v162;
    }
    else {
      char v164 = 3;
    }
    goto LABEL_79;
  }
  if (v163 == *(_DWORD *)(v0 + 1508))
  {
    uint64_t v179 = 1;
    if (v162) {
      char v180 = 1;
    }
    else {
      char v180 = 2;
    }
    if (v162) {
      uint64_t v179 = 2;
    }
    uint64_t v181 = 2;
    if (((v295 == 1) & v155) == 0) {
      uint64_t v181 = 3;
    }
    if (v295 == 1)
    {
      uint64_t v271 = v181;
      uint64_t v275 = v179;
      char v297 = v180;
      uint64_t v260 = v157;
      goto LABEL_81;
    }
    uint64_t v275 = 2;
    char v297 = 3;
    uint64_t v271 = 3;
LABEL_80:
    swift_bridgeObjectRelease();
    uint64_t v289 = 0;
    uint64_t v260 = 0;
    goto LABEL_81;
  }
  if (v163 != *(_DWORD *)(v0 + 1512))
  {
    if (v163 != *(_DWORD *)(v0 + 1516))
    {
      v242 = *(void (**)(uint64_t, uint64_t))(v0 + 1312);
      uint64_t v243 = *(void *)(v0 + 1272);
      uint64_t v244 = *(void *)(v0 + 1200);
      (*(void (**)(void, void, void))(*(void *)(v0 + 888) + 16))(*(void *)(v0 + 896), *(void *)(v0 + 752), *(void *)(v0 + 880));
      v301[0] = 0;
      v301[1] = 0xE000000000000000;
      sub_1001260E0(52);
      v307._countAndFlagsBits = 0xD000000000000030;
      v307._object = (void *)0x80000001001322E0;
      sub_100125BB0(v307);
      sub_100125980();
      sub_1000B3468(&qword_10015E790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      v308._countAndFlagsBits = sub_1001264F0();
      sub_100125BB0(v308);
      swift_bridgeObjectRelease();
      v242(v243, v244);
      v309._countAndFlagsBits = 11815;
      v309._object = (void *)0xE200000000000000;
      sub_100125BB0(v309);
      return sub_100126290();
    }
    uint64_t v271 = *(void *)(v0 + 1304);
    char v164 = 3;
LABEL_79:
    char v297 = v164;
    uint64_t v275 = 1;
    goto LABEL_80;
  }
  if (v162) {
    uint64_t v226 = 2;
  }
  else {
    uint64_t v226 = 1;
  }
  if (v162) {
    char v227 = 1;
  }
  else {
    char v227 = 2;
  }
  if (v295 == 1) {
    uint64_t v228 = v226;
  }
  else {
    uint64_t v228 = 2;
  }
  uint64_t v229 = 6;
  if (v295 != 1) {
    uint64_t v229 = 3;
  }
  uint64_t v271 = v229;
  uint64_t v275 = v228;
  if (v295 != 1) {
    char v227 = 3;
  }
  char v297 = v227;
  uint64_t v260 = v157;
LABEL_81:
  v165 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1424);
  v264 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1400);
  uint64_t v257 = *(void *)(v0 + 1136);
  uint64_t v262 = *(void *)(v0 + 1104);
  uint64_t v247 = *(void *)(v0 + 1080);
  uint64_t v248 = *(void *)(v0 + 1096);
  uint64_t v166 = *(void *)(v0 + 1072);
  uint64_t v167 = *(void *)(v0 + 1064);
  uint64_t v168 = *(void *)(v0 + 1056);
  uint64_t v169 = *(void *)(v0 + 1048);
  uint64_t v249 = *(void *)(v0 + 1032);
  v170 = *(char **)(v0 + 872);
  v171 = *(int **)(v0 + 864);
  uint64_t v172 = *(void *)(v0 + 856);
  uint64_t v250 = *(void *)(v0 + 848);
  uint64_t v251 = *(void *)(v0 + 840);
  uint64_t v254 = *(void *)(v0 + 760);
  swift_beginAccess();
  v165(v167, v166, v169);
  *(unsigned char *)(swift_task_alloc() + 16) = v297;
  type metadata accessor for TickerCellViewModel(0);
  sub_1001243D0();
  swift_task_dealloc();
  v253 = *(void (**)(uint64_t, uint64_t))(v168 + 8);
  v253(v167, v169);
  uint64_t v173 = v248 + *(int *)(v247 + 24);
  v174 = &v170[v171[7]];
  uint64_t v175 = sub_1001238A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v175 - 8) + 16))(v174, v173, v175);
  swift_beginAccess();
  sub_1000BEEDC(v249, (uint64_t)&v170[v171[11]], (uint64_t (*)(void))sub_100029100);
  *(void *)v170 = v289;
  *((void *)v170 + 1) = v260;
  (*(void (**)(char *, uint64_t, uint64_t))(v250 + 32))(&v170[v171[5]], v172, v251);
  v170[v171[6]] = v297;
  *(void *)&v170[v171[8]] = v271;
  *(void *)&v170[v171[9]] = v275;
  v170[v171[10]] = v282;
  v264(v257, v254, v262);
  v176 = sub_100124550();
  os_log_type_t v177 = sub_100125F60();
  if (os_log_type_enabled(v176, v177))
  {
    v178 = (uint8_t *)swift_slowAlloc();
    v301[0] = swift_slowAlloc();
    *(_DWORD *)v178 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v290 = *(void *)(v0 + 1136);
    v298 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
    v283 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 1104);
    sub_100126690();
    *(void *)(v0 + 560) = sub_1000AB124(*(void *)(v0 + 504), *(void *)(v0 + 512), v301);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v176, v177, "Successfully created timeline entry, id=%s", v178, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v298(v290, (uint64_t)v283);
  }
  else
  {
    v182 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
    uint64_t v183 = *(void *)(v0 + 1136);
    uint64_t v184 = *(void *)(v0 + 1104);

    v182(v183, v184);
  }
  uint64_t v185 = *(void *)(v0 + 1096);
  uint64_t v186 = *(void *)(v0 + 872);
  uint64_t v187 = *(void *)(v0 + 736);
  sub_10003A874();
  v189 = v188;
  uint64_t v190 = v187 + v188[12];
  sub_100123270();
  sub_1000BEEDC(v186, v190, type metadata accessor for WatchlistOverviewContentViewModel);
  uint64_t v191 = *(void *)(v185 + 16);
  uint64_t v192 = *(void *)(v191 + 16);
  if (!v192)
  {
    char v225 = 0;
    goto LABEL_134;
  }
  v252 = v189;
  uint64_t v193 = *(void *)(v0 + 960);
  uint64_t v291 = *(void *)(v0 + 792);
  uint64_t v299 = *(void *)(v0 + 952);
  uint64_t v194 = *(void *)(v0 + 776);
  uint64_t v195 = v191 + ((*(unsigned __int8 *)(v193 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80));
  v196 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v194 + 56);
  unsigned int v277 = enum case for ExchangeStatus.open(_:);
  v276 = (void (**)(uint64_t, void, uint64_t))(v194 + 104);
  v197 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v194 + 48);
  v255 = (void (**)(uint64_t, uint64_t, uint64_t))(v194 + 32);
  v265 = (void (**)(uint64_t, uint64_t))(v194 + 8);
  uint64_t v266 = *(void *)(v193 + 72);
  swift_bridgeObjectRetain();
  v284 = v196;
  v272 = v197;
  while (2)
  {
    uint64_t v201 = *(void *)(v0 + 968);
    uint64_t v202 = *(void *)(v0 + 808);
    sub_1000BEEDC(v195, v201, (uint64_t (*)(void))type metadata accessor for WidgetStock);
    sub_1000BEEDC(v201 + *(int *)(v299 + 20), v202, (uint64_t (*)(void))sub_100029068);
    uint64_t v203 = sub_100123670();
    uint64_t v204 = *(void *)(v203 - 8);
    int v205 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v204 + 48))(v202, 1, v203);
    uint64_t v206 = *(void *)(v0 + 832);
    uint64_t v207 = *(void *)(v0 + 808);
    uint64_t v208 = *(void *)(v0 + 768);
    if (v205 == 1)
    {
      sub_1000BF0FC(*(void *)(v0 + 808), (uint64_t (*)(void))sub_100029068);
      v209 = *v284;
      (*v284)(v206, 1, 1, v208);
    }
    else
    {
      sub_100123610();
      (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v207, v203);
      v209 = *v284;
      (*v284)(v206, 0, 1, v208);
    }
    uint64_t v210 = *(void *)(v0 + 832);
    uint64_t v211 = *(void *)(v0 + 824);
    uint64_t v212 = *(void *)(v0 + 800);
    uint64_t v213 = *(void *)(v0 + 768);
    (*v276)(v211, v277, v213);
    v209(v211, 0, 1, v213);
    uint64_t v214 = v212 + *(int *)(v291 + 48);
    sub_1000BEEDC(v210, v212, (uint64_t (*)(void))sub_100072A04);
    sub_1000BEEDC(v211, v214, (uint64_t (*)(void))sub_100072A04);
    v215 = *v272;
    if ((*v272)(v212, 1, v213) != 1)
    {
      uint64_t v216 = *(void *)(v0 + 768);
      sub_1000BEEDC(*(void *)(v0 + 800), *(void *)(v0 + 816), (uint64_t (*)(void))sub_100072A04);
      if (v215(v214, 1, v216) == 1)
      {
        (*v265)(*(void *)(v0 + 816), *(void *)(v0 + 768));
LABEL_99:
        uint64_t v198 = *(void *)(v0 + 968);
        uint64_t v199 = *(void *)(v0 + 832);
        uint64_t v200 = *(void *)(v0 + 824);
        sub_1000BF0FC(*(void *)(v0 + 800), (uint64_t (*)(void))sub_1000729A0);
        sub_1000BF0FC(v200, (uint64_t (*)(void))sub_100072A04);
        sub_1000BF0FC(v199, (uint64_t (*)(void))sub_100072A04);
        sub_1000BF0FC(v198, (uint64_t (*)(void))type metadata accessor for WidgetStock);
      }
      else
      {
        uint64_t v261 = *(void *)(v0 + 832);
        uint64_t v263 = *(void *)(v0 + 968);
        uint64_t v258 = *(void *)(v0 + 824);
        uint64_t v217 = *(void *)(v0 + 816);
        uint64_t v218 = *(void *)(v0 + 800);
        uint64_t v219 = *(void *)(v0 + 784);
        uint64_t v220 = v192;
        uint64_t v221 = *(void *)(v0 + 768);
        (*v255)(v219, v214, v221);
        sub_1000B3468(&qword_1001606E8, (void (*)(uint64_t))&type metadata accessor for ExchangeStatus);
        char v222 = sub_100125A90();
        v223 = *v265;
        (*v265)(v217, v221);
        uint64_t v224 = v221;
        uint64_t v192 = v220;
        v223(v219, v224);
        sub_1000BF0FC(v218, (uint64_t (*)(void))sub_100072A04);
        sub_1000BF0FC(v258, (uint64_t (*)(void))sub_100072A04);
        sub_1000BF0FC(v261, (uint64_t (*)(void))sub_100072A04);
        sub_1000BF0FC(v263, (uint64_t (*)(void))type metadata accessor for WidgetStock);
        if (v222) {
          goto LABEL_132;
        }
      }
      v195 += v266;
      if (!--v192)
      {
        char v225 = 0;
        goto LABEL_133;
      }
      continue;
    }
    break;
  }
  if (v215(v214, 1, *(void *)(v0 + 768)) != 1) {
    goto LABEL_99;
  }
  uint64_t v231 = *(void *)(v0 + 968);
  uint64_t v232 = *(void *)(v0 + 832);
  uint64_t v233 = *(void *)(v0 + 824);
  sub_1000BF0FC(*(void *)(v0 + 800), (uint64_t (*)(void))sub_100072A04);
  sub_1000BF0FC(v233, (uint64_t (*)(void))sub_100072A04);
  sub_1000BF0FC(v232, (uint64_t (*)(void))sub_100072A04);
  sub_1000BF0FC(v231, (uint64_t (*)(void))type metadata accessor for WidgetStock);
LABEL_132:
  char v225 = 1;
LABEL_133:
  swift_bridgeObjectRelease();
  v189 = v252;
LABEL_134:
  uint64_t v234 = *(void *)(v0 + 1192);
  uint64_t v235 = *(void *)(v0 + 1096);
  uint64_t v292 = *(void *)(v0 + 1048);
  uint64_t v300 = *(void *)(v0 + 1072);
  uint64_t v236 = *(void *)(v0 + 1032);
  uint64_t v237 = *(void *)(v0 + 872);
  uint64_t v238 = *(void *)(v0 + 736);
  swift_unknownObjectRelease();
  uint64_t v239 = v189[16];
  uint64_t v240 = v189[20];
  uint64_t v241 = v189[24];
  sub_1000BF0FC(v237, type metadata accessor for WatchlistOverviewContentViewModel);
  sub_1000BF0FC(v235, type metadata accessor for WidgetWatchlist);
  sub_1000BF0FC(v234, (uint64_t (*)(void))sub_1000BEBFC);
  *(unsigned char *)(v238 + v239) = v225;
  *(unsigned char *)(v238 + v240) = 0;
  *(unsigned char *)(v238 + v241) = 0;
  type metadata accessor for OverviewTimelineEntry();
  swift_storeEnumTagMultiPayload();
  sub_1000BF0FC(v236, (uint64_t (*)(void))sub_100029100);
  v253(v300, v292);
LABEL_34:
  sub_100009D48((uint64_t)v278);
  sub_100009D48(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v104 = *(uint64_t (**)(void))(v0 + 8);
  return v104();
}

uint64_t sub_1000B8BC0()
{
  BOOL v26 = v0;
  (*(void (**)(void, void, void))(v0[139] + 16))(v0[146], v0[95], v0[138]);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    swift_getErrorValue();
    uint64_t v4 = sub_100126580();
    v0[85] = sub_1000AB124(v4, v5, v25);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v3 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[146];
    uint64_t v7 = v0[139];
    uint64_t v8 = v0[138];
    sub_100126690();
    v0[81] = sub_1000AB124(v0[61], v0[62], v25);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to create timeline entry, error=%s, id=%s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  else
  {
    uint64_t v9 = v0[146];
    uint64_t v10 = v0[139];
    uint64_t v11 = v0[138];
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  uint64_t v24 = (void (*)(char *, uint64_t))v0[164];
  uint64_t v12 = (char *)v0[159];
  uint64_t v13 = v0[150];
  uint64_t v14 = v0[93];
  uint64_t v15 = v0[92];
  sub_100125980();
  int v16 = *(unsigned __int8 *)(v14 + 17);
  sub_10003A874();
  uint64_t v18 = (char *)(v15 + v17[12]);
  uint64_t v19 = v17[16];
  uint64_t v20 = v17[20];
  uint64_t v21 = v17[24];
  sub_100123270();
  sub_10004B9F4(v12, v16, v18);
  *(unsigned char *)(v15 + v19) = 0;
  *(unsigned char *)(v15 + v20) = 1;
  *(unsigned char *)(v15 + v21) = 1;
  type metadata accessor for OverviewTimelineEntry();
  swift_storeEnumTagMultiPayload();
  swift_errorRelease();
  v24(v12, v13);
  sub_100009D48((uint64_t)(v0 + 17));
  sub_100009D48((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1000B9160(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1488) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    unint64_t v5 = sub_1000BA9DC;
  }
  else
  {
    *(void *)(v4 + 1496) = a1;
    unint64_t v5 = sub_1000B92A4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000B92A4()
{
  unint64_t v198 = v0;
  uint64_t v1 = *(void *)(v0 + 1032);
  uint64_t v2 = *(void *)(v0 + 1024);
  *(void *)(v0 + 664) = *(void *)(v0 + 1496);
  sub_10002919C(0);
  sub_1000291D0();
  sub_100124440();
  sub_1000BEFCC(v2, v1);
  unint64_t v3 = *(unsigned int *)(v0 + 1512);
  uint64_t v4 = *(uint64_t (**)(void, void))(v0 + 1344);
  unint64_t v5 = *(void (**)(void, void))(v0 + 1312);
  uint64_t v6 = *(void *)(v0 + 1224);
  uint64_t v7 = *(void *)(v0 + 1200);
  sub_100125980();
  int v8 = v4(v6, v7);
  v5(v6, v7);
  uint64_t v195 = (void *)v0;
  if (v8 == v3)
  {
    uint64_t v9 = *(void *)(v0 + 1032);
    uint64_t v10 = *(NSObject **)(v0 + 936);
    uint64_t v11 = *(void *)(v0 + 928);
    uint64_t v12 = v10 + 6;
    isa = (unsigned int (*)(void, void, void))v10[6].isa;
    if (!isa(v9, 1, v11))
    {
      uint64_t v15 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v10[2].isa;
      uint64_t v14 = (uint64_t)&v10[2];
      uint64_t v190 = v15;
      ((void (*)(void, uint64_t, uint64_t))v15)(*(void *)(v0 + 944), v9, v11);
      sub_1000BE910(&qword_1001623A0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0);
      sub_100125BE0();
      uint64_t v16 = *(void *)(v0 + 424);
      unint64_t v17 = *(void *)(v0 + 432);
      unint64_t v18 = *(void *)(v16 + 16);
      if (v17 == v18)
      {
LABEL_9:
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = *(void *)(v0 + 920);
        uint64_t v20 = *(void *)(v0 + 912);
        while (1)
        {
          if ((v17 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_104:
            __break(1u);
            goto LABEL_105;
          }
          if (v17 >= v18) {
            goto LABEL_104;
          }
          uint64_t v21 = *(void *)(v0 + 920);
          unint64_t v3 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
          uint64_t v22 = v16 + v3 + *(void *)(v20 + 72) * v17;
          *(void *)(v0 + 432) = v17 + 1;
          sub_1000BEEDC(v22, v21, type metadata accessor for HeadlineViewModel);
          uint64_t v23 = *(void *)(v19 + 104);
          sub_1000BF0FC(v21, type metadata accessor for HeadlineViewModel);
          uint64_t v16 = *(void *)(v0 + 424);
          if (v23 != 1) {
            break;
          }
          unint64_t v17 = *(void *)(v0 + 432);
          unint64_t v18 = *(void *)(v16 + 16);
          if (v17 == v18) {
            goto LABEL_9;
          }
        }
        uint64_t v24 = *(void *)(v0 + 1032);
        uint64_t v25 = *(void *)(v0 + 928);
        swift_bridgeObjectRelease();
        if (isa(v24, 1, v25))
        {
          uint64_t v26 = 0;
          uint64_t v27 = _swiftEmptyArrayStorage;
          uint64_t v28 = (char *)_swiftEmptyArrayStorage + v3;
          uint64_t v29 = 1;
        }
        else
        {
          ((void (*)(void, void, void))v190)(*(void *)(v0 + 944), *(void *)(v0 + 1032), *(void *)(v0 + 928));
          sub_10001C9D0(3);
        }
        uint64_t v30 = *(void *)(v0 + 1032);
        uint64_t v31 = *(void *)(v0 + 1016);
        *(void *)(v0 + 256) = v27;
        *(void *)(v0 + 264) = v28;
        *(void *)(v0 + 272) = v26;
        *(void *)(v0 + 280) = v29;
        sub_1000BF098(0, &qword_1001623A8, type metadata accessor for HeadlineViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for ArraySlice);
        sub_1000BEF44();
        sub_100124430();
        sub_1000BEFCC(v31, v30);
      }
    }
  }
  uint64_t v32 = *(void *)(v0 + 1008);
  uint64_t v33 = *(void *)(v0 + 936);
  uint64_t v34 = *(void *)(v0 + 928);
  sub_1000BEEDC(*(void *)(v0 + 1032), v32, (uint64_t (*)(void))sub_100029100);
  uint64_t v35 = *(unsigned int (**)(void, void, void))(v33 + 48);
  LODWORD(v34) = v35(v32, 1, v34);
  sub_1000BF0FC(v32, (uint64_t (*)(void))sub_100029100);
  LODWORD(v190) = v34;
  unint64_t v3 = v0;
  if (v34 == 1)
  {
    uint64_t v36 = v35;
    uint64_t v37 = *(void *)(v3 + 1304);
    (*(void (**)(void, void, void))(v3 + 1424))(*(void *)(v3 + 1064), *(void *)(v3 + 1072), *(void *)(v3 + 1048));
    sub_10001C994(v37);
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    unint64_t v45 = v44;
    if (v44)
    {
      sub_100126550();
      swift_unknownObjectRetain_n();
      v50 = (void *)swift_dynamicCastClass();
      if (!v50)
      {
        swift_unknownObjectRelease();
        v50 = _swiftEmptyArrayStorage;
      }
      uint64_t v51 = v50[2];
      swift_release();
      if (__OFSUB__(v45 >> 1, v43))
      {
        __break(1u);
      }
      else if (v51 == (v45 >> 1) - v43)
      {
        uint64_t v46 = (void *)swift_dynamicCastClass();
        unint64_t v3 = (unint64_t)v195;
        if (!v46)
        {
          swift_unknownObjectRelease();
          uint64_t v46 = _swiftEmptyArrayStorage;
        }
        goto LABEL_26;
      }
      swift_unknownObjectRelease();
      unint64_t v3 = (unint64_t)v195;
    }
    uint64_t v46 = sub_1000ABA24(v39, v41, v43, v45);
LABEL_26:
    swift_unknownObjectRelease();
    *(void *)(v3 + 552) = v46;
    goto LABEL_34;
  }
  unint64_t v47 = *(void *)(v0 + 1464);
  uint64_t v48 = *(void *)(v0 + 1440);
  if (v47)
  {
    sub_100126550();
    swift_unknownObjectRetain_n();
    v52 = (void *)swift_dynamicCastClass();
    if (!v52)
    {
      swift_unknownObjectRelease();
      unint64_t v47 = *(void *)(v0 + 1464);
      v52 = _swiftEmptyArrayStorage;
    }
    uint64_t v53 = *(void *)(v0 + 1456);
    uint64_t v54 = v52[2];
    swift_release();
    if (__OFSUB__(v47 >> 1, v53))
    {
      __break(1u);
    }
    else if (v54 == (v47 >> 1) - v53)
    {
      uint64_t v36 = v35;
      uint64_t v49 = (void *)swift_dynamicCastClass();
      if (!v49)
      {
        swift_unknownObjectRelease();
        uint64_t v49 = _swiftEmptyArrayStorage;
      }
      goto LABEL_33;
    }
    swift_unknownObjectRelease();
    unint64_t v47 = *(void *)(v3 + 1464);
    uint64_t v48 = *(void *)(v3 + 1440);
  }
  else
  {
    swift_unknownObjectRetain();
  }
  uint64_t v36 = v35;
  uint64_t v49 = sub_1000ABA24(v48, *(void *)(v3 + 1448), *(void *)(v3 + 1456), v47);
LABEL_33:
  swift_unknownObjectRelease();
  *(void *)(v3 + 616) = v49;
LABEL_34:
  sub_1001243C0();
  (*(void (**)(void, void, void))(v3 + 1400))(*(void *)(v3 + 1144), *(void *)(v3 + 760), *(void *)(v3 + 1104));
  uint64_t v12 = sub_100124550();
  LOBYTE(isa) = sub_100125F60();
  if (os_log_type_enabled(v12, (os_log_type_t)isa))
  {
    uint64_t v55 = *(void *)(v3 + 1032);
    uint64_t v56 = *(void *)(v3 + 928);
    uint64_t v14 = swift_slowAlloc();
    v197[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134218498;
    swift_beginAccess();
    uint64_t v57 = 0;
    if (!v36(v55, 1, v56))
    {
      uint64_t v58 = *(void *)(v3 + 944);
      uint64_t v59 = *(void *)(v3 + 936);
      uint64_t v60 = *(void *)(v3 + 928);
      (*(void (**)(uint64_t, void, uint64_t))(v59 + 16))(v58, *(void *)(v3 + 1032), v60);
      uint64_t v57 = sub_1001243E0();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v60);
    }
    *(void *)(v3 + 576) = v57;
    sub_100126030();
    *(_WORD *)(v14 + 12) = 2048;
    swift_beginAccess();
    *(void *)(v3 + 592) = sub_1001243E0();
    sub_100126030();
    *(_WORD *)(v14 + 22) = 2080;
    if (qword_10015D4C8 != -1) {
LABEL_105:
    }
      swift_once();
    uint64_t v61 = *(void (**)(void, void))(v3 + 1416);
    uint64_t v62 = *(void *)(v3 + 1144);
    uint64_t v63 = *(void *)(v3 + 1104);
    sub_100126690();
    *(void *)(v3 + 608) = sub_1000AB124(*(void *)(v3 + 440), *(void *)(v3 + 448), v197);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)isa, "Fetched %ld headlines for %ld stocks, id=%s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v64 = v62;
    uint64_t v65 = v63;
  }
  else
  {
    uint64_t v61 = *(void (**)(void, void))(v3 + 1416);
    uint64_t v66 = *(void *)(v3 + 1144);
    uint64_t v67 = *(void *)(v3 + 1104);

    uint64_t v64 = v66;
    uint64_t v65 = v67;
  }
  v61(v64, v65);
  uint64_t v68 = *(void *)(v3 + 744);
  int v69 = *(unsigned __int8 *)(v68 + 16);
  if (v69 == 1)
  {
    uint64_t v70 = *(uint64_t **)(v3 + 1096);
    uint64_t v71 = v70[1];
    uint64_t v187 = *v70;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v187 = 0;
    uint64_t v71 = 0;
  }
  int v72 = *(_DWORD *)(v3 + 1504);
  uint64_t v73 = *(uint64_t (**)(void, void))(v3 + 1344);
  uint64_t v74 = *(void *)(v3 + 1216);
  uint64_t v75 = *(void *)(v3 + 1200);
  int v76 = *(unsigned __int8 *)(v68 + 17);
  sub_100125980();
  int v77 = v73(v74, v75);
  char v183 = v76;
  if (v77 == v72)
  {
    uint64_t v179 = 3;
    if (v190 == 1) {
      char v78 = v76;
    }
    else {
      char v78 = 3;
    }
    char v191 = v78;
    uint64_t v181 = 1;
    uint64_t v79 = (void *)v3;
    goto LABEL_76;
  }
  uint64_t v79 = (void *)v3;
  if (v77 != *(_DWORD *)(v3 + 1508))
  {
    if (v77 == *(_DWORD *)(v3 + 1512))
    {
      if (v76) {
        uint64_t v83 = 2;
      }
      else {
        uint64_t v83 = 1;
      }
      if (v76) {
        char v84 = 1;
      }
      else {
        char v84 = 2;
      }
      if (v190 == 1) {
        uint64_t v85 = v83;
      }
      else {
        uint64_t v85 = 2;
      }
      uint64_t v86 = 6;
      if (v190 != 1) {
        uint64_t v86 = 3;
      }
      uint64_t v179 = v86;
      uint64_t v181 = v85;
      if (v190 != 1) {
        char v84 = 3;
      }
      char v191 = v84;
      uint64_t v173 = v71;
      goto LABEL_77;
    }
    if (v77 != *(_DWORD *)(v3 + 1516))
    {
      uint64_t v157 = *(void (**)(void, void))(v3 + 1312);
      uint64_t v158 = *(void *)(v3 + 1272);
      uint64_t v159 = *(void *)(v3 + 1200);
      (*(void (**)(void, void, void))(*(void *)(v3 + 888) + 16))(*(void *)(v3 + 896), *(void *)(v3 + 752), *(void *)(v3 + 880));
      v197[0] = 0;
      v197[1] = 0xE000000000000000;
      sub_1001260E0(52);
      v200._object = (void *)0x80000001001322E0;
      v200._countAndFlagsBits = 0xD000000000000030;
      sub_100125BB0(v200);
      sub_100125980();
      sub_1000B3468(&qword_10015E790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      v201._countAndFlagsBits = sub_1001264F0();
      sub_100125BB0(v201);
      swift_bridgeObjectRelease();
      v157(v158, v159);
      v202._countAndFlagsBits = 11815;
      v202._object = (void *)0xE200000000000000;
      sub_100125BB0(v202);
      return sub_100126290();
    }
    char v191 = 3;
    uint64_t v179 = *(void *)(v3 + 1304);
    uint64_t v181 = 1;
    goto LABEL_76;
  }
  uint64_t v80 = 1;
  if (v76) {
    char v81 = 1;
  }
  else {
    char v81 = 2;
  }
  if (v76) {
    uint64_t v80 = 2;
  }
  uint64_t v82 = 2;
  if (((v190 == 1) & v69) == 0) {
    uint64_t v82 = 3;
  }
  if (v190 != 1)
  {
    uint64_t v181 = 2;
    char v191 = 3;
    uint64_t v179 = 3;
LABEL_76:
    swift_bridgeObjectRelease();
    uint64_t v187 = 0;
    uint64_t v173 = 0;
    goto LABEL_77;
  }
  uint64_t v179 = v82;
  uint64_t v181 = v80;
  char v191 = v81;
  uint64_t v173 = v71;
LABEL_77:
  unint64_t v87 = (void (*)(void, void, void))v79[178];
  os_log_type_t v177 = (void (*)(void, void, void))v79[175];
  uint64_t v171 = v79[142];
  uint64_t v175 = v79[138];
  uint64_t v161 = v79[135];
  uint64_t v162 = v79[137];
  uint64_t v88 = v79[134];
  uint64_t v89 = v79[133];
  uint64_t v90 = v79[132];
  uint64_t v91 = v79[131];
  uint64_t v163 = v79[129];
  uint64_t v92 = (char *)v79[109];
  uint64_t v93 = (int *)v79[108];
  uint64_t v94 = v79[107];
  uint64_t v165 = v79[106];
  uint64_t v166 = v79[105];
  uint64_t v169 = v79[95];
  swift_beginAccess();
  v87(v89, v88, v91);
  *(unsigned char *)(swift_task_alloc() + 16) = v191;
  type metadata accessor for TickerCellViewModel(0);
  sub_1001243D0();
  swift_task_dealloc();
  uint64_t v168 = *(void (**)(void, void))(v90 + 8);
  v168(v89, v91);
  uint64_t v95 = v162 + *(int *)(v161 + 24);
  v96 = &v92[v93[7]];
  uint64_t v97 = sub_1001238A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16))(v96, v95, v97);
  swift_beginAccess();
  sub_1000BEEDC(v163, (uint64_t)&v92[v93[11]], (uint64_t (*)(void))sub_100029100);
  *(void *)uint64_t v92 = v187;
  *((void *)v92 + 1) = v173;
  (*(void (**)(char *, uint64_t, uint64_t))(v165 + 32))(&v92[v93[5]], v94, v166);
  v92[v93[6]] = v191;
  *(void *)&v92[v93[8]] = v179;
  *(void *)&v92[v93[9]] = v181;
  v92[v93[10]] = v183;
  v177(v171, v169, v175);
  uint64_t v98 = sub_100124550();
  os_log_type_t v99 = sub_100125F60();
  if (os_log_type_enabled(v98, v99))
  {
    NSBundle v100 = (uint8_t *)swift_slowAlloc();
    v197[0] = swift_slowAlloc();
    *(_DWORD *)NSBundle v100 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v188 = v79[142];
    uint64_t v192 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v79[177];
    uint64_t v185 = v79[138];
    sub_100126690();
    v79[70] = sub_1000AB124(v79[63], v79[64], v197);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v98, v99, "Successfully created timeline entry, id=%s", v100, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(uint64_t, uint64_t))v192)(v188, v185);
  }
  else
  {
    uint64_t v101 = (void (*)(void, void))v79[177];
    uint64_t v102 = v79[142];
    uint64_t v103 = v79[138];

    v101(v102, v103);
  }
  uint64_t v104 = v79[137];
  uint64_t v105 = v79[109];
  uint64_t v106 = v79[92];
  sub_10003A874();
  uint64_t v167 = v107;
  uint64_t v108 = v106 + v107[12];
  sub_100123270();
  sub_1000BEEDC(v105, v108, type metadata accessor for WatchlistOverviewContentViewModel);
  uint64_t v109 = *(void *)(v104 + 16);
  uint64_t v110 = *(void *)(v109 + 16);
  if (!v110)
  {
    char v142 = 0;
    goto LABEL_99;
  }
  uint64_t v111 = v79[120];
  uint64_t v186 = v79[99];
  uint64_t v189 = v79[119];
  uint64_t v112 = v79[97];
  uint64_t v113 = v109 + ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80));
  uint64_t v114 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56);
  unsigned int v184 = enum case for ExchangeStatus.open(_:);
  v182 = (void (**)(uint64_t, void, uint64_t))(v112 + 104);
  uint64_t v115 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
  v170 = (void (**)(uint64_t, uint64_t, uint64_t))(v112 + 32);
  v176 = (void (**)(uint64_t, uint64_t))(v112 + 8);
  uint64_t v178 = *(void *)(v111 + 72);
  swift_bridgeObjectRetain();
  uint64_t v193 = v114;
  char v180 = v115;
  while (1)
  {
    uint64_t v119 = v79[121];
    uint64_t v120 = v79[101];
    sub_1000BEEDC(v113, v119, (uint64_t (*)(void))type metadata accessor for WidgetStock);
    sub_1000BEEDC(v119 + *(int *)(v189 + 20), v120, (uint64_t (*)(void))sub_100029068);
    uint64_t v121 = sub_100123670();
    uint64_t v122 = *(void *)(v121 - 8);
    int v123 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121);
    uint64_t v124 = v79[104];
    uint64_t v125 = v79[101];
    uint64_t v126 = v79[96];
    if (v123 == 1)
    {
      sub_1000BF0FC(v79[101], (uint64_t (*)(void))sub_100029068);
      uint64_t v127 = *v193;
      (*v193)(v124, 1, 1, v126);
    }
    else
    {
      sub_100123610();
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v125, v121);
      uint64_t v127 = *v193;
      (*v193)(v124, 0, 1, v126);
    }
    uint64_t v128 = v79[104];
    uint64_t v129 = v79[103];
    uint64_t v130 = v79[100];
    uint64_t v131 = v79[96];
    (*v182)(v129, v184, v131);
    v127(v129, 0, 1, v131);
    uint64_t v132 = v130 + *(int *)(v186 + 48);
    sub_1000BEEDC(v128, v130, (uint64_t (*)(void))sub_100072A04);
    sub_1000BEEDC(v129, v132, (uint64_t (*)(void))sub_100072A04);
    uint64_t v133 = *v180;
    if ((*v180)(v130, 1, v131) == 1) {
      break;
    }
    uint64_t v134 = v79[96];
    sub_1000BEEDC(v79[100], v79[102], (uint64_t (*)(void))sub_100072A04);
    if (v133(v132, 1, v134) != 1)
    {
      uint64_t v172 = v79[104];
      uint64_t v174 = v79[121];
      uint64_t v135 = v79[103];
      uint64_t v136 = v79[102];
      uint64_t v137 = v79[100];
      uint64_t v138 = v79[98];
      uint64_t v139 = v79[96];
      (*v170)(v138, v132, v139);
      sub_1000B3468(&qword_1001606E8, (void (*)(uint64_t))&type metadata accessor for ExchangeStatus);
      char v140 = sub_100125A90();
      uint64_t v141 = *v176;
      (*v176)(v136, v139);
      v141(v138, v139);
      sub_1000BF0FC(v137, (uint64_t (*)(void))sub_100072A04);
      sub_1000BF0FC(v135, (uint64_t (*)(void))sub_100072A04);
      sub_1000BF0FC(v172, (uint64_t (*)(void))sub_100072A04);
      sub_1000BF0FC(v174, (uint64_t (*)(void))type metadata accessor for WidgetStock);
      if (v140)
      {
        char v142 = 1;
        uint64_t v79 = v195;
        goto LABEL_98;
      }
      goto LABEL_86;
    }
    (*v176)(v79[102], v79[96]);
LABEL_85:
    uint64_t v116 = v79[121];
    uint64_t v117 = v79[104];
    uint64_t v118 = v79[103];
    sub_1000BF0FC(v79[100], (uint64_t (*)(void))sub_1000729A0);
    sub_1000BF0FC(v118, (uint64_t (*)(void))sub_100072A04);
    sub_1000BF0FC(v117, (uint64_t (*)(void))sub_100072A04);
    sub_1000BF0FC(v116, (uint64_t (*)(void))type metadata accessor for WidgetStock);
LABEL_86:
    v113 += v178;
    --v110;
    uint64_t v79 = v195;
    if (!v110)
    {
      char v142 = 0;
      goto LABEL_98;
    }
  }
  if (v133(v132, 1, v79[96]) != 1) {
    goto LABEL_85;
  }
  uint64_t v143 = v79[121];
  uint64_t v144 = v79[104];
  uint64_t v145 = v79[103];
  sub_1000BF0FC(v79[100], (uint64_t (*)(void))sub_100072A04);
  sub_1000BF0FC(v145, (uint64_t (*)(void))sub_100072A04);
  sub_1000BF0FC(v144, (uint64_t (*)(void))sub_100072A04);
  sub_1000BF0FC(v143, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  char v142 = 1;
LABEL_98:
  swift_bridgeObjectRelease();
LABEL_99:
  uint64_t v164 = (uint64_t)(v79 + 2);
  uint64_t v160 = (uint64_t)(v79 + 17);
  uint64_t v146 = v79[149];
  uint64_t v147 = v79[137];
  uint64_t v148 = v79;
  uint64_t v194 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v79[131];
  uint64_t v196 = v79[134];
  uint64_t v149 = v79[129];
  uint64_t v150 = v148[109];
  uint64_t v151 = v148[92];
  swift_unknownObjectRelease();
  uint64_t v152 = v167[16];
  uint64_t v153 = v167[20];
  uint64_t v154 = v167[24];
  sub_1000BF0FC(v150, type metadata accessor for WatchlistOverviewContentViewModel);
  sub_1000BF0FC(v147, type metadata accessor for WidgetWatchlist);
  sub_1000BF0FC(v146, (uint64_t (*)(void))sub_1000BEBFC);
  *(unsigned char *)(v151 + v152) = v142;
  *(unsigned char *)(v151 + v153) = 0;
  *(unsigned char *)(v151 + v154) = 0;
  type metadata accessor for OverviewTimelineEntry();
  swift_storeEnumTagMultiPayload();
  sub_1000BF0FC(v149, (uint64_t (*)(void))sub_100029100);
  v168(v196, v194);
  sub_100009D48(v160);
  sub_100009D48(v164);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v155 = (uint64_t (*)(void))v148[1];
  return v155();
}

uint64_t sub_1000BA9DC()
{
  uint64_t v207 = v0;
  (*(void (**)(void, void, void))(v0 + 1400))(*(void *)(v0 + 1152), *(void *)(v0 + 760), *(void *)(v0 + 1104));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100124550();
  LOBYTE(v2) = sub_100125F60();
  if (os_log_type_enabled(v1, (os_log_type_t)v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    v206[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412546;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 640) = v5;
    sub_100126030();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v3 + 12) = 2080;
    if (qword_10015D4C8 != -1) {
LABEL_110:
    }
      swift_once();
    uint64_t v193 = *(void *)(v0 + 1152);
    unint64_t v198 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
    uint64_t v188 = *(void *)(v0 + 1104);
    sub_100126690();
    *(void *)(v0 + 656) = sub_1000AB124(*(void *)(v0 + 536), *(void *)(v0 + 544), v206);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, (os_log_type_t)v2, "Fetching headlines failed with error=%@, id=%s", (uint8_t *)v3, 0x16u);
    sub_1000BF098(0, &qword_10015DF10, (uint64_t (*)(uint64_t))sub_100009DDC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v198(v193, v188);
  }
  else
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1416);
    uint64_t v7 = *(void *)(v0 + 1152);
    uint64_t v8 = *(void *)(v0 + 1104);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    v6(v7, v8);
  }
  int v9 = *(_DWORD *)(v0 + 1512);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1344);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 1312);
  uint64_t v12 = *(void *)(v0 + 1224);
  uint64_t v13 = *(void *)(v0 + 1200);
  sub_100125980();
  int v14 = v10(v12, v13);
  v11(v12, v13);
  uint64_t v204 = (void *)v0;
  if (v14 == v9)
  {
    uint64_t v15 = *(void *)(v0 + 1032);
    uint64_t v16 = *(void *)(v0 + 936);
    uint64_t v17 = *(void *)(v0 + 928);
    uint64_t v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v2(v15, 1, v17))
    {
      uint64_t v199 = *(void (**)(void, uint64_t, uint64_t))(v16 + 16);
      v199(*(void *)(v0 + 944), v15, v17);
      sub_1000BE910(&qword_1001623A0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0);
      sub_100125BE0();
      uint64_t v18 = *(void *)(v0 + 424);
      unint64_t v19 = *(void *)(v0 + 432);
      unint64_t v20 = *(void *)(v18 + 16);
      if (v19 == v20)
      {
LABEL_13:
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v1 = (v0 + 256);
        uint64_t v3 = *(void *)(v0 + 920);
        uint64_t v21 = *(void *)(v0 + 912);
        while (1)
        {
          if ((v19 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_109:
            __break(1u);
            goto LABEL_110;
          }
          if (v19 >= v20) {
            goto LABEL_109;
          }
          uint64_t v22 = *(void *)(v0 + 920);
          unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
          uint64_t v24 = v18 + v23 + *(void *)(v21 + 72) * v19;
          *(void *)(v0 + 432) = v19 + 1;
          sub_1000BEEDC(v24, v22, type metadata accessor for HeadlineViewModel);
          uint64_t v25 = *(void *)(v3 + 104);
          sub_1000BF0FC(v22, type metadata accessor for HeadlineViewModel);
          uint64_t v18 = *(void *)(v0 + 424);
          if (v25 != 1) {
            break;
          }
          unint64_t v19 = *(void *)(v0 + 432);
          unint64_t v20 = *(void *)(v18 + 16);
          if (v19 == v20) {
            goto LABEL_13;
          }
        }
        uint64_t v26 = *(void *)(v0 + 1032);
        uint64_t v27 = *(void *)(v0 + 928);
        swift_bridgeObjectRelease();
        if (v2(v26, 1, v27))
        {
          uint64_t v28 = 0;
          uint64_t v29 = _swiftEmptyArrayStorage;
          uint64_t v30 = (char *)_swiftEmptyArrayStorage + v23;
          uint64_t v31 = 1;
        }
        else
        {
          v199(*(void *)(v0 + 944), *(void *)(v0 + 1032), *(void *)(v0 + 928));
          sub_10001C9D0(3);
        }
        uint64_t v32 = *(void *)(v0 + 1032);
        uint64_t v33 = *(void *)(v0 + 1016);
        *(void *)(v0 + 256) = v29;
        *(void *)(v0 + 264) = v30;
        *(void *)(v0 + 272) = v28;
        *(void *)(v0 + 280) = v31;
        sub_1000BF098(0, &qword_1001623A8, type metadata accessor for HeadlineViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for ArraySlice);
        sub_1000BEF44();
        sub_100124430();
        sub_1000BEFCC(v33, v32);
      }
    }
  }
  uint64_t v34 = *(void *)(v0 + 1008);
  uint64_t v35 = *(void *)(v0 + 936);
  uint64_t v36 = *(void *)(v0 + 928);
  sub_1000BEEDC(*(void *)(v0 + 1032), v34, (uint64_t (*)(void))sub_100029100);
  uint64_t v194 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  int v37 = v194(v34, 1, v36);
  sub_1000BF0FC(v34, (uint64_t (*)(void))sub_100029100);
  uint64_t v38 = v0;
  if (v37 == 1)
  {
    uint64_t v39 = *(void *)(v0 + 1304);
    (*(void (**)(void, void, void))(v0 + 1424))(*(void *)(v0 + 1064), *(void *)(v0 + 1072), *(void *)(v0 + 1048));
    sub_10001C994(v39);
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    unint64_t v47 = v46;
    if (v46)
    {
      sub_100126550();
      swift_unknownObjectRetain_n();
      v52 = (void *)swift_dynamicCastClass();
      if (!v52)
      {
        swift_unknownObjectRelease();
        v52 = _swiftEmptyArrayStorage;
      }
      uint64_t v53 = v52[2];
      swift_release();
      if (__OFSUB__(v47 >> 1, v45))
      {
        __break(1u);
      }
      else if (v53 == (v47 >> 1) - v45)
      {
        uint64_t v48 = (void *)swift_dynamicCastClass();
        uint64_t v38 = v0;
        if (!v48)
        {
          swift_unknownObjectRelease();
          uint64_t v48 = _swiftEmptyArrayStorage;
        }
        goto LABEL_30;
      }
      swift_unknownObjectRelease();
      uint64_t v38 = v0;
    }
    uint64_t v48 = sub_1000ABA24(v41, v43, v45, v47);
LABEL_30:
    swift_unknownObjectRelease();
    *(void *)(v38 + 552) = v48;
    goto LABEL_38;
  }
  unint64_t v49 = *(void *)(v0 + 1464);
  uint64_t v50 = *(void *)(v0 + 1440);
  if (v49)
  {
    sub_100126550();
    swift_unknownObjectRetain_n();
    uint64_t v54 = (void *)swift_dynamicCastClass();
    if (!v54)
    {
      swift_unknownObjectRelease();
      unint64_t v49 = *(void *)(v0 + 1464);
      uint64_t v54 = _swiftEmptyArrayStorage;
    }
    uint64_t v55 = *(void *)(v0 + 1456);
    uint64_t v56 = v54[2];
    swift_release();
    if (__OFSUB__(v49 >> 1, v55))
    {
      __break(1u);
    }
    else if (v56 == (v49 >> 1) - v55)
    {
      uint64_t v51 = (void *)swift_dynamicCastClass();
      if (!v51)
      {
        swift_unknownObjectRelease();
        uint64_t v51 = _swiftEmptyArrayStorage;
      }
      goto LABEL_37;
    }
    swift_unknownObjectRelease();
    unint64_t v49 = *(void *)(v38 + 1464);
    uint64_t v50 = *(void *)(v38 + 1440);
  }
  else
  {
    swift_unknownObjectRetain();
  }
  uint64_t v51 = sub_1000ABA24(v50, *(void *)(v38 + 1448), *(void *)(v38 + 1456), v49);
LABEL_37:
  swift_unknownObjectRelease();
  *(void *)(v38 + 616) = v51;
LABEL_38:
  sub_1001243C0();
  (*(void (**)(void, void, void))(v38 + 1400))(*(void *)(v38 + 1144), *(void *)(v38 + 760), *(void *)(v38 + 1104));
  uint64_t v57 = sub_100124550();
  os_log_type_t v58 = sub_100125F60();
  if (os_log_type_enabled(v57, v58))
  {
    int v189 = v37;
    uint64_t v59 = *(void *)(v38 + 1032);
    uint64_t v60 = *(void *)(v38 + 928);
    uint64_t v61 = swift_slowAlloc();
    v206[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v61 = 134218498;
    swift_beginAccess();
    uint64_t v62 = 0;
    if (!v194(v59, 1, v60))
    {
      uint64_t v63 = *(void *)(v38 + 944);
      uint64_t v64 = *(void *)(v38 + 936);
      uint64_t v65 = *(void *)(v38 + 928);
      (*(void (**)(uint64_t, void, uint64_t))(v64 + 16))(v63, *(void *)(v38 + 1032), v65);
      uint64_t v62 = sub_1001243E0();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    }
    *(void *)(v38 + 576) = v62;
    sub_100126030();
    *(_WORD *)(v61 + 12) = 2048;
    swift_beginAccess();
    *(void *)(v38 + 592) = sub_1001243E0();
    sub_100126030();
    *(_WORD *)(v61 + 22) = 2080;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v38 + 1416);
    uint64_t v67 = *(void *)(v38 + 1144);
    uint64_t v68 = *(void *)(v38 + 1104);
    sub_100126690();
    *(void *)(v38 + 608) = sub_1000AB124(*(void *)(v38 + 440), *(void *)(v38 + 448), v206);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Fetched %ld headlines for %ld stocks, id=%s", (uint8_t *)v61, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v66(v67, v68);
    int v37 = v189;
  }
  else
  {
    int v69 = *(void (**)(uint64_t, uint64_t))(v38 + 1416);
    uint64_t v70 = *(void *)(v38 + 1144);
    uint64_t v71 = *(void *)(v38 + 1104);

    v69(v70, v71);
  }
  uint64_t v72 = *(void *)(v38 + 744);
  int v73 = *(unsigned __int8 *)(v72 + 16);
  if (v73 == 1)
  {
    uint64_t v74 = *(uint64_t **)(v38 + 1096);
    uint64_t v190 = *v74;
    uint64_t v200 = v74[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v190 = 0;
    uint64_t v200 = 0;
  }
  uint64_t v75 = v38;
  int v76 = *(_DWORD *)(v38 + 1504);
  int v77 = *(uint64_t (**)(uint64_t, uint64_t))(v38 + 1344);
  uint64_t v78 = *(void *)(v75 + 1216);
  uint64_t v79 = *(void *)(v75 + 1200);
  int v80 = *(unsigned __int8 *)(v72 + 17);
  sub_100125980();
  int v81 = v77(v78, v79);
  char v186 = v80;
  if (v81 == v76)
  {
    uint64_t v182 = 3;
    if (v37 == 1) {
      char v82 = v80;
    }
    else {
      char v82 = 3;
    }
    char v195 = v82;
    uint64_t v184 = 1;
    uint64_t v83 = (void *)v75;
    goto LABEL_81;
  }
  uint64_t v83 = (void *)v75;
  if (v81 != *(_DWORD *)(v75 + 1508))
  {
    if (v81 == *(_DWORD *)(v75 + 1512))
    {
      if (v80) {
        uint64_t v87 = 2;
      }
      else {
        uint64_t v87 = 1;
      }
      if (v80) {
        char v88 = 1;
      }
      else {
        char v88 = 2;
      }
      if (v37 == 1) {
        uint64_t v89 = v87;
      }
      else {
        uint64_t v89 = 2;
      }
      uint64_t v90 = 6;
      if (v37 != 1) {
        uint64_t v90 = 3;
      }
      uint64_t v182 = v90;
      uint64_t v184 = v89;
      if (v37 != 1) {
        char v88 = 3;
      }
      char v195 = v88;
      goto LABEL_82;
    }
    if (v81 != *(_DWORD *)(v75 + 1516))
    {
      uint64_t v161 = *(void (**)(uint64_t, uint64_t))(v75 + 1312);
      uint64_t v162 = *(void *)(v75 + 1272);
      uint64_t v163 = *(void *)(v75 + 1200);
      (*(void (**)(void, void, void))(*(void *)(v75 + 888) + 16))(*(void *)(v75 + 896), *(void *)(v75 + 752), *(void *)(v75 + 880));
      v206[0] = 0;
      v206[1] = 0xE000000000000000;
      sub_1001260E0(52);
      v209._object = (void *)0x80000001001322E0;
      v209._countAndFlagsBits = 0xD000000000000030;
      sub_100125BB0(v209);
      sub_100125980();
      sub_1000B3468(&qword_10015E790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
      v210._countAndFlagsBits = sub_1001264F0();
      sub_100125BB0(v210);
      swift_bridgeObjectRelease();
      v161(v162, v163);
      v211._countAndFlagsBits = 11815;
      v211._object = (void *)0xE200000000000000;
      sub_100125BB0(v211);
      return sub_100126290();
    }
    char v195 = 3;
    uint64_t v182 = *(void *)(v75 + 1304);
    uint64_t v184 = 1;
    goto LABEL_81;
  }
  uint64_t v84 = 1;
  if (v80) {
    char v85 = 1;
  }
  else {
    char v85 = 2;
  }
  if (v80) {
    uint64_t v84 = 2;
  }
  uint64_t v86 = 2;
  if (((v37 == 1) & v73) == 0) {
    uint64_t v86 = 3;
  }
  if (v37 != 1)
  {
    uint64_t v184 = 2;
    char v195 = 3;
    uint64_t v182 = 3;
LABEL_81:
    swift_bridgeObjectRelease();
    uint64_t v190 = 0;
    uint64_t v200 = 0;
    goto LABEL_82;
  }
  uint64_t v182 = v86;
  uint64_t v184 = v84;
  char v195 = v85;
LABEL_82:
  uint64_t v91 = (void (*)(uint64_t, uint64_t, uint64_t))v83[178];
  char v180 = (void (*)(uint64_t, uint64_t, uint64_t))v83[175];
  uint64_t v176 = v83[142];
  uint64_t v178 = v83[138];
  uint64_t v165 = v83[135];
  uint64_t v166 = v83[137];
  uint64_t v92 = v83[134];
  uint64_t v93 = v83[133];
  uint64_t v94 = v83[132];
  uint64_t v95 = v83[131];
  uint64_t v168 = v83[129];
  v96 = (char *)v83[109];
  uint64_t v97 = (int *)v83[108];
  uint64_t v98 = v83[107];
  uint64_t v169 = v83[106];
  uint64_t v172 = v83[105];
  uint64_t v174 = v83[95];
  swift_beginAccess();
  v91(v93, v92, v95);
  *(unsigned char *)(swift_task_alloc() + 16) = v195;
  type metadata accessor for TickerCellViewModel(0);
  sub_1001243D0();
  swift_task_dealloc();
  uint64_t v171 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
  v171(v93, v95);
  uint64_t v99 = v166 + *(int *)(v165 + 24);
  NSBundle v100 = &v96[v97[7]];
  uint64_t v101 = sub_1001238A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16))(v100, v99, v101);
  swift_beginAccess();
  sub_1000BEEDC(v168, (uint64_t)&v96[v97[11]], (uint64_t (*)(void))sub_100029100);
  *(void *)v96 = v190;
  *((void *)v96 + 1) = v200;
  (*(void (**)(char *, uint64_t, uint64_t))(v169 + 32))(&v96[v97[5]], v98, v172);
  v96[v97[6]] = v195;
  *(void *)&v96[v97[8]] = v182;
  *(void *)&v96[v97[9]] = v184;
  v96[v97[10]] = v186;
  v180(v176, v174, v178);
  uint64_t v102 = sub_100124550();
  os_log_type_t v103 = sub_100125F60();
  if (os_log_type_enabled(v102, v103))
  {
    uint64_t v104 = (uint8_t *)swift_slowAlloc();
    v206[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v104 = 136315138;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    uint64_t v196 = v83[142];
    Swift::String v201 = (void (*)(uint64_t, uint64_t))v83[177];
    uint64_t v191 = v83[138];
    sub_100126690();
    v83[70] = sub_1000AB124(v83[63], v83[64], v206);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v102, v103, "Successfully created timeline entry, id=%s", v104, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v201(v196, v191);
  }
  else
  {
    uint64_t v105 = (void (*)(uint64_t, uint64_t))v83[177];
    uint64_t v106 = v83[142];
    uint64_t v107 = v83[138];

    v105(v106, v107);
  }
  uint64_t v108 = v83[137];
  uint64_t v109 = v83[109];
  uint64_t v110 = v83[92];
  sub_10003A874();
  v170 = v111;
  uint64_t v112 = v110 + v111[12];
  sub_100123270();
  sub_1000BEEDC(v109, v112, type metadata accessor for WatchlistOverviewContentViewModel);
  uint64_t v113 = *(void *)(v108 + 16);
  uint64_t v114 = *(void *)(v113 + 16);
  if (!v114)
  {
    char v146 = 0;
    goto LABEL_104;
  }
  uint64_t v115 = v83[120];
  uint64_t v192 = v83[99];
  uint64_t v197 = v83[119];
  uint64_t v116 = v83[97];
  uint64_t v117 = v113 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
  uint64_t v118 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56);
  unsigned int v187 = enum case for ExchangeStatus.open(_:);
  uint64_t v185 = (void (**)(uint64_t, void, uint64_t))(v116 + 104);
  uint64_t v119 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
  uint64_t v173 = (void (**)(uint64_t, uint64_t, uint64_t))(v116 + 32);
  uint64_t v179 = (void (**)(uint64_t, uint64_t))(v116 + 8);
  uint64_t v181 = *(void *)(v115 + 72);
  swift_bridgeObjectRetain();
  Swift::String v202 = v118;
  char v183 = v119;
  while (1)
  {
    uint64_t v123 = v83[121];
    uint64_t v124 = v83[101];
    sub_1000BEEDC(v117, v123, (uint64_t (*)(void))type metadata accessor for WidgetStock);
    sub_1000BEEDC(v123 + *(int *)(v197 + 20), v124, (uint64_t (*)(void))sub_100029068);
    uint64_t v125 = sub_100123670();
    uint64_t v126 = *(void *)(v125 - 8);
    int v127 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125);
    uint64_t v128 = v83[104];
    uint64_t v129 = v83[101];
    uint64_t v130 = v83[96];
    if (v127 == 1)
    {
      sub_1000BF0FC(v83[101], (uint64_t (*)(void))sub_100029068);
      uint64_t v131 = *v202;
      (*v202)(v128, 1, 1, v130);
    }
    else
    {
      sub_100123610();
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v129, v125);
      uint64_t v131 = *v202;
      (*v202)(v128, 0, 1, v130);
    }
    uint64_t v132 = v83[104];
    uint64_t v133 = v83[103];
    uint64_t v134 = v83[100];
    uint64_t v135 = v83[96];
    (*v185)(v133, v187, v135);
    v131(v133, 0, 1, v135);
    uint64_t v136 = v134 + *(int *)(v192 + 48);
    sub_1000BEEDC(v132, v134, (uint64_t (*)(void))sub_100072A04);
    sub_1000BEEDC(v133, v136, (uint64_t (*)(void))sub_100072A04);
    uint64_t v137 = *v183;
    if ((*v183)(v134, 1, v135) == 1) {
      break;
    }
    uint64_t v138 = v83[96];
    sub_1000BEEDC(v83[100], v83[102], (uint64_t (*)(void))sub_100072A04);
    if (v137(v136, 1, v138) != 1)
    {
      uint64_t v175 = v83[104];
      uint64_t v177 = v83[121];
      uint64_t v139 = v83[103];
      uint64_t v140 = v83[102];
      uint64_t v141 = v83[100];
      uint64_t v142 = v83[98];
      uint64_t v143 = v83[96];
      (*v173)(v142, v136, v143);
      sub_1000B3468(&qword_1001606E8, (void (*)(uint64_t))&type metadata accessor for ExchangeStatus);
      char v144 = sub_100125A90();
      uint64_t v145 = *v179;
      (*v179)(v140, v143);
      v145(v142, v143);
      sub_1000BF0FC(v141, (uint64_t (*)(void))sub_100072A04);
      sub_1000BF0FC(v139, (uint64_t (*)(void))sub_100072A04);
      sub_1000BF0FC(v175, (uint64_t (*)(void))sub_100072A04);
      sub_1000BF0FC(v177, (uint64_t (*)(void))type metadata accessor for WidgetStock);
      if (v144)
      {
        char v146 = 1;
        uint64_t v83 = v204;
        goto LABEL_103;
      }
      goto LABEL_91;
    }
    (*v179)(v83[102], v83[96]);
LABEL_90:
    uint64_t v120 = v83[121];
    uint64_t v121 = v83[104];
    uint64_t v122 = v83[103];
    sub_1000BF0FC(v83[100], (uint64_t (*)(void))sub_1000729A0);
    sub_1000BF0FC(v122, (uint64_t (*)(void))sub_100072A04);
    sub_1000BF0FC(v121, (uint64_t (*)(void))sub_100072A04);
    sub_1000BF0FC(v120, (uint64_t (*)(void))type metadata accessor for WidgetStock);
LABEL_91:
    v117 += v181;
    --v114;
    uint64_t v83 = v204;
    if (!v114)
    {
      char v146 = 0;
      goto LABEL_103;
    }
  }
  if (v137(v136, 1, v83[96]) != 1) {
    goto LABEL_90;
  }
  uint64_t v147 = v83[121];
  uint64_t v148 = v83[104];
  uint64_t v149 = v83[103];
  sub_1000BF0FC(v83[100], (uint64_t (*)(void))sub_100072A04);
  sub_1000BF0FC(v149, (uint64_t (*)(void))sub_100072A04);
  sub_1000BF0FC(v148, (uint64_t (*)(void))sub_100072A04);
  sub_1000BF0FC(v147, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  char v146 = 1;
LABEL_103:
  swift_bridgeObjectRelease();
LABEL_104:
  uint64_t v167 = (uint64_t)(v83 + 2);
  uint64_t v164 = (uint64_t)(v83 + 17);
  uint64_t v150 = v83[149];
  uint64_t v151 = v83[137];
  uint64_t v152 = v83;
  uint64_t v203 = v83[131];
  uint64_t v205 = v83[134];
  uint64_t v153 = v83[129];
  uint64_t v154 = v152[109];
  uint64_t v155 = v152[92];
  swift_unknownObjectRelease();
  uint64_t v156 = v170[16];
  uint64_t v157 = v170[20];
  uint64_t v158 = v170[24];
  sub_1000BF0FC(v154, type metadata accessor for WatchlistOverviewContentViewModel);
  sub_1000BF0FC(v151, type metadata accessor for WidgetWatchlist);
  sub_1000BF0FC(v150, (uint64_t (*)(void))sub_1000BEBFC);
  *(unsigned char *)(v155 + v156) = v146;
  *(unsigned char *)(v155 + v157) = 0;
  *(unsigned char *)(v155 + v158) = 0;
  type metadata accessor for OverviewTimelineEntry();
  swift_storeEnumTagMultiPayload();
  sub_1000BF0FC(v153, (uint64_t (*)(void))sub_100029100);
  v171(v205, v203);
  sub_100009D48(v164);
  sub_100009D48(v167);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v159 = (uint64_t (*)(void))v152[1];
  return v159();
}

uint64_t sub_1000BC380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a7;
  v8[3] = a8;
  type metadata accessor for OverviewTimelineEntry();
  uint64_t v11 = swift_task_alloc();
  v8[4] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v8[5] = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_1000BC468;
  return sub_1000B4238(v11, a5, a6);
}

uint64_t sub_1000BC468()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000BC564, 0, 0);
}

uint64_t sub_1000BC564()
{
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_1000BF0FC(v1, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000BC5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a1;
  uint64_t v6 = sub_1001237F0();
  v3[20] = v6;
  v3[21] = *(void *)(v6 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = type metadata accessor for WatchlistOverviewContentViewModel(0);
  v3[24] = swift_task_alloc();
  uint64_t v7 = sub_100123670();
  v3[25] = v7;
  v3[26] = *(void *)(v7 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  sub_100029068(0);
  v3[29] = *(void *)(v8 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  sub_100029100();
  v3[32] = swift_task_alloc();
  uint64_t v9 = sub_1001232B0();
  v3[33] = v9;
  v3[34] = *(void *)(v9 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  uint64_t v10 = sub_100125930();
  v3[38] = v10;
  v3[39] = *(void *)(v10 - 8);
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  sub_1000BE8D4(0);
  v3[42] = swift_task_alloc();
  sub_1000BEB7C(0, &qword_100160C88, (uint64_t (*)(uint64_t))sub_10007DD00, sub_10007DD98, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  v3[43] = v11;
  v3[44] = *(void *)(v11 - 8);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for OverviewTimelineEntry();
  v3[47] = v12;
  v3[48] = *(void *)(v12 - 8);
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  uint64_t v13 = swift_task_alloc();
  v3[51] = v13;
  uint64_t v14 = (void *)swift_task_alloc();
  v3[52] = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1000BCA6C;
  return sub_1000B4238(v13, a2, a3);
}

uint64_t sub_1000BCA6C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000BCB68, 0, 0);
}

uint64_t sub_1000BCB68()
{
  sub_100125DC0();
  *(void *)(v0 + 424) = sub_100125DB0();
  uint64_t v2 = sub_100125D80();
  return _swift_task_switch(sub_1000BCBFC, v2, v1);
}

uint64_t sub_1000BCBFC()
{
  swift_release();
  sub_1000055F8(0, (unint64_t *)&unk_10015FDC0);
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, v0 + 56);
  sub_100009D98((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = sub_100124100();
  if (*(void *)(v0 + 120))
  {
    sub_100029474((long long *)(v0 + 96), v0 + 16);
    sub_100009D48(v0 + 56);
    uint64_t v1 = (uint64_t)sub_1000BCD28;
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v1, v2, v3);
}

uint64_t sub_1000BCD28()
{
  char v82 = v0 + 2;
  sub_1000BEEDC(v0[51], v0[50], (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[34];
  if (EnumCaseMultiPayload == 1)
  {
    sub_10003A874();
    char v6 = *(unsigned char *)(v2 + *(int *)(v5 + 96));
    sub_1000BF0FC(v2 + *(int *)(v5 + 48), type metadata accessor for WatchlistOverviewContentViewModel);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v7(v2, v3);
    if (v6)
    {
      uint64_t v8 = v0[51];
      uint64_t v9 = v0[48];
      int v80 = v7;
      uint64_t v10 = v0[35];
      uint64_t v11 = v0[36];
      uint64_t v75 = v0[33];
      uint64_t v12 = v0[21];
      uint64_t v13 = v0[22];
      uint64_t v76 = v0[20];
      sub_1000BF098(0, &qword_100162348, (uint64_t (*)(uint64_t))type metadata accessor for OverviewTimelineEntry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
      unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_100127010;
      sub_1000BEEDC(v8, v15 + v14, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
      uint64_t v16 = sub_100009D98(v82, v0[5]);
      sub_100123270();
      sub_100009D98((void *)(*v16 + 16), *(void *)(*v16 + 40));
      sub_100123AB0();
      double v17 = (double)(unint64_t)sub_100123760();
      sub_1001237D0();
      sub_100123250();
      static TimelineReloadPolicy.after(_:jitteredUpTo:)(v17);
      v80(v10, v75);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v76);
      v80(v11, v75);
      sub_1000B33EC();
LABEL_7:
      sub_1001259E0();
LABEL_28:
      sub_1000BF0FC(v0[51], (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
      sub_100009D48((uint64_t)v82);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v71 = (uint64_t (*)(void))v0[1];
      return v71();
    }
  }
  else
  {
    sub_10003A7CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v7(v2, v3);
  }
  uint64_t v18 = v0[43];
  uint64_t v19 = v0[44];
  uint64_t v20 = v0[42];
  sub_10007D6C8(v20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18) == 1)
  {
    uint64_t v21 = v0[51];
    uint64_t v22 = v0[48];
    sub_1000BF0FC(v0[42], (uint64_t (*)(void))sub_1000BE8D4);
    sub_1000BF098(0, &qword_100162348, (uint64_t (*)(uint64_t))type metadata accessor for OverviewTimelineEntry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_100127010;
    sub_1000BEEDC(v21, v24 + v23, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
    sub_100125920();
    sub_1000B33EC();
    goto LABEL_7;
  }
  uint64_t v26 = v0[45];
  uint64_t v25 = v0[46];
  uint64_t v27 = v0[43];
  uint64_t v28 = v0[44];
  (*(void (**)(uint64_t, void, uint64_t))(v28 + 32))(v25, v0[42], v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v25, v27);
  sub_1000BE910(&qword_100162350, &qword_100160C88, (uint64_t (*)(uint64_t))sub_10007DD00, sub_10007DD98);
  sub_100125BE0();
  uint64_t result = v0[17];
  unint64_t v30 = v0[18];
  unint64_t v31 = *(void *)(result + 16);
  int v81 = v7;
  if (v30 == v31)
  {
    uint64_t v32 = _swiftEmptyArrayStorage;
LABEL_10:
    uint64_t v33 = v0[51];
    uint64_t v34 = v0[49];
    swift_bridgeObjectRelease();
    sub_100009D98(v82, v0[5]);
    sub_100123270();
    sub_1000BEEDC(v33, v34, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
    int v35 = swift_getEnumCaseMultiPayload();
    uint64_t v36 = v0[49];
    uint64_t v37 = v0[32];
    if (v35 == 1)
    {
      uint64_t v39 = v0[23];
      uint64_t v38 = v0[24];
      sub_10003A874();
      sub_1000BF030(v36 + *(int *)(v40 + 48), v38, type metadata accessor for WatchlistOverviewContentViewModel);
      sub_1000BEEDC(v38 + *(int *)(v39 + 44), v37, (uint64_t (*)(void))sub_100029100);
      sub_1000BF0FC(v38, type metadata accessor for WatchlistOverviewContentViewModel);
    }
    else
    {
      sub_10003A7CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000BEB7C(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v37, 1, 1, v56);
    }
    uint64_t v57 = v0[32];
    v7(v0[49], v0[33]);
    sub_1000BEB7C(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v59 = v58;
    uint64_t v60 = *(void *)(v58 - 8);
    int v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v57, 1, v58);
    uint64_t v62 = v0[32];
    if (v61 == 1)
    {
      sub_1000BF0FC(v0[32], (uint64_t (*)(void))sub_100029100);
      uint64_t v63 = 0;
    }
    else
    {
      uint64_t v63 = sub_1001243E0();
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v59);
    }
    uint64_t v64 = v0[48];
    uint64_t v79 = v0[46];
    uint64_t v77 = v0[44];
    uint64_t v78 = v0[43];
    uint64_t v65 = v0[41];
    uint64_t v72 = v0[51];
    uint64_t v73 = v0[40];
    uint64_t v66 = v0[39];
    uint64_t v67 = v0[37];
    uint64_t v68 = v0[33];
    uint64_t v74 = v0[38];
    sub_10010AC54((uint64_t)v32, v63, v65);
    swift_bridgeObjectRelease();
    v81(v67, v68);
    sub_1000BF098(0, &qword_100162348, (uint64_t (*)(uint64_t))type metadata accessor for OverviewTimelineEntry, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    unint64_t v69 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    uint64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = xmmword_100127010;
    sub_1000BEEDC(v72, v70 + v69, (uint64_t (*)(void))type metadata accessor for OverviewTimelineEntry);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v73, v65, v74);
    sub_1000B33EC();
    sub_1001259E0();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v74);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v79, v78);
    goto LABEL_28;
  }
  uint64_t v41 = v0[29];
  uint64_t v42 = v0[26];
  uint64_t v43 = (void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32);
  uint64_t v32 = _swiftEmptyArrayStorage;
  while ((v30 & 0x8000000000000000) == 0)
  {
    if (v30 >= v31) {
      goto LABEL_32;
    }
    uint64_t v44 = v0[30];
    uint64_t v45 = v0[31];
    uint64_t v46 = v0[25];
    uint64_t v47 = result
        + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))
        + *(void *)(v41 + 72) * v30;
    v0[18] = v30 + 1;
    sub_1000BEEDC(v47, v45, (uint64_t (*)(void))sub_100029068);
    sub_1000BF030(v45, v44, (uint64_t (*)(void))sub_100029068);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v44, 1, v46) == 1)
    {
      sub_1000BF0FC(v0[30], (uint64_t (*)(void))sub_100029068);
    }
    else
    {
      uint64_t v48 = v0[27];
      uint64_t v49 = v0[28];
      uint64_t v50 = v0[25];
      uint64_t v51 = *v43;
      (*v43)(v49, v0[30], v50);
      v51(v48, v49, v50);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v32 = (void *)sub_10009B5D8(0, v32[2] + 1, 1, (unint64_t)v32);
      }
      unint64_t v53 = v32[2];
      unint64_t v52 = v32[3];
      if (v53 >= v52 >> 1) {
        uint64_t v32 = (void *)sub_10009B5D8(v52 > 1, v53 + 1, 1, (unint64_t)v32);
      }
      uint64_t v54 = v0[27];
      uint64_t v55 = v0[25];
      v32[2] = v53 + 1;
      v51((uint64_t)v32+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v53, v54, v55);
    }
    uint64_t result = v0[17];
    unint64_t v30 = v0[18];
    unint64_t v31 = *(void *)(result + 16);
    if (v30 == v31) {
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1000BD888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a7;
  v8[3] = a8;
  sub_1000BEB7C(0, &qword_100162328, (uint64_t (*)(uint64_t))type metadata accessor for OverviewTimelineEntry, sub_1000B33EC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for Timeline);
  v8[4] = v11;
  v8[5] = *(void *)(v11 - 8);
  uint64_t v12 = swift_task_alloc();
  v8[6] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v8[7] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_100027D30;
  return sub_1000BC5F4(v12, a5, a6);
}

uint64_t sub_1000BD9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v43 = a4;
  uint64_t v39 = a1;
  uint64_t v41 = sub_1001236A0();
  uint64_t v9 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029068(0);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for WidgetStock();
  uint64_t v44 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v40 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = sub_100123A70();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for OverviewTimelineProvider.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v39 + *(int *)(v23 + 28), v19);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v22, v19);
  if (v24 != enum case for NewsDisplayConfiguration.afterHours(_:))
  {
    if (v24 == enum case for NewsDisplayConfiguration.always(_:)) {
      return 1;
    }
    if (v24 != enum case for NewsDisplayConfiguration.never(_:)) {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
    return 0;
  }
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v45 = _swiftEmptyArrayStorage;
  int64_t v26 = a6 >> 1;
  uint64_t result = swift_unknownObjectRetain();
  if (v26 != a5)
  {
    uint64_t v38 = a3;
    uint64_t v39 = a5;
    uint64_t v28 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v29 = a5;
    while (1)
    {
      if (v29 >= v26)
      {
        __break(1u);
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v30 = *(void *)(v44 + 72);
      sub_1000BEEDC(v43 + v30 * v29, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WidgetStock);
      sub_1000BEEDC((uint64_t)&v18[*(int *)(v42 + 20)], (uint64_t)v14, (uint64_t (*)(void))sub_100029068);
      uint64_t v31 = sub_100123670();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v14, 1, v31) == 1)
      {
        sub_1000BF0FC((uint64_t)v14, (uint64_t (*)(void))sub_100029068);
      }
      else
      {
        sub_100123610();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v31);
        char v33 = sub_100123680();
        (*v28)(v11, v41);
        if (v33)
        {
          sub_1000BF030((uint64_t)v18, v40, (uint64_t (*)(void))type metadata accessor for WidgetStock);
          uint64_t v34 = v45;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10009BA7C(0, v34[2] + 1, 1);
            uint64_t v34 = v45;
          }
          unint64_t v36 = v34[2];
          unint64_t v35 = v34[3];
          if (v36 >= v35 >> 1)
          {
            sub_10009BA7C(v35 > 1, v36 + 1, 1);
            uint64_t v34 = v45;
          }
          v34[2] = v36 + 1;
          uint64_t result = sub_1000BF030(v40, (uint64_t)v34+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ v36 * v30, (uint64_t (*)(void))type metadata accessor for WidgetStock);
          goto LABEL_6;
        }
      }
      uint64_t result = sub_1000BF0FC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for WidgetStock);
LABEL_6:
      if (v26 == ++v29)
      {
        uint64_t v25 = v45;
        a5 = v39;
        break;
      }
    }
  }
  swift_unknownObjectRelease();
  uint64_t v37 = v25[2];
  uint64_t result = swift_release();
  if (!v37) {
    return 0;
  }
  if (__OFSUB__(v26, a5)) {
    goto LABEL_25;
  }
  return (float)((float)(v26 - a5) * 0.5) <= (float)v37;
}

uint64_t sub_1000BDF3C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for WidgetStock();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BEEDC(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  return sub_1000A0D48((uint64_t)v8, a2, a3);
}

uint64_t sub_1000BDFF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001258F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100125980();
  sub_10003A874();
  uint64_t v7 = (char *)(a1 + v6[12]);
  uint64_t v8 = v6[16];
  uint64_t v9 = v6[20];
  uint64_t v10 = v6[24];
  sub_100123270();
  sub_10004B9F4(v5, 0, v7);
  *(unsigned char *)(a1 + v8) = 0;
  *(unsigned char *)(a1 + v9) = 1;
  *(unsigned char *)(a1 + v10) = 0;
  type metadata accessor for OverviewTimelineEntry();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000BE128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10001470C;
  return sub_1000B4238(a1, a2, a3);
}

uint64_t sub_1000BE1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10001470C;
  return sub_1000BC5F4(a1, a2, a3);
}

uint64_t sub_1000BE288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1000BE2C8(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_100153AB8, (uint64_t)&unk_1001623C0);
}

uint64_t sub_1000BE2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1000BE2C8(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_100153A90, (uint64_t)&unk_100162320);
}

uint64_t sub_1000BE2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v39 = a4;
  uint64_t v40 = a8;
  uint64_t v37 = a7;
  uint64_t v38 = a3;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v9 = sub_1001259A0();
  uint64_t v30 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v31 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100123BD0();
  uint64_t v12 = *(void *)(v33 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v33);
  uint64_t v29 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void *)(a5 - 8);
  uint64_t v14 = *(void *)(v32 + 64);
  __chkstk_darwin(v15);
  uint64_t v16 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000BF098(0, &qword_10015E6C8, (uint64_t (*)(uint64_t))&type metadata accessor for TaskPriority, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v29 - v18;
  uint64_t v20 = sub_100125DE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  sub_1000BEEDC(v34, (uint64_t)v16, type metadata accessor for OverviewTimelineProvider);
  uint64_t v21 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v33);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v9);
  unint64_t v22 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v23 = (v14 + *(unsigned __int8 *)(v12 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v24 = (v13 + *(unsigned __int8 *)(v10 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  sub_1000BF030((uint64_t)v16, v25 + v22, type metadata accessor for OverviewTimelineProvider);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v25 + v23, v29, v21);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v25 + v24, v31, v30);
  int64_t v26 = (void *)(v25 + ((v11 + v24 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v27 = v39;
  *int64_t v26 = v38;
  v26[1] = v27;
  swift_retain();
  sub_100027A1C((uint64_t)v19, v40, v25);
  return swift_release();
}

uint64_t sub_1000BE670(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for OverviewTimelineProvider(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_100123BD0() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_1001259A0() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v1 + v5;
  uint64_t v15 = v1 + v8;
  uint64_t v16 = v1 + v11;
  uint64_t v17 = (uint64_t *)(v1 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v20;
  *uint64_t v20 = v2;
  v20[1] = sub_100013D40;
  return sub_1000BD888(a1, v12, v13, v14, v15, v16, v18, v19);
}

void sub_1000BE864(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(void))
{
  if (!*a2)
  {
    sub_1000BEB7C(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    unint64_t v6 = sub_100126010();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1000BE8D4(uint64_t a1)
{
}

uint64_t sub_1000BE910(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000BEB7C(255, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000BE974(uint64_t a1)
{
}

uint64_t sub_1000BE9A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 24);
  long long v7 = *(_OWORD *)(v1 + 40);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_10001470C;
  *(_OWORD *)(v5 + 48) = v6;
  *(_OWORD *)(v5 + 64) = v7;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = v4;
  return _swift_task_switch(sub_1000B47E0, 0, 0);
}

uint64_t sub_1000BEA6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *long long v7 = v2;
  v7[1] = sub_100013D40;
  return sub_1000B4950(a1, v4, v5, v6);
}

uint64_t type metadata accessor for OverviewTimelineProvider.Configuration(uint64_t a1)
{
  return sub_100009E3C(a1, qword_100162420);
}

void sub_1000BEB40(uint64_t a1)
{
}

void sub_1000BEB7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1000BEBFC(uint64_t a1)
{
}

uint64_t sub_1000BEC30(uint64_t a1, char a2, int a3, unsigned __int8 a4)
{
  int v25 = a3;
  uint64_t v7 = sub_1001258F0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = &v24[-v13];
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v15(&v24[-v13], a1, v7, v12);
  uint64_t v16 = *(uint64_t (**)(unsigned char *, uint64_t))(v8 + 88);
  int v17 = v16(v14, v7);
  int v18 = enum case for WidgetFamily.systemSmall(_:);
  if (v17 != enum case for WidgetFamily.systemSmall(_:))
  {
    if (v17 == enum case for WidgetFamily.systemMedium(_:))
    {
      if (a4 & 1 | ((a2 & 1) == 0)) {
        uint64_t v19 = 3;
      }
      else {
        uint64_t v19 = 2;
      }
      goto LABEL_11;
    }
    if (v17 == enum case for WidgetFamily.systemLarge(_:))
    {
      if (a4) {
        uint64_t v19 = 3;
      }
      else {
        uint64_t v19 = 6;
      }
      goto LABEL_11;
    }
    if (v17 != enum case for WidgetFamily.accessoryRectangular(_:)) {
      goto LABEL_24;
    }
  }
  uint64_t v19 = 3;
LABEL_11:
  ((void (*)(unsigned char *, uint64_t, uint64_t))v15)(v10, a1, v7);
  int v20 = v16(v10, v7);
  if (v20 == v18) {
    goto LABEL_21;
  }
  if (v20 == enum case for WidgetFamily.systemMedium(_:) || v20 == enum case for WidgetFamily.systemLarge(_:))
  {
    uint64_t v22 = 1;
    if ((v25 | a4)) {
      uint64_t v22 = 2;
    }
    return v22 * v19;
  }
  if (v20 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
LABEL_21:
    uint64_t v22 = 1;
    return v22 * v19;
  }
LABEL_24:
  uint64_t result = sub_100126290();
  __break(1u);
  return result;
}

uint64_t sub_1000BEEC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BDF3C(a1, *(unsigned __int8 *)(v2 + 16), a2);
}

uint64_t sub_1000BEEDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000BEF44()
{
  unint64_t result = qword_1001623B0;
  if (!qword_1001623B0)
  {
    sub_1000BF098(255, &qword_1001623A8, type metadata accessor for HeadlineViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for ArraySlice);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1001623B0);
  }
  return result;
}

uint64_t sub_1000BEFCC(uint64_t a1, uint64_t a2)
{
  sub_100029100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BF030(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1000BF098(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000BF0FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000BF160()
{
  uint64_t v1 = *(void *)(type metadata accessor for OverviewTimelineProvider(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = sub_100123BD0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_1001259A0();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  swift_unknownObjectRelease();
  uint64_t v11 = sub_100124570();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v2, v11);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v8);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000BF374(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for OverviewTimelineProvider(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(sub_100123BD0() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(sub_1001259A0() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v1 + v5;
  uint64_t v15 = v1 + v8;
  uint64_t v16 = v1 + v11;
  int v17 = (uint64_t *)(v1 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  int v20 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v20;
  *int v20 = v2;
  v20[1] = sub_10001470C;
  return sub_1000BC380(a1, v12, v13, v14, v15, v16, v18, v19);
}

void *sub_1000BF568(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_100123A70();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1000BF658(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100123A70();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1000BF6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_100123A70();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1000BF770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100123A70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1000BF81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_100123A70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000BF8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100123A70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1000BF93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000BF950);
}

uint64_t sub_1000BF950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100123A70();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1000BFA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000BFA20);
}

uint64_t sub_1000BFA20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100123A70();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000BFAC8()
{
  uint64_t result = sub_100123A70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1000BFB6C(char a1)
{
  unint64_t result = 1852141679;
  switch(a1)
  {
    case 1:
      unint64_t result = 1751607656;
      break;
    case 2:
      unint64_t result = 7827308;
      break;
    case 3:
      unint64_t result = 0x656D756C6F76;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x6F77547974666966;
      break;
    case 8:
      unint64_t result = 0x5665676172657661;
      break;
    case 9:
      unint64_t result = 0x646C656979;
      break;
    case 10:
      unint64_t result = 1635018082;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1000BFCC8()
{
  qword_100162460 = (uint64_t)&off_100150DB0;
}

uint64_t sub_1000BFCDC@<X0>(char *a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  char v5 = *a1;
  unint64_t v6 = sub_1000BFB6C(*a1);
  unint64_t v8 = v7;
  uint64_t v9 = sub_1000C0980(v5);
  unint64_t v11 = v10;
  uint64_t result = sub_1000BFD74(v5, a2);
  *a3 = v6;
  a3[1] = v8;
  a3[2] = v9;
  a3[3] = v11;
  a3[4] = result;
  a3[5] = v13;
  return result;
}

uint64_t sub_1000BFD74(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_100029068(0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001233E0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      uint64_t v13 = sub_100123520();
      if (v15) {
        goto LABEL_38;
      }
      goto LABEL_23;
    case 2:
      uint64_t v13 = sub_100123510();
      if ((v16 & 1) == 0) {
        goto LABEL_23;
      }
      goto LABEL_38;
    case 3:
      uint64_t v17 = sub_1001235D0();
      uint64_t v18 = 0;
      if ((v19 & 1) == 0)
      {
        uint64_t v20 = v17;
        if ((v17 & 0x8000000000000000) == 0 && v17 >= 1) {
          goto LABEL_37;
        }
      }
      return v18;
    case 4:
      sub_1001235B0();
      if ((v21 & 1) == 0) {
        goto LABEL_30;
      }
      goto LABEL_38;
    case 5:
      sub_1000C0F0C(a2, (uint64_t)v8);
      uint64_t v28 = sub_100123670();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v8, 1, v28) == 1)
      {
        sub_1000C0F70((uint64_t)v8);
        goto LABEL_38;
      }
      uint64_t v40 = sub_100123630();
      char v42 = v41;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v28);
      if (v42) {
        goto LABEL_38;
      }
      uint64_t v43 = sub_1000D2D84(*(double *)&v40);
      uint64_t v18 = 0;
      if (v44) {
        return v18;
      }
      uint64_t v20 = v43;
      if (v43 < 1) {
        return v18;
      }
LABEL_37:
      uint64_t v45 = *(void **)(v3[3] + 16);
      sub_100123390();
      v25.super.super.isa = sub_100123350().super.isa;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      id v26 = [v45 formattedCount:v20 withLocale:v25.super.super.isa longform:0 compactDisplay:0];
LABEL_31:
      id v39 = v26;

      if (!v39) {
        goto LABEL_38;
      }
      uint64_t v18 = sub_100125B10();

      break;
    case 6:
      uint64_t v13 = sub_100123580();
      if ((v30 & 1) == 0) {
        goto LABEL_23;
      }
      goto LABEL_38;
    case 7:
      uint64_t v13 = sub_100123550();
      if ((v22 & 1) == 0) {
        goto LABEL_23;
      }
      goto LABEL_38;
    case 8:
      uint64_t v35 = sub_100123560();
      uint64_t v18 = 0;
      if ((v36 & 1) == 0)
      {
        uint64_t v20 = v35;
        if ((v35 & 0x8000000000000000) == 0 && v35 >= 1) {
          goto LABEL_37;
        }
      }
      return v18;
    case 9:
      sub_100123570();
      if (v23) {
        goto LABEL_38;
      }
      unint64_t v24 = (void *)v3[5];
      v25.super.super.isa = sub_100125DF0().super.super.isa;
      id v26 = [v24 stringForObjectValue:v25.super.super.isa];
      goto LABEL_31;
    case 10:
      sub_1001235C0();
      if ((v37 & 1) == 0) {
        goto LABEL_30;
      }
      goto LABEL_38;
    case 11:
      sub_100123590();
      if (v27) {
        goto LABEL_38;
      }
LABEL_30:
      uint64_t v38 = (void *)v3[4];
      v25.super.super.isa = sub_100125DF0().super.super.isa;
      id v26 = [v38 stringForObjectValue:v25.super.super.isa];
      goto LABEL_31;
    default:
      uint64_t v13 = sub_100123540();
      if (v14) {
        goto LABEL_38;
      }
LABEL_23:
      double v31 = *(double *)&v13;
      id v32 = (id)sub_10002F64C(0, 5, 1, *(double *)&v13);
      [v32 setNumberStyle:1];
      id v33 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v31];
      id v34 = [v32 stringFromNumber:v33];

      if (v34)
      {
        uint64_t v18 = sub_100125B10();
      }
      else
      {

LABEL_38:
        uint64_t v18 = 0;
      }
      break;
  }
  return v18;
}

uint64_t sub_1000C049C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = result;
  char v5 = a3;
  uint64_t v6 = *(void *)(result + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = v4;
    uint64_t v7 = (uint64_t *)(v4 + 72);
    uint64_t v33 = v6;
    do
    {
      uint64_t v11 = *v7;
      if (*v7)
      {
        uint64_t v12 = *(v7 - 5);
        uint64_t v13 = *(v7 - 4);
        uint64_t v15 = *(v7 - 3);
        uint64_t v14 = *(v7 - 2);
        uint64_t v35 = *(v7 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10009BB5C(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v9 = _swiftEmptyArrayStorage[2];
        unint64_t v8 = _swiftEmptyArrayStorage[3];
        if (v9 >= v8 >> 1) {
          sub_10009BB5C(v8 > 1, v9 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v9 + 1;
        uint64_t v10 = &_swiftEmptyArrayStorage[6 * v9];
        v10[4] = v12;
        v10[5] = v13;
        v10[6] = v15;
        v10[7] = v14;
        v10[8] = v35;
        v10[9] = v11;
      }
      v7 += 6;
      --v6;
    }
    while (v6);
    uint64_t v4 = v30;
    uint64_t result = swift_bridgeObjectRelease();
    char v5 = a3;
    uint64_t v6 = v33;
    uint64_t v3 = a2;
  }
  uint64_t v16 = _swiftEmptyArrayStorage[2];
  uint64_t v17 = v3 - v16;
  if (__OFSUB__(v3, v16))
  {
    __break(1u);
    return result;
  }
  if (v17 < 1)
  {
LABEL_29:
    *char v5 = (uint64_t)_swiftEmptyArrayStorage;
    return result;
  }
  uint64_t result = swift_release();
  if (v17 != v3)
  {
    if (v6)
    {
      uint64_t v36 = v17;
      id v32 = v5;
      swift_bridgeObjectRetain();
      uint64_t v18 = (uint64_t *)(v4 + 72);
      do
      {
        uint64_t v34 = v6;
        uint64_t v20 = *(v18 - 5);
        uint64_t v19 = *(v18 - 4);
        uint64_t v21 = *(v18 - 3);
        uint64_t v22 = *(v18 - 2);
        uint64_t v24 = *(v18 - 1);
        uint64_t v23 = *v18;
        if (!*v18 && (BOOL v25 = v36 < 1, --v36, v25))
        {
          uint64_t v36 = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_10009BB5C(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v27 = _swiftEmptyArrayStorage[2];
          unint64_t v26 = _swiftEmptyArrayStorage[3];
          if (v27 >= v26 >> 1) {
            sub_10009BB5C(v26 > 1, v27 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v27 + 1;
          uint64_t v28 = &_swiftEmptyArrayStorage[6 * v27];
          v28[4] = v20;
          v28[5] = v19;
          v28[6] = v21;
          v28[7] = v22;
          v28[8] = v24;
          v28[9] = v23;
        }
        v18 += 6;
        uint64_t v6 = v34 - 1;
      }
      while (v34 != 1);
      uint64_t result = swift_bridgeObjectRelease();
      char v5 = v32;
    }
    goto LABEL_29;
  }
  *char v5 = v4;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000C0760()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QuoteDetailItemFactory()
{
  return self;
}

void *sub_1000C07D4()
{
  unint64_t v1 = v0;
  type metadata accessor for PriceFormatter();
  uint64_t v2 = swift_allocObject();
  sub_100123360();
  v1[2] = v2;
  type metadata accessor for UnitNumberFormatter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = [objc_allocWithZone((Class)SCICUNumberFormatter) init];
  v1[3] = v3;
  id v4 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v4 setNumberStyle:1];
  [v4 setMinimumFractionDigits:2];
  [v4 setMaximumFractionDigits:2];
  v1[4] = v4;
  id v5 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v5 setNumberStyle:3];
  sub_1000C0940();
  Class isa = sub_100125FE0(1.0).super.super.isa;
  [v5 setMultiplier:isa];

  [v5 setMinimumFractionDigits:2];
  [v5 setMaximumFractionDigits:2];
  v1[5] = v5;
  return v1;
}

unint64_t sub_1000C0940()
{
  unint64_t result = qword_100162520;
  if (!qword_100162520)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100162520);
  }
  return result;
}

uint64_t sub_1000C0980(char a1)
{
  switch(a1)
  {
    case 1:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
      v20._countAndFlagsBits = 0x8000000100132630;
      v3._countAndFlagsBits = 1751607624;
      v3._object = (void *)0xE400000000000000;
      goto LABEL_17;
    case 2:
      type metadata accessor for Localized();
      uint64_t v5 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v5];
      v20._countAndFlagsBits = 0x80000001001325F0;
      v3._countAndFlagsBits = 7827276;
      goto LABEL_16;
    case 3:
      type metadata accessor for Localized();
      uint64_t v6 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v6];
      v20._countAndFlagsBits = 0x80000001001325B0;
      v3._countAndFlagsBits = 7106390;
      goto LABEL_16;
    case 4:
      type metadata accessor for Localized();
      uint64_t v7 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v7];
      v20._countAndFlagsBits = 0x8000000100132560;
      v3._countAndFlagsBits = 4534096;
      goto LABEL_16;
    case 5:
      type metadata accessor for Localized();
      uint64_t v8 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v8];
      v20._countAndFlagsBits = 0x8000000100132510;
      v3._countAndFlagsBits = 0x70614320746B4DLL;
      v3._object = (void *)0xE700000000000000;
      goto LABEL_17;
    case 6:
      type metadata accessor for Localized();
      uint64_t v9 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v9];
      v20._countAndFlagsBits = 0x80000001001324D0;
      v3._countAndFlagsBits = 0x4820573235;
      v3._object = (void *)0xE500000000000000;
      goto LABEL_17;
    case 7:
      type metadata accessor for Localized();
      uint64_t v10 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v10];
      v20._countAndFlagsBits = 0x8000000100132490;
      v3._countAndFlagsBits = 0x4C20573235;
      goto LABEL_12;
    case 8:
      type metadata accessor for Localized();
      uint64_t v11 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v11];
      v20._countAndFlagsBits = 0x8000000100132450;
      v3._countAndFlagsBits = 0x6C6F5620677641;
      v3._object = (void *)0xE700000000000000;
      goto LABEL_13;
    case 9:
      type metadata accessor for Localized();
      uint64_t v12 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v12];
      v20._countAndFlagsBits = 0x8000000100132410;
      v3._countAndFlagsBits = 0x646C656959;
LABEL_12:
      v3._object = (void *)0xE500000000000000;
LABEL_13:
      v13.value._countAndFlagsBits = 0;
      v13.value._object = 0;
      v14.super.Class isa = v2;
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      goto LABEL_18;
    case 10:
      type metadata accessor for Localized();
      uint64_t v16 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v16];
      v20._countAndFlagsBits = 0x80000001001323E0;
      v3._countAndFlagsBits = 1635018050;
      v3._object = (void *)0xE400000000000000;
      goto LABEL_17;
    case 11:
      type metadata accessor for Localized();
      uint64_t v17 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v17];
      v20._countAndFlagsBits = 0x80000001001323A0;
      v3._countAndFlagsBits = 5460037;
LABEL_16:
      v3._object = (void *)0xE300000000000000;
      goto LABEL_17;
    default:
      type metadata accessor for Localized();
      uint64_t v1 = swift_getObjCClassFromMetadata();
      uint64_t v2 = (objc_class *)[self bundleForClass:v1];
      v20._countAndFlagsBits = 0x8000000100132670;
      v3._countAndFlagsBits = 1852141647;
      v3._object = (void *)0xE400000000000000;
LABEL_17:
      v13.value._countAndFlagsBits = 0;
      v13.value._object = 0;
      v14.super.Class isa = v2;
      v15._countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
LABEL_18:
      uint64_t v18 = sub_100123070(v3, v13, v14, v15, v20);

      return v18;
  }
}

uint64_t sub_1000C0F0C(uint64_t a1, uint64_t a2)
{
  sub_100029068(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C0F70(uint64_t a1)
{
  sub_100029068(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1000C0FCC(void *a1)
{
  uint64_t v2 = sub_100123150();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009EAD4(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D98(a1, a1[3]);
  sub_10003EBFC(0, &qword_1001626D8);
  uint64_t v9 = sub_1001240F0();
  if (!v9)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v10 = (void *)v9;
  sub_100009D98(a1, a1[3]);
  sub_10003EAE0(0, &qword_1001626E0);
  uint64_t v11 = sub_1001240F0();
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v12 = v11;
  id v13 = (id)FCURLForContainerizedUserAccountCachesDirectory();
  if (!v13)
  {
LABEL_9:
    id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_10;
  }
  NSBundle v14 = v13;
  sub_100123120();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
  if (result == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_100009D98(a1, a1[3]);
  sub_10003EBFC(0, (unint64_t *)&unk_100162600);
  id result = (id)sub_1001240F0();
  if (result)
  {
    uint64_t v16 = result;
    id v17 = sub_100076FB8(v10, v12, (uint64_t)v8, result);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return v17;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1000C129C(id *a1)
{
  id v1 = *a1;
  [*a1 enableFlushingWithFlushingThreshold:1];
  id v2 = [v1 assetManager];
  [v2 enableFlushingWithFlushingThreshold:1];
}

uint64_t sub_1000C1314()
{
  uint64_t v0 = sub_100123150();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009EAD4(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (id)FCURLForTodayDropbox();
  if (v7)
  {
    uint64_t v8 = v7;
    sub_100123120();

    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0);
    if (result != 1)
    {
      id v10 = objc_allocWithZone((Class)FCFileCoordinatedTodayDropbox);
      sub_100123100(v11);
      id v13 = v12;
      id v14 = [v10 initWithFileURL:v12];

      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
      return (uint64_t)v14;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C1500@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100124570();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v34[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v34[-1] - v9;
  sub_100009D98(a1, a1[3]);
  sub_100056994(0, &qword_10015FEB0);
  uint64_t result = sub_100124100();
  if (v37)
  {
    sub_100029474(&v36, (uint64_t)v38);
    sub_100009D98(v38, v38[3]);
    if ((sub_100123A00() & 1) == 0)
    {
      sub_100123B30();
      swift_allocObject();
      uint64_t v29 = sub_100123B20();
      uint64_t v30 = (unint64_t *)&unk_1001626A0;
      double v31 = (void (*)())&type metadata accessor for EmptyNewsUserProfileProvider;
LABEL_8:
      uint64_t v32 = sub_1000C2628(v30, (void (*)(uint64_t))v31);
      *a2 = v29;
      a2[1] = v32;
      return sub_100009D48((uint64_t)v38);
    }
    sub_100009D98(a1, a1[3]);
    sub_100056994(0, &qword_1001625E0);
    uint64_t result = sub_100124100();
    if (v37)
    {
      uint64_t v12 = sub_100081398((uint64_t)&v36, v37);
      uint64_t v33 = (uint64_t)&v33;
      __n128 v13 = __chkstk_darwin(v12);
      uint64_t v15 = (void *)((char *)&v34[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
      uint64_t v17 = *v15;
      uint64_t v18 = type metadata accessor for TodayPrivateDataProvider();
      v35[3] = v18;
      v35[4] = &off_100152120;
      v35[0] = v17;
      type metadata accessor for WidgetNewsUserProfileProvider();
      uint64_t v19 = swift_allocObject();
      uint64_t v20 = sub_100081398((uint64_t)v35, v18);
      __n128 v21 = __chkstk_darwin(v20);
      uint64_t v23 = (void *)((char *)&v34[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
      uint64_t v25 = *v23;
      v34[3] = v18;
      v34[4] = &off_100152120;
      v34[0] = v25;
      sub_100029758((uint64_t)v34, v19 + 16);
      sub_1000C24D4();
      swift_allocObject();
      uint64_t v26 = sub_1001242B0();
      sub_100009D48((uint64_t)v34);
      *(void *)(v19 + 56) = v26;
      sub_100009D48((uint64_t)v35);
      sub_100009D48((uint64_t)&v36);
      if (qword_10015D4A0 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_100019244(v4, (uint64_t)qword_100172528);
      uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v28(v10, v27, v4);
      v28(v7, (uint64_t)v10, v4);
      sub_1000C2594();
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v19;
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v29 + qword_100172698, v7, v4);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      uint64_t v30 = (unint64_t *)&unk_1001626C8;
      double v31 = sub_1000C2594;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C19E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100124570();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D98(a1, a1[3]);
  sub_10003EBFC(0, (unint64_t *)&unk_1001625D0);
  uint64_t result = sub_1001240F0();
  if (result)
  {
    uint64_t v9 = result;
    sub_100124540();
    uint64_t v10 = type metadata accessor for TodayPrivateDataProvider();
    uint64_t v11 = swift_allocObject();
    swift_defaultActor_initialize();
    uint64_t v12 = OBJC_IVAR____TtC12StocksWidget24TodayPrivateDataProvider_cache;
    sub_1000C2404();
    swift_allocObject();
    *(void *)(v11 + v12) = sub_1001242B0();
    *(void *)(v11 + OBJC_IVAR____TtC12StocksWidget24TodayPrivateDataProvider_maxAge) = 0x4024000000000000;
    *(void *)(v11 + 112) = v9;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11 + OBJC_IVAR____TtC12StocksWidget24TodayPrivateDataProvider_logger, v7, v4);
    a2[3] = v10;
    a2[4] = (uint64_t)&off_100152120;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1000C1B88@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for ManagedConfigurationService;
  unint64_t result = sub_1000C23B0();
  *(void *)(a1 + 32) = result;
  return result;
}

id sub_1000C1BBC()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for NoopAppActivityMonitor());

  return [v0 init];
}

void sub_1000C1BF4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

id sub_1000C1BFC()
{
  sub_10005686C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001294E0;
  *(void *)(v0 + 32) = [objc_allocWithZone((Class)FCPrivateDataSyncConditionFalse) init];
  sub_100125CE0();
  id v1 = objc_allocWithZone((Class)FCPrivateDataSyncAvailability);
  sub_10003EAE0(0, &qword_100162610);
  Class isa = sub_100125C90().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithConditions:isa];

  return v3;
}

uint64_t sub_1000C1CDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for UserIdentitySource.cache(_:);
  uint64_t v3 = sub_1001238F0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

id sub_1000C1D50()
{
  id v0 = objc_allocWithZone((Class)FCNetworkBehaviorMonitor);

  return [v0 initForLoggingOnly];
}

uint64_t type metadata accessor for StocksCoreOverridesAssembly()
{
  return self;
}

uint64_t sub_1000C1DB0()
{
  uint64_t v0 = sub_1001242F0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100124140();
  sub_10003EAE0(0, &qword_10015FE68);
  sub_100124260();
  swift_release();
  sub_100124090();
  swift_release();
  uint64_t v4 = enum case for Scope.singleton(_:);
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, enum case for Scope.singleton(_:), v0);
  sub_1001240A0();
  swift_release();
  swift_release();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v3, v0);
  v10[1] = v1 + 8;
  sub_100124140();
  sub_10003EBFC(0, (unint64_t *)&unk_1001625D0);
  sub_100124260();
  swift_release();
  swift_release();
  sub_100124140();
  sub_100056994(0, &qword_10015FED0);
  sub_100124270();
  swift_release();
  swift_release();
  sub_100124140();
  sub_100056994(0, &qword_1001625E0);
  sub_100124270();
  swift_release();
  uint64_t v6 = v4;
  unsigned int v12 = v4;
  v5(v3, v4, v0);
  id v7 = v5;
  sub_1001240A0();
  swift_release();
  swift_release();
  uint64_t v8 = v11;
  v11(v3, v0);
  sub_100124140();
  sub_100056994(0, &qword_1001625E8);
  sub_100124270();
  swift_release();
  swift_release();
  sub_100124140();
  sub_10003EAE0(0, &qword_1001625F0);
  sub_100124260();
  swift_release();
  swift_release();
  sub_100124140();
  sub_100125B80();
  sub_100124270();
  swift_release();
  swift_bridgeObjectRelease();
  v7(v3, v6, v0);
  sub_1001240A0();
  swift_release();
  swift_release();
  v8(v3, v0);
  sub_100124140();
  sub_10003EBFC(0, &qword_1001625F8);
  sub_100124260();
  swift_release();
  swift_release();
  sub_100124140();
  sub_100123150();
  sub_100123BE0();
  sub_100124270();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100124140();
  sub_1001238F0();
  sub_100124270();
  swift_release();
  swift_release();
  sub_100124140();
  sub_10003EBFC(0, (unint64_t *)&unk_100162600);
  sub_100124260();
  swift_release();
  v7(v3, v12, v0);
  sub_1001240A0();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v8)(v3, v0);
}

unint64_t sub_1000C23B0()
{
  unint64_t result = qword_100162618;
  if (!qword_100162618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162618);
  }
  return result;
}

void sub_1000C2404()
{
  if (!qword_100162620)
  {
    sub_10003EAE0(255, &qword_10015F260);
    sub_1000C2480();
    unint64_t v0 = sub_1001242C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162620);
    }
  }
}

unint64_t sub_1000C2480()
{
  unint64_t result = qword_100162690;
  if (!qword_100162690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162690);
  }
  return result;
}

void sub_1000C24D4()
{
  if (!qword_1001626A8)
  {
    sub_100123730();
    sub_1000C2540();
    unint64_t v0 = sub_1001242C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001626A8);
    }
  }
}

unint64_t sub_1000C2540()
{
  unint64_t result = qword_1001626B0;
  if (!qword_1001626B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001626B0);
  }
  return result;
}

void sub_1000C2594()
{
  if (!qword_1001626B8)
  {
    type metadata accessor for WidgetNewsUserProfileProvider();
    sub_1000C2628(&qword_1001626C0, (void (*)(uint64_t))type metadata accessor for WidgetNewsUserProfileProvider);
    unint64_t v0 = type metadata accessor for LoggingNewsUserProfileProvider();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001626B8);
    }
  }
}

uint64_t sub_1000C2628(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C2670()
{
  sub_1000C26B8();

  return sub_100124E10();
}

unint64_t sub_1000C26B8()
{
  unint64_t result = qword_100162700;
  if (!qword_100162700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162700);
  }
  return result;
}

ValueMetadata *type metadata accessor for PriceChangeDisplayKey()
{
  return &type metadata for PriceChangeDisplayKey;
}

uint64_t sub_1000C271C()
{
  uint64_t v0 = sub_1001238A0();
  sub_10001927C(v0, qword_1001626E8);
  uint64_t v1 = sub_100019244(v0, (uint64_t)qword_1001626E8);
  uint64_t v2 = enum case for PriceChangeDisplay.currency(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_1000C27A4@<X0>(uint64_t a1@<X8>)
{
  if (qword_10015D588 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1001238A0();
  uint64_t v3 = sub_100019244(v2, (uint64_t)qword_1001626E8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1000C284C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1000C28B0();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_1000C28B0()
{
  unint64_t result = qword_100162708;
  if (!qword_100162708)
  {
    sub_1001238A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162708);
  }
  return result;
}

id sub_1000C2950()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoopAppActivityMonitor();
  return [super dealloc];
}

uint64_t type metadata accessor for NoopAppActivityMonitor()
{
  return self;
}

uint64_t sub_1000C29A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = (_OWORD *)(a1 + 32);
    uint64_t v10 = a2 + 4;
    uint64_t v11 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 == 1)
    {
      long long v12 = *((_OWORD *)a2 + 3);
      *uint64_t v9 = *v10;
      *(_OWORD *)(a1 + 48) = v12;
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
      *(void *)(a1 + 48) = a2[6];
      *(void *)(a1 + 56) = v11;
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v18 = *((void *)v17 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      sub_1000C5D28(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v53 = v18;
      *uint64_t v15 = *v16;
      uint64_t v20 = v17[5];
      unint64_t v52 = (char *)v15 + v20;
      __n128 v21 = (char *)v16 + v20;
      uint64_t v22 = sub_1001232B0();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v52, v21, v22);
      sub_10002FE38();
      v23(&v52[*(int *)(v24 + 36)], &v21[*(int *)(v24 + 36)], v22);
      uint64_t v25 = v17[6];
      uint64_t v26 = (char *)v15 + v25;
      uint64_t v27 = (char *)v16 + v25;
      uint64_t v28 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      *(_OWORD *)((char *)v15 + v17[7]) = *(_OWORD *)((char *)v16 + v17[7]);
      uint64_t v29 = v17[8];
      uint64_t v30 = (char *)v15 + v29;
      double v31 = (char *)v16 + v29;
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v31[8];
      *((unsigned char *)v15 + v17[9]) = *((unsigned char *)v16 + v17[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v53 + 56))(v15, 0, 1, v17);
    }
    uint64_t v32 = *(int *)(a3 + 32);
    uint64_t v33 = a1 + v32;
    uint64_t v34 = (uint64_t)a2 + v32;
    uint64_t v35 = *(uint64_t *)((char *)a2 + v32 + 8);
    *(void *)uint64_t v33 = *(uint64_t *)((char *)a2 + v32);
    *(void *)(v33 + 8) = v35;
    *(unsigned char *)(v33 + 16) = *((unsigned char *)a2 + v32 + 16);
    long long v36 = *(void **)((char *)a2 + v32 + 24);
    uint64_t v37 = *(void *)(v34 + 32);
    uint64_t v38 = *(void *)(v34 + 40);
    uint64_t v39 = *(void *)(v34 + 48);
    char v40 = *(unsigned char *)(v34 + 56);
    swift_bridgeObjectRetain();
    sub_1000140D4(v36, v37, v38, v39, v40);
    *(void *)(v33 + 24) = v36;
    *(void *)(v33 + 32) = v37;
    *(void *)(v33 + 40) = v38;
    *(void *)(v33 + 48) = v39;
    *(unsigned char *)(v33 + 56) = v40;
    uint64_t v41 = *(void *)(v34 + 72);
    *(void *)(v33 + 64) = *(void *)(v34 + 64);
    *(void *)(v33 + 72) = v41;
    unint64_t v42 = *(void *)(v34 + 88);
    swift_bridgeObjectRetain();
    if (v42 <= 2)
    {
      *(_OWORD *)(v33 + 80) = *(_OWORD *)(v34 + 80);
      *(void *)(v33 + 96) = *(void *)(v34 + 96);
    }
    else
    {
      *(void *)(v33 + 80) = *(void *)(v34 + 80);
      *(void *)(v33 + 88) = v42;
      *(void *)(v33 + 96) = *(void *)(v34 + 96);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    uint64_t v43 = *(void **)(v34 + 104);
    if (v43 == (void *)1)
    {
      *(void *)(v33 + 104) = *(void *)(v34 + 104);
      *(unsigned char *)(v33 + 112) = *(unsigned char *)(v34 + 112);
    }
    else
    {
      *(void *)(v33 + 104) = v43;
      *(unsigned char *)(v33 + 112) = *(unsigned char *)(v34 + 112);
      id v44 = v43;
    }
    uint64_t v45 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
    uint64_t v46 = (void *)(v33 + v45);
    uint64_t v47 = (const void *)(v34 + v45);
    uint64_t v48 = sub_100123150();
    uint64_t v49 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      sub_1000C5D28(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v46, v47, v48);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
  }
  return a1;
}

uint64_t sub_1000C2E94(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1001232B0();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v6, v7);
    sub_10002FE38();
    v8(v6 + *(int *)(v9 + 36), v7);
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    uint64_t v11 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + *(int *)(a2 + 32);
  swift_bridgeObjectRelease();
  sub_100014114(*(void **)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(unsigned char *)(v12 + 56));
  swift_bridgeObjectRelease();
  if (*(void *)(v12 + 88) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v13 = *(void **)(v12 + 104);
  if (v13 != (void *)1) {

  }
  uint64_t v14 = v12 + *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  uint64_t v15 = sub_100123150();
  uint64_t v18 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v14, 1, v15);
  if (!result)
  {
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
    return v17(v14, v15);
  }
  return result;
}

uint64_t sub_1000C30F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = (_OWORD *)(a1 + 32);
  uint64_t v9 = a2 + 32;
  uint64_t v10 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    long long v11 = *(_OWORD *)(v9 + 16);
    *uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(a1 + 48) = v11;
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(v9 + 8);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v10;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    sub_1000C5D28(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v52 = a3;
    *uint64_t v13 = *v14;
    uint64_t v18 = v15[5];
    uint64_t v51 = (char *)v13 + v18;
    uint64_t v19 = (char *)v14 + v18;
    uint64_t v20 = sub_1001232B0();
    __n128 v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v51, v19, v20);
    sub_10002FE38();
    v21(&v51[*(int *)(v22 + 36)], &v19[*(int *)(v22 + 36)], v20);
    uint64_t v23 = v15[6];
    uint64_t v24 = (char *)v13 + v23;
    uint64_t v25 = (char *)v14 + v23;
    uint64_t v26 = sub_1001234F0();
    uint64_t v27 = v24;
    a3 = v52;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v27, v25, v26);
    *(_OWORD *)((char *)v13 + v15[7]) = *(_OWORD *)((char *)v14 + v15[7]);
    uint64_t v28 = v15[8];
    uint64_t v29 = (char *)v13 + v28;
    uint64_t v30 = (char *)v14 + v28;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    *((unsigned char *)v13 + v15[9]) = *((unsigned char *)v14 + v15[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v31 = *(int *)(a3 + 32);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = *(void *)(a2 + v31 + 8);
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(void *)(v32 + 8) = v34;
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(a2 + v31 + 16);
  uint64_t v35 = *(void **)(a2 + v31 + 24);
  uint64_t v36 = *(void *)(v33 + 32);
  uint64_t v37 = *(void *)(v33 + 40);
  uint64_t v38 = *(void *)(v33 + 48);
  char v39 = *(unsigned char *)(v33 + 56);
  swift_bridgeObjectRetain();
  sub_1000140D4(v35, v36, v37, v38, v39);
  *(void *)(v32 + 24) = v35;
  *(void *)(v32 + 32) = v36;
  *(void *)(v32 + 40) = v37;
  *(void *)(v32 + 48) = v38;
  *(unsigned char *)(v32 + 56) = v39;
  uint64_t v40 = *(void *)(v33 + 72);
  *(void *)(v32 + 64) = *(void *)(v33 + 64);
  *(void *)(v32 + 72) = v40;
  unint64_t v41 = *(void *)(v33 + 88);
  swift_bridgeObjectRetain();
  if (v41 <= 2)
  {
    *(_OWORD *)(v32 + 80) = *(_OWORD *)(v33 + 80);
    *(void *)(v32 + 96) = *(void *)(v33 + 96);
  }
  else
  {
    *(void *)(v32 + 80) = *(void *)(v33 + 80);
    *(void *)(v32 + 88) = v41;
    *(void *)(v32 + 96) = *(void *)(v33 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  unint64_t v42 = *(void **)(v33 + 104);
  if (v42 == (void *)1)
  {
    *(void *)(v32 + 104) = *(void *)(v33 + 104);
    *(unsigned char *)(v32 + 112) = *(unsigned char *)(v33 + 112);
  }
  else
  {
    *(void *)(v32 + 104) = v42;
    *(unsigned char *)(v32 + 112) = *(unsigned char *)(v33 + 112);
    id v43 = v42;
  }
  uint64_t v44 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  uint64_t v45 = (void *)(v32 + v44);
  uint64_t v46 = (const void *)(v33 + v44);
  uint64_t v47 = sub_100123150();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    sub_1000C5D28(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  return a1;
}

uint64_t sub_1000C358C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 32);
  uint64_t v6 = (_OWORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56) == 1)
  {
    if (v7 == 1)
    {
      long long v8 = *(_OWORD *)(a2 + 48);
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 48) = v8;
    }
    else
    {
      uint64_t v10 = *(void *)v6;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)uint64_t v5 = v10;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_10003088C(a1 + 32);
    long long v9 = *(_OWORD *)(a2 + 48);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 48) = v9;
  }
  else
  {
    uint64_t v11 = *(void *)v6;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)uint64_t v5 = v11;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, int *))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      *uint64_t v13 = *v14;
      uint64_t v20 = v15[5];
      uint64_t v87 = (char *)v13 + v20;
      char v88 = (char *)v14 + v20;
      uint64_t v21 = sub_1001232B0();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v87, v88, v21);
      sub_10002FE38();
      v22(&v87[*(int *)(v23 + 36)], &v88[*(int *)(v23 + 36)], v21);
      uint64_t v24 = v15[6];
      uint64_t v25 = (char *)v13 + v24;
      uint64_t v26 = (char *)v14 + v24;
      uint64_t v27 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      *(_OWORD *)((char *)v13 + v15[7]) = *(_OWORD *)((char *)v14 + v15[7]);
      uint64_t v28 = v15[8];
      uint64_t v29 = (char *)v13 + v28;
      uint64_t v30 = (char *)v14 + v28;
      char v31 = v30[8];
      *(void *)uint64_t v29 = *(void *)v30;
      v29[8] = v31;
      *((unsigned char *)v13 + v15[9]) = *((unsigned char *)v14 + v15[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v19)
  {
    sub_1000C60C0((uint64_t)v13, type metadata accessor for PreparedSparkline);
LABEL_13:
    sub_1000C5D28(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v13, v14, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_14;
  }
  *uint64_t v13 = *v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = v15[5];
  uint64_t v52 = (char *)v13 + v51;
  uint64_t v53 = (char *)v14 + v51;
  uint64_t v54 = sub_1001232B0();
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24);
  v55(v52, v53, v54);
  sub_10002FE38();
  v55(&v52[*(int *)(v56 + 36)], &v53[*(int *)(v56 + 36)], v54);
  uint64_t v57 = v15[6];
  uint64_t v58 = (char *)v13 + v57;
  uint64_t v59 = (char *)v14 + v57;
  uint64_t v60 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 24))(v58, v59, v60);
  uint64_t v61 = v15[7];
  uint64_t v62 = (void *)((char *)v13 + v61);
  uint64_t v63 = (void *)((char *)v14 + v61);
  *uint64_t v62 = *v63;
  v62[1] = v63[1];
  uint64_t v64 = v15[8];
  uint64_t v65 = (char *)v13 + v64;
  uint64_t v66 = (char *)v14 + v64;
  char v67 = v66[8];
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v67;
  *((unsigned char *)v13 + v15[9]) = *((unsigned char *)v14 + v15[9]);
LABEL_14:
  uint64_t v33 = *(int *)(a3 + 32);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)uint64_t v34 = *(void *)(a2 + v33);
  *(void *)(v34 + 8) = *(void *)(a2 + v33 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
  uint64_t v36 = *(void **)(v35 + 24);
  uint64_t v37 = *(void *)(v35 + 32);
  uint64_t v38 = *(void *)(v35 + 40);
  uint64_t v39 = *(void *)(v35 + 48);
  char v40 = *(unsigned char *)(v35 + 56);
  sub_1000140D4(v36, v37, v38, v39, v40);
  unint64_t v41 = *(void **)(v34 + 24);
  uint64_t v42 = *(void *)(v34 + 32);
  uint64_t v43 = *(void *)(v34 + 40);
  uint64_t v44 = *(void *)(v34 + 48);
  char v45 = *(unsigned char *)(v34 + 56);
  *(void *)(v34 + 24) = v36;
  *(void *)(v34 + 32) = v37;
  *(void *)(v34 + 40) = v38;
  *(void *)(v34 + 48) = v39;
  *(unsigned char *)(v34 + 56) = v40;
  sub_100014114(v41, v42, v43, v44, v45);
  *(void *)(v34 + 64) = *(void *)(v35 + 64);
  *(void *)(v34 + 72) = *(void *)(v35 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = (long long *)(v34 + 80);
  uint64_t v47 = (long long *)(v35 + 80);
  unint64_t v48 = *(void *)(v34 + 88);
  unint64_t v49 = *(void *)(v35 + 88);
  if (v48 == 2)
  {
    if (v49 <= 2)
    {
LABEL_16:
      long long v50 = *v47;
      *(void *)(v34 + 96) = *(void *)(v35 + 96);
      *uint64_t v46 = v50;
      goto LABEL_26;
    }
    goto LABEL_21;
  }
  if (v49 == 2)
  {
    sub_1000C3E08(v34 + 80);
LABEL_25:
    uint64_t v68 = *(void *)(v35 + 96);
    *uint64_t v46 = *v47;
    *(void *)(v34 + 96) = v68;
    goto LABEL_26;
  }
  if (v48 < 2)
  {
    if (v49 < 2) {
      goto LABEL_16;
    }
LABEL_21:
    *(void *)(v34 + 80) = *(void *)(v35 + 80);
    *(void *)(v34 + 88) = *(void *)(v35 + 88);
    *(void *)(v34 + 96) = *(void *)(v35 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_26;
  }
  if (v49 < 2)
  {
    sub_1000C60C0(v34 + 80, (uint64_t (*)(void))sub_1000C3D78);
    goto LABEL_25;
  }
  *(void *)(v34 + 80) = *(void *)(v35 + 80);
  *(void *)(v34 + 88) = *(void *)(v35 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v34 + 96) = *(void *)(v35 + 96);
  swift_retain();
  swift_release();
LABEL_26:
  unint64_t v69 = (uint64_t *)(v34 + 104);
  uint64_t v70 = *(void **)(v34 + 104);
  uint64_t v72 = (uint64_t *)(v35 + 104);
  uint64_t v71 = *(void **)(v35 + 104);
  if (v70 == (void *)1)
  {
    if (v71 == (void *)1)
    {
      uint64_t v73 = *v72;
      *(unsigned char *)(v34 + 112) = *(unsigned char *)(v35 + 112);
      *unint64_t v69 = v73;
    }
    else
    {
      *(void *)(v34 + 104) = v71;
      *(unsigned char *)(v34 + 112) = *(unsigned char *)(v35 + 112);
      id v75 = v71;
    }
  }
  else if (v71 == (void *)1)
  {
    sub_1000C3E5C(v34 + 104);
    char v74 = *(unsigned char *)(v35 + 112);
    *unint64_t v69 = *v72;
    *(unsigned char *)(v34 + 112) = v74;
  }
  else
  {
    *(void *)(v34 + 104) = v71;
    id v76 = v71;

    *(unsigned char *)(v34 + 112) = *(unsigned char *)(v35 + 112);
  }
  uint64_t v77 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  uint64_t v78 = (void *)(v34 + v77);
  uint64_t v79 = (void *)(v35 + v77);
  uint64_t v80 = sub_100123150();
  uint64_t v81 = *(void *)(v80 - 8);
  char v82 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v81 + 48);
  int v83 = v82(v78, 1, v80);
  int v84 = v82(v79, 1, v80);
  if (!v83)
  {
    if (!v84)
    {
      (*(void (**)(void *, void *, uint64_t))(v81 + 24))(v78, v79, v80);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v81 + 8))(v78, v80);
    goto LABEL_38;
  }
  if (v84)
  {
LABEL_38:
    sub_1000C5D28(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v78, v79, *(void *)(*(void *)(v85 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v81 + 16))(v78, v79, v80);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  return a1;
}

void sub_1000C3D78()
{
  if (!qword_100162738)
  {
    sub_1000C59D0(255, (unint64_t *)&qword_10015EDC8, (uint64_t)&type metadata for Color, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100162738);
    }
  }
}

uint64_t sub_1000C3E08(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000C3E5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000C3EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 28);
  long long v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    sub_1000C5D28(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *long long v9 = *v10;
    uint64_t v14 = v11[5];
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v39 = (char *)v10 + v14;
    uint64_t v16 = sub_1001232B0();
    uint64_t v40 = v12;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
    v17(v15, v39, v16);
    sub_10002FE38();
    v17(&v15[*(int *)(v18 + 36)], &v39[*(int *)(v18 + 36)], v16);
    uint64_t v19 = v11[6];
    uint64_t v20 = (char *)v9 + v19;
    uint64_t v21 = (char *)v10 + v19;
    uint64_t v22 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    *(_OWORD *)((char *)v9 + v11[7]) = *(_OWORD *)((char *)v10 + v11[7]);
    uint64_t v23 = v11[8];
    uint64_t v24 = (char *)v9 + v23;
    uint64_t v25 = (char *)v10 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    *((unsigned char *)v9 + v11[9]) = *((unsigned char *)v10 + v11[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v40 + 56))(v9, 0, 1, v11);
  }
  uint64_t v26 = *(int *)(a3 + 32);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  long long v29 = *(_OWORD *)(a2 + v26 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)(a2 + v26);
  *(_OWORD *)(v27 + 16) = v29;
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(a2 + v26 + 32);
  *(_OWORD *)(v27 + 41) = *(_OWORD *)(a2 + v26 + 41);
  long long v30 = *(_OWORD *)(a2 + v26 + 80);
  *(_OWORD *)(v27 + 64) = *(_OWORD *)(a2 + v26 + 64);
  *(_OWORD *)(v27 + 80) = v30;
  *(unsigned char *)(v27 + 112) = *(unsigned char *)(a2 + v26 + 112);
  uint64_t v31 = *(void *)(a2 + v26 + 104);
  *(void *)(v27 + 96) = *(void *)(a2 + v26 + 96);
  *(void *)(v27 + 104) = v31;
  uint64_t v32 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  uint64_t v33 = (void *)(v27 + v32);
  uint64_t v34 = (const void *)(v28 + v32);
  uint64_t v35 = sub_100123150();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    sub_1000C5D28(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  return a1;
}

uint64_t sub_1000C4250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  long long v7 = (_OWORD *)(a1 + 32);
  uint64_t v8 = (_OWORD *)(a2 + 32);
  if (*(void *)(a1 + 56) == 1) {
    goto LABEL_4;
  }
  uint64_t v9 = *(void *)(a2 + 56);
  if (v9 == 1)
  {
    sub_10003088C(a1 + 32);
LABEL_4:
    long long v10 = *(_OWORD *)(a2 + 48);
    *long long v7 = *v8;
    *(_OWORD *)(a1 + 48) = v10;
    goto LABEL_6;
  }
  *(void *)long long v7 = *(void *)v8;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      *uint64_t v12 = *v13;
      uint64_t v19 = v14[5];
      uint64_t v20 = (char *)v12 + v19;
      uint64_t v21 = (char *)v13 + v19;
      uint64_t v22 = sub_1001232B0();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
      v23(v20, v21, v22);
      sub_10002FE38();
      v23(&v20[*(int *)(v24 + 36)], &v21[*(int *)(v24 + 36)], v22);
      uint64_t v25 = v14[6];
      uint64_t v26 = (char *)v12 + v25;
      uint64_t v27 = (char *)v13 + v25;
      uint64_t v28 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      *(_OWORD *)((char *)v12 + v14[7]) = *(_OWORD *)((char *)v13 + v14[7]);
      uint64_t v29 = v14[8];
      long long v30 = (char *)v12 + v29;
      uint64_t v31 = (char *)v13 + v29;
      *(void *)long long v30 = *(void *)v31;
      v30[8] = v31[8];
      *((unsigned char *)v12 + v14[9]) = *((unsigned char *)v13 + v14[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v18)
  {
    sub_1000C60C0((uint64_t)v12, type metadata accessor for PreparedSparkline);
LABEL_11:
    sub_1000C5D28(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v12, v13, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_12;
  }
  *uint64_t v12 = *v13;
  swift_bridgeObjectRelease();
  uint64_t v58 = v14[5];
  uint64_t v59 = (char *)v12 + v58;
  uint64_t v60 = (char *)v13 + v58;
  uint64_t v61 = sub_1001232B0();
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 40);
  v62(v59, v60, v61);
  sub_10002FE38();
  v62(&v59[*(int *)(v63 + 36)], &v60[*(int *)(v63 + 36)], v61);
  uint64_t v64 = v14[6];
  uint64_t v65 = (char *)v12 + v64;
  uint64_t v66 = (char *)v13 + v64;
  uint64_t v67 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
  *(_OWORD *)((char *)v12 + v14[7]) = *(_OWORD *)((char *)v13 + v14[7]);
  uint64_t v68 = v14[8];
  unint64_t v69 = (char *)v12 + v68;
  uint64_t v70 = (char *)v13 + v68;
  v69[8] = v70[8];
  *(void *)unint64_t v69 = *(void *)v70;
  *((unsigned char *)v12 + v14[9]) = *((unsigned char *)v13 + v14[9]);
LABEL_12:
  uint64_t v33 = *(int *)(a3 + 32);
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = *(void *)(a2 + v33 + 8);
  *(void *)uint64_t v34 = *(void *)(a2 + v33);
  *(void *)(v34 + 8) = v36;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
  char v37 = *(unsigned char *)(v35 + 56);
  uint64_t v38 = *(void **)(v34 + 24);
  uint64_t v39 = *(void *)(v34 + 32);
  uint64_t v40 = *(void *)(v34 + 40);
  uint64_t v41 = *(void *)(v34 + 48);
  char v42 = *(unsigned char *)(v34 + 56);
  *(_OWORD *)(v34 + 24) = *(_OWORD *)(v35 + 24);
  *(_OWORD *)(v34 + 40) = *(_OWORD *)(v35 + 40);
  *(unsigned char *)(v34 + 56) = v37;
  sub_100014114(v38, v39, v40, v41, v42);
  uint64_t v43 = *(void *)(v35 + 72);
  *(void *)(v34 + 64) = *(void *)(v35 + 64);
  *(void *)(v34 + 72) = v43;
  swift_bridgeObjectRelease();
  unint64_t v44 = *(void *)(v34 + 88);
  unint64_t v45 = *(void *)(v35 + 88);
  if (v44 == 2)
  {
LABEL_18:
    *(_OWORD *)(v34 + 80) = *(_OWORD *)(v35 + 80);
    *(void *)(v34 + 96) = *(void *)(v35 + 96);
    goto LABEL_19;
  }
  if (v45 == 2)
  {
    sub_1000C3E08(v34 + 80);
    goto LABEL_18;
  }
  if (v44 < 2) {
    goto LABEL_18;
  }
  if (v45 < 2)
  {
    sub_1000C60C0(v34 + 80, (uint64_t (*)(void))sub_1000C3D78);
    goto LABEL_18;
  }
  *(void *)(v34 + 80) = *(void *)(v35 + 80);
  *(void *)(v34 + 88) = v45;
  swift_bridgeObjectRelease();
  *(void *)(v34 + 96) = *(void *)(v35 + 96);
  swift_release();
LABEL_19:
  uint64_t v46 = *(void **)(v34 + 104);
  uint64_t v47 = *(void *)(v35 + 104);
  if (v46 == (void *)1)
  {
LABEL_22:
    *(void *)(v34 + 104) = *(void *)(v35 + 104);
    *(unsigned char *)(v34 + 112) = *(unsigned char *)(v35 + 112);
    goto LABEL_24;
  }
  if (v47 == 1)
  {
    sub_1000C3E5C(v34 + 104);
    goto LABEL_22;
  }
  *(void *)(v34 + 104) = v47;

  *(unsigned char *)(v34 + 112) = *(unsigned char *)(v35 + 112);
LABEL_24:
  uint64_t v48 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  unint64_t v49 = (void *)(v34 + v48);
  long long v50 = (void *)(v35 + v48);
  uint64_t v51 = sub_100123150();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  int v54 = v53(v49, 1, v51);
  int v55 = v53(v50, 1, v51);
  if (!v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 40))(v49, v50, v51);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
    goto LABEL_29;
  }
  if (v55)
  {
LABEL_29:
    sub_1000C5D28(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v49, v50, *(void *)(*(void *)(v56 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v52 + 32))(v49, v50, v51);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  return a1;
}

uint64_t sub_1000C48E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C48F8);
}

uint64_t sub_1000C48F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1000C5D28(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for HeadlineViewModel(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1000C4A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C4A68);
}

uint64_t sub_1000C4A68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1000C5D28(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for HeadlineViewModel(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for SmallDetailWithNewsContentView()
{
  uint64_t result = qword_100162798;
  if (!qword_100162798) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000C4C10()
{
  sub_1000C5D28(319, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    type metadata accessor for HeadlineViewModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000C4D28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000C4D44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v100 = type metadata accessor for HeadlineView(0) - 8;
  __chkstk_darwin(v100);
  uint64_t v98 = (uint64_t)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C5C18();
  uint64_t v102 = v4 - 8;
  __chkstk_darwin(v4 - 8);
  uint64_t v99 = (uint64_t)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000C5C18;
  sub_1000C5B88(0, &qword_100162818, (void (*)(uint64_t))sub_1000C5C18);
  uint64_t v104 = v6 - 8;
  __chkstk_darwin(v6 - 8);
  uint64_t v101 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v105 = (uint64_t)&v84 - v9;
  uint64_t v10 = type metadata accessor for SmallSparklineView(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v103 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (uint64_t)&v84 - v13;
  uint64_t v14 = sub_100125060();
  uint64_t v95 = *(void *)(v14 - 8);
  uint64_t v96 = v14;
  __chkstk_darwin(v14);
  uint64_t v93 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LineTicker();
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for LineTicker;
  sub_1000C5B88(0, &qword_100162808, (void (*)(uint64_t))type metadata accessor for LineTicker);
  uint64_t v21 = v20;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v84 - v22;
  sub_1000C5930();
  uint64_t v91 = v24;
  uint64_t v90 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v108 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C5CB8(0, &qword_1001627F8, (uint64_t (*)(uint64_t))sub_1000C5930, (uint64_t)&type metadata for AccessibilitySimpleTicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  uint64_t v88 = v26 - 8;
  __chkstk_darwin(v26 - 8);
  uint64_t v87 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v89 = (uint64_t)&v84 - v29;
  char v30 = *((unsigned char *)a1 + 64);
  uint64_t v31 = *a1;
  uint64_t v32 = a1[1];
  uint64_t v33 = a1[2];
  uint64_t v34 = a1[3];
  uint64_t v36 = a1[5];
  uint64_t v86 = a1[4];
  uint64_t v35 = v86;
  uint64_t v38 = a1[7];
  uint64_t v85 = a1[6];
  uint64_t v37 = v85;
  *uint64_t v19 = v30;
  *((void *)v19 + 1) = v31;
  *((void *)v19 + 2) = v32;
  *((void *)v19 + 3) = v33;
  *((void *)v19 + 4) = v34;
  *((void *)v19 + 5) = v35;
  *((void *)v19 + 6) = v36;
  *((void *)v19 + 7) = v37;
  *((void *)v19 + 8) = v38;
  uint64_t v39 = (uint64_t *)&v19[*(int *)(v17 + 36)];
  *uint64_t v39 = swift_getKeyPath();
  sub_1000C5D28(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v94 = v40;
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = 0;
  *(unsigned char *)(v42 + 24) = 1;
  *(void *)(v42 + 32) = 0;
  *(unsigned char *)(v42 + 40) = 0;
  sub_1000C5F7C((uint64_t)v19, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for LineTicker);
  uint64_t v43 = (uint64_t *)&v23[*(int *)(v21 + 36)];
  *uint64_t v43 = KeyPath;
  v43[1] = (uint64_t)sub_1000321B4;
  v43[2] = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000321B8(v86, v36, v85, v38);
  sub_1000C60C0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for LineTicker);
  unint64_t v44 = v93;
  sub_100125040();
  sub_1000C5A1C();
  unint64_t v45 = v108;
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v44, v96);
  sub_1000C6064((uint64_t)v23, &qword_100162808, (void (*)(uint64_t))v92);
  int v84 = a1;
  uint64_t v46 = *a1;
  uint64_t v47 = a1[1];
  uint64_t v48 = a1[3];
  uint64_t v95 = a1[2];
  uint64_t v96 = v46;
  uint64_t v49 = a1[4];
  uint64_t v50 = a1[5];
  uint64_t v51 = a1[6];
  uint64_t v52 = a1[7];
  LOBYTE(v38) = *((unsigned char *)a1 + 64);
  uint64_t v53 = v90;
  uint64_t v54 = (uint64_t)v87;
  int v55 = v45;
  uint64_t v56 = v91;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v55, v91);
  uint64_t v57 = v54 + *(int *)(v88 + 44);
  *(unsigned char *)uint64_t v57 = v38;
  *(void *)(v57 + 8) = v96;
  *(void *)(v57 + 16) = v47;
  *(void *)(v57 + 24) = v95;
  *(void *)(v57 + 32) = v48;
  *(void *)(v57 + 40) = v49;
  *(void *)(v57 + 48) = v50;
  *(void *)(v57 + 56) = v51;
  *(void *)(v57 + 64) = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000321B8(v49, v50, v51, v52);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v108, v56);
  uint64_t v58 = v89;
  sub_1000C5DA4(v54, v89);
  sub_1001257D0();
  sub_100124990();
  uint64_t v108 = v109;
  LODWORD(v96) = v110;
  uint64_t v95 = v111;
  LODWORD(v93) = v112;
  uint64_t v92 = (uint64_t (*)())v113;
  uint64_t v91 = v114;
  uint64_t v59 = type metadata accessor for SmallDetailWithNewsContentView();
  uint64_t v60 = v84;
  uint64_t v61 = v97;
  sub_100032264((uint64_t)v84 + *(int *)(v59 + 28), v97);
  uint64_t v62 = (uint64_t)v60 + *(int *)(v59 + 32);
  uint64_t v63 = v98;
  sub_1000C5F7C(v62, v98, type metadata accessor for HeadlineViewModel);
  sub_1000C5E40(*(id *)(v63 + 104));
  *(void *)(v63 + 104) = 1;
  *(unsigned char *)(v63 + 112) = 0;
  uint64_t v64 = (uint64_t *)(v63 + *(int *)(v100 + 28));
  *uint64_t v64 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v65 = v99;
  sub_1000C5F7C(v63, v99, type metadata accessor for HeadlineView);
  *(void *)(v65 + *(int *)(v102 + 44)) = 0x3FF0000000000000;
  sub_1000C60C0(v63, type metadata accessor for HeadlineView);
  uint64_t v66 = swift_getKeyPath();
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = 0;
  *(unsigned char *)(v67 + 24) = 0;
  *(void *)(v67 + 32) = 0;
  *(unsigned char *)(v67 + 40) = 1;
  uint64_t v68 = v101;
  sub_1000C5F7C(v65, v101, (uint64_t (*)(void))sub_1000C5C18);
  unint64_t v69 = (uint64_t *)(v68 + *(int *)(v104 + 44));
  *unint64_t v69 = v66;
  v69[1] = (uint64_t)sub_1000321B4;
  v69[2] = v67;
  sub_1000C60C0(v65, (uint64_t (*)(void))sub_1000C5C18);
  uint64_t v70 = v105;
  sub_1000C5E60(v68, v105);
  uint64_t v71 = v54;
  sub_1000C5EE0(v58, v54);
  uint64_t v72 = v61;
  uint64_t v73 = v61;
  uint64_t v74 = v103;
  sub_1000C5F7C(v72, v103, type metadata accessor for SmallSparklineView);
  sub_1000C5FE4(v70, v68);
  uint64_t v75 = v107;
  sub_1000C5EE0(v71, v107);
  sub_1000C5840();
  uint64_t v77 = v76;
  uint64_t v78 = v75 + *(int *)(v76 + 48);
  *(void *)uint64_t v78 = 0;
  *(unsigned char *)(v78 + 8) = 1;
  *(void *)(v78 + 16) = v108;
  *(unsigned char *)(v78 + 24) = v96;
  *(void *)(v78 + 32) = v95;
  *(unsigned char *)(v78 + 40) = (_BYTE)v93;
  uint64_t v79 = v91;
  *(void *)(v78 + 48) = v92;
  *(void *)(v78 + 56) = v79;
  uint64_t v80 = v74;
  sub_1000C5F7C(v74, v75 + *(int *)(v76 + 64), type metadata accessor for SmallSparklineView);
  uint64_t v81 = v75 + *(int *)(v77 + 80);
  *(void *)uint64_t v81 = 0x4020000000000000;
  *(unsigned char *)(v81 + 8) = 0;
  sub_1000C5FE4(v68, v75 + *(int *)(v77 + 96));
  char v82 = (void (*)(uint64_t))v106;
  sub_1000C6064(v70, &qword_100162818, (void (*)(uint64_t))v106);
  sub_1000C60C0(v73, type metadata accessor for SmallSparklineView);
  sub_1000C6120(v58);
  sub_1000C6064(v68, &qword_100162818, v82);
  sub_1000C60C0(v80, type metadata accessor for SmallSparklineView);
  return sub_1000C6120(v71);
}

uint64_t sub_1000C5760@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100124EF0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  sub_1000C57A8();
  return sub_1000C4D44(v1, a1 + *(int *)(v3 + 44));
}

void sub_1000C57A8()
{
  if (!qword_1001627E0)
  {
    sub_1000C5D28(255, &qword_1001627E8, (uint64_t (*)(uint64_t))sub_1000C5840, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001627E0);
    }
  }
}

void sub_1000C5840()
{
  if (!qword_1001627F0)
  {
    sub_1000C5CB8(255, &qword_1001627F8, (uint64_t (*)(uint64_t))sub_1000C5930, (uint64_t)&type metadata for AccessibilitySimpleTicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_1000C5B28();
    type metadata accessor for SmallSparklineView(255);
    sub_1000C5B88(255, &qword_100162818, (void (*)(uint64_t))sub_1000C5C18);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1001627F0);
    }
  }
}

void sub_1000C5930()
{
  if (!qword_100162800)
  {
    sub_1000C5B88(255, &qword_100162808, (void (*)(uint64_t))type metadata accessor for LineTicker);
    sub_1000C5A1C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100162800);
    }
  }
}

void sub_1000C59D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1000C5A1C()
{
  unint64_t result = qword_100162810;
  if (!qword_100162810)
  {
    sub_1000C5B88(255, &qword_100162808, (void (*)(uint64_t))type metadata accessor for LineTicker);
    sub_1000C5AE0(&qword_100161C50, (void (*)(uint64_t))type metadata accessor for LineTicker);
    sub_10005F878();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162810);
  }
  return result;
}

uint64_t sub_1000C5AE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000C5B28()
{
  if (!qword_10015FA58)
  {
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015FA58);
    }
  }
}

void sub_1000C5B88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1000C59D0(255, (unint64_t *)&qword_10015EC20, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyTransformModifier);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000C5C18()
{
  if (!qword_100162820)
  {
    type metadata accessor for HeadlineView(255);
    sub_1000C5CB8(255, (unint64_t *)&qword_10015FC30, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutPriorityTraitKey, (uint64_t)&protocol witness table for LayoutPriorityTraitKey, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _TraitWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162820);
    }
  }
}

void sub_1000C5CB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1000C5D28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000C5D94()
{
  return swift_deallocObject();
}

uint64_t sub_1000C5DA4(uint64_t a1, uint64_t a2)
{
  sub_1000C5CB8(0, &qword_1001627F8, (uint64_t (*)(uint64_t))sub_1000C5930, (uint64_t)&type metadata for AccessibilitySimpleTicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1000C5E40(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_1000C5E50()
{
  return swift_deallocObject();
}

uint64_t sub_1000C5E60(uint64_t a1, uint64_t a2)
{
  sub_1000C5B88(0, &qword_100162818, (void (*)(uint64_t))sub_1000C5C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C5EE0(uint64_t a1, uint64_t a2)
{
  sub_1000C5CB8(0, &qword_1001627F8, (uint64_t (*)(uint64_t))sub_1000C5930, (uint64_t)&type metadata for AccessibilitySimpleTicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C5F7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000C5FE4(uint64_t a1, uint64_t a2)
{
  sub_1000C5B88(0, &qword_100162818, (void (*)(uint64_t))sub_1000C5C18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C6064(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1000C5B88(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1000C60C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000C6120(uint64_t a1)
{
  sub_1000C5CB8(0, &qword_1001627F8, (uint64_t (*)(uint64_t))sub_1000C5930, (uint64_t)&type metadata for AccessibilitySimpleTicker, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C61B4()
{
  return sub_1000C5AE0(&qword_100162828, (void (*)(uint64_t))sub_1000C61FC);
}

void sub_1000C61FC()
{
  if (!qword_100162830)
  {
    sub_1000C5D28(255, &qword_1001627E8, (uint64_t (*)(uint64_t))sub_1000C5840, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000C6290();
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162830);
    }
  }
}

unint64_t sub_1000C6290()
{
  unint64_t result = qword_100162838;
  if (!qword_100162838)
  {
    sub_1000C5D28(255, &qword_1001627E8, (uint64_t (*)(uint64_t))sub_1000C5840, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162838);
  }
  return result;
}

unint64_t sub_1000C631C()
{
  unint64_t result = qword_100162840;
  if (!qword_100162840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162840);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StockChartHighlightStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C643CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChartHighlightStyle()
{
  return &type metadata for StockChartHighlightStyle;
}

uint64_t sub_1000C6474(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    unint64_t v10 = (_OWORD *)(a1 + 48);
    uint64_t v11 = a2 + 6;
    uint64_t v12 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      long long v13 = *((_OWORD *)a2 + 4);
      *unint64_t v10 = *v11;
      *(_OWORD *)(a1 + 64) = v13;
    }
    else
    {
      *(void *)unint64_t v10 = *(void *)v11;
      *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v12;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v15 = a2[12];
    uint64_t v16 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v16;
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 128) = a2[16];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(unsigned char *)(a1 + 137) = *((unsigned char *)a2 + 137);
    uint64_t v17 = a3[9];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    *(void *)(a1 + 96) = v15;
    uint64_t v20 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v21 = *((void *)v20 - 1);
    uint64_t v22 = *(unsigned int (**)(void *, uint64_t, int *))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      sub_100041E44();
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      *uint64_t v18 = *v19;
      uint64_t v24 = v20[5];
      uint64_t v51 = (char *)v18 + v24;
      uint64_t v25 = (char *)v19 + v24;
      uint64_t v26 = sub_1001232B0();
      uint64_t v52 = v21;
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v51, v25, v26);
      sub_10002FE38();
      v27(&v51[*(int *)(v28 + 36)], &v25[*(int *)(v28 + 36)], v26);
      uint64_t v29 = v20[6];
      char v30 = (char *)v18 + v29;
      uint64_t v31 = (char *)v19 + v29;
      uint64_t v32 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
      uint64_t v33 = v20[8];
      uint64_t v34 = (char *)v18 + v33;
      uint64_t v35 = (char *)v19 + v33;
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v35[8];
      *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v52 + 56))(v18, 0, 1, v20);
    }
    uint64_t v36 = a3[11];
    *(void *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v37 = (void *)(a1 + v36);
    uint64_t v38 = (char *)a2 + v36;
    sub_10005A9D8();
    uint64_t v40 = v39;
    uint64_t v41 = *(void *)(v39 - 8);
    uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    swift_bridgeObjectRetain();
    if (v42(v38, 1, v40))
    {
      sub_100029100();
      memcpy(v37, v38, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v37, v38, v40);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
    }
    uint64_t v44 = a3[12];
    unint64_t v45 = (void *)(a1 + v44);
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = sub_100123150();
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      sub_10009EAD4(0);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
  }
  return a1;
}

void sub_1000C6960(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000C69C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C6A0C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1001232B0();
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v6, v7);
    sub_10002FE38();
    v8(v6 + *(int *)(v9 + 36), v7);
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    uint64_t v11 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[11];
  sub_10005A9D8();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  }
  uint64_t v16 = a1 + a2[12];
  uint64_t v17 = sub_100123150();
  uint64_t v20 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v16, 1, v17);
  if (!result)
  {
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
    return v19(v16, v17);
  }
  return result;
}

uint64_t sub_1000C6CBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = (_OWORD *)(a1 + 48);
  uint64_t v10 = a2 + 48;
  uint64_t v11 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    long long v12 = *(_OWORD *)(v10 + 16);
    *uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(v10 + 8);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v11;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 96);
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v14;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *(void *)(a1 + 96) = v13;
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(unsigned int (**)(void *, uint64_t, int *))(v19 + 48);
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    sub_100041E44();
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    uint64_t v22 = v18[5];
    uint64_t v50 = (char *)v16 + v22;
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v51 = a3;
    uint64_t v24 = sub_1001232B0();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v50, v23, v24);
    sub_10002FE38();
    uint64_t v27 = v24;
    a3 = v51;
    v25(&v50[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v27);
    uint64_t v28 = v18[6];
    uint64_t v29 = (char *)v16 + v28;
    char v30 = (char *)v17 + v28;
    uint64_t v31 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
    uint64_t v32 = v18[8];
    uint64_t v33 = (char *)v16 + v32;
    uint64_t v34 = (char *)v17 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v35 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  sub_10005A9D8();
  uint64_t v39 = v38;
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48);
  swift_bridgeObjectRetain();
  if (v41(v37, 1, v39))
  {
    sub_100029100();
    memcpy(v36, v37, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v40 + 16))(v36, v37, v39);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v39);
  }
  uint64_t v43 = a3[12];
  uint64_t v44 = (void *)(a1 + v43);
  unint64_t v45 = (const void *)(a2 + v43);
  uint64_t v46 = sub_100123150();
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    sub_10009EAD4(0);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 16))(v44, v45, v46);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  return a1;
}

uint64_t sub_1000C7158(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) == 1)
  {
    if (v7 == 1)
    {
      long long v8 = *(_OWORD *)(a2 + 64);
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 64) = v8;
    }
    else
    {
      uint64_t v10 = *(void *)v6;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)uint64_t v5 = v10;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_10003088C(a1 + 48);
    long long v9 = *(_OWORD *)(a2 + 64);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    uint64_t v11 = *(void *)v6;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)uint64_t v5 = v11;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v13;
  uint64_t v14 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v14;
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      *uint64_t v16 = *v17;
      uint64_t v23 = v18[5];
      uint64_t v73 = (char *)v16 + v23;
      uint64_t v74 = (char *)v17 + v23;
      uint64_t v24 = sub_1001232B0();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v73, v74, v24);
      sub_10002FE38();
      v25(&v73[*(int *)(v26 + 36)], &v74[*(int *)(v26 + 36)], v24);
      uint64_t v27 = v18[6];
      uint64_t v28 = (char *)v16 + v27;
      uint64_t v29 = (char *)v17 + v27;
      uint64_t v30 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
      uint64_t v31 = v18[8];
      uint64_t v32 = (char *)v16 + v31;
      uint64_t v33 = (char *)v17 + v31;
      char v34 = v33[8];
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v34;
      *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v22)
  {
    sub_1000C9B38((uint64_t)v16, type metadata accessor for PreparedSparkline);
LABEL_13:
    sub_100041E44();
    memcpy(v16, v17, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  *uint64_t v16 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = v18[5];
  uint64_t v57 = (char *)v16 + v56;
  uint64_t v58 = (char *)v17 + v56;
  uint64_t v59 = sub_1001232B0();
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 24);
  v60(v57, v58, v59);
  sub_10002FE38();
  v60(&v57[*(int *)(v61 + 36)], &v58[*(int *)(v61 + 36)], v59);
  uint64_t v62 = v18[6];
  uint64_t v63 = (char *)v16 + v62;
  uint64_t v64 = (char *)v17 + v62;
  uint64_t v65 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
  uint64_t v66 = v18[7];
  uint64_t v67 = (void *)((char *)v16 + v66);
  uint64_t v68 = (void *)((char *)v17 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  uint64_t v69 = v18[8];
  uint64_t v70 = (char *)v16 + v69;
  uint64_t v71 = (char *)v17 + v69;
  char v72 = v71[8];
  *(void *)uint64_t v70 = *(void *)v71;
  v70[8] = v72;
  *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
LABEL_14:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[11];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  sub_10005A9D8();
  uint64_t v40 = v39;
  uint64_t v41 = *(void *)(v39 - 8);
  uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v37, 1, v39);
  int v44 = v42(v38, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 16))(v37, v38, v40);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v37, v40);
LABEL_19:
    sub_100029100();
    memcpy(v37, v38, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v41 + 24))(v37, v38, v40);
LABEL_20:
  uint64_t v46 = a3[12];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = sub_100123150();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  int v52 = v51(v47, 1, v49);
  int v53 = v51(v48, 1, v49);
  if (!v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 24))(v47, v48, v49);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
    goto LABEL_25;
  }
  if (v53)
  {
LABEL_25:
    sub_10009EAD4(0);
    memcpy(v47, v48, *(void *)(*(void *)(v54 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v50 + 16))(v47, v48, v49);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  return a1;
}

uint64_t sub_1000C78AC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 64);
  long long v10 = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v10;
  uint64_t v14 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    sub_100041E44();
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    uint64_t v17 = v14[5];
    uint64_t v18 = (char *)v12 + v17;
    int v43 = (char *)v13 + v17;
    uint64_t v19 = sub_1001232B0();
    uint64_t v44 = v15;
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
    v20(v18, v43, v19);
    sub_10002FE38();
    v20(&v18[*(int *)(v21 + 36)], &v43[*(int *)(v21 + 36)], v19);
    uint64_t v22 = v14[6];
    uint64_t v23 = (char *)v12 + v22;
    uint64_t v24 = (char *)v13 + v22;
    uint64_t v25 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    *(_OWORD *)((char *)v12 + v14[7]) = *(_OWORD *)((char *)v13 + v14[7]);
    uint64_t v26 = v14[8];
    uint64_t v27 = (char *)v12 + v26;
    uint64_t v28 = (char *)v13 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    *((unsigned char *)v12 + v14[9]) = *((unsigned char *)v13 + v14[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v44 + 56))(v12, 0, 1, v14);
  }
  uint64_t v29 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  sub_10005A9D8();
  uint64_t v33 = v32;
  uint64_t v34 = *(void *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v32))
  {
    sub_100029100();
    memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 32))(v30, v31, v33);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
  }
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  uint64_t v39 = sub_100123150();
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    sub_10009EAD4(0);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  return a1;
}

uint64_t sub_1000C7CB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  long long v9 = (_OWORD *)(a1 + 48);
  long long v10 = (_OWORD *)(a2 + 48);
  if (*(void *)(a1 + 72) == 1) {
    goto LABEL_4;
  }
  uint64_t v11 = *(void *)(a2 + 72);
  if (v11 == 1)
  {
    sub_10003088C(a1 + 48);
LABEL_4:
    long long v12 = *(_OWORD *)(a2 + 64);
    *long long v9 = *v10;
    *(_OWORD *)(a1 + 64) = v12;
    goto LABEL_6;
  }
  *(void *)long long v9 = *(void *)v10;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  uint64_t v70 = a3;
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, int *))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      *uint64_t v15 = *v16;
      uint64_t v22 = v17[5];
      uint64_t v23 = (char *)v15 + v22;
      uint64_t v68 = (char *)v15 + v22;
      uint64_t v69 = (char *)v16 + v22;
      uint64_t v24 = sub_1001232B0();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
      v25(v23, v69, v24);
      sub_10002FE38();
      v25(&v68[*(int *)(v26 + 36)], &v69[*(int *)(v26 + 36)], v24);
      uint64_t v27 = v17[6];
      uint64_t v28 = (char *)v15 + v27;
      uint64_t v29 = (char *)v16 + v27;
      uint64_t v30 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)((char *)v15 + v17[7]) = *(_OWORD *)((char *)v16 + v17[7]);
      uint64_t v31 = v17[8];
      uint64_t v32 = (char *)v15 + v31;
      uint64_t v33 = (char *)v16 + v31;
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v33[8];
      *((unsigned char *)v15 + v17[9]) = *((unsigned char *)v16 + v17[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v21)
  {
    sub_1000C9B38((uint64_t)v15, type metadata accessor for PreparedSparkline);
LABEL_11:
    sub_100041E44();
    memcpy(v15, v16, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  *uint64_t v15 = *v16;
  swift_bridgeObjectRelease();
  uint64_t v55 = v17[5];
  uint64_t v56 = (char *)v15 + v55;
  uint64_t v57 = (char *)v16 + v55;
  uint64_t v58 = sub_1001232B0();
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 40);
  v59(v56, v57, v58);
  sub_10002FE38();
  v59(&v56[*(int *)(v60 + 36)], &v57[*(int *)(v60 + 36)], v58);
  uint64_t v61 = v17[6];
  uint64_t v62 = (char *)v15 + v61;
  uint64_t v63 = (char *)v16 + v61;
  uint64_t v64 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  *(_OWORD *)((char *)v15 + v17[7]) = *(_OWORD *)((char *)v16 + v17[7]);
  uint64_t v65 = v17[8];
  uint64_t v66 = (char *)v15 + v65;
  uint64_t v67 = (char *)v16 + v65;
  v66[8] = v67[8];
  *(void *)uint64_t v66 = *(void *)v67;
  *((unsigned char *)v15 + v17[9]) = *((unsigned char *)v16 + v17[9]);
LABEL_12:
  *(void *)(a1 + v70[10]) = *(void *)(a2 + v70[10]);
  swift_bridgeObjectRelease();
  uint64_t v35 = v70[11];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  sub_10005A9D8();
  uint64_t v39 = v38;
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v36, 1, v38);
  int v43 = v41(v37, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v40 + 32))(v36, v37, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v39);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v43)
  {
    (*(void (**)(void *, uint64_t))(v40 + 8))(v36, v39);
LABEL_17:
    sub_100029100();
    memcpy(v36, v37, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v40 + 40))(v36, v37, v39);
LABEL_18:
  uint64_t v45 = v70[12];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = sub_100123150();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v49 + 48);
  int v51 = v50(v46, 1, v48);
  int v52 = v50(v47, 1, v48);
  if (!v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, void *, uint64_t))(v49 + 40))(v46, v47, v48);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v49 + 8))(v46, v48);
    goto LABEL_23;
  }
  if (v52)
  {
LABEL_23:
    sub_10009EAD4(0);
    memcpy(v46, v47, *(void *)(*(void *)(v53 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v49 + 32))(v46, v47, v48);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  return a1;
}

uint64_t sub_1000C8348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000C835C);
}

uint64_t sub_1000C835C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_100041E44();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_100029100();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[11];
    goto LABEL_9;
  }
  sub_10009EAD4(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[12];

  return v15(v17, a2, v16);
}

uint64_t sub_1000C84D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000C84E8);
}

uint64_t sub_1000C84E8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  sub_100041E44();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_100029100();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_7;
  }
  sub_10009EAD4(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[12];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for DetailContentViewModel(uint64_t a1)
{
  return sub_100009E3C(a1, qword_1001628A0);
}

void sub_1000C8680()
{
  sub_100041E44();
  if (v0 <= 0x3F)
  {
    sub_100029100();
    if (v1 <= 0x3F)
    {
      sub_10009EAD4(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1000C87C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  sub_10009EAD4(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029068(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WidgetStock();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CFC88(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  uint64_t v14 = sub_100123CC0();
  uint64_t v16 = v15;
  uint64_t v17 = sub_100123D30();
  uint64_t v19 = v18;
  sub_1000C9B38((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  *(void *)a4 = v14;
  *(void *)(a4 + 8) = v16;
  *(void *)(a4 + 16) = v17;
  *(void *)(a4 + 24) = v19;
  *(void *)(a4 + 32) = sub_100123CF0();
  *(void *)(a4 + 40) = v20;
  *(void *)(a4 + 48) = sub_1000F46DC();
  *(void *)(a4 + 56) = v21 & 1;
  *(void *)(a4 + 64) = v22;
  *(void *)(a4 + 72) = v23;
  sub_1000CFC88(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  sub_1000D0CD8((uint64_t)v13, (uint64_t)v42);
  long long v24 = v42[1];
  *(_OWORD *)(a4 + 80) = v42[0];
  *(_OWORD *)(a4 + 96) = v24;
  *(_OWORD *)(a4 + 112) = v43[0];
  *(_OWORD *)(a4 + 121) = *(_OWORD *)((char *)v43 + 9);
  sub_1000CFC88(a1 + *(int *)(v11 + 20), (uint64_t)v10, (uint64_t (*)(void))sub_100029068);
  uint64_t v25 = sub_100123670();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v25) == 1)
  {
    sub_1000C9B38((uint64_t)v10, (uint64_t (*)(void))sub_100029068);
LABEL_7:
    char v37 = 2;
    uint64_t v32 = v40;
    uint64_t v31 = (uint64_t)v41;
    uint64_t v33 = v39;
    goto LABEL_8;
  }
  double v27 = COERCE_DOUBLE(sub_1001235F0());
  char v29 = v28;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v25);
  if (v29) {
    goto LABEL_7;
  }
  BOOL v30 = v27 < 0.0;
  uint64_t v32 = v40;
  uint64_t v31 = (uint64_t)v41;
  uint64_t v33 = v39;
  char v37 = v30;
LABEL_8:
  *(unsigned char *)(a4 + 137) = v37;
  uint64_t v34 = (int *)type metadata accessor for DetailContentViewModel(0);
  *(void *)(a4 + v34[10]) = v33;
  sub_1000CFC88(v32, a4 + v34[11], (uint64_t (*)(void))sub_100029100);
  sub_1000CFC88(a1 + *(int *)(v11 + 24), a4 + v34[9], (uint64_t (*)(void))sub_100041E44);
  sub_100123CD0();
  sub_1000C9B38(v32, (uint64_t (*)(void))sub_100029100);
  sub_1000C9B38(a1, (uint64_t (*)(void))type metadata accessor for WidgetStock);
  uint64_t v35 = sub_100123150();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v31, 0, 1, v35);
  return sub_1000CC3DC(v31, a4 + v34[12], (uint64_t (*)(void))sub_10009EAD4);
}

unint64_t sub_1000C8BAC(char a1)
{
  unint64_t result = 0x614E6C6F626D7973;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4E796E61706D6F63;
      break;
    case 2:
      unint64_t result = 0x6563697270;
      break;
    case 3:
      unint64_t result = 0x6168436563697270;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6E696C6B72617073;
      break;
    case 6:
      unint64_t result = 0x74654465746F7571;
      break;
    case 7:
      unint64_t result = 0x656E696C64616568;
      break;
    case 8:
      unint64_t result = 0x52556C6F626D7973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000C8D00(void *a1)
{
  int v3 = v1;
  sub_1000CC5DC(0, &qword_100162958, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  sub_100009D98(a1, a1[3]);
  sub_1000CC28C();
  sub_100126650();
  uint64_t v10 = *((void *)v3 + 2);
  uint64_t v11 = *((void *)v3 + 3);
  long long v20 = *v3;
  *(void *)&long long v21 = v10;
  *((void *)&v21 + 1) = v11;
  char v26 = 0;
  sub_1000CC640();
  sub_1001264C0();
  if (!v2)
  {
    LOBYTE(v20) = 1;
    sub_100126480();
    long long v12 = v3[4];
    long long v20 = v3[3];
    long long v21 = v12;
    char v26 = 2;
    sub_1000CC694();
    sub_100126470();
    char v13 = *((unsigned char *)v3 + 88);
    uint64_t v14 = *((void *)v3 + 14);
    char v15 = *((unsigned char *)v3 + 120);
    uint64_t v16 = *((void *)v3 + 16);
    char v17 = *((unsigned char *)v3 + 136);
    *(void *)&long long v20 = *((void *)v3 + 10);
    BYTE8(v20) = v13;
    long long v21 = v3[6];
    uint64_t v22 = v14;
    char v23 = v15;
    uint64_t v24 = v16;
    char v25 = v17;
    char v26 = 3;
    sub_1000CC6E8();
    sub_1001264C0();
    LOBYTE(v20) = *((unsigned char *)v3 + 137);
    char v26 = 4;
    sub_100092D64();
    sub_100126470();
    uint64_t v18 = type metadata accessor for DetailContentViewModel(0);
    LOBYTE(v20) = 5;
    type metadata accessor for PreparedSparkline(0);
    sub_1000C69C4(&qword_100162978, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    sub_100126470();
    *(void *)&long long v20 = *(void *)((char *)v3 + *(int *)(v18 + 40));
    char v26 = 6;
    sub_1000CC444();
    sub_1000CC4F0(&qword_100162980, (void (*)(uint64_t))sub_1000CC444, (void (*)(void))sub_1000CC73C);
    sub_1001264C0();
    LOBYTE(v20) = 7;
    sub_10005A9D8();
    sub_1000CC4F0(&qword_100162990, (void (*)(uint64_t))sub_10005A9D8, (void (*)(void))sub_1000CC790);
    sub_100126470();
    LOBYTE(v20) = 8;
    sub_100123150();
    sub_1000C69C4(&qword_1001629A8, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_100126470();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000C919C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  sub_10009EAD4(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029100();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100041E44();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CC5DC(0, &qword_1001628F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v38 = type metadata accessor for DetailContentViewModel(0);
  __chkstk_darwin(v38);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D98(a1, a1[3]);
  sub_1000CC28C();
  uint64_t v36 = v14;
  char v17 = v37;
  sub_100126640();
  if (v17) {
    return sub_100009D48((uint64_t)a1);
  }
  char v37 = v8;
  uint64_t v32 = v5;
  uint64_t v18 = v34;
  char v45 = 0;
  sub_1000CC2E0();
  sub_1001263F0();
  long long v20 = v40;
  *(_OWORD *)uint64_t v16 = v39;
  *((_OWORD *)v16 + 1) = v20;
  LOBYTE(v39) = 1;
  *((void *)v16 + 4) = sub_1001263B0();
  *((void *)v16 + 5) = v21;
  char v45 = 2;
  sub_1000CC334();
  sub_1001263A0();
  long long v22 = v40;
  *((_OWORD *)v16 + 3) = v39;
  *((_OWORD *)v16 + 4) = v22;
  char v45 = 3;
  sub_1000CC388();
  sub_1001263F0();
  char v23 = BYTE8(v39);
  uint64_t v24 = v41;
  char v25 = v42;
  uint64_t v26 = v43;
  char v27 = v44;
  *((void *)v16 + 10) = v39;
  v16[88] = v23;
  *((_OWORD *)v16 + 6) = v40;
  *((void *)v16 + 14) = v24;
  v16[120] = v25;
  *((void *)v16 + 16) = v26;
  v16[136] = v27;
  char v45 = 4;
  sub_100092C48();
  sub_1001263A0();
  v16[137] = v39;
  type metadata accessor for PreparedSparkline(0);
  LOBYTE(v39) = 5;
  sub_1000C69C4(&qword_100162920, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_1001263A0();
  uint64_t v28 = v38;
  sub_1000CC3DC((uint64_t)v11, (uint64_t)&v16[*(int *)(v38 + 36)], (uint64_t (*)(void))sub_100041E44);
  sub_1000CC444();
  char v45 = 6;
  sub_1000CC4F0(&qword_100162928, (void (*)(uint64_t))sub_1000CC444, (void (*)(void))sub_1000CC49C);
  sub_1001263F0();
  *(void *)&v16[*(int *)(v28 + 40)] = v39;
  sub_10005A9D8();
  LOBYTE(v39) = 7;
  sub_1000CC4F0(&qword_100162938, (void (*)(uint64_t))sub_10005A9D8, (void (*)(void))sub_1000CC560);
  uint64_t v29 = (uint64_t)v37;
  sub_1001263A0();
  sub_1000CC3DC(v29, (uint64_t)&v16[*(int *)(v28 + 44)], (uint64_t (*)(void))sub_100029100);
  sub_100123150();
  LOBYTE(v39) = 8;
  sub_1000C69C4(&qword_100162950, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v30 = (uint64_t)v32;
  sub_1001263A0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v36, v35);
  sub_1000CC3DC(v30, (uint64_t)&v16[*(int *)(v38 + 48)], (uint64_t (*)(void))sub_10009EAD4);
  sub_1000CFC88((uint64_t)v16, v33, type metadata accessor for DetailContentViewModel);
  sub_100009D48((uint64_t)a1);
  return sub_1000C9B38((uint64_t)v16, type metadata accessor for DetailContentViewModel);
}

unint64_t sub_1000C9A54()
{
  return sub_1000C8BAC(*v0);
}

uint64_t sub_1000C9A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000CFCF0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000C9A84(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1000C9A90(uint64_t a1)
{
  unint64_t v2 = sub_1000CC28C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000C9ACC(uint64_t a1)
{
  unint64_t v2 = sub_1000CC28C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000C9B08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000C919C(a1, a2);
}

uint64_t sub_1000C9B20(void *a1)
{
  return sub_1000C8D00(a1);
}

uint64_t sub_1000C9B38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000C9B98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  uint64_t v3 = sub_100125080();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  __chkstk_darwin(v3);
  uint64_t v47 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100124A80();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  char v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001248B0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CF1A0();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000CF8DC(0);
  uint64_t v15 = v14;
  __chkstk_darwin(v14);
  char v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CF924();
  uint64_t v19 = v18;
  uint64_t v41 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CFA80();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v45 = v22;
  uint64_t v46 = v23;
  __chkstk_darwin(v22);
  long long v40 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v13 = sub_1001257C0();
  v13[1] = v25;
  sub_1000CFB3C();
  sub_1000CA170(v2, (uint64_t)v13 + *(int *)(v26 + 44));
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for ColorScheme.dark(_:), v7);
  uint64_t v28 = (uint64_t *)&v17[*(int *)(v15 + 36)];
  sub_10003C8EC(0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v28 + *(int *)(v29 + 28), v10, v7);
  *uint64_t v28 = KeyPath;
  sub_1000CFC88((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))sub_1000CF1A0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1000C9B38((uint64_t)v13, (uint64_t (*)(void))sub_1000CF1A0);
  uint64_t v31 = v42;
  uint64_t v30 = v43;
  uint64_t v32 = v44;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v42, enum case for DynamicTypeSize.large(_:), v44);
  unint64_t v33 = sub_1000CF9A8();
  sub_100125440();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
  sub_1000C9B38((uint64_t)v17, (uint64_t (*)(void))sub_1000CF8DC);
  type metadata accessor for DetailContentViewModel(0);
  uint64_t v51 = v15;
  unint64_t v52 = v33;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v40;
  sub_1001253E0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v19);
  uint64_t v36 = v47;
  sub_100125070();
  sub_1001257D0();
  uint64_t v51 = v19;
  unint64_t v52 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_10003CD14();
  uint64_t v37 = v45;
  sub_100125470();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v35, v37);
}

uint64_t sub_1000CA170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v195 = a2;
  uint64_t v3 = type metadata accessor for DetailContentView(0);
  __chkstk_darwin(v3);
  uint64_t v155 = (uint64_t)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for LargeDetailContentView();
  __chkstk_darwin(v172);
  uint64_t v160 = (char *)&v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CFBAC(0, &qword_100162B38, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v173 = v6;
  __chkstk_darwin(v6);
  uint64_t v174 = (uint64_t)&v153 - v7;
  sub_1000CF32C(0, &qword_100162B40, (uint64_t (*)(uint64_t))type metadata accessor for LargeDetailWithNewsContentView, (uint64_t (*)(uint64_t))type metadata accessor for LargeDetailContentView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v166 = v8;
  __chkstk_darwin(v8);
  uint64_t v169 = (uint64_t)&v153 - v9;
  sub_1000CF460(0);
  uint64_t v170 = v10;
  __chkstk_darwin(v10);
  uint64_t v171 = (char *)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CF440(0);
  uint64_t v194 = v12;
  __chkstk_darwin(v12);
  uint64_t v175 = (char *)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = type metadata accessor for LargeDetailWithNewsContentView();
  __chkstk_darwin(v177);
  uint64_t v159 = (char *)&v153 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for MediumDetailContentView();
  __chkstk_darwin(v167);
  uint64_t v158 = (char *)&v153 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CF32C(0, &qword_100162B48, (uint64_t (*)(uint64_t))type metadata accessor for MediumDetailWithNewsContentView, (uint64_t (*)(uint64_t))type metadata accessor for MediumDetailContentView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v164 = v16;
  __chkstk_darwin(v16);
  uint64_t v165 = (uint64_t)&v153 - v17;
  sub_1000CF3F8(0);
  uint64_t v187 = v18;
  __chkstk_darwin(v18);
  uint64_t v168 = (char *)&v153 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = type metadata accessor for MediumDetailWithNewsContentView();
  __chkstk_darwin(v176);
  uint64_t v157 = (char *)&v153 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100041E44();
  __chkstk_darwin(v21 - 8);
  uint64_t v162 = (uint64_t)&v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for SmallDetailContentView();
  __chkstk_darwin(v181);
  uint64_t v24 = (char *)&v153 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v163 = (uint64_t)&v153 - v26;
  sub_1000CF32C(0, &qword_100162B50, (uint64_t (*)(uint64_t))sub_1000CF2E4, (uint64_t (*)(uint64_t))sub_1000CF440, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v189 = v27;
  __chkstk_darwin(v27);
  uint64_t v190 = (uint64_t)&v153 - v28;
  sub_1000CF32C(0, &qword_100162B58, (uint64_t (*)(uint64_t))sub_1000CF3B0, (uint64_t (*)(uint64_t))sub_1000CF3F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v183 = v29;
  __chkstk_darwin(v29);
  uint64_t v185 = (uint64_t)&v153 - v30;
  sub_1000CF32C(0, &qword_100162B60, (uint64_t (*)(uint64_t))type metadata accessor for SmallDetailWithNewsContentView, (uint64_t (*)(uint64_t))type metadata accessor for SmallDetailContentView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v178 = v31;
  __chkstk_darwin(v31);
  uint64_t v179 = (uint64_t)&v153 - v32;
  sub_1000CF3B0(0);
  uint64_t v184 = v33;
  __chkstk_darwin(v33);
  char v180 = (char *)&v153 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CF2E4(0);
  uint64_t v188 = v35;
  __chkstk_darwin(v35);
  char v186 = (char *)&v153 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for SmallDetailWithNewsContentView();
  __chkstk_darwin(v182);
  uint64_t v161 = (char *)&v153 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005A9D8();
  uint64_t v39 = v38;
  uint64_t v196 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v197 = (uint64_t)&v153 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CFC14();
  uint64_t v42 = v41 - 8;
  __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v153 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1001258F0();
  uint64_t v46 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v154 = (uint64_t)&v153 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)&v153 - v49;
  uint64_t v156 = v3;
  sub_10005EEE4((uint64_t)&v153 - v49);
  uint64_t v51 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v52 = a1 + v51[11];
  uint64_t v53 = (uint64_t)&v44[*(int *)(v42 + 56)];
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v44, v50, v45);
  sub_1000CFC88(v52, v53, (uint64_t (*)(void))sub_100029100);
  uint64_t v191 = v44;
  uint64_t v192 = v46;
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t))(v46 + 88);
  uint64_t v193 = v45;
  int v55 = v54(v44, v45);
  if (v55 == enum case for WidgetFamily.systemSmall(_:))
  {
    uint64_t v56 = v196;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v196 + 48))(v53, 1, v39) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v197, v53, v39);
      uint64_t v93 = *(void *)(a1 + 8);
      uint64_t v177 = *(void *)a1;
      uint64_t v94 = *(void *)(a1 + 24);
      uint64_t v176 = *(void *)(a1 + 16);
      uint64_t v95 = *(void *)(a1 + 48);
      uint64_t v96 = *(void *)(a1 + 56);
      uint64_t v97 = *(void *)(a1 + 64);
      uint64_t v98 = *(void *)(a1 + 72);
      uint64_t v99 = a1 + v51[9];
      uint64_t v100 = (uint64_t)v161;
      char v101 = *(unsigned char *)(a1 + 137);
      sub_1000CFC88(v99, (uint64_t)&v161[*(int *)(v182 + 28)], (uint64_t (*)(void))sub_100041E44);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000321B8(v95, v96, v97, v98);
      sub_1001243F0();
      *(void *)uint64_t v100 = v177;
      *(void *)(v100 + 8) = v93;
      *(void *)(v100 + 16) = v176;
      *(void *)(v100 + 24) = v94;
      *(void *)(v100 + 32) = v95;
      *(void *)(v100 + 40) = v96;
      *(void *)(v100 + 48) = v97;
      *(void *)(v100 + 56) = v98;
      *(unsigned char *)(v100 + 64) = v101;
      sub_1000CFC88(v100, v179, (uint64_t (*)(void))type metadata accessor for SmallDetailWithNewsContentView);
      swift_storeEnumTagMultiPayload();
      sub_1000C69C4(&qword_100162AC0, (void (*)(uint64_t))type metadata accessor for SmallDetailWithNewsContentView);
      sub_1000C69C4(&qword_100162AC8, (void (*)(uint64_t))type metadata accessor for SmallDetailContentView);
      uint64_t v102 = (uint64_t)v180;
      sub_100124F80();
      sub_1000CFC88(v102, v185, (uint64_t (*)(void))sub_1000CF3B0);
      swift_storeEnumTagMultiPayload();
      sub_1000CF5DC();
      sub_1000CF6B4();
      uint64_t v103 = (uint64_t)v186;
      sub_100124F80();
      sub_1000C9B38(v102, (uint64_t (*)(void))sub_1000CF3B0);
      sub_1000CFC88(v103, v190, (uint64_t (*)(void))sub_1000CF2E4);
      swift_storeEnumTagMultiPayload();
      sub_1000CF564();
      sub_1000CF78C();
      sub_100124F80();
      sub_1000C9B38(v103, (uint64_t (*)(void))sub_1000CF2E4);
      sub_1000C9B38(v100, (uint64_t (*)(void))type metadata accessor for SmallDetailWithNewsContentView);
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v197, v39);
      return (*(uint64_t (**)(char *, uint64_t))(v192 + 8))(v191, v193);
    }
    uint64_t v57 = *(void *)(a1 + 8);
    uint64_t v175 = *(char **)a1;
    uint64_t v176 = v57;
    uint64_t v58 = *(void *)(a1 + 24);
    uint64_t v174 = *(void *)(a1 + 16);
    uint64_t v177 = v58;
    uint64_t v59 = *(void *)(a1 + 40);
    uint64_t v173 = *(void *)(a1 + 32);
    uint64_t v61 = *(void *)(a1 + 48);
    uint64_t v60 = *(void *)(a1 + 56);
    uint64_t v63 = *(void *)(a1 + 64);
    uint64_t v62 = *(void *)(a1 + 72);
    uint64_t v196 = v59;
    uint64_t v197 = v63;
    uint64_t v165 = v62;
    LODWORD(v172) = *(unsigned __int8 *)(a1 + 137);
    uint64_t v171 = *(char **)(a1 + 80);
    LODWORD(v170) = *(unsigned __int8 *)(a1 + 88);
    uint64_t v64 = *(void *)(a1 + 104);
    uint64_t v169 = *(void *)(a1 + 96);
    uint64_t v168 = *(char **)(a1 + 112);
    LODWORD(v167) = *(unsigned __int8 *)(a1 + 120);
    uint64_t v166 = *(void *)(a1 + 128);
    uint64_t v65 = a1 + v51[9];
    char v66 = *(unsigned char *)(a1 + 136);
    uint64_t v67 = v162;
    sub_1000CFC88(v65, v162, (uint64_t (*)(void))sub_100041E44);
    *(void *)uint64_t v24 = swift_getKeyPath();
    *((void *)v24 + 1) = 0;
    *((void *)v24 + 2) = 0;
    *((void *)v24 + 3) = 0;
    *((void *)v24 + 5) = v175;
    *((void *)v24 + 6) = v57;
    *((void *)v24 + 7) = v174;
    *((void *)v24 + 8) = v58;
    *((void *)v24 + 9) = v173;
    *((void *)v24 + 10) = v59;
    *((void *)v24 + 11) = v61;
    *((void *)v24 + 12) = v60;
    *((void *)v24 + 13) = v63;
    uint64_t v68 = v165;
    *((void *)v24 + 14) = v165;
    v24[120] = v172;
    *((void *)v24 + 16) = v171;
    v24[136] = v170;
    *((void *)v24 + 18) = v169;
    *((void *)v24 + 19) = v64;
    *((void *)v24 + 20) = v168;
    v24[168] = v167;
    *((void *)v24 + 22) = v166;
    v24[184] = v66;
    uint64_t v69 = (uint64_t)&v24[*(int *)(v181 + 40)];
    v24[32] = 0;
    sub_1000CC3DC(v67, v69, (uint64_t (*)(void))sub_100041E44);
    uint64_t v70 = v163;
    sub_1000CC3DC((uint64_t)v24, v163, (uint64_t (*)(void))type metadata accessor for SmallDetailContentView);
    sub_1000CFC88(v70, v179, (uint64_t (*)(void))type metadata accessor for SmallDetailContentView);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000321B8(v61, v60, v197, v68);
    sub_1000C69C4(&qword_100162AC0, (void (*)(uint64_t))type metadata accessor for SmallDetailWithNewsContentView);
    sub_1000C69C4(&qword_100162AC8, (void (*)(uint64_t))type metadata accessor for SmallDetailContentView);
    swift_bridgeObjectRetain();
    uint64_t v71 = (uint64_t)v180;
    sub_100124F80();
    sub_1000CFC88(v71, v185, (uint64_t (*)(void))sub_1000CF3B0);
    swift_storeEnumTagMultiPayload();
    sub_1000CF5DC();
    sub_1000CF6B4();
    uint64_t v72 = (uint64_t)v186;
    sub_100124F80();
    sub_1000C9B38(v71, (uint64_t (*)(void))sub_1000CF3B0);
    sub_1000CFC88(v72, v190, (uint64_t (*)(void))sub_1000CF2E4);
    swift_storeEnumTagMultiPayload();
    sub_1000CF564();
    sub_1000CF78C();
    sub_100124F80();
    sub_1000C9B38(v72, (uint64_t (*)(void))sub_1000CF2E4);
    uint64_t v73 = type metadata accessor for SmallDetailContentView;
    uint64_t v74 = v70;
LABEL_12:
    sub_1000C9B38(v74, (uint64_t (*)(void))v73);
    return (*(uint64_t (**)(char *, uint64_t))(v192 + 8))(v191, v193);
  }
  uint64_t v75 = v196;
  if (v55 == enum case for WidgetFamily.systemMedium(_:))
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v196 + 48))(v53, 1, v39) == 1)
    {
      uint64_t v181 = *(void *)a1;
      uint64_t v166 = *(void *)(a1 + 8);
      uint64_t v76 = *(char **)(a1 + 16);
      uint64_t v182 = *(void *)(a1 + 24);
      uint64_t v77 = v182;
      uint64_t v78 = *(void *)(a1 + 40);
      uint64_t v179 = *(void *)(a1 + 32);
      char v180 = v76;
      uint64_t v79 = *(void *)(a1 + 48);
      uint64_t v169 = *(void *)(a1 + 56);
      uint64_t v80 = *(void *)(a1 + 72);
      uint64_t v196 = *(void *)(a1 + 64);
      uint64_t v81 = v196;
      uint64_t v170 = v80;
      LODWORD(v178) = *(unsigned __int8 *)(a1 + 137);
      uint64_t v177 = *(void *)(a1 + 80);
      LODWORD(v175) = *(unsigned __int8 *)(a1 + 88);
      uint64_t v82 = *(void *)(a1 + 104);
      uint64_t v174 = *(void *)(a1 + 96);
      uint64_t v173 = *(void *)(a1 + 112);
      LODWORD(v172) = *(unsigned __int8 *)(a1 + 120);
      uint64_t v171 = *(char **)(a1 + 128);
      uint64_t v83 = v167;
      uint64_t v84 = (uint64_t)v158;
      char v85 = *(unsigned char *)(a1 + 136);
      sub_1000CFC88(a1 + v51[9], (uint64_t)&v158[*(int *)(v167 + 36)], (uint64_t (*)(void))sub_100041E44);
      uint64_t v197 = *(void *)(a1 + v51[10]);
      uint64_t v86 = v197;
      uint64_t v87 = v166;
      *(void *)uint64_t v84 = v181;
      *(void *)(v84 + 8) = v87;
      *(void *)(v84 + 16) = v180;
      *(void *)(v84 + 24) = v77;
      *(void *)(v84 + 32) = v179;
      *(void *)(v84 + 40) = v78;
      uint64_t v88 = v169;
      *(void *)(v84 + 48) = v79;
      *(void *)(v84 + 56) = v88;
      *(void *)(v84 + 64) = v81;
      uint64_t v89 = v170;
      *(void *)(v84 + 72) = v170;
      *(unsigned char *)(v84 + 80) = v178;
      *(void *)(v84 + 88) = v177;
      *(unsigned char *)(v84 + 96) = (_BYTE)v175;
      *(void *)(v84 + 104) = v174;
      *(void *)(v84 + 112) = v82;
      *(void *)(v84 + 120) = v173;
      *(unsigned char *)(v84 + 128) = v172;
      *(void *)(v84 + 136) = v171;
      *(unsigned char *)(v84 + 144) = v85;
      *(void *)(v84 + *(int *)(v83 + 40)) = v86;
      sub_1000CFC88(v84, v165, (uint64_t (*)(void))type metadata accessor for MediumDetailContentView);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000321B8(v79, v88, v196, v89);
      sub_1000C69C4(&qword_100162AD8, (void (*)(uint64_t))type metadata accessor for MediumDetailWithNewsContentView);
      sub_1000C69C4(&qword_100162AE0, (void (*)(uint64_t))type metadata accessor for MediumDetailContentView);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v90 = (uint64_t)v168;
      sub_100124F80();
      sub_1000CFC88(v90, v185, (uint64_t (*)(void))sub_1000CF3F8);
      swift_storeEnumTagMultiPayload();
      sub_1000CF5DC();
      sub_1000CF6B4();
      uint64_t v91 = (uint64_t)v186;
      sub_100124F80();
      sub_1000C9B38(v90, (uint64_t (*)(void))sub_1000CF3F8);
      sub_1000CFC88(v91, v190, (uint64_t (*)(void))sub_1000CF2E4);
      swift_storeEnumTagMultiPayload();
      sub_1000CF564();
      sub_1000CF78C();
      sub_100124F80();
      sub_1000C9B38(v91, (uint64_t (*)(void))sub_1000CF2E4);
      uint64_t v92 = type metadata accessor for MediumDetailContentView;
LABEL_11:
      uint64_t v73 = v92;
      uint64_t v74 = v84;
      goto LABEL_12;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v197, v53, v39);
    uint64_t v153 = v39;
    uint64_t v182 = *(void *)a1;
    uint64_t v169 = *(void *)(a1 + 8);
    uint64_t v118 = *(void *)(a1 + 16);
    uint64_t v119 = *(void *)(a1 + 24);
    uint64_t v120 = *(void *)(a1 + 40);
    char v180 = *(char **)(a1 + 32);
    uint64_t v181 = v118;
    uint64_t v121 = *(void *)(a1 + 48);
    uint64_t v122 = *(void *)(a1 + 56);
    uint64_t v123 = *(void *)(a1 + 64);
    uint64_t v170 = *(void *)(a1 + 72);
    LODWORD(v179) = *(unsigned __int8 *)(a1 + 137);
    uint64_t v178 = *(void *)(a1 + 80);
    LODWORD(v177) = *(unsigned __int8 *)(a1 + 88);
    uint64_t v175 = *(char **)(a1 + 96);
    uint64_t v171 = *(char **)(a1 + 104);
    uint64_t v174 = *(void *)(a1 + 112);
    LODWORD(v173) = *(unsigned __int8 *)(a1 + 120);
    uint64_t v172 = *(void *)(a1 + 128);
    uint64_t v124 = a1 + v51[9];
    uint64_t v125 = v176;
    uint64_t v126 = (uint64_t)v157;
    uint64_t v127 = (uint64_t)&v157[*(int *)(v176 + 36)];
    LODWORD(v166) = *(unsigned __int8 *)(a1 + 136);
    sub_1000CFC88(v124, v127, (uint64_t (*)(void))sub_100041E44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v126 + *(int *)(v125 + 40), v197, v39);
    uint64_t v128 = v169;
    *(void *)uint64_t v126 = v182;
    *(void *)(v126 + 8) = v128;
    *(void *)(v126 + 16) = v181;
    *(void *)(v126 + 24) = v119;
    *(void *)(v126 + 32) = v180;
    *(void *)(v126 + 40) = v120;
    *(void *)(v126 + 48) = v121;
    *(void *)(v126 + 56) = v122;
    uint64_t v129 = v170;
    *(void *)(v126 + 64) = v123;
    *(void *)(v126 + 72) = v129;
    *(unsigned char *)(v126 + 80) = v179;
    *(void *)(v126 + 88) = v178;
    *(unsigned char *)(v126 + 96) = v177;
    uint64_t v130 = v171;
    *(void *)(v126 + 104) = v175;
    *(void *)(v126 + 112) = v130;
    *(void *)(v126 + 120) = v174;
    *(unsigned char *)(v126 + 128) = v173;
    *(void *)(v126 + 136) = v172;
    *(unsigned char *)(v126 + 144) = v166;
    sub_1000CFC88(v126, v165, (uint64_t (*)(void))type metadata accessor for MediumDetailWithNewsContentView);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000321B8(v121, v122, v123, v129);
    sub_1000C69C4(&qword_100162AD8, (void (*)(uint64_t))type metadata accessor for MediumDetailWithNewsContentView);
    sub_1000C69C4(&qword_100162AE0, (void (*)(uint64_t))type metadata accessor for MediumDetailContentView);
    swift_bridgeObjectRetain();
    uint64_t v131 = (uint64_t)v168;
    sub_100124F80();
    sub_1000CFC88(v131, v185, (uint64_t (*)(void))sub_1000CF3F8);
    swift_storeEnumTagMultiPayload();
    sub_1000CF5DC();
    sub_1000CF6B4();
    uint64_t v132 = (uint64_t)v186;
    sub_100124F80();
    sub_1000C9B38(v131, (uint64_t (*)(void))sub_1000CF3F8);
    sub_1000CFC88(v132, v190, (uint64_t (*)(void))sub_1000CF2E4);
    swift_storeEnumTagMultiPayload();
    sub_1000CF564();
    sub_1000CF78C();
    sub_100124F80();
    sub_1000C9B38(v132, (uint64_t (*)(void))sub_1000CF2E4);
    uint64_t v133 = type metadata accessor for MediumDetailWithNewsContentView;
    goto LABEL_15;
  }
  if (v55 == enum case for WidgetFamily.systemLarge(_:))
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v196 + 48))(v53, 1, v39) == 1)
    {
      uint64_t v104 = *(void *)a1;
      uint64_t v105 = *(void *)(a1 + 8);
      uint64_t v106 = *(void *)(a1 + 24);
      char v186 = *(char **)(a1 + 16);
      uint64_t v187 = v104;
      uint64_t v196 = v105;
      uint64_t v197 = v106;
      uint64_t v185 = *(void *)(a1 + 32);
      uint64_t v107 = *(void *)(a1 + 48);
      uint64_t v167 = *(void *)(a1 + 40);
      uint64_t v108 = *(void *)(a1 + 56);
      uint64_t v168 = *(char **)(a1 + 64);
      LODWORD(v184) = *(unsigned __int8 *)(a1 + 137);
      uint64_t v109 = *(void *)(a1 + 72);
      uint64_t v183 = *(void *)(a1 + 80);
      LODWORD(v182) = *(unsigned __int8 *)(a1 + 88);
      uint64_t v181 = *(void *)(a1 + 96);
      uint64_t v176 = *(void *)(a1 + 104);
      char v180 = *(char **)(a1 + 112);
      LODWORD(v179) = *(unsigned __int8 *)(a1 + 120);
      uint64_t v178 = *(void *)(a1 + 128);
      uint64_t v110 = v172;
      uint64_t v84 = (uint64_t)v160;
      char v111 = *(unsigned char *)(a1 + 136);
      sub_1000CFC88(a1 + v51[9], (uint64_t)&v160[*(int *)(v172 + 36)], (uint64_t (*)(void))sub_100041E44);
      uint64_t v112 = *(void *)(a1 + v51[10]);
      *(void *)uint64_t v84 = v187;
      *(void *)(v84 + 8) = v105;
      *(void *)(v84 + 16) = v186;
      *(void *)(v84 + 24) = v106;
      uint64_t v113 = v167;
      *(void *)(v84 + 32) = v185;
      *(void *)(v84 + 40) = v113;
      *(void *)(v84 + 48) = v107;
      *(void *)(v84 + 56) = v108;
      uint64_t v114 = (uint64_t)v168;
      *(void *)(v84 + 64) = v168;
      *(void *)(v84 + 72) = v109;
      *(unsigned char *)(v84 + 80) = v184;
      *(void *)(v84 + 88) = v183;
      *(unsigned char *)(v84 + 96) = v182;
      uint64_t v115 = v176;
      *(void *)(v84 + 104) = v181;
      *(void *)(v84 + 112) = v115;
      *(void *)(v84 + 120) = v180;
      *(unsigned char *)(v84 + 128) = v179;
      *(void *)(v84 + 136) = v178;
      *(unsigned char *)(v84 + 144) = v111;
      *(void *)(v84 + *(int *)(v110 + 40)) = v112;
      sub_1000CFC88(v84, v169, (uint64_t (*)(void))type metadata accessor for LargeDetailContentView);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000321B8(v107, v108, v114, v109);
      sub_1000C69C4(&qword_100162AF8, (void (*)(uint64_t))type metadata accessor for LargeDetailWithNewsContentView);
      sub_1000C69C4(&qword_100162B00, (void (*)(uint64_t))type metadata accessor for LargeDetailContentView);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v116 = (uint64_t)v171;
      sub_100124F80();
      sub_1000CFC88(v116, v174, (uint64_t (*)(void))sub_1000CF460);
      swift_storeEnumTagMultiPayload();
      sub_1000CF804();
      uint64_t v117 = (uint64_t)v175;
      sub_100124F80();
      sub_1000C9B38(v116, (uint64_t (*)(void))sub_1000CF460);
      sub_1000CFC88(v117, v190, (uint64_t (*)(void))sub_1000CF440);
      swift_storeEnumTagMultiPayload();
      sub_1000CF564();
      sub_1000CF78C();
      sub_100124F80();
      sub_1000C9B38(v117, (uint64_t (*)(void))sub_1000CF440);
      uint64_t v92 = type metadata accessor for LargeDetailContentView;
      goto LABEL_11;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v197, v53, v39);
    uint64_t v187 = *(void *)a1;
    uint64_t v165 = *(void *)(a1 + 8);
    uint64_t v134 = *(void *)(a1 + 24);
    char v186 = *(char **)(a1 + 16);
    uint64_t v135 = v39;
    uint64_t v153 = v39;
    uint64_t v136 = *(void *)(a1 + 40);
    uint64_t v185 = *(void *)(a1 + 32);
    uint64_t v137 = *(void *)(a1 + 48);
    uint64_t v138 = *(void *)(a1 + 56);
    uint64_t v168 = *(char **)(a1 + 64);
    uint64_t v167 = *(void *)(a1 + 72);
    LODWORD(v184) = *(unsigned __int8 *)(a1 + 137);
    uint64_t v183 = *(void *)(a1 + 80);
    LODWORD(v182) = *(unsigned __int8 *)(a1 + 88);
    uint64_t v181 = *(void *)(a1 + 96);
    uint64_t v176 = *(void *)(a1 + 104);
    char v180 = *(char **)(a1 + 112);
    LODWORD(v179) = *(unsigned __int8 *)(a1 + 120);
    uint64_t v178 = *(void *)(a1 + 128);
    uint64_t v139 = a1 + v51[9];
    uint64_t v140 = v177;
    uint64_t v126 = (uint64_t)v159;
    uint64_t v141 = (uint64_t)&v159[*(int *)(v177 + 36)];
    LODWORD(v164) = *(unsigned __int8 *)(a1 + 136);
    sub_1000CFC88(v139, v141, (uint64_t (*)(void))sub_100041E44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v126 + *(int *)(v140 + 40), v197, v135);
    uint64_t v142 = v165;
    *(void *)uint64_t v126 = v187;
    *(void *)(v126 + 8) = v142;
    *(void *)(v126 + 16) = v186;
    *(void *)(v126 + 24) = v134;
    *(void *)(v126 + 32) = v185;
    *(void *)(v126 + 40) = v136;
    uint64_t v143 = v137;
    *(void *)(v126 + 48) = v137;
    *(void *)(v126 + 56) = v138;
    uint64_t v144 = v138;
    uint64_t v145 = (uint64_t)v168;
    uint64_t v146 = v167;
    *(void *)(v126 + 64) = v168;
    *(void *)(v126 + 72) = v146;
    *(unsigned char *)(v126 + 80) = v184;
    *(void *)(v126 + 88) = v183;
    *(unsigned char *)(v126 + 96) = v182;
    uint64_t v147 = v176;
    *(void *)(v126 + 104) = v181;
    *(void *)(v126 + 112) = v147;
    *(void *)(v126 + 120) = v180;
    *(unsigned char *)(v126 + 128) = v179;
    *(void *)(v126 + 136) = v178;
    *(unsigned char *)(v126 + 144) = v164;
    sub_1000CFC88(v126, v169, (uint64_t (*)(void))type metadata accessor for LargeDetailWithNewsContentView);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000321B8(v143, v144, v145, v146);
    sub_1000C69C4(&qword_100162AF8, (void (*)(uint64_t))type metadata accessor for LargeDetailWithNewsContentView);
    sub_1000C69C4(&qword_100162B00, (void (*)(uint64_t))type metadata accessor for LargeDetailContentView);
    swift_bridgeObjectRetain();
    uint64_t v148 = (uint64_t)v171;
    sub_100124F80();
    sub_1000CFC88(v148, v174, (uint64_t (*)(void))sub_1000CF460);
    swift_storeEnumTagMultiPayload();
    sub_1000CF804();
    uint64_t v149 = (uint64_t)v175;
    sub_100124F80();
    sub_1000C9B38(v148, (uint64_t (*)(void))sub_1000CF460);
    sub_1000CFC88(v149, v190, (uint64_t (*)(void))sub_1000CF440);
    swift_storeEnumTagMultiPayload();
    sub_1000CF564();
    sub_1000CF78C();
    sub_100124F80();
    sub_1000C9B38(v149, (uint64_t (*)(void))sub_1000CF440);
    uint64_t v133 = type metadata accessor for LargeDetailWithNewsContentView;
LABEL_15:
    sub_1000C9B38(v126, (uint64_t (*)(void))v133);
    (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v197, v153);
    return (*(uint64_t (**)(char *, uint64_t))(v192 + 8))(v191, v193);
  }
  sub_1000CFC88(a1, v155, type metadata accessor for DetailContentView);
  uint64_t v198 = 0;
  unint64_t v199 = 0xE000000000000000;
  sub_1001260E0(52);
  v200._object = (void *)0x80000001001327D0;
  v200._countAndFlagsBits = 0xD000000000000023;
  sub_100125BB0(v200);
  uint64_t v151 = v154;
  sub_10005EEE4(v154);
  sub_1000C69C4(&qword_10015E790, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  uint64_t v152 = v193;
  v201._countAndFlagsBits = sub_1001264F0();
  sub_100125BB0(v201);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v192 + 8))(v151, v152);
  v202._countAndFlagsBits = 0x2074656764697720;
  v202._object = (void *)0xEF2E796C696D6166;
  sub_100125BB0(v202);
  uint64_t result = sub_100126290();
  __break(1u);
  return result;
}

unint64_t sub_1000CC28C()
{
  unint64_t result = qword_100162900;
  if (!qword_100162900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162900);
  }
  return result;
}

unint64_t sub_1000CC2E0()
{
  unint64_t result = qword_100162908;
  if (!qword_100162908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162908);
  }
  return result;
}

unint64_t sub_1000CC334()
{
  unint64_t result = qword_100162910;
  if (!qword_100162910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162910);
  }
  return result;
}

unint64_t sub_1000CC388()
{
  unint64_t result = qword_100162918;
  if (!qword_100162918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162918);
  }
  return result;
}

uint64_t sub_1000CC3DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1000CC444()
{
  if (!qword_10015E560)
  {
    unint64_t v0 = sub_100125D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015E560);
    }
  }
}

unint64_t sub_1000CC49C()
{
  unint64_t result = qword_100162930;
  if (!qword_100162930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162930);
  }
  return result;
}

uint64_t sub_1000CC4F0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000CC560()
{
  return sub_1000CC4F0(&qword_100162940, sub_10002919C, (void (*)(void))sub_1000CC5A8);
}

uint64_t sub_1000CC5A8()
{
  return sub_1000C69C4(&qword_100162948, (void (*)(uint64_t))type metadata accessor for HeadlineViewModel);
}

void sub_1000CC5DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1000CC28C();
    unint64_t v7 = a3(a1, &type metadata for DetailContentViewModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1000CC640()
{
  unint64_t result = qword_100162960;
  if (!qword_100162960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162960);
  }
  return result;
}

unint64_t sub_1000CC694()
{
  unint64_t result = qword_100162968;
  if (!qword_100162968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162968);
  }
  return result;
}

unint64_t sub_1000CC6E8()
{
  unint64_t result = qword_100162970;
  if (!qword_100162970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162970);
  }
  return result;
}

unint64_t sub_1000CC73C()
{
  unint64_t result = qword_100162988;
  if (!qword_100162988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162988);
  }
  return result;
}

uint64_t sub_1000CC790()
{
  return sub_1000CC4F0(&qword_100162998, sub_10002919C, (void (*)(void))sub_1000CC7D8);
}

uint64_t sub_1000CC7D8()
{
  return sub_1000C69C4(&qword_1001629A0, (void (*)(uint64_t))type metadata accessor for HeadlineViewModel);
}

uint64_t getEnumTagSinglePayload for DetailContentViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DetailContentViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000CC968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailContentViewModel.CodingKeys()
{
  return &type metadata for DetailContentViewModel.CodingKeys;
}

uint64_t sub_1000CC9A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = (_OWORD *)(a1 + 48);
    uint64_t v10 = a2 + 6;
    uint64_t v11 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 == 1)
    {
      long long v12 = *((_OWORD *)a2 + 4);
      *uint64_t v9 = *v10;
      *(_OWORD *)(a1 + 64) = v12;
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v11;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v14 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v14;
    *(void *)(a1 + 112) = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 128) = a2[16];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(unsigned char *)(a1 + 137) = *((unsigned char *)a2 + 137);
    uint64_t v56 = (int *)type metadata accessor for DetailContentViewModel(0);
    uint64_t v15 = v56[9];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v19 = *((void *)v18 - 1);
    uint64_t v20 = *(unsigned int (**)(void *, uint64_t, int *))(v19 + 48);
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      sub_100041E44();
      memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *uint64_t v16 = *v17;
      uint64_t v22 = v18[5];
      int v55 = (char *)v16 + v22;
      uint64_t v23 = (char *)v17 + v22;
      uint64_t v24 = sub_1001232B0();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v55, v23, v24);
      sub_10002FE38();
      v25(&v55[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v24);
      uint64_t v27 = v18[6];
      uint64_t v28 = (char *)v16 + v27;
      uint64_t v29 = (char *)v17 + v27;
      uint64_t v30 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
      uint64_t v31 = v18[8];
      uint64_t v32 = (char *)v16 + v31;
      uint64_t v33 = (char *)v17 + v31;
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v33[8];
      *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
    }
    *(void *)(a1 + v56[10]) = *(uint64_t *)((char *)a2 + v56[10]);
    uint64_t v34 = v56[11];
    uint64_t v35 = (void *)(a1 + v34);
    uint64_t v36 = (char *)a2 + v34;
    sub_10005A9D8();
    uint64_t v38 = v37;
    uint64_t v39 = *(void *)(v37 - 8);
    uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    if (v40(v36, 1, v38))
    {
      sub_100029100();
      memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v35, v36, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v38);
    }
    uint64_t v42 = v56[12];
    uint64_t v43 = (void *)(a1 + v42);
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = sub_100123150();
    uint64_t v46 = *(void *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      sub_10009EAD4(0);
      memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    uint64_t v48 = *(int *)(a3 + 20);
    long long v49 = *(_OWORD *)((char *)a2 + v48 + 24);
    *(_OWORD *)(a1 + v48 + 24) = v49;
    (**(void (***)(void))(v49 - 8))();
    uint64_t v50 = *(int *)(a3 + 24);
    uint64_t v51 = (void *)(a1 + v50);
    uint64_t v52 = (uint64_t *)((char *)a2 + v50);
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v53 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
    }
    else
    {
      *uint64_t v51 = *v52;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000CCF74(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  unsigned int v4 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v5 = a1 + v4[9];
  uint64_t v6 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = sub_1001232B0();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v7, v8);
    sub_10002FE38();
    v9(v7 + *(int *)(v10 + 36), v8);
    uint64_t v11 = v5 + *(int *)(v6 + 24);
    uint64_t v12 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + v4[11];
  sub_10005A9D8();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  }
  uint64_t v17 = a1 + v4[12];
  uint64_t v18 = sub_100123150();
  uint64_t v19 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  sub_100009D48(a1 + *(int *)(a2 + 20));
  uint64_t v20 = a1 + *(int *)(a2 + 24);
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = sub_1001258F0();
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
    return v22(v20, v21);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1000CD2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = (_OWORD *)(a1 + 48);
  uint64_t v9 = a2 + 48;
  uint64_t v10 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    long long v11 = *(_OWORD *)(v9 + 16);
    *uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(a1 + 64) = v11;
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(v9 + 8);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v10;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  int v55 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v13 = v55[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(unsigned int (**)(void *, uint64_t, int *))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    sub_100041E44();
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *uint64_t v14 = *v15;
    uint64_t v20 = v16[5];
    uint64_t v53 = (char *)v14 + v20;
    uint64_t v21 = (char *)v15 + v20;
    uint64_t v22 = sub_1001232B0();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v53, v21, v22);
    sub_10002FE38();
    v23(&v53[*(int *)(v24 + 36)], &v21[*(int *)(v24 + 36)], v22);
    uint64_t v25 = v16[6];
    uint64_t v26 = (char *)v14 + v25;
    uint64_t v27 = (char *)v15 + v25;
    uint64_t v28 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
    uint64_t v29 = v16[8];
    uint64_t v30 = (char *)v14 + v29;
    uint64_t v31 = (char *)v15 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  *(void *)(a1 + v55[10]) = *(void *)(a2 + v55[10]);
  uint64_t v32 = v55[11];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  sub_10005A9D8();
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 - 8);
  uint64_t v38 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  if (v38(v34, 1, v36))
  {
    sub_100029100();
    memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 16))(v33, v34, v36);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  uint64_t v40 = v55[12];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  uint64_t v43 = sub_100123150();
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    sub_10009EAD4(0);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v41, v42, v43);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  uint64_t v46 = *(int *)(a3 + 20);
  long long v47 = *(_OWORD *)(a2 + v46 + 24);
  *(_OWORD *)(a1 + v46 + 24) = v47;
  (**(void (***)(void))(v47 - 8))();
  uint64_t v48 = *(int *)(a3 + 24);
  long long v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v51 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  else
  {
    *long long v49 = *v50;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000CD824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) == 1)
  {
    if (v7 == 1)
    {
      long long v8 = *(_OWORD *)(a2 + 64);
      *uint64_t v5 = *v6;
      *(_OWORD *)(a1 + 64) = v8;
    }
    else
    {
      uint64_t v10 = *(void *)v6;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)uint64_t v5 = v10;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_10003088C(a1 + 48);
    long long v9 = *(_OWORD *)(a2 + 64);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    uint64_t v11 = *(void *)v6;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)uint64_t v5 = v11;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v13;
  uint64_t v14 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v14;
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  uint64_t v80 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v15 = v80[9];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      *uint64_t v16 = *v17;
      uint64_t v23 = v18[5];
      uint64_t v77 = (char *)v16 + v23;
      uint64_t v78 = (char *)v17 + v23;
      uint64_t v24 = sub_1001232B0();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v77, v78, v24);
      sub_10002FE38();
      v25(&v77[*(int *)(v26 + 36)], &v78[*(int *)(v26 + 36)], v24);
      uint64_t v27 = v18[6];
      uint64_t v28 = (char *)v16 + v27;
      uint64_t v29 = (char *)v17 + v27;
      uint64_t v30 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
      uint64_t v31 = v18[8];
      uint64_t v32 = (char *)v16 + v31;
      uint64_t v33 = (char *)v17 + v31;
      char v34 = v33[8];
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v34;
      *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v22)
  {
    sub_1000C9B38((uint64_t)v16, type metadata accessor for PreparedSparkline);
LABEL_13:
    sub_100041E44();
    memcpy(v16, v17, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  *uint64_t v16 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v60 = v18[5];
  uint64_t v61 = (char *)v16 + v60;
  uint64_t v62 = (char *)v17 + v60;
  uint64_t v63 = sub_1001232B0();
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 24);
  v64(v61, v62, v63);
  sub_10002FE38();
  v64(&v61[*(int *)(v65 + 36)], &v62[*(int *)(v65 + 36)], v63);
  uint64_t v66 = v18[6];
  uint64_t v67 = (char *)v16 + v66;
  uint64_t v68 = (char *)v17 + v66;
  uint64_t v69 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 24))(v67, v68, v69);
  uint64_t v70 = v18[7];
  uint64_t v71 = (void *)((char *)v16 + v70);
  uint64_t v72 = (void *)((char *)v17 + v70);
  *uint64_t v71 = *v72;
  v71[1] = v72[1];
  uint64_t v73 = v18[8];
  uint64_t v74 = (char *)v16 + v73;
  uint64_t v75 = (char *)v17 + v73;
  char v76 = v75[8];
  *(void *)uint64_t v74 = *(void *)v75;
  v74[8] = v76;
  *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
LABEL_14:
  *(void *)(a1 + v80[10]) = *(void *)(a2 + v80[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v36 = v80[11];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  sub_10005A9D8();
  uint64_t v40 = v39;
  uint64_t v41 = *(void *)(v39 - 8);
  uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v37, 1, v39);
  int v44 = v42(v38, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 16))(v37, v38, v40);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v37, v40);
LABEL_19:
    sub_100029100();
    memcpy(v37, v38, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v41 + 24))(v37, v38, v40);
LABEL_20:
  uint64_t v46 = v80[12];
  long long v47 = (void *)(a1 + v46);
  uint64_t v48 = (void *)(a2 + v46);
  uint64_t v49 = sub_100123150();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v50 + 48);
  int v52 = v51(v47, 1, v49);
  int v53 = v51(v48, 1, v49);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, void *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v50 + 8))(v47, v49);
LABEL_25:
    sub_10009EAD4(0);
    memcpy(v47, v48, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v50 + 24))(v47, v48, v49);
LABEL_26:
  sub_1000850CC((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  if (a1 != a2)
  {
    uint64_t v55 = *(int *)(a3 + 24);
    uint64_t v56 = (void *)(a1 + v55);
    uint64_t v57 = (void *)(a2 + v55);
    sub_1000C9B38(a1 + v55, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    }
    else
    {
      *uint64_t v56 = *v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000CE048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  long long v9 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v10 = v9[9];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    sub_100041E44();
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *uint64_t v11 = *v12;
    uint64_t v16 = v13[5];
    uint64_t v17 = (char *)v11 + v16;
    int v52 = (char *)v12 + v16;
    uint64_t v18 = sub_1001232B0();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
    v19(v17, v52, v18);
    sub_10002FE38();
    v19(&v17[*(int *)(v20 + 36)], &v52[*(int *)(v20 + 36)], v18);
    uint64_t v21 = v13[6];
    int v22 = (char *)v11 + v21;
    uint64_t v23 = (char *)v12 + v21;
    uint64_t v24 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    *(_OWORD *)((char *)v11 + v13[7]) = *(_OWORD *)((char *)v12 + v13[7]);
    uint64_t v25 = v13[8];
    uint64_t v26 = (char *)v11 + v25;
    uint64_t v27 = (char *)v12 + v25;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = v27[8];
    *((unsigned char *)v11 + v13[9]) = *((unsigned char *)v12 + v13[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  *(void *)(a1 + v9[10]) = *(void *)(a2 + v9[10]);
  uint64_t v28 = v9[11];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  sub_10005A9D8();
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
  {
    sub_100029100();
    memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v29, v30, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
  }
  uint64_t v35 = v9[12];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = sub_100123150();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_10009EAD4(0);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  uint64_t v41 = *(int *)(a3 + 20);
  uint64_t v42 = *(int *)(a3 + 24);
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  long long v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(void *)(v43 + 32) = *(void *)(v44 + 32);
  uint64_t v46 = (void *)(a1 + v42);
  long long v47 = (const void *)(a2 + v42);
  sub_10003A32C(0);
  uint64_t v49 = v48;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v50 = sub_1001258F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v46, v47, v50);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000CE518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  long long v9 = (_OWORD *)(a1 + 48);
  uint64_t v10 = (_OWORD *)(a2 + 48);
  uint64_t v81 = a3;
  if (*(void *)(a1 + 72) == 1) {
    goto LABEL_4;
  }
  uint64_t v11 = *(void *)(a2 + 72);
  if (v11 == 1)
  {
    sub_10003088C(a1 + 48);
LABEL_4:
    long long v12 = *(_OWORD *)(a2 + 64);
    *long long v9 = *v10;
    *(_OWORD *)(a1 + 64) = v12;
    goto LABEL_6;
  }
  *(void *)long long v9 = *(void *)v10;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  uint64_t v80 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v14 = v80[9];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, int *))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      *uint64_t v15 = *v16;
      uint64_t v22 = v17[5];
      uint64_t v23 = (char *)v15 + v22;
      uint64_t v78 = (char *)v15 + v22;
      uint64_t v79 = (char *)v16 + v22;
      uint64_t v24 = sub_1001232B0();
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
      v25(v23, v79, v24);
      sub_10002FE38();
      v25(&v78[*(int *)(v26 + 36)], &v79[*(int *)(v26 + 36)], v24);
      uint64_t v27 = v17[6];
      uint64_t v28 = (char *)v15 + v27;
      uint64_t v29 = (char *)v16 + v27;
      uint64_t v30 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)((char *)v15 + v17[7]) = *(_OWORD *)((char *)v16 + v17[7]);
      uint64_t v31 = v17[8];
      uint64_t v32 = (char *)v15 + v31;
      uint64_t v33 = (char *)v16 + v31;
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v33[8];
      *((unsigned char *)v15 + v17[9]) = *((unsigned char *)v16 + v17[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v21)
  {
    sub_1000C9B38((uint64_t)v15, type metadata accessor for PreparedSparkline);
LABEL_11:
    sub_100041E44();
    memcpy(v15, v16, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  *uint64_t v15 = *v16;
  swift_bridgeObjectRelease();
  uint64_t v65 = v17[5];
  uint64_t v66 = (char *)v15 + v65;
  uint64_t v67 = (char *)v16 + v65;
  uint64_t v68 = sub_1001232B0();
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 40);
  v69(v66, v67, v68);
  sub_10002FE38();
  v69(&v66[*(int *)(v70 + 36)], &v67[*(int *)(v70 + 36)], v68);
  uint64_t v71 = v17[6];
  uint64_t v72 = (char *)v15 + v71;
  uint64_t v73 = (char *)v16 + v71;
  uint64_t v74 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
  *(_OWORD *)((char *)v15 + v17[7]) = *(_OWORD *)((char *)v16 + v17[7]);
  uint64_t v75 = v17[8];
  char v76 = (char *)v15 + v75;
  uint64_t v77 = (char *)v16 + v75;
  v76[8] = v77[8];
  *(void *)char v76 = *(void *)v77;
  *((unsigned char *)v15 + v17[9]) = *((unsigned char *)v16 + v17[9]);
LABEL_12:
  *(void *)(a1 + v80[10]) = *(void *)(a2 + v80[10]);
  swift_bridgeObjectRelease();
  uint64_t v35 = v80[11];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  sub_10005A9D8();
  uint64_t v39 = v38;
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v36, 1, v38);
  int v43 = v41(v37, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v40 + 32))(v36, v37, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v36, 0, 1, v39);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v43)
  {
    (*(void (**)(void *, uint64_t))(v40 + 8))(v36, v39);
LABEL_17:
    sub_100029100();
    memcpy(v36, v37, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v40 + 40))(v36, v37, v39);
LABEL_18:
  uint64_t v45 = v80[12];
  uint64_t v46 = (void *)(a1 + v45);
  long long v47 = (void *)(a2 + v45);
  uint64_t v48 = sub_100123150();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v49 + 48);
  int v51 = v50(v46, 1, v48);
  int v52 = v50(v47, 1, v48);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, void *, uint64_t))(v49 + 32))(v46, v47, v48);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v49 + 8))(v46, v48);
LABEL_23:
    sub_10009EAD4(0);
    memcpy(v46, v47, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v49 + 40))(v46, v47, v48);
LABEL_24:
  uint64_t v54 = *(int *)(v81 + 20);
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  sub_100009D48(a1 + v54);
  long long v57 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v57;
  *(void *)(v55 + 32) = *(void *)(v56 + 32);
  if (a1 != a2)
  {
    uint64_t v58 = *(int *)(v81 + 24);
    uint64_t v59 = (void *)(a1 + v58);
    uint64_t v60 = (const void *)(a2 + v58);
    sub_1000C9B38(a1 + v58, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    uint64_t v62 = v61;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v63 = sub_1001258F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v63 - 8) + 32))(v59, v60, v63);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000CECA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000CECB8);
}

uint64_t sub_1000CECB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailContentViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_1000C6960(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1000CEE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000CEE2C);
}

uint64_t sub_1000CEE2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for DetailContentViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  else
  {
    sub_1000C6960(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for DetailContentView(uint64_t a1)
{
  return sub_100009E3C(a1, qword_100162A08);
}

void sub_1000CEFAC()
{
  type metadata accessor for DetailContentViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_10003A32C(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1000CF080()
{
  unint64_t result = qword_100162A48;
  if (!qword_100162A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162A48);
  }
  return result;
}

unint64_t sub_1000CF0D8()
{
  unint64_t result = qword_100162A50;
  if (!qword_100162A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162A50);
  }
  return result;
}

unint64_t sub_1000CF130()
{
  unint64_t result = qword_100162A58;
  if (!qword_100162A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162A58);
  }
  return result;
}

uint64_t sub_1000CF184()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000CF1A0()
{
  if (!qword_100162A60)
  {
    sub_1000CF248();
    sub_1000CC4F0(&qword_100162AA0, (void (*)(uint64_t))sub_1000CF248, (void (*)(void))sub_1000CF4A8);
    unint64_t v0 = sub_100125730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162A60);
    }
  }
}

void sub_1000CF248()
{
  if (!qword_100162A68)
  {
    sub_1000CF32C(255, &qword_100162A70, (uint64_t (*)(uint64_t))sub_1000CF2E4, (uint64_t (*)(uint64_t))sub_1000CF440, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v0 = sub_100125580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162A68);
    }
  }
}

void sub_1000CF2E4(uint64_t a1)
{
}

void sub_1000CF32C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1000CF3B0(uint64_t a1)
{
}

void sub_1000CF3F8(uint64_t a1)
{
}

void sub_1000CF440(uint64_t a1)
{
}

void sub_1000CF460(uint64_t a1)
{
}

unint64_t sub_1000CF4A8()
{
  unint64_t result = qword_100162AA8;
  if (!qword_100162AA8)
  {
    sub_1000CF32C(255, &qword_100162A70, (uint64_t (*)(uint64_t))sub_1000CF2E4, (uint64_t (*)(uint64_t))sub_1000CF440, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_1000CF564();
    sub_1000CF78C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162AA8);
  }
  return result;
}

unint64_t sub_1000CF564()
{
  unint64_t result = qword_100162AB0;
  if (!qword_100162AB0)
  {
    sub_1000CF2E4(255);
    sub_1000CF5DC();
    sub_1000CF6B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162AB0);
  }
  return result;
}

unint64_t sub_1000CF5DC()
{
  unint64_t result = qword_100162AB8;
  if (!qword_100162AB8)
  {
    sub_1000CF3B0(255);
    sub_1000C69C4(&qword_100162AC0, (void (*)(uint64_t))type metadata accessor for SmallDetailWithNewsContentView);
    sub_1000C69C4(&qword_100162AC8, (void (*)(uint64_t))type metadata accessor for SmallDetailContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162AB8);
  }
  return result;
}

unint64_t sub_1000CF6B4()
{
  unint64_t result = qword_100162AD0;
  if (!qword_100162AD0)
  {
    sub_1000CF3F8(255);
    sub_1000C69C4(&qword_100162AD8, (void (*)(uint64_t))type metadata accessor for MediumDetailWithNewsContentView);
    sub_1000C69C4(&qword_100162AE0, (void (*)(uint64_t))type metadata accessor for MediumDetailContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162AD0);
  }
  return result;
}

unint64_t sub_1000CF78C()
{
  unint64_t result = qword_100162AE8;
  if (!qword_100162AE8)
  {
    sub_1000CF440(255);
    sub_1000CF804();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162AE8);
  }
  return result;
}

unint64_t sub_1000CF804()
{
  unint64_t result = qword_100162AF0;
  if (!qword_100162AF0)
  {
    sub_1000CF460(255);
    sub_1000C69C4(&qword_100162AF8, (void (*)(uint64_t))type metadata accessor for LargeDetailWithNewsContentView);
    sub_1000C69C4(&qword_100162B00, (void (*)(uint64_t))type metadata accessor for LargeDetailContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162AF0);
  }
  return result;
}

void sub_1000CF8DC(uint64_t a1)
{
}

void sub_1000CF924()
{
  if (!qword_100162B10)
  {
    sub_1000CF8DC(255);
    sub_1000CF9A8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100162B10);
    }
  }
}

unint64_t sub_1000CF9A8()
{
  unint64_t result = qword_100162B18;
  if (!qword_100162B18)
  {
    sub_1000CF8DC(255);
    sub_1000C69C4(&qword_100162B20, (void (*)(uint64_t))sub_1000CF1A0);
    sub_1000C69C4(&qword_10015F0E8, sub_10003C8EC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162B18);
  }
  return result;
}

void sub_1000CFA80()
{
  if (!qword_100162B28)
  {
    sub_1000CF924();
    sub_1000CF8DC(255);
    sub_1000CF9A8();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100162B28);
    }
  }
}

void sub_1000CFB3C()
{
  if (!qword_100162B30)
  {
    sub_1000CF248();
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162B30);
    }
  }
}

void sub_1000CFBAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void *))
{
  if (!*a2)
  {
    sub_1000CF460(255);
    unint64_t v7 = a3(a1, v6, &type metadata for Never);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1000CFC14()
{
  if (!qword_100162B68)
  {
    sub_1001258F0();
    sub_100029100();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100162B68);
    }
  }
}

uint64_t sub_1000CFC88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000CFCF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614E6C6F626D7973 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E796E61706D6F63 && a2 == 0xEB00000000656D61 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6563697270 && a2 == 0xE500000000000000 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100132800 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E696C6B72617073 && a2 == 0xE900000000000065 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74654465746F7571 && a2 == 0xEC000000736C6961 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656E696C64616568 && a2 == 0xE900000000000073 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x52556C6F626D7973 && a2 == 0xE90000000000004CLL)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_1000D00D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000D01A8(void *a1)
{
  int v3 = v1;
  sub_1000D1660(0, &qword_100162BE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v9 = &v12[-v8];
  sub_100009D98(a1, a1[3]);
  sub_1000D160C();
  sub_100126650();
  long long v10 = v3[1];
  long long v13 = *v3;
  long long v14 = v10;
  v12[15] = 0;
  sub_1000CC694();
  sub_1001264C0();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_100126450();
    LOBYTE(v13) = 2;
    sub_100126460();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000D0364()
{
  unint64_t v1 = 0x6168436563697270;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6563697270;
  }
}

uint64_t sub_1000D03C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000D121C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000D03F0(uint64_t a1)
{
  unint64_t v2 = sub_1000D160C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000D042C(uint64_t a1)
{
  unint64_t v2 = sub_1000D160C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000D0468(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)a1 + 41);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a2 + 41);
  return sub_1000D0BF0((uint64_t)v5, (uint64_t)v7) & 1;
}

double sub_1000D04C4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000D1380(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1000D0510(void *a1)
{
  return sub_1000D01A8(a1);
}

uint64_t sub_1000D0528()
{
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, (uint64_t)v3);
  sub_100009D98(v3, v3[3]);
  sub_100037604();
  uint64_t result = sub_100124100();
  if (v2)
  {
    sub_100029474(&v1, (uint64_t)&unk_100162BB0);
    return sub_100009D48((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000D05E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v64 = a1;
  sub_1000D25D8();
  uint64_t v66 = v2;
  __chkstk_darwin(v2);
  uint64_t v65 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1001238A0();
  uint64_t v4 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s11FormatStyleVMa_0();
  uint64_t v8 = (int *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D2694();
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  __chkstk_darwin(v11);
  uint64_t v61 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PriceChangeView();
  uint64_t v58 = v1;
  uint64_t v59 = v13;
  uint64_t v14 = v1 + *(int *)(v13 + 20);
  uint64_t v15 = *(void *)(v14 + 8);
  uint64_t v16 = *(void *)(v14 + 16);
  uint64_t v17 = *(void *)(v14 + 24);
  uint64_t v51 = *(void *)v14;
  uint64_t v52 = v16;
  uint64_t v55 = v17;
  uint64_t v18 = *(void *)(v14 + 32);
  uint64_t v19 = *(void *)(v14 + 40);
  uint64_t v53 = v15;
  uint64_t v54 = v18;
  uint64_t v20 = *(void *)(v14 + 48);
  char v21 = *(unsigned char *)(v14 + 56);
  sub_1000321B8(v51, v15, v16, v17);
  sub_100060104((uint64_t)v6);
  uint64_t v22 = v60;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v10, v6, v60);
  v10[v8[7]] = 0;
  v10[v8[8]] = 0;
  v10[v8[9]] = 0;
  uint64_t v23 = &v10[v8[10]];
  uint64_t v56 = v10;
  *(void *)uint64_t v23 = 9666786;
  *((void *)v23 + 1) = 0xA300000000000000;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v22);
  uint64_t v24 = v51;
  uint64_t v25 = v52;
  uint64_t v26 = v53;
  *(void *)&long long v76 = v51;
  *((void *)&v76 + 1) = v53;
  uint64_t v27 = v55;
  *(void *)&long long v77 = v52;
  *((void *)&v77 + 1) = v55;
  *(void *)&long long v78 = v54;
  *((void *)&v78 + 1) = v19;
  uint64_t v79 = v20;
  LOBYTE(v80) = v21;
  uint64_t v28 = (uint64_t)v10;
  uint64_t v29 = v65;
  sub_1000AF204(v28, v65);
  uint64_t v30 = (void *)(v29 + *(int *)(v66 + 60));
  *uint64_t v30 = 9666786;
  v30[1] = 0xA300000000000000;
  sub_1000321B8(v24, v26, v25, v27);
  sub_1000D2AC0(&qword_100162CE8, (void (*)(uint64_t))sub_1000D25D8);
  sub_1000D2B08();
  uint64_t v31 = sub_100125330();
  uint64_t v65 = v32;
  uint64_t v66 = v31;
  LODWORD(v60) = v33;
  uint64_t v57 = v34;
  sub_1000D2BDC((uint64_t)v56, (uint64_t (*)(void))_s11FormatStyleVMa_0);
  sub_100032424(v24, v26, v25, v27);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100125250();
  sub_1001251D0();
  uint64_t v36 = sub_1001251F0();
  swift_release();
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = swift_getKeyPath();
  int v39 = *(unsigned __int8 *)(v58 + *(int *)(v59 + 24));
  if (v39 == 2)
  {
    if (qword_10015D590 != -1) {
      swift_once();
    }
    uint64_t v41 = qword_100162BC8;
    uint64_t v40 = unk_100162BD0;
    sub_100009D98(qword_100162BB0, qword_100162BC8);
    (*(void (**)(uint64_t))(*(void *)(v40 + 16) + 416))(v41);
    uint64_t v42 = v57;
  }
  else if (v39)
  {
    uint64_t v42 = v57;
    if (qword_10015D590 != -1) {
      swift_once();
    }
    uint64_t v45 = qword_100162BC8;
    uint64_t v46 = unk_100162BD0;
    sub_100009D98(qword_100162BB0, qword_100162BC8);
    (*(void (**)(uint64_t, uint64_t))(v46 + 64))(v45, v46);
  }
  else
  {
    uint64_t v42 = v57;
    if (qword_10015D590 != -1) {
      swift_once();
    }
    uint64_t v43 = qword_100162BC8;
    uint64_t v44 = unk_100162BD0;
    sub_100009D98(qword_100162BB0, qword_100162BC8);
    (*(void (**)(uint64_t, uint64_t))(v44 + 56))(v43, v44);
  }
  uint64_t v47 = sub_100125570();
  uint64_t v48 = swift_getKeyPath();
  *(void *)&long long v76 = v66;
  *((void *)&v76 + 1) = v65;
  LOBYTE(v77) = v60 & 1;
  *((void *)&v77 + 1) = v42;
  *(void *)&long long v78 = 0;
  *((void *)&v78 + 1) = KeyPath;
  uint64_t v79 = 0;
  uint64_t v80 = 0;
  *(void *)&long long v81 = 0;
  BYTE8(v81) = 0;
  *(void *)&long long v82 = v37;
  *((void *)&v82 + 1) = v36;
  *(void *)&long long v83 = v38;
  *((void *)&v83 + 1) = 1;
  LOBYTE(v84) = 0;
  *((void *)&v84 + 1) = v48;
  uint64_t v85 = v47;
  long long v73 = v83;
  long long v74 = v84;
  uint64_t v75 = v47;
  long long v69 = v78;
  long long v70 = 0u;
  long long v71 = v81;
  long long v72 = v82;
  long long v67 = v76;
  long long v68 = v77;
  sub_1000D2718();
  sub_1000D28F8();
  uint64_t v49 = v61;
  sub_100125410();
  sub_1000D2C5C((uint64_t)&v76);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v62 + 32))(v64, v49, v63);
}

uint64_t sub_1000D0BF0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a2 + 24);
  if (v4)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if ((*(unsigned char *)(a2 + 8) & 1) != 0 || *(double *)a1 != *(double *)a2) {
      return v8;
    }
  }
  if (!v6)
  {
    if (v7) {
      return 0;
    }
LABEL_13:
    uint64_t v8 = *(unsigned __int8 *)(a2 + 40);
    if (*(unsigned char *)(a1 + 40))
    {
      if (!*(unsigned char *)(a2 + 40)) {
        return v8;
      }
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
        LOBYTE(v8) = 1;
      }
      if (v8) {
        return 0;
      }
    }
    char v10 = *(unsigned char *)(a2 + 56);
    if (*(unsigned char *)(a1 + 56))
    {
      if (*(unsigned char *)(a2 + 56)) {
        return 1;
      }
    }
    else
    {
      if (*(void *)(a1 + 48) != *(void *)(a2 + 48)) {
        char v10 = 1;
      }
      if ((v10 & 1) == 0) {
        return 1;
      }
    }
    return 0;
  }
  if (!v7) {
    return 0;
  }
  if (v5 == *(void *)(a2 + 16) && v6 == v7) {
    goto LABEL_13;
  }
  char v9 = sub_100126530();
  uint64_t v8 = 0;
  if (v9) {
    goto LABEL_13;
  }
  return v8;
}

uint64_t sub_1000D0CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000D1A88(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v9 = (char *)&v27 - v8;
  uint64_t v29 = sub_1000F46DC();
  uint64_t v30 = v10;
  int v28 = v11;
  uint64_t v31 = v12;
  uint64_t v13 = a1 + *(int *)(type metadata accessor for WidgetStock() + 20);
  sub_1000C0F0C(v13, (uint64_t)v9);
  uint64_t v14 = sub_100123670();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v9, 1, v14) == 1)
  {
    sub_1000D1F60((uint64_t)v9, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v17 = 0;
    int v27 = 1;
  }
  else
  {
    uint64_t v17 = sub_1001235F0();
    int v27 = v18 & 1;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  }
  sub_1000C0F0C(v13, (uint64_t)v7);
  if (v16(v7, 1, v14) == 1)
  {
    sub_1000D2BDC(a1, (uint64_t (*)(void))type metadata accessor for WidgetStock);
    sub_1000D1F60((uint64_t)v7, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t result = 0;
    char v20 = 1;
  }
  else
  {
    uint64_t v21 = v17;
    uint64_t v22 = sub_100123630();
    char v24 = v23;
    sub_1000D2BDC(a1, (uint64_t (*)(void))type metadata accessor for WidgetStock);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v14);
    if (v24)
    {
      uint64_t result = 0;
      char v20 = 1;
    }
    else
    {
      uint64_t result = sub_1000D2D84(*(double *)&v22);
      char v20 = v25 & 1;
    }
    uint64_t v17 = v21;
  }
  *(void *)a2 = v29;
  *(unsigned char *)(a2 + 8) = v28 & 1;
  uint64_t v26 = v30;
  *(void *)(a2 + 16) = v31;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 40) = v27;
  *(void *)(a2 + 48) = result;
  *(unsigned char *)(a2 + 56) = v20;
  return result;
}

uint64_t initializeWithCopy for PriceChange(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PriceChange(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v6;
  return a1;
}

__n128 initializeWithTake for PriceChange(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PriceChange(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for PriceChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PriceChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriceChange()
{
  return &type metadata for PriceChange;
}

uint64_t sub_1000D121C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001001315E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000D1380@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000D1660(0, &qword_100162BD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v9 = (char *)&v17 - v8;
  sub_100009D98(a1, a1[3]);
  sub_1000D160C();
  sub_100126640();
  if (v2) {
    return sub_100009D48((uint64_t)a1);
  }
  char v26 = 0;
  sub_1000CC334();
  sub_1001263F0();
  uint64_t v20 = v21;
  int v25 = v22;
  uint64_t v11 = v23;
  uint64_t v10 = v24;
  LOBYTE(v21) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_100126380();
  HIDWORD(v17) = v13;
  uint64_t v18 = v12;
  uint64_t v19 = v11;
  LOBYTE(v21) = 2;
  uint64_t v14 = sub_100126390();
  LOBYTE(v11) = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100009D48((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(unsigned char *)(a2 + 8) = v25;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 40) = BYTE4(v17) & 1;
  *(void *)(a2 + 48) = v14;
  *(unsigned char *)(a2 + 56) = v11 & 1;
  return result;
}

unint64_t sub_1000D160C()
{
  unint64_t result = qword_100162BE0;
  if (!qword_100162BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162BE0);
  }
  return result;
}

void sub_1000D1660(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1000D160C();
    unint64_t v7 = a3(a1, &type metadata for PriceChange.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PriceChange.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D1790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PriceChange.CodingKeys()
{
  return &type metadata for PriceChange.CodingKeys;
}

unint64_t sub_1000D17CC()
{
  unint64_t result = qword_100162BF0;
  if (!qword_100162BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162BF0);
  }
  return result;
}

unint64_t sub_1000D1824()
{
  unint64_t result = qword_100162BF8;
  if (!qword_100162BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162BF8);
  }
  return result;
}

unint64_t sub_1000D187C()
{
  unint64_t result = qword_100162C00;
  if (!qword_100162C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162C00);
  }
  return result;
}

void *sub_1000D18D0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000D1A88(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1001238A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *((void *)v11 + 3);
    if (v12 == 1)
    {
      long long v13 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v13;
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *(_OWORD *)(v10 + 41) = *(_OWORD *)(v11 + 41);
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      v10[8] = v11[8];
      *((void *)v10 + 2) = *((void *)v11 + 2);
      *((void *)v10 + 3) = v12;
      *((void *)v10 + 4) = *((void *)v11 + 4);
      v10[40] = v11[40];
      *((void *)v10 + 6) = *((void *)v11 + 6);
      v10[56] = v11[56];
      swift_bridgeObjectRetain();
    }
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

void sub_1000D1A88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000D1AEC(uint64_t a1, uint64_t a2)
{
  sub_1000D1A88(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1001238A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 20) + 24);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1000D1BD0(void *a1, void *a2, uint64_t a3)
{
  sub_1000D1A88(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1001238A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *((void *)v9 + 3);
  if (v10 == 1)
  {
    long long v11 = *((_OWORD *)v9 + 1);
    *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v11;
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
  }
  else
  {
    *(void *)unint64_t v8 = *(void *)v9;
    v8[8] = v9[8];
    *((void *)v8 + 2) = *((void *)v9 + 2);
    *((void *)v8 + 3) = v10;
    *((void *)v8 + 4) = *((void *)v9 + 4);
    v8[40] = v9[40];
    *((void *)v8 + 6) = *((void *)v9 + 6);
    v8[56] = v9[56];
    swift_bridgeObjectRetain();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1000D1D38(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000D1F60((uint64_t)a1, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_1000D1A88(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1001238A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a1 + v7 + 24);
  uint64_t v11 = *(void *)((char *)a2 + v7 + 24);
  if (v10 == 1)
  {
    if (v11 == 1)
    {
      long long v12 = *(_OWORD *)v9;
      long long v13 = *((_OWORD *)v9 + 1);
      long long v14 = *((_OWORD *)v9 + 2);
      *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
      *(_OWORD *)(v8 + 16) = v13;
      *(_OWORD *)(v8 + 32) = v14;
      *(_OWORD *)uint64_t v8 = v12;
    }
    else
    {
      uint64_t v18 = *(void *)v9;
      *(unsigned char *)(v8 + 8) = v9[8];
      *(void *)uint64_t v8 = v18;
      *(void *)(v8 + 16) = *((void *)v9 + 2);
      *(void *)(v8 + 24) = *((void *)v9 + 3);
      uint64_t v19 = *((void *)v9 + 4);
      *(unsigned char *)(v8 + 40) = v9[40];
      *(void *)(v8 + 32) = v19;
      uint64_t v20 = *((void *)v9 + 6);
      *(unsigned char *)(v8 + 56) = v9[56];
      *(void *)(v8 + 48) = v20;
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_100088410(v8);
    long long v16 = *((_OWORD *)v9 + 1);
    long long v15 = *((_OWORD *)v9 + 2);
    long long v17 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 41) = *(_OWORD *)(v9 + 41);
    *(_OWORD *)(v8 + 16) = v16;
    *(_OWORD *)(v8 + 32) = v15;
    *(_OWORD *)uint64_t v8 = v17;
  }
  else
  {
    uint64_t v21 = *(void *)v9;
    *(unsigned char *)(v8 + 8) = v9[8];
    *(void *)uint64_t v8 = v21;
    *(void *)(v8 + 16) = *((void *)v9 + 2);
    *(void *)(v8 + 24) = *((void *)v9 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v22 = *((void *)v9 + 4);
    *(unsigned char *)(v8 + 40) = v9[40];
    *(void *)(v8 + 32) = v22;
    uint64_t v23 = *((void *)v9 + 6);
    *(unsigned char *)(v8 + 56) = v9[56];
    *(void *)(v8 + 48) = v23;
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1000D1F60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1000D1A88(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

char *sub_1000D1FBC(char *a1, char *a2, uint64_t a3)
{
  sub_1000D1A88(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v9];
  long long v12 = &a2[v9];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *(_OWORD *)(v11 + 41) = *(_OWORD *)(v12 + 41);
  a1[v10] = a2[v10];
  return a1;
}

char *sub_1000D20DC(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000D1F60((uint64_t)a1, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_1000D1A88(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1001238A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (uint64_t)&a1[v9];
  uint64_t v11 = &a2[v9];
  if (*(void *)&a1[v9 + 24] != 1)
  {
    uint64_t v12 = *((void *)v11 + 3);
    if (v12 != 1)
    {
      *(void *)uint64_t v10 = *(void *)v11;
      *(unsigned char *)(v10 + 8) = v11[8];
      *(void *)(v10 + 16) = *((void *)v11 + 2);
      *(void *)(v10 + 24) = v12;
      swift_bridgeObjectRelease();
      *(void *)(v10 + 32) = *((void *)v11 + 4);
      *(unsigned char *)(v10 + 40) = v11[40];
      *(void *)(v10 + 48) = *((void *)v11 + 6);
      *(unsigned char *)(v10 + 56) = v11[56];
      goto LABEL_10;
    }
    sub_100088410(v10);
  }
  long long v13 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v13;
  *(_OWORD *)(v10 + 32) = *((_OWORD *)v11 + 2);
  *(_OWORD *)(v10 + 41) = *(_OWORD *)(v11 + 41);
LABEL_10:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_1000D2290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D22A4);
}

uint64_t sub_1000D22A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000D1A88(0, &qword_100161A88, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 - 1) & ~(((int)v10 - 1) >> 31);
  }
}

uint64_t sub_1000D239C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D23B0);
}

void sub_1000D23B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000D1A88(0, &qword_100161A88, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 + 1);
  }
}

uint64_t type metadata accessor for PriceChangeView()
{
  uint64_t result = qword_100162C60;
  if (!qword_100162C60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000D24EC()
{
  sub_1000D1A88(319, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000D25BC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000D25D8()
{
  if (!qword_100162CA0)
  {
    _s11FormatStyleVMa_0();
    sub_1000D2AC0(&qword_100162CA8, (void (*)(uint64_t))_s11FormatStyleVMa_0);
    unint64_t v0 = type metadata accessor for NilPlaceholderFormatStyle();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162CA0);
    }
  }
}

void sub_1000D2694()
{
  if (!qword_100162CB0)
  {
    sub_1000D2718();
    sub_1000D28F8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100162CB0);
    }
  }
}

void sub_1000D2718()
{
  if (!qword_100162CB8)
  {
    sub_1000D2798();
    sub_1000413C0(255, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162CB8);
    }
  }
}

void sub_1000D2798()
{
  if (!qword_100162CC0)
  {
    sub_1000D2818();
    sub_1000413C0(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162CC0);
    }
  }
}

void sub_1000D2818()
{
  if (!qword_100162CC8)
  {
    sub_1000D2898();
    sub_1000413C0(255, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162CC8);
    }
  }
}

void sub_1000D2898()
{
  if (!qword_10015F3E0)
  {
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015F3E0);
    }
  }
}

unint64_t sub_1000D28F8()
{
  unint64_t result = qword_100162CD0;
  if (!qword_100162CD0)
  {
    sub_1000D2718();
    sub_1000D2990();
    sub_1000416A8((unint64_t *)&qword_10015EEB8, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162CD0);
  }
  return result;
}

unint64_t sub_1000D2990()
{
  unint64_t result = qword_100162CD8;
  if (!qword_100162CD8)
  {
    sub_1000D2798();
    sub_1000D2A28();
    sub_1000416A8(&qword_10015E600, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162CD8);
  }
  return result;
}

unint64_t sub_1000D2A28()
{
  unint64_t result = qword_100162CE0;
  if (!qword_100162CE0)
  {
    sub_1000D2818();
    sub_100041580();
    sub_1000416A8((unint64_t *)&qword_10015EEB0, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162CE0);
  }
  return result;
}

uint64_t sub_1000D2AC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D2B08()
{
  unint64_t result = qword_100162CF0;
  if (!qword_100162CF0)
  {
    sub_1000419C4(255, &qword_1001611A8);
    sub_1000D2B88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162CF0);
  }
  return result;
}

unint64_t sub_1000D2B88()
{
  unint64_t result = qword_100162CF8;
  if (!qword_100162CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162CF8);
  }
  return result;
}

uint64_t sub_1000D2BDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000D2C5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  char v6 = *(unsigned char *)(a1 + 72);
  sub_10001BAA4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_release();
  sub_100037598(v2, v3, v4, v5, v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1000D2D2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000D2D84(double a1)
{
  if (a1 >= 9.22337204e18 || a1 <= -9.22337204e18) {
    return 0;
  }
  if ((~*(void *)&a1 & 0x7FF0000000000000) != 0)
  {
    if (a1 > -9.22337204e18) {
      return (uint64_t)a1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000D2DE4(char *a1, char *a2)
{
  return sub_10003DD60(*a1, *a2);
}

Swift::Int sub_1000D2DF0()
{
  return sub_100126630();
}

uint64_t sub_1000D2E60()
{
  sub_100125BA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000D2EBC()
{
  return sub_100126630();
}

uint64_t sub_1000D2F28@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_100150F08;
  v8._object = v3;
  Swift::Int v5 = sub_100126340(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_1000D2F88(uint64_t *a1@<X8>)
{
  uint64_t v2 = 28789;
  if (*v1) {
    uint64_t v2 = 1853321060;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unsigned char *storeEnumTagSinglePayload for ValueChangeTrend(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D3080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ValueChangeTrend()
{
  return &type metadata for ValueChangeTrend;
}

unint64_t sub_1000D30BC()
{
  unint64_t result = qword_100162D00;
  if (!qword_100162D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162D00);
  }
  return result;
}

uint64_t sub_1000D3110()
{
  return sub_100125C80();
}

uint64_t sub_1000D3170()
{
  return sub_100125C70();
}

unint64_t sub_1000D31C0()
{
  unint64_t result = qword_100162D08;
  if (!qword_100162D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162D08);
  }
  return result;
}

uint64_t destroy for AccessibilitySimpleTicker(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 64);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AccessibilitySimpleTicker(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  unsigned int v6 = (_OWORD *)(a1 + 40);
  uint64_t v7 = a2 + 40;
  uint64_t v8 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    long long v9 = *(_OWORD *)(v7 + 16);
    *unsigned int v6 = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 56) = v9;
  }
  else
  {
    *(void *)unsigned int v6 = *(void *)v7;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(v7 + 8);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v8;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for AccessibilitySimpleTicker(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  uint64_t v5 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) == 1)
  {
    if (v6 == 1)
    {
      long long v7 = *(_OWORD *)(a2 + 56);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 56) = v7;
    }
    else
    {
      uint64_t v9 = *(void *)v5;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)uint64_t v4 = v9;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_10003088C(a1 + 40);
    long long v8 = *(_OWORD *)(a2 + 56);
    _OWORD *v4 = *v5;
    *(_OWORD *)(a1 + 56) = v8;
  }
  else
  {
    uint64_t v10 = *(void *)v5;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)uint64_t v4 = v10;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t assignWithTake for AccessibilitySimpleTicker(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(a1 + 40);
  long long v7 = (void *)(a2 + 40);
  if (*(void *)(a1 + 64) != 1)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    if (v8 != 1)
    {
      *uint64_t v6 = *v7;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v8;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10003088C(a1 + 40);
  }
  long long v9 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)v7;
  *(_OWORD *)(a1 + 56) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilitySimpleTicker(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilitySimpleTicker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilitySimpleTicker()
{
  return &type metadata for AccessibilitySimpleTicker;
}

uint64_t sub_1000D3574()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000D3590(uint64_t a1)
{
  sub_1000D3B54(a1 + 40, (uint64_t)v30, &qword_10015F440, (uint64_t)&type metadata for StockPrice);
  sub_1000D3B54((uint64_t)v30, (uint64_t)&v31, &qword_10015F440, (uint64_t)&type metadata for StockPrice);
  if (*((void *)&v32 + 1) == 1)
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0;
    goto LABEL_15;
  }
  uint64_t v2 = 9666786;
  v33[0] = v31;
  v33[1] = v32;
  sub_1000D3B54((uint64_t)v33, (uint64_t)v35, &qword_100162D20, (uint64_t)&type metadata for Double);
  sub_1000D3B54((uint64_t)v35, (uint64_t)&v36, &qword_100162D20, (uint64_t)&type metadata for Double);
  if (v37 != 1)
  {
    double v4 = v36;
    if (qword_10015D520 != -1) {
      swift_once();
    }
    id v5 = (id)sub_10002F64C(0, 3, 1, v4);
    [v5 setNumberStyle:1];
    id v6 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v4];
    id v7 = [v5 stringFromNumber:v6];

    if (v7)
    {
      uint64_t v2 = sub_100125B10();
      unint64_t v3 = v8;

      goto LABEL_10;
    }
  }
  unint64_t v3 = 0xA300000000000000;
LABEL_10:
  sub_1000D3B54(a1, (uint64_t)&v29, &qword_1001611B0, (uint64_t)&type metadata for ValueChangeTrend);
  sub_1000D3B54((uint64_t)&v29, (uint64_t)&v34, &qword_1001611B0, (uint64_t)&type metadata for ValueChangeTrend);
  char v9 = v34;
  if (v34 != 2)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v11 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
    if (v9)
    {
      v28._countAndFlagsBits = 0x8000000100132820;
      v12._countAndFlagsBits = 0x206F74206E776F44;
      v12._object = (void *)0xEA00000000004025;
    }
    else
    {
      v28._countAndFlagsBits = 0x8000000100132880;
      v12._countAndFlagsBits = 0x4025206F74207055;
      v12._object = (void *)0xE800000000000000;
    }
    v38.value._countAndFlagsBits = 0;
    v38.value._object = 0;
    v13.super.Class isa = v11;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    sub_100123070(v12, v38, v13, v39, v28);

    sub_100005590();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100127010;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_100005648();
    *(void *)(v14 + 32) = v2;
    *(void *)(v14 + 40) = v3;
    uint64_t v2 = sub_100125AE0();
    unint64_t v3 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_15:
  sub_10009E230();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100128E90;
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  *(void *)(inited + 32) = v18;
  *(void *)(inited + 40) = v17;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v3;
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_10009B2E8(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v21 = v19[2];
  unint64_t v20 = v19[3];
  unint64_t v22 = v21 + 1;
  if (v21 >= v20 >> 1) {
    uint64_t v19 = sub_10009B2E8((void *)(v20 > 1), v21 + 1, 1, v19);
  }
  v19[2] = v22;
  uint64_t v23 = &v19[2 * v21];
  v23[4] = v18;
  v23[5] = v17;
  if (v3)
  {
    unint64_t v24 = v19[3];
    swift_bridgeObjectRetain();
    if (v22 >= v24 >> 1) {
      uint64_t v19 = sub_10009B2E8((void *)(v24 > 1), v21 + 2, 1, v19);
    }
    v19[2] = v21 + 2;
    int v25 = &v19[2 * v22];
    v25[4] = v2;
    v25[5] = v3;
  }
  swift_release();
  sub_1000D3BD4(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
  sub_10009DFA0();
  uint64_t v26 = sub_100125A50();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1000D3A20()
{
  long long v1 = *(_OWORD *)(v0 + 48);
  v4[2] = *(_OWORD *)(v0 + 32);
  v4[3] = v1;
  uint64_t v5 = *(void *)(v0 + 64);
  long long v2 = *(_OWORD *)(v0 + 16);
  v4[0] = *(_OWORD *)v0;
  v4[1] = v2;
  sub_1000D3590((uint64_t)v4);
  sub_1000D3AF8();
  sub_1000D3D64(&qword_100162D18, (void (*)(uint64_t))sub_1000D3AF8);
  sub_10001BA50();
  sub_100125460();
  return swift_bridgeObjectRelease();
}

void sub_1000D3AF8()
{
  if (!qword_100162D10)
  {
    sub_1000541F0();
    unint64_t v0 = sub_100124FB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162D10);
    }
  }
}

uint64_t sub_1000D3B54(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1000D3BD4(0, a3, a4, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1000D3BD4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1000D3C24()
{
  unint64_t result = qword_100162D28;
  if (!qword_100162D28)
  {
    sub_1000D3CFC();
    sub_1000D3D64(&qword_100162D18, (void (*)(uint64_t))sub_1000D3AF8);
    sub_1000D3D64(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162D28);
  }
  return result;
}

void sub_1000D3CFC()
{
  if (!qword_100162D30)
  {
    sub_1000D3AF8();
    sub_1001250B0();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162D30);
    }
  }
}

uint64_t sub_1000D3D64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ManagedConfigurationService()
{
  return &type metadata for ManagedConfigurationService;
}

id sub_1000D3DBC()
{
  id result = [self sharedConnection];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result isNewsAllowed];

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t *sub_1000D3E1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    char v9 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000D4618(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1001238A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    Swift::String v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1001232B0();
    long long v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    v68(v11, v12, v13);
    long long v70 = (int *)type metadata accessor for DetailTimelineEntry();
    long long v71 = v12;
    uint64_t v14 = v70[5];
    unint64_t v15 = &v11[v14];
    long long v16 = &v12[v14];
    uint64_t v17 = *(void *)&v12[v14 + 8];
    *(void *)unint64_t v15 = *(void *)&v12[v14];
    *((void *)v15 + 1) = v17;
    uint64_t v18 = *(void *)&v12[v14 + 24];
    *((void *)v15 + 2) = *(void *)&v12[v14 + 16];
    *((void *)v15 + 3) = v18;
    uint64_t v19 = *(void *)&v12[v14 + 40];
    *((void *)v15 + 4) = *(void *)&v12[v14 + 32];
    *((void *)v15 + 5) = v19;
    unint64_t v20 = &v11[v14 + 48];
    unint64_t v21 = v16 + 48;
    uint64_t v22 = *((void *)v16 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v72 = v11;
    long long v73 = a1;
    if (v22 == 1)
    {
      long long v23 = *((_OWORD *)v16 + 4);
      *(_OWORD *)unint64_t v20 = *v21;
      *((_OWORD *)v15 + 4) = v23;
    }
    else
    {
      *(void *)unint64_t v20 = *(void *)v21;
      v15[56] = v16[56];
      *((void *)v15 + 8) = *((void *)v16 + 8);
      *((void *)v15 + 9) = v22;
      swift_bridgeObjectRetain();
    }
    *((void *)v15 + 10) = *((void *)v16 + 10);
    v15[88] = v16[88];
    uint64_t v24 = *((void *)v16 + 13);
    *((void *)v15 + 12) = *((void *)v16 + 12);
    *((void *)v15 + 13) = v24;
    *((void *)v15 + 14) = *((void *)v16 + 14);
    v15[120] = v16[120];
    *((void *)v15 + 16) = *((void *)v16 + 16);
    v15[136] = v16[136];
    v15[137] = v16[137];
    long long v69 = (int *)type metadata accessor for DetailContentViewModel(0);
    uint64_t v25 = v69[9];
    uint64_t v26 = &v15[v25];
    int v27 = &v16[v25];
    Swift::String v28 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v29 = *((void *)v28 - 1);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      sub_1000D4618(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v26 = *(void *)v27;
      uint64_t v32 = v28[5];
      int v33 = &v26[v32];
      char v34 = &v27[v32];
      swift_bridgeObjectRetain();
      v68(v33, v34, v13);
      sub_10002FE38();
      v68(&v33[*(int *)(v35 + 36)], &v34[*(int *)(v35 + 36)], v13);
      uint64_t v36 = v28[6];
      char v37 = &v26[v36];
      Swift::String_optional v38 = &v27[v36];
      uint64_t v39 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      *(_OWORD *)&v26[v28[7]] = *(_OWORD *)&v27[v28[7]];
      uint64_t v40 = v28[8];
      uint64_t v41 = &v26[v40];
      uint64_t v42 = &v27[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      v41[8] = v42[8];
      v26[v28[9]] = v27[v28[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
    }
    *(void *)&v15[v69[10]] = *(void *)&v16[v69[10]];
    uint64_t v43 = v69[11];
    uint64_t v44 = &v15[v43];
    uint64_t v45 = &v16[v43];
    sub_10005A9D8();
    uint64_t v47 = v46;
    uint64_t v48 = *(void *)(v46 - 8);
    uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
    swift_bridgeObjectRetain();
    if (v49(v45, 1, v47))
    {
      sub_1000D4618(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v44, v45, v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v44, 0, 1, v47);
    }
    char v9 = v73;
    uint64_t v51 = v69[12];
    uint64_t v52 = &v15[v51];
    uint64_t v53 = &v16[v51];
    uint64_t v54 = sub_100123150();
    uint64_t v55 = *(void *)(v54 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      sub_1000D4618(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    uint64_t v57 = v70[6];
    uint64_t v58 = &v72[v57];
    uint64_t v59 = &v71[v57];
    uint64_t v60 = sub_100123670();
    uint64_t v61 = *(void *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
    {
      sub_1000D4618(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
    }
    uint64_t v63 = v70[7];
    uint64_t v64 = &v72[v63];
    uint64_t v65 = &v71[v63];
    uint64_t v66 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
    v72[v70[8]] = v71[v70[8]];
    v72[v70[9]] = v71[v70[9]];
  }
  return v9;
}

void sub_1000D4618(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000D467C(uint64_t a1, uint64_t a2)
{
  sub_1000D4618(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1001238A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1001232B0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  unint64_t v8 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v9 = v5 + v8[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v11 = v9 + v10[9];
  uint64_t v12 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v11 + *(int *)(v12 + 20);
    v7(v13, v6);
    sub_10002FE38();
    v7(v13 + *(int *)(v14 + 36), v6);
    uint64_t v15 = v11 + *(int *)(v12 + 24);
    uint64_t v16 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v9 + v10[11];
  sub_10005A9D8();
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }
  uint64_t v21 = v9 + v10[12];
  uint64_t v22 = sub_100123150();
  uint64_t v23 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  uint64_t v24 = v5 + v8[6];
  uint64_t v25 = sub_100123670();
  uint64_t v26 = *(void *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  uint64_t v27 = v5 + v8[7];
  uint64_t v28 = sub_1001238A0();
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8);

  return v29(v27, v28);
}

void *sub_1000D4AA8(void *a1, void *a2, uint64_t a3)
{
  sub_1000D4618(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1001238A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001232B0();
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v65(v8, v9, v10);
  long long v67 = (int *)type metadata accessor for DetailTimelineEntry();
  long long v68 = v9;
  uint64_t v11 = v67[5];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = *(void *)&v9[v11 + 8];
  *(void *)uint64_t v12 = *(void *)&v9[v11];
  *((void *)v12 + 1) = v14;
  uint64_t v15 = *(void *)&v9[v11 + 24];
  *((void *)v12 + 2) = *(void *)&v9[v11 + 16];
  *((void *)v12 + 3) = v15;
  uint64_t v16 = *(void *)&v9[v11 + 40];
  *((void *)v12 + 4) = *(void *)&v9[v11 + 32];
  *((void *)v12 + 5) = v16;
  uint64_t v17 = &v8[v11 + 48];
  uint64_t v18 = v13 + 48;
  uint64_t v19 = *((void *)v13 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v69 = v8;
  long long v70 = a1;
  if (v19 == 1)
  {
    long long v20 = *((_OWORD *)v13 + 4);
    *(_OWORD *)uint64_t v17 = *v18;
    *((_OWORD *)v12 + 4) = v20;
  }
  else
  {
    *(void *)uint64_t v17 = *(void *)v18;
    v12[56] = v13[56];
    *((void *)v12 + 8) = *((void *)v13 + 8);
    *((void *)v12 + 9) = v19;
    swift_bridgeObjectRetain();
  }
  *((void *)v12 + 10) = *((void *)v13 + 10);
  v12[88] = v13[88];
  uint64_t v21 = *((void *)v13 + 13);
  *((void *)v12 + 12) = *((void *)v13 + 12);
  *((void *)v12 + 13) = v21;
  *((void *)v12 + 14) = *((void *)v13 + 14);
  v12[120] = v13[120];
  *((void *)v12 + 16) = *((void *)v13 + 16);
  v12[136] = v13[136];
  v12[137] = v13[137];
  uint64_t v66 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v22 = v66[9];
  uint64_t v23 = &v12[v22];
  uint64_t v24 = &v13[v22];
  uint64_t v25 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v26 = *((void *)v25 - 1);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, int *))(v26 + 48);
  swift_bridgeObjectRetain();
  if (v27(v24, 1, v25))
  {
    sub_1000D4618(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v23 = *(void *)v24;
    uint64_t v29 = v25[5];
    uint64_t v30 = &v23[v29];
    uint64_t v31 = &v24[v29];
    swift_bridgeObjectRetain();
    v65(v30, v31, v10);
    sub_10002FE38();
    v65(&v30[*(int *)(v32 + 36)], &v31[*(int *)(v32 + 36)], v10);
    uint64_t v33 = v25[6];
    char v34 = &v23[v33];
    uint64_t v35 = &v24[v33];
    uint64_t v36 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    *(_OWORD *)&v23[v25[7]] = *(_OWORD *)&v24[v25[7]];
    uint64_t v37 = v25[8];
    Swift::String_optional v38 = &v23[v37];
    uint64_t v39 = &v24[v37];
    *(void *)Swift::String_optional v38 = *(void *)v39;
    v38[8] = v39[8];
    v23[v25[9]] = v24[v25[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
  }
  *(void *)&v12[v66[10]] = *(void *)&v13[v66[10]];
  uint64_t v40 = v66[11];
  uint64_t v41 = &v12[v40];
  uint64_t v42 = &v13[v40];
  sub_10005A9D8();
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(v43 - 8);
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  swift_bridgeObjectRetain();
  if (v46(v42, 1, v44))
  {
    sub_1000D4618(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v41, v42, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v41, v42, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v41, 0, 1, v44);
  }
  uint64_t v48 = v66[12];
  uint64_t v49 = &v12[v48];
  uint64_t v50 = &v13[v48];
  uint64_t v51 = sub_100123150();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    sub_1000D4618(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  uint64_t v54 = v67[6];
  uint64_t v55 = &v69[v54];
  uint64_t v56 = &v68[v54];
  uint64_t v57 = sub_100123670();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    sub_1000D4618(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  uint64_t v60 = v67[7];
  uint64_t v61 = &v69[v60];
  uint64_t v62 = &v68[v60];
  uint64_t v63 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
  v69[v67[8]] = v68[v67[8]];
  v69[v67[9]] = v68[v67[9]];
  return v70;
}

void *sub_1000D5254(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000DB188((uint64_t)a1, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_1000D4618(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1001238A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v102 = a1;
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1001232B0();
  uint64_t v98 = *(void *)(v10 - 8);
  uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v98 + 24);
  v96(v8, v9, v10);
  uint64_t v11 = type metadata accessor for DetailTimelineEntry();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  *(void *)uint64_t v13 = *(void *)&v9[v12];
  *((void *)v13 + 1) = *(void *)&v9[v12 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 2) = *((void *)v14 + 2);
  *((void *)v13 + 3) = *((void *)v14 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v13 + 4) = *((void *)v14 + 4);
  *((void *)v13 + 5) = *((void *)v14 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v13 + 48;
  uint64_t v16 = v14 + 48;
  uint64_t v17 = *((void *)v14 + 9);
  uint64_t v100 = v9;
  char v101 = v8;
  uint64_t v99 = (int *)v11;
  if (*((void *)v13 + 9) == 1)
  {
    if (v17 == 1)
    {
      long long v18 = *((_OWORD *)v14 + 4);
      *uint64_t v15 = *v16;
      *((_OWORD *)v13 + 4) = v18;
    }
    else
    {
      uint64_t v20 = *(void *)v16;
      v13[56] = v14[56];
      *(void *)uint64_t v15 = v20;
      *((void *)v13 + 8) = *((void *)v14 + 8);
      *((void *)v13 + 9) = *((void *)v14 + 9);
      swift_bridgeObjectRetain();
    }
  }
  else if (v17 == 1)
  {
    sub_10003088C((uint64_t)(v13 + 48));
    long long v19 = *((_OWORD *)v14 + 4);
    *uint64_t v15 = *v16;
    *((_OWORD *)v13 + 4) = v19;
  }
  else
  {
    uint64_t v21 = *(void *)v16;
    v13[56] = v14[56];
    *(void *)uint64_t v15 = v21;
    *((void *)v13 + 8) = *((void *)v14 + 8);
    *((void *)v13 + 9) = *((void *)v14 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = *((void *)v14 + 10);
  v13[88] = v14[88];
  *((void *)v13 + 10) = v22;
  *((void *)v13 + 12) = *((void *)v14 + 12);
  *((void *)v13 + 13) = *((void *)v14 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v14 + 14);
  v13[120] = v14[120];
  *((void *)v13 + 14) = v23;
  uint64_t v24 = *((void *)v14 + 16);
  v13[136] = v14[136];
  *((void *)v13 + 16) = v24;
  v13[137] = v14[137];
  uint64_t v103 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v25 = v103[9];
  uint64_t v26 = &v13[v25];
  uint64_t v27 = &v14[v25];
  uint64_t v28 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, int *))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      *(void *)uint64_t v26 = *(void *)v27;
      uint64_t v33 = v28[5];
      char v34 = &v26[v33];
      uint64_t v95 = &v27[v33];
      uint64_t v97 = &v26[v33];
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
      swift_bridgeObjectRetain();
      v35(v34, v95, v10);
      sub_10002FE38();
      v35(&v97[*(int *)(v36 + 36)], &v95[*(int *)(v36 + 36)], v10);
      uint64_t v37 = v28[6];
      Swift::String_optional v38 = &v26[v37];
      uint64_t v39 = &v27[v37];
      uint64_t v40 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      *(_OWORD *)&v26[v28[7]] = *(_OWORD *)&v27[v28[7]];
      uint64_t v41 = v28[8];
      uint64_t v42 = &v26[v41];
      uint64_t v43 = &v27[v41];
      char v44 = v43[8];
      *(void *)uint64_t v42 = *(void *)v43;
      v42[8] = v44;
      v26[v28[9]] = v27[v28[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    sub_1000DB344((uint64_t)v26, type metadata accessor for PreparedSparkline);
LABEL_18:
    sub_1000D4618(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v26, v27, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_19;
  }
  *(void *)uint64_t v26 = *(void *)v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v80 = v28[5];
  long long v81 = &v26[v80];
  long long v82 = &v27[v80];
  v96(&v26[v80], &v27[v80], v10);
  sub_10002FE38();
  v96(&v81[*(int *)(v83 + 36)], &v82[*(int *)(v83 + 36)], v10);
  uint64_t v84 = v28[6];
  uint64_t v85 = &v26[v84];
  uint64_t v86 = &v27[v84];
  uint64_t v87 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 24))(v85, v86, v87);
  uint64_t v88 = v28[7];
  uint64_t v89 = &v26[v88];
  uint64_t v90 = &v27[v88];
  *(void *)uint64_t v89 = *(void *)v90;
  *((void *)v89 + 1) = *((void *)v90 + 1);
  uint64_t v91 = v28[8];
  uint64_t v92 = &v26[v91];
  uint64_t v93 = &v27[v91];
  char v94 = v93[8];
  *(void *)uint64_t v92 = *(void *)v93;
  v92[8] = v94;
  v26[v28[9]] = v27[v28[9]];
LABEL_19:
  *(void *)&v13[v103[10]] = *(void *)&v14[v103[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = v103[11];
  uint64_t v47 = &v13[v46];
  uint64_t v48 = &v14[v46];
  sub_10005A9D8();
  uint64_t v50 = v49;
  uint64_t v51 = *(void *)(v49 - 8);
  uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v47, 1, v49);
  int v54 = v52(v48, 1, v50);
  if (v53)
  {
    uint64_t v55 = v100;
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v47, v48, v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v47, 0, 1, v50);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v55 = v100;
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v50);
LABEL_24:
    sub_1000D4618(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v47, v48, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v47, v48, v50);
LABEL_25:
  uint64_t v57 = v103[12];
  uint64_t v58 = &v13[v57];
  uint64_t v59 = &v14[v57];
  uint64_t v60 = sub_100123150();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
  int v63 = v62(v58, 1, v60);
  int v64 = v62(v59, 1, v60);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v60);
LABEL_30:
    sub_1000D4618(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v58, v59, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v58, v59, v60);
LABEL_31:
  uint64_t v66 = v99[6];
  long long v67 = &v101[v66];
  long long v68 = &v55[v66];
  uint64_t v69 = sub_100123670();
  uint64_t v70 = *(void *)(v69 - 8);
  long long v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
  int v72 = v71(v67, 1, v69);
  int v73 = v71(v68, 1, v69);
  if (!v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 24))(v67, v68, v69);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v69);
    goto LABEL_36;
  }
  if (v73)
  {
LABEL_36:
    sub_1000D4618(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v67, v68, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
LABEL_37:
  uint64_t v75 = v99[7];
  long long v76 = &v101[v75];
  long long v77 = &v55[v75];
  uint64_t v78 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 24))(v76, v77, v78);
  v101[v99[8]] = v55[v99[8]];
  v101[v99[9]] = v55[v99[9]];
  return v102;
}

char *sub_1000D5D64(char *a1, char *a2, uint64_t a3)
{
  sub_1000D4618(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1001232B0();
  uint64_t v13 = (void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  uint64_t v66 = *v13;
  (*v13)(v10, v11, v12);
  long long v68 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v69 = v11;
  uint64_t v14 = v68[5];
  uint64_t v70 = v10;
  uint64_t v15 = &v10[v14];
  uint64_t v16 = &v11[v14];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  long long v18 = *((_OWORD *)v16 + 3);
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  *((_OWORD *)v15 + 3) = v18;
  long long v19 = *((_OWORD *)v16 + 5);
  *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
  *((_OWORD *)v15 + 5) = v19;
  *(_OWORD *)(v15 + 121) = *(_OWORD *)(v16 + 121);
  long long v20 = *((_OWORD *)v16 + 7);
  *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
  *((_OWORD *)v15 + 7) = v20;
  v15[137] = v16[137];
  long long v67 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v21 = v67[9];
  uint64_t v22 = &v15[v21];
  uint64_t v23 = &v16[v21];
  uint64_t v24 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v25 = *((void *)v24 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    sub_1000D4618(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v22 = *(void *)v23;
    uint64_t v27 = v24[5];
    uint64_t v64 = v25;
    uint64_t v65 = a1;
    uint64_t v28 = &v22[v27];
    uint64_t v29 = &v23[v27];
    v66(&v22[v27], &v23[v27], v12);
    sub_10002FE38();
    uint64_t v31 = *(int *)(v30 + 36);
    int v32 = &v28[v31];
    a1 = v65;
    v66(v32, &v29[v31], v12);
    uint64_t v33 = v24[6];
    char v34 = &v22[v33];
    uint64_t v35 = &v23[v33];
    uint64_t v36 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
    *(_OWORD *)&v22[v24[7]] = *(_OWORD *)&v23[v24[7]];
    uint64_t v37 = v24[8];
    Swift::String_optional v38 = &v22[v37];
    uint64_t v39 = &v23[v37];
    *(void *)Swift::String_optional v38 = *(void *)v39;
    v38[8] = v39[8];
    v22[v24[9]] = v23[v24[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v64 + 56))(v22, 0, 1, v24);
  }
  *(void *)&v15[v67[10]] = *(void *)&v16[v67[10]];
  uint64_t v40 = v67[11];
  uint64_t v41 = &v15[v40];
  uint64_t v42 = &v16[v40];
  sub_10005A9D8();
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v43))
  {
    sub_1000D4618(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v41, v42, v44);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v41, 0, 1, v44);
  }
  uint64_t v47 = v67[12];
  uint64_t v48 = &v15[v47];
  uint64_t v49 = &v16[v47];
  uint64_t v50 = sub_100123150();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    sub_1000D4618(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  uint64_t v53 = v68[6];
  int v54 = &v70[v53];
  uint64_t v55 = &v69[v53];
  uint64_t v56 = sub_100123670();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    sub_1000D4618(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  uint64_t v59 = v68[7];
  uint64_t v60 = &v70[v59];
  uint64_t v61 = &v69[v59];
  uint64_t v62 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  v70[v68[8]] = v69[v68[8]];
  v70[v68[9]] = v69[v68[9]];
  return a1;
}

char *sub_1000D6490(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000DB188((uint64_t)a1, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_1000D4618(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1001238A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v96 = a1;
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1001232B0();
  uint64_t v92 = *(void *)(v12 - 8);
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v92 + 40);
  v91(v10, v11, v12);
  uint64_t v13 = type metadata accessor for DetailTimelineEntry();
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = &v10[v14];
  uint64_t v16 = &v11[v14];
  uint64_t v17 = *(void *)&v11[v14 + 8];
  *(void *)uint64_t v15 = *(void *)&v11[v14];
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v16 + 3);
  *((void *)v15 + 2) = *((void *)v16 + 2);
  *((void *)v15 + 3) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v16 + 5);
  *((void *)v15 + 4) = *((void *)v16 + 4);
  *((void *)v15 + 5) = v19;
  swift_bridgeObjectRelease();
  long long v20 = v15 + 48;
  uint64_t v21 = v16 + 48;
  char v94 = v11;
  uint64_t v95 = v10;
  uint64_t v93 = (int *)v13;
  if (*((void *)v15 + 9) == 1) {
    goto LABEL_8;
  }
  uint64_t v22 = *((void *)v16 + 9);
  if (v22 == 1)
  {
    sub_10003088C((uint64_t)(v15 + 48));
LABEL_8:
    long long v23 = *((_OWORD *)v16 + 4);
    *long long v20 = *v21;
    *((_OWORD *)v15 + 4) = v23;
    goto LABEL_10;
  }
  *(void *)long long v20 = *(void *)v21;
  v15[56] = v16[56];
  *((void *)v15 + 8) = *((void *)v16 + 8);
  *((void *)v15 + 9) = v22;
  swift_bridgeObjectRelease();
LABEL_10:
  *((void *)v15 + 10) = *((void *)v16 + 10);
  v15[88] = v16[88];
  uint64_t v24 = *((void *)v16 + 13);
  *((void *)v15 + 12) = *((void *)v16 + 12);
  *((void *)v15 + 13) = v24;
  swift_bridgeObjectRelease();
  *((void *)v15 + 14) = *((void *)v16 + 14);
  v15[120] = v16[120];
  *((void *)v15 + 16) = *((void *)v16 + 16);
  *((_WORD *)v15 + 68) = *((_WORD *)v16 + 68);
  uint64_t v97 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v25 = v97[9];
  uint64_t v26 = &v15[v25];
  uint64_t v27 = &v16[v25];
  uint64_t v28 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, int *))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      *(void *)uint64_t v26 = *(void *)v27;
      uint64_t v33 = v28[5];
      char v34 = &v26[v33];
      uint64_t v35 = &v27[v33];
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v36(&v26[v33], &v27[v33], v12);
      sub_10002FE38();
      v36(&v34[*(int *)(v37 + 36)], &v35[*(int *)(v37 + 36)], v12);
      uint64_t v38 = v28[6];
      uint64_t v39 = &v26[v38];
      uint64_t v40 = &v27[v38];
      uint64_t v41 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      *(_OWORD *)&v26[v28[7]] = *(_OWORD *)&v27[v28[7]];
      uint64_t v42 = v28[8];
      uint64_t v43 = &v26[v42];
      uint64_t v44 = &v27[v42];
      *(void *)uint64_t v43 = *(void *)v44;
      v43[8] = v44[8];
      v26[v28[9]] = v27[v28[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (v32)
  {
    sub_1000DB344((uint64_t)v26, type metadata accessor for PreparedSparkline);
LABEL_15:
    sub_1000D4618(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v26, v27, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_16;
  }
  *(void *)uint64_t v26 = *(void *)v27;
  swift_bridgeObjectRelease();
  uint64_t v80 = v28[5];
  long long v81 = &v26[v80];
  long long v82 = &v27[v80];
  v91(&v26[v80], &v27[v80], v12);
  sub_10002FE38();
  v91(&v81[*(int *)(v83 + 36)], &v82[*(int *)(v83 + 36)], v12);
  uint64_t v84 = v28[6];
  uint64_t v85 = &v26[v84];
  uint64_t v86 = &v27[v84];
  uint64_t v87 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 40))(v85, v86, v87);
  *(_OWORD *)&v26[v28[7]] = *(_OWORD *)&v27[v28[7]];
  uint64_t v88 = v28[8];
  uint64_t v89 = &v26[v88];
  uint64_t v90 = &v27[v88];
  v89[8] = v90[8];
  *(void *)uint64_t v89 = *(void *)v90;
  v26[v28[9]] = v27[v28[9]];
LABEL_16:
  *(void *)&v15[v97[10]] = *(void *)&v16[v97[10]];
  swift_bridgeObjectRelease();
  uint64_t v46 = v97[11];
  uint64_t v47 = &v15[v46];
  uint64_t v48 = &v16[v46];
  sub_10005A9D8();
  uint64_t v50 = v49;
  uint64_t v51 = *(void *)(v49 - 8);
  uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v47, 1, v49);
  int v54 = v52(v48, 1, v50);
  if (v53)
  {
    uint64_t v55 = v94;
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v47, v48, v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v47, 0, 1, v50);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  uint64_t v55 = v94;
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v50);
LABEL_21:
    sub_1000D4618(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v47, v48, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v47, v48, v50);
LABEL_22:
  uint64_t v57 = v97[12];
  uint64_t v58 = &v15[v57];
  uint64_t v59 = &v16[v57];
  uint64_t v60 = sub_100123150();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
  int v63 = v62(v58, 1, v60);
  int v64 = v62(v59, 1, v60);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v60);
LABEL_27:
    sub_1000D4618(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v58, v59, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v58, v59, v60);
LABEL_28:
  uint64_t v66 = v93[6];
  long long v67 = &v95[v66];
  long long v68 = &v55[v66];
  uint64_t v69 = sub_100123670();
  uint64_t v70 = *(void *)(v69 - 8);
  long long v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48);
  int v72 = v71(v67, 1, v69);
  int v73 = v71(v68, 1, v69);
  if (!v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v67, v68, v69);
      goto LABEL_34;
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v69);
    goto LABEL_33;
  }
  if (v73)
  {
LABEL_33:
    sub_1000D4618(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v67, v68, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v68, v69);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
LABEL_34:
  uint64_t v75 = v93[7];
  long long v76 = &v95[v75];
  long long v77 = &v55[v75];
  uint64_t v78 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 40))(v76, v77, v78);
  v95[v93[8]] = v55[v93[8]];
  v95[v93[9]] = v55[v93[9]];
  return v96;
}

uint64_t sub_1000D6EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D6EF8);
}

uint64_t sub_1000D6EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000D4618(0, &qword_100161A88, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for DetailTimelineEntry();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000D7020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D7034);
}

uint64_t sub_1000D7034(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000D4618(0, &qword_100161A88, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for DetailTimelineEntry();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for DetailChartComplicationContentView()
{
  uint64_t result = qword_100162D90;
  if (!qword_100162D90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000D71B4()
{
  sub_1000D4618(319, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    type metadata accessor for DetailTimelineEntry();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000D72AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000D72C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000DAE04(0, &qword_100162ED0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v46 = v4;
  __chkstk_darwin(v4);
  uint64_t v48 = (_OWORD *)((char *)v42 - v5);
  sub_1000DAE90(0, &qword_100162ED8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  _OWORD v42[2] = v6;
  __chkstk_darwin(v6);
  uint64_t v43 = (uint64_t)v42 - v7;
  sub_1000DAE90(0, &qword_100162E40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  uint64_t v47 = v8;
  __chkstk_darwin(v8);
  uint64_t v45 = (char *)v42 - v9;
  sub_1000D4618(0, &qword_10015EDB8, (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
  uint64_t v11 = v10;
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)v42 - v12);
  uint64_t v14 = sub_1001255F0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035718();
  uint64_t v19 = v18;
  __chkstk_darwin(v18);
  uint64_t v21 = (void *)((char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v44 = (uint64_t)v42 - v23;
  uint64_t v24 = a1 + *(int *)(type metadata accessor for DetailChartComplicationContentView() + 20);
  uint64_t v25 = type metadata accessor for DetailTimelineEntry();
  if (*(unsigned char *)(v24 + *(int *)(v25 + 20) + 137) == 2)
  {
    if (*(unsigned char *)(v24 + *(int *)(v25 + 32)) == 1)
    {
      sub_100125230();
      sub_1001251B0();
      sub_1001251F0();
      swift_release();
      uint64_t v26 = sub_1001252E0();
      uint64_t v28 = v27;
      char v30 = v29;
      uint64_t v32 = v31;
      swift_release();
      *(void *)&long long v49 = v26;
      *((void *)&v49 + 1) = v28;
      *(void *)&long long v50 = v30 & 1;
      *((void *)&v50 + 1) = v32;
      char v51 = 0;
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
      char v51 = 1;
    }
    sub_100124F80();
    long long v37 = v53;
    char v38 = v54;
    uint64_t v39 = v48;
    *uint64_t v48 = v52;
    v39[1] = v37;
    *((unsigned char *)v39 + 32) = v38;
    swift_storeEnumTagMultiPayload();
    sub_1000DA078();
    sub_1000DAEF4();
    sub_1000DB080();
    return sub_100124F80();
  }
  else
  {
    v42[1] = a2;
    uint64_t v33 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    v42[0] = v15 + 8;
    uint64_t v34 = sub_1001255A0();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Image.Scale.small(_:), v14);
    uint64_t KeyPath = swift_getKeyPath();
    (*v33)((char *)v13 + *(int *)(v11 + 28), v17, v14);
    *uint64_t v13 = KeyPath;
    sub_1000DB118((uint64_t)v13, (uint64_t)v21 + *(int *)(v19 + 36), &qword_10015EDB8, (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    *uint64_t v21 = v34;
    swift_retain();
    sub_1000DB188((uint64_t)v13, &qword_10015EDB8, (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    (*(void (**)(char *, uint64_t))v42[0])(v17, v14);
    swift_release();
    uint64_t v36 = v44;
    sub_1000DAC50((uint64_t)v21, v44, (uint64_t (*)(void))sub_100035718);
    sub_1000DB1E4(v36, v43, (uint64_t (*)(void))sub_100035718);
    swift_storeEnumTagMultiPayload();
    sub_1000DAF80();
    uint64_t v40 = (uint64_t)v45;
    sub_100124F80();
    sub_1000DB24C(v40, (uint64_t)v48);
    swift_storeEnumTagMultiPayload();
    sub_1000DA078();
    sub_1000DAEF4();
    sub_1000DB080();
    sub_100124F80();
    sub_1000DB2CC(v40);
    return sub_1000DB344(v36, (uint64_t (*)(void))sub_100035718);
  }
}

uint64_t sub_1000D7A54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v35 = sub_1001248B0();
  uint64_t v2 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v33 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100124B70();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D9B34();
  uint64_t v31 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DA64C(0, &qword_100162EA0, (void (*)(uint64_t))sub_1000D9B34, (void (*)(void))sub_1000DA794);
  uint64_t v32 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = type metadata accessor for DetailContentViewModel(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v1 + *(int *)(type metadata accessor for DetailChartComplicationContentView() + 20);
  uint64_t v18 = type metadata accessor for DetailTimelineEntry();
  sub_1000DB1E4(v17 + *(int *)(v18 + 20), (uint64_t)v16, type metadata accessor for DetailContentViewModel);
  *(void *)uint64_t v9 = sub_100124F00();
  *((void *)v9 + 1) = 0;
  v9[16] = 0;
  sub_1000DA7C8();
  sub_1000D7F78(v1, (uint64_t)v16, (uint64_t)&v9[*(int *)(v19 + 44)]);
  if (*(unsigned char *)(v17 + *(int *)(v18 + 32)) == 1)
  {
    sub_100124B60();
  }
  else
  {
    uint64_t v36 = _swiftEmptyArrayStorage;
    sub_1000DA538(&qword_10015F100, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_1000D4618(0, &qword_10015F108, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
    sub_10003CF68();
    sub_100126090();
  }
  sub_1000DA794();
  sub_1001254D0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
  sub_1000DB344((uint64_t)v9, (uint64_t (*)(void))sub_1000D9B34);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = v33;
  uint64_t v22 = v35;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v33, enum case for ColorScheme.dark(_:), v35);
  sub_1000DA868();
  uint64_t v24 = v34;
  uint64_t v25 = (uint64_t *)(v34 + *(int *)(v23 + 36));
  sub_1000D4618(0, &qword_10015F0A0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v25 + *(int *)(v26 + 28), v21, v22);
  uint64_t *v25 = KeyPath;
  uint64_t v27 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v24, v13, v32);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v21, v22);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  return sub_1000DB344((uint64_t)v16, type metadata accessor for DetailContentViewModel);
}

uint64_t sub_1000D7F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v123 = a2;
  uint64_t v101 = a1;
  uint64_t v122 = a3;
  uint64_t v98 = type metadata accessor for SparklineView(0);
  __chkstk_darwin(v98);
  uint64_t v95 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DA64C(0, (unint64_t *)&qword_10015F618, (void (*)(uint64_t))type metadata accessor for SparklineView, (void (*)(void))sub_1000DA6D8);
  uint64_t v97 = v5;
  uint64_t v96 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v94 = (char *)&v91 - v6;
  sub_100043920();
  uint64_t v120 = *(void *)(v7 - 8);
  uint64_t v121 = v7;
  __chkstk_darwin(v7);
  uint64_t v93 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for PreparedSparkline;
  uint64_t v113 = (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional;
  sub_1000D4618(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v9 - 8);
  uint64_t v91 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v115 = (uint64_t)&v91 - v12;
  uint64_t v114 = type metadata accessor for PreparedSparkline(0);
  uint64_t v112 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v92 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D4618(0, &qword_100162E90, (uint64_t (*)(uint64_t))sub_100043920, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v14 - 8);
  uint64_t v119 = (uint64_t)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v118 = (char *)&v91 - v17;
  uint64_t v111 = sub_100125060();
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v109 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D4618(0, &qword_100162E08, (uint64_t (*)(uint64_t))sub_1000D9EE4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v91 - v20;
  sub_1000D9E34();
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D9DA8();
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D9D28();
  uint64_t v103 = v30;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>;
  sub_1000DA64C(0, &qword_100162DE8, (void (*)(uint64_t))sub_1000D9D28, (void (*)(void))sub_1000DA248);
  uint64_t v106 = v33;
  uint64_t v107 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v100 = (char *)&v91 - v34;
  sub_1000D9C7C();
  uint64_t v108 = v35;
  __chkstk_darwin(v35);
  uint64_t v117 = (uint64_t)&v91 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v102 = (char *)&v91 - v38;
  __chkstk_darwin(v39);
  uint64_t v104 = (char *)&v91 - v40;
  __chkstk_darwin(v41);
  uint64_t v99 = (char *)&v91 - v42;
  sub_1000D8DA8(a1, v123);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000DB118((uint64_t)v21, (uint64_t)v25, &qword_100162E08, (uint64_t (*)(uint64_t))sub_1000D9EE4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
  uint64_t v44 = &v25[*(int *)(v23 + 44)];
  *(void *)uint64_t v44 = KeyPath;
  *((void *)v44 + 1) = 1;
  v44[16] = 0;
  sub_1000DB188((uint64_t)v21, &qword_100162E08, (uint64_t (*)(uint64_t))sub_1000D9EE4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
  uint64_t v45 = swift_getKeyPath();
  sub_1000DB1E4((uint64_t)v25, (uint64_t)v29, (uint64_t (*)(void))sub_1000D9E34);
  uint64_t v46 = (uint64_t *)&v29[*(int *)(v27 + 44)];
  *uint64_t v46 = v45;
  v46[1] = 0x3FE6000000000000;
  sub_1000DB344((uint64_t)v25, (uint64_t (*)(void))sub_1000D9E34);
  uint64_t v47 = sub_100125150();
  uint64_t v48 = swift_getKeyPath();
  sub_1000DB1E4((uint64_t)v29, (uint64_t)v32, (uint64_t (*)(void))sub_1000D9DA8);
  uint64_t v49 = v103;
  long long v50 = (uint64_t *)&v32[*(int *)(v103 + 36)];
  uint64_t *v50 = v48;
  v50[1] = v47;
  sub_1000DB344((uint64_t)v29, (uint64_t (*)(void))sub_1000D9DA8);
  char v51 = v109;
  sub_100125030();
  unint64_t v52 = sub_1000DA248();
  long long v53 = v100;
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v51, v111);
  sub_1000DB344((uint64_t)v32, (uint64_t (*)(void))sub_1000D9D28);
  uint64_t v54 = *(void *)(v123 + 24);
  id v127 = *(id *)(v123 + 16);
  uint64_t v128 = v54;
  *(void *)&long long v126 = v49;
  *((void *)&v126 + 1) = v52;
  uint64_t v55 = (uint64_t)v99;
  swift_getOpaqueTypeConformance2();
  sub_10001BA50();
  uint64_t v56 = (uint64_t)v102;
  uint64_t v57 = v106;
  sub_100125460();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v53, v57);
  uint64_t v58 = v101;
  id v127 = sub_1000D95E0();
  uint64_t v128 = v59;
  uint64_t v60 = (uint64_t)v104;
  uint64_t v61 = v112;
  sub_100124B10();
  swift_bridgeObjectRelease();
  sub_1000DB344(v56, (uint64_t (*)(void))sub_1000D9C7C);
  sub_1000DAC50(v60, v55, (uint64_t (*)(void))sub_1000D9C7C);
  uint64_t v62 = v58 + *(int *)(type metadata accessor for DetailChartComplicationContentView() + 20);
  uint64_t v63 = *(int *)(type metadata accessor for DetailTimelineEntry() + 20);
  uint64_t v64 = v63 + *(int *)(type metadata accessor for DetailContentViewModel(0) + 36);
  uint64_t v65 = v114;
  uint64_t v66 = v62 + v64;
  uint64_t v67 = v115;
  sub_1000DB118(v66, v115, (unint64_t *)&qword_10015DF28, v116, v113);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v67, 1, v65) == 1)
  {
    sub_1000DB188(v67, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v68 = 1;
    uint64_t v70 = v120;
    uint64_t v69 = v121;
    uint64_t v71 = (uint64_t)v118;
  }
  else
  {
    uint64_t v72 = v92;
    sub_1000DAC50(v67, v92, type metadata accessor for PreparedSparkline);
    uint64_t v73 = v91;
    sub_1000DB1E4(v72, v91, type metadata accessor for PreparedSparkline);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v73, 0, 1, v65);
    sub_1001248C0();
    sub_1000DACB8(0, (unint64_t *)&qword_10015F628, (uint64_t)&type metadata for CGFloat, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_100128E90;
    *(_OWORD *)(v74 + 32) = xmmword_10012D530;
    sub_1001248C0();
    uint64_t v75 = v95;
    sub_100060994(v73, &v126, (uint64_t)&v127, 0, 0, 0, 1, v95, 0.3);
    uint64_t v76 = sub_1000DA6D8();
    long long v77 = v94;
    uint64_t v78 = v98;
    sub_100125370();
    sub_1000DB344(v75, type metadata accessor for SparklineView);
    uint64_t v124 = v78;
    uint64_t v125 = v76;
    swift_getOpaqueTypeConformance2();
    uint64_t v79 = v93;
    uint64_t v80 = v97;
    sub_100125390();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v77, v80);
    sub_1000DB344(v72, type metadata accessor for PreparedSparkline);
    uint64_t v82 = v120;
    uint64_t v81 = v121;
    uint64_t v71 = (uint64_t)v118;
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v118, v79, v121);
    uint64_t v68 = 0;
    uint64_t v69 = v81;
    uint64_t v70 = v82;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v71, v68, 1, v69);
  uint64_t v83 = v117;
  sub_1000DB1E4(v55, v117, (uint64_t (*)(void))sub_1000D9C7C);
  uint64_t v84 = v119;
  sub_1000DB118(v71, v119, &qword_100162E90, (uint64_t (*)(uint64_t))sub_100043920, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v85 = v122;
  sub_1000DB1E4(v83, v122, (uint64_t (*)(void))sub_1000D9C7C);
  sub_1000D9BC8();
  uint64_t v87 = v86;
  uint64_t v88 = v85 + *(int *)(v86 + 48);
  *(void *)uint64_t v88 = 0x400C000000000000;
  *(unsigned char *)(v88 + 8) = 0;
  sub_1000DB118(v84, v85 + *(int *)(v86 + 64), &qword_100162E90, (uint64_t (*)(uint64_t))sub_100043920, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v89 = v85 + *(int *)(v87 + 80);
  *(void *)uint64_t v89 = 0x3FF0000000000000;
  *(unsigned char *)(v89 + 8) = 0;
  sub_1000DB188(v71, &qword_100162E90, (uint64_t (*)(uint64_t))sub_100043920, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  sub_1000DB344(v55, (uint64_t (*)(void))sub_1000D9C7C);
  sub_1000DB188(v84, &qword_100162E90, (uint64_t (*)(uint64_t))sub_100043920, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  return sub_1000DB344(v83, (uint64_t (*)(void))sub_1000D9C7C);
}

uint64_t sub_1000D8DA8(uint64_t a1, uint64_t a2)
{
  sub_1000D9F04();
  __chkstk_darwin(v4);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000DAD04(0, &qword_100162EC0, (uint64_t (*)(uint64_t, void *, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  __chkstk_darwin(v7);
  uint64_t v9 = &v16[-v8];
  uint64_t v10 = a1 + *(int *)(type metadata accessor for DetailChartComplicationContentView() + 20);
  if (*(unsigned char *)(v10 + *(int *)(type metadata accessor for DetailTimelineEntry() + 32)) == 1)
  {
    sub_100124EC0();
    *(void *)uint64_t v9 = sub_100125340();
    *((void *)v9 + 1) = v11;
    v9[16] = v12 & 1;
    *((void *)v9 + 3) = v13;
    swift_storeEnumTagMultiPayload();
    sub_1000DA538(&qword_100162E88, (void (*)(uint64_t))sub_1000D9F04);
    return sub_100124F80();
  }
  else
  {
    *(void *)uint64_t v6 = sub_100124E70();
    *((void *)v6 + 1) = 0x4000000000000000;
    v6[16] = 0;
    sub_1000DAD6C();
    sub_1000D9058(a1, a2, (uint64_t)&v6[*(int *)(v15 + 44)]);
    sub_1000DB1E4((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))sub_1000D9F04);
    swift_storeEnumTagMultiPayload();
    sub_1000DA538(&qword_100162E88, (void (*)(uint64_t))sub_1000D9F04);
    sub_100124F80();
    return sub_1000DB344((uint64_t)v6, (uint64_t (*)(void))sub_1000D9F04);
  }
}

uint64_t sub_1000D9058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v58 = a1;
  uint64_t v64 = a3;
  uint64_t v5 = sub_1001238A0();
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)_s11FormatStyleVMa_0();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DA0D8();
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  __chkstk_darwin(v11);
  uint64_t v68 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v66 = (char *)&v57 - v14;
  uint64_t v67 = sub_1000DA058;
  uint64_t v59 = (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group;
  sub_1000D4618(0, (unint64_t *)&qword_100162E30, (uint64_t (*)(uint64_t))sub_1000DA058, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
  __chkstk_darwin(v15 - 8);
  uint64_t v65 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v69 = (uint64_t)&v57 - v18;
  sub_1000D72C8(v4, (uint64_t)&v57 - v18);
  swift_bridgeObjectRetain();
  sub_100125190();
  uint64_t v19 = sub_1001252B0();
  uint64_t v21 = v20;
  LOBYTE(v4) = v22;
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v71 = v19;
  uint64_t v72 = v21;
  LOBYTE(v73) = v4 & 1;
  *(void *)&long long v74 = v24;
  sub_1001253D0();
  sub_10001BAA4(v19, v21, v4 & 1);
  swift_bridgeObjectRelease();
  char v25 = *(unsigned char *)(a2 + 88);
  uint64_t v26 = *(void *)(a2 + 96);
  char v27 = *(unsigned char *)(a2 + 120);
  uint64_t v28 = *(void *)(a2 + 128);
  char v29 = *(unsigned char *)(a2 + 136);
  uint64_t v71 = *(void *)(a2 + 80);
  LOBYTE(v72) = v25;
  uint64_t v73 = v26;
  long long v74 = *(_OWORD *)(a2 + 104);
  char v75 = v27;
  uint64_t v76 = v28;
  char v77 = v29;
  swift_bridgeObjectRetain();
  sub_100060104((uint64_t)v7);
  uint64_t v31 = v60;
  uint64_t v30 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v10, v7, v61);
  v10[v8[5]] = 0;
  v10[v8[6]] = 0;
  v10[v8[7]] = 0;
  uint64_t v32 = &v10[v8[8]];
  *(void *)uint64_t v32 = 9666786;
  *((void *)v32 + 1) = 0xA300000000000000;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v30);
  sub_1000DA538(&qword_100162CA8, (void (*)(uint64_t))_s11FormatStyleVMa_0);
  sub_1000D2B88();
  uint64_t v60 = sub_100125330();
  uint64_t v58 = v33;
  LOBYTE(v31) = v34;
  uint64_t v61 = v35;
  uint64_t v36 = v65;
  uint64_t v37 = (uint64_t (*)(uint64_t))v67;
  uint64_t v38 = v59;
  sub_1000DB118(v69, v65, (unint64_t *)&qword_100162E30, (uint64_t (*)(uint64_t))v67, v59);
  uint64_t v39 = v62;
  uint64_t v40 = v63;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  uint64_t v42 = v68;
  v41(v68, v66, v63);
  LOBYTE(v71) = 1;
  char v70 = v31 & 1;
  uint64_t v43 = v36;
  uint64_t v44 = v64;
  sub_1000DB118(v43, v64, (unint64_t *)&qword_100162E30, v37, v38);
  sub_1000D9F98();
  uint64_t v46 = v45;
  v41((char *)(v44 + *(int *)(v45 + 48)), v42, v40);
  uint64_t v47 = v44 + *(int *)(v46 + 64);
  char v48 = v71;
  *(void *)uint64_t v47 = 0;
  *(unsigned char *)(v47 + 8) = v48;
  uint64_t v49 = v44 + *(int *)(v46 + 80);
  char v50 = v70;
  uint64_t v52 = v60;
  uint64_t v51 = v61;
  uint64_t v53 = v58;
  *(void *)uint64_t v49 = v60;
  *(void *)(v49 + 8) = v53;
  *(unsigned char *)(v49 + 16) = v50;
  *(void *)(v49 + 24) = v51;
  sub_10001BC2C(v52, v53, v50);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v39 + 8);
  swift_bridgeObjectRetain();
  v54(v66, v40);
  uint64_t v55 = (uint64_t (*)(uint64_t))v67;
  sub_1000DB188(v69, (unint64_t *)&qword_100162E30, (uint64_t (*)(uint64_t))v67, v38);
  sub_10001BAA4(v52, v53, v70);
  swift_bridgeObjectRelease();
  v54(v68, v40);
  return sub_1000DB188(v65, (unint64_t *)&qword_100162E30, v55, v38);
}

id sub_1000D95E0()
{
  uint64_t v1 = sub_1001233E0();
  __chkstk_darwin(v1 - 8);
  v39[2] = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100125AC0();
  __chkstk_darwin(v3 - 8);
  v39[1] = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1001238A0();
  uint64_t v5 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s11FormatStyleVMa_0();
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000DACB8(0, (unint64_t *)&qword_10015E810, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100128E90;
  uint64_t v13 = v0 + *(int *)(type metadata accessor for DetailChartComplicationContentView() + 20);
  uint64_t v14 = v13 + *(int *)(type metadata accessor for DetailTimelineEntry() + 20);
  uint64_t v15 = *(void *)(v14 + 80);
  int v16 = *(unsigned __int8 *)(v14 + 88);
  uint64_t v42 = *(void *)(v14 + 112);
  int v41 = *(unsigned __int8 *)(v14 + 120);
  uint64_t v40 = *(void *)(v14 + 128);
  int v17 = *(unsigned __int8 *)(v14 + 136);
  sub_100060104((uint64_t)v7);
  uint64_t v18 = v43;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v7, v43);
  v11[v9[7]] = 0;
  v11[v9[8]] = 0;
  v11[v9[9]] = 1;
  uint64_t v19 = &v11[v9[10]];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0xE000000000000000;
  uint64_t v20 = v7;
  uint64_t v21 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v18);
  uint64_t v22 = sub_1000AEBE4(v15, v16, v42, v41, v40, v17);
  uint64_t v24 = v23;
  sub_1000DB344((uint64_t)v11, (uint64_t (*)(void))_s11FormatStyleVMa_0);
  *(void *)(v12 + 32) = v22;
  *(void *)(v12 + 40) = v24;
  if (*(void *)(v14 + 72) == 1)
  {
    sub_100125AB0();
    sub_100123390();
    uint64_t v25 = sub_100125B70();
    unint64_t v27 = v26;
LABEL_16:
    *(void *)(v21 + 48) = v25;
    *(void *)(v21 + 56) = v27;
    uint64_t v44 = v21;
    sub_1000DACB8(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    sub_10009DFA0();
    uint64_t v38 = sub_100125A50();
    swift_bridgeObjectRelease();
    return (id)v38;
  }
  uint64_t v25 = 9666786;
  if (*(unsigned char *)(v14 + 56))
  {
LABEL_15:
    unint64_t v27 = 0xA300000000000000;
    goto LABEL_16;
  }
  double v28 = *(double *)(v14 + 48);
  if (v28 <= 1000000.0)
  {
LABEL_10:
    if (qword_10015D520 != -1) {
      swift_once();
    }
    id v34 = (id)sub_10002F64C(0, 3, 1, v28);
    [v34 setNumberStyle:1];
    id v35 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v28];
    id v36 = [v34 stringFromNumber:v35];

    if (v36)
    {
      uint64_t v25 = sub_100125B10();
      unint64_t v27 = v37;

      goto LABEL_16;
    }

    goto LABEL_15;
  }
  type metadata accessor for UnitNumberFormatter();
  uint64_t inited = swift_initStackObject();
  id result = [objc_allocWithZone((Class)SCICUNumberFormatter) init];
  *(void *)(inited + 16) = result;
  if ((~*(void *)&v28 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v28 < 9.22337204e18)
  {
    uint64_t v31 = result;
    uint64_t v32 = sub_100054244((uint64_t)v28, 0, 0);
    unint64_t v27 = v33;

    if (v27)
    {
      uint64_t v25 = v32;
      goto LABEL_16;
    }
    goto LABEL_10;
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_1000D9B34()
{
  if (!qword_100162DC8)
  {
    sub_1000D4618(255, &qword_100162DD0, (uint64_t (*)(uint64_t))sub_1000D9BC8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000DA70C();
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162DC8);
    }
  }
}

void sub_1000D9BC8()
{
  if (!qword_100162DD8)
  {
    sub_1000D9C7C();
    sub_1000D4618(255, &qword_100162E90, (uint64_t (*)(uint64_t))sub_100043920, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_100162DD8);
    }
  }
}

void sub_1000D9C7C()
{
  if (!qword_100162DE0)
  {
    sub_1000DA64C(255, &qword_100162DE8, (void (*)(uint64_t))sub_1000D9D28, (void (*)(void))sub_1000DA248);
    sub_1001250B0();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162DE0);
    }
  }
}

void sub_1000D9D28()
{
  if (!qword_100162DF0)
  {
    sub_1000D9DA8();
    sub_1000DA1DC(255, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162DF0);
    }
  }
}

void sub_1000D9DA8()
{
  if (!qword_100162DF8)
  {
    sub_1000D9E34();
    sub_1000DACB8(255, (unint64_t *)&qword_10015EE00, (uint64_t)&type metadata for CGFloat, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162DF8);
    }
  }
}

void sub_1000D9E34()
{
  if (!qword_100162E00)
  {
    sub_1000D4618(255, &qword_100162E08, (uint64_t (*)(uint64_t))sub_1000D9EE4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
    sub_1000DA1DC(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162E00);
    }
  }
}

void sub_1000D9EE4(uint64_t a1)
{
}

void sub_1000D9F04()
{
  if (!qword_100162E18)
  {
    sub_1000D4618(255, &qword_100162E20, (uint64_t (*)(uint64_t))sub_1000D9F98, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000DA154();
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162E18);
    }
  }
}

void sub_1000D9F98()
{
  if (!qword_100162E28)
  {
    sub_1000D4618(255, (unint64_t *)&qword_100162E30, (uint64_t (*)(uint64_t))sub_1000DA058, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
    sub_1000DA0D8();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_100162E28);
    }
  }
}

void sub_1000DA058(uint64_t a1)
{
}

void sub_1000DA078()
{
  if (!qword_100162E48)
  {
    unint64_t v0 = sub_100124F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162E48);
    }
  }
}

void sub_1000DA0D8()
{
  if (!qword_100162E50)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100162E50);
    }
  }
}

unint64_t sub_1000DA154()
{
  unint64_t result = qword_100162E58;
  if (!qword_100162E58)
  {
    sub_1000D4618(255, &qword_100162E20, (uint64_t (*)(uint64_t))sub_1000D9F98, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162E58);
  }
  return result;
}

void sub_1000DA1DC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1000DACB8(255, a3, a4, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    unint64_t v5 = sub_1001250A0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1000DA248()
{
  unint64_t result = qword_100162E60;
  if (!qword_100162E60)
  {
    sub_1000D9D28();
    sub_1000DA2E0();
    sub_1000DA5FC((unint64_t *)&qword_10015EEB0, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162E60);
  }
  return result;
}

unint64_t sub_1000DA2E0()
{
  unint64_t result = qword_100162E68;
  if (!qword_100162E68)
  {
    sub_1000D9DA8();
    sub_1000DA358();
    sub_1000DA580();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162E68);
  }
  return result;
}

unint64_t sub_1000DA358()
{
  unint64_t result = qword_100162E70;
  if (!qword_100162E70)
  {
    sub_1000D9E34();
    sub_1000DA3F0();
    sub_1000DA5FC(&qword_10015E600, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162E70);
  }
  return result;
}

unint64_t sub_1000DA3F0()
{
  unint64_t result = qword_100162E78;
  if (!qword_100162E78)
  {
    sub_1000D4618(255, &qword_100162E08, (uint64_t (*)(uint64_t))sub_1000D9EE4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
    sub_1000DA490();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162E78);
  }
  return result;
}

unint64_t sub_1000DA490()
{
  unint64_t result = qword_100162E80;
  if (!qword_100162E80)
  {
    sub_1000D9EE4(255);
    sub_1000DA538(&qword_100162E88, (void (*)(uint64_t))sub_1000D9F04);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162E80);
  }
  return result;
}

uint64_t sub_1000DA538(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000DA580()
{
  unint64_t result = qword_10015EE20;
  if (!qword_10015EE20)
  {
    sub_1000DACB8(255, (unint64_t *)&qword_10015EE00, (uint64_t)&type metadata for CGFloat, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EE20);
  }
  return result;
}

uint64_t sub_1000DA5FC(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000DA1DC(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000DA64C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1000DA6D8()
{
  return sub_1000DA538(&qword_10015F620, (void (*)(uint64_t))type metadata accessor for SparklineView);
}

unint64_t sub_1000DA70C()
{
  unint64_t result = qword_100162E98;
  if (!qword_100162E98)
  {
    sub_1000D4618(255, &qword_100162DD0, (uint64_t (*)(uint64_t))sub_1000D9BC8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162E98);
  }
  return result;
}

uint64_t sub_1000DA794()
{
  return sub_1000DA538(&qword_100162EA8, (void (*)(uint64_t))sub_1000D9B34);
}

void sub_1000DA7C8()
{
  if (!qword_100162EB0)
  {
    sub_1000D4618(255, &qword_100162DD0, (uint64_t (*)(uint64_t))sub_1000D9BC8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162EB0);
    }
  }
}

void sub_1000DA868()
{
  if (!qword_100162EB8)
  {
    sub_1000DA64C(255, &qword_100162EA0, (void (*)(uint64_t))sub_1000D9B34, (void (*)(void))sub_1000DA794);
    sub_1000D4618(255, &qword_10015F0A0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162EB8);
    }
  }
}

uint64_t sub_1000DA944@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100124DD0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000DA978@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100124DD0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000DA9AC()
{
  return sub_100124DE0();
}

uint64_t sub_1000DA9DC()
{
  return sub_100124DE0();
}

uint64_t sub_1000DAA0C()
{
  return sub_100124C00();
}

uint64_t sub_1000DAA30(uint64_t a1)
{
  uint64_t v2 = sub_1001255F0();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_100124C10();
}

uint64_t sub_1000DAAF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100124D40();
  *a1 = result;
  return result;
}

uint64_t sub_1000DAB24()
{
  return sub_100124D50();
}

uint64_t sub_1000DAB50@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100124CF0();
  *a1 = v3;
  return result;
}

uint64_t sub_1000DAB7C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100124CF0();
  *a1 = v3;
  return result;
}

uint64_t sub_1000DABA8()
{
  return sub_100124D00();
}

uint64_t sub_1000DABD0()
{
  return sub_100124D00();
}

uint64_t sub_1000DABF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100124D40();
  *a1 = result;
  return result;
}

uint64_t sub_1000DAC24()
{
  return sub_100124D50();
}

uint64_t sub_1000DAC50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1000DACB8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1000DAD04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *, uint64_t))
{
  if (!*a2)
  {
    sub_1000D9F04();
    unint64_t v7 = a3(a1, &type metadata for Text, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1000DAD6C()
{
  if (!qword_100162EC8)
  {
    sub_1000D4618(255, &qword_100162E20, (uint64_t (*)(uint64_t))sub_1000D9F98, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162EC8);
    }
  }
}

void sub_1000DAE04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1000DAE90(255, &qword_100162E40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    uint64_t v7 = v6;
    sub_1000DA078();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1000DAE90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_100035718();
    unint64_t v7 = a3(a1, v6, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1000DAEF4()
{
  unint64_t result = qword_100162EE0;
  if (!qword_100162EE0)
  {
    sub_1000DAE90(255, &qword_100162E40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_1000DAF80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162EE0);
  }
  return result;
}

unint64_t sub_1000DAF80()
{
  unint64_t result = qword_100162EE8;
  if (!qword_100162EE8)
  {
    sub_100035718();
    sub_1000DAFF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162EE8);
  }
  return result;
}

unint64_t sub_1000DAFF8()
{
  unint64_t result = qword_100162EF0;
  if (!qword_100162EF0)
  {
    sub_1000D4618(255, &qword_10015EDB8, (uint64_t (*)(uint64_t))&type metadata accessor for Image.Scale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162EF0);
  }
  return result;
}

unint64_t sub_1000DB080()
{
  unint64_t result = qword_100162EF8;
  if (!qword_100162EF8)
  {
    sub_1000DA078();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162EF8);
  }
  return result;
}

uint64_t sub_1000DB0F0()
{
  return sub_100124C00();
}

uint64_t sub_1000DB118(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1000D4618(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1000DB188(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1000D4618(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1000DB1E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000DB24C(uint64_t a1, uint64_t a2)
{
  sub_1000DAE90(0, &qword_100162E40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DB2CC(uint64_t a1)
{
  sub_1000DAE90(0, &qword_100162E40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000DB344(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000DB3A8()
{
  unint64_t result = qword_100162F00;
  if (!qword_100162F00)
  {
    sub_1000DA868();
    sub_1000D9B34();
    sub_1000DA794();
    swift_getOpaqueTypeConformance2();
    sub_10006088C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162F00);
  }
  return result;
}

uint64_t sub_1000DB450@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned __int8 a3@<W2>, uint64_t *a4@<X8>)
{
  if (a3 > 1u) {
    goto LABEL_6;
  }
  id v7 = [self currentDevice];
  id v8 = [v7 userInterfaceIdiom];

  if ((unint64_t)v8 + 1 > 6) {
    goto LABEL_7;
  }
  if (((1 << (v8 + 1)) & 0x5D) != 0)
  {
    sub_100029758(a1, (uint64_t)v14);
    a4[3] = (uint64_t)&type metadata for LightTheme;
    a4[4] = (uint64_t)&off_100153640;
    uint64_t v9 = swift_allocObject();
    *a4 = v9;
    return sub_1000ACC90(v14, v9 + 16);
  }
  if (v8)
  {
LABEL_7:
    uint64_t result = sub_100126290();
    __break(1u);
  }
  else
  {
LABEL_6:
    sub_100029758(a1, (uint64_t)v14);
    a4[3] = (uint64_t)&type metadata for DarkTheme;
    a4[4] = (uint64_t)&off_1001528C8;
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11 + 16;
    *a4 = v11;
    id v13 = a2;
    return sub_100084250(v14, (uint64_t)a2, v12);
  }
  return result;
}

uint64_t Theme.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x746C7561666564;
  }
  if (a1 == 1) {
    return 0x746867696CLL;
  }
  return 1802658148;
}

uint64_t sub_1000DB630(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10003DC5C(*a1, *a2);
}

Swift::Int sub_1000DB63C()
{
  return sub_100126630();
}

uint64_t sub_1000DB6D4()
{
  sub_100125BA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000DB758()
{
  return sub_100126630();
}

uint64_t sub_1000DB7EC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s12StocksWidget5ThemeO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000DB81C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x746867696CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1802658148;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x746C7561666564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1000DB870(uint64_t a1)
{
  unint64_t v2 = sub_1000DBE1C();

  return static RawRepresentable<>.dataType.getter(a1, v2, &protocol witness table for String);
}

uint64_t sub_1000DB8C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000DBE1C();

  return static RawRepresentable<>.convert(from:)(a1, a2, v4, &protocol witness table for String);
}

uint64_t sub_1000DB920(uint64_t a1)
{
  unint64_t v2 = sub_1000DBE1C();

  return RawRepresentable<>.toData()(a1, v2, &protocol witness table for String);
}

uint64_t _s12StocksWidget5ThemeO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100150F58;
  v6._object = a2;
  unint64_t v4 = sub_100126340(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000DB9C4()
{
  unint64_t result = qword_100162F08;
  if (!qword_100162F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162F08);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Theme(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DBAE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme()
{
  return &type metadata for Theme;
}

uint64_t sub_1000DBB1C()
{
  sub_100009D48((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_1000DBC9C()
{
  sub_100009D48((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

unint64_t sub_1000DBE1C()
{
  unint64_t result = qword_100162F10;
  if (!qword_100162F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162F10);
  }
  return result;
}

uint64_t sub_1000DBE70(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    id v8 = (void *)a2[3];
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    char v12 = *((unsigned char *)a2 + 56);
    swift_bridgeObjectRetain();
    sub_1000140D4(v8, v9, v10, v11, v12);
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v12;
    uint64_t v13 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v13;
    unint64_t v14 = a2[11];
    swift_bridgeObjectRetain();
    if (v14 <= 2)
    {
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(void *)(a1 + 96) = a2[12];
    }
    else
    {
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v14;
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_retain();
    }
    int v16 = (void *)a2[13];
    if (v16 == (void *)1)
    {
      *(void *)(a1 + 104) = a2[13];
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      *(void *)(a1 + 104) = v16;
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
      id v17 = v16;
    }
    uint64_t v18 = *(int *)(a3 + 36);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_100123150();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_1000DC0F0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_100014114(*(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  unsigned int v4 = *(void **)(a1 + 104);
  if (v4 != (void *)1) {

  }
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_100123150();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    id v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_1000DC214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  sub_1000140D4(v7, v8, v9, v10, v11);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  uint64_t v12 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v12;
  unint64_t v13 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  if (v13 <= 2)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
  }
  else
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v13;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  unint64_t v14 = *(void **)(a2 + 104);
  if (v14 == (void *)1)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  else
  {
    *(void *)(a1 + 104) = v14;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    id v15 = v14;
  }
  uint64_t v16 = *(int *)(a3 + 36);
  id v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_100123150();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_1000DC444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_1000140D4(v6, v7, v8, v9, v10);
  char v11 = *(void **)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  sub_100014114(v11, v12, v13, v14, v15);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (long long *)(a1 + 80);
  id v17 = (long long *)(a2 + 80);
  unint64_t v18 = *(void *)(a1 + 88);
  unint64_t v19 = *(void *)(a2 + 88);
  if (v18 == 2)
  {
    if (v19 <= 2)
    {
LABEL_3:
      long long v20 = *v17;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *uint64_t v16 = v20;
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  if (v19 == 2)
  {
    sub_1000C3E08(a1 + 80);
LABEL_11:
    uint64_t v21 = *(void *)(a2 + 96);
    *uint64_t v16 = *v17;
    *(void *)(a1 + 96) = v21;
    goto LABEL_12;
  }
  if (v18 < 2)
  {
    if (v19 < 2) {
      goto LABEL_3;
    }
LABEL_8:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_12;
  }
  if (v19 < 2)
  {
    sub_1000E2F98(a1 + 80, (uint64_t (*)(void))sub_1000C3D78);
    goto LABEL_11;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
LABEL_12:
  uint64_t v22 = (uint64_t *)(a1 + 104);
  uint64_t v23 = *(void **)(a1 + 104);
  uint64_t v25 = (uint64_t *)(a2 + 104);
  uint64_t v24 = *(void **)(a2 + 104);
  if (v23 == (void *)1)
  {
    if (v24 == (void *)1)
    {
      uint64_t v26 = *v25;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *uint64_t v22 = v26;
    }
    else
    {
      *(void *)(a1 + 104) = v24;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      id v28 = v24;
    }
  }
  else if (v24 == (void *)1)
  {
    sub_1000C3E5C(a1 + 104);
    char v27 = *(unsigned char *)(a2 + 112);
    *uint64_t v22 = *v25;
    *(unsigned char *)(a1 + 112) = v27;
  }
  else
  {
    *(void *)(a1 + 104) = v24;
    id v29 = v24;

    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  uint64_t v30 = *(int *)(a3 + 36);
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  uint64_t v33 = sub_100123150();
  uint64_t v34 = *(void *)(v33 - 8);
  id v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v34 + 24))(v31, v32, v33);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_24;
  }
  if (v37)
  {
LABEL_24:
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v34 + 16))(v31, v32, v33);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  return a1;
}

uint64_t sub_1000DC7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (const void *)(a2 + v7);
  uint64_t v9 = (void *)(a1 + v7);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v10 = sub_100123150();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
  {
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v9, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v9, v8, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1000DC95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void **)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  char v12 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v7;
  sub_100014114(v8, v9, v10, v11, v12);
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(a1 + 88);
  unint64_t v15 = *(void *)(a2 + 88);
  if (v14 == 2) {
    goto LABEL_7;
  }
  if (v15 == 2)
  {
    sub_1000C3E08(a1 + 80);
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    goto LABEL_8;
  }
  if (v14 < 2) {
    goto LABEL_7;
  }
  if (v15 < 2)
  {
    sub_1000E2F98(a1 + 80, (uint64_t (*)(void))sub_1000C3D78);
    goto LABEL_7;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
LABEL_8:
  uint64_t v16 = *(void **)(a1 + 104);
  uint64_t v17 = *(void *)(a2 + 104);
  if (v16 == (void *)1)
  {
LABEL_11:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    goto LABEL_13;
  }
  if (v17 == 1)
  {
    sub_1000C3E5C(a1 + 104);
    goto LABEL_11;
  }
  *(void *)(a1 + 104) = v17;

  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_13:
  uint64_t v18 = *(int *)(a3 + 36);
  unint64_t v19 = (void *)(a1 + v18);
  long long v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_100123150();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_18;
  }
  if (v25)
  {
LABEL_18:
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t sub_1000DCC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DCC54);
}

uint64_t sub_1000DCC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000DCD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DCD48);
}

uint64_t sub_1000DCD48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for HeadlineViewModel(uint64_t a1)
{
  return sub_100009E3C(a1, qword_100162F70);
}

void sub_1000DCE40()
{
  sub_1000E3040(319, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000DCF28(char *a1, char *a2)
{
  return sub_10003DDF4(*a1, *a2);
}

Swift::Int sub_1000DCF34()
{
  return sub_100126630();
}

uint64_t sub_1000DD014()
{
  sub_100125BA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000DD0DC()
{
  return sub_100126630();
}

uint64_t sub_1000DD1B8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000E04CC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000DD1E8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 25705;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB000000006E6F69;
      uint64_t v3 = 0x7475626972747461;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x656C746974;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 3:
      strcpy((char *)a1, "destinationURL");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1000DD288()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7475626972747461;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x74616E6974736564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000DD31C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000E04CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000DD344(uint64_t a1)
{
  unint64_t v2 = sub_1000DDDF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000DD380(uint64_t a1)
{
  unint64_t v2 = sub_1000DDDF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000DD3BC()
{
  sub_1000E1E3C(0, (unint64_t *)&qword_100161960, &qword_10015EF60, (uint64_t)&type metadata for String, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t inited = swift_initStackObject();
  unint64_t v2 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1001276F0;
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v3;
  uint64_t v5 = 40;
  if (*(unsigned char *)(v0 + 56)) {
    uint64_t v5 = 24;
  }
  uint64_t v6 = 48;
  if (*(unsigned char *)(v0 + 56)) {
    uint64_t v6 = 32;
  }
  uint64_t v7 = *(void *)(v0 + v6);
  *(void *)(inited + 48) = *(void *)(v0 + v5);
  *(void *)(inited + 56) = v7;
  int v8 = *(unsigned __int8 *)(v0 + 16);
  if (v8 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v2[8] = 0;
    v2[9] = 0;
    if (v3) {
      goto LABEL_7;
    }
LABEL_12:
    uint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v13 = v2[7];
    if (!v13) {
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  char v14 = v8 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_10010BE38(v14);
  uint64_t v4 = v2[4];
  uint64_t v3 = v2[5];
  v2[8] = v15;
  v2[9] = v16;
  if (!v3) {
    goto LABEL_12;
  }
LABEL_7:
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10009B2E8(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    uint64_t v9 = sub_10009B2E8((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  v9[2] = v11 + 1;
  char v12 = &v9[2 * v11];
  v12[4] = v4;
  v12[5] = v3;
  uint64_t v13 = v2[7];
  if (v13)
  {
LABEL_13:
    uint64_t v17 = v2[6];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_10009B2E8(0, v9[2] + 1, 1, v9);
    }
    unint64_t v19 = v9[2];
    unint64_t v18 = v9[3];
    if (v19 >= v18 >> 1) {
      uint64_t v9 = sub_10009B2E8((void *)(v18 > 1), v19 + 1, 1, v9);
    }
    v9[2] = v19 + 1;
    long long v20 = &v9[2 * v19];
    v20[4] = v17;
    v20[5] = v13;
  }
LABEL_18:
  uint64_t v21 = v2[9];
  if (v21)
  {
    uint64_t v22 = v2[8];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_10009B2E8(0, v9[2] + 1, 1, v9);
    }
    unint64_t v24 = v9[2];
    unint64_t v23 = v9[3];
    if (v24 >= v23 >> 1) {
      uint64_t v9 = sub_10009B2E8((void *)(v23 > 1), v24 + 1, 1, v9);
    }
    v9[2] = v24 + 1;
    int v25 = &v9[2 * v24];
    v25[4] = v22;
    v25[5] = v21;
  }
  swift_bridgeObjectRelease();
  sub_1000E2978(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
  sub_10009DFA0();
  uint64_t v26 = sub_100125A50();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1000DD6A0(void *a1)
{
  uint64_t v3 = v1;
  sub_1000DDF4C(0, &qword_100162FD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v9 = &v12[-v8];
  sub_100009D98(a1, a1[3]);
  sub_1000DDDF0();
  sub_100126650();
  char v13 = 0;
  sub_100126480();
  if (!v2)
  {
    char v10 = *(unsigned char *)(v3 + 56);
    char v13 = *(unsigned char *)(v3 + 16);
    long long v14 = *(_OWORD *)(v3 + 24);
    long long v15 = *(_OWORD *)(v3 + 40);
    char v16 = v10;
    v12[15] = 1;
    sub_1000DDFB0();
    sub_1001264C0();
    char v13 = 2;
    sub_100126480();
    type metadata accessor for HeadlineViewModel(0);
    char v13 = 3;
    sub_100123150();
    sub_1000E3200(&qword_1001629A8, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_100126470();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000DD8EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v25 - v5;
  sub_1000DDF4C(0, &qword_100162FB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v25 - v8;
  uint64_t v10 = type metadata accessor for HeadlineViewModel(0);
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v12 + 5) = xmmword_100127700;
  *((_OWORD *)v12 + 6) = xmmword_100127710;
  v12[112] = 0;
  uint64_t v14 = (uint64_t)&v12[*(int *)(v13 + 44)];
  uint64_t v15 = sub_100123150();
  char v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v29 = v14;
  v16(v14, 1, 1, v15);
  sub_100009D98(a1, a1[3]);
  sub_1000DDDF0();
  sub_100126640();
  if (v2)
  {
    sub_100009D48((uint64_t)a1);
    uint64_t v20 = v29;
    sub_1000DDE44(*((void *)v12 + 10), *((void *)v12 + 11));
    sub_1000C5E40(*((id *)v12 + 13));
    return sub_1000DDE9C(v20, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  }
  else
  {
    uint64_t v17 = (uint64_t)v6;
    uint64_t v19 = v27;
    uint64_t v18 = v28;
    char v30 = 0;
    *(void *)char v12 = sub_1001263B0();
    *((void *)v12 + 1) = v21;
    char v34 = 1;
    sub_1000DDEF8();
    sub_1001263F0();
    char v22 = v33;
    unsigned char v12[16] = v30;
    *(_OWORD *)(v12 + 24) = v31;
    *(_OWORD *)(v12 + 40) = v32;
    v12[56] = v22;
    char v30 = 2;
    v25[1] = 0;
    *((void *)v12 + 8) = sub_1001263B0();
    *((void *)v12 + 9) = v23;
    char v30 = 3;
    sub_1000E3200(&qword_100162950, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_1001263A0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v18);
    sub_100049068(v17, v29);
    sub_1000E2F30((uint64_t)v12, v26, type metadata accessor for HeadlineViewModel);
    sub_100009D48((uint64_t)a1);
    return sub_1000E2F98((uint64_t)v12, type metadata accessor for HeadlineViewModel);
  }
}

uint64_t sub_1000DDDC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000DD8EC(a1, a2);
}

uint64_t sub_1000DDDD8(void *a1)
{
  return sub_1000DD6A0(a1);
}

unint64_t sub_1000DDDF0()
{
  unint64_t result = qword_100162FC0;
  if (!qword_100162FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162FC0);
  }
  return result;
}

uint64_t sub_1000DDE44(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_1000DDE54(a1, a2);
  }
  return a1;
}

uint64_t sub_1000DDE54(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000DDE9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1000E3040(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1000DDEF8()
{
  unint64_t result = qword_100162FC8;
  if (!qword_100162FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162FC8);
  }
  return result;
}

void sub_1000DDF4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1000DDDF0();
    unint64_t v7 = a3(a1, &type metadata for HeadlineViewModel.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1000DDFB0()
{
  unint64_t result = qword_100162FD8;
  if (!qword_100162FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162FD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HeadlineViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DE0D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineViewModel.CodingKeys()
{
  return &type metadata for HeadlineViewModel.CodingKeys;
}

unint64_t sub_1000DE10C()
{
  unint64_t result = qword_100162FE0;
  if (!qword_100162FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162FE0);
  }
  return result;
}

unint64_t sub_1000DE164()
{
  unint64_t result = qword_100162FE8;
  if (!qword_100162FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162FE8);
  }
  return result;
}

unint64_t sub_1000DE1BC()
{
  unint64_t result = qword_100162FF0;
  if (!qword_100162FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100162FF0);
  }
  return result;
}

void sub_1000DE210()
{
  id v0 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle3];
  id v1 = [v0 fontDescriptorWithSymbolicTraits:64];

  if (v1)
  {
    sub_1000E3040(0, &qword_1001631C0, (uint64_t (*)(uint64_t))sub_10003F568, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100127010;
    *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
    sub_1000E3040(0, &qword_1001631C8, (uint64_t (*)(uint64_t))sub_1000E30A4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
    uint64_t v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_100127010;
    *(void *)(v3 + 32) = UIFontWeightTrait;
    *(UIFontWeight *)(v3 + 40) = UIFontWeightMedium;
    unsigned int v4 = UIFontDescriptorTraitsAttribute;
    uint64_t v5 = UIFontWeightTrait;
    unint64_t v6 = sub_10003D7E0(v3);
    sub_1000E3154();
    *(void *)(inited + 64) = v7;
    *(void *)(inited + 40) = v6;
    sub_10003D8E8(inited);
    type metadata accessor for AttributeName(0);
    sub_1000E3200(&qword_10015DA50, type metadata accessor for AttributeName);
    Class isa = sub_1001259F0().super.isa;
    swift_bridgeObjectRelease();
    id v9 = [v1 fontDescriptorByAddingAttributes:isa];

    id v10 = [self fontWithDescriptor:v9 size:0.0];
    [v10 fontWithSize:15.0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000DE474@<X0>(uint64_t a1@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v2 = sub_100125060();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  uint64_t v53 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E1B78();
  uint64_t v61 = v4;
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E24B0();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  __chkstk_darwin(v7);
  uint64_t v57 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E2564(0);
  uint64_t v65 = v9;
  __chkstk_darwin(v9);
  uint64_t v54 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v60 = (uint64_t)&v48 - v12;
  sub_1000E3308(0, &qword_100163150, (uint64_t (*)(uint64_t))sub_1000E25AC, (uint64_t (*)(uint64_t))sub_1000E2564, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v63 = v13;
  __chkstk_darwin(v13);
  uint64_t v64 = (uint64_t)&v48 - v14;
  sub_1000E25F4();
  uint64_t v50 = *(void *)(v15 - 8);
  uint64_t v51 = v15;
  __chkstk_darwin(v15);
  uint64_t v49 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E25AC(0);
  uint64_t v62 = v17;
  __chkstk_darwin(v17);
  char v48 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v52 = (uint64_t)&v48 - v20;
  sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v48 - v22;
  uint64_t v24 = sub_100123150();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  char v30 = (char *)&v48 - v29;
  uint64_t v31 = type metadata accessor for HeadlineViewModel(0);
  sub_1000E2688(v1 + *(int *)(v31 + 36), (uint64_t)v23, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_1000DDE9C((uint64_t)v23, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    *(void *)unint64_t v6 = sub_100124E50();
    *((void *)v6 + 1) = 0;
    v6[16] = 0;
    sub_1000E26F8();
    sub_1000DEDD8(v1, (uint64_t)&v6[*(int *)(v32 + 44)]);
    char v33 = v53;
    sub_100125040();
    uint64_t v34 = sub_1000E3200(&qword_100163140, (void (*)(uint64_t))sub_1000E1B78);
    id v35 = v57;
    uint64_t v36 = v61;
    sub_100125480();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v56);
    sub_1000E2F98((uint64_t)v6, (uint64_t (*)(void))sub_1000E1B78);
    uint64_t v69 = sub_1000DD3BC();
    uint64_t v70 = v37;
    uint64_t v67 = v36;
    uint64_t v68 = v34;
    swift_getOpaqueTypeConformance2();
    sub_10001BA50();
    uint64_t v38 = (uint64_t)v54;
    uint64_t v39 = v59;
    sub_100125460();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v39);
    uint64_t v40 = v60;
    sub_1000E2DA8(v38, v60, (uint64_t (*)(void))sub_1000E2564);
    sub_1000E2F30(v40, v64, (uint64_t (*)(void))sub_1000E2564);
    swift_storeEnumTagMultiPayload();
    sub_1000E2790();
    sub_1000E2868();
    sub_100124F80();
    return sub_1000E2F98(v40, (uint64_t (*)(void))sub_1000E2564);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v23, v24);
    uint64_t v42 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    __chkstk_darwin(v42);
    *(&v48 - 2) = (char *)v1;
    sub_1000E3200(&qword_100163140, (void (*)(uint64_t))sub_1000E1B78);
    uint64_t v43 = v49;
    sub_100125290();
    uint64_t v69 = sub_1000DD3BC();
    uint64_t v70 = v44;
    sub_1000E3200(&qword_100163178, (void (*)(uint64_t))sub_1000E25F4);
    sub_10001BA50();
    uint64_t v45 = (uint64_t)v48;
    uint64_t v46 = v51;
    sub_100125460();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v46);
    uint64_t v47 = v52;
    sub_1000E2DA8(v45, v52, (uint64_t (*)(void))sub_1000E25AC);
    sub_1000E2F30(v47, v64, (uint64_t (*)(void))sub_1000E25AC);
    swift_storeEnumTagMultiPayload();
    sub_1000E2790();
    sub_1000E2868();
    sub_100124F80();
    sub_1000E2F98(v47, (uint64_t (*)(void))sub_1000E25AC);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v30, v24);
  }
}

uint64_t sub_1000DED90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_100124E50();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  sub_1000E26F8();
  return sub_1000DEDD8(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_1000DEDD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_1001258F0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - v8;
  sub_1000E1C40();
  __chkstk_darwin(v10 - 8);
  uint64_t v39 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t)&v39 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v39 - v16;
  *(void *)uint64_t v14 = sub_100124F00();
  *(void *)(v14 + 8) = 0;
  *(unsigned char *)(v14 + 16) = 1;
  sub_1000E29C4();
  sub_1000DF498(a1, v14 + *(int *)(v18 + 44));
  sub_1000E2DA8(v14, (uint64_t)v17, (uint64_t (*)(void))sub_1000E1C40);
  type metadata accessor for HeadlineView(0);
  sub_10005EEE4((uint64_t)v9);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for WidgetFamily.systemSmall(_:), v3);
  sub_1000E3200(&qword_100163190, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  LOBYTE(v14) = sub_100125A90();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v19(v6, v3);
  v19(v9, v3);
  if ((v14 & 1) != 0 || (uint64_t v20 = *(void **)(a1 + 104), v20 == (void *)1))
  {
    *(void *)&long long v65 = 0;
    BYTE8(v65) = 1;
    sub_1000E2A5C((uint64_t)&v65);
    sub_1000E2DA8((uint64_t)&v65, (uint64_t)&v55, (uint64_t (*)(void))sub_1000E2A68);
    sub_1000E3040(0, &qword_100163118, (uint64_t (*)(uint64_t))sub_1000E235C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000E2A88();
    sub_100124F80();
  }
  else
  {
    char v21 = *(unsigned char *)(a1 + 112);
    id v22 = v20;
    uint64_t v23 = sub_1001257B0();
    sub_100039D48(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)&v41, 0.0, 1, INFINITY, 0, v23, v24, v20, v21);
    v52[4] = v45;
    v52[5] = v46;
    v52[6] = v47;
    v52[7] = v48;
    v49[6] = v47;
    v49[7] = v48;
    v52[2] = v43;
    v52[3] = v44;
    v49[4] = v45;
    v49[5] = v46;
    v49[2] = v43;
    v49[3] = v44;
    v52[0] = v41;
    v52[1] = v42;
    v49[0] = v41;
    v49[1] = v42;
    char v51 = 0;
    *(_OWORD *)&v50[7] = v41;
    *(_OWORD *)&v50[23] = v42;
    *(_OWORD *)&v50[39] = v43;
    *(_OWORD *)&v50[119] = v48;
    *(_OWORD *)&v50[103] = v47;
    *(_OWORD *)&v50[87] = v46;
    *(_OWORD *)&v50[71] = v45;
    *(_OWORD *)&v50[55] = v44;
    *(void *)&v53[0] = 0x4024000000000000;
    BYTE8(v53[0]) = 0;
    *(_OWORD *)((char *)&v53[5] + 9) = *(_OWORD *)&v50[80];
    *(_OWORD *)((char *)&v53[6] + 9) = *(_OWORD *)&v50[96];
    *(_OWORD *)((char *)&v53[7] + 9) = *(_OWORD *)&v50[112];
    *((void *)&v53[8] + 1) = *((void *)&v48 + 1);
    *(_OWORD *)((char *)&v53[1] + 9) = *(_OWORD *)&v50[16];
    *(_OWORD *)((char *)&v53[2] + 9) = *(_OWORD *)&v50[32];
    *(_OWORD *)((char *)&v53[3] + 9) = *(_OWORD *)&v50[48];
    *(_OWORD *)((char *)&v53[4] + 9) = *(_OWORD *)&v50[64];
    *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)v50;
    sub_1000E2B9C((id *)v49);
    sub_1000E2B9C((id *)&v41);
    sub_1000E2BC8((id *)v52);
    long long v71 = v53[6];
    long long v72 = v53[7];
    long long v73 = v53[8];
    long long v67 = v53[2];
    long long v68 = v53[3];
    long long v69 = v53[4];
    long long v70 = v53[5];
    long long v65 = v53[0];
    long long v66 = v53[1];
    sub_1000E2BF4((uint64_t)&v65);
    sub_1000E2DA8((uint64_t)&v65, (uint64_t)&v75, (uint64_t (*)(void))sub_1000E2A68);
    sub_1000E2BFC((uint64_t)v53);
    sub_1000E3040(0, &qword_100163118, (uint64_t (*)(uint64_t))sub_1000E235C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000E2A88();
    sub_100124F80();
    sub_1000C5E40(v20);
    sub_1000E2BC8((id *)v49);
    sub_1000E2BC8((id *)&v41);
    long long v81 = v61;
    long long v82 = v62;
    long long v83 = v63;
    char v84 = v64;
    long long v77 = v57;
    long long v78 = v58;
    long long v79 = v59;
    long long v80 = v60;
    long long v75 = v55;
    long long v76 = v56;
  }
  uint64_t v25 = v39;
  sub_1000E2F30((uint64_t)v17, v39, (uint64_t (*)(void))sub_1000E1C40);
  v53[6] = v81;
  v53[7] = v82;
  v53[8] = v83;
  char v54 = v84;
  v53[2] = v77;
  v53[3] = v78;
  v53[4] = v79;
  v53[5] = v80;
  v53[0] = v75;
  v53[1] = v76;
  uint64_t v26 = v40;
  sub_1000E2F30(v25, v40, (uint64_t (*)(void))sub_1000E1C40);
  sub_1000E1C0C(0);
  uint64_t v28 = *(int *)(v27 + 48);
  long long v29 = v53[7];
  long long v61 = v53[6];
  long long v62 = v53[7];
  long long v30 = v53[8];
  long long v63 = v53[8];
  long long v31 = v53[4];
  long long v32 = v53[5];
  long long v59 = v53[4];
  long long v60 = v53[5];
  long long v33 = v53[2];
  long long v34 = v53[3];
  long long v57 = v53[2];
  long long v58 = v53[3];
  long long v35 = v53[0];
  long long v36 = v53[1];
  long long v55 = v53[0];
  long long v56 = v53[1];
  uint64_t v37 = v26 + v28;
  *(_OWORD *)(v37 + 96) = v53[6];
  *(_OWORD *)(v37 + 112) = v29;
  *(_OWORD *)(v37 + 128) = v30;
  *(_OWORD *)(v37 + 32) = v33;
  *(_OWORD *)(v37 + 48) = v34;
  *(_OWORD *)(v37 + 64) = v31;
  *(_OWORD *)(v37 + 80) = v32;
  char v64 = v54;
  *(unsigned char *)(v37 + 144) = v54;
  *(_OWORD *)uint64_t v37 = v35;
  *(_OWORD *)(v37 + 16) = v36;
  sub_1000E2B20((uint64_t)&v55, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000E2B10);
  sub_1000E2F98((uint64_t)v17, (uint64_t (*)(void))sub_1000E1C40);
  long long v71 = v53[6];
  long long v72 = v53[7];
  long long v73 = v53[8];
  char v74 = v54;
  long long v67 = v53[2];
  long long v68 = v53[3];
  long long v69 = v53[4];
  long long v70 = v53[5];
  long long v65 = v53[0];
  long long v66 = v53[1];
  sub_1000E2B20((uint64_t)&v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1000E2B8C);
  return sub_1000E2F98(v25, (uint64_t (*)(void))sub_1000E1C40);
}

uint64_t sub_1000DF498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v136 = a2;
  sub_1000E2000(0, &qword_1001631A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v133 = v3;
  __chkstk_darwin(v3);
  uint64_t v135 = (uint64_t *)((char *)&v105 - v4);
  sub_1000E3040(0, &qword_1001630E8, (uint64_t (*)(uint64_t))sub_1000E20B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
  uint64_t v134 = v5;
  __chkstk_darwin(v5);
  uint64_t v108 = (uint64_t *)((char *)&v105 - v6);
  sub_1000E2148();
  uint64_t v109 = v7;
  uint64_t v107 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v106 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v110 = (char *)&v105 - v10;
  uint64_t v131 = sub_1001258F0();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v129 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v120 = (uint64_t)&v105 - v13;
  sub_1000E2000(0, &qword_1001630E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  __chkstk_darwin(v14 - 8);
  uint64_t v140 = (uint64_t)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v139 = (uint64_t)&v105 - v17;
  uint64_t v18 = type metadata accessor for HeadlineAttributionView();
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  char v21 = (char *)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E1F68(0, &qword_1001630C0, (void (*)(uint64_t))type metadata accessor for HeadlineAttributionView);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v105 - v24;
  sub_1000E1DC0();
  uint64_t v138 = v26;
  __chkstk_darwin(v26);
  uint64_t v142 = (uint64_t)&v105 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v141 = (uint64_t)&v105 - v29;
  char v30 = *(unsigned char *)(a1 + 16);
  long long v31 = *(void **)(a1 + 24);
  uint64_t v32 = *(void *)(a1 + 32);
  uint64_t v33 = *(void *)(a1 + 40);
  uint64_t v34 = *(void *)(a1 + 48);
  uint64_t v132 = (void *)a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 56);
  *char v21 = v30;
  *((void *)v21 + 1) = v31;
  *((void *)v21 + 2) = v32;
  *((void *)v21 + 3) = v33;
  *((void *)v21 + 4) = v34;
  v21[40] = a1;
  long long v35 = (uint64_t *)&v21[*(int *)(v19 + 28)];
  *long long v35 = swift_getKeyPath();
  sub_1000E3040(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  long long v36 = &v21[*(int *)(v19 + 32)];
  *(void *)long long v36 = swift_getKeyPath();
  v36[8] = 0;
  sub_1000140D4(v31, v32, v33, v34, a1);
  uint64_t v37 = sub_100125550();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000E2F30((uint64_t)v21, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for HeadlineAttributionView);
  uint64_t v39 = (uint64_t *)&v25[*(int *)(v23 + 44)];
  *uint64_t v39 = KeyPath;
  v39[1] = v37;
  sub_1000E2F98((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for HeadlineAttributionView);
  if (qword_10015D620 != -1) {
    swift_once();
  }
  sub_1001257A0();
  sub_100124990();
  uint64_t v40 = v142;
  sub_1000E2CD8((uint64_t)v25, v142, (uint64_t)&qword_1001630C0, (uint64_t)type metadata accessor for HeadlineAttributionView, (uint64_t (*)(void, uint64_t, uint64_t))sub_1000E1F68);
  long long v41 = (_OWORD *)(v40 + *(int *)(v138 + 36));
  long long v42 = v148;
  *long long v41 = v147;
  v41[1] = v42;
  v41[2] = v149;
  sub_1000E2D48((uint64_t)v25, (uint64_t)&qword_1001630C0, (uint64_t)type metadata accessor for HeadlineAttributionView, (uint64_t (*)(void))sub_1000E1F68);
  uint64_t v43 = v141;
  sub_1000E2DA8(v40, v141, (uint64_t (*)(void))sub_1000E1DC0);
  sub_1001257D0();
  sub_100124990();
  uint64_t v126 = v150;
  int v125 = v151;
  uint64_t v124 = v152;
  int v123 = v153;
  uint64_t v122 = v154;
  uint64_t v121 = v155;
  long long v44 = v132;
  sub_1000DE210();
  long long v46 = v45;
  [v45 capHeight];

  sub_1001257D0();
  sub_100124990();
  long long v47 = v156;
  int v117 = v157;
  uint64_t v116 = v158;
  int v115 = v159;
  uint64_t v114 = v160;
  uint64_t v113 = v161;
  unint64_t v48 = v44[9];
  uint64_t v162 = v44[8];
  unint64_t v163 = v48;
  sub_10001BA50();
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_100125350();
  uint64_t v51 = v50;
  char v53 = v52 & 1;
  sub_1000DE210();
  sub_100125280();
  uint64_t v128 = sub_1001252E0();
  uint64_t v127 = v54;
  int v111 = v55;
  uint64_t v138 = v56;
  swift_release();
  sub_10001BAA4(v49, v51, v53);
  swift_bridgeObjectRelease();
  uint64_t v137 = swift_getKeyPath();
  uint64_t v119 = sub_100125540();
  uint64_t v118 = swift_getKeyPath();
  uint64_t v112 = swift_getKeyPath();
  type metadata accessor for HeadlineView(0);
  uint64_t v57 = v120;
  sub_10005EEE4(v120);
  uint64_t v58 = v130;
  long long v59 = v129;
  uint64_t v60 = v131;
  (*(void (**)(char *, void, uint64_t))(v130 + 104))(v129, enum case for WidgetFamily.systemSmall(_:), v131);
  sub_1000E3200(&qword_100163190, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  char v61 = sub_100125A90();
  long long v62 = *(void (**)(char *, uint64_t))(v58 + 8);
  v62(v59, v60);
  v62((char *)v57, v60);
  uint64_t v63 = v40;
  uint64_t v64 = v43;
  if ((v61 & 1) != 0 || (unint64_t v65 = v44[11], v65 == 2))
  {
    sub_1001257D0();
    sub_100124990();
    uint64_t v66 = v162;
    char v67 = v163;
    uint64_t v68 = v164;
    char v69 = v165;
    long long v70 = v135;
    *uint64_t v135 = 0;
    *((unsigned char *)v70 + 8) = 1;
    v70[2] = v66;
    *((unsigned char *)v70 + 24) = v67;
    v70[4] = v68;
    *((unsigned char *)v70 + 40) = v69;
    *((_OWORD *)v70 + 3) = v166;
    swift_storeEnumTagMultiPayload();
    sub_1000E23DC(0, &qword_1001630C8);
    sub_1000E2E20();
    sub_1000E2EA8();
    uint64_t v71 = v139;
    sub_100124F80();
  }
  else
  {
    uint64_t v72 = v44[12];
    uint64_t v130 = v44[10];
    uint64_t v162 = v130;
    unint64_t v163 = v65;
    uint64_t v131 = v72;
    uint64_t v164 = v72;
    sub_1000E2FF8(v130, v65);
    sub_1000E21C8();
    long long v73 = v110;
    sub_1001253D0();
    sub_1001257D0();
    sub_100124990();
    uint64_t v129 = (char *)v162;
    char v74 = v163;
    uint64_t v120 = v164;
    uint64_t v132 = v47;
    char v75 = v165;
    uint64_t v76 = *((void *)&v166 + 1);
    uint64_t v105 = v166;
    char v146 = 0;
    uint64_t v77 = v107;
    long long v78 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
    long long v79 = v106;
    long long v80 = v73;
    uint64_t v81 = v109;
    v78(v106, v80, v109);
    char v145 = 1;
    char v144 = v74;
    char v143 = v75;
    char v82 = v146;
    uint64_t v83 = (uint64_t)v108;
    *uint64_t v108 = 0x4010000000000000;
    *(unsigned char *)(v83 + 8) = v82;
    sub_1000E20B8();
    uint64_t v85 = v84;
    v78((char *)(v83 + *(int *)(v84 + 48)), v79, v81);
    uint64_t v86 = v83 + *(int *)(v85 + 64);
    char v87 = v145;
    char v88 = v144;
    char v89 = v143;
    *(void *)uint64_t v86 = 0;
    *(unsigned char *)(v86 + 8) = v87;
    *(void *)(v86 + 16) = v129;
    *(unsigned char *)(v86 + 24) = v88;
    *(void *)(v86 + 32) = v120;
    *(unsigned char *)(v86 + 40) = v89;
    *(void *)(v86 + 48) = v105;
    *(void *)(v86 + 56) = v76;
    uint64_t v129 = *(char **)(v77 + 8);
    ((void (*)(char *, uint64_t))v129)(v79, v81);
    sub_1000E2688(v83, (uint64_t)v135, &qword_1001630E8, (uint64_t (*)(uint64_t))sub_1000E20B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    swift_storeEnumTagMultiPayload();
    sub_1000E23DC(0, &qword_1001630C8);
    sub_1000E2E20();
    sub_1000E2EA8();
    uint64_t v71 = v139;
    uint64_t v64 = v141;
    long long v47 = v132;
    sub_100124F80();
    sub_1000DDE44(v130, v65);
    sub_1000DDE9C(v83, &qword_1001630E8, (uint64_t (*)(uint64_t))sub_1000E20B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    ((void (*)(char *, uint64_t))v129)(v110, v81);
    uint64_t v63 = v142;
  }
  int v90 = v111 & 1;
  sub_1000E2F30(v64, v63, (uint64_t (*)(void))sub_1000E1DC0);
  sub_1000E2CD8(v71, v140, (uint64_t)&qword_1001630E0, (uint64_t)&type metadata accessor for _ConditionalContent, (uint64_t (*)(void, uint64_t, uint64_t))sub_1000E2000);
  uint64_t v91 = v136;
  sub_1000E2F30(v63, v136, (uint64_t (*)(void))sub_1000E1DC0);
  sub_1000E1CD4();
  uint64_t v93 = v91 + v92[12];
  *(void *)uint64_t v93 = 0;
  *(unsigned char *)(v93 + 8) = 1;
  *(void *)(v93 + 16) = v126;
  *(unsigned char *)(v93 + 24) = v125;
  *(void *)(v93 + 32) = v124;
  *(unsigned char *)(v93 + 40) = v123;
  uint64_t v94 = v121;
  *(void *)(v93 + 48) = v122;
  *(void *)(v93 + 56) = v94;
  uint64_t v95 = v91 + v92[16];
  *(void *)uint64_t v95 = 0;
  *(unsigned char *)(v95 + 8) = 1;
  *(void *)(v95 + 16) = v47;
  *(unsigned char *)(v95 + 24) = v117;
  *(void *)(v95 + 32) = v116;
  *(unsigned char *)(v95 + 40) = v115;
  uint64_t v96 = v113;
  *(void *)(v95 + 48) = v114;
  *(void *)(v95 + 56) = v96;
  uint64_t v97 = v91 + v92[20];
  uint64_t v98 = v128;
  uint64_t v99 = v127;
  *(void *)uint64_t v97 = v128;
  *(void *)(v97 + 8) = v99;
  LODWORD(v135) = v90;
  *(unsigned char *)(v97 + 16) = v90;
  uint64_t v100 = v137;
  *(void *)(v97 + 24) = v138;
  *(void *)(v97 + 32) = v100;
  *(unsigned char *)(v97 + 40) = 0;
  uint64_t v101 = v119;
  *(void *)(v97 + 48) = v118;
  *(void *)(v97 + 56) = v101;
  *(void *)(v97 + 64) = v112;
  *(void *)(v97 + 72) = 3;
  *(unsigned char *)(v97 + 80) = 0;
  uint64_t v102 = v91 + v92[24];
  uint64_t v103 = v140;
  sub_1000E2CD8(v140, v102, (uint64_t)&qword_1001630E0, (uint64_t)&type metadata accessor for _ConditionalContent, (uint64_t (*)(void, uint64_t, uint64_t))sub_1000E2000);
  sub_10001BC2C(v98, v99, v90);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000E2D48(v139, (uint64_t)&qword_1001630E0, (uint64_t)&type metadata accessor for _ConditionalContent, (uint64_t (*)(void))sub_1000E2000);
  sub_1000E2F98(v141, (uint64_t (*)(void))sub_1000E1DC0);
  sub_1000E2D48(v103, (uint64_t)&qword_1001630E0, (uint64_t)&type metadata accessor for _ConditionalContent, (uint64_t (*)(void))sub_1000E2000);
  sub_10001BAA4(v98, v99, (char)v135);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1000E2F98(v142, (uint64_t (*)(void))sub_1000E1DC0);
}

uint64_t sub_1000E0474@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100124C60();
  *a1 = result;
  return result;
}

uint64_t sub_1000E04A0()
{
  return sub_100124C70();
}

uint64_t sub_1000E04CC(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100150FC0;
  v6._object = a2;
  unint64_t v4 = sub_100126340(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000E0518(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = (void *)a2[3];
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    char v12 = *((unsigned char *)a2 + 56);
    swift_bridgeObjectRetain();
    sub_1000140D4(v8, v9, v10, v11, v12);
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v12;
    uint64_t v13 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v13;
    unint64_t v14 = a2[11];
    swift_bridgeObjectRetain();
    if (v14 <= 2)
    {
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(void *)(a1 + 96) = a2[12];
    }
    else
    {
      *(void *)(a1 + 80) = a2[10];
      *(void *)(a1 + 88) = v14;
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_retain();
    }
    uint64_t v16 = (void *)a2[13];
    if (v16 == (void *)1)
    {
      *(void *)(a1 + 104) = a2[13];
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      *(void *)(a1 + 104) = v16;
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
      id v17 = v16;
    }
    uint64_t v18 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_100123150();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = *(int *)(a3 + 20);
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    sub_1000E3040(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      void *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000E0850(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_100014114(*(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  unint64_t v4 = *(void **)(a1 + 104);
  if (v4 != (void *)1) {

  }
  uint64_t v5 = a1 + *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  uint64_t v6 = sub_100123150();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  sub_1000E3040(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1001258F0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1000E0A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  sub_1000140D4(v7, v8, v9, v10, v11);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  uint64_t v12 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v12;
  unint64_t v13 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  if (v13 <= 2)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
  }
  else
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v13;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  unint64_t v14 = *(void **)(a2 + 104);
  if (v14 == (void *)1)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  else
  {
    *(void *)(a1 + 104) = v14;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    id v15 = v14;
  }
  uint64_t v16 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  id v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_100123150();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  sub_1000E3040(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000E0CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 56);
  sub_1000140D4(v6, v7, v8, v9, v10);
  char v11 = *(void **)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  sub_100014114(v11, v12, v13, v14, v15);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (long long *)(a1 + 80);
  id v17 = (long long *)(a2 + 80);
  unint64_t v18 = *(void *)(a1 + 88);
  unint64_t v19 = *(void *)(a2 + 88);
  if (v18 == 2)
  {
    if (v19 <= 2)
    {
LABEL_3:
      long long v20 = *v17;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *uint64_t v16 = v20;
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  if (v19 == 2)
  {
    sub_1000C3E08(a1 + 80);
LABEL_11:
    uint64_t v21 = *(void *)(a2 + 96);
    *uint64_t v16 = *v17;
    *(void *)(a1 + 96) = v21;
    goto LABEL_12;
  }
  if (v18 < 2)
  {
    if (v19 < 2) {
      goto LABEL_3;
    }
LABEL_8:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_12;
  }
  if (v19 < 2)
  {
    sub_1000E2F98(a1 + 80, (uint64_t (*)(void))sub_1000C3D78);
    goto LABEL_11;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
LABEL_12:
  uint64_t v22 = (uint64_t *)(a1 + 104);
  uint64_t v23 = *(void **)(a1 + 104);
  uint64_t v25 = (uint64_t *)(a2 + 104);
  uint64_t v24 = *(void **)(a2 + 104);
  if (v23 == (void *)1)
  {
    if (v24 == (void *)1)
    {
      uint64_t v26 = *v25;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *uint64_t v22 = v26;
    }
    else
    {
      *(void *)(a1 + 104) = v24;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      id v28 = v24;
    }
  }
  else if (v24 == (void *)1)
  {
    sub_1000C3E5C(a1 + 104);
    char v27 = *(unsigned char *)(a2 + 112);
    *uint64_t v22 = *v25;
    *(unsigned char *)(a1 + 112) = v27;
  }
  else
  {
    *(void *)(a1 + 104) = v24;
    id v29 = v24;

    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  uint64_t v30 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  long long v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  uint64_t v33 = sub_100123150();
  uint64_t v34 = *(void *)(v33 - 8);
  long long v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_26;
    }
LABEL_25:
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_26;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v34 + 8))(v31, v33);
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v34 + 24))(v31, v32, v33);
  if (a1 == a2) {
    return a1;
  }
LABEL_26:
  uint64_t v39 = *(int *)(a3 + 20);
  uint64_t v40 = (void *)(a1 + v39);
  long long v41 = (void *)(a2 + v39);
  sub_1000DDE9C(a1 + v39, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  sub_1000E3040(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v42 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  }
  else
  {
    *uint64_t v40 = *v41;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000E1190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  char v10 = (void *)(a1 + v9);
  char v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_100123150();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  id v17 = (const void *)(a2 + v15);
  sub_1000E3040(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_1001258F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v16, v17, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000E13DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void **)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  char v12 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v7;
  sub_100014114(v8, v9, v10, v11, v12);
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(a1 + 88);
  unint64_t v15 = *(void *)(a2 + 88);
  if (v14 == 2) {
    goto LABEL_7;
  }
  if (v15 == 2)
  {
    sub_1000C3E08(a1 + 80);
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    goto LABEL_8;
  }
  if (v14 < 2) {
    goto LABEL_7;
  }
  if (v15 < 2)
  {
    sub_1000E2F98(a1 + 80, (uint64_t (*)(void))sub_1000C3D78);
    goto LABEL_7;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
LABEL_8:
  uint64_t v16 = *(void **)(a1 + 104);
  uint64_t v17 = *(void *)(a2 + 104);
  if (v16 == (void *)1)
  {
LABEL_11:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
    goto LABEL_13;
  }
  if (v17 == 1)
  {
    sub_1000C3E5C(a1 + 104);
    goto LABEL_11;
  }
  *(void *)(a1 + 104) = v17;

  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_13:
  uint64_t v18 = *(int *)(type metadata accessor for HeadlineViewModel(0) + 36);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = sub_100123150();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      if (a1 == a2) {
        return a1;
      }
      goto LABEL_20;
    }
LABEL_19:
    sub_1000E3040(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_20;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v19, v20, v21);
  if (a1 == a2) {
    return a1;
  }
LABEL_20:
  uint64_t v27 = *(int *)(a3 + 20);
  id v28 = (void *)(a1 + v27);
  id v29 = (const void *)(a2 + v27);
  sub_1000DDE9C(a1 + v27, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  sub_1000E3040(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v31 = v30;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_1001258F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v28, v29, v32);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000E17C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E17D4);
}

uint64_t sub_1000E17D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HeadlineViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_1000E3040(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1000E18FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E1910);
}

uint64_t sub_1000E1910(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for HeadlineViewModel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_1000E3040(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for HeadlineView(uint64_t a1)
{
  return sub_100009E3C(a1, qword_100163050);
}

void sub_1000E1A64()
{
  type metadata accessor for HeadlineViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_1000E3040(319, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1000E1B5C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000E1B78()
{
  if (!qword_100163088)
  {
    sub_1000E3040(255, &qword_100163090, (uint64_t (*)(uint64_t))sub_1000E1C0C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000E2428();
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163088);
    }
  }
}

void sub_1000E1C0C(uint64_t a1)
{
}

void sub_1000E1C40()
{
  if (!qword_1001630A0)
  {
    sub_1000E3040(255, &qword_1001630A8, (uint64_t (*)(uint64_t))sub_1000E1CD4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000E221C();
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001630A0);
    }
  }
}

void sub_1000E1CD4()
{
  if (!qword_1001630B0)
  {
    sub_1000E1DC0();
    sub_1000E23DC(255, (unint64_t *)&qword_10015FA58);
    sub_1000E23DC(255, &qword_1001630C8);
    sub_1000E1EB8();
    sub_1000E2000(255, &qword_1001630E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1001630B0);
    }
  }
}

void sub_1000E1DC0()
{
  if (!qword_1001630B8)
  {
    sub_1000E1F68(255, &qword_1001630C0, (void (*)(uint64_t))type metadata accessor for HeadlineAttributionView);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001630B8);
    }
  }
}

void sub_1000E1E3C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1000E2978(255, a3, a4, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1000E1EB8()
{
  if (!qword_1001630D0)
  {
    sub_1000E1F68(255, &qword_1001630D8, (void (*)(uint64_t))sub_10003C59C);
    sub_1000E1E3C(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001630D0);
    }
  }
}

void sub_1000E1F68(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1000E1E3C(255, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8, (uint64_t)&type metadata for Color, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000E2000(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1000E3040(255, &qword_1001630E8, (uint64_t (*)(uint64_t))sub_1000E20B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    uint64_t v7 = v6;
    sub_1000E23DC(255, &qword_1001630C8);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1000E20B8()
{
  if (!qword_1001630F0)
  {
    sub_1000E2148();
    sub_1000E23DC(255, &qword_1001630C8);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1001630F0);
    }
  }
}

void sub_1000E2148()
{
  if (!qword_1001630F8)
  {
    sub_1000E21C8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001630F8);
    }
  }
}

unint64_t sub_1000E21C8()
{
  unint64_t result = qword_100163100;
  if (!qword_100163100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163100);
  }
  return result;
}

unint64_t sub_1000E221C()
{
  unint64_t result = qword_100163108;
  if (!qword_100163108)
  {
    sub_1000E3040(255, &qword_1001630A8, (uint64_t (*)(uint64_t))sub_1000E1CD4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163108);
  }
  return result;
}

void sub_1000E22A4(uint64_t a1)
{
}

void sub_1000E22C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void *))
{
  if (!*a2)
  {
    sub_1000E3040(255, &qword_100163118, (uint64_t (*)(uint64_t))sub_1000E235C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v7 = a3(a1, v6, &type metadata for Spacer);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1000E235C()
{
  if (!qword_100163120)
  {
    sub_1000E23DC(255, &qword_100163128);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100163120);
    }
  }
}

void sub_1000E23DC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_100124B20();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1000E2428()
{
  unint64_t result = qword_100163130;
  if (!qword_100163130)
  {
    sub_1000E3040(255, &qword_100163090, (uint64_t (*)(uint64_t))sub_1000E1C0C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163130);
  }
  return result;
}

void sub_1000E24B0()
{
  if (!qword_100163138)
  {
    sub_1000E1B78();
    sub_1000E3200(&qword_100163140, (void (*)(uint64_t))sub_1000E1B78);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100163138);
    }
  }
}

void sub_1000E2564(uint64_t a1)
{
}

void sub_1000E25AC(uint64_t a1)
{
}

void sub_1000E25F4()
{
  if (!qword_100163160)
  {
    sub_1000E1B78();
    sub_1000E3200(&qword_100163140, (void (*)(uint64_t))sub_1000E1B78);
    unint64_t v0 = sub_1001252A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163160);
    }
  }
}

uint64_t sub_1000E2688(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1000E3040(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1000E26F8()
{
  if (!qword_100163168)
  {
    sub_1000E3040(255, &qword_100163090, (uint64_t (*)(uint64_t))sub_1000E1C0C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163168);
    }
  }
}

unint64_t sub_1000E2790()
{
  unint64_t result = qword_100163170;
  if (!qword_100163170)
  {
    sub_1000E25AC(255);
    sub_1000E3200(&qword_100163178, (void (*)(uint64_t))sub_1000E25F4);
    sub_1000E3200(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163170);
  }
  return result;
}

unint64_t sub_1000E2868()
{
  unint64_t result = qword_100163180;
  if (!qword_100163180)
  {
    sub_1000E2564(255);
    sub_1000E1B78();
    sub_1000E3200(&qword_100163140, (void (*)(uint64_t))sub_1000E1B78);
    swift_getOpaqueTypeConformance2();
    sub_1000E3200(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163180);
  }
  return result;
}

uint64_t sub_1000E2970@<X0>(uint64_t a1@<X8>)
{
  return sub_1000DED90(*(void *)(v1 + 16), a1);
}

void sub_1000E2978(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1000E29C4()
{
  if (!qword_100163188)
  {
    sub_1000E3040(255, &qword_1001630A8, (uint64_t (*)(uint64_t))sub_1000E1CD4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163188);
    }
  }
}

uint64_t sub_1000E2A5C(uint64_t result)
{
  *(unsigned char *)(result + 144) = 1;
  return result;
}

void sub_1000E2A68(uint64_t a1)
{
}

unint64_t sub_1000E2A88()
{
  unint64_t result = qword_1001631A0;
  if (!qword_1001631A0)
  {
    sub_1000E3040(255, &qword_100163118, (uint64_t (*)(uint64_t))sub_1000E235C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001631A0);
  }
  return result;
}

uint64_t sub_1000E2B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if ((a19 & 1) == 0) {
    return _objc_retain_x2();
  }
  return result;
}

uint64_t sub_1000E2B20(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 144);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), v4);
  return a1;
}

uint64_t sub_1000E2B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if ((a19 & 1) == 0) {
    return _objc_release_x2();
  }
  return result;
}

id *sub_1000E2B9C(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_1000E2BC8(id *a1)
{
  return a1;
}

uint64_t sub_1000E2BF4(uint64_t result)
{
  *(unsigned char *)(result + 144) = 0;
  return result;
}

uint64_t sub_1000E2BFC(uint64_t a1)
{
  id v2 = *(id *)(a1 + 16);
  return a1;
}

uint64_t sub_1000E2C2C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100124C40();
  *a1 = v3;
  return result;
}

uint64_t sub_1000E2C58()
{
  return sub_100124C50();
}

uint64_t sub_1000E2C80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100124C60();
  *a1 = result;
  return result;
}

uint64_t sub_1000E2CAC()
{
  return sub_100124C70();
}

uint64_t sub_1000E2CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1000E2D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1000E2DA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000E2E20()
{
  unint64_t result = qword_1001631B0;
  if (!qword_1001631B0)
  {
    sub_1000E3040(255, &qword_1001630E8, (uint64_t (*)(uint64_t))sub_1000E20B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001631B0);
  }
  return result;
}

unint64_t sub_1000E2EA8()
{
  unint64_t result = qword_1001631B8;
  if (!qword_1001631B8)
  {
    sub_1000E23DC(255, &qword_1001630C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001631B8);
  }
  return result;
}

uint64_t sub_1000E2F30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000E2F98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000E2FF8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1000E3040(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1000E30A4(uint64_t a1)
{
}

void sub_1000E30D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1000E3154()
{
  if (!qword_1001631D8)
  {
    type metadata accessor for TraitKey(255);
    type metadata accessor for Weight(255);
    sub_1000E3200(&qword_10015DA40, type metadata accessor for TraitKey);
    unint64_t v0 = sub_100125A20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001631D8);
    }
  }
}

uint64_t sub_1000E3200(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000E324C()
{
  unint64_t result = qword_1001631E0;
  if (!qword_1001631E0)
  {
    sub_1000E3308(255, &qword_1001631E8, (uint64_t (*)(uint64_t))sub_1000E25AC, (uint64_t (*)(uint64_t))sub_1000E2564, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_1000E2790();
    sub_1000E2868();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001631E0);
  }
  return result;
}

void sub_1000E3308(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t *Settings.UserPreferences.showCurrency.unsafeMutableAddressor()
{
  if (qword_10015D598 != -1) {
    swift_once();
  }
  return &static Settings.UserPreferences.showCurrency;
}

uint64_t sub_1000E33D8()
{
  uint64_t v0 = sub_100123FE0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_100123FF0();
  __chkstk_darwin(v4 - 8);
  sub_100123DA0();
  sub_100123D90();
  sub_100123D80();
  swift_release();
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for Access.public(_:), v0);
  v6[15] = 0;
  sub_1000E3958();
  swift_allocObject();
  uint64_t result = sub_100124010();
  static Settings.UserPreferences.showCurrency = result;
  return result;
}

uint64_t static Settings.UserPreferences.showCurrency.getter()
{
  return sub_1000E3840(&qword_10015D598);
}

uint64_t sub_1000E3580()
{
  uint64_t v0 = sub_100123FE0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100123FF0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100123500();
  __n128 v9 = __chkstk_darwin(v8);
  (*(void (**)(char *, void, __n128))(v11 + 104))((char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for ChartRange.oneDay(_:), v9);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Domain.standard(_:), v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Access.public(_:), v0);
  sub_1000E389C();
  swift_allocObject();
  uint64_t result = sub_100124010();
  static Settings.UserPreferences.chartDateRange = result;
  return result;
}

uint64_t *Settings.UserPreferences.chartDateRange.unsafeMutableAddressor()
{
  if (qword_10015D5A0 != -1) {
    swift_once();
  }
  return &static Settings.UserPreferences.chartDateRange;
}

uint64_t static Settings.UserPreferences.chartDateRange.getter()
{
  return sub_1000E3840(&qword_10015D5A0);
}

uint64_t sub_1000E3840(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.UserPreferences()
{
  return &type metadata for Settings.UserPreferences;
}

void sub_1000E389C()
{
  if (!qword_1001631F0)
  {
    sub_100123500();
    sub_1000E3900();
    unint64_t v0 = sub_100124000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001631F0);
    }
  }
}

unint64_t sub_1000E3900()
{
  unint64_t result = qword_1001631F8;
  if (!qword_1001631F8)
  {
    sub_100123500();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001631F8);
  }
  return result;
}

void sub_1000E3958()
{
  if (!qword_100163200)
  {
    unint64_t v0 = sub_100124000();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163200);
    }
  }
}

uint64_t sub_1000E39B8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = (_OWORD *)(a1 + 48);
    uint64_t v11 = a2 + 6;
    uint64_t v12 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      long long v13 = *((_OWORD *)a2 + 4);
      *uint64_t v10 = *v11;
      *(_OWORD *)(a1 + 64) = v13;
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
      *(void *)(a1 + 64) = a2[8];
      *(void *)(a1 + 72) = v12;
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    *(void *)(a1 + 88) = a2[11];
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    uint64_t v15 = a2[13];
    uint64_t v16 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v16;
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    *(void *)(a1 + 136) = a2[17];
    uint64_t v17 = *(int *)(v6 + 36);
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    *(void *)(a1 + 104) = v15;
    uint64_t v20 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v21 = *((void *)v20 - 1);
    uint64_t v22 = *(unsigned int (**)(void *, uint64_t, int *))(v21 + 48);
    swift_bridgeObjectRetain();
    if (v22(v19, 1, v20))
    {
      sub_1000E6354(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      *uint64_t v18 = *v19;
      uint64_t v24 = v20[5];
      int v37 = (char *)v18 + v24;
      int v25 = (char *)v19 + v24;
      uint64_t v26 = sub_1001232B0();
      uint64_t v38 = v6;
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v37, v25, v26);
      sub_10002FE38();
      v27(&v37[*(int *)(v28 + 36)], &v25[*(int *)(v28 + 36)], v26);
      uint64_t v6 = v38;
      uint64_t v29 = v20[6];
      uint64_t v30 = (char *)v18 + v29;
      uint64_t v31 = (char *)v19 + v29;
      uint64_t v32 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
      uint64_t v33 = v20[8];
      uint64_t v34 = (char *)v18 + v33;
      long long v35 = (char *)v19 + v33;
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v35[8];
      *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
    }
    *(void *)(a1 + *(int *)(v6 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 40));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000E3D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = (_OWORD *)(a1 + 48);
  uint64_t v10 = a2 + 48;
  uint64_t v11 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    long long v12 = *(_OWORD *)(v10 + 16);
    *uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(v10 + 8);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v11;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v14;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *(void *)(a1 + 104) = v13;
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(unsigned int (**)(void *, uint64_t, int *))(v19 + 48);
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    sub_1000E6354(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    uint64_t v22 = v18[5];
    int v36 = (char *)v16 + v22;
    uint64_t v23 = (char *)v17 + v22;
    uint64_t v37 = a3;
    uint64_t v24 = sub_1001232B0();
    int v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v36, v23, v24);
    sub_10002FE38();
    uint64_t v27 = v24;
    a3 = v37;
    v25(&v36[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v27);
    uint64_t v28 = v18[6];
    uint64_t v29 = (char *)v16 + v28;
    uint64_t v30 = (char *)v17 + v28;
    uint64_t v31 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
    uint64_t v32 = v18[8];
    uint64_t v33 = (char *)v16 + v32;
    uint64_t v34 = (char *)v17 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000E4028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v5 = (_OWORD *)(a1 + 48);
  uint64_t v6 = (_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) == 1)
  {
    if (v7 == 1)
    {
      long long v8 = *(_OWORD *)(a2 + 64);
      *int v5 = *v6;
      *(_OWORD *)(a1 + 64) = v8;
    }
    else
    {
      uint64_t v10 = *(void *)v6;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)int v5 = v10;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_10003088C(a1 + 48);
    long long v9 = *(_OWORD *)(a2 + 64);
    *int v5 = *v6;
    *(_OWORD *)(a1 + 64) = v9;
  }
  else
  {
    uint64_t v11 = *(void *)v6;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    *(void *)int v5 = v11;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = v13;
  uint64_t v14 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v14;
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      *uint64_t v16 = *v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v37 = v18[5];
      uint64_t v38 = (char *)v16 + v37;
      uint64_t v39 = (char *)v17 + v37;
      uint64_t v40 = sub_1001232B0();
      long long v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24);
      v41(v38, v39, v40);
      sub_10002FE38();
      v41(&v38[*(int *)(v42 + 36)], &v39[*(int *)(v42 + 36)], v40);
      uint64_t v43 = v18[6];
      long long v44 = (char *)v16 + v43;
      long long v45 = (char *)v17 + v43;
      uint64_t v46 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
      uint64_t v47 = v18[7];
      unint64_t v48 = (void *)((char *)v16 + v47);
      uint64_t v49 = (void *)((char *)v17 + v47);
      *unint64_t v48 = *v49;
      v48[1] = v49[1];
      uint64_t v50 = v18[8];
      uint64_t v51 = (char *)v16 + v50;
      char v52 = (char *)v17 + v50;
      char v53 = v52[8];
      *(void *)uint64_t v51 = *(void *)v52;
      v51[8] = v53;
      *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
      goto LABEL_14;
    }
    sub_1000E6524((uint64_t)v16, type metadata accessor for PreparedSparkline);
    goto LABEL_13;
  }
  if (v22)
  {
LABEL_13:
    sub_1000E6354(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v16, v17, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  *uint64_t v16 = *v17;
  uint64_t v23 = v18[5];
  uint64_t v54 = (char *)v16 + v23;
  int v55 = (char *)v17 + v23;
  uint64_t v24 = sub_1001232B0();
  int v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v54, v55, v24);
  sub_10002FE38();
  v25(&v54[*(int *)(v26 + 36)], &v55[*(int *)(v26 + 36)], v24);
  uint64_t v27 = v18[6];
  uint64_t v28 = (char *)v16 + v27;
  uint64_t v29 = (char *)v17 + v27;
  uint64_t v30 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
  uint64_t v31 = v18[8];
  uint64_t v32 = (char *)v16 + v31;
  uint64_t v33 = (char *)v17 + v31;
  char v34 = v33[8];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v34;
  *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_14:
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000E4534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v8 = *(int *)(a3 + 36);
  long long v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v11 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    sub_1000E6354(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *long long v9 = *v10;
    uint64_t v14 = v11[5];
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v27 = (char *)v10 + v14;
    uint64_t v16 = sub_1001232B0();
    uint64_t v28 = v12;
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
    v17(v15, v27, v16);
    sub_10002FE38();
    v17(&v15[*(int *)(v18 + 36)], &v27[*(int *)(v18 + 36)], v16);
    uint64_t v19 = v11[6];
    uint64_t v20 = (char *)v9 + v19;
    int v21 = (char *)v10 + v19;
    uint64_t v22 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    *(_OWORD *)((char *)v9 + v11[7]) = *(_OWORD *)((char *)v10 + v11[7]);
    uint64_t v23 = v11[8];
    uint64_t v24 = (char *)v9 + v23;
    int v25 = (char *)v10 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    *((unsigned char *)v9 + v11[9]) = *((unsigned char *)v10 + v11[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v28 + 56))(v9, 0, 1, v11);
  }
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1000E47C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 48);
  long long v9 = (_OWORD *)(a2 + 48);
  if (*(void *)(a1 + 72) == 1) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(a2 + 72);
  if (v10 == 1)
  {
    sub_10003088C(a1 + 48);
LABEL_4:
    long long v11 = *(_OWORD *)(a2 + 64);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 64) = v11;
    goto LABEL_6;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      *uint64_t v14 = *v15;
      swift_bridgeObjectRelease();
      uint64_t v36 = v16[5];
      uint64_t v37 = (char *)v14 + v36;
      uint64_t v38 = (char *)v15 + v36;
      uint64_t v39 = sub_1001232B0();
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40);
      v40(v37, v38, v39);
      sub_10002FE38();
      v40(&v37[*(int *)(v41 + 36)], &v38[*(int *)(v41 + 36)], v39);
      uint64_t v42 = v16[6];
      uint64_t v43 = (char *)v14 + v42;
      long long v44 = (char *)v15 + v42;
      uint64_t v45 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
      *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
      uint64_t v46 = v16[8];
      uint64_t v47 = (char *)v14 + v46;
      unint64_t v48 = (char *)v15 + v46;
      v47[8] = v48[8];
      *(void *)uint64_t v47 = *(void *)v48;
      *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
      goto LABEL_12;
    }
    sub_1000E6524((uint64_t)v14, type metadata accessor for PreparedSparkline);
    goto LABEL_11;
  }
  if (v20)
  {
LABEL_11:
    sub_1000E6354(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v14, v15, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  *uint64_t v14 = *v15;
  uint64_t v21 = v16[5];
  uint64_t v22 = (char *)v14 + v21;
  uint64_t v23 = (char *)v15 + v21;
  uint64_t v24 = sub_1001232B0();
  int v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  sub_10002FE38();
  v25(&v22[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v24);
  uint64_t v27 = v16[6];
  uint64_t v28 = (char *)v14 + v27;
  uint64_t v29 = (char *)v15 + v27;
  uint64_t v30 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
  uint64_t v31 = v16[8];
  uint64_t v32 = (char *)v14 + v31;
  uint64_t v33 = (char *)v15 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
LABEL_12:
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000E4C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E4C2C);
}

uint64_t sub_1000E4C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1000E6354(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000E4D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E4D20);
}

uint64_t sub_1000E4D20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1000E6354(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LargeDetailContentView()
{
  uint64_t result = qword_100163260;
  if (!qword_100163260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000E4E44()
{
  sub_1000E6354(319, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000E4F40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000E4F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LargeSparklineView(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003D264(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v25 - v11;
  sub_1000E60C8(0, &qword_1001632C8, &qword_1001632D0, (uint64_t (*)(uint64_t))sub_1000E6168, &qword_100163310);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v25 - v17;
  *(void *)uint64_t v18 = sub_100124F00();
  *((void *)v18 + 1) = 0;
  v18[16] = 0;
  sub_1000E64A8(0, &qword_100163318, &qword_1001632D0, (uint64_t (*)(uint64_t))sub_1000E6168);
  sub_1000E5250(a1, (uint64_t)&v18[*(int *)(v19 + 44)]);
  uint64_t v20 = type metadata accessor for LargeDetailContentView();
  sub_100032264(a1 + *(int *)(v20 + 36), (uint64_t)v6);
  uint64_t v21 = sub_1001257D0();
  sub_100039F0C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v9, 0.0, 1, INFINITY, 0, v21, v22);
  sub_1000E6524((uint64_t)v6, type metadata accessor for LargeSparklineView);
  sub_1000E67C4((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))sub_10003D264);
  sub_1000E6584((uint64_t)v18, (uint64_t)v15);
  sub_1000E6614((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))sub_10003D264);
  sub_1000E6584((uint64_t)v15, a2);
  sub_1000E602C();
  sub_1000E6614((uint64_t)v9, a2 + *(int *)(v23 + 48), (uint64_t (*)(void))sub_10003D264);
  sub_1000E6524((uint64_t)v12, (uint64_t (*)(void))sub_10003D264);
  sub_1000E667C((uint64_t)v18);
  sub_1000E6524((uint64_t)v9, (uint64_t (*)(void))sub_10003D264);
  return sub_1000E667C((uint64_t)v15);
}

void *sub_1000E5250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000E62A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E6238();
  uint64_t v57 = (uint64_t (*)())(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v50 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v58 = (uint64_t)&v49 - v10;
  int v74 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v76 = *(void *)(a1 + 16);
  uint64_t v77 = v11;
  uint64_t v63 = v13;
  uint64_t v64 = v12;
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v75 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v61 = *(void *)(a1 + 48);
  uint64_t v16 = v61;
  uint64_t v62 = v14;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v59 = *(void *)(a1 + 72);
  uint64_t v18 = v59;
  uint64_t v60 = v15;
  uint64_t v19 = *(void *)(a1 + 88);
  uint64_t v72 = *(unsigned __int8 *)(a1 + 96);
  uint64_t v73 = v19;
  uint64_t v20 = *(void *)(a1 + 104);
  uint64_t v21 = *(void *)(a1 + 112);
  uint64_t v78 = v17;
  uint64_t v79 = v21;
  uint64_t v70 = *(void *)(a1 + 120);
  uint64_t v71 = v20;
  uint64_t v69 = *(unsigned __int8 *)(a1 + 128);
  uint64_t v68 = *(void *)(a1 + 136);
  int v67 = *(unsigned __int8 *)(a1 + 144);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = swift_allocObject();
  uint64_t v65 = v22;
  *(void *)(v22 + 16) = 0;
  *(unsigned char *)(v22 + 24) = 1;
  *(void *)(v22 + 32) = 0;
  *(unsigned char *)(v22 + 40) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000321B8(v16, v15, v78, v18);
  swift_bridgeObjectRetain();
  sub_1001257D0();
  sub_100124990();
  uint64_t v56 = v80;
  int v55 = v81;
  uint64_t v54 = v82;
  int v53 = v83;
  uint64_t v51 = v85;
  uint64_t v52 = v84;
  *(void *)uint64_t v6 = sub_100124E70();
  *((void *)v6 + 1) = 0x4038000000000000;
  unsigned char v6[16] = 0;
  sub_1000E671C();
  sub_1000E58BC(a1, (uint64_t)&v6[*(int *)(v23 + 44)]);
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(unsigned char *)(v25 + 24) = 0;
  *(void *)(v25 + 32) = 0;
  *(unsigned char *)(v25 + 40) = 0;
  uint64_t v26 = v50;
  sub_1000E6614((uint64_t)v6, v50, (uint64_t (*)(void))sub_1000E62A0);
  uint64_t v27 = (uint64_t *)(v26 + *((int *)v57 + 11));
  *uint64_t v27 = v24;
  v27[1] = (uint64_t)sub_1000321B4;
  v27[2] = v25;
  sub_1000E6524((uint64_t)v6, (uint64_t (*)(void))sub_1000E62A0);
  uint64_t v28 = v58;
  sub_1000E67C4(v26, v58, (uint64_t (*)(void))sub_1000E6238);
  uint64_t v29 = *(void *)(a1 + 48);
  uint64_t v30 = *(void *)(a1 + 56);
  uint64_t v32 = *(void *)(a1 + 64);
  uint64_t v31 = *(void *)(a1 + 72);
  uint64_t v49 = swift_getKeyPath();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  *(unsigned char *)(v33 + 24) = 0;
  *(void *)(v33 + 32) = 0;
  *(unsigned char *)(v33 + 40) = 0;
  sub_1000E6614(v28, v26, (uint64_t (*)(void))sub_1000E6238);
  LOBYTE(v86) = v74;
  *((void *)&v86 + 1) = v77;
  *(void *)&long long v87 = v64;
  *((void *)&v87 + 1) = v76;
  *(void *)&long long v88 = v63;
  *((void *)&v88 + 1) = v75;
  *(void *)&long long v89 = v62;
  *((void *)&v89 + 1) = v61;
  *(void *)&long long v90 = v60;
  *((void *)&v90 + 1) = v78;
  *(void *)&long long v91 = v59;
  *((void *)&v91 + 1) = v73;
  *(void *)&long long v92 = v72;
  *((void *)&v92 + 1) = v71;
  *(void *)&long long v93 = v79;
  *((void *)&v93 + 1) = v70;
  *(void *)&long long v94 = v69;
  *((void *)&v94 + 1) = v68;
  LOBYTE(v95) = v67;
  uint64_t v57 = sub_1000321B4;
  *((void *)&v95 + 1) = KeyPath;
  *(void *)&long long v96 = sub_1000321B4;
  *((void *)&v96 + 1) = v65;
  long long v34 = v91;
  *(_OWORD *)(a2 + 64) = v90;
  *(_OWORD *)(a2 + 80) = v34;
  long long v35 = v86;
  long long v36 = v87;
  long long v37 = v89;
  *(_OWORD *)(a2 + 32) = v88;
  *(_OWORD *)(a2 + 48) = v37;
  *(_OWORD *)a2 = v35;
  *(_OWORD *)(a2 + 16) = v36;
  long long v38 = v92;
  long long v39 = v93;
  long long v40 = v96;
  long long v41 = v94;
  *(_OWORD *)(a2 + 144) = v95;
  *(_OWORD *)(a2 + 160) = v40;
  *(_OWORD *)(a2 + 112) = v39;
  *(_OWORD *)(a2 + 128) = v41;
  *(_OWORD *)(a2 + 96) = v38;
  *(void *)(a2 + 176) = 0;
  *(unsigned char *)(a2 + 184) = 1;
  *(void *)(a2 + 192) = v56;
  *(unsigned char *)(a2 + 200) = v55;
  *(void *)(a2 + 208) = v54;
  *(unsigned char *)(a2 + 216) = v53;
  uint64_t v42 = v51;
  *(void *)(a2 + 224) = v52;
  *(void *)(a2 + 232) = v42;
  sub_1000E6168();
  long long v44 = v43;
  sub_1000E6614(v26, a2 + v43[16], (uint64_t (*)(void))sub_1000E6238);
  uint64_t v45 = a2 + v44[20];
  *(void *)uint64_t v45 = 0x4030000000000000;
  *(unsigned char *)(v45 + 8) = 0;
  uint64_t v46 = (uint64_t *)(a2 + v44[24]);
  *uint64_t v46 = v29;
  v46[1] = v30;
  v46[2] = v32;
  v46[3] = v31;
  v46[4] = v49;
  v46[5] = (uint64_t)sub_1000321B4;
  v46[6] = v33;
  uint64_t v47 = a2 + v44[28];
  *(void *)uint64_t v47 = 0x4030000000000000;
  *(unsigned char *)(v47 + 8) = 0;
  sub_100032514(&v86);
  sub_1000321B8(v29, v30, v32, v31);
  swift_retain();
  swift_retain();
  sub_1000321B8(v29, v30, v32, v31);
  sub_1000E6524(v58, (uint64_t (*)(void))sub_1000E6238);
  sub_100032424(v29, v30, v32, v31);
  swift_release();
  swift_release();
  sub_1000E6524(v26, (uint64_t (*)(void))sub_1000E6238);
  LOBYTE(v97[0]) = v74;
  v97[1] = v77;
  v97[2] = v64;
  v97[3] = v76;
  v97[4] = v63;
  v97[5] = v75;
  v97[6] = v62;
  v97[7] = v61;
  v97[8] = v60;
  v97[9] = v78;
  v97[10] = v59;
  v97[11] = v73;
  v97[12] = v72;
  v97[13] = v71;
  v97[14] = v79;
  v97[15] = v70;
  v97[16] = v69;
  v97[17] = v68;
  char v98 = v67;
  uint64_t v99 = KeyPath;
  uint64_t v100 = v57;
  uint64_t v101 = v65;
  return sub_100032658(v97);
}

uint64_t sub_1000E58BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100125750();
  uint64_t v81 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v84 = &v56[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  unsigned __int8 v83 = &v56[-v7];
  uint64_t v8 = *(void *)(a1 + *(int *)(type metadata accessor for LargeDetailContentView() + 40));
  unint64_t v9 = *(void *)(v8 + 16);
  if (v9 >= 6) {
    unint64_t v10 = 6;
  }
  else {
    unint64_t v10 = *(void *)(v8 + 16);
  }
  if (v9 >= 3) {
    unint64_t v11 = 3;
  }
  else {
    unint64_t v11 = *(void *)(v8 + 16);
  }
  sub_100126550();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v12 = (void *)swift_dynamicCastClass();
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = v12[2];
  swift_release();
  if (v13 == v11)
  {
    uint64_t v14 = (void *)swift_dynamicCastClass();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_13;
    }
    uint64_t v14 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1000AB794(v8, v8 + 32, 0, (2 * v11) | 1);
  }
  swift_bridgeObjectRelease();
LABEL_13:
  if (v10 - v11 >= 3) {
    unint64_t v15 = v11 + 3;
  }
  else {
    unint64_t v15 = v10;
  }
  if (v15 < v11)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v10 < v11)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v10 < v15)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1000AB794(v8, v8 + 32, v11, (2 * v15) | 1);
    goto LABEL_24;
  }
  uint64_t v80 = v4;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v16 = (void *)swift_dynamicCastClass();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = _swiftEmptyArrayStorage;
  }
  uint64_t v17 = v16[2];
  swift_release();
  if (v17 != v15 - v11) {
    goto LABEL_29;
  }
  uint64_t v18 = (void *)swift_dynamicCastClass();
  if (!v18)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = _swiftEmptyArrayStorage;
  }
LABEL_24:
  uint64_t v79 = v8;
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1001257D0();
  sub_100039F7C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v96, 0.0, 1, 0.0, 1, v19, v20, (uint64_t)v14);
  swift_release();
  uint64_t v82 = v96;
  uint64_t v78 = v97;
  unsigned __int8 v21 = v98;
  uint64_t v77 = v99;
  unsigned __int8 v22 = v100;
  uint64_t v76 = v101;
  int v61 = v102;
  uint64_t v75 = v103;
  int v60 = v104;
  uint64_t v74 = v105;
  int v59 = v106;
  uint64_t v73 = v107;
  char v23 = v108;
  uint64_t v72 = v109;
  uint64_t v71 = v110;
  uint64_t v24 = v83;
  sub_100125740();
  uint64_t v25 = sub_1001257D0();
  sub_100039F7C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v96, 0.0, 1, 0.0, 1, v25, v26, (uint64_t)v18);
  swift_release();
  uint64_t v62 = v96;
  uint64_t v70 = v97;
  int v58 = v98;
  uint64_t v69 = v99;
  int v57 = v100;
  uint64_t v68 = v101;
  unsigned __int8 v27 = v102;
  uint64_t v67 = v103;
  unsigned __int8 v28 = v104;
  uint64_t v66 = v105;
  unsigned __int8 v29 = v106;
  uint64_t v65 = v107;
  char v30 = v108;
  uint64_t v64 = v109;
  uint64_t v63 = v110;
  LOBYTE(v96) = v21;
  unsigned __int8 v95 = v22;
  char v94 = v61;
  char v93 = v60;
  char v92 = v59;
  char v91 = v23;
  uint64_t v31 = v81;
  uint64_t v32 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v81 + 16);
  uint64_t v33 = v84;
  long long v34 = v24;
  uint64_t v35 = v80;
  v32(v84, v34, v80);
  char v90 = v58;
  char v89 = v57;
  unsigned __int8 v88 = v27;
  unsigned __int8 v87 = v28;
  unsigned __int8 v86 = v29;
  char v85 = v30;
  char v36 = v96;
  unsigned __int8 v37 = v95;
  char v38 = v94;
  char v39 = v93;
  char v40 = v92;
  char v41 = v91;
  uint64_t v42 = v78;
  *(void *)a2 = v82;
  *(void *)(a2 + 8) = v42;
  *(unsigned char *)(a2 + 16) = v36;
  *(void *)(a2 + 24) = v77;
  *(unsigned char *)(a2 + 32) = v37;
  *(void *)(a2 + 40) = v76;
  *(unsigned char *)(a2 + 48) = v38;
  *(void *)(a2 + 56) = v75;
  *(unsigned char *)(a2 + 64) = v39;
  *(void *)(a2 + 72) = v74;
  *(unsigned char *)(a2 + 80) = v40;
  *(void *)(a2 + 88) = v73;
  *(unsigned char *)(a2 + 96) = v41;
  uint64_t v43 = v71;
  *(void *)(a2 + 104) = v72;
  *(void *)(a2 + 112) = v43;
  sub_1000E63B8();
  uint64_t v45 = v44;
  v32((unsigned char *)(a2 + *(int *)(v44 + 48)), v33, v35);
  uint64_t v46 = a2 + *(int *)(v45 + 64);
  char v47 = v90;
  char v48 = v89;
  unsigned __int8 v49 = v88;
  unsigned __int8 v50 = v87;
  LOBYTE(v32) = v86;
  LOBYTE(v45) = v85;
  swift_bridgeObjectRetain();
  uint64_t v51 = v62;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v52 = v70;
  *(void *)uint64_t v46 = v51;
  *(void *)(v46 + 8) = v52;
  *(unsigned char *)(v46 + 16) = v47;
  *(void *)(v46 + 24) = v69;
  *(unsigned char *)(v46 + 32) = v48;
  *(void *)(v46 + 40) = v68;
  *(unsigned char *)(v46 + 48) = v49;
  *(void *)(v46 + 56) = v67;
  *(unsigned char *)(v46 + 64) = v50;
  *(void *)(v46 + 72) = v66;
  *(unsigned char *)(v46 + 80) = (_BYTE)v32;
  *(void *)(v46 + 88) = v65;
  *(unsigned char *)(v46 + 96) = v45;
  uint64_t v53 = v63;
  *(void *)(v46 + 104) = v64;
  *(void *)(v46 + 112) = v53;
  uint64_t v54 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
  v54(v83, v35);
  swift_bridgeObjectRelease();
  v54(v84, v35);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E5FC4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100124EF0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_1000E64A8(0, &qword_1001632B0, &qword_1001632B8, (uint64_t (*)(uint64_t))sub_1000E602C);
  return sub_1000E4F5C(v1, a1 + *(int *)(v3 + 44));
}

void sub_1000E602C()
{
  if (!qword_1001632C0)
  {
    sub_1000E60C8(255, &qword_1001632C8, &qword_1001632D0, (uint64_t (*)(uint64_t))sub_1000E6168, &qword_100163310);
    sub_10003D264(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1001632C0);
    }
  }
}

void sub_1000E60C8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_1000E6354(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000E6444(a5, a3, a4);
    unint64_t v9 = sub_100125720();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1000E6168()
{
  if (!qword_1001632D8)
  {
    sub_10003213C(255, &qword_10015EC18);
    sub_1000E23DC(255, (unint64_t *)&qword_10015FA58);
    sub_1000E6238();
    sub_10003213C(255, &qword_10015EC68);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1001632D8);
    }
  }
}

void sub_1000E6238()
{
  if (!qword_1001632E0)
  {
    sub_1000E62A0();
    sub_100031E94();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001632E0);
    }
  }
}

void sub_1000E62A0()
{
  if (!qword_1001632E8)
  {
    sub_1000E6354(255, &qword_1001632F0, (uint64_t (*)(uint64_t))sub_1000E63B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1000E6444(&qword_100163308, &qword_1001632F0, (uint64_t (*)(uint64_t))sub_1000E63B8);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001632E8);
    }
  }
}

void sub_1000E6354(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1000E63B8()
{
  if (!qword_1001632F8)
  {
    sub_1000E23DC(255, &qword_100163300);
    sub_100125750();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1001632F8);
    }
  }
}

uint64_t sub_1000E6444(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000E6354(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000E64A8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1000E6354(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v5 = sub_1001249F0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1000E6524(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000E6584(uint64_t a1, uint64_t a2)
{
  sub_1000E60C8(0, &qword_1001632C8, &qword_1001632D0, (uint64_t (*)(uint64_t))sub_1000E6168, &qword_100163310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E6614(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000E667C(uint64_t a1)
{
  sub_1000E60C8(0, &qword_1001632C8, &qword_1001632D0, (uint64_t (*)(uint64_t))sub_1000E6168, &qword_100163310);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000E670C()
{
  return swift_deallocObject();
}

void sub_1000E671C()
{
  if (!qword_100163320)
  {
    sub_1000E6354(255, &qword_1001632F0, (uint64_t (*)(uint64_t))sub_1000E63B8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163320);
    }
  }
}

uint64_t sub_1000E67B4()
{
  return swift_deallocObject();
}

uint64_t sub_1000E67C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000E682C()
{
  return swift_deallocObject();
}

unint64_t sub_1000E6840()
{
  unint64_t result = qword_100163328;
  if (!qword_100163328)
  {
    sub_1000E60C8(255, &qword_100163330, &qword_1001632B8, (uint64_t (*)(uint64_t))sub_1000E602C, &qword_100163338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163328);
  }
  return result;
}

uint64_t sub_1000E68C4(uint64_t a1)
{
  v2[28] = a1;
  v2[29] = v1;
  uint64_t v3 = sub_1001236F0();
  v2[30] = v3;
  v2[31] = *(void *)(v3 - 8);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  uint64_t v4 = sub_1001240B0();
  v2[35] = v4;
  v2[36] = *(void *)(v4 - 8);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  uint64_t v5 = sub_1001237F0();
  v2[39] = v5;
  v2[40] = *(void *)(v5 - 8);
  v2[41] = swift_task_alloc();
  return _swift_task_switch(sub_1000E6A68, 0, 0);
}

uint64_t sub_1000E6A68()
{
  uint64_t v14 = v0;
  v0[42] = OBJC_IVAR____TtC12StocksWidget21TodayViewModelService_logger;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F60();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_100125CD0();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[25] = sub_1000AB124(v4, v6, &v13);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[27] = sub_1000AB124(v0[2], v0[3], &v13);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "will fetch Today models for symbols: %{public}s, id=%{public}s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v7 = (void *)v0[29];
  uint64_t v9 = v7[5];
  uint64_t v8 = v7[6];
  sub_100009D98(v7 + 2, v9);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[43] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1000E6D1C;
  uint64_t v11 = v0[41];
  return sub_100004CA4(v11, v9, v8);
}

uint64_t sub_1000E6D1C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 328);
  uint64_t v3 = *(void *)(*v0 + 320);
  uint64_t v4 = *(void *)(*v0 + 312);
  swift_task_dealloc();
  unint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 352) = v5;
  *(void *)(v1 + 360) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_1000E6E80, 0, 0);
}

uint64_t sub_1000E6E80()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[36];
  sub_100009D98((void *)(v0[29] + 96), *(void *)(v0[29] + 120));
  uint64_t v4 = enum case for CachePolicy.preferCache(_:);
  unint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104);
  v0[46] = v5;
  v0[47] = (v3 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v5(v1, v4, v2);
  v0[48] = sub_100123A80();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[49] = v6;
  v0[50] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[51] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1000E6FD0;
  return Promise.resolveAsync()(v0 + 26);
}

uint64_t sub_1000E6FD0()
{
  *(void *)(*(void *)v1 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000E7B94;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1000E70EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000E70EC()
{
  unsigned __int8 v27 = v0;
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[26];
  swift_bridgeObjectRetain();
  v0[53] = sub_1000E8FDC(v1, v2);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_100124550();
  os_log_type_t v4 = sub_100125F60();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    sub_100123D40();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_100125CD0();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[22] = sub_1000AB124(v6, v8, v26);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[24] = sub_1000AB124(v0[4], v0[5], v26);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "did fetch stocks: %{public}s, id=%{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v24 = (void (*)(void *, uint64_t))v0[49];
  unsigned __int8 v22 = (void (*)(void))v0[46];
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[44];
  uint64_t v10 = v0[41];
  uint64_t v11 = v0[39];
  uint64_t v25 = (void *)v0[38];
  char v23 = (void *)v0[37];
  uint64_t v21 = v0[35];
  uint64_t v12 = (void *)v0[29];
  sub_100009D98(v12 + 7, v12[10]);
  sub_100009D98(v12 + 2, v12[5]);
  sub_100123AB0();
  sub_1001237E0();
  uint64_t v14 = v13;
  v9(v10, v11);
  void *v25 = v14;
  uint64_t v15 = enum case for CachePolicy.maxAge(_:);
  v22();
  sub_100009D98(v12 + 2, v12[5]);
  sub_100123AB0();
  sub_1001237C0();
  uint64_t v17 = v16;
  v9(v10, v11);
  *char v23 = v17;
  ((void (*)(void *, uint64_t, uint64_t))v22)(v23, v15, v21);
  v0[54] = sub_100123A90();
  v24(v23, v21);
  v24(v25, v21);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[55] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1000E7514;
  uint64_t v19 = v0[33];
  return Promise.resolveAsync()(v19);
}

uint64_t sub_1000E7514()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000E7E70;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1000E7630;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000E7630()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[30];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 32))(v1, v0[33], v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  uint64_t v5 = sub_100124550();
  os_log_type_t v6 = sub_100125F60();
  unint64_t v7 = &off_100127000;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v9 = v0[31];
    uint64_t v8 = v0[32];
    uint64_t v30 = v0[30];
    uint64_t v10 = swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    sub_1001236E0();
    sub_100123CA0();
    uint64_t v11 = sub_100125A10();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    v0[19] = sub_1000AB124(v11, v13, v32);
    sub_100126030();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v30);
    *(_WORD *)(v10 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[21] = sub_1000AB124(v0[8], v0[9], v32);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "did fetch quotes: %{public}s, id=%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v7 = &off_100127000;
  }
  else
  {
    uint64_t v15 = v0[31];
    uint64_t v14 = v0[32];
    uint64_t v16 = v0[30];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v17 = v0[53];
  uint64_t v18 = v0[34];
  uint64_t v19 = v0[29];
  uint64_t v20 = swift_task_alloc();
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = sub_10001C36C((void (*)(uint64_t))sub_1000E9364, v20, v17);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRetain_n();
  unsigned __int8 v22 = sub_100124550();
  os_log_type_t v23 = sub_100125F60();
  if (os_log_type_enabled(v22, v23))
  {
    os_log_type_t v31 = v23;
    uint64_t v24 = swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = *((void *)v7 + 166);
    type metadata accessor for WidgetStock();
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100125CD0();
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    v0[14] = sub_1000AB124(v25, v27, v32);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[15] = sub_1000AB124(v0[12], v0[13], v32);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v31, "did fetch Today models: %{public}s, id=%{public}s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(void, void))(v0[31] + 8))(v0[34], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void *))v0[1];
  return v28(v21);
}

uint64_t sub_1000E7B94()
{
  uint64_t v9 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543618;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[23] = v5;
    sub_100126030();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v3 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[20] = sub_1000AB124(v0[6], v0[7], &v8);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to fetch Today models with error: %{public}@, id=%{public}s", (uint8_t *)v3, 0x16u);
    sub_1000E944C(0, &qword_10015DF10, (void (*)(uint64_t))sub_100009DDC);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1000E7E70()
{
  uint64_t v20 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_100124550();
  os_log_type_t v2 = sub_100125F40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543618;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v5;
    sub_100126030();
    void *v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v3 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[18] = sub_1000AB124(v0[10], v0[11], v19);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "failed to fetch quotes with error: %{public}@, id=%{public}s", (uint8_t *)v3, 0x16u);
    sub_1000E944C(0, &qword_10015DF10, (void (*)(uint64_t))sub_100009DDC);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1001236D0();
  swift_errorRelease();
  uint64_t v6 = v0[53];
  uint64_t v7 = v0[34];
  uint64_t v8 = v0[29];
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = sub_10001C36C((void (*)(uint64_t))sub_1000E9364, v9, v6);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_100124550();
  os_log_type_t v12 = sub_100125F60();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    type metadata accessor for WidgetStock();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_100125CD0();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    v0[14] = sub_1000AB124(v14, v16, v19);
    sub_100126030();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    if (qword_10015D4C8 != -1) {
      swift_once();
    }
    sub_100126690();
    v0[15] = sub_1000AB124(v0[12], v0[13], v19);
    sub_100126030();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "did fetch Today models: %{public}s, id=%{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(void, void))(v0[31] + 8))(v0[34], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void *))v0[1];
  return v17(v10);
}

uint64_t sub_1000E83B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v88 = a3;
  uint64_t v80 = a2;
  uint64_t v4 = sub_100123CA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v82 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v81 = (char *)&v72 - v8;
  sub_1000E944C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  __chkstk_darwin(v9 - 8);
  unsigned __int8 v83 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unsigned __int8 v87 = (char *)&v72 - v12;
  uint64_t v79 = sub_100124570();
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v78 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100123D40();
  uint64_t v86 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v76 = (uint64_t *)((char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = sub_100123C50();
  uint64_t v15 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v75 = (uint64_t *)((char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v74 = (char *)&v72 - v18;
  sub_1000E944C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  __chkstk_darwin(v19 - 8);
  uint64_t v85 = (uint64_t)&v72 - v20;
  sub_1000E944C(0, &qword_10015DF30, (void (*)(uint64_t))&type metadata accessor for Chart);
  __chkstk_darwin(v21 - 8);
  os_log_type_t v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  char v92 = (char *)&v72 - v25;
  sub_1000E944C(0, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
  __chkstk_darwin(v26 - 8);
  uint64_t v84 = (uint64_t)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v73 = (uint64_t)&v72 - v29;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v72 - v31;
  uint64_t v33 = sub_1001236E0();
  uint64_t v93 = a1;
  uint64_t v34 = sub_100123D20();
  uint64_t v36 = *(void *)(v33 + 16);
  char v94 = v32;
  uint64_t v91 = v4;
  if (v36)
  {
    unint64_t v37 = sub_10003E754(v34, v35);
    uint64_t v39 = v5;
    if (v38)
    {
      uint64_t v40 = (uint64_t)v94;
      uint64_t v41 = v91;
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v94, *(void *)(v33 + 56) + *(void *)(v5 + 72) * v37, v91);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v40, 0, 1, v41);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v94, 1, 1, v91);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v32, 1, 1, v4);
    uint64_t v39 = v5;
  }
  uint64_t v42 = (uint64_t)v92;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = sub_1001236C0();
  uint64_t v44 = sub_100123D20();
  if (*(void *)(v43 + 16) && (unint64_t v46 = sub_10003E754(v44, v45), (v47 & 1) != 0))
  {
    uint64_t v48 = v90;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(v42, *(void *)(v43 + 56) + *(void *)(v15 + 72) * v46, v90);
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
    uint64_t v48 = v90;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v42, v49, 1, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000E9384(v42, (uint64_t)v23, &qword_10015DF30, (void (*)(uint64_t))&type metadata accessor for Chart);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v23, 1, v48) == 1)
  {
    uint64_t v50 = type metadata accessor for PreparedSparkline(0);
    uint64_t v51 = v85;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v85, 1, 1, v50);
    uint64_t v53 = v86;
    uint64_t v52 = (uint64_t)v87;
    uint64_t v54 = v91;
    uint64_t v55 = (uint64_t)v94;
  }
  else
  {
    uint64_t v56 = v74;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v74, v23, v48);
    int v57 = v75;
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(v75, v56, v48);
    uint64_t v55 = (uint64_t)v94;
    uint64_t v72 = v39;
    uint64_t v58 = v73;
    sub_1000E9384((uint64_t)v94, v73, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
    uint64_t v53 = v86;
    int v59 = v76;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v86 + 16))(v76, v93, v89);
    uint64_t v60 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v78, v80 + OBJC_IVAR____TtC12StocksWidget21TodayViewModelService_logger, v79);
    uint64_t v51 = v85;
    uint64_t v61 = v58;
    uint64_t v39 = v72;
    sub_10008C504(v57, v61, v59, v60, v85, 0.02);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v56, v90);
    uint64_t v52 = (uint64_t)v87;
    uint64_t v54 = v91;
  }
  uint64_t v62 = v84;
  sub_1000E9384(v55, v84, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v62, 1, v54) == 1)
  {
    sub_1000E93F0(v62, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
    uint64_t v63 = sub_100123670();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v52, 1, 1, v63);
    uint64_t v64 = v88;
    uint64_t v65 = (uint64_t)v92;
  }
  else
  {
    uint64_t v66 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v81, v62, v54);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v82, v66, v54);
    uint64_t v67 = (uint64_t)v83;
    sub_100123640();
    uint64_t v68 = v66;
    uint64_t v65 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v68, v54);
    uint64_t v69 = sub_100123670();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v67, 0, 1, v69);
    sub_100009FB0(v67, v52);
    uint64_t v64 = v88;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v64, v93, v89);
  uint64_t v70 = type metadata accessor for WidgetStock();
  sub_1000E9384(v52, v64 + *(int *)(v70 + 20), &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  sub_1000E9384(v51, v64 + *(int *)(v70 + 24), (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_1000E93F0(v52, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  sub_1000E93F0(v51, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_1000E93F0(v65, &qword_10015DF30, (void (*)(uint64_t))&type metadata accessor for Chart);
  return sub_1000E93F0((uint64_t)v94, &qword_10015DF38, (void (*)(uint64_t))&type metadata accessor for Quote);
}

uint64_t sub_1000E8E30()
{
  sub_100009D48(v0 + 16);
  sub_100009D48(v0 + 56);
  sub_100009D48(v0 + 96);
  uint64_t v1 = v0 + OBJC_IVAR____TtC12StocksWidget21TodayViewModelService_logger;
  uint64_t v2 = sub_100124570();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1000E8EE8()
{
  return type metadata accessor for TodayViewModelService();
}

uint64_t type metadata accessor for TodayViewModelService()
{
  uint64_t result = qword_100163370;
  if (!qword_100163370) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000E8F3C()
{
  uint64_t result = sub_100124570();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_1000E8FDC(uint64_t a1, uint64_t a2)
{
  sub_1000E944C(0, &qword_100163418, (void (*)(uint64_t))&type metadata accessor for Stock);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v29 - v6;
  uint64_t v8 = sub_100123D40();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v34 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v31 = (char *)v29 - v12;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v29[1] = v2;
    v29[2] = v9 + 16;
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    v29[0] = a1;
    uint64_t v15 = (uint64_t *)(a1 + 40);
    uint64_t v35 = _swiftEmptyArrayStorage;
    uint64_t v30 = v9;
    while (1)
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v16 = *(v15 - 1);
        uint64_t v17 = *v15;
        swift_bridgeObjectRetain();
        unint64_t v18 = sub_10003E754(v16, v17);
        if (v19)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, *(void *)(a2 + 56) + *(void *)(v9 + 72) * v18, v8);
          uint64_t v20 = 0;
        }
        else
        {
          uint64_t v20 = 1;
        }
        (*v14)(v7, v20, 1, v8);
        swift_bridgeObjectRelease();
        if ((*v33)(v7, 1, v8) != 1)
        {
          uint64_t v21 = v31;
          uint64_t v22 = *v32;
          (*v32)(v31, v7, v8);
          v22(v34, v21, v8);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v23 = (unint64_t)v35;
          }
          else {
            unint64_t v23 = sub_10009B620(0, v35[2] + 1, 1, (unint64_t)v35);
          }
          unint64_t v25 = *(void *)(v23 + 16);
          unint64_t v24 = *(void *)(v23 + 24);
          if (v25 >= v24 >> 1) {
            unint64_t v23 = sub_10009B620(v24 > 1, v25 + 1, 1, v23);
          }
          *(void *)(v23 + 16) = v25 + 1;
          unint64_t v26 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v35 = (void *)v23;
          unint64_t v27 = v23 + v26 + *(void *)(v30 + 72) * v25;
          uint64_t v9 = v30;
          v22((char *)v27, v34, v8);
          goto LABEL_5;
        }
      }
      else
      {
        (*v14)(v7, 1, 1, v8);
      }
      sub_1000E93F0((uint64_t)v7, &qword_100163418, (void (*)(uint64_t))&type metadata accessor for Stock);
LABEL_5:
      v15 += 2;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        return v35;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000E9364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000E83B4(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1000E9384(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000E944C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1000E93F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1000E944C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1000E944C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100126010();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000E953CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Errors()
{
  return &type metadata for Errors;
}

unint64_t sub_1000E9578()
{
  unint64_t result = qword_100163420;
  if (!qword_100163420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163420);
  }
  return result;
}

uint64_t sub_1000E95CC()
{
  return sub_100123090();
}

uint64_t sub_1000E95E8()
{
  type metadata accessor for BilingualFeedManager();
  uint64_t v0 = swift_allocObject();
  sub_100123EE0();
  sub_1000050BC();
  swift_allocObject();
  uint64_t result = sub_100123FD0();
  *(void *)(v0 + 16) = result;
  static BilingualFeedManager.shared = v0;
  return result;
}

uint64_t *BilingualFeedManager.shared.unsafeMutableAddressor()
{
  if (qword_10015D5A8 != -1) {
    swift_once();
  }
  return &static BilingualFeedManager.shared;
}

uint64_t static BilingualFeedManager.shared.getter()
{
  if (qword_10015D5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static BilingualFeedManager.shared.setter(uint64_t a1)
{
  if (qword_10015D5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static BilingualFeedManager.shared = a1;
  return swift_release();
}

uint64_t (*static BilingualFeedManager.shared.modify())()
{
  if (qword_10015D5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1000E9820()
{
  uint64_t v0 = sub_100123340();
  uint64_t v42 = *(void *)(v0 - 8);
  uint64_t v43 = v0;
  __chkstk_darwin(v0);
  uint64_t v40 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000ED474();
  uint64_t v41 = (char *)v2;
  __chkstk_darwin(v2);
  unsigned int v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000ED6B8(0, &qword_10015EB30, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v37 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = sub_1001233C0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1001233E0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v23 = *v20;
  if (v23 == 2)
  {
    char v38 = v7;
    uint64_t v39 = v20;
    sub_100123390();
    sub_1001233D0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    sub_1001233A0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_100123330();
    uint64_t v25 = v42;
    uint64_t v24 = v43;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v10, 0, 1, v43);
    uint64_t v26 = (uint64_t)&v4[*((int *)v41 + 12)];
    sub_1000ED70C((uint64_t)v13, (uint64_t)v4, &qword_10015EB30, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
    sub_1000ED70C((uint64_t)v10, v26, &qword_10015EB30, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
    unint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    uint64_t v28 = (uint64_t)v13;
    if (v27((uint64_t)v4, 1, v24) == 1)
    {
      sub_1000ED4F4((uint64_t)v10);
      sub_1000ED4F4((uint64_t)v13);
      int v29 = v27(v26, 1, v24);
      uint64_t v30 = v39;
      if (v29 == 1)
      {
        sub_1000ED4F4((uint64_t)v4);
        char v31 = 1;
LABEL_10:
        swift_beginAccess();
        *uint64_t v30 = v31 & 1;
        return v31 & 1;
      }
    }
    else
    {
      uint64_t v41 = v10;
      uint64_t v32 = (uint64_t)v38;
      sub_1000ED70C((uint64_t)v4, (uint64_t)v38, &qword_10015EB30, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
      int v33 = v27(v26, 1, v24);
      uint64_t v30 = v39;
      if (v33 != 1)
      {
        uint64_t v34 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v40, v26, v24);
        sub_1000E9EB4(&qword_100163680, 255, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
        char v31 = sub_100125A90();
        uint64_t v35 = *(void (**)(char *, uint64_t))(v25 + 8);
        v35(v34, v24);
        sub_1000ED4F4((uint64_t)v41);
        sub_1000ED4F4(v28);
        v35((char *)v32, v24);
        sub_1000ED4F4((uint64_t)v4);
        goto LABEL_10;
      }
      sub_1000ED4F4((uint64_t)v41);
      sub_1000ED4F4(v28);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v32, v24);
    }
    sub_1000ED56C((uint64_t)v4);
    char v31 = 0;
    goto LABEL_10;
  }
  char v31 = v23 & 1;
  return v31 & 1;
}

uint64_t BilingualFeedManager.deinit()
{
  swift_release();
  return v0;
}

uint64_t sub_1000E9DA4(uint64_t a1, uint64_t a2)
{
  return sub_1000E9EB4(&qword_100163448, a2, (void (*)(uint64_t))type metadata accessor for BilingualFeedManager);
}

uint64_t type metadata accessor for BilingualFeedManager()
{
  return self;
}

unint64_t sub_1000E9E14()
{
  unint64_t result = qword_100163450;
  if (!qword_100163450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163450);
  }
  return result;
}

uint64_t sub_1000E9E68()
{
  return sub_1000E9EB4(&qword_100163458, 255, (void (*)(uint64_t))sub_1000E9EFC);
}

uint64_t sub_1000E9EB4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000E9EFC()
{
  if (!qword_100163460)
  {
    sub_1000E9FCC();
    sub_1000EA048();
    sub_1000E9EB4(&qword_100163478, 255, (void (*)(uint64_t))sub_1000E9FCC);
    sub_1000EA09C();
    unint64_t v0 = sub_100122F40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163460);
    }
  }
}

void sub_1000E9FCC()
{
  if (!qword_100163468)
  {
    sub_1000EA048();
    sub_1000154E0();
    unint64_t v0 = sub_100122F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163468);
    }
  }
}

unint64_t sub_1000EA048()
{
  unint64_t result = qword_100163470;
  if (!qword_100163470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163470);
  }
  return result;
}

unint64_t sub_1000EA09C()
{
  unint64_t result = qword_100163480;
  if (!qword_100163480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163480);
  }
  return result;
}

uint64_t sub_1000EA0F0()
{
  sub_1000ED644(0, &qword_1001634C0, (uint64_t (*)(void))sub_1000EBA48, (uint64_t)&type metadata for BilingualFeedSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _UniqueEntityProvider);
  uint64_t v1 = v0;
  sub_10001927C(v0, qword_1001726C0);
  sub_100019244(v1, (uint64_t)qword_1001726C0);
  sub_1000EBA48();
  return sub_100122DD0();
}

uint64_t sub_1000EA1A8(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = sub_1001230A0();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  sub_1001233E0();
  v1[9] = swift_task_alloc();
  sub_100125AC0();
  v1[10] = swift_task_alloc();
  sub_1001230B0();
  v1[11] = swift_task_alloc();
  return _swift_task_switch(sub_1000EA2EC, 0, 0);
}

uint64_t sub_1000EA2EC()
{
  if (qword_10015D5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  char v1 = sub_1000EC9B0();
  uint64_t v2 = v0[8];
  if (v1)
  {
    uint64_t v3 = v0[6];
    uint64_t v4 = v0[7];
    uint64_t v5 = (void *)v0[5];
    swift_release();
    sub_1000E9EFC();
    sub_100125AB0();
    sub_100123390();
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
    sub_1001230C0();
    sub_1000E9EB4(&qword_100163670, 255, (void (*)(uint64_t))sub_1000E9FCC);
    uint64_t v6 = sub_100122F30();
    *uint64_t v5 = 0xD00000000000001ALL;
    v5[1] = 0x800000010012E420;
    _OWORD v5[2] = v6;
  }
  else
  {
    sub_1000ED420();
    swift_allocError();
    swift_willThrow();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000EA588()
{
  uint64_t v0 = sub_100122EF0();
  sub_10001927C(v0, qword_1001726D8);
  sub_100019244(v0, (uint64_t)qword_1001726D8);
  return sub_100122ED0();
}

uint64_t sub_1000EA5EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  sub_1000ED6B8(0, &qword_10015E490, (void (*)(uint64_t))&type metadata accessor for DisplayRepresentation.Image);
  __chkstk_darwin(v1 - 8);
  uint64_t v17 = (char *)&v16 - v2;
  uint64_t v16 = sub_1001230A0();
  uint64_t v3 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1001233E0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_100125AC0();
  __chkstk_darwin(v7 - 8);
  sub_1000ED6B8(0, &qword_10015E468, (void (*)(uint64_t))&type metadata accessor for LocalizedStringResource);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = sub_1001230B0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  sub_100123090();
  sub_100125AB0();
  sub_100123390();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v16);
  sub_1001230C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  uint64_t v14 = sub_100122D60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v17, 1, 1, v14);
  sub_100123090();
  return sub_100122D70();
}

uint64_t sub_1000EA9C4(uint64_t a1)
{
  return sub_100015DF8(a1, qword_1001726F0);
}

uint64_t sub_1000EA9E8()
{
  sub_1000ED6B8(0, &qword_10015E500, (void (*)(uint64_t))&type metadata accessor for IntentDescription);
  uint64_t v1 = v0;
  sub_10001927C(v0, qword_100172708);
  uint64_t v2 = sub_100019244(v1, (uint64_t)qword_100172708);
  sub_100122CC0();
  uint64_t v3 = sub_100122CD0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(v2, 0, 1, v3);
}

uint64_t sub_1000EAAB8()
{
  uint64_t result = swift_getKeyPath();
  qword_100172720 = result;
  return result;
}

uint64_t sub_1000EAAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  sub_1000ED6B8(0, &qword_10015E4D0, (void (*)(uint64_t))&type metadata accessor for _GeneratedContentFallback);
  v3[23] = swift_task_alloc();
  sub_1000ED6B8(0, &qword_10015E4D8, (void (*)(uint64_t))&type metadata accessor for _GeneratedContentOptions);
  v3[24] = swift_task_alloc();
  sub_1000ED5C8();
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_100122C40();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  sub_1000ED644(0, &qword_100163698, (uint64_t (*)(void))sub_1000EC048, (uint64_t)&type metadata for BilingualFeedSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IntentDialog._CapturedContent);
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return _swift_task_switch(sub_1000EAD04, 0, 0);
}

uint64_t sub_1000EAD04()
{
  sub_100122C70();
  long long v1 = *(_OWORD *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v0 + 16);
  *(_OWORD *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  unint64_t v3 = sub_1000EA048();
  *uint64_t v2 = v0;
  v2[1] = sub_1000EADE8;
  uint64_t v4 = *(void *)(v0 + 256);
  return IntentDialog._CapturedContent.init<>(entity:_:)(v4, v0 + 40, sub_1000EB43C, 0, &type metadata for BilingualFeedSettingEntity, v3);
}

uint64_t sub_1000EADE8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000EAEE4, 0, 0);
}

uint64_t sub_1000EAEE4()
{
  sub_100122C70();
  *(void *)(v0 + 88) = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  *(void *)(v0 + 272) = v1;
  *(void *)(v0 + 280) = v2;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  sub_100122C70();
  *(unsigned char *)(v0 + 312) = *(unsigned char *)(v0 + 313);
  if (qword_10015D5D0 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_100172720;
  *(void *)(v0 + 288) = qword_100172720;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v4;
  uint64_t v5 = sub_1000E9EB4(&qword_100163670, 255, (void (*)(uint64_t))sub_1000E9FCC);
  void *v4 = v0;
  v4[1] = sub_1000EB054;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 312, v3, &type metadata for Bool, v5);
}

uint64_t sub_1000EB054()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1000168B0;
  }
  else {
    uint64_t v2 = sub_1000EB1C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000EB1C4()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 224);
  sub_100122C70();
  long long v5 = *(_OWORD *)(v0 + 144);
  *(void *)(v0 + 112) = *(void *)(v0 + 136);
  *(_OWORD *)(v0 + 120) = v5;
  uint64_t v6 = sub_100122EC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_100122F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
  sub_1000E9E14();
  sub_1000EC048();
  sub_100122C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v10, v11, v2);
  sub_100122C30();
  sub_100122C50();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1000EB440()
{
  sub_1000ED644(0, &qword_1001636A0, (uint64_t (*)(void))sub_1000EC048, (uint64_t)&type metadata for BilingualFeedSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _NLGRepresentationEntity);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v6 - v3;
  if (qword_10015D5D0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100122D40();
  swift_release();
  sub_1000EC048();
  sub_1000EC17C(&qword_1001636A8, &qword_1001636A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _NLGRepresentationEntity);
  sub_100122D30();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1000EB5EC()
{
  if (qword_10015D5D0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1000EB64C()
{
  unint64_t result = qword_100163488;
  if (!qword_100163488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163488);
  }
  return result;
}

unint64_t sub_1000EB6A4()
{
  unint64_t result = qword_100163490;
  if (!qword_100163490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163490);
  }
  return result;
}

uint64_t sub_1000EB6F8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1000EB72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000EC690(a1, a2, a3, (void (*)(void))sub_1000E9E14);
}

uint64_t sub_1000EB744@<X0>(uint64_t a1@<X8>)
{
  return sub_1000176B4(&qword_10015D5C0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1001726F0, a1);
}

uint64_t sub_1000EB77C@<X0>(uint64_t a1@<X8>)
{
  if (qword_10015D5C8 != -1) {
    swift_once();
  }
  sub_1000ED6B8(0, &qword_10015E500, (void (*)(uint64_t))&type metadata accessor for IntentDescription);
  uint64_t v3 = sub_100019244(v2, (uint64_t)qword_100172708);
  return sub_1000ED70C(v3, a1, &qword_10015E500, (void (*)(uint64_t))&type metadata accessor for IntentDescription);
}

uint64_t sub_1000EB81C(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100013D40;
  return sub_1000EAAE0(a1, v5, v4);
}

uint64_t sub_1000EB8C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000ECAC4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1000EB8F0()
{
  return 0xD00000000000002BLL;
}

unint64_t sub_1000EB910()
{
  unint64_t result = qword_1001634A0;
  if (!qword_1001634A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001634A0);
  }
  return result;
}

unint64_t sub_1000EB968()
{
  unint64_t result = qword_1001634A8;
  if (!qword_1001634A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001634A8);
  }
  return result;
}

unint64_t sub_1000EB9C0()
{
  unint64_t result = qword_1001634B0;
  if (!qword_1001634B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001634B0);
  }
  return result;
}

uint64_t sub_1000EBA14()
{
  return sub_1000EBF18(&qword_1001634B8);
}

unint64_t sub_1000EBA48()
{
  unint64_t result = qword_1001634C8;
  if (!qword_1001634C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001634C8);
  }
  return result;
}

uint64_t sub_1000EBA9C(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_1000EBABC, 0, 0);
}

uint64_t sub_1000EBABC()
{
  if (qword_10015D5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  if (sub_1000EC9B0())
  {
    uint64_t v1 = *(unsigned char **)(v0 + 40);
    swift_release();
    swift_retain();
    swift_retain();
    sub_100123FA0();
    swift_release();
    swift_release();
    *uint64_t v1 = *(unsigned char *)(v0 + 48);
  }
  else
  {
    sub_1000ED420();
    swift_allocError();
    swift_willThrow();
    swift_release();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1000EBC18(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 41) = *a2;
  return _swift_task_switch(sub_1000EBC3C, 0, 0);
}

uint64_t sub_1000EBC3C()
{
  if (qword_10015D5A8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  if (sub_1000EC9B0())
  {
    char v1 = *(unsigned char *)(v0 + 41);
    swift_release();
    *(unsigned char *)(v0 + 40) = v1;
    swift_retain();
    swift_retain();
    sub_100123FB0();
    swift_release();
    swift_release();
    id v2 = [self defaultCenter];
    NSString v3 = sub_100125AD0();
    [v2 postNotificationName:v3 object:0 userInfo:0 options:1];
  }
  else
  {
    sub_1000ED420();
    swift_allocError();
    swift_willThrow();
    swift_release();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1000EBE00@<X0>(uint64_t a1@<X8>)
{
  if (qword_10015D5B0 != -1) {
    swift_once();
  }
  sub_1000ED644(0, &qword_1001634C0, (uint64_t (*)(void))sub_1000EBA48, (uint64_t)&type metadata for BilingualFeedSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _UniqueEntityProvider);
  uint64_t v3 = v2;
  uint64_t v4 = sub_100019244(v2, (uint64_t)qword_1001726C0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

uint64_t sub_1000EBEE4()
{
  return sub_1000EBF18(&qword_1001634D0);
}

uint64_t sub_1000EBF18(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000ED644(255, &qword_1001634C0, (uint64_t (*)(void))sub_1000EBA48, (uint64_t)&type metadata for BilingualFeedSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _UniqueEntityProvider);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000EBF98()
{
  unint64_t result = qword_1001634D8;
  if (!qword_1001634D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001634D8);
  }
  return result;
}

unint64_t sub_1000EBFF0()
{
  unint64_t result = qword_1001634E0;
  if (!qword_1001634E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001634E0);
  }
  return result;
}

unint64_t sub_1000EC048()
{
  unint64_t result = qword_1001634E8;
  if (!qword_1001634E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001634E8);
  }
  return result;
}

unint64_t sub_1000EC0A0()
{
  unint64_t result = qword_1001634F0;
  if (!qword_1001634F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001634F0);
  }
  return result;
}

uint64_t sub_1000EC0F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000176B4(&qword_10015D5B8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1001726D8, a1);
}

uint64_t sub_1000EC12C()
{
  return sub_1000EC17C(&qword_1001634F8, &qword_100163500, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for EmptyResolverSpecification);
}

uint64_t sub_1000EC17C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000ED644(255, a2, (uint64_t (*)(void))sub_1000EC048, (uint64_t)&type metadata for BilingualFeedSettingEntity, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EC1E0(uint64_t a1)
{
  unint64_t v2 = sub_1000EA048();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1000EC230()
{
  unint64_t result = qword_100163508;
  if (!qword_100163508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163508);
  }
  return result;
}

uint64_t sub_1000EC288(uint64_t a1)
{
  unint64_t v2 = sub_1000EC0A0();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1000EC2D4()
{
  uint64_t v0 = qword_100163428;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1000EC310()
{
  unint64_t result = qword_100163510;
  if (!qword_100163510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163510);
  }
  return result;
}

uint64_t sub_1000EC364(uint64_t a1)
{
  unint64_t v2 = sub_1000EA048();

  return _EntityURLRepresentation.init(stringLiteral:)(0xD00000000000004DLL, 0x8000000100132A10, a1, v2);
}

uint64_t sub_1000EC3C0()
{
  sub_1000ED3CC();
  uint64_t v2 = sub_100122E40();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1000192E0(v3, v0, v2, v1);
}

unint64_t sub_1000EC458()
{
  unint64_t result = qword_100163520;
  if (!qword_100163520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163520);
  }
  return result;
}

uint64_t sub_1000EC4AC(uint64_t a1)
{
  return sub_100015DF8(a1, qword_100172728);
}

unint64_t sub_1000EC4D4()
{
  unint64_t result = qword_100163528;
  if (!qword_100163528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163528);
  }
  return result;
}

uint64_t sub_1000EC528(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000ED324();
  unint64_t v5 = sub_1000ED3CC();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_1000EC590()
{
  uint64_t v0 = qword_100163438;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1000EC5CC()
{
  unint64_t result = qword_100163530;
  if (!qword_100163530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163530);
  }
  return result;
}

unint64_t sub_1000EC624()
{
  unint64_t result = qword_100163538;
  if (!qword_100163538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163538);
  }
  return result;
}

uint64_t sub_1000EC678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000EC690(a1, a2, a3, (void (*)(void))sub_1000EC4D4);
}

uint64_t sub_1000EC690(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EC6E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000176B4(&qword_10015D5D8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100172728, a1);
}

uint64_t sub_1000EC71C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000ED324();
  unint64_t v7 = sub_1000ED378();
  unint64_t v8 = sub_1000ED3CC();
  *unint64_t v5 = v2;
  v5[1] = sub_100017EDC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_1000EC7F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000ECFB8();
  *a1 = result;
  return result;
}

uint64_t sub_1000EC818(uint64_t a1)
{
  unint64_t v2 = sub_1000EC4D4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenBilingualFeedSettingIntent()
{
  return &type metadata for OpenBilingualFeedSettingIntent;
}

ValueMetadata *type metadata accessor for BilingualFeedSettingEntity()
{
  return &type metadata for BilingualFeedSettingEntity;
}

ValueMetadata *type metadata accessor for BilingualFeedSettingEntity.UpdateIntent_value()
{
  return &type metadata for BilingualFeedSettingEntity.UpdateIntent_value;
}

uint64_t sub_1000EC884()
{
  return sub_1000E9EB4(&qword_100163618, 255, (void (*)(uint64_t))sub_1000EC8D0);
}

void sub_1000EC8D0()
{
  if (!qword_100163620)
  {
    sub_100122C40();
    sub_1000EC048();
    sub_1000184FC();
    unint64_t v0 = sub_100122DB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163620);
    }
  }
}

uint64_t sub_1000EC964()
{
  return sub_1000E9EB4(&qword_100163628, 255, (void (*)(uint64_t))sub_1000EC8D0);
}

uint64_t sub_1000EC9B0()
{
  id v0 = [self sharedAccount];
  id v1 = [v0 contentStoreFrontID];

  if (!v1)
  {
    sub_100123D50();
    goto LABEL_10;
  }
  uint64_t v2 = sub_100125B10();
  uint64_t v4 = v3;

  uint64_t v5 = sub_100123D50();
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    char v9 = 0;
    return v9 & 1;
  }
  if (v2 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_100126530();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = 0;
    if ((v8 & 1) == 0) {
      return v9 & 1;
    }
  }
  char v9 = sub_1000E9820();
  return v9 & 1;
}

uint64_t sub_1000ECAC4()
{
  sub_1000ED6B8(0, &qword_10015E4B8, (void (*)(uint64_t))&type metadata accessor for Bool.IntentDisplayName);
  __chkstk_darwin(v0 - 8);
  uint64_t v32 = (char *)&v23 - v1;
  uint64_t v33 = sub_100122E30();
  uint64_t v2 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000ED6B8(0, &qword_10015E460, (void (*)(uint64_t))&type metadata accessor for IntentDialog);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - v9;
  sub_1000ED6B8(0, &qword_10015E468, (void (*)(uint64_t))&type metadata accessor for LocalizedStringResource);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  int v23 = (char *)&v23 - v12;
  uint64_t v14 = sub_1001230B0();
  uint64_t v30 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IntentParameter;
  sub_1000ED644(0, &qword_100163630, (uint64_t (*)(void))sub_1000EC048, (uint64_t)&type metadata for BilingualFeedSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IntentParameter);
  uint64_t v25 = v16;
  sub_100123090();
  int v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29(v13, 1, 1, v14);
  uint64_t v17 = sub_100122C40();
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v34 = 0;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v24 = v10;
  v18(v10, 1, 1, v17);
  v18(v7, 1, 1, v17);
  unsigned int v28 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v19 = *(void (**)(void))(v2 + 104);
  uint64_t v26 = v2 + 104;
  unint64_t v27 = (void (*)(char *, void, uint64_t))v19;
  v19(v4);
  sub_1000EA048();
  uint64_t v20 = v23;
  uint64_t v25 = sub_100122CA0();
  sub_1000ED644(0, &qword_10015E4C0, (uint64_t (*)(void))sub_1000154E0, (uint64_t)&type metadata for Bool, v31);
  sub_100123090();
  v29(v20, 1, 1, v30);
  LOBYTE(v34) = 2;
  uint64_t v21 = sub_100125D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v32, 1, 1, v21);
  v18(v24, 1, 1, v17);
  v27(v4, v28, v33);
  sub_100122CB0();
  return v25;
}

uint64_t sub_1000ECFB8()
{
  v17[0] = sub_100122E30();
  uint64_t v0 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000ED6B8(0, &qword_10015E460, (void (*)(uint64_t))&type metadata accessor for IntentDialog);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v17 - v7;
  sub_1000ED6B8(0, &qword_10015E468, (void (*)(uint64_t))&type metadata accessor for LocalizedStringResource);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v12 = sub_1001230B0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000ED644(0, &qword_100163630, (uint64_t (*)(void))sub_1000EC048, (uint64_t)&type metadata for BilingualFeedSettingEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for IntentParameter);
  sub_100123090();
  sub_100123090();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  uint64_t v14 = sub_100122C40();
  memset(&v17[1], 0, 24);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v5, 1, 1, v14);
  (*(void (**)(char *, void, void))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17[0]);
  sub_1000EA048();
  return sub_100122CA0();
}

unint64_t sub_1000ED324()
{
  unint64_t result = qword_100163638;
  if (!qword_100163638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163638);
  }
  return result;
}

unint64_t sub_1000ED378()
{
  unint64_t result = qword_100163640;
  if (!qword_100163640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163640);
  }
  return result;
}

unint64_t sub_1000ED3CC()
{
  unint64_t result = qword_100163648;
  if (!qword_100163648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163648);
  }
  return result;
}

unint64_t sub_1000ED420()
{
  unint64_t result = qword_100163658;
  if (!qword_100163658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163658);
  }
  return result;
}

void sub_1000ED474()
{
  if (!qword_100163678)
  {
    sub_1000ED6B8(255, &qword_10015EB30, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100163678);
    }
  }
}

uint64_t sub_1000ED4F4(uint64_t a1)
{
  sub_1000ED6B8(0, &qword_10015EB30, (void (*)(uint64_t))&type metadata accessor for Locale.LanguageCode);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000ED56C(uint64_t a1)
{
  sub_1000ED474();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000ED5C8()
{
  if (!qword_100163690)
  {
    sub_1000E9E14();
    sub_1000EC048();
    unint64_t v0 = sub_100122C10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163690);
    }
  }
}

void sub_1000ED644(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1000ED6AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

void sub_1000ED6B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100126010();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000ED70C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000ED6B8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for BilingualFeedManager.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000ED814);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BilingualFeedManager.Error()
{
  return &type metadata for BilingualFeedManager.Error;
}

unint64_t sub_1000ED850()
{
  unint64_t result = qword_1001636B0;
  if (!qword_1001636B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001636B0);
  }
  return result;
}

uint64_t sub_1000ED8A4()
{
  uint64_t v0 = sub_100124450();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EDF50(0, &qword_1001636D0, &qword_1001636D8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100128E90;
  uint64_t v5 = sub_100123DC0();
  swift_allocObject();
  uint64_t v6 = sub_100123DB0();
  *(void *)(v4 + 56) = v5;
  *(void *)(v4 + 64) = sub_1000EDFA8(&qword_1001636E0, (void (*)(uint64_t))&type metadata accessor for Assembly);
  *(void *)(v4 + 32) = v6;
  uint64_t v7 = (objc_class *)sub_1001241A0();
  id v8 = [objc_allocWithZone(v7) init];
  *(void *)(v4 + 96) = v7;
  *(void *)(v4 + 104) = &protocol witness table for FrameworkAssembly;
  *(void *)(v4 + 72) = v8;
  sub_1000EDF50(0, &qword_1001636E8, &qword_1001636F0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001276F0;
  uint64_t v10 = type metadata accessor for StocksWidgetAssembly();
  uint64_t v11 = swift_allocObject();
  *(void *)(v9 + 56) = v10;
  *(void *)(v9 + 64) = sub_1000EDFA8(&qword_1001636F8, (void (*)(uint64_t))type metadata accessor for StocksWidgetAssembly);
  *(void *)(v9 + 32) = v11;
  uint64_t v12 = type metadata accessor for StocksCoreOverridesAssembly();
  uint64_t v13 = swift_allocObject();
  *(void *)(v9 + 96) = v12;
  *(void *)(v9 + 104) = sub_1000EDFA8(&qword_100163700, (void (*)(uint64_t))type metadata accessor for StocksCoreOverridesAssembly);
  *(void *)(v9 + 72) = v13;
  uint64_t v14 = type metadata accessor for PersonalizationAssembly();
  uint64_t v15 = swift_allocObject();
  *(void *)(v9 + 136) = v14;
  *(void *)(v9 + 144) = sub_1000EDFA8(&qword_100163708, (void (*)(uint64_t))type metadata accessor for PersonalizationAssembly);
  *(void *)(v9 + 112) = v15;
  sub_100124130();
  swift_allocObject();
  sub_100124120();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Container.Environment.normal(_:), v0);
  sub_100124480();
  swift_allocObject();
  uint64_t result = sub_100124460();
  qword_100172740 = result;
  return result;
}

uint64_t sub_1000EDBEC()
{
  if (qword_10015D5E0 != -1) {
    swift_once();
  }
  return sub_100124470();
}

uint64_t sub_1000EDC4C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_100125DC0();
  *(void *)(v1 + 24) = sub_100125DB0();
  uint64_t v3 = sub_100125D80();
  return _swift_task_switch(sub_1000EDCE4, v3, v2);
}

uint64_t sub_1000EDCE4()
{
  swift_release();
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, *(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000EDD84()
{
  sub_1000EDEE0();

  return TupleWidget.init(_:)(v0, v0);
}

uint64_t sub_1000EDDC4()
{
  sub_100122B40();
  sub_100122B30();
  sub_100122B20();

  return swift_release();
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

unint64_t sub_1000EDE60()
{
  unint64_t result = qword_1001636B8;
  if (!qword_1001636B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001636B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksWidgetBundle()
{
  return &type metadata for StocksWidgetBundle;
}

uint64_t sub_1000EDEC4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000EDEE0()
{
  if (!qword_1001636C0)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1001636C0);
    }
  }
}

void sub_1000EDF50(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1000055F8(255, a3);
    unint64_t v4 = sub_100126500();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000EDFA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EDFF0()
{
  return sub_1000EDFA8(&qword_100163710, (void (*)(uint64_t))sub_1000EE038);
}

void sub_1000EE038()
{
  if (!qword_100163718)
  {
    sub_1000EDEE0();
    unint64_t v0 = sub_1001248D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163718);
    }
  }
}

uint64_t sub_1000EE090()
{
  sub_1000EFD2C(0, &qword_10015E468, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizedStringResource, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - v1;
  uint64_t v3 = sub_1001230B0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = sub_100122EF0();
  sub_10001927C(v5, qword_100172770);
  sub_100019244(v5, (uint64_t)qword_100172770);
  sub_100123090();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return sub_100122EE0();
}

unint64_t sub_1000EE21C()
{
  uint64_t v0 = sub_1001230A0();
  uint64_t v33 = *(void *)(v0 - 8);
  uint64_t v34 = v0;
  __chkstk_darwin(v0);
  uint64_t v32 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1001233E0();
  __chkstk_darwin(v2 - 8);
  char v31 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100125AC0();
  __chkstk_darwin(v4 - 8);
  uint64_t v30 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EFD2C(0, &qword_10015E490, (uint64_t (*)(uint64_t))&type metadata accessor for DisplayRepresentation.Image, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v24 - v7;
  sub_1000EFD2C(0, &qword_10015E468, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizedStringResource, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = sub_1001230B0();
  uint64_t v27 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000EFD2C(0, &qword_1001637E8, (uint64_t (*)(uint64_t))sub_1000EFE8C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  sub_1000EFE8C();
  uint64_t v15 = v14 - 8;
  uint64_t v16 = *(void *)(*(void *)(v14 - 8) + 72);
  unint64_t v17 = (*(unsigned __int8 *)(*(void *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v29 = v18;
  *(_OWORD *)(v18 + 16) = xmmword_100128E90;
  unint64_t v19 = v18 + v17;
  unint64_t v25 = v18 + v17 + *(int *)(v15 + 56);
  *(unsigned char *)(v18 + v17) = 0;
  sub_100123090();
  sub_100123090();
  uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  uint64_t v26 = v13 + 56;
  unsigned int v28 = v20;
  v20(v11, 0, 1, v12);
  sub_100122D50();
  uint64_t v21 = sub_100122D60();
  uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v8, 0, 1, v21);
  sub_100122D80();
  unint64_t v25 = v19 + v16 + *(int *)(v15 + 56);
  *(unsigned char *)(v19 + v16) = 1;
  sub_100123090();
  sub_100125AB0();
  sub_100123390();
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, enum case for LocalizedStringResource.BundleDescription.main(_:), v34);
  sub_1001230C0();
  v28(v11, 0, 1, v27);
  sub_100122D50();
  v22(v8, 0, 1, v21);
  sub_100122D80();
  unint64_t result = sub_10003DA00(v29);
  qword_100172788 = result;
  return result;
}

uint64_t sub_1000EE784()
{
  sub_1000EFF8C(0, &qword_1001637F0, (uint64_t (*)(void))sub_10003F2E0, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for _EnumURLRepresentation);
  uint64_t v1 = v0;
  sub_10001927C(v0, qword_100172790);
  sub_100019244(v1, (uint64_t)qword_100172790);
  sub_1000EFD2C(0, &qword_1001637F8, (uint64_t (*)(uint64_t))sub_1000EFEF4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  sub_1000EFEF4();
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 72);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100128E90;
  *(unsigned char *)(v5 + v4) = 0;
  sub_10003F2E0();
  sub_100122E00();
  *(unsigned char *)(v5 + v4 + v3) = 1;
  sub_100122E00();
  sub_10003DA2C(v5);
  return sub_100122E20();
}

uint64_t sub_1000EE96C(char *a1, char *a2)
{
  return sub_10003E044(*a1, *a2);
}

unint64_t sub_1000EE97C()
{
  unint64_t result = qword_100163730;
  if (!qword_100163730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163730);
  }
  return result;
}

Swift::Int sub_1000EE9D0()
{
  return sub_100126630();
}

uint64_t sub_1000EEA4C()
{
  sub_100125BA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000EEAB4()
{
  return sub_100126630();
}

uint64_t sub_1000EEB2C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_100151040;
  v8._object = v3;
  Swift::Int v5 = sub_100126340(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_1000EEB8C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1953460082;
  if (*v1) {
    uint64_t v2 = 0x79636176697270;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1000EEBCC()
{
  unint64_t result = qword_100163738;
  if (!qword_100163738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163738);
  }
  return result;
}

uint64_t sub_1000EEC20@<X0>(uint64_t a1@<X8>)
{
  if (qword_10015D600 != -1) {
    swift_once();
  }
  sub_1000EFF8C(0, &qword_1001637F0, (uint64_t (*)(void))sub_10003F2E0, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for _EnumURLRepresentation);
  uint64_t v3 = v2;
  uint64_t v4 = sub_100019244(v2, (uint64_t)qword_100172790);
  Swift::Int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v5(a1, v4, v3);
}

unint64_t sub_1000EECFC()
{
  unint64_t result = qword_100163740;
  if (!qword_100163740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163740);
  }
  return result;
}

unint64_t sub_1000EED54()
{
  unint64_t result = qword_100163748;
  if (!qword_100163748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163748);
  }
  return result;
}

unint64_t sub_1000EEDAC()
{
  unint64_t result = qword_100163750;
  if (!qword_100163750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163750);
  }
  return result;
}

void *sub_1000EEE00()
{
  return &protocol witness table for String;
}

uint64_t sub_1000EEE0C()
{
  sub_1000EFE38();
  uint64_t v2 = sub_100122DC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1000192E0(v3, v0, v2, v1);
}

unint64_t sub_1000EEEA4()
{
  unint64_t result = qword_100163760;
  if (!qword_100163760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163760);
  }
  return result;
}

unint64_t sub_1000EEEFC()
{
  unint64_t result = qword_100163768;
  if (!qword_100163768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163768);
  }
  return result;
}

unint64_t sub_1000EEF54()
{
  unint64_t result = qword_100163770;
  if (!qword_100163770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163770);
  }
  return result;
}

unint64_t sub_1000EEFAC()
{
  unint64_t result = qword_100163778;
  if (!qword_100163778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163778);
  }
  return result;
}

uint64_t sub_1000EF000@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EF038(&qword_10015D5F0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100172770, a1);
}

uint64_t sub_1000EF038@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100019244(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1000EF0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000EF6D4(a1, a2, a3, (void (*)(void))sub_10003F2E0);
}

uint64_t sub_1000EF108(uint64_t a1)
{
  unint64_t v2 = sub_10003F2E0();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1000EF158()
{
  unint64_t result = qword_100163780;
  if (!qword_100163780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163780);
  }
  return result;
}

unint64_t sub_1000EF1B0()
{
  unint64_t result = qword_100163788;
  if (!qword_100163788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163788);
  }
  return result;
}

uint64_t sub_1000EF208()
{
  if (qword_10015D5F8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000EF264(uint64_t a1)
{
  unint64_t v2 = sub_1000EEFAC();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1000EF2B4()
{
  unint64_t result = qword_100163790;
  if (!qword_100163790)
  {
    sub_1000EF30C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163790);
  }
  return result;
}

void sub_1000EF30C()
{
  if (!qword_100163798)
  {
    unint64_t v0 = sub_100125D50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163798);
    }
  }
}

void sub_1000EF364(void *a1@<X8>)
{
  *a1 = &off_100151090;
}

unint64_t sub_1000EF378()
{
  unint64_t result = qword_1001637A0;
  if (!qword_1001637A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001637A0);
  }
  return result;
}

uint64_t sub_1000EF3CC()
{
  uint64_t v0 = sub_1001230B0();
  sub_10001927C(v0, qword_1001727A8);
  sub_100019244(v0, (uint64_t)qword_1001727A8);
  return sub_100123090();
}

uint64_t sub_1000EF430@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100122C70();
  *a1 = v3;
  return result;
}

uint64_t sub_1000EF46C()
{
  return sub_100122C80();
}

void (*sub_1000EF4A4(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_100122C60();
  return sub_100017AFC;
}

unint64_t sub_1000EF504()
{
  unint64_t result = qword_1001637A8;
  if (!qword_1001637A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001637A8);
  }
  return result;
}

uint64_t sub_1000EF558(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1000EFD90();
  unint64_t v5 = sub_1000EFE38();

  return static _URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_1000EF5C0()
{
  uint64_t v0 = qword_100163720;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_1000EF5FC()
{
  unint64_t result = qword_1001637B0;
  if (!qword_1001637B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001637B0);
  }
  return result;
}

unint64_t sub_1000EF654()
{
  unint64_t result = qword_1001637B8;
  if (!qword_1001637B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001637B8);
  }
  return result;
}

uint64_t sub_1000EF6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000EF6D4(a1, a2, a3, (void (*)(void))sub_1000EF504);
}

uint64_t sub_1000EF6D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000EF71C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EF038(&qword_10015D608, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1001727A8, a1);
}

uint64_t sub_1000EF754(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1000EFD90();
  unint64_t v7 = sub_1000EFDE4();
  unint64_t v8 = sub_1000EFE38();
  *unint64_t v5 = v2;
  v5[1] = sub_100017EDC;
  return _URLRepresentableIntent<>.perform()(a1, a2, v6, v7, v8);
}

uint64_t sub_1000EF828@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000EF9A0();
  *a1 = result;
  return result;
}

uint64_t sub_1000EF850(uint64_t a1)
{
  unint64_t v2 = sub_1000EF504();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenStocksSettingsDeepLinksIntent()
{
  return &type metadata for OpenStocksSettingsDeepLinksIntent;
}

unsigned char *storeEnumTagSinglePayload for StocksSettingsDeepLinks(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000EF968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksSettingsDeepLinks()
{
  return &type metadata for StocksSettingsDeepLinks;
}

uint64_t sub_1000EF9A0()
{
  uint64_t v17 = sub_100122E30();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000EFD2C(0, &qword_10015E460, (uint64_t (*)(uint64_t))&type metadata accessor for IntentDialog, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v17 - v7;
  sub_1000EFD2C(0, &qword_10015E468, (uint64_t (*)(uint64_t))&type metadata accessor for LocalizedStringResource, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = sub_1001230B0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_1000EFF8C(0, &qword_1001637C8, (uint64_t (*)(void))sub_1000EEF54, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for IntentParameter);
  sub_100123090();
  sub_100123090();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  char v18 = 2;
  uint64_t v14 = sub_100122C40();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v5, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_10003F2E0();
  return sub_100122C90();
}

void sub_1000EFD2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1000EFD90()
{
  unint64_t result = qword_1001637D0;
  if (!qword_1001637D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001637D0);
  }
  return result;
}

unint64_t sub_1000EFDE4()
{
  unint64_t result = qword_1001637D8;
  if (!qword_1001637D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001637D8);
  }
  return result;
}

unint64_t sub_1000EFE38()
{
  unint64_t result = qword_1001637E0;
  if (!qword_1001637E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001637E0);
  }
  return result;
}

void sub_1000EFE8C()
{
  if (!qword_10015F2B0)
  {
    sub_100122D90();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015F2B0);
    }
  }
}

void sub_1000EFEF4()
{
  if (!qword_10015F2C8)
  {
    sub_1000EFF8C(255, (unint64_t *)&qword_10015F2D0, (uint64_t (*)(void))sub_10003F2E0, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for _EnumURLRepresentation.EnumSingleURLRepresentation);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_10015F2C8);
    }
  }
}

void sub_1000EFF8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, ValueMetadata *, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3();
    unint64_t v8 = a4(a1, &type metadata for StocksSettingsDeepLinks, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for LargePriceView(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LargePriceView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for LargePriceView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[3];
  if (*(void *)(a1 + 24) == 1)
  {
    if (v4 == 1)
    {
      long long v5 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
    }
    else
    {
      uint64_t v7 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v7;
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 == 1)
  {
    sub_10003088C(a1);
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    uint64_t v8 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)a1 = v8;
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t assignWithTake for LargePriceView(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) != 1)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    if (v4 != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10003088C(a1);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for LargePriceView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for LargePriceView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 2147483646;
    *(void *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LargePriceView()
{
  return &type metadata for LargePriceView;
}

uint64_t sub_1000F0258()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F0274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v34 = a5;
  sub_1000F099C(0, &qword_1001601E8, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Design, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for StockPriceView();
  uint64_t v13 = (int *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000F06A4();
  uint64_t v33 = v16;
  __chkstk_darwin(v16);
  char v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F0764();
  uint64_t v31 = *(void *)(v19 - 8);
  uint64_t v32 = v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100125180();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
  sub_1000321B8(a1, a2, a3, a4);
  uint64_t v23 = sub_1001251E0();
  sub_1000F0908((uint64_t)v11);
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v15 = a1;
  v15[1] = a2;
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = v23;
  unint64_t v25 = (uint64_t *)((char *)v15 + v13[8]);
  uint64_t *v25 = swift_getKeyPath();
  sub_1000F099C(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (char *)v15 + v13[9];
  *(void *)uint64_t v26 = KeyPath;
  v26[8] = 0;
  uint64_t v27 = v13[10];
  if (qword_10015D598 != -1) {
    swift_once();
  }
  sub_1000050BC();
  swift_allocObject();
  swift_retain();
  *(uint64_t *)((char *)v15 + v27) = sub_100123FD0();
  uint64_t v28 = swift_getKeyPath();
  sub_1000F0A08((uint64_t)v15, (uint64_t)v18);
  uint64_t v29 = (uint64_t *)&v18[*(int *)(v33 + 36)];
  *uint64_t v29 = v28;
  v29[1] = 0x3FB999999999999ALL;
  sub_1000F0A6C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockPriceView);
  sub_1000F07E8();
  sub_100125410();
  sub_1000F0A6C((uint64_t)v18, (uint64_t (*)(void))sub_1000F06A4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v34, v21, v32);
}

uint64_t sub_1000F0698@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F0274(*v1, v1[1], v1[2], v1[3], a1);
}

void sub_1000F06A4()
{
  if (!qword_100163800)
  {
    type metadata accessor for StockPriceView();
    sub_1000F070C();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163800);
    }
  }
}

void sub_1000F070C()
{
  if (!qword_10015EE00)
  {
    unint64_t v0 = sub_1001250A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EE00);
    }
  }
}

void sub_1000F0764()
{
  if (!qword_100163808)
  {
    sub_1000F06A4();
    sub_1000F07E8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100163808);
    }
  }
}

unint64_t sub_1000F07E8()
{
  unint64_t result = qword_100163810;
  if (!qword_100163810)
  {
    sub_1000F06A4();
    sub_1000F08C0(&qword_100163818, (void (*)(uint64_t))type metadata accessor for StockPriceView);
    sub_1000F08C0((unint64_t *)&qword_10015EE20, (void (*)(uint64_t))sub_1000F070C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163810);
  }
  return result;
}

uint64_t sub_1000F08C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F0908(uint64_t a1)
{
  sub_1000F099C(0, &qword_1001601E8, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Design, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000F099C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000F0A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockPriceView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F0A6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F0ACC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for HeadlineThumbnail(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

void destroy for HeadlineThumbnail(id *a1)
{
}

uint64_t assignWithCopy for HeadlineThumbnail(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  BOOL v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t initializeWithTake for HeadlineThumbnailImage(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for HeadlineThumbnail(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineThumbnail(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HeadlineThumbnail(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1000F0CAC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1000F0CC4(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(unsigned char *)(result + 8) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineThumbnail()
{
  return &type metadata for HeadlineThumbnail;
}

uint64_t getEnumTagSinglePayload for HeadlineThumbnailImage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineThumbnailImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineThumbnailImage()
{
  return &type metadata for HeadlineThumbnailImage;
}

uint64_t getEnumTagSinglePayload for HeadlineThumbnailView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineThumbnailView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineThumbnailView()
{
  return &type metadata for HeadlineThumbnailView;
}

uint64_t sub_1000F0E4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F0E68@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v44 = sub_100124B80() - 8;
  __chkstk_darwin(v44);
  id v6 = (_OWORD *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000F191C(0, &qword_100163848, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for _ConditionalContent);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v43 - v8;
  sub_1000F14CC();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F1548(0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F11F0(a1, a2);
  sub_1000F16F4((uint64_t)v9, (uint64_t)v13);
  char v18 = &v13[*(int *)(v11 + 44)];
  *(void *)char v18 = 0x3FF0000000000000;
  *((_WORD *)v18 + 4) = 0;
  sub_1000F1774((uint64_t)v9);
  sub_100125520();
  uint64_t v19 = sub_100125530();
  swift_release();
  sub_1001248C0();
  uint64_t v20 = v46;
  uint64_t v21 = v48;
  uint64_t v22 = v49;
  uint64_t v23 = v50;
  uint64_t v24 = sub_1001257D0();
  uint64_t v26 = v25;
  uint64_t v27 = sub_1001257D0();
  uint64_t v29 = v28;
  sub_1000F17EC((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))sub_1000F14CC);
  uint64_t v30 = &v17[*(int *)(v15 + 44)];
  uint64_t v31 = v47;
  *(void *)uint64_t v30 = v20;
  *((void *)v30 + 1) = v31;
  *((void *)v30 + 2) = v21;
  *((void *)v30 + 3) = v22;
  *((void *)v30 + 4) = v23;
  *((void *)v30 + 5) = v19;
  *((_WORD *)v30 + 24) = 256;
  *((void *)v30 + 7) = v24;
  *((void *)v30 + 8) = v26;
  *((void *)v30 + 9) = v27;
  *((void *)v30 + 10) = v29;
  sub_1000F3258((uint64_t)v13, (uint64_t (*)(void))sub_1000F14CC);
  uint64_t v32 = (char *)v6 + *(int *)(v44 + 28);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = sub_100124EE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  __asm { FMOV            V0.2D, #8.0 }
  *id v6 = _Q0;
  sub_1000F1854(0);
  uint64_t v41 = v45;
  sub_1000F17EC((uint64_t)v6, v45 + *(int *)(v40 + 36), (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000F17EC((uint64_t)v17, v41, (uint64_t (*)(void))sub_1000F1548);
  sub_1000F3258((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  return sub_1000F3258((uint64_t)v17, (uint64_t (*)(void))sub_1000F1548);
}

uint64_t sub_1000F11F0(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for HeadlineThumbnailImageView();
  __chkstk_darwin(v4);
  id v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000F191C(0, &qword_100163898, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v13 - v8;
  if (a1)
  {
    *id v6 = swift_getKeyPath();
    sub_1000F2B4C(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = (char *)v6 + *(int *)(v4 + 20);
    *(void *)uint64_t v10 = a1;
    v10[8] = a2 & 1;
    sub_1000F17EC((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HeadlineThumbnailImageView);
    swift_storeEnumTagMultiPayload();
    sub_1000F2324();
    sub_1000F3E14(&qword_1001638A8, (void (*)(uint64_t))type metadata accessor for HeadlineThumbnailImageView);
    id v11 = a1;
    sub_100124F80();
    return sub_1000F3258((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadlineThumbnailImageView);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1000F2324();
    sub_1000F3E14(&qword_1001638A8, (void (*)(uint64_t))type metadata accessor for HeadlineThumbnailImageView);
    return sub_100124F80();
  }
}

uint64_t sub_1000F1474@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F0E68(*(void **)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t type metadata accessor for HeadlineThumbnailImageView()
{
  uint64_t result = qword_100163908;
  if (!qword_100163908) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000F14CC()
{
  if (!qword_100163850)
  {
    sub_1000F191C(255, &qword_100163848, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163850);
    }
  }
}

void sub_1000F1548(uint64_t a1)
{
}

void sub_1000F157C()
{
  if (!qword_100163860)
  {
    sub_1000F1610();
    sub_1000F3E14(&qword_100163878, (void (*)(uint64_t))sub_1000F1610);
    unint64_t v0 = sub_100124BA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163860);
    }
  }
}

void sub_1000F1610()
{
  if (!qword_100163868)
  {
    sub_1000F16A0();
    unint64_t v0 = sub_100124B30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163868);
    }
  }
}

unint64_t sub_1000F16A0()
{
  unint64_t result = qword_100163870;
  if (!qword_100163870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163870);
  }
  return result;
}

uint64_t sub_1000F16F4(uint64_t a1, uint64_t a2)
{
  sub_1000F191C(0, &qword_100163848, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F1774(uint64_t a1)
{
  sub_1000F191C(0, &qword_100163848, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000F17EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1000F1854(uint64_t a1)
{
}

void sub_1000F1888()
{
  if (!qword_100163888)
  {
    sub_100124B80();
    sub_1000F3E14(&qword_100163890, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle);
    unint64_t v0 = sub_100124FF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163888);
    }
  }
}

void sub_1000F191C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for HeadlineThumbnailImageView();
    unint64_t v7 = a3(a1, &type metadata for HeadlineThumbnailAudioIndicatorView, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1000F1984@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  char v38 = (uint64_t (*)(uint64_t))&type metadata accessor for WidgetAccentedRenderingMode;
  uint64_t v39 = a1;
  uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional;
  sub_1000F2B4C(0, &qword_1001639B0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetAccentedRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - v4;
  uint64_t v6 = sub_1001255B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F34A8();
  uint64_t v36 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F3510();
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v2 + *(int *)(type metadata accessor for HeadlineThumbnailImageView() + 20);
  id v18 = *(id *)v35;
  sub_100125590();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.ResizingMode.stretch(_:), v6);
  sub_100125610();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1001258D0();
  uint64_t v19 = sub_1001258E0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 0, 1, v19);
  sub_100125600();
  swift_release();
  sub_1000F35B0((uint64_t)v5, &qword_1001639B0, v38, v37);
  uint64_t v20 = v36;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v36);
  *(_WORD *)&v17[*(int *)(v15 + 44)] = 256;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  char v38 = (uint64_t (*)(uint64_t))sub_1001257D0();
  uint64_t v22 = v21;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  int v29 = *(unsigned __int8 *)(v35 + 8);
  if (v29 == 1)
  {
    sub_1001257D0();
    sub_100124990();
    uint64_t v23 = v40;
    uint64_t v24 = v41;
    uint64_t v25 = v42;
    uint64_t v26 = v43;
    uint64_t v27 = v44;
    uint64_t v28 = v45;
  }
  uint64_t v30 = v39;
  sub_1000F17EC((uint64_t)v17, v39, (uint64_t (*)(void))sub_1000F3510);
  sub_1000F360C(0);
  uint64_t v32 = v30 + *(int *)(v31 + 36);
  *(void *)uint64_t v32 = v23;
  *(void *)(v32 + 8) = v24;
  *(void *)(v32 + 16) = v25;
  *(void *)(v32 + 24) = v26;
  *(void *)(v32 + 32) = v27;
  *(void *)(v32 + 40) = v28;
  *(unsigned char *)(v32 + 48) = v29 ^ 1;
  *(void *)(v32 + 56) = v38;
  *(void *)(v32 + 64) = v22;
  return sub_1000F3258((uint64_t)v17, (uint64_t (*)(void))sub_1000F3510);
}

double sub_1000F1DA0@<D0>(uint64_t a1@<X8>)
{
  sub_100125510();
  uint64_t v2 = sub_100125530();
  swift_release();
  sub_100125510();
  uint64_t v3 = sub_100125530();
  swift_release();
  *(void *)a1 = v2;
  *(_OWORD *)(a1 + 8) = xmmword_10012EBE0;
  *(void *)(a1 + 24) = 0x4000000000000000;
  *(void *)(a1 + 32) = v3;
  double result = 10.0;
  *(_OWORD *)(a1 + 40) = xmmword_10012EBF0;
  *(void *)(a1 + 56) = 0x4000000000000000;
  return result;
}

uint64_t sub_1000F1E30()
{
  if (qword_10015D5E8 != -1) {
    swift_once();
  }
  sub_100029758((uint64_t)&unk_100172748, (uint64_t)v3);
  sub_100009D98(v3, v3[3]);
  sub_100037604();
  uint64_t result = sub_100124100();
  if (v2)
  {
    sub_100029474(&v1, (uint64_t)&unk_100163820);
    return sub_100009D48((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000F1EF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  sub_1000F2FF0();
  uint64_t v33 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F2B4C(0, &qword_100163980, (uint64_t (*)(uint64_t))&type metadata accessor for Image.TemplateRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32 - v5;
  sub_1000F3640(0, &qword_100163988, (void (*)(uint64_t))sub_1000F3108, (void (*)(uint64_t))sub_1000F2FF0);
  uint64_t v8 = v7;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v32 - v9;
  sub_1001255A0();
  uint64_t v11 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v12 = sub_1001255E0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v6, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  uint64_t v14 = sub_1001255C0();
  swift_release();
  sub_1000F35B0((uint64_t)v6, &qword_100163980, (uint64_t (*)(uint64_t))&type metadata accessor for Image.TemplateRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v15 = sub_100125520();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = sub_1001257D0();
  sub_10003A138(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v36, 0.0, 1, INFINITY, 0, v17, v18, v14, KeyPath, v15);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v19 = sub_1001257D0();
  uint64_t v21 = v20;
  if (qword_10015D610 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_100163838;
  uint64_t v23 = unk_100163840;
  sub_100009D98(qword_100163820, qword_100163838);
  (*(void (**)(uint64_t))(*(void *)(v23 + 16) + 96))(v22);
  uint64_t v35 = sub_1001254E0();
  sub_1001253D0();
  swift_release();
  uint64_t v24 = (uint64_t *)&v3[*(int *)(v33 + 36)];
  *uint64_t v24 = v19;
  v24[1] = v21;
  sub_1000F17EC((uint64_t)v3, (uint64_t)&v10[*(int *)(v8 + 36)], (uint64_t (*)(void))sub_1000F2FF0);
  long long v25 = v36[7];
  *((_OWORD *)v10 + 6) = v36[6];
  *((_OWORD *)v10 + 7) = v25;
  *((void *)v10 + 16) = v37;
  long long v26 = v36[3];
  *((_OWORD *)v10 + 2) = v36[2];
  *((_OWORD *)v10 + 3) = v26;
  long long v27 = v36[5];
  *((_OWORD *)v10 + 4) = v36[4];
  *((_OWORD *)v10 + 5) = v27;
  long long v28 = v36[1];
  *(_OWORD *)uint64_t v10 = v36[0];
  *((_OWORD *)v10 + 1) = v28;
  sub_1000F3258((uint64_t)v3, (uint64_t (*)(void))sub_1000F2FF0);
  uint64_t v29 = v34;
  sub_1000F32B8((uint64_t)v10, v34);
  sub_1000F334C();
  *(_WORD *)(v29 + *(int *)(v30 + 36)) = 256;
  return sub_1000F341C((uint64_t)v10);
}

unint64_t sub_1000F2324()
{
  unint64_t result = qword_1001638A0;
  if (!qword_1001638A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001638A0);
  }
  return result;
}

uint64_t *sub_1000F2378(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000F2B4C(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1001258C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void **)v11;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    id v13 = v12;
  }
  return a1;
}

void sub_1000F24D4(uint64_t a1, uint64_t a2)
{
  sub_1000F2B4C(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1001258C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

void *sub_1000F25A0(void *a1, void *a2, uint64_t a3)
{
  sub_1000F2B4C(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1001258C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void **)v9;
  *(void *)uint64_t v8 = *(void *)v9;
  v8[8] = v9[8];
  id v11 = v10;
  return a1;
}

void *sub_1000F26AC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F35B0((uint64_t)a1, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_1000F2B4C(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1001258C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void **)v9;
  id v11 = *(void **)v8;
  *(void *)uint64_t v8 = *(void *)v9;
  id v12 = v10;

  v8[8] = v9[8];
  return a1;
}

char *sub_1000F27F0(char *a1, char *a2, uint64_t a3)
{
  sub_1000F2B4C(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1001258C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  return a1;
}

char *sub_1000F2900(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F35B0((uint64_t)a1, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_1000F2B4C(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1001258C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  id v11 = &a2[v9];
  id v12 = *(void **)&a1[v9];
  *(void *)&a1[v9] = *(void *)v11;

  v10[8] = v11[8];
  return a1;
}

uint64_t sub_1000F2A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F2A5C);
}

uint64_t sub_1000F2A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000F2B4C(0, &qword_10015ECE0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

void sub_1000F2B4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000F2BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F2BC4);
}

void sub_1000F2BC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000F2B4C(0, &qword_10015ECE0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void sub_1000F2CB0()
{
  sub_1000F2B4C(319, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for HeadlineThumbnailAudioIndicatorView()
{
  return &type metadata for HeadlineThumbnailAudioIndicatorView;
}

uint64_t sub_1000F2D84()
{
  return sub_1000F3CC4(&qword_100163940, sub_1000F1854, (void (*)(void))sub_1000F2DE0, (void (*)(void))sub_1000F2F84);
}

unint64_t sub_1000F2DE0()
{
  unint64_t result = qword_100163948;
  if (!qword_100163948)
  {
    sub_1000F1548(255);
    sub_1000F3A58(&qword_100163950, (void (*)(uint64_t))sub_1000F14CC, (void (*)(void))sub_1000F2EC0);
    sub_1000F3E14(&qword_100163960, (void (*)(uint64_t))sub_1000F157C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163948);
  }
  return result;
}

unint64_t sub_1000F2EC0()
{
  unint64_t result = qword_100163958;
  if (!qword_100163958)
  {
    sub_1000F191C(255, &qword_100163848, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_1000F2324();
    sub_1000F3E14(&qword_1001638A8, (void (*)(uint64_t))type metadata accessor for HeadlineThumbnailImageView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163958);
  }
  return result;
}

uint64_t sub_1000F2F84()
{
  return sub_1000F3E14(&qword_100163968, (void (*)(uint64_t))sub_1000F1888);
}

uint64_t sub_1000F2FB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F2FD4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000F2FF0()
{
  if (!qword_100163970)
  {
    sub_1000F308C();
    swift_getOpaqueTypeConformance2();
    unint64_t v0 = sub_100124F60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163970);
    }
  }
}

void sub_1000F308C()
{
  if (!qword_100163978)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100163978);
    }
  }
}

void sub_1000F3108()
{
  if (!qword_100163990)
  {
    sub_1000F3168();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163990);
    }
  }
}

void sub_1000F3168()
{
  if (!qword_100163998)
  {
    sub_1000F2B4C(255, &qword_10015EDC0, (uint64_t (*)(uint64_t))sub_1000F31F8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163998);
    }
  }
}

void sub_1000F31F8()
{
  if (!qword_10015EDC8)
  {
    unint64_t v0 = sub_100126010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EDC8);
    }
  }
}

uint64_t sub_1000F3258(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F32B8(uint64_t a1, uint64_t a2)
{
  sub_1000F3640(0, &qword_100163988, (void (*)(uint64_t))sub_1000F3108, (void (*)(uint64_t))sub_1000F2FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000F334C()
{
  if (!qword_1001639A0)
  {
    sub_1000F3640(255, &qword_100163988, (void (*)(uint64_t))sub_1000F3108, (void (*)(uint64_t))sub_1000F2FF0);
    sub_1000F4044(255, &qword_1001639A8, (uint64_t (*)(void))sub_1000F16A0, (uint64_t)&type metadata for ContainerRelativeShape, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ClipEffect);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001639A0);
    }
  }
}

uint64_t sub_1000F341C(uint64_t a1)
{
  sub_1000F3640(0, &qword_100163988, (void (*)(uint64_t))sub_1000F3108, (void (*)(uint64_t))sub_1000F2FF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000F34A8()
{
  if (!qword_1001639B8)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001639B8);
    }
  }
}

void sub_1000F3510()
{
  if (!qword_1001639C0)
  {
    sub_1000F34A8();
    sub_1000F4044(255, &qword_1001639A8, (uint64_t (*)(void))sub_1000F16A0, (uint64_t)&type metadata for ContainerRelativeShape, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ClipEffect);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001639C0);
    }
  }
}

uint64_t sub_1000F35B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1000F2B4C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1000F360C(uint64_t a1)
{
}

void sub_1000F3640(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_100124B20();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1000F36B4()
{
  if (!qword_1001639D0)
  {
    sub_1000F3718();
    sub_1000F3788();
    unint64_t v0 = sub_100124BA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001639D0);
    }
  }
}

void sub_1000F3718()
{
  if (!qword_1001639D8)
  {
    sub_1000E23DC(255, &qword_1001639E0);
    unint64_t v0 = sub_100126010();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001639D8);
    }
  }
}

unint64_t sub_1000F3788()
{
  unint64_t result = qword_1001639E8;
  if (!qword_1001639E8)
  {
    sub_1000F3718();
    sub_1000F37F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001639E8);
  }
  return result;
}

unint64_t sub_1000F37F8()
{
  unint64_t result = qword_1001639F0;
  if (!qword_1001639F0)
  {
    sub_1000E23DC(255, &qword_1001639E0);
    sub_1000F3888();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001639F0);
  }
  return result;
}

unint64_t sub_1000F3888()
{
  unint64_t result = qword_1001639F8;
  if (!qword_1001639F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001639F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineThumbnailAudioIndicatorBadgeView()
{
  return &type metadata for HeadlineThumbnailAudioIndicatorBadgeView;
}

uint64_t sub_1000F38EC()
{
  return sub_1000F3CC4(&qword_100163A00, (void (*)(uint64_t))sub_1000F334C, (void (*)(void))sub_1000F3948, (void (*)(void))sub_1000F3BD8);
}

unint64_t sub_1000F3948()
{
  unint64_t result = qword_100163A08;
  if (!qword_100163A08)
  {
    sub_1000F3640(255, &qword_100163988, (void (*)(uint64_t))sub_1000F3108, (void (*)(uint64_t))sub_1000F2FF0);
    sub_1000F3A58(&qword_100163A10, (void (*)(uint64_t))sub_1000F3108, (void (*)(void))sub_1000F3AD8);
    sub_1000F3E14(&qword_100163A20, (void (*)(uint64_t))sub_1000F2FF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163A08);
  }
  return result;
}

uint64_t sub_1000F3A58(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000F3AD8()
{
  unint64_t result = qword_100163A18;
  if (!qword_100163A18)
  {
    sub_1000F3168();
    sub_1000F3B50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163A18);
  }
  return result;
}

unint64_t sub_1000F3B50()
{
  unint64_t result = qword_10015EEB8;
  if (!qword_10015EEB8)
  {
    sub_1000F2B4C(255, &qword_10015EDC0, (uint64_t (*)(uint64_t))sub_1000F31F8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EEB8);
  }
  return result;
}

unint64_t sub_1000F3BD8()
{
  unint64_t result = qword_100163A28;
  if (!qword_100163A28)
  {
    sub_1000F4044(255, &qword_1001639A8, (uint64_t (*)(void))sub_1000F16A0, (uint64_t)&type metadata for ContainerRelativeShape, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ClipEffect);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163A28);
  }
  return result;
}

uint64_t sub_1000F3C68()
{
  return sub_1000F3CC4(&qword_100163A30, sub_1000F360C, (void (*)(void))sub_1000F3D50, (void (*)(void))sub_1000F3DE0);
}

uint64_t sub_1000F3CC4(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000F3D50()
{
  unint64_t result = qword_100163A38;
  if (!qword_100163A38)
  {
    sub_1000F3510();
    swift_getOpaqueTypeConformance2();
    sub_1000F3BD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163A38);
  }
  return result;
}

uint64_t sub_1000F3DE0()
{
  return sub_1000F3E14(&qword_100163A40, (void (*)(uint64_t))sub_1000F36B4);
}

uint64_t sub_1000F3E14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F3E5C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000F3E7C()
{
  unint64_t result = qword_100163A48;
  if (!qword_100163A48)
  {
    sub_1000F3F2C();
    sub_1000F3A58(&qword_100163A78, (void (*)(uint64_t))sub_1000F3FCC, (void (*)(void))sub_1000F4100);
    sub_1000F4190();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163A48);
  }
  return result;
}

void sub_1000F3F2C()
{
  if (!qword_100163A50)
  {
    sub_1000F3FCC();
    sub_1000F4044(255, &qword_100163A68, (uint64_t (*)(void))sub_1000F40AC, (uint64_t)&type metadata for Circle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ContainerShapeModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163A50);
    }
  }
}

void sub_1000F3FCC()
{
  if (!qword_100163A58)
  {
    sub_1000E23DC(255, &qword_100163A60);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163A58);
    }
  }
}

void sub_1000F4044(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1000F40AC()
{
  unint64_t result = qword_100163A70;
  if (!qword_100163A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163A70);
  }
  return result;
}

unint64_t sub_1000F4100()
{
  unint64_t result = qword_100163A80;
  if (!qword_100163A80)
  {
    sub_1000E23DC(255, &qword_100163A60);
    sub_1000F2324();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163A80);
  }
  return result;
}

unint64_t sub_1000F4190()
{
  unint64_t result = qword_100163A88;
  if (!qword_100163A88)
  {
    sub_1000F4044(255, &qword_100163A68, (uint64_t (*)(void))sub_1000F40AC, (uint64_t)&type metadata for Circle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ContainerShapeModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163A88);
  }
  return result;
}

ValueMetadata *type metadata accessor for CompanyNameView()
{
  return &type metadata for CompanyNameView;
}

uint64_t sub_1000F4240()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F425C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1001254F0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  sub_10001BA50();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100125350();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v22 = v15;
  uint64_t KeyPath = swift_getKeyPath();
  sub_100125250();
  sub_1001251B0();
  uint64_t v17 = sub_1001251F0();
  swift_release();
  uint64_t v18 = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Color.RGBColorSpace.sRGB(_:), v6);
  sub_100125560();
  uint64_t v19 = sub_100125530();
  swift_release();
  uint64_t v20 = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  char v25 = 0;
  *(void *)a3 = v10;
  *(void *)(a3 + 8) = v12;
  *(unsigned char *)(a3 + 16) = v14 & 1;
  *(_DWORD *)(a3 + 17) = v23;
  *(_DWORD *)(a3 + 20) = *(_DWORD *)((char *)&v23 + 3);
  *(void *)(a3 + 24) = v22;
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = KeyPath;
  *(void *)(a3 + 48) = 0;
  *(void *)(a3 + 56) = 0;
  *(void *)(a3 + 64) = 0;
  *(unsigned char *)(a3 + 72) = 0;
  *(_DWORD *)(a3 + 73) = *(_DWORD *)v26;
  *(_DWORD *)(a3 + 76) = *(_DWORD *)&v26[3];
  *(void *)(a3 + 80) = v18;
  *(void *)(a3 + 88) = v17;
  *(void *)(a3 + 96) = v20;
  *(void *)(a3 + 104) = v19;
  *(void *)(a3 + 112) = result;
  *(void *)(a3 + 120) = 1;
  *(unsigned char *)(a3 + 128) = v25;
  return result;
}

uint64_t sub_1000F4480@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F425C(*v1, v1[1], a1);
}

unint64_t sub_1000F44AC()
{
  unint64_t result = qword_100163A90;
  if (!qword_100163A90)
  {
    sub_1000F4544();
    sub_1000F4644();
    sub_1000416A8(&qword_10015E600, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163A90);
  }
  return result;
}

void sub_1000F4544()
{
  if (!qword_100163A98)
  {
    sub_1000F45C4();
    sub_1000413C0(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163A98);
    }
  }
}

void sub_1000F45C4()
{
  if (!qword_100163AA0)
  {
    sub_1000D2818();
    sub_1000413C0(255, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163AA0);
    }
  }
}

unint64_t sub_1000F4644()
{
  unint64_t result = qword_100163AA8;
  if (!qword_100163AA8)
  {
    sub_1000F45C4();
    sub_1000D2A28();
    sub_1000416A8((unint64_t *)&qword_10015EEB8, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163AA8);
  }
  return result;
}

uint64_t sub_1000F46DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100123E40();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - v7;
  sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = (char *)&v20 - v13;
  uint64_t v22 = v1 + *(int *)(type metadata accessor for WidgetStock() + 20);
  sub_1000F79F0(v22, (uint64_t)v14, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  uint64_t v15 = sub_100123670();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v21(v14, 1, v15) == 1)
  {
    sub_1000F7A5C((uint64_t)v14, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    uint64_t v24 = 0;
    int v23 = 1;
  }
  else
  {
    uint64_t v24 = sub_100123660();
    int v23 = v17 & 1;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  sub_100123D00();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v18 != enum case for StockType.unknown(_:)
    && v18 != enum case for StockType.currency(_:)
    && v18 != enum case for StockType.cryptocurrency(_:)
    && v18 != enum case for StockType.equity(_:)
    && v18 != enum case for StockType.etf(_:)
    && v18 != enum case for StockType.futures(_:))
  {
    if (v18 == enum case for StockType.index(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      return v24;
    }
    if (v18 != enum case for StockType.mutualFund(_:)) {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  sub_1000F79F0(v22, (uint64_t)v12, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  if (v21(v12, 1, v15) == 1)
  {
    sub_1000F7A5C((uint64_t)v12, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  }
  else
  {
    sub_100123600();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
  }
  return v24;
}

uint64_t type metadata accessor for WidgetStock()
{
  uint64_t result = qword_100163B08;
  if (!qword_100163B08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1000F4B64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100123D40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100123670();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    char v17 = (uint64_t *)((char *)a2 + v15);
    int v18 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v19 = *((void *)v18 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
    {
      sub_1000F4F1C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v35 = v19;
      *uint64_t v16 = *v17;
      uint64_t v21 = v18[5];
      uint64_t v22 = (char *)v16 + v21;
      int v23 = (char *)v17 + v21;
      uint64_t v24 = sub_1001232B0();
      char v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      sub_10002FE38();
      v25(&v22[*(int *)(v26 + 36)], &v23[*(int *)(v26 + 36)], v24);
      uint64_t v27 = v18[6];
      long long v28 = (char *)v16 + v27;
      uint64_t v29 = (char *)v17 + v27;
      uint64_t v30 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      *(_OWORD *)((char *)v16 + v18[7]) = *(_OWORD *)((char *)v17 + v18[7]);
      uint64_t v31 = v18[8];
      uint64_t v32 = (char *)v16 + v31;
      uint64_t v33 = (char *)v17 + v31;
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v33[8];
      *((unsigned char *)v16 + v18[9]) = *((unsigned char *)v17 + v18[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v35 + 56))(v16, 0, 1, v18);
    }
  }
  return a1;
}

void sub_1000F4F1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100126010();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000F4F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100123D40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100123670();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = type metadata accessor for PreparedSparkline(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v8 + *(int *)(v9 + 20);
    uint64_t v12 = sub_1001232B0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    v13(v11, v12);
    sub_10002FE38();
    v13(v11 + *(int *)(v14 + 36), v12);
    uint64_t v15 = v8 + *(int *)(v9 + 24);
    uint64_t v16 = sub_1001234F0();
    char v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    return v17(v15, v16);
  }
  return result;
}

uint64_t sub_1000F5170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100123D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100123670();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    sub_1000F4F1C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v33 = v17;
    *uint64_t v14 = *v15;
    uint64_t v19 = v16[5];
    uint64_t v20 = (char *)v14 + v19;
    uint64_t v21 = (char *)v15 + v19;
    uint64_t v22 = sub_1001232B0();
    int v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    sub_10002FE38();
    v23(&v20[*(int *)(v24 + 36)], &v21[*(int *)(v24 + 36)], v22);
    uint64_t v25 = v16[6];
    uint64_t v26 = (char *)v14 + v25;
    uint64_t v27 = (char *)v15 + v25;
    uint64_t v28 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
    uint64_t v29 = v16[8];
    uint64_t v30 = (char *)v14 + v29;
    uint64_t v31 = (char *)v15 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v33 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t sub_1000F54D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100123D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100123670();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      *uint64_t v17 = *v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v40 = v19[5];
      unsigned __int8 v41 = (char *)v17 + v40;
      uint64_t v42 = (char *)v18 + v40;
      uint64_t v43 = sub_1001232B0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24);
      v44(v41, v42, v43);
      sub_10002FE38();
      v44(&v41[*(int *)(v45 + 36)], &v42[*(int *)(v45 + 36)], v43);
      uint64_t v46 = v19[6];
      uint64_t v47 = (char *)v17 + v46;
      uint64_t v48 = (char *)v18 + v46;
      uint64_t v49 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 24))(v47, v48, v49);
      uint64_t v50 = v19[7];
      uint64_t v51 = (void *)((char *)v17 + v50);
      uint64_t v52 = (void *)((char *)v18 + v50);
      *uint64_t v51 = *v52;
      v51[1] = v52[1];
      uint64_t v53 = v19[8];
      uint64_t v54 = (char *)v17 + v53;
      uint64_t v55 = (char *)v18 + v53;
      char v56 = v55[8];
      *(void *)uint64_t v54 = *(void *)v55;
      v54[8] = v56;
      *((unsigned char *)v17 + v19[9]) = *((unsigned char *)v18 + v19[9]);
      return a1;
    }
    sub_1000F59F4((uint64_t)v17, type metadata accessor for PreparedSparkline);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_1000F4F1C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    memcpy(v17, v18, *(void *)(*(void *)(v38 - 8) + 64));
    return a1;
  }
  *uint64_t v17 = *v18;
  uint64_t v24 = v19[5];
  uint64_t v25 = (char *)v17 + v24;
  uint64_t v26 = (char *)v18 + v24;
  uint64_t v27 = sub_1001232B0();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  v28(v25, v26, v27);
  sub_10002FE38();
  v28(&v25[*(int *)(v29 + 36)], &v26[*(int *)(v29 + 36)], v27);
  uint64_t v30 = v19[6];
  uint64_t v31 = (char *)v17 + v30;
  uint64_t v32 = (char *)v18 + v30;
  uint64_t v33 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  *(_OWORD *)((char *)v17 + v19[7]) = *(_OWORD *)((char *)v18 + v19[7]);
  uint64_t v34 = v19[8];
  uint64_t v35 = (char *)v17 + v34;
  uint64_t v36 = (char *)v18 + v34;
  char v37 = v36[8];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v37;
  *((unsigned char *)v17 + v19[9]) = *((unsigned char *)v18 + v19[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t sub_1000F59F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F5A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100123D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100123670();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    sub_1000F4F1C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *int v14 = *v15;
    uint64_t v19 = v16[5];
    uint64_t v20 = (char *)v14 + v19;
    uint64_t v21 = (char *)v15 + v19;
    uint64_t v22 = sub_1001232B0();
    int v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
    v23(v20, v21, v22);
    sub_10002FE38();
    v23(&v20[*(int *)(v24 + 36)], &v21[*(int *)(v24 + 36)], v22);
    uint64_t v25 = v16[6];
    uint64_t v26 = (char *)v14 + v25;
    uint64_t v27 = (char *)v15 + v25;
    uint64_t v28 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
    uint64_t v29 = v16[8];
    uint64_t v30 = (char *)v14 + v29;
    uint64_t v31 = (char *)v15 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

uint64_t sub_1000F5DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100123D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_100123670();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      *uint64_t v17 = *v18;
      swift_bridgeObjectRelease();
      uint64_t v39 = v19[5];
      uint64_t v40 = (char *)v17 + v39;
      unsigned __int8 v41 = (char *)v18 + v39;
      uint64_t v42 = sub_1001232B0();
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 40);
      v43(v40, v41, v42);
      sub_10002FE38();
      v43(&v40[*(int *)(v44 + 36)], &v41[*(int *)(v44 + 36)], v42);
      uint64_t v45 = v19[6];
      uint64_t v46 = (char *)v17 + v45;
      uint64_t v47 = (char *)v18 + v45;
      uint64_t v48 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
      *(_OWORD *)((char *)v17 + v19[7]) = *(_OWORD *)((char *)v18 + v19[7]);
      uint64_t v49 = v19[8];
      uint64_t v50 = (char *)v17 + v49;
      uint64_t v51 = (char *)v18 + v49;
      v50[8] = v51[8];
      *(void *)uint64_t v50 = *(void *)v51;
      *((unsigned char *)v17 + v19[9]) = *((unsigned char *)v18 + v19[9]);
      return a1;
    }
    sub_1000F59F4((uint64_t)v17, type metadata accessor for PreparedSparkline);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    sub_1000F4F1C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    memcpy(v17, v18, *(void *)(*(void *)(v37 - 8) + 64));
    return a1;
  }
  *uint64_t v17 = *v18;
  uint64_t v24 = v19[5];
  uint64_t v25 = (char *)v17 + v24;
  uint64_t v26 = (char *)v18 + v24;
  uint64_t v27 = sub_1001232B0();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32);
  v28(v25, v26, v27);
  sub_10002FE38();
  v28(&v25[*(int *)(v29 + 36)], &v26[*(int *)(v29 + 36)], v27);
  uint64_t v30 = v19[6];
  uint64_t v31 = (char *)v17 + v30;
  uint64_t v32 = (char *)v18 + v30;
  uint64_t v33 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  *(_OWORD *)((char *)v17 + v19[7]) = *(_OWORD *)((char *)v18 + v19[7]);
  uint64_t v34 = v19[8];
  uint64_t v35 = (char *)v17 + v34;
  uint64_t v36 = (char *)v18 + v34;
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v36[8];
  *((unsigned char *)v17 + v19[9]) = *((unsigned char *)v18 + v19[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t sub_1000F6290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F62A4);
}

uint64_t sub_1000F62A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100123D40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_1000F4F1C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_1000F6428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F643C);
}

uint64_t sub_1000F643C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100123D40();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_1000F4F1C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_1000F65CC()
{
  sub_100123D40();
  if (v0 <= 0x3F)
  {
    sub_1000F4F1C(319, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    if (v1 <= 0x3F)
    {
      sub_1000F4F1C(319, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1000F6708(void *a1)
{
  sub_1000F7C38(0, &qword_100163B60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v7 = &v9[-v6];
  sub_100009D98(a1, a1[3]);
  sub_1000F7B78();
  sub_100126650();
  v9[15] = 0;
  sub_100123D40();
  sub_1000F7C9C(&qword_100163B68, (void (*)(uint64_t))&type metadata accessor for Stock);
  sub_1001264C0();
  if (!v1)
  {
    type metadata accessor for WidgetStock();
    v9[14] = 1;
    sub_100123670();
    sub_1000F7C9C(&qword_100160738, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    sub_100126470();
    v9[13] = 2;
    type metadata accessor for PreparedSparkline(0);
    sub_1000F7C9C(&qword_100162978, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    sub_100126470();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000F6998@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  sub_1000F4F1C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  __chkstk_darwin(v3 - 8);
  uint64_t v26 = (uint64_t)&v23 - v4;
  sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_100123D40();
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v29 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F7C38(0, &qword_100163B48, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v30 = v10;
  uint64_t v27 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = type metadata accessor for WidgetStock();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D98(a1, a1[3]);
  sub_1000F7B78();
  uint64_t v31 = v12;
  uint64_t v16 = v32;
  sub_100126640();
  if (v16) {
    return sub_100009D48((uint64_t)a1);
  }
  uint64_t v32 = v13;
  uint64_t v17 = v28;
  char v35 = 0;
  sub_1000F7C9C(&qword_100163B58, (void (*)(uint64_t))&type metadata accessor for Stock);
  uint64_t v18 = v29;
  sub_1001263F0();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v24 = v15;
  v19(v15, v18, v8);
  sub_100123670();
  char v34 = 1;
  sub_1000F7C9C(&qword_100160710, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  uint64_t v20 = (uint64_t)v7;
  sub_1001263A0();
  uint64_t v21 = (uint64_t)v24;
  sub_1000F7BCC(v20, (uint64_t)&v24[*(int *)(v32 + 20)], &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  type metadata accessor for PreparedSparkline(0);
  char v33 = 2;
  sub_1000F7C9C(&qword_100162920, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_1001263A0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v30);
  sub_1000F7BCC(v26, v21 + *(int *)(v32 + 24), (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_100082530(v21, v25);
  sub_100009D48((uint64_t)a1);
  return sub_1000F59F4(v21, (uint64_t (*)(void))type metadata accessor for WidgetStock);
}

uint64_t sub_1000F6F38()
{
  uint64_t v1 = 0x65746F7571;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E696C6B72617073;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6B636F7473;
  }
}

uint64_t sub_1000F6F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000F7EF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000F6FB8(uint64_t a1)
{
  unint64_t v2 = sub_1000F7B78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000F6FF4(uint64_t a1)
{
  unint64_t v2 = sub_1000F7B78();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000F7034@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000F6998(a1, a2);
}

uint64_t sub_1000F704C(void *a1)
{
  return sub_1000F6708(a1);
}

BOOL sub_1000F7064(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = a2;
  uint64_t v3 = type metadata accessor for PreparedSparkline(0);
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  __chkstk_darwin(v3);
  uint64_t v66 = (uint64_t *)&v58[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000F798C(0, &qword_100161A68, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  uint64_t v68 = v5;
  __chkstk_darwin(v5);
  uint64_t v71 = &v58[-v6];
  sub_1000F4F1C(0, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  __chkstk_darwin(v7 - 8);
  uint64_t v67 = (uint64_t *)&v58[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v58[-v10];
  __chkstk_darwin(v12);
  uint64_t v14 = &v58[-v13];
  uint64_t v74 = sub_100123670();
  uint64_t v72 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v16 = &v58[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000F798C(0, &qword_100161A58, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  uint64_t v18 = v17;
  __chkstk_darwin(v17);
  uint64_t v20 = &v58[-v19];
  sub_1000F4F1C(0, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = &v58[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  uint64_t v26 = &v58[-v25];
  __chkstk_darwin(v27);
  uint64_t v29 = &v58[-v28];
  uint64_t v30 = v73;
  if ((sub_100123CE0() & 1) == 0) {
    return 0;
  }
  uint64_t v64 = v14;
  uint64_t v65 = v23;
  uint64_t v61 = v16;
  uint64_t v63 = v11;
  uint64_t v31 = type metadata accessor for WidgetStock();
  uint64_t v32 = a1;
  sub_1000F79F0(a1 + *(int *)(v31 + 20), (uint64_t)v29, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  uint64_t v62 = v31;
  sub_1000F79F0(v30 + *(int *)(v31 + 20), (uint64_t)v26, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  uint64_t v33 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_1000F79F0((uint64_t)v29, (uint64_t)v20, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  sub_1000F79F0((uint64_t)v26, v33, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  uint64_t v34 = v72;
  char v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v35((uint64_t)v20, 1, v74) != 1)
  {
    uint64_t v36 = (uint64_t)v65;
    sub_1000F79F0((uint64_t)v20, (uint64_t)v65, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    if (v35(v33, 1, v74) != 1)
    {
      uint64_t v60 = v32;
      uint64_t v41 = v34;
      uint64_t v42 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v34 + 32);
      uint64_t v43 = v36;
      uint64_t v44 = v61;
      uint64_t v45 = v74;
      v42(v61, v33, v74);
      sub_1000F7C9C(&qword_100161A70, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
      int v59 = sub_100125A90();
      uint64_t v46 = *(void (**)(unsigned char *, uint64_t))(v41 + 8);
      v46(v44, v45);
      sub_1000F7A5C((uint64_t)v26, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
      sub_1000F7A5C((uint64_t)v29, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
      v46((unsigned char *)v43, v45);
      sub_1000F7A5C((uint64_t)v20, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
      if ((v59 & 1) == 0) {
        return 0;
      }
      goto LABEL_9;
    }
    sub_1000F7A5C((uint64_t)v26, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    sub_1000F7A5C((uint64_t)v29, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v74);
LABEL_7:
    uint64_t v37 = &qword_100161A58;
    uint64_t v38 = &qword_10015DF20;
    uint64_t v39 = (void (*)(uint64_t))&type metadata accessor for WidgetQuote;
    uint64_t v40 = (uint64_t)v20;
LABEL_15:
    sub_1000F7AB8(v40, v37, v38, v39);
    return 0;
  }
  uint64_t v60 = v32;
  sub_1000F7A5C((uint64_t)v26, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  sub_1000F7A5C((uint64_t)v29, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
  if (v35(v33, 1, v74) != 1) {
    goto LABEL_7;
  }
  sub_1000F7A5C((uint64_t)v20, &qword_10015DF20, (void (*)(uint64_t))&type metadata accessor for WidgetQuote);
LABEL_9:
  uint64_t v47 = v62;
  uint64_t v48 = (uint64_t)v64;
  sub_1000F79F0(v60 + *(int *)(v62 + 24), (uint64_t)v64, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  uint64_t v49 = (uint64_t)v63;
  sub_1000F79F0(v73 + *(int *)(v47 + 24), (uint64_t)v63, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  uint64_t v50 = v71;
  uint64_t v51 = (uint64_t)&v71[*(int *)(v68 + 48)];
  sub_1000F79F0(v48, (uint64_t)v71, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_1000F79F0(v49, v51, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  uint64_t v52 = v70;
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  if (v53((uint64_t)v50, 1, v70) == 1)
  {
    sub_1000F7A5C(v49, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    sub_1000F7A5C(v48, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    if (v53(v51, 1, v52) == 1)
    {
      sub_1000F7A5C((uint64_t)v50, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
      return 1;
    }
    goto LABEL_14;
  }
  uint64_t v54 = v67;
  sub_1000F79F0((uint64_t)v50, (uint64_t)v67, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  if (v53(v51, 1, v52) == 1)
  {
    sub_1000F7A5C(v49, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    sub_1000F7A5C(v48, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
    sub_1000F59F4((uint64_t)v54, type metadata accessor for PreparedSparkline);
LABEL_14:
    uint64_t v37 = &qword_100161A68;
    uint64_t v38 = (unint64_t *)&qword_10015DF28;
    uint64_t v39 = (void (*)(uint64_t))type metadata accessor for PreparedSparkline;
    uint64_t v40 = (uint64_t)v50;
    goto LABEL_15;
  }
  char v56 = v66;
  sub_1000F7B14(v51, (uint64_t)v66);
  char v57 = sub_1000927D8(v54, v56);
  sub_1000F59F4((uint64_t)v56, type metadata accessor for PreparedSparkline);
  sub_1000F7A5C(v49, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_1000F7A5C(v48, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  sub_1000F59F4((uint64_t)v54, type metadata accessor for PreparedSparkline);
  sub_1000F7A5C((uint64_t)v50, (unint64_t *)&qword_10015DF28, (void (*)(uint64_t))type metadata accessor for PreparedSparkline);
  return (v57 & 1) != 0;
}

void sub_1000F798C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1000F4F1C(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1000F79F0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000F4F1C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1000F7A5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1000F4F1C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1000F7AB8(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000F798C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1000F7B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreparedSparkline(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000F7B78()
{
  unint64_t result = qword_100163B50;
  if (!qword_100163B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163B50);
  }
  return result;
}

uint64_t sub_1000F7BCC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1000F4F1C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1000F7C38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1000F7B78();
    unint64_t v7 = a3(a1, &type metadata for WidgetStock.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1000F7C9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WidgetStock.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F7DB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetStock.CodingKeys()
{
  return &type metadata for WidgetStock.CodingKeys;
}

unint64_t sub_1000F7DEC()
{
  unint64_t result = qword_100163B70;
  if (!qword_100163B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163B70);
  }
  return result;
}

unint64_t sub_1000F7E44()
{
  unint64_t result = qword_100163B78;
  if (!qword_100163B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163B78);
  }
  return result;
}

unint64_t sub_1000F7E9C()
{
  unint64_t result = qword_100163B80;
  if (!qword_100163B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163B80);
  }
  return result;
}

uint64_t sub_1000F7EF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B636F7473 && a2 == 0xE500000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F7571 && a2 == 0xE500000000000000 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E696C6B72617073 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1000F8044()
{
  uint64_t v1 = v0;
  *(void *)(v0 + 16) = 0;
  sub_100005550();
  BOOL v2 = (void *)sub_100125FF0();
  sub_100005590();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100127010;
  unsigned int v4 = (void *)sub_100125F80();
  uint64_t v5 = sub_100125B10();
  uint64_t v7 = v6;

  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_100005648();
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v7;
  sub_100125F60();
  sub_100124520();

  swift_bridgeObjectRelease();
  id v8 = [self defaultCenter];
  uint64_t v9 = (void *)sub_100125F80();
  v13[4] = sub_1000F81FC;
  v13[5] = 0;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1000F82F8;
  v13[3] = &unk_100154758;
  uint64_t v10 = _Block_copy(v13);
  id v11 = [v8 addObserverForName:v9 object:0 queue:0 usingBlock:v10];
  _Block_release(v10);

  *(void *)(v1 + 16) = v11;
  swift_unknownObjectRelease();
  return v1;
}

void sub_1000F81FC()
{
  sub_100005550();
  uint64_t v0 = (void *)sub_100125FF0();
  sub_100005590();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100127010;
  BOOL v2 = (void *)sub_100125F80();
  uint64_t v3 = sub_100125B10();
  uint64_t v5 = v4;

  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 64) = sub_100005648();
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v5;
  sub_100125F60();
  sub_100124520();

  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_100125FF0();
  sub_100125F60();
  sub_100124520();

  exit(0);
}

uint64_t sub_1000F82F8(uint64_t a1)
{
  uint64_t v2 = sub_100123020();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_100123010();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000F83EC()
{
  uint64_t v1 = v0;
  sub_100005550();
  uint64_t v2 = (void *)sub_100125FF0();
  sub_100005590();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100127010;
  uint64_t v4 = (void *)sub_100125F80();
  uint64_t v5 = sub_100125B10();
  uint64_t v7 = v6;

  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_100005648();
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v7;
  sub_100125F60();
  sub_100124520();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1000F84C8()
{
  sub_1000F83EC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetTerminationService()
{
  return self;
}

uint64_t sub_1000F8520(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F8530()
{
  return swift_release();
}

uint64_t type metadata accessor for Localized()
{
  return self;
}

ValueMetadata *type metadata accessor for TodayBackgroundView()
{
  return &type metadata for TodayBackgroundView;
}

uint64_t sub_1000F856C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1000F8588@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001254F0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100125510();
  uint64_t v7 = enum case for Color.RGBColorSpace.sRGB(_:);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v8(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  uint64_t v9 = sub_100125560();
  v8(v5, v7, v2);
  uint64_t v10 = sub_100125560();
  sub_1000F87E4();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100128E90;
  *(void *)(v11 + 32) = v9;
  *(void *)(v11 + 40) = v10;
  uint64_t v17 = v11;
  sub_100125CE0();
  swift_retain();
  swift_retain();
  sub_100125790();
  sub_100125850();
  sub_100125860();
  sub_100124A30();
  uint64_t v12 = v17;
  long long v16 = v18;
  uint64_t v13 = v19;
  uint64_t v14 = v20;
  swift_release();
  swift_release();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v12;
  double result = *(double *)&v16;
  *(_OWORD *)(a1 + 16) = v16;
  *(void *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v14;
  *(void *)(a1 + 48) = 0x3FE0000000000000;
  return result;
}

double sub_1000F8784@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1001257D0();
  uint64_t v4 = v3;
  sub_1000F8588((uint64_t)v9);
  double result = v10;
  long long v7 = v9[1];
  long long v6 = v9[2];
  long long v8 = v9[0];
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v6;
  *(double *)(a1 + 64) = result;
  return result;
}

void sub_1000F87E4()
{
  if (!qword_100160558)
  {
    unint64_t v0 = sub_100126500();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100160558);
    }
  }
}

uint64_t sub_1000F883C()
{
  return sub_1000F8A38(&qword_100163CC0, (void (*)(uint64_t))sub_1000F8884);
}

void sub_1000F8884()
{
  if (!qword_100163CC8)
  {
    sub_1000F8918();
    sub_1000F8A38(qword_100163CE8, (void (*)(uint64_t))sub_1000F8918);
    unint64_t v0 = sub_100125730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163CC8);
    }
  }
}

void sub_1000F8918()
{
  if (!qword_100163CD0)
  {
    sub_1000F8970();
    unint64_t v0 = sub_100125820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163CD0);
    }
  }
}

void sub_1000F8970()
{
  if (!qword_100163CD8)
  {
    sub_1000F89D8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100163CD8);
    }
  }
}

void sub_1000F89D8()
{
  if (!qword_100163CE0)
  {
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163CE0);
    }
  }
}

uint64_t sub_1000F8A38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F8A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 64);
}

uint64_t sub_1000F8A88()
{
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t result = sub_100124420();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1000F8B74(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100125D50();
    swift_getWitnessTable();
    uint64_t v7 = sub_100124420();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[14];
    *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[16];
    *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v10 = a3[18];
    *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1000F8CAC(uint64_t a1)
{
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t v2 = sub_100124420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_1000F8D60(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t v6 = sub_100124420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  swift_retain();
  return a1;
}

uint64_t sub_1000F8E4C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t v6 = sub_100124420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v7 = a3[18];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000F8F50(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t v6 = sub_100124420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t sub_1000F9030(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t v6 = sub_100124420();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  swift_release();
  return a1;
}

uint64_t sub_1000F911C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F9130);
}

uint64_t sub_1000F9130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t v6 = sub_100124420();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 72));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000F9224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F9238);
}

uint64_t sub_1000F9238(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t result = sub_100124420();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 72)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TickerGrid()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000F934C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F9390(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  int v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        long long v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)long long v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_100125830();
}

uint64_t sub_1000F9554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v19[0] = a6;
  v19[1] = a7;
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100124930();
  __n128 v17 = __chkstk_darwin(v16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v15, v7, a3, v17);
  sub_100124940();
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = a5;
  v19[7] = v19[0];
  v19[8] = a1;
  v19[9] = a2;
  swift_getWitnessTable();
  return sub_100124A00();
}

uint64_t sub_1000F96FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100124F70();
  __n128 v5 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return sub_100124F80();
}

uint64_t sub_1000F97F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100124F70();
  __n128 v6 = __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return sub_100124F80();
}

uint64_t sub_1000F98EC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v45 = a2;
  uint64_t v5 = sub_100125060();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  uint64_t v42 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FC380();
  uint64_t v40 = *(void *)(a1 + 16);
  uint64_t v41 = *(void *)(a1 + 32);
  type metadata accessor for GridCell();
  uint64_t v7 = sub_100125D50();
  uint64_t v8 = *(void *)(a1 + 24);
  sub_100031E94();
  uint64_t v39 = v8;
  sub_100124B20();
  sub_1001250B0();
  sub_100124B20();
  sub_100124B20();
  sub_100124F90();
  sub_1000FC4DC(255);
  swift_getTupleTypeMetadata2();
  sub_100125820();
  swift_getWitnessTable();
  uint64_t v9 = sub_100125720();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v55 = v7;
  char v56 = &type metadata for String;
  uint64_t v57 = v9;
  uint64_t v58 = WitnessTable;
  int v59 = &protocol witness table for String;
  sub_100125780();
  sub_1000FC96C(&qword_100163DB0, (void (*)(uint64_t))sub_1000FC380);
  uint64_t v11 = sub_1001249F0();
  uint64_t v38 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v37 = (uint64_t)&v36 - v12;
  uint64_t v13 = sub_1000FC96C(&qword_100163DB8, (void (*)(uint64_t))sub_1000FC380);
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v52 = v13;
  uint64_t v53 = v14;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v55 = v11;
  char v56 = (void *)v36;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v16 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v36 - v20;
  uint64_t v22 = *(void *)(v2 + *(int *)(a1 + 60));
  uint64_t v23 = *(void *)(v2 + *(int *)(a1 + 56));
  uint64_t v24 = sub_100124EF0();
  uint64_t v25 = sub_1000FA0C4(v24, 0, 0, *(void *)(v3 + *(int *)(a1 + 52)));
  uint64_t v26 = *(void *)(a1 + 40);
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v40;
  uint64_t v29 = v39;
  v27[2] = v40;
  v27[3] = v29;
  uint64_t v30 = v41;
  v27[4] = v41;
  v27[5] = v26;
  v27[6] = v22;
  v27[7] = v23;
  v27[8] = v25;
  uint64_t v47 = v28;
  uint64_t v48 = v29;
  uint64_t v49 = v30;
  uint64_t v50 = v26;
  uint64_t v51 = v3;
  uint64_t v31 = v37;
  sub_1000F9E98((uint64_t)sub_1000FC648, (uint64_t)v46, v37);
  swift_release();
  uint64_t v32 = v42;
  sub_100125050();
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v44);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v31, v11);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v33(v21, v18, OpaqueTypeMetadata2);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v16 + 8);
  v34(v18, OpaqueTypeMetadata2);
  v33(v45, v21, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v34)(v21, OpaqueTypeMetadata2);
}

uint64_t sub_1000F9E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1000FC414();
  uint64_t v7 = v6;
  type metadata accessor for GridCell();
  sub_100125D50();
  sub_100031E94();
  sub_100124B20();
  sub_1001250B0();
  sub_100124B20();
  sub_100124B20();
  sub_100124F90();
  sub_1000FC4DC(255);
  swift_getTupleTypeMetadata2();
  sub_100125820();
  swift_getWitnessTable();
  sub_100125720();
  swift_getWitnessTable();
  uint64_t v8 = sub_100125780();
  uint64_t v9 = sub_1000FC96C(&qword_100163D88, (void (*)(uint64_t))sub_1000FC414);
  swift_getWitnessTable();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1000F9554(a1, a2, v7, v8, v9, WitnessTable, a3);
}

void *sub_1000FA0C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a4 < 0)
  {
    uint64_t result = (void *)sub_100126280();
    __break(1u);
  }
  else
  {
    uint64_t v4 = a4;
    if (a4)
    {
      uint64_t result = (void *)sub_100125D20();
      result[2] = v4;
      uint64_t v9 = 4;
      do
      {
        unint64_t v10 = &result[v9];
        *unint64_t v10 = a1;
        v10[1] = a2;
        *((unsigned char *)v10 + 16) = a3 & 1;
        v9 += 3;
        --v4;
      }
      while (v4);
    }
    else
    {
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

uint64_t sub_1000FA190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v49 = a5;
  uint64_t v51 = a6;
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v10 = type metadata accessor for TickerGrid();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v50 = *(void *)(v48 + 64);
  __chkstk_darwin(v10);
  uint64_t v47 = (char *)&KeyPath - v11;
  uint64_t v12 = a2;
  type metadata accessor for GridCell();
  uint64_t v13 = sub_100125D50();
  sub_100031E94();
  sub_100124B20();
  sub_1001250B0();
  sub_100124B20();
  sub_100124B20();
  sub_100124F90();
  sub_1000FC4DC(255);
  swift_getTupleTypeMetadata2();
  sub_100125820();
  swift_getWitnessTable();
  uint64_t v14 = sub_100125720();
  uint64_t v43 = v14;
  uint64_t v46 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v57 = v13;
  uint64_t v58 = &type metadata for String;
  uint64_t v59 = v14;
  uint64_t v60 = WitnessTable;
  uint64_t v61 = &protocol witness table for String;
  uint64_t v15 = sub_100125780();
  uint64_t v41 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v42 = (char *)&KeyPath - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v44 = (char *)&KeyPath - v18;
  uint64_t v19 = a1;
  uint64_t v20 = *(void *)(a1 + *(int *)(v10 + 52));
  uint64_t v21 = *(void *)(a1 + *(int *)(v10 + 56));
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t v22 = sub_100124420();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = v21;
  uint64_t v25 = a4;
  sub_1000FA66C(v20, v24, v22, v23, a4);
  uint64_t v57 = v26;
  uint64_t v52 = v12;
  uint64_t v53 = a3;
  uint64_t v27 = v12;
  uint64_t v28 = v49;
  uint64_t v54 = v25;
  uint64_t v55 = v49;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v47;
  uint64_t v29 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v19, v10);
  unint64_t v31 = (*(unsigned __int8 *)(v29 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = (char *)swift_allocObject();
  *((void *)v32 + 2) = v27;
  *((void *)v32 + 3) = a3;
  *((void *)v32 + 4) = v25;
  *((void *)v32 + 5) = v28;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v32[v31], v30, v10);
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v33 = v42;
  sub_100125760();
  uint64_t v56 = v39;
  swift_getWitnessTable();
  uint64_t v34 = v41;
  char v35 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  uint64_t v36 = v44;
  v35(v44, v33, v15);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
  v37(v33, v15);
  v35(v51, v36, v15);
  return ((uint64_t (*)(char *, uint64_t))v37)(v36, v15);
}

void sub_1000FA66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_100126010();
  __chkstk_darwin(v10 - 8);
  uint64_t v50 = (char *)&v39 - v11;
  uint64_t v12 = type metadata accessor for SpacerOr();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v52 = AssociatedTypeWitness;
  uint64_t v47 = a5;
  uint64_t v15 = type metadata accessor for GridCell();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t v18 = *(void *)(a3 - 8);
  __chkstk_darwin(v19);
  uint64_t v42 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  __chkstk_darwin(v21);
  uint64_t v41 = a4;
  uint64_t v45 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v46 = v21;
  uint64_t v22 = v44;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  __n128 v24 = __chkstk_darwin(v49);
  uint64_t v51 = (char *)&v39 - v25;
  if (v22 < 1 || (uint64_t v53 = a2 - 1, a2 < 1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v40 = v23;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v42, v48, a3, v24);
  if ((unsigned __int128)(v22 * (__int128)a2) >> 64 == (v22 * a2) >> 63)
  {
    sub_100125ED0();
    sub_100125BE0();
    uint64_t v54 = sub_100125D10();
    sub_100125D50();
    sub_100125CF0(v22 * a2);
    uint64_t v26 = 0;
    uint64_t v27 = v49;
    uint64_t v43 = a2;
    while (v26 != v22)
    {
      uint64_t v48 = v26;
      if (v53)
      {
        uint64_t v28 = v26;
        uint64_t v29 = v26 * a2;
        if ((unsigned __int128)(v28 * (__int128)a2) >> 64 != v29 >> 63) {
          goto LABEL_23;
        }
        swift_getAssociatedConformanceWitness();
        uint64_t v30 = 0;
        uint64_t v31 = v52;
        while (1)
        {
          uint64_t v32 = v50;
          sub_100126020();
          sub_1000FCAE8(v32, v31, v14);
          uint64_t v33 = v29 + v30;
          if (__OFADD__(v29, v30)) {
            break;
          }
          BOOL v34 = __OFSUB__(0, v33);
          uint64_t v35 = -v33;
          if (v34) {
            goto LABEL_19;
          }
          uint64_t v31 = v52;
          sub_1000FC2C0((uint64_t)v14, v30 == 0, 0, (uint64_t)v17, (double)v35);
          sub_100125D40();
          if (v53 == ++v30)
          {
            a2 = v43;
            uint64_t v22 = v44;
            uint64_t v27 = v49;
            goto LABEL_14;
          }
        }
        __break(1u);
LABEL_19:
        __break(1u);
        break;
      }
      swift_getAssociatedConformanceWitness();
      uint64_t v29 = v26 * a2;
LABEL_14:
      uint64_t v36 = v50;
      sub_100126020();
      sub_1000FCAE8(v36, v52, v14);
      uint64_t v37 = v29 + v53;
      if (__OFADD__(v29, v53)) {
        goto LABEL_21;
      }
      BOOL v34 = __OFSUB__(0, v37);
      uint64_t v38 = -v37;
      if (v34) {
        goto LABEL_22;
      }
      uint64_t v26 = v48 + 1;
      sub_1000FC2C0((uint64_t)v14, a2 == 1, 1, (uint64_t)v17, (double)v38);
      sub_100125D40();
      if (v26 == v22)
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v51, v27);
        return;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1000FABD8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1001232E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v16, v2, a1, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v16, v4);
    uint64_t v18 = sub_1001232C0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v16, v8);
    sub_100126100();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return v20;
  }
  return v18;
}

uint64_t sub_1000FAE4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = a6;
  __n128 v24 = a7;
  sub_100031E94();
  sub_100124B20();
  sub_1001250B0();
  sub_100124B20();
  sub_100124B20();
  sub_100124F90();
  sub_1000FC4DC(255);
  swift_getTupleTypeMetadata2();
  sub_100125820();
  swift_getWitnessTable();
  uint64_t v11 = sub_100125720();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  __n128 v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v21 - v16;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = v23;
  uint64_t v29 = a1;
  uint64_t v30 = v22;
  sub_100124EF0();
  sub_100125710();
  swift_getWitnessTable();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v18(v17, v14, v11);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, v11);
  v18(v24, v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, v11);
}

uint64_t sub_1000FB0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v152 = a6;
  uint64_t v155 = a2;
  uint64_t v156 = a1;
  uint64_t v150 = a7;
  uint64_t v126 = sub_100125750();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v124 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100080494();
  uint64_t v146 = v11;
  uint64_t v128 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  int v123 = (char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FC5B0(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v129 = (uint64_t)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v127 = (uint64_t)&v122 - v16;
  sub_1000FC4DC(0);
  uint64_t v147 = v17;
  __chkstk_darwin(v17);
  long long v149 = (char *)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v148 = (char *)&v122 - v20;
  uint64_t v21 = sub_100124B20();
  uint64_t v138 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v137 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v136 = (char *)&v122 - v24;
  uint64_t v140 = *(void *)(a4 - 8);
  __chkstk_darwin(v25);
  uint64_t v131 = (char *)&v122 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v122 - v28;
  sub_100031E94();
  uint64_t v30 = sub_100124B20();
  uint64_t v132 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v122 - v31;
  sub_1001250B0();
  uint64_t v153 = v30;
  uint64_t v33 = sub_100124B20();
  uint64_t v135 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v134 = (char *)&v122 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v130 = (char *)&v122 - v36;
  __chkstk_darwin(v37);
  uint64_t v133 = (char *)&v122 - v38;
  uint64_t WitnessTable = *((void *)a3 - 1);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v122 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v122 - v43;
  uint64_t v158 = a3;
  uint64_t v157 = a5;
  uint64_t v45 = type metadata accessor for SpacerOr();
  uint64_t v46 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v48 = (char *)&v122 - v47;
  uint64_t v154 = v21;
  uint64_t v144 = sub_100124F90();
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v142 = (char *)&v122 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v51 = __chkstk_darwin(v50);
  uint64_t v141 = (char *)&v122 - v52;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v46 + 16))(v48, v156, v45, v51);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v139 = a4;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v54 = v158;
    uint64_t v176 = v158;
    uint64_t v177 = a4;
    uint64_t v55 = v152;
    uint64_t v178 = v157;
    uint64_t v179 = v152;
    uint64_t v56 = *(void (**)(char *))(v155 + *(int *)(type metadata accessor for TickerGrid() + 72));
    sub_100125D50();
    swift_getWitnessTable();
    sub_100124420();
    sub_1001243F0();
    uint64_t v57 = v131;
    v56(v41);
    (*(void (**)(char *, char *))(WitnessTable + 8))(v41, v54);
    uint64_t v58 = (uint64_t)v137;
    sub_1001254C0();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v57, a4);
    v175[6] = v55;
    v175[7] = &protocol witness table for _OpacityEffect;
    uint64_t v59 = v154;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v60 = v138;
    uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
    uint64_t v62 = v136;
    v61(v136, v58, v59);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
    v63(v58, v59);
    v61((char *)v58, (uint64_t)v62, v59);
    uint64_t v64 = sub_1000FC96C((unint64_t *)&qword_100160140, (void (*)(uint64_t))sub_100031E94);
    uint64_t v65 = v152;
    v175[4] = v152;
    v175[5] = v64;
    uint64_t v66 = swift_getWitnessTable();
    uint64_t v67 = sub_1000FC96C(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    v175[2] = v66;
    v175[3] = v67;
    swift_getWitnessTable();
    uint64_t v68 = v141;
    sub_1000F97F4(v58, v33, v59);
    v63(v58, v59);
    v63((uint64_t)v62, v59);
    uint64_t v69 = sub_1001232E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v69 - 8) + 8))(v48, v69);
    uint64_t v70 = v65;
    uint64_t v71 = v33;
    uint64_t v72 = v68;
  }
  else
  {
    uint64_t v73 = *(void (**)(char *, char *, char *))(WitnessTable + 32);
    uint64_t v122 = v44;
    uint64_t v74 = v48;
    uint64_t v75 = v158;
    v73(v44, v74, v158);
    uint64_t v176 = v75;
    uint64_t v177 = a4;
    uint64_t v76 = v152;
    uint64_t v178 = v157;
    uint64_t v179 = v152;
    uint64_t v77 = type metadata accessor for TickerGrid();
    (*(void (**)(char *))(v155 + *(int *)(v77 + 72)))(v44);
    uint64_t v78 = type metadata accessor for GridCell();
    sub_1000744D8(0, *(unsigned char *)(v156 + *(int *)(v78 + 36)), 0, *(unsigned char *)(v156 + *(int *)(v78 + 40)));
    (*(void (**)(char *, uint64_t))(v140 + 8))(v29, a4);
    uint64_t v79 = sub_1000FC96C((unint64_t *)&qword_100160140, (void (*)(uint64_t))sub_100031E94);
    uint64_t v163 = v76;
    uint64_t v164 = v79;
    uint64_t v80 = v153;
    uint64_t v81 = swift_getWitnessTable();
    uint64_t v82 = v130;
    sub_1001254A0();
    (*(void (**)(char *, uint64_t))(v132 + 8))(v32, v80);
    uint64_t v83 = sub_1000FC96C(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t v161 = v81;
    uint64_t v162 = v83;
    swift_getWitnessTable();
    uint64_t v84 = v135;
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v135 + 16);
    uint64_t v86 = v133;
    v85(v133, v82, v33);
    unsigned __int8 v87 = *(void (**)(char *, uint64_t))(v84 + 8);
    v87(v82, v33);
    uint64_t v88 = (uint64_t)v134;
    v85(v134, v86, v33);
    uint64_t v159 = v76;
    uint64_t v160 = &protocol witness table for _OpacityEffect;
    swift_getWitnessTable();
    uint64_t v89 = v141;
    sub_1000F96FC(v88, v33);
    v87((char *)v88, v33);
    v87(v86, v33);
    (*(void (**)(char *, char *))(WitnessTable + 8))(v122, v158);
    uint64_t v70 = v76;
    uint64_t v71 = v33;
    uint64_t v72 = v89;
  }
  char v90 = *(unsigned char *)(v156 + *(int *)(type metadata accessor for GridCell() + 40));
  uint64_t v91 = (uint64_t)v149;
  uint64_t v92 = (uint64_t)v148;
  uint64_t v93 = v146;
  uint64_t v94 = v155;
  uint64_t v145 = v71;
  if ((v90 & 1) != 0
    || (uint64_t v176 = v158,
        uint64_t v177 = v139,
        uint64_t v178 = v157,
        uint64_t v179 = v70,
        uint64_t v95 = type metadata accessor for TickerGrid(),
        *(unsigned char *)(v94 + *(int *)(v95 + 68)) != 1))
  {
    sub_1000FC510(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v92, 1, 1, v106);
  }
  else
  {
    uint64_t v96 = v95;
    uint64_t v97 = v72;
    if (*(unsigned char *)(v94 + *(int *)(v95 + 64)) == 1)
    {
      unsigned __int8 v98 = v124;
      sub_100125740();
      LODWORD(v158) = *(void *)(v94 + *(int *)(v96 + 52)) == 1;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v100 = v125;
      uint64_t v101 = (uint64_t)v123;
      uint64_t v102 = v126;
      (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v123, v98, v126);
      uint64_t v103 = v101 + *(int *)(v93 + 36);
      *(unsigned char *)uint64_t v103 = (_BYTE)v158;
      *(void *)(v103 + 8) = KeyPath;
      *(void *)(v103 + 16) = 0;
      *(void *)(v103 + 24) = 0;
      *(void *)(v103 + 32) = 0;
      *(unsigned char *)(v103 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v100 + 8))(v98, v102);
      uint64_t v104 = v127;
      sub_1000FCA80(v101, v127, (uint64_t (*)(void))sub_100080494);
      uint64_t v105 = 0;
    }
    else
    {
      uint64_t v105 = 1;
      uint64_t v104 = v127;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56))(v104, v105, 1, v93);
    uint64_t v107 = v129;
    sub_1000FC9B4(v104, v129, (uint64_t (*)(void))sub_1000FC5B0);
    *(void *)uint64_t v91 = 0;
    *(unsigned char *)(v91 + 8) = 0;
    sub_1000FC544();
    uint64_t v109 = v108;
    sub_1000FC9B4(v107, v91 + *(int *)(v108 + 48), (uint64_t (*)(void))sub_1000FC5B0);
    uint64_t v110 = v91 + *(int *)(v109 + 64);
    *(void *)uint64_t v110 = 0;
    *(unsigned char *)(v110 + 8) = 0;
    sub_1000FCA1C(v104, (uint64_t (*)(void))sub_1000FC5B0);
    sub_1000FCA1C(v107, (uint64_t (*)(void))sub_1000FC5B0);
    sub_1000FC510(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v91, 0, 1, v111);
    sub_1000FCA80(v91, v92, (uint64_t (*)(void))sub_1000FC4DC);
    uint64_t v72 = v97;
  }
  uint64_t v112 = v143;
  uint64_t v113 = v142;
  uint64_t v114 = v144;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v142, v72, v144);
  uint64_t v176 = v113;
  sub_1000FC9B4(v92, v91, (uint64_t (*)(void))sub_1000FC4DC);
  uint64_t v177 = v91;
  v175[0] = v114;
  v175[1] = v147;
  uint64_t v115 = sub_1000FC96C((unint64_t *)&qword_100160140, (void (*)(uint64_t))sub_100031E94);
  uint64_t v171 = v70;
  uint64_t v172 = v115;
  uint64_t v116 = swift_getWitnessTable();
  uint64_t v117 = sub_1000FC96C(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v169 = v116;
  uint64_t v170 = v117;
  uint64_t v118 = swift_getWitnessTable();
  uint64_t v167 = v70;
  uint64_t v168 = &protocol witness table for _OpacityEffect;
  uint64_t v119 = swift_getWitnessTable();
  uint64_t v165 = v118;
  uint64_t v166 = v119;
  uint64_t v173 = swift_getWitnessTable();
  unint64_t v174 = sub_1000FC8CC();
  sub_1000F9390((uint64_t)&v176, 2uLL, (uint64_t)v175);
  sub_1000FCA1C(v92, (uint64_t (*)(void))sub_1000FC4DC);
  uint64_t v120 = *(void (**)(char *, uint64_t))(v112 + 8);
  v120(v72, v114);
  sub_1000FCA1C(v91, (uint64_t (*)(void))sub_1000FC4DC);
  return ((uint64_t (*)(char *, uint64_t))v120)(v113, v114);
}

int *sub_1000FC2C0@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = type metadata accessor for SpacerOr();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a4, a1, v10);
  uint64_t result = (int *)type metadata accessor for GridCell();
  *(unsigned char *)(a4 + result[9]) = a2;
  *(unsigned char *)(a4 + result[10]) = a3;
  *(double *)(a4 + result[11]) = a5;
  return result;
}

void sub_1000FC380()
{
  if (!qword_100163D70)
  {
    sub_1000FC414();
    sub_1000FC96C(&qword_100163D88, (void (*)(uint64_t))sub_1000FC414);
    unint64_t v0 = sub_100124930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163D70);
    }
  }
}

void sub_1000FC414()
{
  if (!qword_100163D78)
  {
    sub_1000FC470();
    unint64_t v0 = type metadata accessor for EqualWidthColumnsLayout();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163D78);
    }
  }
}

unint64_t sub_1000FC470()
{
  unint64_t result = qword_100163D80;
  if (!qword_100163D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163D80);
  }
  return result;
}

uint64_t type metadata accessor for GridCell()
{
  return sub_10002E8B0();
}

void sub_1000FC4DC(uint64_t a1)
{
}

void sub_1000FC510(uint64_t a1)
{
}

void sub_1000FC544()
{
  if (!qword_100163DA0)
  {
    sub_1000FC5B0(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_100163DA0);
    }
  }
}

void sub_1000FC5B0(uint64_t a1)
{
}

void sub_1000FC5E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000FC648@<X0>(char *a1@<X8>)
{
  return sub_1000FA190(*(void *)(v1 + 48), *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1000FC658@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SpacerOr();
  uint64_t result = sub_1000FABD8(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000FC698()
{
  return 32;
}

__n128 sub_1000FC6A4(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1000FC6B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for TickerGrid() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_100125D50();
  swift_getWitnessTable();
  uint64_t v3 = sub_100124420();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1000FC7E8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for TickerGrid() - 8);
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_1000FAE4C(a1, v10, v5, v6, v7, v8, a2);
}

uint64_t sub_1000FC8A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000FB0C0(*(void *)(v1 + 48), *(void *)(v1 + 56), *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t type metadata accessor for SpacerOr()
{
  return sub_10002E8B0();
}

unint64_t sub_1000FC8CC()
{
  unint64_t result = qword_100163DC0;
  if (!qword_100163DC0)
  {
    sub_1000FC4DC(255);
    sub_1000FC96C(qword_100163DC8, sub_1000FC510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163DC0);
  }
  return result;
}

uint64_t sub_1000FC96C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000FC9B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000FCA1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000FCA80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000FCAE8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = type metadata accessor for SpacerOr();
  uint64_t v21 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = sub_100126010();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *(void *)(a2 - 8);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v11, a1, v8, v14);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, a2);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  if (v17 == 1)
  {
    v18(v11, v8);
    sub_1001232D0();
    v18(a1, v8);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(v22, v7, v5);
  }
  else
  {
    v18(a1, v8);
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v16, v11, a2);
    v20(v22, v16, a2);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1000FCD98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1000FABD8(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1000FCDC0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000FCDF8@<X0>(uint64_t a1@<X3>, char *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(void))__chkstk_darwin(v5);
  uint64_t v10 = (char *)&v14 - v9;
  v8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v10, v7, a1);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, a1);
  v11(a2, v10, a1);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a1);
}

uint64_t sub_1000FCF38@<X0>(char *a1@<X8>)
{
  return sub_1000FCDF8(*(void *)(v1 + 24), a1);
}

uint64_t sub_1000FCF48()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1001232E0();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1000FD010(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1001232E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  uint64_t v10 = (*(unsigned char *)(v9 + 80) | *(unsigned char *)(v6 + 80));
  if (v10 <= 7 && v7 + 1 <= 0x18 && ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) == 0)
  {
    unsigned int v14 = a2[v7];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_20;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_20;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_20;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_20:
          int v18 = (v17 | (v15 << (8 * v7))) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    if (v14 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v8);
      *((unsigned char *)a1 + v7) = 1;
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((unsigned char *)a1 + v7) = 0;
    }
  }
  else
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1000FD204(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = sub_1001232E0();
  unint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  if (v7 <= v5) {
    unint64_t v7 = v5;
  }
  unsigned int v8 = a1[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_12;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_12:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1) {
    uint64_t v13 = *(void *)(v6 - 8);
  }
  else {
    uint64_t v13 = v4;
  }
  if (v8 == 1) {
    uint64_t v14 = v6;
  }
  else {
    uint64_t v14 = v3;
  }
  unsigned int v15 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v13 + 8);

  return v15(a1, v14);
}

uint64_t sub_1000FD380(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1001232E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  unsigned int v10 = a2[v7];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_12;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_12:
        int v14 = (v13 | (v11 << (8 * v7))) + 2;
        unsigned int v10 = v13 + 2;
        if (v7 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  BOOL v15 = v10 == 1;
  if (v10 == 1)
  {
    uint64_t v16 = v8;
  }
  else
  {
    uint64_t v9 = v6;
    uint64_t v16 = v5;
  }
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v16);
  *(unsigned char *)(a1 + v7) = v15;
  return a1;
}

unsigned __int8 *sub_1000FD50C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = sub_1001232E0();
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    if (*(void *)(v10 + 64) > v7) {
      unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    unsigned int v11 = a1[v7];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_13;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_13;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_13;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_13:
          int v15 = (v14 | (v12 << (8 * v7))) + 2;
          unsigned int v11 = v14 + 2;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1) {
      uint64_t v16 = *(void *)(v8 - 8);
    }
    else {
      uint64_t v16 = v6;
    }
    if (v11 == 1) {
      uint64_t v17 = v8;
    }
    else {
      uint64_t v17 = v5;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v17);
    unsigned int v18 = a2[v7];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v20 = v7;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_30;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_30:
          int v22 = (v21 | (v19 << (8 * v7))) + 2;
          unsigned int v18 = v21 + 2;
          if (v7 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    BOOL v23 = v18 == 1;
    if (v18 == 1) {
      uint64_t v24 = v10;
    }
    else {
      uint64_t v24 = v6;
    }
    if (v18 == 1) {
      uint64_t v25 = v9;
    }
    else {
      uint64_t v25 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 16))(a1, a2, v25);
    a1[v7] = v23;
  }
  return a1;
}

uint64_t sub_1000FD758(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1001232E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  unsigned int v10 = a2[v7];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_12;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_12:
        int v14 = (v13 | (v11 << (8 * v7))) + 2;
        unsigned int v10 = v13 + 2;
        if (v7 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  BOOL v15 = v10 == 1;
  if (v10 == 1)
  {
    uint64_t v16 = v8;
  }
  else
  {
    uint64_t v9 = v6;
    uint64_t v16 = v5;
  }
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v9 + 32))(a1, a2, v16);
  *(unsigned char *)(a1 + v7) = v15;
  return a1;
}

unsigned __int8 *sub_1000FD8E4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = sub_1001232E0();
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    if (*(void *)(v10 + 64) > v7) {
      unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    unsigned int v11 = a1[v7];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_13;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_13;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_13;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_13:
          int v15 = (v14 | (v12 << (8 * v7))) + 2;
          unsigned int v11 = v14 + 2;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1) {
      uint64_t v16 = *(void *)(v8 - 8);
    }
    else {
      uint64_t v16 = v6;
    }
    if (v11 == 1) {
      uint64_t v17 = v8;
    }
    else {
      uint64_t v17 = v5;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v17);
    unsigned int v18 = a2[v7];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v20 = v7;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_30;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_30:
          int v22 = (v21 | (v19 << (8 * v7))) + 2;
          unsigned int v18 = v21 + 2;
          if (v7 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    BOOL v23 = v18 == 1;
    if (v18 == 1) {
      uint64_t v24 = v10;
    }
    else {
      uint64_t v24 = v6;
    }
    if (v18 == 1) {
      uint64_t v25 = v9;
    }
    else {
      uint64_t v25 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 32))(a1, a2, v25);
    a1[v7] = v23;
  }
  return a1;
}

uint64_t sub_1000FDB30(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v6 = *(void *)(*(void *)(sub_1001232E0() - 8) + 64);
  if (v6 <= v5) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = v6;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  unint64_t v8 = v7 + 1;
  char v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    unsigned int v12 = ((a2 + ~(-1 << v9) - 254) >> v9) + 1;
    if (HIWORD(v12))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v12 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v12 < 2)
    {
LABEL_23:
      unsigned int v14 = *((unsigned __int8 *)a1 + v7);
      if (v14 >= 2) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_23;
  }
LABEL_15:
  int v13 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v13 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v8 | v13) + 255;
}

void sub_1000FDCA4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v8 = *(void *)(*(void *)(sub_1001232E0() - 8) + 64);
  if (v8 <= v7) {
    unint64_t v8 = v7;
  }
  size_t v9 = v8 + 1;
  if (a3 < 0xFF)
  {
    int v10 = 0;
  }
  else if (v9 <= 3)
  {
    unsigned int v13 = ((a3 + ~(-1 << (8 * v9)) - 254) >> (8 * v9)) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v11 = a2 - 255;
    if (v9 < 4)
    {
      int v12 = (v11 >> (8 * v9)) + 1;
      if (v8 != -1)
      {
        int v14 = v11 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8 + 1);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v9] = v12;
        break;
      case 2:
        *(_WORD *)&a1[v9] = v12;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1000FDE8CLL);
      case 4:
        *(_DWORD *)&a1[v9] = v12;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v10)
    {
      case 1:
        a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v9] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v8] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1000FDEB4(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  unint64_t v4 = *(void *)(*(void *)(sub_1001232E0() - 8) + 64);
  if (v4 <= v3) {
    unint64_t v4 = v3;
  }
  uint64_t result = a1[v4];
  if (result >= 2)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | ((result - 2) << (8 * v4))) + 2;
        unsigned int v9 = v7 + 2;
        if (v4 >= 4) {
          uint64_t result = v9;
        }
        else {
          uint64_t result = v8;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1000FDF9C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (a2 > 1)
  {
    size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    size_t v8 = *(void *)(*(void *)(sub_1001232E0() - 8) + 64);
    if (v8 > v7) {
      size_t v7 = v8;
    }
    unsigned int v9 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v10 = v9 >> (8 * v7);
      int v11 = v9 & ~(-1 << (8 * v7));
      a1[v7] = v10 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
  }
  else
  {
    unint64_t v6 = *(void *)(*(void *)(sub_1001232E0() - 8) + 64);
    if (v6 <= *(void *)(v5 + 64)) {
      unint64_t v6 = *(void *)(v5 + 64);
    }
    a1[v6] = a2;
  }
}

uint64_t sub_1000FE0D0()
{
  uint64_t result = type metadata accessor for SpacerOr();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1000FE178(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1001232E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  int v10 = *(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80);
  if ((v10 & 0x1000F8) != 0 || ((v7 + 10) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v12 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v12 + (((v10 & 0xF8 | 7u) + 16) & ~(unint64_t)(v10 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    unint64_t v13 = v7 + 1;
    unsigned int v14 = a2[v7];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v16 = v7;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a2;
          goto LABEL_18;
        case 2:
          int v17 = *(unsigned __int16 *)a2;
          goto LABEL_18;
        case 3:
          int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_18;
        case 4:
          int v17 = *(_DWORD *)a2;
LABEL_18:
          int v18 = (v17 | (v15 << (8 * v7))) + 2;
          unsigned int v14 = v17 + 2;
          if (v7 < 4) {
            unsigned int v14 = v18;
          }
          break;
        default:
          break;
      }
    }
    BOOL v19 = v14 == 1;
    if (v14 == 1)
    {
      uint64_t v20 = v8;
    }
    else
    {
      uint64_t v9 = v6;
      uint64_t v20 = v5;
    }
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v20);
    *((unsigned char *)a1 + v7) = v19;
    int v21 = (char *)a1 + v13;
    *int v21 = a2[v13];
    v21[1] = a2[v13 + 1];
    *(void *)(((unint64_t)a1 + v13 + 9) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v13 + 9] & 0xFFFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_1000FE390(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = sub_1001232E0();
  unint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  if (v7 <= v5) {
    unint64_t v7 = v5;
  }
  unsigned int v8 = a1[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_12;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_12:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1) {
    uint64_t v13 = *(void *)(v6 - 8);
  }
  else {
    uint64_t v13 = v4;
  }
  if (v8 == 1) {
    uint64_t v14 = v6;
  }
  else {
    uint64_t v14 = v3;
  }
  unsigned int v15 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v13 + 8);

  return v15(a1, v14);
}

uint64_t sub_1000FE50C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1001232E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  unsigned int v10 = a2[v7];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_12;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_12:
        int v14 = (v13 | (v11 << (8 * v7))) + 2;
        unsigned int v10 = v13 + 2;
        if (v7 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  BOOL v15 = v10 == 1;
  if (v10 == 1)
  {
    uint64_t v16 = v8;
  }
  else
  {
    uint64_t v9 = v6;
    uint64_t v16 = v5;
  }
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v16);
  *(unsigned char *)(a1 + v7) = v15;
  int v17 = (unsigned __int8 *)(v7 + 1 + a1);
  int v18 = &a2[v7 + 1];
  *int v17 = *v18;
  v17[1] = v18[1];
  *(void *)((unint64_t)(v17 + 9) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)(v18 + 9) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned __int8 *sub_1000FE6CC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 != a2)
  {
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = sub_1001232E0();
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    if (*(void *)(v10 + 64) > v7) {
      unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    unsigned int v11 = a1[v7];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_13;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_13;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_13;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_13:
          int v15 = (v14 | (v12 << (8 * v7))) + 2;
          unsigned int v11 = v14 + 2;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1) {
      uint64_t v16 = *(void *)(v8 - 8);
    }
    else {
      uint64_t v16 = v6;
    }
    if (v11 == 1) {
      uint64_t v17 = v8;
    }
    else {
      uint64_t v17 = v5;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v17);
    unsigned int v18 = a2[v7];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v20 = v7;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_30;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_30:
          int v22 = (v21 | (v19 << (8 * v7))) + 2;
          unsigned int v18 = v21 + 2;
          if (v7 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    BOOL v23 = v18 == 1;
    if (v18 == 1) {
      uint64_t v24 = v10;
    }
    else {
      uint64_t v24 = v6;
    }
    if (v18 == 1) {
      uint64_t v25 = v9;
    }
    else {
      uint64_t v25 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 16))(a1, a2, v25);
    a1[v7] = v23;
  }
  unint64_t v26 = *(void *)(v6 + 64);
  unint64_t v27 = *(void *)(*(void *)(sub_1001232E0() - 8) + 64);
  if (v27 <= v26) {
    unint64_t v27 = v26;
  }
  unint64_t v28 = v27 + 1;
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  *(void *)((unint64_t)(v29 + 9) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)(v30 + 9) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1000FE98C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_1001232E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) > v7) {
    unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  unsigned int v10 = a2[v7];
  unsigned int v11 = v10 - 2;
  if (v10 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_12;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_12:
        int v14 = (v13 | (v11 << (8 * v7))) + 2;
        unsigned int v10 = v13 + 2;
        if (v7 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  BOOL v15 = v10 == 1;
  if (v10 == 1)
  {
    uint64_t v16 = v8;
  }
  else
  {
    uint64_t v9 = v6;
    uint64_t v16 = v5;
  }
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v9 + 32))(a1, a2, v16);
  *(unsigned char *)(a1 + v7) = v15;
  uint64_t v17 = (unsigned __int8 *)(v7 + 1 + a1);
  unsigned int v18 = &a2[v7 + 1];
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  *(void *)((unint64_t)(v17 + 9) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)(v18 + 9) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

unsigned __int8 *sub_1000FEB4C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (a1 != a2)
  {
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = sub_1001232E0();
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    if (*(void *)(v10 + 64) > v7) {
      unint64_t v7 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    unsigned int v11 = a1[v7];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v13 = v7;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_13;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_13;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_13;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_13:
          int v15 = (v14 | (v12 << (8 * v7))) + 2;
          unsigned int v11 = v14 + 2;
          if (v7 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1) {
      uint64_t v16 = *(void *)(v8 - 8);
    }
    else {
      uint64_t v16 = v6;
    }
    if (v11 == 1) {
      uint64_t v17 = v8;
    }
    else {
      uint64_t v17 = v5;
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v16 + 8))(a1, v17);
    unsigned int v18 = a2[v7];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v20 = v7;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_30;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_30:
          int v22 = (v21 | (v19 << (8 * v7))) + 2;
          unsigned int v18 = v21 + 2;
          if (v7 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    BOOL v23 = v18 == 1;
    if (v18 == 1) {
      uint64_t v24 = v10;
    }
    else {
      uint64_t v24 = v6;
    }
    if (v18 == 1) {
      uint64_t v25 = v9;
    }
    else {
      uint64_t v25 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 32))(a1, a2, v25);
    a1[v7] = v23;
  }
  unint64_t v26 = *(void *)(v6 + 64);
  unint64_t v27 = *(void *)(*(void *)(sub_1001232E0() - 8) + 64);
  if (v27 <= v26) {
    unint64_t v27 = v26;
  }
  unint64_t v28 = v27 + 1;
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  *(void *)((unint64_t)(v29 + 9) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)(v30 + 9) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1000FEE0C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v6 = *(void *)(*(void *)(sub_1001232E0() - 8) + 64);
  if (v6 <= v5) {
    unint64_t v6 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  unint64_t v7 = ((v6 + 10) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v8 = a2 - 253;
  uint64_t v9 = v7 & 0xFFFFFFF8;
  if ((v7 & 0xFFFFFFF8) != 0) {
    unsigned int v8 = 2;
  }
  if (v8 >= 0x10000) {
    int v10 = 4;
  }
  else {
    int v10 = 2;
  }
  if (v8 < 0x100) {
    int v11 = 1;
  }
  else {
    int v11 = v10;
  }
  if (v11 == 4)
  {
    int v12 = *(_DWORD *)((char *)a1 + v7);
    if (!v12) {
      goto LABEL_23;
    }
  }
  else if (v11 == 2)
  {
    int v12 = *(unsigned __int16 *)((char *)a1 + v7);
    if (!v12)
    {
LABEL_23:
      unsigned int v15 = *((unsigned __int8 *)a1 + v6);
      if (v15 >= 2) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  else
  {
    int v12 = *((unsigned __int8 *)a1 + v7);
    if (!v12) {
      goto LABEL_23;
    }
  }
  int v14 = v12 - 1;
  if (v9)
  {
    int v14 = 0;
    LODWORD(v9) = *a1;
  }
  return (v9 | v14) + 255;
}

void sub_1000FEF14(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v8 = *(void *)(*(void *)(sub_1001232E0() - 8) + 64);
  if (v8 <= v7) {
    unint64_t v8 = v7;
  }
  unint64_t v9 = ((v8 + 10) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a3 < 0xFF)
  {
    int v12 = 0;
    int v13 = a2 - 254;
    if (a2 > 0xFE) {
      goto LABEL_13;
    }
  }
  else
  {
    unsigned int v10 = a3 - 253;
    if (((v8 + 10) & 0xFFFFFFF8) != 0xFFFFFFF8) {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v12 = 1;
    }
    else {
      int v12 = v11;
    }
    int v13 = a2 - 254;
    if (a2 > 0xFE)
    {
LABEL_13:
      if (((v8 + 10) & 0xFFFFFFF8) == 0xFFFFFFF8) {
        int v14 = v13;
      }
      else {
        int v14 = 1;
      }
      if (((v8 + 10) & 0xFFFFFFF8) != 0xFFFFFFF8)
      {
        bzero(a1, ((v8 + 10) & 0xFFFFFFFFFFFFFFF8) + 8);
        *a1 = a2 - 255;
      }
      switch(v12)
      {
        case 1:
          *((unsigned char *)a1 + v9) = v14;
          return;
        case 2:
          *(_WORD *)((char *)a1 + v9) = v14;
          return;
        case 3:
          goto LABEL_32;
        case 4:
          *(_DWORD *)((char *)a1 + v9) = v14;
          return;
        default:
          return;
      }
    }
  }
  switch(v12)
  {
    case 1:
      *((unsigned char *)a1 + v9) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)((char *)a1 + v9) = 0;
      goto LABEL_26;
    case 3:
LABEL_32:
      __break(1u);
      JUMPOUT(0x1000FF080);
    case 4:
      *(_DWORD *)((char *)a1 + v9) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    default:
LABEL_26:
      if (a2) {
LABEL_27:
      }
        *((unsigned char *)a1 + v8) = -(char)a2;
      return;
  }
}

uint64_t sub_1000FF0A8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000FF310(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    char v11 = *(unsigned char *)(a2 + 32);
    sub_10004CE10(*(void *)a2, v8, v9, v10, v11);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    uint64_t v12 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v12;
    uint64_t v13 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v13;
    uint64_t v14 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v14;
    unsigned int v15 = (_OWORD *)(a1 + 88);
    uint64_t v16 = (_OWORD *)(a2 + 88);
    uint64_t v17 = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 == 1)
    {
      long long v18 = *(_OWORD *)(a2 + 104);
      *unsigned int v15 = *v16;
      *(_OWORD *)(a1 + 104) = v18;
    }
    else
    {
      *(void *)unsigned int v15 = *(void *)v16;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v17;
      swift_bridgeObjectRetain();
    }
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    uint64_t v20 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v20;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
    uint64_t v21 = *(void *)(a2 + 176);
    uint64_t v22 = *(int *)(a3 + 40);
    BOOL v23 = (void *)(a2 + v22);
    uint64_t v24 = (void *)(a1 + v22);
    *(void *)(a1 + 176) = v21;
    uint64_t v25 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v26 = *((void *)v25 - 1);
    unint64_t v27 = *(unsigned int (**)(void *, uint64_t, int *))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v23, 1, v25))
    {
      sub_1001023E0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v24, v23, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      *uint64_t v24 = *v23;
      uint64_t v29 = v25[5];
      uint64_t v42 = (char *)v24 + v29;
      uint64_t v30 = (char *)v23 + v29;
      uint64_t v31 = sub_1001232B0();
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
      swift_bridgeObjectRetain();
      v32(v42, v30, v31);
      sub_10002FE38();
      v32(&v42[*(int *)(v33 + 36)], &v30[*(int *)(v33 + 36)], v31);
      uint64_t v34 = v25[6];
      uint64_t v35 = (char *)v24 + v34;
      uint64_t v36 = (char *)v23 + v34;
      uint64_t v37 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      *(_OWORD *)((char *)v24 + v25[7]) = *(_OWORD *)((char *)v23 + v25[7]);
      uint64_t v38 = v25[8];
      uint64_t v39 = (char *)v24 + v38;
      uint64_t v40 = (char *)v23 + v38;
      *(void *)uint64_t v39 = *(void *)v40;
      v39[8] = v40[8];
      *((unsigned char *)v24 + v25[9]) = *((unsigned char *)v23 + v25[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v26 + 56))(v24, 0, 1, v25);
    }
  }
  return a1;
}

uint64_t sub_1000FF680(uint64_t a1, uint64_t a2)
{
  sub_100037598(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for PreparedSparkline(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    uint64_t v8 = sub_1001232B0();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v7, v8);
    sub_10002FE38();
    v9(v7 + *(int *)(v10 + 36), v8);
    uint64_t v11 = v4 + *(int *)(v5 + 24);
    uint64_t v12 = sub_1001234F0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  return result;
}

uint64_t sub_1000FF810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_10004CE10(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  uint64_t v14 = (_OWORD *)(a1 + 88);
  unsigned int v15 = (_OWORD *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16 == 1)
  {
    long long v17 = *(_OWORD *)(a2 + 104);
    *uint64_t v14 = *v15;
    *(_OWORD *)(a1 + 104) = v17;
  }
  else
  {
    *(void *)uint64_t v14 = *(void *)v15;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v16;
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v18 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v18;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v19 = *(void *)(a2 + 176);
  uint64_t v20 = *(int *)(a3 + 40);
  uint64_t v21 = (void *)(a2 + v20);
  uint64_t v22 = (void *)(a1 + v20);
  *(void *)(a1 + 176) = v19;
  BOOL v23 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v24 = *((void *)v23 - 1);
  uint64_t v25 = *(unsigned int (**)(void *, uint64_t, int *))(v24 + 48);
  swift_bridgeObjectRetain();
  if (v25(v21, 1, v23))
  {
    sub_1001023E0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v22, v21, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    *uint64_t v22 = *v21;
    uint64_t v27 = v23[5];
    uint64_t v40 = (char *)v22 + v27;
    uint64_t v28 = (char *)v21 + v27;
    uint64_t v29 = sub_1001232B0();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    v30(v40, v28, v29);
    sub_10002FE38();
    v30(&v40[*(int *)(v31 + 36)], &v28[*(int *)(v31 + 36)], v29);
    uint64_t v32 = v23[6];
    uint64_t v33 = (char *)v22 + v32;
    uint64_t v34 = (char *)v21 + v32;
    uint64_t v35 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    *(_OWORD *)((char *)v22 + v23[7]) = *(_OWORD *)((char *)v21 + v23[7]);
    uint64_t v36 = v23[8];
    uint64_t v37 = (char *)v22 + v36;
    uint64_t v38 = (char *)v21 + v36;
    *(void *)uint64_t v37 = *(void *)v38;
    v37[8] = v38[8];
    *((unsigned char *)v22 + v23[9]) = *((unsigned char *)v21 + v23[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v24 + 56))(v22, 0, 1, v23);
  }
  return a1;
}

uint64_t sub_1000FFB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_10004CE10(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_100037598(v11, v12, v13, v14, v15);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (_OWORD *)(a1 + 88);
  long long v17 = (_OWORD *)(a2 + 88);
  uint64_t v18 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112) == 1)
  {
    if (v18 == 1)
    {
      long long v19 = *(_OWORD *)(a2 + 104);
      *uint64_t v16 = *v17;
      *(_OWORD *)(a1 + 104) = v19;
    }
    else
    {
      uint64_t v21 = *(void *)v17;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)uint64_t v16 = v21;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
    }
  }
  else if (v18 == 1)
  {
    sub_10003088C(a1 + 88);
    long long v20 = *(_OWORD *)(a2 + 104);
    *uint64_t v16 = *v17;
    *(_OWORD *)(a1 + 104) = v20;
  }
  else
  {
    uint64_t v22 = *(void *)v17;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)uint64_t v16 = v22;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v23 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v23;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v24;
  uint64_t v25 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v25;
  uint64_t v26 = *(int *)(a3 + 40);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v30 = *((void *)v29 - 1);
  uint64_t v31 = *(uint64_t (**)(void *, uint64_t, int *))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      *uint64_t v27 = *v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v49 = v29[5];
      uint64_t v50 = (char *)v27 + v49;
      __n128 v51 = (char *)v28 + v49;
      uint64_t v52 = sub_1001232B0();
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 24);
      v53(v50, v51, v52);
      sub_10002FE38();
      v53(&v50[*(int *)(v54 + 36)], &v51[*(int *)(v54 + 36)], v52);
      uint64_t v55 = v29[6];
      uint64_t v56 = (char *)v27 + v55;
      uint64_t v57 = (char *)v28 + v55;
      uint64_t v58 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
      uint64_t v59 = v29[7];
      uint64_t v60 = (void *)((char *)v27 + v59);
      uint64_t v61 = (void *)((char *)v28 + v59);
      *uint64_t v60 = *v61;
      v60[1] = v61[1];
      uint64_t v62 = v29[8];
      uint64_t v63 = (char *)v27 + v62;
      uint64_t v64 = (char *)v28 + v62;
      char v65 = v64[8];
      *(void *)uint64_t v63 = *(void *)v64;
      v63[8] = v65;
      *((unsigned char *)v27 + v29[9]) = *((unsigned char *)v28 + v29[9]);
      return a1;
    }
    sub_100102B98((uint64_t)v27, type metadata accessor for PreparedSparkline);
    goto LABEL_13;
  }
  if (v33)
  {
LABEL_13:
    sub_1001023E0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v27, v28, *(void *)(*(void *)(v47 - 8) + 64));
    return a1;
  }
  *uint64_t v27 = *v28;
  uint64_t v34 = v29[5];
  uint64_t v66 = (char *)v27 + v34;
  uint64_t v35 = (char *)v28 + v34;
  uint64_t v36 = sub_1001232B0();
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  v37(v66, v35, v36);
  sub_10002FE38();
  v37(&v66[*(int *)(v38 + 36)], &v35[*(int *)(v38 + 36)], v36);
  uint64_t v39 = v29[6];
  uint64_t v40 = (char *)v27 + v39;
  uint64_t v41 = (char *)v28 + v39;
  uint64_t v42 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  *(_OWORD *)((char *)v27 + v29[7]) = *(_OWORD *)((char *)v28 + v29[7]);
  uint64_t v43 = v29[8];
  uint64_t v44 = (char *)v27 + v43;
  uint64_t v45 = (char *)v28 + v43;
  char v46 = v45[8];
  *(void *)uint64_t v44 = *(void *)v45;
  v44[8] = v46;
  *((unsigned char *)v27 + v29[9]) = *((unsigned char *)v28 + v29[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
  return a1;
}

uint64_t sub_100100058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  long long v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
  uint64_t v9 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    sub_1001023E0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v12 = v9[5];
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = (char *)v8 + v12;
    uint64_t v15 = sub_1001232B0();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    v16(v13, v14, v15);
    sub_10002FE38();
    v16(&v13[*(int *)(v17 + 36)], &v14[*(int *)(v17 + 36)], v15);
    uint64_t v18 = v9[6];
    long long v19 = (char *)v7 + v18;
    long long v20 = (char *)v8 + v18;
    uint64_t v21 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    *(_OWORD *)((char *)v7 + v9[7]) = *(_OWORD *)((char *)v8 + v9[7]);
    uint64_t v22 = v9[8];
    uint64_t v23 = (char *)v7 + v22;
    uint64_t v24 = (char *)v8 + v22;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    *((unsigned char *)v7 + v9[9]) = *((unsigned char *)v8 + v9[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1001002CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v6;
  sub_100037598(v7, v8, v9, v10, v11);
  uint64_t v13 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = (_OWORD *)(a1 + 88);
  uint64_t v17 = (_OWORD *)(a2 + 88);
  if (*(void *)(a1 + 112) == 1) {
    goto LABEL_4;
  }
  uint64_t v18 = *(void *)(a2 + 112);
  if (v18 == 1)
  {
    sub_10003088C(a1 + 88);
LABEL_4:
    long long v19 = *(_OWORD *)(a2 + 104);
    *uint64_t v16 = *v17;
    *(_OWORD *)(a1 + 104) = v19;
    goto LABEL_6;
  }
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v20 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v20;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v21 = *(int *)(a3 + 40);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v26 = *(uint64_t (**)(void *, uint64_t, int *))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *uint64_t v22 = *v23;
      swift_bridgeObjectRelease();
      uint64_t v44 = v24[5];
      uint64_t v45 = (char *)v22 + v44;
      char v46 = (char *)v23 + v44;
      uint64_t v47 = sub_1001232B0();
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 40);
      v48(v45, v46, v47);
      sub_10002FE38();
      v48(&v45[*(int *)(v49 + 36)], &v46[*(int *)(v49 + 36)], v47);
      uint64_t v50 = v24[6];
      __n128 v51 = (char *)v22 + v50;
      uint64_t v52 = (char *)v23 + v50;
      uint64_t v53 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 40))(v51, v52, v53);
      *(_OWORD *)((char *)v22 + v24[7]) = *(_OWORD *)((char *)v23 + v24[7]);
      uint64_t v54 = v24[8];
      uint64_t v55 = (char *)v22 + v54;
      uint64_t v56 = (char *)v23 + v54;
      v55[8] = v56[8];
      *(void *)uint64_t v55 = *(void *)v56;
      *((unsigned char *)v22 + v24[9]) = *((unsigned char *)v23 + v24[9]);
      return a1;
    }
    sub_100102B98((uint64_t)v22, type metadata accessor for PreparedSparkline);
    goto LABEL_11;
  }
  if (v28)
  {
LABEL_11:
    sub_1001023E0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v22, v23, *(void *)(*(void *)(v42 - 8) + 64));
    return a1;
  }
  *uint64_t v22 = *v23;
  uint64_t v29 = v24[5];
  uint64_t v30 = (char *)v22 + v29;
  uint64_t v31 = (char *)v23 + v29;
  uint64_t v32 = sub_1001232B0();
  int v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32);
  v33(v30, v31, v32);
  sub_10002FE38();
  v33(&v30[*(int *)(v34 + 36)], &v31[*(int *)(v34 + 36)], v32);
  uint64_t v35 = v24[6];
  uint64_t v36 = (char *)v22 + v35;
  uint64_t v37 = (char *)v23 + v35;
  uint64_t v38 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  *(_OWORD *)((char *)v22 + v24[7]) = *(_OWORD *)((char *)v23 + v24[7]);
  uint64_t v39 = v24[8];
  uint64_t v40 = (char *)v22 + v39;
  uint64_t v41 = (char *)v23 + v39;
  *(void *)uint64_t v40 = *(void *)v41;
  v40[8] = v41[8];
  *((unsigned char *)v22 + v24[9]) = *((unsigned char *)v23 + v24[9]);
  (*(void (**)(void *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_10010071C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100100730);
}

uint64_t sub_100100730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1001023E0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100100810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100100824);
}

uint64_t sub_100100824(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    sub_1001023E0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SmallDetailContentView()
{
  uint64_t result = qword_100163F28;
  if (!qword_100163F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100100948()
{
  sub_1001023E0(319, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100100A40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100100A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = (void *)a1;
  uint64_t v60 = a2;
  uint64_t v2 = type metadata accessor for SmallSparklineView(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v66 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v65 = (uint64_t)&v52 - v5;
  uint64_t v59 = sub_100125060();
  uint64_t v6 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100103100(0, &qword_100163FA0, &qword_100163FA8, (uint64_t (*)(uint64_t))sub_1001025E4, &qword_100163FB8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v52 - v10;
  sub_100102534();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100102534;
  uint64_t v62 = sub_100031E94;
  sub_100102834(0, &qword_100163F90, (void (*)(uint64_t))sub_100102534, (void (*)(uint64_t))sub_100031E94);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v61 = (uint64_t)&v52 - v22;
  *(void *)uint64_t v11 = sub_100124EF0();
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  sub_100102990(0, &qword_100163FC8, &qword_100163FA8, (uint64_t (*)(uint64_t))sub_1001025E4);
  sub_10010113C((uint64_t)v64, (uint64_t)&v11[*(int *)(v23 + 44)]);
  sub_100125040();
  sub_1001028A8();
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v59);
  sub_100102A0C((uint64_t)v11);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(unsigned char *)(v25 + 24) = 1;
  *(void *)(v25 + 32) = 0;
  *(unsigned char *)(v25 + 40) = 0;
  uint64_t v26 = (uint64_t)v20;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v16, v13);
  int v27 = (uint64_t *)&v20[*(int *)(v18 + 44)];
  *int v27 = KeyPath;
  v27[1] = (uint64_t)sub_1000321B4;
  v27[2] = v25;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v28 = (uint64_t)v20;
  uint64_t v29 = v61;
  uint64_t v30 = (void (*)(uint64_t))v62;
  uint64_t v31 = (void (*)(uint64_t))v63;
  sub_100102E34(v28, v61, &qword_100163F90, (void (*)(uint64_t))v63, (void (*)(uint64_t))v62);
  sub_1001257D0();
  sub_100124990();
  uint64_t v59 = v67;
  int v57 = v68;
  uint64_t v56 = v69;
  int v55 = v70;
  uint64_t v53 = v72;
  uint64_t v54 = v71;
  uint64_t v32 = type metadata accessor for SmallDetailContentView();
  int v33 = v64;
  uint64_t v34 = v65;
  sub_100102AAC((uint64_t)v64 + *(int *)(v32 + 40), v65, (uint64_t)&qword_10015DF28, (uint64_t)type metadata accessor for PreparedSparkline, (uint64_t)&type metadata accessor for Optional, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1001023E0);
  uint64_t v35 = v33[12];
  uint64_t v52 = v33[11];
  uint64_t v36 = v33[13];
  uint64_t v37 = v33[14];
  uint64_t v64 = (void *)swift_getKeyPath();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = 0;
  *(unsigned char *)(v38 + 24) = 0;
  *(void *)(v38 + 32) = 0;
  *(unsigned char *)(v38 + 40) = 1;
  uint64_t v58 = v26;
  sub_100102EA4(v29, v26, &qword_100163F90, v31, v30);
  uint64_t v39 = v34;
  uint64_t v40 = v66;
  sub_100102B30(v39, v66, type metadata accessor for SmallSparklineView);
  uint64_t v41 = v60;
  sub_100102EA4(v26, v60, &qword_100163F90, v31, v30);
  sub_100102444();
  uint64_t v43 = v42;
  uint64_t v44 = v41 + *(int *)(v42 + 48);
  *(void *)uint64_t v44 = 0;
  *(unsigned char *)(v44 + 8) = 1;
  *(void *)(v44 + 16) = v59;
  *(unsigned char *)(v44 + 24) = v57;
  *(void *)(v44 + 32) = v56;
  *(unsigned char *)(v44 + 40) = v55;
  uint64_t v45 = v53;
  *(void *)(v44 + 48) = v54;
  *(void *)(v44 + 56) = v45;
  sub_100102B30(v40, v41 + *(int *)(v42 + 64), type metadata accessor for SmallSparklineView);
  uint64_t v46 = v41 + *(int *)(v43 + 80);
  *(void *)uint64_t v46 = 0;
  *(unsigned char *)(v46 + 8) = 0;
  uint64_t v47 = (uint64_t *)(v41 + *(int *)(v43 + 96));
  uint64_t v48 = v52;
  *uint64_t v47 = v52;
  v47[1] = v35;
  v47[2] = v36;
  v47[3] = v37;
  v47[4] = (uint64_t)v64;
  v47[5] = (uint64_t)sub_1000321B4;
  v47[6] = v38;
  sub_1000321B8(v48, v35, v36, v37);
  swift_retain();
  swift_retain();
  sub_1000321B8(v48, v35, v36, v37);
  sub_100102B98(v65, type metadata accessor for SmallSparklineView);
  uint64_t v49 = (void (*)(uint64_t))v62;
  uint64_t v50 = (void (*)(uint64_t))v63;
  sub_100102BF8(v61, (uint64_t)&qword_100163F90, (uint64_t)v63, (uint64_t)v62, (uint64_t (*)(void))sub_100102834);
  sub_100032424(v48, v35, v36, v37);
  swift_release();
  swift_release();
  sub_100102B98(v66, type metadata accessor for SmallSparklineView);
  return sub_100102BF8(v58, (uint64_t)&qword_100163F90, (uint64_t)v50, (uint64_t)v49, (uint64_t (*)(void))sub_100102834);
}

uint64_t sub_10010113C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v49 = a2;
  uint64_t v47 = sub_100089D38;
  sub_100102794(0, &qword_100161138, &qword_100161140, (uint64_t (*)(uint64_t))sub_100089D38, &qword_100161170);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v37 - v4;
  sub_100102700();
  uint64_t v46 = v6 - 8;
  __chkstk_darwin(v6 - 8);
  uint64_t v45 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v48 = (uint64_t)&v37 - v9;
  sub_100102794(0, &qword_100161100, &qword_100161108, (uint64_t (*)(uint64_t))sub_100089AA4, &qword_100161128);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v37 - v11;
  sub_10010266C();
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t v38 = (uint64_t)&v37 - v18;
  *(void *)uint64_t v12 = sub_100124E40();
  *((void *)v12 + 1) = 0;
  unsigned char v12[16] = 1;
  sub_100102C58(0, &qword_100161190, &qword_100161108, (uint64_t (*)(uint64_t))sub_100089AA4);
  sub_1001016B8(a1, (uint64_t)&v12[*(int *)(v20 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(unsigned char *)(v22 + 24) = 1;
  *(void *)(v22 + 32) = 0;
  *(unsigned char *)(v22 + 40) = 0;
  sub_100102DB8((uint64_t)v12, (uint64_t)v16, &qword_100161100, &qword_100161108, (uint64_t (*)(uint64_t))sub_100089AA4, &qword_100161128);
  uint64_t v23 = (uint64_t *)&v16[*(int *)(v14 + 44)];
  *uint64_t v23 = KeyPath;
  v23[1] = (uint64_t)sub_1000321B4;
  v23[2] = v22;
  sub_100102CE4((uint64_t)v12, &qword_100161100, &qword_100161108, (uint64_t (*)(uint64_t))sub_100089AA4, &qword_100161128);
  sub_100102D40((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(void))sub_10010266C);
  sub_1001257D0();
  sub_100124990();
  uint64_t v44 = v50;
  int v43 = v51;
  uint64_t v42 = v52;
  int v41 = v53;
  uint64_t v39 = v55;
  uint64_t v40 = v54;
  *(void *)uint64_t v5 = sub_100124E40();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v24 = (uint64_t (*)(uint64_t))v47;
  sub_100102C58(0, &qword_100161198, &qword_100161140, (uint64_t (*)(uint64_t))v47);
  sub_100101CA8(v37, (uint64_t)&v5[*(int *)(v25 + 44)]);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  *(unsigned char *)(v27 + 24) = 0;
  *(void *)(v27 + 32) = 0;
  *(unsigned char *)(v27 + 40) = 1;
  uint64_t v28 = v45;
  sub_100102DB8((uint64_t)v5, v45, &qword_100161138, &qword_100161140, v24, &qword_100161170);
  uint64_t v29 = (uint64_t *)(v28 + *(int *)(v46 + 44));
  *uint64_t v29 = v26;
  v29[1] = (uint64_t)sub_1000321B4;
  v29[2] = v27;
  sub_100102CE4((uint64_t)v5, &qword_100161138, &qword_100161140, v24, &qword_100161170);
  uint64_t v30 = v48;
  sub_100102D40(v28, v48, (uint64_t (*)(void))sub_100102700);
  uint64_t v31 = v38;
  sub_100102B30(v38, (uint64_t)v16, (uint64_t (*)(void))sub_10010266C);
  sub_100102B30(v30, v28, (uint64_t (*)(void))sub_100102700);
  uint64_t v32 = v49;
  sub_100102B30((uint64_t)v16, v49, (uint64_t (*)(void))sub_10010266C);
  sub_1001025E4();
  uint64_t v34 = v32 + *(int *)(v33 + 48);
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  *(void *)(v34 + 16) = v44;
  *(unsigned char *)(v34 + 24) = v43;
  *(void *)(v34 + 32) = v42;
  *(unsigned char *)(v34 + 40) = v41;
  uint64_t v35 = v39;
  *(void *)(v34 + 48) = v40;
  *(void *)(v34 + 56) = v35;
  sub_100102B30(v28, v32 + *(int *)(v33 + 64), (uint64_t (*)(void))sub_100102700);
  sub_100102B98(v30, (uint64_t (*)(void))sub_100102700);
  sub_100102B98(v31, (uint64_t (*)(void))sub_10010266C);
  sub_100102B98(v28, (uint64_t (*)(void))sub_100102700);
  return sub_100102B98((uint64_t)v16, (uint64_t (*)(void))sub_10010266C);
}

uint64_t sub_1001016B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v51 = type metadata accessor for PriceChangeView();
  __chkstk_darwin(v51);
  uint64_t v49 = (uint64_t *)((char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v53 = type metadata accessor for PriceChangeView;
  sub_100102834(0, &qword_100161120, (void (*)(uint64_t))type metadata accessor for PriceChangeView, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  __chkstk_darwin(v4 - 8);
  uint64_t v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v52 = (uint64_t)&v45 - v7;
  uint64_t v8 = (int *)type metadata accessor for SymbolTrendView();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for SymbolTrendView;
  sub_100102834(0, &qword_100161118, (void (*)(uint64_t))type metadata accessor for SymbolTrendView, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v55 = (uint64_t)&v45 - v15;
  char v16 = *(unsigned char *)(a1 + 120);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v10 = v16;
  *((void *)v10 + 1) = v18;
  *((void *)v10 + 2) = v17;
  *((void *)v10 + 3) = v20;
  *((void *)v10 + 4) = v19;
  uint64_t v21 = (uint64_t *)&v10[v8[6]];
  *uint64_t v21 = swift_getKeyPath();
  uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content;
  sub_1001023E0(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)&v10[v8[7]];
  *uint64_t v22 = swift_getKeyPath();
  sub_1001023E0(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = &v10[v8[8]];
  *(void *)uint64_t v23 = KeyPath;
  v23[8] = 0;
  sub_100103030(&qword_1001611D0, (void (*)(uint64_t))type metadata accessor for SymbolTrendView);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v48 = v13;
  sub_1001254A0();
  sub_100102B98((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  sub_100102E34((uint64_t)v13, v55, &qword_100161118, (void (*)(uint64_t))v56, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t KeyPath = *(void *)(a1 + 128);
  uint64_t v24 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v26 = *(void *)(a1 + 144);
  uint64_t v25 = *(void *)(a1 + 152);
  uint64_t v27 = *(void *)(a1 + 160);
  uint64_t v28 = *(unsigned __int8 *)(a1 + 168);
  uint64_t v29 = *(void *)(a1 + 176);
  char v30 = *(unsigned char *)(a1 + 184);
  LOBYTE(a1) = *(unsigned char *)(a1 + 120);
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = (uint64_t)v49;
  *uint64_t v49 = v31;
  sub_1001023E0(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, v47);
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = v51;
  uint64_t v34 = v32 + *(int *)(v51 + 20);
  *(void *)uint64_t v34 = KeyPath;
  *(void *)(v34 + 8) = v24;
  *(void *)(v34 + 16) = v26;
  *(void *)(v34 + 24) = v25;
  *(void *)(v34 + 32) = v27;
  *(void *)(v34 + 40) = v28;
  *(void *)(v34 + 48) = v29;
  *(unsigned char *)(v34 + 56) = v30;
  *(unsigned char *)(v32 + *(int *)(v33 + 24)) = a1;
  sub_100103030(&qword_1001611C0, (void (*)(uint64_t))type metadata accessor for PriceChangeView);
  swift_bridgeObjectRetain();
  uint64_t v35 = (uint64_t)v50;
  sub_1001254A0();
  sub_100102B98(v32, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  uint64_t v37 = v52;
  uint64_t v36 = (void (*)(uint64_t))v53;
  sub_100102E34(v35, v52, &qword_100161120, (void (*)(uint64_t))v53, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v39 = v55;
  uint64_t v38 = (void (*)(uint64_t))v56;
  uint64_t v40 = (uint64_t)v48;
  sub_100102EA4(v55, (uint64_t)v48, &qword_100161118, (void (*)(uint64_t))v56, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  sub_100102EA4(v37, v35, &qword_100161120, v36, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v41 = v54;
  sub_100102EA4(v40, v54, &qword_100161118, v38, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  sub_100089AA4();
  uint64_t v43 = v41 + *(int *)(v42 + 48);
  *(void *)uint64_t v43 = 0x4020000000000000;
  *(unsigned char *)(v43 + 8) = 0;
  sub_100102EA4(v35, v41 + *(int *)(v42 + 64), &qword_100161120, v36, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  sub_100102BF8(v37, (uint64_t)&qword_100161120, (uint64_t)v36, (uint64_t)&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(void))sub_100102834);
  sub_100102BF8(v39, (uint64_t)&qword_100161118, (uint64_t)v38, (uint64_t)&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(void))sub_100102834);
  sub_100102BF8(v35, (uint64_t)&qword_100161120, (uint64_t)v36, (uint64_t)&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(void))sub_100102834);
  return sub_100102BF8(v40, (uint64_t)&qword_100161118, (uint64_t)v38, (uint64_t)&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(void))sub_100102834);
}

uint64_t sub_100101CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for PriceChangeView();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100089EB4(0);
  uint64_t v48 = v7;
  __chkstk_darwin(v7);
  uint64_t v45 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100089EB4;
  uint64_t v49 = (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier;
  sub_100102834(0, &qword_100161158, sub_100089EB4, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  __chkstk_darwin(v9 - 8);
  uint64_t v46 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v52 = (uint64_t)&v42 - v12;
  uint64_t v47 = &type metadata accessor for AccessibilityAttachmentModifier;
  sub_10010292C(0, (unint64_t *)&qword_100161150, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  __chkstk_darwin(v13 - 8);
  uint64_t v44 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v16 = *(void *)(a1 + 72);
  uint64_t v17 = *(void *)(a1 + 80);
  uint64_t v53 = (uint64_t)&v42 - v18;
  uint64_t v54 = v16;
  uint64_t v55 = v17;
  sub_10008A398();
  sub_1001254A0();
  uint64_t v19 = *(void *)(a1 + 128);
  uint64_t v43 = *(unsigned __int8 *)(a1 + 136);
  uint64_t v21 = *(void *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 152);
  uint64_t v22 = *(void *)(a1 + 160);
  uint64_t v23 = *(unsigned __int8 *)(a1 + 168);
  uint64_t v24 = *(void *)(a1 + 176);
  char v25 = *(unsigned char *)(a1 + 184);
  LOBYTE(a1) = *(unsigned char *)(a1 + 120);
  *uint64_t v6 = swift_getKeyPath();
  sub_1001023E0(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v27 = v43;
  *(void *)uint64_t v26 = v19;
  *((void *)v26 + 1) = v27;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v20;
  *((void *)v26 + 4) = v22;
  *((void *)v26 + 5) = v23;
  *((void *)v26 + 6) = v24;
  v26[56] = v25;
  *((unsigned char *)v6 + *(int *)(v4 + 32)) = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = v45;
  sub_100102B30((uint64_t)v6, v45, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  char v30 = (uint64_t *)(v29 + *(int *)(v48 + 36));
  *char v30 = KeyPath;
  v30[1] = (uint64_t)sub_1001021C0;
  v30[2] = 0;
  swift_bridgeObjectRetain();
  sub_100102B98((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  sub_10008A4FC();
  uint64_t v31 = (uint64_t)v46;
  sub_1001254A0();
  sub_100102B98(v29, (uint64_t (*)(void))sub_100089EB4);
  uint64_t v32 = v52;
  uint64_t v34 = v49;
  uint64_t v33 = v50;
  sub_100102E34(v31, v52, &qword_100161158, v50, v49);
  uint64_t v35 = v44;
  uint64_t v36 = v47;
  sub_100102AAC(v53, v44, (uint64_t)&qword_100161150, (uint64_t)v47, (uint64_t)&type metadata for CompanyNameView, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_10010292C);
  uint64_t v37 = v33;
  sub_100102EA4(v32, v31, &qword_100161158, v33, v34);
  uint64_t v38 = v51;
  sub_100102AAC(v35, v51, (uint64_t)&qword_100161150, (uint64_t)v36, (uint64_t)&type metadata for CompanyNameView, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_10010292C);
  sub_100089D38();
  uint64_t v40 = v38 + *(int *)(v39 + 48);
  *(void *)uint64_t v40 = 0x4020000000000000;
  *(unsigned char *)(v40 + 8) = 0;
  sub_100102EA4(v31, v38 + *(int *)(v39 + 64), &qword_100161158, v37, v34);
  sub_100102BF8(v52, (uint64_t)&qword_100161158, (uint64_t)v37, (uint64_t)v34, (uint64_t (*)(void))sub_100102834);
  sub_100102BF8(v53, (uint64_t)&qword_100161150, (uint64_t)v36, (uint64_t)&type metadata for CompanyNameView, (uint64_t (*)(void))sub_10010292C);
  sub_100102BF8(v31, (uint64_t)&qword_100161158, (uint64_t)v37, (uint64_t)v34, (uint64_t (*)(void))sub_100102834);
  return sub_100102BF8(v35, (uint64_t)&qword_100161150, (uint64_t)v36, (uint64_t)&type metadata for CompanyNameView, (uint64_t (*)(void))sub_10010292C);
}

uint64_t sub_1001021C0(uint64_t a1)
{
  uint64_t v2 = sub_1001238A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, a1, v2, v7);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  uint64_t v11 = enum case for PriceChangeDisplay.currency(_:);
  if (v10 == enum case for PriceChangeDisplay.currency(_:))
  {
    uint64_t v11 = enum case for PriceChangeDisplay.percentage(_:);
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 104))(v9, v11, v2);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v9, v2);
  }
  if (v10 == enum case for PriceChangeDisplay.percentage(_:)) {
    goto LABEL_5;
  }
  uint64_t v11 = enum case for PriceChangeDisplay.percentage(_:);
  if (v10 == enum case for PriceChangeDisplay.marketCapitalization(_:)) {
    goto LABEL_5;
  }
  uint64_t result = sub_100126520();
  __break(1u);
  return result;
}

uint64_t sub_100102374@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100124F10();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  sub_100102990(0, &qword_100163F78, &qword_100163F80, (uint64_t (*)(uint64_t))sub_100102444);
  return sub_100100A5C(v1, a1 + *(int *)(v3 + 44));
}

void sub_1001023E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_100102444()
{
  if (!qword_100163F88)
  {
    sub_100102834(255, &qword_100163F90, (void (*)(uint64_t))sub_100102534, (void (*)(uint64_t))sub_100031E94);
    sub_1000C5B28();
    type metadata accessor for SmallSparklineView(255);
    sub_10010292C(255, &qword_10015EC68, (void (*)(uint64_t))sub_100031E94);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_100163F88);
    }
  }
}

void sub_100102534()
{
  if (!qword_100163F98)
  {
    sub_100103100(255, &qword_100163FA0, &qword_100163FA8, (uint64_t (*)(uint64_t))sub_1001025E4, &qword_100163FB8);
    sub_1001028A8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100163F98);
    }
  }
}

void sub_1001025E4()
{
  if (!qword_100163FB0)
  {
    sub_10010266C();
    sub_1000C5B28();
    sub_100102700();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_100163FB0);
    }
  }
}

void sub_10010266C()
{
  if (!qword_1001610F8)
  {
    sub_100102794(255, &qword_100161100, &qword_100161108, (uint64_t (*)(uint64_t))sub_100089AA4, &qword_100161128);
    sub_100031E94();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001610F8);
    }
  }
}

void sub_100102700()
{
  if (!qword_100161130)
  {
    sub_100102794(255, &qword_100161138, &qword_100161140, (uint64_t (*)(uint64_t))sub_100089D38, &qword_100161170);
    sub_100031E94();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100161130);
    }
  }
}

void sub_100102794(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_1001023E0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1001031A0(a5, a3, a4);
    unint64_t v9 = sub_100125680();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_100102834(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    unint64_t v6 = sub_100124B20();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1001028A8()
{
  unint64_t result = qword_100163FC0;
  if (!qword_100163FC0)
  {
    sub_100103100(255, &qword_100163FA0, &qword_100163FA8, (uint64_t (*)(uint64_t))sub_1001025E4, &qword_100163FB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163FC0);
  }
  return result;
}

void sub_10010292C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100102990(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1001023E0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v5 = sub_1001249F0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_100102A0C(uint64_t a1)
{
  sub_100103100(0, &qword_100163FA0, &qword_100163FA8, (uint64_t (*)(uint64_t))sub_1001025E4, &qword_100163FB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100102A9C()
{
  return swift_deallocObject();
}

uint64_t sub_100102AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_100102B20()
{
  return swift_deallocObject();
}

uint64_t sub_100102B30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100102B98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100102BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_100102C58(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1001023E0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v5 = sub_1001249F0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_100102CD4()
{
  return swift_deallocObject();
}

uint64_t sub_100102CE4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  sub_100102794(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_100102D40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100102DA8()
{
  return swift_deallocObject();
}

uint64_t sub_100102DB8(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t), unint64_t *a6)
{
  sub_100102794(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_100102E34(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  sub_100102834(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_100102EA4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  sub_100102834(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_100102F1C()
{
  return sub_100124DA0();
}

uint64_t sub_100102F40()
{
  return sub_100124DA0();
}

uint64_t sub_100102F64(uint64_t a1)
{
  uint64_t v2 = sub_1001258C0();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_100124DB0();
}

uint64_t sub_100103030(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10010307C()
{
  unint64_t result = qword_100163FD0;
  if (!qword_100163FD0)
  {
    sub_100103100(255, &qword_100163FD8, &qword_100163F80, (uint64_t (*)(uint64_t))sub_100102444, &qword_100163FE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163FD0);
  }
  return result;
}

void sub_100103100(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_1001023E0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1001031A0(a5, a3, a4);
    unint64_t v9 = sub_100125720();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1001031A0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001023E0(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for DividerExtendedIntoMargin(uint64_t a1)
{
  return sub_100037598(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for DividerExtendedIntoMargin(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  sub_10004CE10(v3, v4, v5, v6, v7);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithCopy for DividerExtendedIntoMargin(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  sub_10004CE10(v3, v4, v5, v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  sub_100037598(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for DividerExtendedIntoMargin(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  char v8 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v3;
  sub_100037598(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DividerExtendedIntoMargin(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[41]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DividerExtendedIntoMargin(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DividerExtendedIntoMargin()
{
  return &type metadata for DividerExtendedIntoMargin;
}

uint64_t sub_100103410()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10010342C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v5 = *v2;
  long long v6 = *(_OWORD *)(v2 + 24);
  v19[0] = *(_OWORD *)(v2 + 8);
  v19[1] = v6;
  unsigned __int8 v20 = v2[40];
  char v7 = sub_100125120();
  if (v5 == 1)
  {
    sub_100051B2C((uint64_t)v19, (uint64_t)v21);
    sub_100051C00((uint64_t)v21, (void (*)(void, void, void, void, void))sub_10004CE10);
    sub_10005F554();
    sub_100051C00((uint64_t)v19, (void (*)(void, void, void, void, void))sub_100037598);
  }
  sub_100124890();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_10010356C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a2, a1, v16);
  sub_10010361C();
  uint64_t v18 = a2 + *(int *)(v17 + 36);
  *(unsigned char *)uint64_t v18 = v7;
  *(void *)(v18 + 8) = v9;
  *(void *)(v18 + 16) = v11;
  *(void *)(v18 + 24) = v13;
  *(void *)(v18 + 32) = v15;
  *(unsigned char *)(v18 + 40) = 0;
}

void sub_10010356C()
{
  if (!qword_100163FE8)
  {
    sub_1001035C8();
    unint64_t v0 = sub_100124FB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163FE8);
    }
  }
}

unint64_t sub_1001035C8()
{
  unint64_t result = qword_100163FF0;
  if (!qword_100163FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100163FF0);
  }
  return result;
}

void sub_10010361C()
{
  if (!qword_100163FF8)
  {
    sub_10010356C();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100163FF8);
    }
  }
}

unint64_t sub_100103680()
{
  unint64_t result = qword_100164000;
  if (!qword_100164000)
  {
    sub_10010361C();
    sub_1001036F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164000);
  }
  return result;
}

unint64_t sub_1001036F8()
{
  unint64_t result = qword_100164008;
  if (!qword_100164008)
  {
    sub_10010356C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164008);
  }
  return result;
}

unint64_t destroy for HeadlineRubric(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t _s12StocksWidget14HeadlineRubricOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  return a1;
}

void *assignWithCopy for HeadlineRubric(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_retain();
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for HeadlineRubric(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineRubric(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HeadlineRubric(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100103A20(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_100103A38(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *unint64_t result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineRubric()
{
  return &type metadata for HeadlineRubric;
}

unint64_t destroy for HeadlineRubricView(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void *_s12StocksWidget18HeadlineRubricViewVwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >= 2)
  {
    *a1 = *a2;
    a1[1] = v3;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
  }
  return a1;
}

void *assignWithCopy for HeadlineRubricView(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100105290((uint64_t)a1, (uint64_t (*)(void))sub_1000C3D78);
      uint64_t v6 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v6;
    }
  }
  else if (v4 >= 2)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v5 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v5;
  }
  return a1;
}

void *assignWithTake for HeadlineRubricView(void *a1, void *a2)
{
  if (a1[1] >= 2uLL)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_release();
      return a1;
    }
    sub_100105290((uint64_t)a1, (uint64_t (*)(void))sub_1000C3D78);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineRubricView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 2;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineRubricView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineRubricView()
{
  return &type metadata for HeadlineRubricView;
}

uint64_t sub_100103D58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100103D74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v87 = a3;
  uint64_t v85 = a1;
  sub_100104CA4(0, &qword_100164048, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v7 = v6;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v77 - v8;
  sub_100104D28(0, &qword_100164050, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v88 = v10;
  __chkstk_darwin(v10);
  uint64_t v89 = (uint64_t)&v77 - v11;
  sub_100104D28(0, &qword_100164020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  uint64_t v13 = v12;
  __chkstk_darwin(v12);
  char v90 = (char *)&v77 - v14;
  sub_100104AA0(0, &qword_100164030, (uint64_t (*)(uint64_t))sub_100104B04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
  uint64_t v86 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v77 - v16);
  sub_100104B04(0);
  __chkstk_darwin(v18 - 8);
  unsigned __int8 v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100104A10();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v77 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v77 - v28;
  __chkstk_darwin(v30);
  if (a2)
  {
    uint64_t v80 = v31;
    uint64_t v81 = v13;
    uint64_t v83 = v9;
    uint64_t v84 = a4;
    uint64_t v82 = v7;
    if (a2 == 1)
    {
      sub_100124EC0();
      uint64_t v33 = sub_100125340();
      uint64_t v35 = v34;
      char v37 = v36 & 1;
      LODWORD(aBlock) = sub_100124FD0();
      uint64_t v85 = sub_1001252C0();
      uint64_t v39 = v38;
      uint64_t v87 = v40;
      char v42 = v41 & 1;
      sub_10001BAA4(v33, v35, v37);
      swift_bridgeObjectRelease();
      uint64_t v43 = enum case for Text.Case.uppercase(_:);
      uint64_t v44 = sub_1001252D0();
      uint64_t v45 = *(void *)(v44 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 104))(v20, v43, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v20, 0, 1, v44);
      uint64_t KeyPath = swift_getKeyPath();
      sub_100105130((uint64_t)v20, (uint64_t)v17 + *(int *)(v86 + 28), (uint64_t (*)(void))sub_100104B04);
      *uint64_t v17 = KeyPath;
      sub_100104FDC((uint64_t)v17, (uint64_t)&v23[*(int *)(v80 + 36)]);
      uint64_t v47 = v85;
      *(void *)uint64_t v23 = v85;
      *((void *)v23 + 1) = v39;
      v23[16] = v42;
      *((void *)v23 + 3) = v87;
      sub_10001BC2C(v47, v39, v42);
      swift_bridgeObjectRetain();
      sub_100105070((uint64_t)v17, &qword_100164030, (uint64_t (*)(uint64_t))sub_100104B04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
      sub_100105290((uint64_t)v20, (uint64_t (*)(void))sub_100104B04);
      sub_10001BAA4(v47, v39, v42);
      swift_bridgeObjectRelease();
      sub_1001050CC((uint64_t)v23, (uint64_t)v26);
      sub_100105130((uint64_t)v26, v89, (uint64_t (*)(void))sub_100104A10);
      swift_storeEnumTagMultiPayload();
      sub_100104E18();
      uint64_t v48 = (uint64_t)v90;
      sub_100124F80();
      sub_100105198(v48, (uint64_t)v83);
      swift_storeEnumTagMultiPayload();
      sub_100104D8C();
      sub_100124F80();
      sub_100105218(v48);
      uint64_t v49 = (uint64_t)v26;
    }
    else
    {
      uint64_t v79 = (uint64_t)&v77 - v32;
      aBlock = (void **)v85;
      uint64_t v92 = a2;
      sub_10001BA50();
      swift_bridgeObjectRetain();
      uint64_t v54 = v87;
      swift_retain();
      uint64_t v55 = sub_100125350();
      uint64_t v85 = v56;
      char v58 = v57;
      uint64_t v59 = v54;
      if (!v54)
      {
        id v60 = objc_allocWithZone((Class)UIColor);
        uint64_t v95 = sub_100104B38;
        uint64_t v96 = 0;
        aBlock = _NSConcreteStackBlock;
        uint64_t v92 = 1107296256;
        uint64_t v93 = sub_100013330;
        uint64_t v94 = &unk_100154B40;
        uint64_t v61 = _Block_copy(&aBlock);
        [v60 initWithDynamicProvider:v61];
        _Block_release(v61);
        swift_release();
        uint64_t v59 = sub_1001254E0();
      }
      aBlock = (void **)v59;
      swift_retain();
      char v62 = v58 & 1;
      uint64_t v63 = v85;
      uint64_t v77 = sub_1001252C0();
      uint64_t v64 = v55;
      uint64_t v66 = v65;
      uint64_t v78 = v67;
      char v69 = v68 & 1;
      sub_10001BAA4(v64, v63, v62);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v70 = enum case for Text.Case.uppercase(_:);
      uint64_t v71 = sub_1001252D0();
      uint64_t v72 = *(void *)(v71 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 104))(v20, v70, v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v20, 0, 1, v71);
      uint64_t v73 = swift_getKeyPath();
      sub_100105130((uint64_t)v20, (uint64_t)v17 + *(int *)(v86 + 28), (uint64_t (*)(void))sub_100104B04);
      *uint64_t v17 = v73;
      sub_100104FDC((uint64_t)v17, (uint64_t)&v29[*(int *)(v80 + 36)]);
      uint64_t v74 = v77;
      *(void *)uint64_t v29 = v77;
      *((void *)v29 + 1) = v66;
      v29[16] = v69;
      *((void *)v29 + 3) = v78;
      sub_10001BC2C(v74, v66, v69);
      swift_bridgeObjectRetain();
      sub_100105070((uint64_t)v17, &qword_100164030, (uint64_t (*)(uint64_t))sub_100104B04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
      sub_100105290((uint64_t)v20, (uint64_t (*)(void))sub_100104B04);
      sub_10001BAA4(v74, v66, v69);
      swift_bridgeObjectRelease();
      uint64_t v75 = v79;
      sub_1001050CC((uint64_t)v29, v79);
      sub_100105130(v75, v89, (uint64_t (*)(void))sub_100104A10);
      swift_storeEnumTagMultiPayload();
      sub_100104E18();
      uint64_t v76 = (uint64_t)v90;
      sub_100124F80();
      sub_100105198(v76, (uint64_t)v83);
      swift_storeEnumTagMultiPayload();
      sub_100104D8C();
      sub_100124F80();
      swift_release();
      sub_100105218(v76);
      uint64_t v49 = v75;
    }
    return sub_100105290(v49, (uint64_t (*)(void))sub_100104A10);
  }
  else
  {
    LODWORD(aBlock) = sub_100124FD0();
    *(void *)uint64_t v9 = sub_1001252C0();
    *((void *)v9 + 1) = v50;
    unsigned char v9[16] = v51 & 1;
    *((void *)v9 + 3) = v52;
    swift_storeEnumTagMultiPayload();
    sub_100104D8C();
    return sub_100124F80();
  }
}

uint64_t sub_1001047BC@<X0>(uint64_t a1@<X8>)
{
  sub_100104AA0(0, &qword_1001601E8, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Design, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v3 - 8);
  long long v5 = (char *)&v15 - v4;
  sub_10010499C();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100103D74(*v1, v1[1], v1[2], (uint64_t)v8);
  sub_100125190();
  uint64_t v9 = sub_100125180();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  uint64_t v10 = sub_1001251E0();
  sub_100105070((uint64_t)v5, &qword_1001601E8, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Design, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100105130((uint64_t)v8, a1, (uint64_t (*)(void))sub_10010499C);
  sub_100104BD4();
  uint64_t v13 = (uint64_t *)(a1 + *(int *)(v12 + 36));
  *uint64_t v13 = KeyPath;
  v13[1] = v10;
  return sub_100105290((uint64_t)v8, (uint64_t (*)(void))sub_10010499C);
}

void sub_10010499C()
{
  if (!qword_100164010)
  {
    sub_100104CA4(255, &qword_100164018, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent);
    unint64_t v0 = sub_100125580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164010);
    }
  }
}

void sub_100104A10()
{
  if (!qword_100164028)
  {
    sub_100104AA0(255, &qword_100164030, (uint64_t (*)(uint64_t))sub_100104B04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164028);
    }
  }
}

void sub_100104AA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_100104B04(uint64_t a1)
{
}

id sub_100104B38(void *a1)
{
  id v1 = [a1 userInterfaceStyle];
  id v2 = objc_allocWithZone((Class)UIColor);
  if (v1 == (id)2)
  {
    double v3 = 0.764705882;
    double v4 = 0.737254902;
  }
  else
  {
    double v3 = 0.235294118;
    double v4 = 0.262745098;
  }

  return [v2 initWithRed:v3 green:v3 blue:v4 alpha:0.6];
}

void sub_100104BD4()
{
  if (!qword_100164040)
  {
    sub_10010499C();
    sub_100104C3C();
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164040);
    }
  }
}

void sub_100104C3C()
{
  if (!qword_10015EDD0)
  {
    sub_1000419C4(255, &qword_10015EDD8);
    unint64_t v0 = sub_1001250A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10015EDD0);
    }
  }
}

void sub_100104CA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void *))
{
  if (!*a2)
  {
    sub_100104D28(255, &qword_100164020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v7 = a3(a1, v6, &type metadata for Text);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_100104D28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_100104A10();
    unint64_t v7 = a3(a1, v6, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_100104D8C()
{
  unint64_t result = qword_100164058;
  if (!qword_100164058)
  {
    sub_100104D28(255, &qword_100164020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_100104E18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164058);
  }
  return result;
}

unint64_t sub_100104E18()
{
  unint64_t result = qword_100164060;
  if (!qword_100164060)
  {
    sub_100104A10();
    sub_100104E90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164060);
  }
  return result;
}

unint64_t sub_100104E90()
{
  unint64_t result = qword_100164068;
  if (!qword_100164068)
  {
    sub_100104AA0(255, &qword_100164030, (uint64_t (*)(uint64_t))sub_100104B04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164068);
  }
  return result;
}

uint64_t sub_100104F18()
{
  return sub_100124D60();
}

uint64_t sub_100104F3C(uint64_t a1)
{
  sub_100104B04(0);
  __chkstk_darwin(v2 - 8);
  sub_100105130(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))sub_100104B04);
  return sub_100124D70();
}

uint64_t sub_100104FDC(uint64_t a1, uint64_t a2)
{
  sub_100104AA0(0, &qword_100164030, (uint64_t (*)(uint64_t))sub_100104B04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100105070(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_100104AA0(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1001050CC(uint64_t a1, uint64_t a2)
{
  sub_100104A10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100105130(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100105198(uint64_t a1, uint64_t a2)
{
  sub_100104D28(0, &qword_100164020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100105218(uint64_t a1)
{
  sub_100104D28(0, &qword_100164020, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100105290(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001052F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100105300()
{
  return swift_release();
}

unint64_t sub_10010530C()
{
  unint64_t result = qword_100164070;
  if (!qword_100164070)
  {
    sub_100104BD4();
    sub_100105384();
    sub_100105488();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164070);
  }
  return result;
}

unint64_t sub_100105384()
{
  unint64_t result = qword_100164078;
  if (!qword_100164078)
  {
    sub_10010499C();
    sub_1001053F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164078);
  }
  return result;
}

unint64_t sub_1001053F4()
{
  unint64_t result = qword_100164080;
  if (!qword_100164080)
  {
    sub_100104CA4(255, &qword_100164018, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent);
    sub_100104D8C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164080);
  }
  return result;
}

unint64_t sub_100105488()
{
  unint64_t result = qword_10015EEB0;
  if (!qword_10015EEB0)
  {
    sub_100104C3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10015EEB0);
  }
  return result;
}

unsigned char *sub_1001054E0(unsigned char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (unsigned char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *((void *)v4 + 1) = a2[1];
    *((void *)v4 + 2) = v7;
    uint64_t v8 = a2[4];
    *((void *)v4 + 3) = a2[3];
    *((void *)v4 + 4) = v8;
    uint64_t v9 = a2[6];
    *((void *)v4 + 5) = a2[5];
    *((void *)v4 + 6) = v9;
    uint64_t v10 = v4 + 56;
    uint64_t v11 = a2 + 7;
    uint64_t v12 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      long long v13 = *(_OWORD *)(a2 + 9);
      *uint64_t v10 = *v11;
      *(_OWORD *)(v4 + 72) = v13;
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      v4[64] = *((unsigned char *)a2 + 64);
      *((void *)v4 + 9) = a2[9];
      *((void *)v4 + 10) = v12;
      swift_bridgeObjectRetain();
    }
    uint64_t v15 = v4 + 88;
    uint64_t v16 = a2 + 11;
    uint64_t v17 = a2[14];
    if (v17 == 1)
    {
      long long v18 = *(_OWORD *)(a2 + 13);
      *uint64_t v15 = *v16;
      *(_OWORD *)(v4 + 104) = v18;
      *(_OWORD *)(v4 + 120) = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(v4 + 129) = *(_OWORD *)((char *)a2 + 129);
    }
    else
    {
      *(void *)uint64_t v15 = *(void *)v16;
      v4[96] = *((unsigned char *)a2 + 96);
      *((void *)v4 + 13) = a2[13];
      *((void *)v4 + 14) = v17;
      *((void *)v4 + 15) = a2[15];
      v4[128] = *((unsigned char *)a2 + 128);
      *((void *)v4 + 17) = a2[17];
      v4[144] = *((unsigned char *)a2 + 144);
      swift_bridgeObjectRetain();
    }
    uint64_t v19 = a3[9];
    unsigned __int8 v20 = &v4[v19];
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v23 = *((void *)v22 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      sub_100109ED0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v43 = v23;
      *unsigned __int8 v20 = *v21;
      uint64_t v25 = v22[5];
      char v42 = (char *)v20 + v25;
      uint64_t v26 = (char *)v21 + v25;
      uint64_t v27 = sub_1001232B0();
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v42, v26, v27);
      sub_10002FE38();
      v28(&v42[*(int *)(v29 + 36)], &v26[*(int *)(v29 + 36)], v27);
      uint64_t v30 = v22[6];
      uint64_t v31 = (char *)v20 + v30;
      uint64_t v32 = (char *)v21 + v30;
      uint64_t v33 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      *(_OWORD *)((char *)v20 + v22[7]) = *(_OWORD *)((char *)v21 + v22[7]);
      uint64_t v34 = v22[8];
      uint64_t v35 = (char *)v20 + v34;
      char v36 = (char *)v21 + v34;
      *(void *)uint64_t v35 = *(void *)v36;
      v35[8] = v36[8];
      *((unsigned char *)v20 + v22[9]) = *((unsigned char *)v21 + v22[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v43 + 56))(v20, 0, 1, v22);
    }
    uint64_t v37 = a3[11];
    *(void *)&v4[a3[10]] = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v38 = &v4[v37];
    uint64_t v39 = (uint64_t *)((char *)a2 + v37);
    sub_100109ED0(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = sub_100124B70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    }
    else
    {
      void *v38 = *v39;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100105944(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80) != 1) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 112) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = sub_1001232B0();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v6, v7);
    sub_10002FE38();
    v8(v6 + *(int *)(v9 + 36), v7);
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    uint64_t v11 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_release();
  uint64_t v12 = a1 + *(int *)(a2 + 44);
  sub_100109ED0(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_100124B70();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    return v14(v12, v13);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100105B80(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = (_OWORD *)(a1 + 56);
  uint64_t v10 = a2 + 56;
  uint64_t v11 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    long long v12 = *(_OWORD *)(v10 + 16);
    *uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(a1 + 72) = v12;
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(v10 + 8);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v11;
    swift_bridgeObjectRetain();
  }
  uint64_t v13 = (_OWORD *)(a1 + 88);
  uint64_t v14 = (_OWORD *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 112);
  if (v15 == 1)
  {
    long long v16 = *(_OWORD *)(a2 + 104);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 104) = v16;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  }
  else
  {
    *(void *)uint64_t v13 = *(void *)v14;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v15;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    swift_bridgeObjectRetain();
  }
  uint64_t v17 = a3[9];
  long long v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  unsigned __int8 v20 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v21 = *((void *)v20 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
  {
    sub_100109ED0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *long long v18 = *v19;
    uint64_t v23 = v20[5];
    char v41 = (char *)v18 + v23;
    uint64_t v24 = (char *)v19 + v23;
    uint64_t v25 = sub_1001232B0();
    uint64_t v42 = v21;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    uint64_t v43 = a3;
    swift_bridgeObjectRetain();
    v26(v41, v24, v25);
    sub_10002FE38();
    v26(&v41[*(int *)(v27 + 36)], &v24[*(int *)(v27 + 36)], v25);
    uint64_t v28 = v20[6];
    uint64_t v29 = (char *)v18 + v28;
    uint64_t v30 = (char *)v19 + v28;
    uint64_t v31 = sub_1001234F0();
    uint64_t v32 = v30;
    a3 = v43;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v32, v31);
    *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
    uint64_t v33 = v20[8];
    uint64_t v34 = (char *)v18 + v33;
    uint64_t v35 = (char *)v19 + v33;
    *(void *)uint64_t v34 = *(void *)v35;
    v34[8] = v35[8];
    *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v42 + 56))(v18, 0, 1, v20);
  }
  uint64_t v36 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  sub_100109ED0(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = sub_100124B70();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  else
  {
    *uint64_t v37 = *v38;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100105F8C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 56);
  uint64_t v7 = (_OWORD *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) == 1)
  {
    if (v8 == 1)
    {
      long long v9 = *(_OWORD *)(a2 + 72);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 72) = v9;
    }
    else
    {
      uint64_t v11 = *(void *)v7;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)uint64_t v6 = v11;
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_10003088C(a1 + 56);
    long long v10 = *(_OWORD *)(a2 + 72);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 72) = v10;
  }
  else
  {
    uint64_t v12 = *(void *)v7;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(void *)uint64_t v6 = v12;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = (_OWORD *)(a1 + 88);
  uint64_t v14 = (long long *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112) == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *v14;
      long long v17 = *(_OWORD *)(a2 + 104);
      long long v18 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 104) = v17;
      *(_OWORD *)(a1 + 120) = v18;
      *uint64_t v13 = v16;
    }
    else
    {
      uint64_t v22 = *(void *)v14;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(void *)uint64_t v13 = v22;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      uint64_t v23 = *(void *)(a2 + 120);
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 120) = v23;
      uint64_t v24 = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 136) = v24;
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_100088410(a1 + 88);
    long long v20 = *(_OWORD *)(a2 + 104);
    long long v19 = *(_OWORD *)(a2 + 120);
    long long v21 = *v14;
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    *(_OWORD *)(a1 + 104) = v20;
    *(_OWORD *)(a1 + 120) = v19;
    *uint64_t v13 = v21;
  }
  else
  {
    uint64_t v25 = *(void *)v14;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(void *)uint64_t v13 = v25;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(a2 + 120);
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    *(void *)(a1 + 120) = v26;
    uint64_t v27 = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 136) = v27;
  }
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      *uint64_t v29 = *v30;
      uint64_t v36 = v31[5];
      uint64_t v73 = (char *)v29 + v36;
      uint64_t v37 = (char *)v30 + v36;
      uint64_t v74 = v32;
      uint64_t v75 = a3;
      uint64_t v38 = sub_1001232B0();
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v39(v73, v37, v38);
      sub_10002FE38();
      uint64_t v41 = v38;
      a3 = v75;
      v39(&v73[*(int *)(v40 + 36)], &v37[*(int *)(v40 + 36)], v41);
      uint64_t v42 = v31[6];
      uint64_t v43 = (char *)v29 + v42;
      uint64_t v44 = (char *)v30 + v42;
      uint64_t v45 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      *(_OWORD *)((char *)v29 + v31[7]) = *(_OWORD *)((char *)v30 + v31[7]);
      uint64_t v46 = v31[8];
      uint64_t v47 = (char *)v29 + v46;
      uint64_t v48 = (char *)v30 + v46;
      char v49 = v48[8];
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v49;
      *((unsigned char *)v29 + v31[9]) = *((unsigned char *)v30 + v31[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v74 + 56))(v29, 0, 1, v31);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v35)
  {
    sub_1001099C8((uint64_t)v29, type metadata accessor for PreparedSparkline);
LABEL_20:
    sub_100109ED0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v29, v30, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_21;
  }
  *uint64_t v29 = *v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = v31[5];
  char v57 = (char *)v29 + v56;
  char v58 = (char *)v30 + v56;
  uint64_t v59 = sub_1001232B0();
  id v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 24);
  v60(v57, v58, v59);
  sub_10002FE38();
  v60(&v57[*(int *)(v61 + 36)], &v58[*(int *)(v61 + 36)], v59);
  uint64_t v62 = v31[6];
  uint64_t v63 = (char *)v29 + v62;
  uint64_t v64 = (char *)v30 + v62;
  uint64_t v65 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
  uint64_t v66 = v31[7];
  uint64_t v67 = (void *)((char *)v29 + v66);
  char v68 = (void *)((char *)v30 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  uint64_t v69 = v31[8];
  uint64_t v70 = (char *)v29 + v69;
  uint64_t v71 = (char *)v30 + v69;
  char v72 = v71[8];
  *(void *)uint64_t v70 = *(void *)v71;
  v70[8] = v72;
  *((unsigned char *)v29 + v31[9]) = *((unsigned char *)v30 + v31[9]);
LABEL_21:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v51 = a3[11];
    uint64_t v52 = (void *)(a1 + v51);
    uint64_t v53 = (void *)(a2 + v51);
    sub_100106630(a1 + v51);
    sub_100109ED0(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v54 = sub_100124B70();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    }
    else
    {
      void *v52 = *v53;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100106630(uint64_t a1)
{
  sub_100109ED0(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001066BC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v9 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    sub_100109ED0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v12 = v9[5];
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v31 = (char *)v8 + v12;
    uint64_t v14 = sub_1001232B0();
    uint64_t v32 = v10;
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
    v15(v13, v31, v14);
    sub_10002FE38();
    v15(&v13[*(int *)(v16 + 36)], &v31[*(int *)(v16 + 36)], v14);
    uint64_t v17 = v9[6];
    long long v18 = (char *)v7 + v17;
    long long v19 = (char *)v8 + v17;
    uint64_t v20 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    *(_OWORD *)((char *)v7 + v9[7]) = *(_OWORD *)((char *)v8 + v9[7]);
    uint64_t v21 = v9[8];
    uint64_t v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)v8 + v21;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    *((unsigned char *)v7 + v9[9]) = *((unsigned char *)v8 + v9[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v32 + 56))(v7, 0, 1, v9);
  }
  uint64_t v24 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  sub_100109ED0(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v28 = v27;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = sub_100124B70();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v25, v26, v29);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100106A20(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  long long v9 = (_OWORD *)(a1 + 56);
  uint64_t v10 = (_OWORD *)(a2 + 56);
  if (*(void *)(a1 + 80) == 1) {
    goto LABEL_4;
  }
  uint64_t v11 = *(void *)(a2 + 80);
  if (v11 == 1)
  {
    sub_10003088C(a1 + 56);
LABEL_4:
    long long v12 = *(_OWORD *)(a2 + 72);
    *long long v9 = *v10;
    *(_OWORD *)(a1 + 72) = v12;
    goto LABEL_6;
  }
  *(void *)long long v9 = *(void *)v10;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v13 = (_OWORD *)(a1 + 88);
  uint64_t v14 = (_OWORD *)(a2 + 88);
  if (*(void *)(a1 + 112) == 1)
  {
LABEL_9:
    long long v16 = *(_OWORD *)(a2 + 104);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 104) = v16;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(a2 + 112);
  if (v15 == 1)
  {
    sub_100088410(a1 + 88);
    goto LABEL_9;
  }
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
LABEL_11:
  uint64_t v17 = a3[9];
  long long v18 = (void *)(a1 + v17);
  long long v19 = (void *)(a2 + v17);
  uint64_t v20 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      *long long v18 = *v19;
      uint64_t v25 = v20[5];
      uint64_t v26 = (char *)v18 + v25;
      uint64_t v27 = (char *)v19 + v25;
      uint64_t v28 = sub_1001232B0();
      uint64_t v59 = a3;
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
      v29(v26, v27, v28);
      sub_10002FE38();
      v29(&v26[*(int *)(v30 + 36)], &v27[*(int *)(v30 + 36)], v28);
      a3 = v59;
      uint64_t v31 = v20[6];
      uint64_t v32 = (char *)v18 + v31;
      uint64_t v33 = (char *)v19 + v31;
      uint64_t v34 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
      uint64_t v35 = v20[8];
      uint64_t v36 = (char *)v18 + v35;
      uint64_t v37 = (char *)v19 + v35;
      *(void *)uint64_t v36 = *(void *)v37;
      _OWORD v36[8] = v37[8];
      *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v24)
  {
    sub_1001099C8((uint64_t)v18, type metadata accessor for PreparedSparkline);
LABEL_16:
    sub_100109ED0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v18, v19, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_17;
  }
  *long long v18 = *v19;
  swift_bridgeObjectRelease();
  uint64_t v46 = v20[5];
  uint64_t v47 = (char *)v18 + v46;
  uint64_t v48 = (char *)v19 + v46;
  uint64_t v49 = sub_1001232B0();
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40);
  v50(v47, v48, v49);
  sub_10002FE38();
  v50(&v47[*(int *)(v51 + 36)], &v48[*(int *)(v51 + 36)], v49);
  uint64_t v52 = v20[6];
  uint64_t v53 = (char *)v18 + v52;
  uint64_t v54 = (char *)v19 + v52;
  uint64_t v55 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 40))(v53, v54, v55);
  *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
  uint64_t v56 = v20[8];
  char v57 = (char *)v18 + v56;
  char v58 = (char *)v19 + v56;
  v57[8] = v58[8];
  *(void *)char v57 = *(void *)v58;
  *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
LABEL_17:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v39 = a3[11];
    uint64_t v40 = (void *)(a1 + v39);
    uint64_t v41 = (const void *)(a2 + v39);
    sub_100106630(a1 + v39);
    sub_100109ED0(0, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    uint64_t v43 = v42;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v44 = sub_100124B70();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 32))(v40, v41, v44);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100106FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100106FC4);
}

uint64_t sub_100106FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_100109ED0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_100109ED0(0, &qword_1001601F0, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100107150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100107164);
}

uint64_t sub_100107164(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_100109ED0(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_100109ED0(0, &qword_1001601F0, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for RowWithChartTicker()
{
  uint64_t result = qword_1001640E0;
  if (!qword_1001640E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10010733C()
{
  sub_100109ED0(319, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_100109ED0(319, &qword_100160170, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1001074A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001074C0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100108DAC();
  __chkstk_darwin(v4 - 8);
  uint64_t v44 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = type metadata accessor for RowSparklineView(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001094E8(0, &qword_100164178, type metadata accessor for RowSparklineView, (uint64_t)&type metadata for _PaddingLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  long long v18 = (char *)&v43 - v17;
  sub_100108B84();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  int v24 = (char *)&v43 - v23;
  *(void *)int v24 = sub_100124F00();
  *((void *)v24 + 1) = 0x4000000000000000;
  v24[16] = 0;
  sub_100109B2C(0, &qword_100164258, &qword_100164150, (uint64_t (*)(uint64_t))sub_100108C38);
  sub_100107910((uint64_t)a1, (uint64_t)&v24[*(int *)(v25 + 44)]);
  uint64_t v26 = type metadata accessor for RowWithChartTicker();
  sub_100032264((uint64_t)&a1[*(int *)(v26 + 36)], (uint64_t)v11);
  char v27 = sub_1001250F0();
  sub_100124890();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_100109A28((uint64_t)v11, (uint64_t)v15, type metadata accessor for RowSparklineView);
  uint64_t v36 = &v15[*(int *)(v13 + 44)];
  *uint64_t v36 = v27;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_1001099C8((uint64_t)v11, type metadata accessor for RowSparklineView);
  sub_100109A90((uint64_t)v15, (uint64_t)v18);
  *(void *)uint64_t v8 = sub_100124F10();
  *((void *)v8 + 1) = 0x4000000000000000;
  v8[16] = 0;
  sub_100109B2C(0, &qword_100164260, &qword_100164188, (uint64_t (*)(uint64_t))sub_100108E60);
  sub_100107CD0(a1, (uint64_t)&v8[*(int *)(v37 + 44)]);
  sub_100109A28((uint64_t)v24, (uint64_t)v21, (uint64_t (*)(void))sub_100108B84);
  sub_100109BA8((uint64_t)v18, (uint64_t)v15);
  uint64_t v38 = v44;
  sub_100109A28((uint64_t)v8, v44, (uint64_t (*)(void))sub_100108DAC);
  sub_100109A28((uint64_t)v21, a2, (uint64_t (*)(void))sub_100108B84);
  sub_100108ABC();
  uint64_t v40 = v39;
  uint64_t v41 = a2 + *(int *)(v39 + 48);
  *(void *)uint64_t v41 = 0;
  *(unsigned char *)(v41 + 8) = 1;
  sub_100109BA8((uint64_t)v15, a2 + *(int *)(v39 + 64));
  sub_100109A28(v38, a2 + *(int *)(v40 + 80), (uint64_t (*)(void))sub_100108DAC);
  sub_1001099C8((uint64_t)v8, (uint64_t (*)(void))sub_100108DAC);
  sub_100109C44((uint64_t)v18);
  sub_1001099C8((uint64_t)v24, (uint64_t (*)(void))sub_100108B84);
  sub_1001099C8(v38, (uint64_t (*)(void))sub_100108DAC);
  sub_100109C44((uint64_t)v15);
  return sub_1001099C8((uint64_t)v21, (uint64_t (*)(void))sub_100108B84);
}

uint64_t sub_100107910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = type metadata accessor for SymbolTrendView();
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for SymbolTrendView;
  sub_100108F08(0, &qword_100164160, (void (*)(uint64_t))type metadata accessor for SymbolTrendView);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v36 = (uint64_t)&KeyPath - v12;
  char v13 = *(unsigned char *)a1;
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v6 = v13;
  *((void *)v6 + 1) = v15;
  *((void *)v6 + 2) = v14;
  *((void *)v6 + 3) = v16;
  *((void *)v6 + 4) = v17;
  long long v18 = (uint64_t *)&v6[v4[8]];
  *long long v18 = swift_getKeyPath();
  sub_100109ED0(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (uint64_t *)&v6[v4[9]];
  *uint64_t v19 = swift_getKeyPath();
  sub_100109ED0(0, &qword_10015ECD0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = &v6[v4[10]];
  *(void *)uint64_t v20 = KeyPath;
  v20[8] = 0;
  uint64_t v21 = swift_getKeyPath();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(unsigned char *)(v22 + 24) = 1;
  *(void *)(v22 + 32) = 0;
  *(unsigned char *)(v22 + 40) = 0;
  sub_100109A28((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  uint64_t v23 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v23 = v21;
  v23[1] = (uint64_t)sub_1000321B4;
  v23[2] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001099C8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SymbolTrendView);
  int v24 = (void (*)(uint64_t))v35;
  uint64_t v25 = v36;
  sub_100109F44((uint64_t)v10, v36, &qword_100164160, (void (*)(uint64_t))v35);
  uint64_t v27 = *(void *)(a1 + 40);
  uint64_t v26 = *(void *)(a1 + 48);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = 0;
  *(unsigned char *)(v29 + 24) = 0;
  *(void *)(v29 + 32) = 0;
  *(unsigned char *)(v29 + 40) = 1;
  sub_100109FC0(v25, (uint64_t)v10, &qword_100164160, v24);
  uint64_t v30 = v37;
  sub_100109FC0((uint64_t)v10, v37, &qword_100164160, v24);
  sub_100108C38();
  uint64_t v32 = (void *)(v30 + *(int *)(v31 + 48));
  *uint64_t v32 = v27;
  v32[1] = v26;
  uint64_t v32[2] = v28;
  v32[3] = sub_1000321B4;
  v32[4] = v29;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  sub_10010A02C(v25, &qword_100164160, v24);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10010A02C((uint64_t)v10, &qword_100164160, v24);
}

uint64_t sub_100107CD0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v103 = a2;
  uint64_t v98 = type metadata accessor for PriceChangeView() - 8;
  __chkstk_darwin(v98);
  uint64_t v97 = (uint64_t *)&v76[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v102 = type metadata accessor for PriceChangeView;
  sub_100108F08(0, &qword_100164230, (void (*)(uint64_t))type metadata accessor for PriceChangeView);
  uint64_t v100 = v4 - 8;
  __chkstk_darwin(v4 - 8);
  uint64_t v99 = &v76[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v101 = &v76[-v7];
  uint64_t v8 = sub_100124A80();
  uint64_t v89 = *(void *)(v8 - 8);
  uint64_t v90 = v8;
  __chkstk_darwin(v8);
  uint64_t v87 = &v76[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100109054();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v93 = v10;
  uint64_t v94 = v11;
  __chkstk_darwin(v10);
  uint64_t v88 = &v76[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100108F98();
  uint64_t v95 = *(void *)(v13 - 8);
  uint64_t v96 = v13;
  __chkstk_darwin(v13);
  uint64_t v91 = &v76[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v106 = sub_100108F98;
  sub_100108F08(0, &qword_100164198, (void (*)(uint64_t))sub_100108F98);
  uint64_t v92 = v15 - 8;
  __chkstk_darwin(v15 - 8);
  uint64_t v104 = &v76[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v105 = &v76[-v18];
  uint64_t v19 = *((void *)a1 + 7);
  uint64_t v20 = *((void *)a1 + 8);
  uint64_t v21 = *((void *)a1 + 9);
  uint64_t v22 = *((void *)a1 + 10);
  type metadata accessor for RowWithChartTicker();
  uint64_t v86 = a1;
  sub_1000321B8(v19, v20, v21, v22);
  sub_100123FA0();
  *(void *)&long long v107 = v19;
  *((void *)&v107 + 1) = v20;
  *(void *)&long long v108 = v21;
  *((void *)&v108 + 1) = v22;
  *((void *)&v129 + 1) = 0;
  *(void *)&long long v130 = 0;
  BYTE8(v130) = 0;
  long long v131 = xmmword_100128D30;
  *(void *)&long long v132 = 0xA300000000000000;
  *((void *)&v132 + 1) = 9666786;
  *(void *)&long long v133 = 0xA300000000000000;
  *((void *)&v133 + 1) = 9666786;
  *(void *)&long long v134 = 0xA300000000000000;
  sub_100041810();
  sub_100109898((unint64_t *)&qword_10015F430, (void (*)(uint64_t))sub_100041810);
  sub_100041944();
  uint64_t v23 = sub_100125330();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  LOBYTE(v21) = v28 & 1;
  uint64_t v29 = sub_1001257E0();
  uint64_t v84 = v30;
  uint64_t v85 = v29;
  sub_100108718((uint64_t)&v129);
  long long v31 = v129;
  long long v32 = v130;
  char v33 = v131;
  char v119 = v131;
  sub_100109D24(v129, *((uint64_t *)&v129 + 1), v130);
  sub_10001BC2C(v23, v25, v21);
  swift_bridgeObjectRetain();
  sub_10001BC2C(v23, v25, v21);
  swift_bridgeObjectRetain();
  sub_10001BAA4(v23, v25, v21);
  swift_bridgeObjectRelease();
  sub_100109D60(v31, *((uint64_t *)&v31 + 1), v32);
  sub_10001BAA4(v23, v25, v21);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  char v124 = v33;
  unsigned __int8 v122 = v21;
  unsigned __int8 v120 = 0;
  uint64_t v83 = swift_getKeyPath();
  char v34 = v124;
  int v77 = v122;
  int v79 = v120;
  unsigned __int8 v125 = 0;
  int v35 = sub_100124FC0();
  int v80 = v125;
  int v81 = v35;
  sub_100125260();
  uint64_t v78 = sub_100125160();
  swift_release();
  uint64_t v36 = swift_getKeyPath();
  *(_WORD *)((char *)&v117 + 1) = v127;
  BYTE3(v117) = v128;
  *(void *)&long long v107 = v85;
  *((void *)&v107 + 1) = v84;
  long long v108 = v31;
  long long v109 = v32;
  LOBYTE(v110) = v34;
  *(_DWORD *)((char *)&v110 + 1) = *(_DWORD *)v123;
  DWORD1(v110) = *(_DWORD *)&v123[3];
  *((void *)&v110 + 1) = v23;
  *(void *)&long long v111 = v25;
  BYTE8(v111) = v77;
  HIDWORD(v111) = *(_DWORD *)&v121[3];
  *(_DWORD *)((char *)&v111 + 9) = *(_DWORD *)v121;
  *(void *)&long long v112 = v27;
  *((void *)&v112 + 1) = 0xBFF0000000000000;
  *(void *)&long long v113 = 0;
  *((void *)&v113 + 1) = KeyPath;
  long long v114 = 0uLL;
  *(void *)&long long v115 = 0;
  BYTE8(v115) = v79;
  *(_DWORD *)((char *)&v115 + 9) = *(_DWORD *)v126;
  HIDWORD(v115) = *(_DWORD *)&v126[3];
  *(void *)&long long v116 = v83;
  *((void *)&v116 + 1) = 1;
  LOBYTE(v117) = v80;
  DWORD1(v117) = v81;
  *((void *)&v117 + 1) = v36;
  uint64_t v118 = v78;
  uint64_t v38 = v89;
  uint64_t v37 = v90;
  uint64_t v39 = v87;
  (*(void (**)(unsigned char *, void, uint64_t))(v89 + 104))(v87, enum case for DynamicTypeSize.large(_:), v90);
  sub_1001090D8();
  uint64_t v41 = v40;
  unint64_t v42 = sub_100109610();
  uint64_t v43 = v88;
  sub_100125440();
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v39, v37);
  long long v137 = v115;
  long long v138 = v116;
  long long v139 = v117;
  uint64_t v140 = v118;
  long long v133 = v111;
  long long v134 = v112;
  long long v135 = v113;
  long long v136 = v114;
  long long v129 = v107;
  long long v130 = v108;
  long long v131 = v109;
  long long v132 = v110;
  sub_100109DB4((uint64_t)&v129);
  *(void *)&long long v107 = v41;
  *((void *)&v107 + 1) = v42;
  swift_getOpaqueTypeConformance2();
  uint64_t v44 = v91;
  uint64_t v45 = v93;
  sub_100125410();
  (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v43, v45);
  uint64_t v46 = swift_getKeyPath();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 0;
  *(unsigned char *)(v47 + 24) = 1;
  *(void *)(v47 + 32) = 0;
  *(unsigned char *)(v47 + 40) = 0;
  uint64_t v49 = v95;
  uint64_t v48 = v96;
  uint64_t v50 = v104;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v95 + 16))(v104, v44, v96);
  uint64_t v51 = (uint64_t *)&v50[*(int *)(v92 + 44)];
  *uint64_t v51 = v46;
  v51[1] = (uint64_t)sub_1000321B4;
  v51[2] = v47;
  (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v44, v48);
  sub_100109F44((uint64_t)v50, (uint64_t)v105, &qword_100164198, (void (*)(uint64_t))v106);
  uint64_t v52 = *((void *)v86 + 11);
  uint64_t v53 = *((void *)v86 + 12);
  uint64_t v54 = *((void *)v86 + 13);
  uint64_t v55 = *((void *)v86 + 14);
  uint64_t v57 = *((void *)v86 + 15);
  uint64_t v56 = *((void *)v86 + 16);
  uint64_t v95 = *((void *)v86 + 17);
  uint64_t v58 = v95;
  uint64_t v96 = v56;
  LODWORD(v93) = *v86;
  LOBYTE(v46) = v86[144];
  LODWORD(v94) = v46;
  uint64_t v59 = swift_getKeyPath();
  uint64_t v60 = (uint64_t)v97;
  uint64_t *v97 = v59;
  sub_100109ED0(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v61 = v98;
  uint64_t v62 = v60 + *(int *)(v98 + 28);
  *(void *)uint64_t v62 = v52;
  *(void *)(v62 + 8) = v53;
  *(void *)(v62 + 16) = v54;
  *(void *)(v62 + 24) = v55;
  *(void *)(v62 + 32) = v57;
  *(void *)(v62 + 40) = v56;
  *(void *)(v62 + 48) = v58;
  *(unsigned char *)(v62 + 56) = v46;
  *(unsigned char *)(v60 + *(int *)(v61 + 32)) = v93;
  uint64_t v63 = swift_getKeyPath();
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = 0;
  *(unsigned char *)(v64 + 24) = 0;
  *(void *)(v64 + 32) = 0;
  *(unsigned char *)(v64 + 40) = 1;
  uint64_t v65 = v99;
  sub_100109A28(v60, (uint64_t)v99, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  uint64_t v66 = (uint64_t *)&v65[*(int *)(v100 + 44)];
  *uint64_t v66 = v63;
  v66[1] = (uint64_t)sub_1000321B4;
  v66[2] = v64;
  sub_1000321B8(v52, v53, v54, v55);
  sub_1001099C8(v60, (uint64_t (*)(void))type metadata accessor for PriceChangeView);
  char v68 = v101;
  uint64_t v67 = (void (*)(uint64_t))v102;
  sub_100109F44((uint64_t)v65, (uint64_t)v101, &qword_100164230, (void (*)(uint64_t))v102);
  uint64_t v70 = v104;
  uint64_t v69 = v105;
  uint64_t v71 = (void (*)(uint64_t))v106;
  sub_100109FC0((uint64_t)v105, (uint64_t)v104, &qword_100164198, (void (*)(uint64_t))v106);
  char v72 = v67;
  sub_100109FC0((uint64_t)v68, (uint64_t)v65, &qword_100164230, v67);
  uint64_t v73 = v103;
  sub_100109FC0((uint64_t)v70, v103, &qword_100164198, v71);
  sub_100108E60();
  sub_100109FC0((uint64_t)v65, v73 + *(int *)(v74 + 48), &qword_100164230, v72);
  sub_10010A02C((uint64_t)v68, &qword_100164230, v72);
  sub_10010A02C((uint64_t)v69, &qword_100164198, v71);
  sub_10010A02C((uint64_t)v65, &qword_100164230, v72);
  return sub_10010A02C((uint64_t)v70, &qword_100164198, v71);
}

double sub_100108718@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for RowWithChartTicker();
  sub_100123FA0();
  sub_100124EC0();
  sub_100125340();
  sub_100124F80();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_100108858()
{
  uint64_t v1 = sub_100125060();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  long long v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100108A08();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_100124E70();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  sub_100109930();
  sub_1001074C0(v0, (uint64_t)&v7[*(int *)(v8 + 44)]);
  sub_100125040();
  sub_100109898(&qword_100164250, (void (*)(uint64_t))sub_100108A08);
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1001099C8((uint64_t)v7, (uint64_t (*)(void))sub_100108A08);
}

void sub_100108A08()
{
  if (!qword_100164130)
  {
    sub_100109ED0(255, &qword_100164138, (uint64_t (*)(uint64_t))sub_100108ABC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_100108D48(&qword_100164240, &qword_100164138, (uint64_t (*)(uint64_t))sub_100108ABC);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164130);
    }
  }
}

void sub_100108ABC()
{
  if (!qword_100164140)
  {
    sub_100108B84();
    sub_1001094E8(255, &qword_100164178, type metadata accessor for RowSparklineView, (uint64_t)&type metadata for _PaddingLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_100108DAC();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_100164140);
    }
  }
}

void sub_100108B84()
{
  if (!qword_100164148)
  {
    sub_100109ED0(255, &qword_100164150, (uint64_t (*)(uint64_t))sub_100108C38, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_100108D48(&qword_100164170, &qword_100164150, (uint64_t (*)(uint64_t))sub_100108C38);
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164148);
    }
  }
}

void sub_100108C38()
{
  if (!qword_100164158)
  {
    sub_100108F08(255, &qword_100164160, (void (*)(uint64_t))type metadata accessor for SymbolTrendView);
    sub_100108CC4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100164158);
    }
  }
}

void sub_100108CC4()
{
  if (!qword_100164168)
  {
    sub_100109CD8(255, (unint64_t *)&qword_10015EC20, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyTransformModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164168);
    }
  }
}

uint64_t sub_100108D48(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100109ED0(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100108DAC()
{
  if (!qword_100164180)
  {
    sub_100109ED0(255, &qword_100164188, (uint64_t (*)(uint64_t))sub_100108E60, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_100108D48(&qword_100164238, &qword_100164188, (uint64_t (*)(uint64_t))sub_100108E60);
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164180);
    }
  }
}

void sub_100108E60()
{
  if (!qword_100164190)
  {
    sub_100108F08(255, &qword_100164198, (void (*)(uint64_t))sub_100108F98);
    sub_100108F08(255, &qword_100164230, (void (*)(uint64_t))type metadata accessor for PriceChangeView);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100164190);
    }
  }
}

void sub_100108F08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_100109CD8(255, (unint64_t *)&qword_10015EC20, (uint64_t)&type metadata for EdgeInsets, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyTransformModifier);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100108F98()
{
  if (!qword_1001641A0)
  {
    sub_100109054();
    sub_1001090D8();
    sub_100109610();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001641A0);
    }
  }
}

void sub_100109054()
{
  if (!qword_1001641A8)
  {
    sub_1001090D8();
    sub_100109610();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001641A8);
    }
  }
}

void sub_1001090D8()
{
  if (!qword_1001641B0)
  {
    sub_100109158();
    sub_100109554(255, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001641B0);
    }
  }
}

void sub_100109158()
{
  if (!qword_1001641B8)
  {
    sub_1001091EC();
    sub_1001095C0(255, (unint64_t *)&qword_10015F058, (uint64_t)&type metadata for HierarchicalShapeStyle, (uint64_t)&protocol witness table for HierarchicalShapeStyle, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for _ForegroundStyleModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001641B8);
    }
  }
}

void sub_1001091EC()
{
  if (!qword_1001641C0)
  {
    sub_1001094E8(255, &qword_1001641C8, (uint64_t (*)(uint64_t))sub_1001092A4, (uint64_t)&type metadata for OverflowIntoTextMarginsModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_100109554(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001641C0);
    }
  }
}

void sub_1001092A4()
{
  if (!qword_1001641D0)
  {
    sub_100109ED0(255, &qword_1001641D8, (uint64_t (*)(uint64_t))sub_100109358, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_100108D48(&qword_100164200, &qword_1001641D8, (uint64_t (*)(uint64_t))sub_100109358);
    unint64_t v0 = sub_100125730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001641D0);
    }
  }
}

void sub_100109358()
{
  if (!qword_1001641E0)
  {
    sub_1001093C8();
    sub_100109450();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1001641E0);
    }
  }
}

void sub_1001093C8()
{
  if (!qword_1001641E8)
  {
    sub_1001095C0(255, &qword_1001641F0, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for Text, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001641E8);
    }
  }
}

void sub_100109450()
{
  if (!qword_1001641F8)
  {
    sub_1001094E8(255, (unint64_t *)&qword_10015FC30, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutPriorityTraitKey, (uint64_t)&protocol witness table for LayoutPriorityTraitKey, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _TraitWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001641F8);
    }
  }
}

void sub_1001094E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_100109554(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_100109CD8(255, a3, a4, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    unint64_t v5 = sub_1001250A0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1001095C0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_100109610()
{
  unint64_t result = qword_100164208;
  if (!qword_100164208)
  {
    sub_1001090D8();
    sub_1001096A8();
    sub_1001098E0((unint64_t *)&qword_10015EEB0, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164208);
  }
  return result;
}

unint64_t sub_1001096A8()
{
  unint64_t result = qword_100164210;
  if (!qword_100164210)
  {
    sub_100109158();
    sub_100109720();
    sub_100041624();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164210);
  }
  return result;
}

unint64_t sub_100109720()
{
  unint64_t result = qword_100164218;
  if (!qword_100164218)
  {
    sub_1001091EC();
    sub_1001097B8();
    sub_1001098E0(&qword_10015E600, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164218);
  }
  return result;
}

unint64_t sub_1001097B8()
{
  unint64_t result = qword_100164220;
  if (!qword_100164220)
  {
    sub_1001094E8(255, &qword_1001641C8, (uint64_t (*)(uint64_t))sub_1001092A4, (uint64_t)&type metadata for OverflowIntoTextMarginsModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_100109898(&qword_100164228, (void (*)(uint64_t))sub_1001092A4);
    sub_100036274();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164220);
  }
  return result;
}

uint64_t sub_100109898(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001098E0(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100109554(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100109930()
{
  if (!qword_100164248)
  {
    sub_100109ED0(255, &qword_100164138, (uint64_t (*)(uint64_t))sub_100108ABC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164248);
    }
  }
}

uint64_t sub_1001099C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100109A28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100109A90(uint64_t a1, uint64_t a2)
{
  sub_1001094E8(0, &qword_100164178, type metadata accessor for RowSparklineView, (uint64_t)&type metadata for _PaddingLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100109B2C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_100109ED0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v5 = sub_1001249F0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_100109BA8(uint64_t a1, uint64_t a2)
{
  sub_1001094E8(0, &qword_100164178, type metadata accessor for RowSparklineView, (uint64_t)&type metadata for _PaddingLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100109C44(uint64_t a1)
{
  sub_1001094E8(0, &qword_100164178, type metadata accessor for RowSparklineView, (uint64_t)&type metadata for _PaddingLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100109CD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_100109D24(uint64_t a1, uint64_t a2, char a3)
{
  sub_10001BC2C(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100109D60(uint64_t a1, uint64_t a2, char a3)
{
  sub_10001BAA4(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100109DB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 120);
  uint64_t v8 = *(void *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 136);
  sub_100109D60(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
  sub_10001BAA4(v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100037598(v5, v6, v7, v8, v10);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100109E98()
{
  return swift_deallocObject();
}

uint64_t sub_100109EB0()
{
  return swift_deallocObject();
}

void sub_100109ED0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100109F34()
{
  return swift_deallocObject();
}

uint64_t sub_100109F44(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_100108F08(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_100109FB0()
{
  return swift_deallocObject();
}

uint64_t sub_100109FC0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_100108F08(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_10010A02C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_100108F08(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_10010A088()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10010A110(uint64_t a1)
{
  uint64_t v2 = sub_1001236A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)v24 - v7;
  uint64_t v9 = sub_100123670();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v14 = v10 + 16;
    long long v31 = v15;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
    unsigned int v30 = enum case for ExchangeStatus.open(_:);
    uint64_t v27 = (void (**)(char *, uint64_t))(v3 + 8);
    char v28 = (void (**)(char *, uint64_t))(v14 - 8);
    uint64_t v29 = (void (**)(char *, void, uint64_t))(v3 + 104);
    uint64_t v17 = *(void *)(v14 + 56);
    v24[1] = a1;
    uint64_t v25 = v17;
    swift_bridgeObjectRetain();
    uint64_t v18 = v13 - 1;
    uint64_t v26 = v14;
    while (1)
    {
      uint64_t v32 = v18;
      v31(v12, v16, v9);
      sub_100123610();
      (*v29)(v6, v30, v2);
      sub_10010BBF0(&qword_100164318, (void (*)(uint64_t))&type metadata accessor for ExchangeStatus);
      sub_100125C60();
      sub_100125C60();
      if (v35 == v33 && v36 == v34) {
        break;
      }
      char v20 = sub_100126530();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = *v27;
      (*v27)(v6, v2);
      v21(v8, v2);
      (*v28)(v12, v9);
      if ((v20 & 1) == 0)
      {
        uint64_t v18 = v32 - 1;
        v16 += v25;
        if (v32) {
          continue;
        }
      }
      goto LABEL_12;
    }
    swift_bridgeObjectRelease_n();
    uint64_t v22 = *v27;
    (*v27)(v6, v2);
    v22(v8, v2);
    (*v28)(v12, v9);
    char v20 = 1;
LABEL_12:
    swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

char *sub_10010A490(uint64_t a1)
{
  sub_10010BA78(0, &qword_10015E740, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v23 - v4;
  uint64_t v27 = sub_1001232B0();
  uint64_t v6 = *(void *)(v27 - 8);
  uint64_t v7 = __chkstk_darwin(v27);
  char v28 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v26 = (char *)v23 - v9;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return (char *)_swiftEmptyArrayStorage;
  }
  v23[1] = v1;
  uint64_t v11 = *(void *)(sub_100123670() - 8);
  uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v25 = v6;
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v15 = *(void *)(v11 + 72);
  v23[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = (char *)_swiftEmptyArrayStorage;
  uint64_t v17 = v27;
  uint64_t v24 = v15;
  do
  {
    sub_100123620();
    if ((*v13)(v5, 1, v17) == 1)
    {
      sub_10010BB64((uint64_t)v5);
    }
    else
    {
      uint64_t v18 = *v14;
      uint64_t v19 = v26;
      (*v14)(v26, v5, v17);
      v18(v28, v19, v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = (char *)sub_10009B548(0, *((void *)v16 + 2) + 1, 1, (unint64_t)v16);
      }
      unint64_t v21 = *((void *)v16 + 2);
      unint64_t v20 = *((void *)v16 + 3);
      if (v21 >= v20 >> 1) {
        uint64_t v16 = (char *)sub_10009B548(v20 > 1, v21 + 1, 1, (unint64_t)v16);
      }
      *((void *)v16 + 2) = v21 + 1;
      uint64_t v17 = v27;
      v18(&v16[((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v21], v28, v27);
      uint64_t v15 = v24;
    }
    v12 += v15;
    --v10;
  }
  while (v10);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_10010A7AC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_10010BA78(0, &qword_10015E740, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_1001232B0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    uint64_t v19 = v38;
LABEL_5:
    sub_10010BB64((uint64_t)v9);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  unsigned int v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_10010BBF0((unint64_t *)&qword_10015EB50, (void (*)(uint64_t))&type metadata accessor for Date);
      char v27 = sub_100125A60();
      char v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_10010BB64((uint64_t)v7);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_10010ABEC()
{
  sub_100005550();
  uint64_t result = sub_100126000();
  qword_1001727C0 = result;
  return result;
}

uint64_t sub_10010AC54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v91 = a3;
  sub_10010BA78(0, &qword_10015E740, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v5 - 8);
  uint64_t v82 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v85 = (char *)&v80 - v8;
  __chkstk_darwin(v9);
  uint64_t v86 = (char *)&v80 - v10;
  uint64_t v11 = sub_1001232B0();
  uint64_t v94 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  int v81 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  int v80 = (char *)&v80 - v14;
  __chkstk_darwin(v15);
  uint64_t v84 = (char *)&v80 - v16;
  __chkstk_darwin(v17);
  uint64_t v83 = (char *)&v80 - v18;
  __chkstk_darwin(v19);
  uint64_t v93 = (char *)&v80 - v20;
  uint64_t v21 = sub_1001237F0();
  uint64_t v89 = *(void *)(v21 - 8);
  uint64_t v90 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009D98((void *)(v3 + 16), *(void *)(v3 + 40));
  sub_100123AB0();
  uint64_t v92 = v23;
  uint64_t v88 = sub_100123760();
  if (qword_10015D618 != -1) {
    swift_once();
  }
  uint64_t v24 = (void *)qword_1001727C0;
  sub_10010BA78(0, (unint64_t *)&qword_10015D9A8, (uint64_t (*)(uint64_t))sub_10002FA80, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100128E90;
  sub_10010BBF0(&qword_10015E758, (void (*)(uint64_t))&type metadata accessor for Date);
  id v26 = v24;
  uint64_t v95 = v11;
  uint64_t v27 = sub_1001264F0();
  uint64_t v29 = v28;
  *(void *)(v25 + 56) = &type metadata for String;
  unint64_t v30 = sub_100005648();
  *(void *)(v25 + 64) = v30;
  *(void *)(v25 + 32) = v27;
  *(void *)(v25 + 40) = v29;
  sub_10010BA78(0, &qword_100164308, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
  *(void *)(v25 + 96) = v31;
  *(void *)(v25 + 104) = sub_10010BADC();
  *(void *)(v25 + 72) = a1;
  swift_bridgeObjectRetain();
  sub_100125F60();
  sub_100124520();

  swift_bridgeObjectRelease();
  uint64_t v32 = swift_bridgeObjectRetain();
  LOBYTE(v27) = sub_10010A110(v32);
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
    uint64_t v41 = v94;
    if (v87 == 1)
    {
      uint64_t v33 = v92;
      sub_1001237B0();
      unint64_t v42 = (void *)qword_1001727C0;
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_100127010;
      uint64_t v96 = 0;
      unint64_t v97 = 0xE000000000000000;
      id v44 = v42;
      sub_100125E00();
      uint64_t v45 = v96;
      unint64_t v46 = v97;
      *(void *)(v43 + 56) = &type metadata for String;
      *(void *)(v43 + 64) = v30;
      *(void *)(v43 + 32) = v45;
      *(void *)(v43 + 40) = v46;
      sub_100125F60();
      sub_100124520();

      swift_bridgeObjectRelease();
      uint64_t v47 = sub_10010A490(a1);
      uint64_t v48 = v86;
      sub_10010A7AC((uint64_t)v47, v86);
      swift_bridgeObjectRelease();
      uint64_t v40 = v95;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v48, 1, v95) == 1)
      {
        sub_10010BB64((uint64_t)v48);
        uint64_t v39 = v93;
LABEL_17:
        sub_100123250();
        goto LABEL_22;
      }
      uint64_t v57 = v83;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v83, v48, v40);
      uint64_t v58 = v84;
      sub_100123250();
      sub_10010BBF0((unint64_t *)&qword_10015EB50, (void (*)(uint64_t))&type metadata accessor for Date);
      char v59 = sub_100125A60();
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
      if (v59) {
        uint64_t v61 = v57;
      }
      else {
        uint64_t v61 = v58;
      }
      uint64_t v39 = v93;
    }
    else
    {
      uint64_t v40 = v95;
      if (v87 < 2)
      {
        uint64_t v62 = sub_10010A490(a1);
        uint64_t v63 = v82;
        sub_10010A7AC((uint64_t)v62, v82);
        swift_bridgeObjectRelease();
        int v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v63, 1, v40);
        uint64_t v39 = v93;
        if (v64 != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v93, v63, v40);
          uint64_t v75 = (void *)qword_1001727C0;
          uint64_t v76 = swift_allocObject();
          *(_OWORD *)(v76 + 16) = xmmword_100127010;
          id v77 = v75;
          uint64_t v78 = sub_1001264F0();
          *(void *)(v76 + 56) = &type metadata for String;
          *(void *)(v76 + 64) = v30;
          *(void *)(v76 + 32) = v78;
          *(void *)(v76 + 40) = v79;
          sub_100125F60();
          sub_100124520();

          swift_bridgeObjectRelease();
          uint64_t v72 = v90;
          uint64_t v73 = v89;
          uint64_t v33 = v92;
          goto LABEL_23;
        }
        sub_10010BB64((uint64_t)v63);
        uint64_t v33 = v92;
        sub_1001237D0();
        uint64_t v65 = (void *)qword_1001727C0;
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_100127010;
        uint64_t v96 = 0;
        unint64_t v97 = 0xE000000000000000;
        id v67 = v65;
        sub_100125E00();
        uint64_t v68 = v96;
        unint64_t v69 = v97;
        *(void *)(v66 + 56) = &type metadata for String;
        *(void *)(v66 + 64) = v30;
        *(void *)(v66 + 32) = v68;
        *(void *)(v66 + 40) = v69;
        sub_100125F60();
        sub_100124520();

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      uint64_t v33 = v92;
      sub_100123780();
      uint64_t v49 = (void *)qword_1001727C0;
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_100127010;
      uint64_t v96 = 0;
      unint64_t v97 = 0xE000000000000000;
      id v51 = v49;
      sub_100125E00();
      uint64_t v52 = v96;
      unint64_t v53 = v97;
      *(void *)(v50 + 56) = &type metadata for String;
      *(void *)(v50 + 64) = v30;
      *(void *)(v50 + 32) = v52;
      *(void *)(v50 + 40) = v53;
      sub_100125F60();
      sub_100124520();

      swift_bridgeObjectRelease();
      uint64_t v54 = sub_10010A490(a1);
      uint64_t v55 = v85;
      sub_10010A7AC((uint64_t)v54, v85);
      swift_bridgeObjectRelease();
      int v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v55, 1, v40);
      uint64_t v39 = v93;
      if (v56 == 1)
      {
        sub_10010BB64((uint64_t)v55);
        goto LABEL_17;
      }
      uint64_t v57 = v80;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v80, v55, v40);
      uint64_t v58 = v81;
      sub_100123250();
      sub_10010BBF0((unint64_t *)&qword_10015EB50, (void (*)(uint64_t))&type metadata accessor for Date);
      char v70 = sub_100125A60();
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
      if (v70) {
        uint64_t v61 = v57;
      }
      else {
        uint64_t v61 = v58;
      }
    }
    v60(v39, v61, v40);
    uint64_t v71 = *(void (**)(char *, uint64_t))(v41 + 8);
    v71(v58, v40);
    v71(v57, v40);
    goto LABEL_22;
  }
  uint64_t v33 = v92;
  sub_1001237D0();
  uint64_t v34 = (void *)qword_1001727C0;
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_100127010;
  uint64_t v96 = 0;
  unint64_t v97 = 0xE000000000000000;
  id v36 = v34;
  sub_100125E00();
  uint64_t v37 = v96;
  unint64_t v38 = v97;
  *(void *)(v35 + 56) = &type metadata for String;
  *(void *)(v35 + 64) = v30;
  *(void *)(v35 + 32) = v37;
  *(void *)(v35 + 40) = v38;
  sub_100125F60();
  sub_100124520();

  swift_bridgeObjectRelease();
  uint64_t v39 = v93;
  sub_100123250();
  uint64_t v41 = v94;
  uint64_t v40 = v95;
LABEL_22:
  uint64_t v73 = v89;
  uint64_t v72 = v90;
LABEL_23:
  static TimelineReloadPolicy.after(_:jitteredUpTo:)((double)(unint64_t)v88);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v33, v72);
}

void static TimelineReloadPolicy.after(_:jitteredUpTo:)(double a1)
{
  uint64_t v2 = sub_1001232B0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10010B9A8(v6, 0.0, a1);
  sub_100123250();
  sub_100125900();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_10010BA78(0, (unint64_t *)&qword_10015D9A8, (uint64_t (*)(uint64_t))sub_10002FA80, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001276F0;
  sub_10010BBF0(&qword_10015E758, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v8 = sub_1001264F0();
  uint64_t v10 = v9;
  *(void *)(v7 + 56) = &type metadata for String;
  unint64_t v11 = sub_100005648();
  *(void *)(v7 + 64) = v11;
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  *(void *)(v7 + 96) = &type metadata for Double;
  *(void *)(v7 + 104) = &protocol witness table for Double;
  *(double *)(v7 + 72) = a1;
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_100125930();
  sub_100126270();
  uint64_t v12 = v15;
  unint64_t v13 = v16;
  *(void *)(v7 + 136) = &type metadata for String;
  *(void *)(v7 + 144) = v11;
  *(void *)(v7 + 112) = v12;
  *(void *)(v7 + 120) = v13;
  sub_100005550();
  uint64_t v14 = (void *)sub_100125FF0();
  sub_100125F60();
  sub_100124520();
  swift_bridgeObjectRelease();
}

uint64_t sub_10010B9A8(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = swift_stdlib_random();
  if (v5 * ((double)0 * 1.11022302e-16) + a2 == a3) {
    return sub_10010B9A8(v6, a2, a3);
  }
  return result;
}

uint64_t type metadata accessor for ReloadPolicyProvider()
{
  return self;
}

void sub_10010BA78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_10010BADC()
{
  unint64_t result = qword_100164310;
  if (!qword_100164310)
  {
    sub_10010BA78(255, &qword_100164308, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Array);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164310);
  }
  return result;
}

uint64_t sub_10010BB64(uint64_t a1)
{
  sub_10010BA78(0, &qword_10015E740, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10010BBF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for HeadlineAttribution(uint64_t a1)
{
  return sub_100014114(*(void **)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for HeadlineAttribution(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  sub_1000140D4(v3, v4, v5, v6, v7);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  return a1;
}

uint64_t assignWithCopy for HeadlineAttribution(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  sub_1000140D4(v3, v4, v5, v6, v7);
  unint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  char v12 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  sub_100014114(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for HeadlineAttribution(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  char v8 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v3;
  sub_100014114(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineAttribution(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineAttribution(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineAttribution()
{
  return &type metadata for HeadlineAttribution;
}

uint64_t sub_10010BE38(char a1)
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unsigned int v3 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
  if (a1)
  {
    v8._countAndFlagsBits = 0x80000001001333E0;
    uint64_t v4 = 0x206F6F686159;
  }
  else
  {
    v8._countAndFlagsBits = 0x8000000100133410;
    uint64_t v4 = 0x20656C707041;
  }
  v9._countAndFlagsBits = v4 & 0xFFFFFFFFFFFFLL | 0x654E000000000000;
  v9._object = (void *)0xEA00000000007377;
  v10.value._countAndFlagsBits = 0;
  v10.value._object = 0;
  v5.super.Class isa = v3;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  uint64_t v6 = sub_100123070(v9, v10, v5, v11, v8);

  return v6;
}

uint64_t sub_10010BF28(void *a1, int a2)
{
  int v20 = a2;
  sub_1001104F8(0, &qword_1001643E0, (uint64_t (*)(void))sub_1001102A4, (uint64_t)&type metadata for HeadlineAttribution.NewsSourceAttribution.YahooCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v18 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  __chkstk_darwin(v3);
  NSBundle v5 = (char *)&v15 - v4;
  sub_1001104F8(0, &qword_1001643E8, (uint64_t (*)(void))sub_1001102F8, (uint64_t)&type metadata for HeadlineAttribution.NewsSourceAttribution.AppleNewsCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v16 = *(void *)(v6 - 8);
  uint64_t v17 = v6;
  __chkstk_darwin(v6);
  Swift::String v8 = (char *)&v15 - v7;
  sub_1001104F8(0, &qword_1001643F0, (uint64_t (*)(void))sub_10011034C, (uint64_t)&type metadata for HeadlineAttribution.NewsSourceAttribution.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v15 - v12;
  sub_100009D98(a1, a1[3]);
  sub_10011034C();
  sub_100126650();
  if (v20)
  {
    char v22 = 1;
    sub_1001102A4();
    sub_100126420();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v19);
  }
  else
  {
    char v21 = 0;
    sub_1001102F8();
    sub_100126420();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10010C23C(void *a1)
{
  uint64_t v2 = v1;
  sub_1001104F8(0, &qword_1001643F8, (uint64_t (*)(void))sub_100110450, (uint64_t)&type metadata for HeadlineAttribution.PublisherAttribution.NameCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v5 = v4;
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - v6;
  sub_1001104F8(0, &qword_100164400, (uint64_t (*)(void))sub_1001104A4, (uint64_t)&type metadata for HeadlineAttribution.PublisherAttribution.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v9 = v8;
  uint64_t v23 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - v10;
  sub_100009D98(a1, a1[3]);
  sub_1001104A4();
  sub_100126650();
  sub_10010FEB4(v2, (uint64_t)&v21);
  if (v22)
  {
    sub_100110450();
    sub_100126420();
    sub_100126480();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  }
  else
  {
    uint64_t v12 = v21;
    uint64_t v13 = sub_1001261B0();
    swift_allocError();
    uint64_t v15 = v14;
    sub_100110560();
    v15[3] = (uint64_t)&type metadata for HeadlineAttribution.PublisherAttribution;
    uint64_t v16 = swift_allocObject();
    *uint64_t v15 = v16;
    sub_10010FEB4(v2, v16 + 16);
    id v17 = v12;
    sub_10011060C((uint64_t)v2);
    sub_100126430();
    sub_100126190();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, enum case for EncodingError.invalidValue(_:), v13);
    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v9);
}

uint64_t sub_10010C59C(void *a1)
{
  uint64_t v3 = v1;
  sub_1001104F8(0, &qword_100164340, (uint64_t (*)(void))sub_10010FCF0, (uint64_t)&type metadata for HeadlineAttribution.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v9 = &v11[-v8];
  sub_100009D98(a1, a1[3]);
  sub_10010FCF0();
  sub_100126650();
  sub_10010FDEC(v3, (uint64_t)&v14);
  sub_10010FDEC((uint64_t)&v14, (uint64_t)v11);
  char v13 = 0;
  sub_10010FE60();
  sub_100126470();
  if (!v2)
  {
    sub_10010FEB4((long long *)(v3 + 8), (uint64_t)v12);
    sub_10010FEB4(v12, (uint64_t)v11);
    char v13 = 1;
    sub_10010FECC();
    sub_1001264C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10010C784()
{
  return 0;
}

uint64_t sub_10010C790@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_10010C7C0(uint64_t a1)
{
  unint64_t v2 = sub_1001102F8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10010C7FC(uint64_t a1)
{
  unint64_t v2 = sub_1001102F8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10010C838()
{
  if (*v0) {
    return 0x6F6F686179;
  }
  else {
    return 0x77654E656C707061;
  }
}

uint64_t sub_10010C874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10010F044(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10010C89C(uint64_t a1)
{
  unint64_t v2 = sub_10011034C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10010C8D8(uint64_t a1)
{
  unint64_t v2 = sub_10011034C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10010C914(uint64_t a1)
{
  unint64_t v2 = sub_1001102A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10010C950(uint64_t a1)
{
  unint64_t v2 = sub_1001102A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10010C98C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10010F13C(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_10010C9BC(void *a1)
{
  return sub_10010BF28(a1, *v1);
}

Swift::Int sub_10010C9D8()
{
  return sub_100126630();
}

uint64_t sub_10010CA24()
{
  return sub_100125BA0();
}

Swift::Int sub_10010CA34()
{
  return sub_100126630();
}

uint64_t sub_10010CA7C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_1001510E0;
  v7._object = v3;
  Swift::Int v5 = sub_100126340(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_10010CAD0(void *a1@<X8>)
{
  *a1 = 1701667182;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_10010CAE4()
{
  return 1701667182;
}

uint64_t sub_10010CAF4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = a1;
  v5._rawValue = &off_100151118;
  v8._object = a2;
  Swift::Int v6 = sub_100126340(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_10010CB4C(uint64_t a1)
{
  unint64_t v2 = sub_1001104A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10010CB88(uint64_t a1)
{
  unint64_t v2 = sub_1001104A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10010CBC4()
{
  return 12383;
}

uint64_t sub_10010CBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_100126530();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10010CC50(uint64_t a1)
{
  unint64_t v2 = sub_100110450();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10010CC8C(uint64_t a1)
{
  unint64_t v2 = sub_100110450();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10010CCC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10010F600(a1, (uint64_t *)v5);
  if (!v2) {
    return sub_10010FEB4(v5, a2);
  }
  return result;
}

uint64_t sub_10010CD10(void *a1)
{
  sub_10010FEB4(v1, (uint64_t)v4);
  return sub_10010C23C(a1);
}

uint64_t sub_10010CD60()
{
  if (*v0) {
    return 0x656873696C627570;
  }
  else {
    return 0x72756F537377656ELL;
  }
}

uint64_t sub_10010CDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10010F9B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10010CDCC(uint64_t a1)
{
  unint64_t v2 = sub_10010FCF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10010CE08(uint64_t a1)
{
  unint64_t v2 = sub_10010FCF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10010CE44@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10010FAC4(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_10010CE88(void *a1)
{
  return sub_10010C59C(a1);
}

void sub_10010CEC4()
{
  qword_1001727C8 = 0x4024000000000000;
}

uint64_t sub_10010CED4@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v174 = a2;
  sub_1001111B4(0, &qword_1001645C0, (uint64_t (*)(uint64_t))sub_10011209C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
  uint64_t v173 = v3;
  __chkstk_darwin(v3);
  uint64_t v157 = (uint64_t)&v137 - v4;
  sub_1001111B4(0, &qword_1001601E8, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Design, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v5 - 8);
  long long v149 = (char *)&v137 - v6;
  sub_1001120BC();
  uint64_t v155 = *(void *)(v7 - 8);
  uint64_t v156 = v7;
  __chkstk_darwin(v7);
  uint64_t v154 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v164 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v137 - v10);
  sub_100112220(0, &qword_1001645E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v170 = v11;
  __chkstk_darwin(v11);
  uint64_t v172 = (uint64_t)&v137 - v12;
  sub_1001111B4(0, &qword_100164580, (uint64_t (*)(uint64_t))sub_100111D68, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
  uint64_t v171 = v13;
  __chkstk_darwin(v13);
  uint64_t v153 = (uint64_t)&v137 - v14;
  uint64_t v15 = sub_1001255B0();
  uint64_t v147 = *(void *)(v15 - 8);
  uint64_t v148 = v15;
  __chkstk_darwin(v15);
  uint64_t v146 = (char *)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001111B4(0, &qword_100163980, (uint64_t (*)(uint64_t))&type metadata accessor for Image.TemplateRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v17 - 8);
  uint64_t v145 = (char *)&v137 - v18;
  sub_100111FE0();
  uint64_t v151 = *(void *)(v19 - 8);
  uint64_t v152 = v19;
  __chkstk_darwin(v19);
  uint64_t v150 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v137 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t))((char *)&v137 - v22);
  uint64_t v23 = sub_100125750();
  uint64_t v139 = *(void *)(v23 - 8);
  uint64_t v140 = v23;
  __chkstk_darwin(v23);
  long long v138 = (char *)&v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100111EBC();
  uint64_t v143 = *(void *)(v25 - 8);
  uint64_t v144 = v25;
  __chkstk_darwin(v25);
  uint64_t v142 = (char *)&v137 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100111E30(0);
  uint64_t v28 = v27;
  uint64_t v158 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v141 = (char *)&v137 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001111B4(0, &qword_100164590, (uint64_t (*)(uint64_t))sub_100111E30, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v30 - 8);
  uint64_t v175 = (char *)&v137 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v165 = (uint64_t)&v137 - v33;
  __chkstk_darwin(v34);
  id v36 = (char *)&v137 - v35;
  sub_100112220(0, &qword_100164578, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  __chkstk_darwin(v37 - 8);
  uint64_t v169 = (uint64_t)&v137 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v168 = (char *)&v137 - v40;
  uint64_t v41 = sub_1001258F0();
  uint64_t v42 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  id v44 = (char *)&v137 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)&v137 - v46;
  sub_1001111B4(0, &qword_100164528, (uint64_t (*)(uint64_t))sub_100111A04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v48 - 8);
  uint64_t v167 = (uint64_t)&v137 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v52 = (char *)&v137 - v51;
  int v53 = *a1;
  uint64_t v176 = a1;
  uint64_t v166 = (uint64_t)&v137 - v51;
  uint64_t v162 = v42;
  uint64_t v163 = (void (*)(void, void))v41;
  uint64_t v160 = v44;
  uint64_t v161 = v47;
  if (v53 == 2)
  {
    sub_100111A04();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v52, 1, 1, v54);
  }
  else
  {
    sub_10010E798(v53 & 1, (uint64_t)&v183);
    long long v177 = v183;
    long long v178 = v184;
    long long v179 = v185;
    long long v180 = *(_OWORD *)v186;
    uint64_t v181 = *(void *)&v186[16];
    char v182 = v187;
    type metadata accessor for HeadlineAttributionView();
    sub_10005EEE4((uint64_t)v47);
    (*(void (**)(char *, void, uint64_t))(v42 + 104))(v44, enum case for WidgetFamily.systemSmall(_:), v41);
    sub_100112AEC(&qword_10015FB40, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    sub_100125C60();
    sub_100125C60();
    uint64_t v55 = *(void (**)(char *, uint64_t))(v42 + 8);
    v55(v44, v41);
    v55(v47, v41);
    sub_1001111B4(0, &qword_100164538, (uint64_t (*)(uint64_t))sub_100111AB8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
    sub_100111BA8();
    a1 = v176;
    sub_1001253D0();
    j__swift_release();
    sub_100111A04();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v52, 0, 1, v56);
  }
  uint64_t v58 = (void *)*((void *)a1 + 1);
  uint64_t v57 = *((void *)a1 + 2);
  if (a1[40])
  {
    if (*a1 == 2)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56))(v175, 1, 1, v28);
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v61 = v138;
      sub_100125740();
      *(void *)&long long v183 = swift_getKeyPath();
      BYTE8(v183) = 0;
      sub_100112AEC(&qword_1001645A8, (void (*)(uint64_t))&type metadata accessor for Divider);
      sub_100111F8C();
      uint64_t v62 = v142;
      uint64_t v63 = v140;
      sub_100125420();
      swift_release();
      (*(void (**)(char *, uint64_t))(v139 + 8))(v61, v63);
      if (qword_10015D620 != -1) {
        swift_once();
      }
      sub_1001257D0();
      sub_100124990();
      uint64_t v65 = v143;
      uint64_t v64 = v144;
      uint64_t v66 = (uint64_t)v141;
      (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v141, v62, v144);
      id v67 = (_OWORD *)(v66 + *(int *)(v28 + 36));
      long long v68 = v191;
      *id v67 = v190;
      v67[1] = v68;
      v67[2] = v192;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
      unint64_t v69 = v175;
      sub_100112418(v66, (uint64_t)v175);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v69, 0, 1, v28);
    }
    *(void *)&long long v183 = v58;
    *((void *)&v183 + 1) = v57;
    sub_10001BA50();
    uint64_t v70 = sub_100125350();
    uint64_t v72 = v71;
    char v74 = v73;
    if (qword_10015D620 != -1) {
      swift_once();
    }
    sub_100125190();
    uint64_t v75 = sub_100125180();
    uint64_t v76 = (uint64_t)v149;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v149, 1, 1, v75);
    sub_1001251E0();
    uint64_t v159 = (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional;
    sub_1001124EC(v76, &qword_1001601E8, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Design, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v77 = sub_1001252E0();
    uint64_t v79 = v78;
    char v81 = v80;
    uint64_t v83 = v82;
    swift_release();
    sub_10001BAA4(v70, v72, v74 & 1);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1001257D0();
    sub_100124990();
    *(void *)&long long v183 = v77;
    *((void *)&v183 + 1) = v79;
    LOBYTE(v184) = v81 & 1;
    *((void *)&v184 + 1) = v83;
    *(void *)&long long v185 = KeyPath;
    *((void *)&v185 + 1) = 1;
    v186[0] = 0;
    *(void *)&v186[8] = v177;
    v186[16] = BYTE8(v177);
    uint64_t v187 = v178;
    char v188 = BYTE8(v178);
    long long v189 = v179;
    type metadata accessor for HeadlineAttributionView();
    uint64_t v85 = (uint64_t)v161;
    sub_10005EEE4((uint64_t)v161);
    uint64_t v87 = v162;
    uint64_t v86 = v163;
    uint64_t v88 = v160;
    (*(void (**)(char *, void, void (*)(void, void)))(v162 + 104))(v160, enum case for WidgetFamily.systemSmall(_:), v163);
    sub_100112AEC(&qword_10015FB40, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    sub_100125C60();
    sub_100125C60();
    uint64_t v89 = *(void (**)(char *, void))(v87 + 8);
    v89(v88, v86);
    v89((char *)v85, v86);
    sub_100112178(0);
    sub_1001121A0(&qword_1001645E0, sub_100112178, (void (*)(void))sub_10001BABC);
    uint64_t v90 = v164;
    sub_1001253D0();
    sub_10001BAA4(v183, *((uint64_t *)&v183 + 1), v184);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v91 = v165;
    uint64_t v92 = v159;
    sub_10011247C((uint64_t)v175, v165, &qword_100164590, (uint64_t (*)(uint64_t))sub_100111E30, v159);
    uint64_t v94 = v154;
    uint64_t v93 = v155;
    uint64_t v95 = *(void (**)(char *, uint64_t (*)(uint64_t, uint64_t), uint64_t))(v155 + 16);
    uint64_t v96 = v156;
    v95((char *)v154, v90, v156);
    uint64_t v97 = v157;
    sub_10011247C(v91, v157, &qword_100164590, (uint64_t (*)(uint64_t))sub_100111E30, v92);
    sub_10011209C(0);
    v95((char *)(v97 + *(int *)(v98 + 48)), v94, v96);
    uint64_t v176 = *(char **)(v93 + 8);
    ((void (*)(uint64_t (*)(uint64_t, uint64_t), uint64_t))v176)(v94, v96);
    sub_1001124EC(v91, &qword_100164590, (uint64_t (*)(uint64_t))sub_100111E30, v92);
    sub_10011247C(v97, v172, &qword_1001645C0, (uint64_t (*)(uint64_t))sub_10011209C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    swift_storeEnumTagMultiPayload();
    sub_1001127CC(&qword_1001645F0, &qword_100164580, (uint64_t (*)(uint64_t))sub_100111D68);
    sub_1001127CC(&qword_1001645F8, &qword_1001645C0, (uint64_t (*)(uint64_t))sub_10011209C);
    uint64_t v99 = (uint64_t)v168;
    sub_100124F80();
    sub_1001124EC(v97, &qword_1001645C0, (uint64_t (*)(uint64_t))sub_10011209C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    ((void (*)(uint64_t (*)(uint64_t, uint64_t), uint64_t))v176)(v164, v96);
    uint64_t v100 = (uint64_t)v175;
  }
  else
  {
    id v59 = v58;
    uint64_t v60 = v160;
    if (qword_10015D620 != -1) {
      swift_once();
    }
    if (*a1 == 2)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56))(v36, 1, 1, v28);
    }
    else
    {
      uint64_t v101 = v138;
      sub_100125740();
      *(void *)&long long v183 = swift_getKeyPath();
      BYTE8(v183) = 0;
      sub_100112AEC(&qword_1001645A8, (void (*)(uint64_t))&type metadata accessor for Divider);
      sub_100111F8C();
      uint64_t v102 = v142;
      uint64_t v103 = v140;
      sub_100125420();
      swift_release();
      (*(void (**)(char *, uint64_t))(v139 + 8))(v101, v103);
      sub_1001257D0();
      sub_100124990();
      uint64_t v105 = v143;
      uint64_t v104 = v144;
      uint64_t v106 = (uint64_t)v141;
      (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v141, v102, v144);
      long long v107 = (_OWORD *)(v106 + *(int *)(v28 + 36));
      long long v108 = v191;
      *long long v107 = v190;
      v107[1] = v108;
      v107[2] = v192;
      (*(void (**)(char *, uint64_t))(v105 + 8))(v102, v104);
      sub_100112418(v106, (uint64_t)v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v36, 0, 1, v28);
    }
    uint64_t v175 = (char *)v59;
    sub_100125590();
    uint64_t v109 = enum case for Image.TemplateRenderingMode.template(_:);
    uint64_t v110 = sub_1001255E0();
    uint64_t v111 = *(void *)(v110 - 8);
    uint64_t v112 = (uint64_t)v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v111 + 104))(v145, v109, v110);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v111 + 56))(v112, 0, 1, v110);
    sub_1001255C0();
    swift_release();
    uint64_t v164 = (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional;
    sub_1001124EC(v112, &qword_100163980, (uint64_t (*)(uint64_t))&type metadata accessor for Image.TemplateRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    long long v114 = v146;
    uint64_t v113 = v147;
    uint64_t v115 = v148;
    (*(void (**)(char *, void, uint64_t))(v147 + 104))(v146, enum case for Image.ResizingMode.stretch(_:), v148);
    uint64_t v116 = sub_100125610();
    swift_release();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v115);
    sub_1001257D0();
    sub_100124990();
    long long v183 = (unint64_t)v116;
    LOWORD(v184) = 1;
    *((void *)&v184 + 1) = v177;
    LOBYTE(v185) = BYTE8(v177);
    *((void *)&v185 + 1) = v178;
    v186[0] = BYTE8(v178);
    *(_OWORD *)&v186[8] = v179;
    type metadata accessor for HeadlineAttributionView();
    uint64_t v117 = (uint64_t)v161;
    sub_10005EEE4((uint64_t)v161);
    uint64_t v119 = v162;
    uint64_t v118 = v163;
    (*(void (**)(char *, void, void (*)(void, void)))(v162 + 104))(v60, enum case for WidgetFamily.systemSmall(_:), v163);
    sub_100112AEC(&qword_10015FB40, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    sub_100125C60();
    sub_100125C60();
    unsigned __int8 v120 = *(void (**)(char *, void))(v119 + 8);
    v120(v60, v118);
    v120((char *)v117, v118);
    sub_100111B20(0);
    sub_1001121A0(&qword_100164568, sub_100111B20, (void (*)(void))sub_100111CF8);
    uint64_t v121 = v159;
    sub_1001253D0();
    swift_release();
    uint64_t v122 = (uint64_t)v36;
    uint64_t v176 = v36;
    int v123 = v164;
    uint64_t v124 = v165;
    sub_10011247C(v122, v165, &qword_100164590, (uint64_t (*)(uint64_t))sub_100111E30, v164);
    uint64_t v126 = v150;
    uint64_t v125 = v151;
    __int16 v127 = *(void (**)(char *, uint64_t (*)(uint64_t, uint64_t), uint64_t))(v151 + 16);
    uint64_t v128 = v152;
    v127((char *)v150, v121, v152);
    uint64_t v129 = v153;
    sub_10011247C(v124, v153, &qword_100164590, (uint64_t (*)(uint64_t))sub_100111E30, v123);
    sub_100111D68(0);
    v127((char *)(v129 + *(int *)(v130 + 48)), v126, v128);
    uint64_t v163 = *(void (**)(void, void))(v125 + 8);
    v163(v126, v128);
    sub_1001124EC(v124, &qword_100164590, (uint64_t (*)(uint64_t))sub_100111E30, v123);
    sub_10011247C(v129, v172, &qword_100164580, (uint64_t (*)(uint64_t))sub_100111D68, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    swift_storeEnumTagMultiPayload();
    sub_1001127CC(&qword_1001645F0, &qword_100164580, (uint64_t (*)(uint64_t))sub_100111D68);
    sub_1001127CC(&qword_1001645F8, &qword_1001645C0, (uint64_t (*)(uint64_t))sub_10011209C);
    uint64_t v99 = (uint64_t)v168;
    uint64_t v100 = (uint64_t)v176;
    sub_100124F80();

    sub_1001124EC(v129, &qword_100164580, (uint64_t (*)(uint64_t))sub_100111D68, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    v163(v159, v128);
  }
  sub_1001124EC(v100, &qword_100164590, (uint64_t (*)(uint64_t))sub_100111E30, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v132 = v166;
  uint64_t v131 = v167;
  sub_10011247C(v166, v167, &qword_100164528, (uint64_t (*)(uint64_t))sub_100111A04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  uint64_t v133 = v169;
  sub_1001122F4(v99, v169);
  uint64_t v134 = v174;
  sub_10011247C(v131, v174, &qword_100164528, (uint64_t (*)(uint64_t))sub_100111A04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  sub_100111948();
  sub_1001122F4(v133, v134 + *(int *)(v135 + 48));
  sub_100112374(v99);
  sub_1001124EC(v132, &qword_100164528, (uint64_t (*)(uint64_t))sub_100111A04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  sub_100112374(v133);
  return sub_1001124EC(v131, &qword_100164528, (uint64_t (*)(uint64_t))sub_100111A04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
}

double sub_10010E798@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_1001111B4(0, &qword_100163980, (uint64_t (*)(uint64_t))&type metadata accessor for Image.TemplateRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - v5;
  uint64_t v7 = sub_1001255B0();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void (**)(char *, void, uint64_t))(v10 + 104);
  uint64_t v12 = (void (**)(char *, uint64_t))(v10 + 8);
  if (a1)
  {
    sub_100125620();
    (*v11)(v9, enum case for Image.ResizingMode.stretch(_:), v7);
    sub_100125610();
    swift_release();
    (*v12)(v9, v7);
    uint64_t v17 = enum case for Image.TemplateRenderingMode.template(_:);
    uint64_t v18 = sub_1001255E0();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 104))(v6, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v6, 0, 1, v18);
    uint64_t v20 = sub_1001255C0();
    swift_release();
    sub_1001124EC((uint64_t)v6, &qword_100163980, (uint64_t (*)(uint64_t))&type metadata accessor for Image.TemplateRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    uint64_t v27 = v20;
    long long v28 = xmmword_100127710;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    char v32 = 1;
  }
  else
  {
    sub_1001255D0();
    (*v11)(v9, enum case for Image.ResizingMode.stretch(_:), v7);
    sub_100125610();
    swift_release();
    (*v12)(v9, v7);
    uint64_t v13 = enum case for Image.TemplateRenderingMode.template(_:);
    uint64_t v14 = sub_1001255E0();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 104))(v6, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
    uint64_t v16 = sub_1001255C0();
    swift_release();
    sub_1001124EC((uint64_t)v6, &qword_100163980, (uint64_t (*)(uint64_t))&type metadata accessor for Image.TemplateRenderingMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (qword_10015D620 != -1) {
      swift_once();
    }
    sub_1001257D0();
    sub_100124990();
    uint64_t v27 = v16;
    long long v28 = xmmword_100127710;
    *(void *)&long long v29 = v39;
    *((void *)&v29 + 1) = v40;
    *(void *)&long long v30 = v41;
    *((void *)&v30 + 1) = v42;
    long long v31 = v43;
    char v32 = 0;
  }
  sub_100111B20(0);
  sub_100111B48();
  sub_1001121A0(&qword_100164568, sub_100111B20, (void (*)(void))sub_100111CF8);
  sub_100111CF8();
  sub_100124F80();
  double result = *(double *)&v33;
  long long v22 = v34;
  long long v23 = v35;
  long long v24 = v36;
  uint64_t v25 = v37;
  char v26 = v38;
  *(_OWORD *)a2 = v33;
  *(_OWORD *)(a2 + 16) = v22;
  *(_OWORD *)(a2 + 32) = v23;
  *(_OWORD *)(a2 + 48) = v24;
  *(void *)(a2 + 64) = v25;
  *(unsigned char *)(a2 + 72) = v26;
  return result;
}

uint64_t sub_10010ECDC@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_100124E70();
  *(void *)(a1 + 8) = 0x4010000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_1001118B0();
  return sub_10010CED4(v1, a1 + *(int *)(v3 + 44));
}

double sub_10010ED24@<D0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100125500();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100125010();
  sub_1001250E0();
  sub_1001250E0();
  sub_100032BBC(a1, a2 & 1);
  sub_1000603C4(a1, a2 & 1);
  sub_100032D54(a1, a2 & 1);
  sub_1001257D0();
  sub_100124990();
  *(void *)a3 = KeyPath;
  *(void *)(a3 + 8) = v6;
  *(void *)(a3 + 16) = 0x3FE8000000000000;
  *(void *)(a3 + 24) = v9;
  *(unsigned char *)(a3 + 32) = v10;
  *(void *)(a3 + 40) = v11;
  *(unsigned char *)(a3 + 48) = v12;
  double result = *(double *)&v13;
  *(_OWORD *)(a3 + 56) = v13;
  return result;
}

double sub_10010EE50@<D0>(uint64_t a1@<X8>)
{
  return sub_10010ED24(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

double sub_10010EE5C@<D0>(uint64_t a1@<X8>)
{
  sub_1001257F0();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_10010EEA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ShapeRole.separator(_:);
  uint64_t v3 = sub_100125800();
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_10010EF18()
{
  return Shape.sizeThatFits(_:)();
}

uint64_t sub_10010EF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100112BB0();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10010EF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100112BB0();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10010EFF8(uint64_t a1)
{
  unint64_t v2 = sub_100112BB0();

  return Shape.body.getter(a1, v2);
}

uint64_t sub_10010F044(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x77654E656C707061 && a2 == 0xE900000000000073;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6F686179 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10010F13C(uint64_t a1)
{
  sub_1001104F8(0, &qword_100164380, (uint64_t (*)(void))sub_1001102A4, (uint64_t)&type metadata for HeadlineAttribution.NewsSourceAttribution.YahooCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  long long v30 = (char *)&v24 - v3;
  sub_1001104F8(0, &qword_100164390, (uint64_t (*)(void))sub_1001102F8, (uint64_t)&type metadata for HeadlineAttribution.NewsSourceAttribution.AppleNewsCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v5 = v4;
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - v6;
  sub_1001104F8(0, &qword_1001643A0, (uint64_t (*)(void))sub_10011034C, (uint64_t)&type metadata for HeadlineAttribution.NewsSourceAttribution.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v9 = v8;
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - v10;
  sub_100009D98((void *)a1, *(void *)(a1 + 24));
  sub_10011034C();
  uint64_t v12 = v31;
  sub_100126640();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v25 = v5;
  uint64_t v14 = v29;
  long long v13 = v30;
  uint64_t v31 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_100126400();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v19 = sub_100126180();
    swift_allocError();
    uint64_t v21 = v20;
    sub_1001103A0();
    *uint64_t v21 = &type metadata for HeadlineAttribution.NewsSourceAttribution;
    sub_100126360();
    sub_100126160();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, enum case for DecodingError.typeMismatch(_:), v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
    a1 = v31;
LABEL_7:
    sub_100009D48(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v16 + 32);
  if (a1)
  {
    uint64_t v17 = *(unsigned __int8 *)(v16 + 32);
    char v33 = 1;
    sub_1001102A4();
    sub_100126350();
    uint64_t v18 = v28;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v9);
    a1 = v17;
  }
  else
  {
    char v32 = 0;
    sub_1001102F8();
    sub_100126350();
    uint64_t v22 = v28;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v9);
  }
  sub_100009D48(v31);
  return a1;
}

uint64_t sub_10010F600@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v26 = a2;
  sub_1001104F8(0, &qword_1001643C0, (uint64_t (*)(void))sub_100110450, (uint64_t)&type metadata for HeadlineAttribution.PublisherAttribution.NameCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v4 = v3;
  uint64_t v28 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - v5;
  sub_1001104F8(0, &qword_1001643D0, (uint64_t (*)(void))sub_1001104A4, (uint64_t)&type metadata for HeadlineAttribution.PublisherAttribution.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v8 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - v9;
  sub_100009D98(a1, a1[3]);
  sub_1001104A4();
  uint64_t v11 = v29;
  sub_100126640();
  if (v11) {
    return sub_100009D48((uint64_t)a1);
  }
  uint64_t v12 = v28;
  if (*(void *)(sub_100126400() + 16) != 1)
  {
    uint64_t v13 = sub_100126180();
    swift_allocError();
    uint64_t v14 = a1;
    uint64_t v16 = v15;
    sub_1001103A0();
    *uint64_t v16 = &type metadata for HeadlineAttribution.PublisherAttribution;
    sub_100126360();
    sub_100126160();
    uint64_t v17 = v16;
    a1 = v14;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v17, enum case for DecodingError.typeMismatch(_:), v13);
    swift_willThrow();
    uint64_t v18 = v27;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
    return sub_100009D48((uint64_t)a1);
  }
  sub_100110450();
  sub_100126350();
  uint64_t v19 = sub_1001263B0();
  uint64_t v20 = v6;
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
  uint64_t result = sub_100009D48((uint64_t)a1);
  uint64_t v24 = v26;
  *uint64_t v26 = v19;
  v24[1] = v22;
  void v24[2] = 0;
  v24[3] = 0;
  *((unsigned char *)v24 + 32) = 1;
  return result;
}

uint64_t sub_10010F9B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72756F537377656ELL && a2 == 0xEA00000000006563;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656873696C627570 && a2 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10010FAC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1001104F8(0, &qword_100164320, (uint64_t (*)(void))sub_10010FCF0, (uint64_t)&type metadata for HeadlineAttribution.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - v7;
  sub_100009D98(a1, a1[3]);
  sub_10010FCF0();
  sub_100126640();
  if (v2) {
    return sub_100009D48((uint64_t)a1);
  }
  uint64_t v9 = v16;
  char v21 = 0;
  sub_10010FD44();
  sub_1001263A0();
  char v10 = v17;
  char v21 = 1;
  sub_10010FD98();
  sub_1001263F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v15 = v17;
  uint64_t v11 = v18;
  uint64_t v12 = v19;
  char v13 = v20;
  uint64_t result = sub_100009D48((uint64_t)a1);
  *(unsigned char *)uint64_t v9 = v10;
  *(_OWORD *)(v9 + 8) = v15;
  *(void *)(v9 + 24) = v11;
  *(void *)(v9 + 32) = v12;
  *(unsigned char *)(v9 + 40) = v13;
  return result;
}

unint64_t sub_10010FCF0()
{
  unint64_t result = qword_100164328;
  if (!qword_100164328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164328);
  }
  return result;
}

unint64_t sub_10010FD44()
{
  unint64_t result = qword_100164330;
  if (!qword_100164330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164330);
  }
  return result;
}

unint64_t sub_10010FD98()
{
  unint64_t result = qword_100164338;
  if (!qword_100164338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164338);
  }
  return result;
}

uint64_t sub_10010FDEC(uint64_t a1, uint64_t a2)
{
  sub_1000419C4(0, &qword_100164348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10010FE60()
{
  unint64_t result = qword_100164350;
  if (!qword_100164350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164350);
  }
  return result;
}

uint64_t sub_10010FEB4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_10010FECC()
{
  unint64_t result = qword_100164358;
  if (!qword_100164358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164358);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineAttribution.CodingKeys()
{
  return &type metadata for HeadlineAttribution.CodingKeys;
}

uint64_t destroy for HeadlineAttribution.PublisherAttribution(uint64_t a1)
{
  return sub_100014114(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for HeadlineAttribution.PublisherAttribution(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1000140D4(*(void **)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for HeadlineAttribution.PublisherAttribution(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1000140D4(*(void **)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_100014114(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for HeadlineAttribution.PublisherAttribution(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HeadlineAttribution.PublisherAttribution(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_100014114(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineAttribution.PublisherAttribution(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineAttribution.PublisherAttribution(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100110110(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_100110118(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineAttribution.PublisherAttribution()
{
  return &type metadata for HeadlineAttribution.PublisherAttribution;
}

ValueMetadata *type metadata accessor for HeadlineAttribution.NewsSourceAttribution()
{
  return &type metadata for HeadlineAttribution.NewsSourceAttribution;
}

unint64_t sub_100110148()
{
  unint64_t result = qword_100164360;
  if (!qword_100164360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164360);
  }
  return result;
}

unint64_t sub_1001101A0()
{
  unint64_t result = qword_100164368;
  if (!qword_100164368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164368);
  }
  return result;
}

unint64_t sub_1001101F8()
{
  unint64_t result = qword_100164370;
  if (!qword_100164370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164370);
  }
  return result;
}

unint64_t sub_100110250()
{
  unint64_t result = qword_100164378;
  if (!qword_100164378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164378);
  }
  return result;
}

unint64_t sub_1001102A4()
{
  unint64_t result = qword_100164388;
  if (!qword_100164388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164388);
  }
  return result;
}

unint64_t sub_1001102F8()
{
  unint64_t result = qword_100164398;
  if (!qword_100164398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164398);
  }
  return result;
}

unint64_t sub_10011034C()
{
  unint64_t result = qword_1001643A8;
  if (!qword_1001643A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001643A8);
  }
  return result;
}

void sub_1001103A0()
{
  if (!qword_1001643B0)
  {
    sub_100110410();
    sub_100126170();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1001643B0);
    }
  }
}

unint64_t sub_100110410()
{
  unint64_t result = qword_1001643B8;
  if (!qword_1001643B8)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1001643B8);
  }
  return result;
}

unint64_t sub_100110450()
{
  unint64_t result = qword_1001643C8;
  if (!qword_1001643C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001643C8);
  }
  return result;
}

unint64_t sub_1001104A4()
{
  unint64_t result = qword_1001643D8;
  if (!qword_1001643D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001643D8);
  }
  return result;
}

void sub_1001104F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_100110560()
{
  if (!qword_100164408)
  {
    sub_1001261A0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100164408);
    }
  }
}

uint64_t sub_1001105CC()
{
  sub_100014114(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_10011060C(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for HeadlineAttribution.PublisherAttribution.CodingKeys()
{
  return &type metadata for HeadlineAttribution.PublisherAttribution.CodingKeys;
}

unsigned char *_s12StocksWidget19HeadlineAttributionV20PublisherAttributionO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001106F8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineAttribution.PublisherAttribution.NameCodingKeys()
{
  return &type metadata for HeadlineAttribution.PublisherAttribution.NameCodingKeys;
}

unsigned char *_s12StocksWidget19HeadlineAttributionV21NewsSourceAttributionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001107FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineAttribution.NewsSourceAttribution.CodingKeys()
{
  return &type metadata for HeadlineAttribution.NewsSourceAttribution.CodingKeys;
}

ValueMetadata *type metadata accessor for HeadlineAttribution.NewsSourceAttribution.AppleNewsCodingKeys()
{
  return &type metadata for HeadlineAttribution.NewsSourceAttribution.AppleNewsCodingKeys;
}

ValueMetadata *type metadata accessor for HeadlineAttribution.NewsSourceAttribution.YahooCodingKeys()
{
  return &type metadata for HeadlineAttribution.NewsSourceAttribution.YahooCodingKeys;
}

unsigned char *sub_100110854(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)unsigned int v4 = *a2;
    unsigned int v4 = (unsigned char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = (void *)a2[1];
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    uint64_t v10 = a2[4];
    char v11 = *((unsigned char *)a2 + 40);
    sub_1000140D4(v7, v8, v9, v10, v11);
    *((void *)v4 + 1) = v7;
    *((void *)v4 + 2) = v8;
    *((void *)v4 + 3) = v9;
    *((void *)v4 + 4) = v10;
    unsigned char v4[40] = v11;
    uint64_t v12 = *(int *)(a3 + 20);
    char v13 = &v4[v12];
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_1001111B4(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *char v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = &v4[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    sub_100032BBC(*(void *)v19, v21);
    *(void *)uint64_t v18 = v20;
    v18[8] = v21;
  }
  return v4;
}

uint64_t sub_100110A04(uint64_t a1, uint64_t a2)
{
  sub_100014114(*(void **)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1001111B4(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1001258F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_100032D54(v7, v8);
}

uint64_t sub_100110AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  char v10 = *(unsigned char *)(a2 + 40);
  sub_1000140D4(v6, v7, v8, v9, v10);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)(a1 + v11);
  char v13 = (void *)(a2 + v11);
  sub_1001111B4(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100032BBC(*(void *)v17, v19);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  return a1;
}

uint64_t sub_100110C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  char v10 = *(unsigned char *)(a2 + 40);
  sub_1000140D4(v6, v7, v8, v9, v10);
  uint64_t v11 = *(void **)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  char v15 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  sub_100014114(v11, v12, v13, v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    sub_1001124EC(a1 + v16, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_1001111B4(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  char v24 = *(unsigned char *)(v22 + 8);
  sub_100032BBC(*(void *)v22, v24);
  uint64_t v25 = *(void *)v21;
  char v26 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v21 = v23;
  *(unsigned char *)(v21 + 8) = v24;
  sub_100032D54(v25, v26);
  return a1;
}

_OWORD *sub_100110E00(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  sub_1001111B4(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  uint64_t v11 = v10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1001258F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  char v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  return a1;
}

uint64_t sub_100110F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v6 = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(unsigned char *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v6;
  sub_100014114(v7, v8, v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_1001124EC(a1 + v12, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    sub_1001111B4(0, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    uint64_t v16 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1001258F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  LOBYTE(v20) = *((unsigned char *)v20 + 8);
  uint64_t v22 = *(void *)v19;
  char v23 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = (_BYTE)v20;
  sub_100032D54(v22, v23);
  return a1;
}

uint64_t sub_1001110C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001110DC);
}

uint64_t sub_1001110DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1001111B4(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

void sub_1001111B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100111218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10011122C);
}

uint64_t sub_10011122C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 40) = -(char)a2;
  }
  else
  {
    sub_1001111B4(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for HeadlineAttributionView()
{
  uint64_t result = qword_100164468;
  if (!qword_100164468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10011134C()
{
  sub_1001111B4(319, &qword_10015ECC8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10011141C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10011143C()
{
  unint64_t result = qword_1001644A8;
  if (!qword_1001644A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644A8);
  }
  return result;
}

unint64_t sub_100111494()
{
  unint64_t result = qword_1001644B0;
  if (!qword_1001644B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644B0);
  }
  return result;
}

unint64_t sub_1001114EC()
{
  unint64_t result = qword_1001644B8;
  if (!qword_1001644B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644B8);
  }
  return result;
}

unint64_t sub_100111544()
{
  unint64_t result = qword_1001644C0;
  if (!qword_1001644C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644C0);
  }
  return result;
}

unint64_t sub_10011159C()
{
  unint64_t result = qword_1001644C8;
  if (!qword_1001644C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644C8);
  }
  return result;
}

unint64_t sub_1001115F4()
{
  unint64_t result = qword_1001644D0;
  if (!qword_1001644D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644D0);
  }
  return result;
}

unint64_t sub_10011164C()
{
  unint64_t result = qword_1001644D8;
  if (!qword_1001644D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644D8);
  }
  return result;
}

unint64_t sub_1001116A4()
{
  unint64_t result = qword_1001644E0;
  if (!qword_1001644E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644E0);
  }
  return result;
}

unint64_t sub_1001116FC()
{
  unint64_t result = qword_1001644E8;
  if (!qword_1001644E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644E8);
  }
  return result;
}

unint64_t sub_100111754()
{
  unint64_t result = qword_1001644F0;
  if (!qword_1001644F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644F0);
  }
  return result;
}

unint64_t sub_1001117AC()
{
  unint64_t result = qword_1001644F8;
  if (!qword_1001644F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001644F8);
  }
  return result;
}

unint64_t sub_100111804()
{
  unint64_t result = qword_100164500;
  if (!qword_100164500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164500);
  }
  return result;
}

unint64_t sub_10011185C()
{
  unint64_t result = qword_100164508;
  if (!qword_100164508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164508);
  }
  return result;
}

void sub_1001118B0()
{
  if (!qword_100164510)
  {
    sub_1001111B4(255, &qword_100164518, (uint64_t (*)(uint64_t))sub_100111948, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v0 = sub_1001249F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164510);
    }
  }
}

void sub_100111948()
{
  if (!qword_100164520)
  {
    sub_1001111B4(255, &qword_100164528, (uint64_t (*)(uint64_t))sub_100111A04, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    sub_100112220(255, &qword_100164578, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_100164520);
    }
  }
}

void sub_100111A04()
{
  if (!qword_100164530)
  {
    sub_1001111B4(255, &qword_100164538, (uint64_t (*)(uint64_t))sub_100111AB8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
    sub_100111BA8();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100164530);
    }
  }
}

void sub_100111AB8()
{
  if (!qword_100164540)
  {
    sub_100111B20(255);
    sub_100111B48();
    unint64_t v0 = sub_100124F90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164540);
    }
  }
}

void sub_100111B20(uint64_t a1)
{
}

void sub_100111B48()
{
  if (!qword_100164550)
  {
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164550);
    }
  }
}

unint64_t sub_100111BA8()
{
  unint64_t result = qword_100164558;
  if (!qword_100164558)
  {
    sub_1001111B4(255, &qword_100164538, (uint64_t (*)(uint64_t))sub_100111AB8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Group);
    sub_100111C48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164558);
  }
  return result;
}

unint64_t sub_100111C48()
{
  unint64_t result = qword_100164560;
  if (!qword_100164560)
  {
    sub_100111AB8();
    sub_1001121A0(&qword_100164568, sub_100111B20, (void (*)(void))sub_100111CF8);
    sub_100111CF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164560);
  }
  return result;
}

unint64_t sub_100111CF8()
{
  unint64_t result = qword_100164570;
  if (!qword_100164570)
  {
    sub_100111B48();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164570);
  }
  return result;
}

void sub_100111D68(uint64_t a1)
{
}

void sub_100111D88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1001111B4(255, &qword_100164590, (uint64_t (*)(uint64_t))sub_100111E30, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_100111E30(uint64_t a1)
{
}

void sub_100111E58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100111EBC()
{
  if (!qword_1001645A0)
  {
    sub_100125750();
    sub_100112AEC(&qword_1001645A8, (void (*)(uint64_t))&type metadata accessor for Divider);
    sub_100111F8C();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001645A0);
    }
  }
}

unint64_t sub_100111F8C()
{
  unint64_t result = qword_1001645B0;
  if (!qword_1001645B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001645B0);
  }
  return result;
}

void sub_100111FE0()
{
  if (!qword_1001645B8)
  {
    sub_100111B20(255);
    sub_1001121A0(&qword_100164568, sub_100111B20, (void (*)(void))sub_100111CF8);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001645B8);
    }
  }
}

void sub_10011209C(uint64_t a1)
{
}

void sub_1001120BC()
{
  if (!qword_1001645D0)
  {
    sub_100112178(255);
    sub_1001121A0(&qword_1001645E0, sub_100112178, (void (*)(void))sub_10001BABC);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1001645D0);
    }
  }
}

void sub_100112178(uint64_t a1)
{
}

uint64_t sub_1001121A0(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100112220(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1001111B4(255, &qword_100164580, (uint64_t (*)(uint64_t))sub_100111D68, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    uint64_t v7 = v6;
    sub_1001111B4(255, &qword_1001645C0, (uint64_t (*)(uint64_t))sub_10011209C, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1001122F4(uint64_t a1, uint64_t a2)
{
  sub_100112220(0, &qword_100164578, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100112374(uint64_t a1)
{
  sub_100112220(0, &qword_100164578, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001123EC@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100124CB0();
  *a1 = v3;
  return result;
}

uint64_t sub_100112418(uint64_t a1, uint64_t a2)
{
  sub_100111E30(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011247C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1001111B4(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1001124EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1001111B4(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for AttributionVerticalDividerStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100032BBC(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for AttributionVerticalDividerStyle(uint64_t a1)
{
  return sub_100032D54(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for AttributionVerticalDividerStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100032BBC(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100032D54(v5, v6);
  return a1;
}

uint64_t assignWithTake for AttributionVerticalDividerStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100032D54(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributionVerticalDividerStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AttributionVerticalDividerStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributionVerticalDividerStyle()
{
  return &type metadata for AttributionVerticalDividerStyle;
}

uint64_t sub_1001126D0()
{
  return sub_100112AEC(&qword_100164600, (void (*)(uint64_t))sub_100112718);
}

void sub_100112718()
{
  if (!qword_100164608)
  {
    sub_1001111B4(255, &qword_100164518, (uint64_t (*)(uint64_t))sub_100111948, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    sub_1001127CC(&qword_100164610, &qword_100164518, (uint64_t (*)(uint64_t))sub_100111948);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164608);
    }
  }
}

uint64_t sub_1001127CC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001111B4(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TupleView);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100112830()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DividerShape()
{
  return &type metadata for DividerShape;
}

uint64_t sub_100112864()
{
  return sub_1001121A0(&qword_100164618, sub_1001128B4, (void (*)(void))sub_10011297C);
}

void sub_1001128B4(uint64_t a1)
{
}

void sub_1001128DC(uint64_t a1)
{
}

void sub_100112904()
{
  if (!qword_100164630)
  {
    sub_1000413C0(255, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164630);
    }
  }
}

uint64_t sub_10011297C()
{
  return sub_1001121A0(&qword_100164638, sub_1001128DC, (void (*)(void))sub_1001129B8);
}

unint64_t sub_1001129B8()
{
  unint64_t result = qword_100164640;
  if (!qword_100164640)
  {
    sub_100112904();
    sub_100112A50();
    sub_1000416A8((unint64_t *)&qword_10015EEB8, &qword_10015EDC0, (unint64_t *)&qword_10015EDC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164640);
  }
  return result;
}

unint64_t sub_100112A50()
{
  unint64_t result = qword_100164648;
  if (!qword_100164648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164648);
  }
  return result;
}

uint64_t sub_100112AA4()
{
  return sub_100112AEC(&qword_100164650, (void (*)(uint64_t))sub_100112B34);
}

uint64_t sub_100112AEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100112B34()
{
  if (!qword_100164658)
  {
    sub_100112BB0();
    unint64_t v0 = sub_1001248A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164658);
    }
  }
}

unint64_t sub_100112BB0()
{
  unint64_t result = qword_100164660;
  if (!qword_100164660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164660);
  }
  return result;
}

unint64_t sub_100112C08()
{
  unint64_t result = qword_100164668;
  if (!qword_100164668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164668);
  }
  return result;
}

void *sub_100112C6C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    unint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_10005F8EC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1001238A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v78 = a3;
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_1001232B0();
    char v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    v74(v15, v16, v17);
    uint64_t v75 = (int *)type metadata accessor for DetailTimelineEntry();
    uint64_t v76 = v16;
    uint64_t v18 = v75[5];
    uint64_t v77 = v15;
    uint64_t v19 = &v15[v18];
    uint64_t v20 = &v16[v18];
    uint64_t v21 = *(void *)&v16[v18 + 8];
    *(void *)uint64_t v19 = *(void *)&v16[v18];
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *(void *)&v16[v18 + 24];
    *((void *)v19 + 2) = *(void *)&v16[v18 + 16];
    *((void *)v19 + 3) = v22;
    uint64_t v23 = *(void *)&v16[v18 + 40];
    *((void *)v19 + 4) = *(void *)&v16[v18 + 32];
    *((void *)v19 + 5) = v23;
    char v24 = &v15[v18 + 48];
    uint64_t v25 = &v16[v18 + 48];
    uint64_t v26 = *((void *)v20 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v79 = a2;
    char v80 = a1;
    if (v26 == 1)
    {
      long long v27 = *((_OWORD *)v20 + 4);
      *(_OWORD *)char v24 = *(_OWORD *)v25;
      *((_OWORD *)v19 + 4) = v27;
    }
    else
    {
      *(void *)char v24 = *(void *)v25;
      v19[56] = v20[56];
      *((void *)v19 + 8) = *((void *)v20 + 8);
      *((void *)v19 + 9) = v26;
      swift_bridgeObjectRetain();
    }
    *((void *)v19 + 10) = *((void *)v20 + 10);
    v19[88] = v20[88];
    uint64_t v28 = *((void *)v20 + 13);
    *((void *)v19 + 12) = *((void *)v20 + 12);
    *((void *)v19 + 13) = v28;
    *((void *)v19 + 14) = *((void *)v20 + 14);
    v19[120] = v20[120];
    *((void *)v19 + 16) = *((void *)v20 + 16);
    v19[136] = v20[136];
    v19[137] = v20[137];
    char v81 = (int *)type metadata accessor for DetailContentViewModel(0);
    uint64_t v29 = v81[9];
    long long v30 = &v19[v29];
    uint64_t v31 = &v20[v29];
    char v32 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v33 = *((void *)v32 - 1);
    long long v34 = *(unsigned int (**)(char *, uint64_t, int *))(v33 + 48);
    swift_bridgeObjectRetain();
    if (v34(v31, 1, v32))
    {
      sub_10011CBD8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      *(void *)long long v30 = *(void *)v31;
      uint64_t v36 = v32[5];
      uint64_t v37 = &v30[v36];
      char v38 = &v31[v36];
      swift_bridgeObjectRetain();
      v74(v37, v38, v17);
      sub_10002FE38();
      v74(&v37[*(int *)(v39 + 36)], &v38[*(int *)(v39 + 36)], v17);
      uint64_t v40 = v32[6];
      uint64_t v41 = &v30[v40];
      unsigned __int8 v42 = &v31[v40];
      uint64_t v43 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      *(_OWORD *)&v30[v32[7]] = *(_OWORD *)&v31[v32[7]];
      uint64_t v44 = v32[8];
      uint64_t v45 = &v30[v44];
      uint64_t v46 = &v31[v44];
      *(void *)uint64_t v45 = *(void *)v46;
      v45[8] = v46[8];
      v30[v32[9]] = v31[v32[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
    }
    *(void *)&v19[v81[10]] = *(void *)&v20[v81[10]];
    uint64_t v47 = v81[11];
    uint64_t v48 = &v19[v47];
    uint64_t v49 = &v20[v47];
    sub_10005A9D8();
    uint64_t v51 = v50;
    uint64_t v52 = *(void *)(v50 - 8);
    int v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
    swift_bridgeObjectRetain();
    if (v53(v49, 1, v51))
    {
      sub_10011CBD8(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v48, v49, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v48, v49, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v48, 0, 1, v51);
    }
    unint64_t v9 = v80;
    uint64_t v55 = v81[12];
    uint64_t v56 = &v19[v55];
    uint64_t v57 = &v20[v55];
    uint64_t v58 = sub_100123150();
    uint64_t v59 = *(void *)(v58 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
    {
      sub_10011CBD8(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
    }
    uint64_t v61 = v75[6];
    uint64_t v62 = &v77[v61];
    uint64_t v63 = &v76[v61];
    uint64_t v64 = sub_100123670();
    uint64_t v65 = *(void *)(v64 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
    {
      sub_10011CBD8(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
    }
    uint64_t v67 = v75[7];
    long long v68 = &v77[v67];
    unint64_t v69 = &v76[v67];
    uint64_t v70 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
    v77[v75[8]] = v76[v75[8]];
    v77[v75[9]] = v76[v75[9]];
    uint64_t v71 = *(int *)(v78 + 28);
    long long v72 = *(_OWORD *)((char *)v79 + v71 + 24);
    *(_OWORD *)((char *)v80 + v71 + 24) = v72;
    (**(void (***)(void))(v72 - 8))();
  }
  return v9;
}

uint64_t sub_100113530(uint64_t a1, int *a2)
{
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1001258F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_10005F8EC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1001238A0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_1001232B0();
  unint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v36 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v10 = v7 + v36[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v10 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v12 = v10 + v11[9];
  uint64_t v13 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = v7;
    uint64_t v14 = a1;
    uint64_t v15 = a2;
    uint64_t v16 = v12 + *(int *)(v13 + 20);
    v9(v16, v8);
    sub_10002FE38();
    uint64_t v18 = v16 + *(int *)(v17 + 36);
    a2 = v15;
    a1 = v14;
    uint64_t v7 = v35;
    v9(v18, v8);
    uint64_t v19 = v12 + *(int *)(v13 + 24);
    uint64_t v20 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = v10 + v11[11];
  sub_10005A9D8();
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
  }
  uint64_t v25 = v10 + v11[12];
  uint64_t v26 = sub_100123150();
  uint64_t v27 = *(void *)(v26 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
  }
  uint64_t v28 = v7 + v36[6];
  uint64_t v29 = sub_100123670();
  uint64_t v30 = *(void *)(v29 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29)) {
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
  }
  uint64_t v31 = v7 + v36[7];
  uint64_t v32 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  uint64_t v33 = a1 + a2[7];

  return sub_100009D48(v33);
}

void *sub_1001139C4(void *a1, void *a2, uint64_t a3)
{
  sub_10003A32C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1001258F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  unint64_t v9 = (void *)((char *)a2 + v7);
  sub_10005F8EC(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1001238A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v77 = a3;
  uint64_t v78 = a2;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1001232B0();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  char v74 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v75 = v13;
  uint64_t v16 = v74[5];
  uint64_t v76 = v12;
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  uint64_t v19 = *(void *)&v13[v16 + 8];
  *(void *)uint64_t v17 = *(void *)&v13[v16];
  *((void *)v17 + 1) = v19;
  uint64_t v20 = *(void *)&v13[v16 + 24];
  *((void *)v17 + 2) = *(void *)&v13[v16 + 16];
  *((void *)v17 + 3) = v20;
  uint64_t v21 = *(void *)&v13[v16 + 40];
  *((void *)v17 + 4) = *(void *)&v13[v16 + 32];
  *((void *)v17 + 5) = v21;
  uint64_t v22 = &v12[v16 + 48];
  uint64_t v23 = v18 + 48;
  uint64_t v24 = *((void *)v18 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v79 = a1;
  long long v72 = v15;
  if (v24 == 1)
  {
    long long v25 = *((_OWORD *)v18 + 4);
    *(_OWORD *)uint64_t v22 = *v23;
    *((_OWORD *)v17 + 4) = v25;
  }
  else
  {
    *(void *)uint64_t v22 = *(void *)v23;
    v17[56] = v18[56];
    *((void *)v17 + 8) = *((void *)v18 + 8);
    *((void *)v17 + 9) = v24;
    swift_bridgeObjectRetain();
  }
  *((void *)v17 + 10) = *((void *)v18 + 10);
  v17[88] = v18[88];
  uint64_t v26 = *((void *)v18 + 13);
  *((void *)v17 + 12) = *((void *)v18 + 12);
  *((void *)v17 + 13) = v26;
  *((void *)v17 + 14) = *((void *)v18 + 14);
  v17[120] = v18[120];
  *((void *)v17 + 16) = *((void *)v18 + 16);
  v17[136] = v18[136];
  v17[137] = v18[137];
  char v73 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v27 = v73[9];
  uint64_t v28 = &v17[v27];
  uint64_t v29 = &v18[v27];
  uint64_t v30 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v31 = *((void *)v30 - 1);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, int *))(v31 + 48);
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    sub_10011CBD8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v28 = *(void *)v29;
    uint64_t v34 = v30[5];
    uint64_t v35 = &v28[v34];
    uint64_t v36 = &v29[v34];
    swift_bridgeObjectRetain();
    v72(v35, v36, v14);
    sub_10002FE38();
    v72(&v35[*(int *)(v37 + 36)], &v36[*(int *)(v37 + 36)], v14);
    uint64_t v38 = v30[6];
    uint64_t v39 = &v28[v38];
    uint64_t v40 = &v29[v38];
    uint64_t v41 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    *(_OWORD *)&v28[v30[7]] = *(_OWORD *)&v29[v30[7]];
    uint64_t v42 = v30[8];
    uint64_t v43 = &v28[v42];
    uint64_t v44 = &v29[v42];
    *(void *)uint64_t v43 = *(void *)v44;
    v43[8] = v44[8];
    v28[v30[9]] = v29[v30[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
  }
  *(void *)&v17[v73[10]] = *(void *)&v18[v73[10]];
  uint64_t v45 = v73[11];
  uint64_t v46 = &v17[v45];
  uint64_t v47 = &v18[v45];
  sub_10005A9D8();
  uint64_t v49 = v48;
  uint64_t v50 = *(void *)(v48 - 8);
  uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  swift_bridgeObjectRetain();
  if (v51(v47, 1, v49))
  {
    sub_10011CBD8(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v46, v47, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v46, v47, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v46, 0, 1, v49);
  }
  uint64_t v53 = v73[12];
  uint64_t v54 = &v17[v53];
  uint64_t v55 = &v18[v53];
  uint64_t v56 = sub_100123150();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    sub_10011CBD8(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  uint64_t v59 = v74[6];
  uint64_t v60 = &v76[v59];
  uint64_t v61 = &v75[v59];
  uint64_t v62 = sub_100123670();
  uint64_t v63 = *(void *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    sub_10011CBD8(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
  }
  uint64_t v65 = v74[7];
  uint64_t v66 = &v76[v65];
  uint64_t v67 = &v75[v65];
  uint64_t v68 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
  v76[v74[8]] = v75[v74[8]];
  v76[v74[9]] = v75[v74[9]];
  uint64_t v69 = *(int *)(v77 + 28);
  long long v70 = *(_OWORD *)((char *)v78 + v69 + 24);
  *(_OWORD *)((char *)v79 + v69 + 24) = v70;
  (**(void (***)(void))(v70 - 8))();
  return v79;
}

void *sub_100114238(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10011D208((uint64_t)a1, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1001258F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    unint64_t v9 = (void *)((char *)a2 + v7);
    sub_10011D208((uint64_t)a1 + v7, (uint64_t (*)(void))sub_10005F8EC);
    sub_10005F8EC(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1001238A0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v105 = a2;
  uint64_t v106 = a1;
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1001232B0();
  uint64_t v101 = *(void *)(v14 - 8);
  uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v101 + 24);
  v99(v12, v13, v14);
  long long v108 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v15 = v108[5];
  uint64_t v16 = &v12[v15];
  uint64_t v17 = &v13[v15];
  *(void *)uint64_t v16 = *(void *)&v13[v15];
  *((void *)v16 + 1) = *(void *)&v13[v15 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 2) = *((void *)v17 + 2);
  *((void *)v16 + 3) = *((void *)v17 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v16 + 4) = *((void *)v17 + 4);
  *((void *)v16 + 5) = *((void *)v17 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v16 + 48;
  uint64_t v19 = v17 + 48;
  uint64_t v20 = *((void *)v17 + 9);
  uint64_t v103 = v12;
  uint64_t v104 = a3;
  uint64_t v102 = v13;
  if (*((void *)v16 + 9) == 1)
  {
    if (v20 == 1)
    {
      long long v21 = *((_OWORD *)v17 + 4);
      *uint64_t v18 = *v19;
      *((_OWORD *)v16 + 4) = v21;
    }
    else
    {
      uint64_t v23 = *(void *)v19;
      v16[56] = v17[56];
      *(void *)uint64_t v18 = v23;
      *((void *)v16 + 8) = *((void *)v17 + 8);
      *((void *)v16 + 9) = *((void *)v17 + 9);
      swift_bridgeObjectRetain();
    }
  }
  else if (v20 == 1)
  {
    sub_10003088C((uint64_t)(v16 + 48));
    long long v22 = *((_OWORD *)v17 + 4);
    *uint64_t v18 = *v19;
    *((_OWORD *)v16 + 4) = v22;
  }
  else
  {
    uint64_t v24 = *(void *)v19;
    v16[56] = v17[56];
    *(void *)uint64_t v18 = v24;
    *((void *)v16 + 8) = *((void *)v17 + 8);
    *((void *)v16 + 9) = *((void *)v17 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = *((void *)v17 + 10);
  v16[88] = v17[88];
  *((void *)v16 + 10) = v25;
  *((void *)v16 + 12) = *((void *)v17 + 12);
  *((void *)v16 + 13) = *((void *)v17 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v17 + 14);
  v16[120] = v17[120];
  *((void *)v16 + 14) = v26;
  uint64_t v27 = *((void *)v17 + 16);
  v16[136] = v17[136];
  *((void *)v16 + 16) = v27;
  v16[137] = v17[137];
  long long v107 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v28 = v107[9];
  uint64_t v29 = &v16[v28];
  uint64_t v30 = &v17[v28];
  uint64_t v31 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      *(void *)uint64_t v29 = *(void *)v30;
      uint64_t v36 = v31[5];
      uint64_t v37 = &v29[v36];
      uint64_t v98 = &v30[v36];
      uint64_t v100 = &v29[v36];
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
      swift_bridgeObjectRetain();
      v38(v37, v98, v14);
      sub_10002FE38();
      v38(&v100[*(int *)(v39 + 36)], &v98[*(int *)(v39 + 36)], v14);
      uint64_t v40 = v31[6];
      uint64_t v41 = &v29[v40];
      uint64_t v42 = &v30[v40];
      uint64_t v43 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      *(_OWORD *)&v29[v31[7]] = *(_OWORD *)&v30[v31[7]];
      uint64_t v44 = v31[8];
      uint64_t v45 = &v29[v44];
      uint64_t v46 = &v30[v44];
      char v47 = v46[8];
      *(void *)uint64_t v45 = *(void *)v46;
      v45[8] = v47;
      v29[v31[9]] = v30[v31[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  if (v35)
  {
    sub_10011D208((uint64_t)v29, type metadata accessor for PreparedSparkline);
LABEL_21:
    sub_10011CBD8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v29, v30, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_22;
  }
  *(void *)uint64_t v29 = *(void *)v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v83 = v31[5];
  uint64_t v84 = &v29[v83];
  uint64_t v85 = &v30[v83];
  v99(&v29[v83], &v30[v83], v14);
  sub_10002FE38();
  v99(&v84[*(int *)(v86 + 36)], &v85[*(int *)(v86 + 36)], v14);
  uint64_t v87 = v31[6];
  uint64_t v88 = &v29[v87];
  uint64_t v89 = &v30[v87];
  uint64_t v90 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 24))(v88, v89, v90);
  uint64_t v91 = v31[7];
  uint64_t v92 = &v29[v91];
  uint64_t v93 = &v30[v91];
  *(void *)uint64_t v92 = *(void *)v93;
  *((void *)v92 + 1) = *((void *)v93 + 1);
  uint64_t v94 = v31[8];
  uint64_t v95 = &v29[v94];
  uint64_t v96 = &v30[v94];
  char v97 = v96[8];
  *(void *)uint64_t v95 = *(void *)v96;
  v95[8] = v97;
  v29[v31[9]] = v30[v31[9]];
LABEL_22:
  *(void *)&v16[v107[10]] = *(void *)&v17[v107[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = v107[11];
  uint64_t v50 = &v16[v49];
  uint64_t v51 = &v17[v49];
  sub_10005A9D8();
  uint64_t v53 = v52;
  uint64_t v54 = *(void *)(v52 - 8);
  uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  int v56 = v55(v50, 1, v52);
  int v57 = v55(v51, 1, v53);
  if (v56)
  {
    uint64_t v58 = v104;
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v50, v51, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v50, 0, 1, v53);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v58 = v104;
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v53);
LABEL_27:
    sub_10011CBD8(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v50, v51, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v54 + 24))(v50, v51, v53);
LABEL_28:
  uint64_t v60 = v107[12];
  uint64_t v61 = &v16[v60];
  uint64_t v62 = &v17[v60];
  uint64_t v63 = sub_100123150();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  int v66 = v65(v61, 1, v63);
  int v67 = v65(v62, 1, v63);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
LABEL_33:
    sub_10011CBD8(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v61, v62, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v61, v62, v63);
LABEL_34:
  uint64_t v69 = v108[6];
  long long v70 = &v103[v69];
  uint64_t v71 = &v102[v69];
  uint64_t v72 = sub_100123670();
  uint64_t v73 = *(void *)(v72 - 8);
  char v74 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
  int v75 = v74(v70, 1, v72);
  int v76 = v74(v71, 1, v72);
  if (!v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 24))(v70, v71, v72);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v72);
    goto LABEL_39;
  }
  if (v76)
  {
LABEL_39:
    sub_10011CBD8(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v70, v71, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
LABEL_40:
  uint64_t v78 = v108[7];
  uint64_t v79 = &v103[v78];
  char v80 = &v102[v78];
  uint64_t v81 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  v103[v108[8]] = v102[v108[8]];
  v103[v108[9]] = v102[v108[9]];
  sub_1000850CC((void *)((char *)v106 + *(int *)(v58 + 28)), (void *)((char *)v105 + *(int *)(v58 + 28)));
  return v106;
}

__n128 sub_100114DE0(char *a1, char *a2, uint64_t a3)
{
  sub_10003A32C(0);
  uint64_t v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1001258F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  sub_10005F8EC(0);
  uint64_t v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v10, v11, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  uint64_t v79 = a3;
  char v80 = a2;
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v81 = a1;
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_1001232B0();
  uint64_t v19 = (void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
  int v75 = *v19;
  (*v19)(v16, v17, v18);
  uint64_t v77 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v78 = v16;
  uint64_t v20 = v77[5];
  long long v21 = &v16[v20];
  long long v22 = &v17[v20];
  long long v23 = *(_OWORD *)&v17[v20 + 16];
  *(_OWORD *)long long v21 = *(_OWORD *)&v17[v20];
  *((_OWORD *)v21 + 1) = v23;
  long long v24 = *(_OWORD *)&v17[v20 + 48];
  *((_OWORD *)v21 + 2) = *(_OWORD *)&v17[v20 + 32];
  *((_OWORD *)v21 + 3) = v24;
  long long v25 = *(_OWORD *)&v17[v20 + 80];
  *((_OWORD *)v21 + 4) = *(_OWORD *)&v17[v20 + 64];
  *((_OWORD *)v21 + 5) = v25;
  *(_OWORD *)(v21 + 121) = *(_OWORD *)&v17[v20 + 121];
  long long v26 = *(_OWORD *)&v17[v20 + 112];
  *((_OWORD *)v21 + 6) = *(_OWORD *)&v17[v20 + 96];
  *((_OWORD *)v21 + 7) = v26;
  v21[137] = v17[v20 + 137];
  int v76 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v27 = v76[9];
  uint64_t v28 = &v21[v27];
  uint64_t v29 = &v22[v27];
  uint64_t v30 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v31 = *((void *)v30 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    sub_10011CBD8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v28 = *(void *)v29;
    uint64_t v33 = v30[5];
    uint64_t v73 = v31;
    char v74 = v17;
    int v34 = &v28[v33];
    int v35 = &v29[v33];
    v75(&v28[v33], &v29[v33], v18);
    sub_10002FE38();
    v75(&v34[*(int *)(v36 + 36)], &v35[*(int *)(v36 + 36)], v18);
    uint64_t v37 = v30[6];
    uint64_t v38 = &v28[v37];
    uint64_t v39 = &v29[v37];
    uint64_t v40 = sub_1001234F0();
    uint64_t v41 = v39;
    uint64_t v17 = v74;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v41, v40);
    *(_OWORD *)&v28[v30[7]] = *(_OWORD *)&v29[v30[7]];
    uint64_t v42 = v30[8];
    uint64_t v43 = &v28[v42];
    uint64_t v44 = &v29[v42];
    *(void *)uint64_t v43 = *(void *)v44;
    v43[8] = v44[8];
    v28[v30[9]] = v29[v30[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v73 + 56))(v28, 0, 1, v30);
  }
  *(void *)&v21[v76[10]] = *(void *)&v22[v76[10]];
  uint64_t v45 = v76[11];
  uint64_t v46 = &v21[v45];
  char v47 = &v22[v45];
  sub_10005A9D8();
  uint64_t v49 = v48;
  uint64_t v50 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v47, 1, v48))
  {
    sub_10011CBD8(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v46, v47, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v46, 0, 1, v49);
  }
  uint64_t v52 = v76[12];
  uint64_t v53 = &v21[v52];
  uint64_t v54 = &v22[v52];
  uint64_t v55 = sub_100123150();
  uint64_t v56 = *(void *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    sub_10011CBD8(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  uint64_t v58 = v77[6];
  uint64_t v59 = &v78[v58];
  uint64_t v60 = &v17[v58];
  uint64_t v61 = sub_100123670();
  uint64_t v62 = *(void *)(v61 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
  {
    sub_10011CBD8(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
  }
  uint64_t v64 = v77[7];
  uint64_t v65 = &v78[v64];
  int v66 = v17;
  int v67 = &v17[v64];
  uint64_t v68 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v67, v68);
  v78[v77[8]] = v66[v77[8]];
  v78[v77[9]] = v66[v77[9]];
  uint64_t v69 = *(int *)(v79 + 28);
  long long v70 = &v81[v69];
  uint64_t v71 = &v80[v69];
  *((void *)v70 + 4) = *((void *)v71 + 4);
  __n128 result = *((__n128 *)v71 + 1);
  *(_OWORD *)long long v70 = *(_OWORD *)v71;
  *((__n128 *)v70 + 1) = result;
  return result;
}

char *sub_10011559C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10011D208((uint64_t)a1, (uint64_t (*)(void))sub_10003A32C);
    sub_10003A32C(0);
    uint64_t v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1001258F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    sub_10011D208((uint64_t)&a1[v9], (uint64_t (*)(void))sub_10005F8EC);
    sub_10005F8EC(0);
    uint64_t v13 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = sub_1001238A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v10, v11, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v104 = a3;
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v106 = a1;
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_1001232B0();
  uint64_t v101 = *(void *)(v18 - 8);
  uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v101 + 40);
  v100(v16, v17, v18);
  long long v108 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v19 = v108[5];
  uint64_t v20 = &v16[v19];
  long long v21 = &v17[v19];
  uint64_t v22 = *(void *)&v17[v19 + 8];
  *(void *)uint64_t v20 = *(void *)&v17[v19];
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v21 + 3);
  *((void *)v20 + 2) = *((void *)v21 + 2);
  *((void *)v20 + 3) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)v21 + 5);
  *((void *)v20 + 4) = *((void *)v21 + 4);
  *((void *)v20 + 5) = v24;
  swift_bridgeObjectRelease();
  long long v25 = v20 + 48;
  long long v26 = v21 + 48;
  uint64_t v105 = a2;
  uint64_t v102 = v17;
  uint64_t v103 = v16;
  if (*((void *)v20 + 9) == 1) {
    goto LABEL_11;
  }
  uint64_t v27 = *((void *)v21 + 9);
  if (v27 == 1)
  {
    sub_10003088C((uint64_t)(v20 + 48));
LABEL_11:
    long long v28 = *((_OWORD *)v21 + 4);
    _OWORD *v25 = *v26;
    *((_OWORD *)v20 + 4) = v28;
    goto LABEL_13;
  }
  *(void *)long long v25 = *(void *)v26;
  v20[56] = v21[56];
  *((void *)v20 + 8) = *((void *)v21 + 8);
  *((void *)v20 + 9) = v27;
  swift_bridgeObjectRelease();
LABEL_13:
  *((void *)v20 + 10) = *((void *)v21 + 10);
  v20[88] = v21[88];
  uint64_t v29 = *((void *)v21 + 13);
  *((void *)v20 + 12) = *((void *)v21 + 12);
  *((void *)v20 + 13) = v29;
  swift_bridgeObjectRelease();
  *((void *)v20 + 14) = *((void *)v21 + 14);
  v20[120] = v21[120];
  *((void *)v20 + 16) = *((void *)v21 + 16);
  *((_WORD *)v20 + 68) = *((_WORD *)v21 + 68);
  long long v107 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v30 = v107[9];
  uint64_t v31 = &v20[v30];
  uint64_t v32 = &v21[v30];
  uint64_t v33 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v34 = *((void *)v33 - 1);
  int v35 = *(uint64_t (**)(char *, uint64_t, int *))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      *(void *)uint64_t v31 = *(void *)v32;
      uint64_t v38 = v33[5];
      uint64_t v39 = &v31[v38];
      uint64_t v40 = &v32[v38];
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
      v41(&v31[v38], &v32[v38], v18);
      sub_10002FE38();
      v41(&v39[*(int *)(v42 + 36)], &v40[*(int *)(v42 + 36)], v18);
      uint64_t v43 = v33[6];
      uint64_t v44 = &v31[v43];
      uint64_t v45 = &v32[v43];
      uint64_t v46 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      *(_OWORD *)&v31[v33[7]] = *(_OWORD *)&v32[v33[7]];
      uint64_t v47 = v33[8];
      uint64_t v48 = &v31[v47];
      uint64_t v49 = &v32[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      v31[v33[9]] = v32[v33[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v37)
  {
    sub_10011D208((uint64_t)v31, type metadata accessor for PreparedSparkline);
LABEL_18:
    sub_10011CBD8(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v31, v32, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_19;
  }
  *(void *)uint64_t v31 = *(void *)v32;
  swift_bridgeObjectRelease();
  uint64_t v89 = v33[5];
  uint64_t v90 = &v31[v89];
  uint64_t v91 = &v32[v89];
  v100(&v31[v89], &v32[v89], v18);
  sub_10002FE38();
  v100(&v90[*(int *)(v92 + 36)], &v91[*(int *)(v92 + 36)], v18);
  uint64_t v93 = v33[6];
  uint64_t v94 = &v31[v93];
  uint64_t v95 = &v32[v93];
  uint64_t v96 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  *(_OWORD *)&v31[v33[7]] = *(_OWORD *)&v32[v33[7]];
  uint64_t v97 = v33[8];
  uint64_t v98 = &v31[v97];
  uint64_t v99 = &v32[v97];
  v98[8] = v99[8];
  *(void *)uint64_t v98 = *(void *)v99;
  v31[v33[9]] = v32[v33[9]];
LABEL_19:
  *(void *)&v20[v107[10]] = *(void *)&v21[v107[10]];
  swift_bridgeObjectRelease();
  uint64_t v51 = v107[11];
  uint64_t v52 = &v20[v51];
  uint64_t v53 = &v21[v51];
  sub_10005A9D8();
  uint64_t v55 = v54;
  uint64_t v56 = *(void *)(v54 - 8);
  uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  int v58 = v57(v52, 1, v54);
  int v59 = v57(v53, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v52, v53, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v52, 0, 1, v55);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v55);
LABEL_24:
    sub_10011CBD8(0, (unint64_t *)&qword_10015E700, (uint64_t (*)(uint64_t))sub_10005A9D8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v52, v53, v55);
LABEL_25:
  uint64_t v61 = v107[12];
  uint64_t v62 = &v20[v61];
  uint64_t v63 = &v21[v61];
  uint64_t v64 = sub_100123150();
  uint64_t v65 = *(void *)(v64 - 8);
  int v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  int v67 = v66(v62, 1, v64);
  int v68 = v66(v63, 1, v64);
  if (v67)
  {
    uint64_t v69 = v104;
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v69 = v104;
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
LABEL_30:
    sub_10011CBD8(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v62, v63, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v65 + 40))(v62, v63, v64);
LABEL_31:
  uint64_t v71 = v108[6];
  uint64_t v72 = &v103[v71];
  uint64_t v73 = &v102[v71];
  uint64_t v74 = sub_100123670();
  uint64_t v75 = *(void *)(v74 - 8);
  int v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
  int v77 = v76(v72, 1, v74);
  int v78 = v76(v73, 1, v74);
  if (!v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 40))(v72, v73, v74);
      goto LABEL_37;
    }
    (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
    goto LABEL_36;
  }
  if (v78)
  {
LABEL_36:
    sub_10011CBD8(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v72, v73, *(void *)(*(void *)(v79 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v72, v73, v74);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
LABEL_37:
  uint64_t v80 = v108[7];
  uint64_t v81 = &v103[v80];
  uint64_t v82 = &v102[v80];
  uint64_t v83 = sub_1001238A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 40))(v81, v82, v83);
  v103[v108[8]] = v102[v108[8]];
  v103[v108[9]] = v102[v108[9]];
  uint64_t v84 = *(int *)(v69 + 28);
  uint64_t v85 = &v106[v84];
  uint64_t v86 = &v105[v84];
  sub_100009D48((uint64_t)&v106[v84]);
  long long v87 = *((_OWORD *)v86 + 1);
  *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
  *((_OWORD *)v85 + 1) = v87;
  *((void *)v85 + 4) = *((void *)v86 + 4);
  return v106;
}

uint64_t sub_1001160A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001160BC);
}

uint64_t sub_1001160BC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10011CBD8(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_10011CBD8(0, &qword_100161A88, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for DetailTimelineEntry();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7] + 24);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_100116280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100116294);
}

uint64_t sub_100116294(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10011CBD8(0, &qword_10015ECD8, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_10011CBD8(0, &qword_100161A88, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = type metadata accessor for DetailTimelineEntry();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7] + 24) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for DetailComplicationContentView()
{
  uint64_t result = qword_1001646C8;
  if (!qword_1001646C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001164A0()
{
  sub_10003A32C(319);
  if (v0 <= 0x3F)
  {
    sub_10005F8EC(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for DetailTimelineEntry();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1001165AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001165C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10011B5B0(0, &qword_100162ED0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v46 = v4;
  __chkstk_darwin(v4);
  uint64_t v48 = (_OWORD *)((char *)v42 - v5);
  sub_10011CC54(0, &qword_100162ED8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  _OWORD v42[2] = v6;
  __chkstk_darwin(v6);
  uint64_t v43 = (uint64_t)v42 - v7;
  sub_10011CC54(0, &qword_100162E40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
  uint64_t v47 = v8;
  __chkstk_darwin(v8);
  uint64_t v45 = (char *)v42 - v9;
  sub_10011B668(0);
  uint64_t v11 = v10;
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1001255F0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011D080(0, (unint64_t *)&qword_10015EDB0, (uint64_t (*)(uint64_t))sub_10011B668, (uint64_t)&type metadata for Image, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  uint64_t v19 = v18;
  __chkstk_darwin(v18);
  long long v21 = (void *)((char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v44 = (uint64_t)v42 - v23;
  uint64_t v24 = a1 + *(int *)(type metadata accessor for DetailComplicationContentView() + 24);
  uint64_t v25 = type metadata accessor for DetailTimelineEntry();
  if (*(unsigned char *)(v24 + *(int *)(v25 + 20) + 137) == 2)
  {
    if (*(unsigned char *)(v24 + *(int *)(v25 + 32)) == 1)
    {
      sub_100125230();
      sub_1001251B0();
      sub_1001251F0();
      swift_release();
      uint64_t v26 = sub_1001252E0();
      uint64_t v28 = v27;
      char v30 = v29;
      uint64_t v32 = v31;
      swift_release();
      *(void *)&long long v49 = v26;
      *((void *)&v49 + 1) = v28;
      *(void *)&long long v50 = v30 & 1;
      *((void *)&v50 + 1) = v32;
      char v51 = 0;
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
      char v51 = 1;
    }
    sub_100124F80();
    long long v37 = v53;
    char v38 = v54;
    uint64_t v39 = v48;
    *uint64_t v48 = v52;
    v39[1] = v37;
    *((unsigned char *)v39 + 32) = v38;
    swift_storeEnumTagMultiPayload();
    sub_10011BFAC(0, (unint64_t *)&qword_100162E48, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for EmptyView, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_1000DAEF4();
    sub_1000DB080();
    return sub_100124F80();
  }
  else
  {
    v42[1] = a2;
    uint64_t v33 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    v42[0] = v15 + 8;
    uint64_t v34 = sub_1001255A0();
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Image.Scale.small(_:), v14);
    uint64_t KeyPath = swift_getKeyPath();
    (*v33)((char *)v13 + *(int *)(v11 + 28), v17, v14);
    *uint64_t v13 = KeyPath;
    sub_10011D1A0((uint64_t)v13, (uint64_t)v21 + *(int *)(v19 + 36), (uint64_t (*)(void))sub_10011B668);
    *long long v21 = v34;
    swift_retain();
    sub_10011D208((uint64_t)v13, (uint64_t (*)(void))sub_10011B668);
    (*(void (**)(char *, uint64_t))v42[0])(v17, v14);
    swift_release();
    uint64_t v36 = v44;
    sub_10011CCF8((uint64_t)v21, v44);
    sub_10011CD94(v36, v43);
    swift_storeEnumTagMultiPayload();
    sub_1000DAF80();
    uint64_t v40 = (uint64_t)v45;
    sub_100124F80();
    sub_1000DB24C(v40, (uint64_t)v48);
    swift_storeEnumTagMultiPayload();
    sub_10011BFAC(0, (unint64_t *)&qword_100162E48, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for EmptyView, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_1000DAEF4();
    sub_1000DB080();
    sub_100124F80();
    sub_1000DB2CC(v40);
    return sub_10011CE30(v36);
  }
}

uint64_t sub_100116D20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  sub_10011B980(0, &qword_100164708, (uint64_t (*)(uint64_t, uint64_t, void *))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v46 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v37 - v3;
  sub_10011B960(0);
  uint64_t v47 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011D30C(0, &qword_100164710, (uint64_t (*)(uint64_t))sub_10011B018, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  uint64_t v45 = v8;
  __chkstk_darwin(v8);
  uint64_t v44 = (uint64_t)&v37 - v9;
  sub_10011BA2C(0);
  uint64_t v43 = v10;
  __chkstk_darwin(v10);
  uint64_t v39 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011D30C(0, &qword_100164850, (uint64_t (*)(uint64_t))sub_10011C0A4, (uint64_t (*)(uint64_t))sub_10011B960, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - v13;
  sub_10011D30C(0, &qword_1001648C8, (uint64_t (*)(uint64_t))sub_10011C0EC, (uint64_t (*)(uint64_t))sub_10011BA2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  uint64_t v41 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v37 - v16;
  sub_10011C0A4(0);
  uint64_t v19 = v18;
  __chkstk_darwin(v18);
  uint64_t v42 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011C0EC(0);
  uint64_t v40 = v21;
  __chkstk_darwin(v21);
  uint64_t v38 = (uint64_t)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1001258F0();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005EEE4((uint64_t)v26);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v26, v23);
  if (v27 == enum case for WidgetFamily.accessoryCircular(_:))
  {
    uint64_t v28 = type metadata accessor for DetailComplicationContentView();
    uint64_t v29 = v44;
    sub_10011838C(v1 + *(int *)(v28 + 24), v44);
    sub_10011CA90(v29, (uint64_t)v4);
    swift_storeEnumTagMultiPayload();
    sub_10011C5D8();
    sub_100124F80();
    sub_10011D1A0((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(void))sub_10011B960);
    swift_storeEnumTagMultiPayload();
    sub_10011C724();
    sub_10011CA18();
    sub_100124F80();
    sub_10011D208((uint64_t)v7, (uint64_t (*)(void))sub_10011B960);
    return sub_10011CB38(v29);
  }
  else
  {
    uint64_t v44 = v19;
    if (v27 == enum case for WidgetFamily.accessoryRectangular(_:))
    {
      uint64_t v31 = type metadata accessor for DetailComplicationContentView();
      uint64_t v32 = v39;
      sub_100117CE4(v1 + *(int *)(v31 + 24), v39);
      sub_10011D1A0(v32, (uint64_t)v17, (uint64_t (*)(void))sub_10011BA2C);
      swift_storeEnumTagMultiPayload();
      sub_10011C7F8();
      sub_10011C908();
      uint64_t v33 = (uint64_t)v42;
      sub_100124F80();
      sub_10011D1A0(v33, (uint64_t)v14, (uint64_t (*)(void))sub_10011C0A4);
      swift_storeEnumTagMultiPayload();
      sub_10011C724();
      sub_10011CA18();
      sub_100124F80();
      sub_10011D208(v33, (uint64_t (*)(void))sub_10011C0A4);
      return sub_10011D208(v32, (uint64_t (*)(void))sub_10011BA2C);
    }
    else if (v27 == enum case for WidgetFamily.accessoryInline(_:))
    {
      uint64_t v34 = type metadata accessor for DetailComplicationContentView();
      uint64_t v35 = v38;
      sub_100117530(v1 + *(int *)(v34 + 24), v38);
      sub_10011D1A0(v35, (uint64_t)v17, (uint64_t (*)(void))sub_10011C0EC);
      swift_storeEnumTagMultiPayload();
      sub_10011C7F8();
      sub_10011C908();
      uint64_t v36 = (uint64_t)v42;
      sub_100124F80();
      sub_10011D1A0(v36, (uint64_t)v14, (uint64_t (*)(void))sub_10011C0A4);
      swift_storeEnumTagMultiPayload();
      sub_10011C724();
      sub_10011CA18();
      sub_100124F80();
      sub_10011D208(v36, (uint64_t (*)(void))sub_10011C0A4);
      return sub_10011D208(v35, (uint64_t (*)(void))sub_10011C0EC);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_10011C5D8();
      sub_100124F80();
      sub_10011D1A0((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(void))sub_10011B960);
      swift_storeEnumTagMultiPayload();
      sub_10011C724();
      sub_10011CA18();
      sub_100124F80();
      sub_10011D208((uint64_t)v7, (uint64_t (*)(void))sub_10011B960);
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    }
  }
}

uint64_t sub_100117530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v67 = a2;
  uint64_t v66 = sub_1001238A0();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v62 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = _s11FormatStyleVMa_0();
  __chkstk_darwin(v63);
  uint64_t v65 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v60 = sub_100125060();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v57 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100124B70();
  uint64_t v53 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011C294(0);
  long long v52 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011C24C(0);
  uint64_t v15 = v14;
  uint64_t v54 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011C134(0);
  uint64_t v55 = *(void *)(v18 - 8);
  uint64_t v56 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011C0EC(0);
  uint64_t v61 = v21;
  __chkstk_darwin(v21);
  uint64_t v69 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DetailContentViewModel(0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DetailTimelineEntry();
  sub_10011D1A0(a1 + *(int *)(v26 + 20), (uint64_t)v25, type metadata accessor for DetailContentViewModel);
  uint64_t v59 = v3;
  int v68 = v25;
  sub_100118ED8(a1, v3, (uint64_t)v25);
  uint64_t v51 = v26;
  if (*(unsigned char *)(a1 + *(int *)(v26 + 32)) == 1)
  {
    sub_100124B60();
  }
  else
  {
    uint64_t v72 = _swiftEmptyArrayStorage;
    sub_10011D0EC(&qword_10015F100, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_10005F210(0);
    sub_10011D0EC((unint64_t *)&qword_10015F110, sub_10005F210);
    sub_100126090();
  }
  unint64_t v27 = sub_10011C488();
  uint64_t v28 = v52;
  sub_1001254D0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v8);
  sub_10011D208((uint64_t)v13, (uint64_t (*)(void))sub_10011C294);
  uint64_t v29 = v57;
  sub_100125030();
  uint64_t v72 = v28;
  unint64_t v73 = v27;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_100125480();
  (*(void (**)(char *, unint64_t))(v58 + 8))(v29, v60);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v15);
  unint64_t v31 = *((void *)v68 + 3);
  uint64_t v72 = (void *)*((void *)v68 + 2);
  unint64_t v73 = v31;
  uint64_t v70 = v15;
  uint64_t v71 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  unint64_t v60 = sub_10001BA50();
  uint64_t v32 = v56;
  sub_100125460();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v32);
  uint64_t v33 = v59 + *(int *)(type metadata accessor for DetailComplicationContentView() + 24) + *(int *)(v51 + 20);
  uint64_t v34 = *(void *)(v33 + 80);
  int v35 = *(unsigned __int8 *)(v33 + 88);
  uint64_t v36 = *(void *)(v33 + 112);
  char v37 = *(unsigned char *)(v33 + 120);
  uint64_t v38 = *(void *)(v33 + 128);
  int v39 = *(unsigned __int8 *)(v33 + 136);
  uint64_t v40 = v62;
  sub_100060104(v62);
  uint64_t v42 = v64;
  uint64_t v41 = (uint64_t)v65;
  uint64_t v43 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v65, v40, v66);
  uint64_t v44 = (int *)v63;
  *(unsigned char *)(v41 + *(int *)(v63 + 20)) = 0;
  *(unsigned char *)(v41 + v44[6]) = 0;
  *(unsigned char *)(v41 + v44[7]) = 1;
  uint64_t v45 = (void *)(v41 + v44[8]);
  *uint64_t v45 = 0;
  v45[1] = 0xE000000000000000;
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v43);
  uint64_t v46 = sub_1000AEBE4(v34, v35, v36, v37, v38, v39);
  unint64_t v48 = v47;
  sub_10011D208(v41, (uint64_t (*)(void))_s11FormatStyleVMa_0);
  uint64_t v72 = (void *)v46;
  unint64_t v73 = v48;
  uint64_t v49 = (uint64_t)v69;
  sub_100124B10();
  swift_bridgeObjectRelease();
  sub_10011D208(v49, (uint64_t (*)(void))sub_10011C0EC);
  return sub_10011D208((uint64_t)v68, type metadata accessor for DetailContentViewModel);
}

uint64_t sub_100117CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_100125060();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin(v3);
  uint64_t v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100124B70();
  uint64_t v41 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011BB24();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011BB04(0);
  uint64_t v11 = v10;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011BABC(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  uint64_t v38 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011BA74(0);
  uint64_t v42 = v18;
  uint64_t v40 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011BA2C(0);
  uint64_t v39 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DetailContentViewModel(0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (uint64_t *)((char *)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = type metadata accessor for DetailTimelineEntry();
  sub_10011D1A0(a1 + *(int *)(v27 + 20), (uint64_t)v26, type metadata accessor for DetailContentViewModel);
  *(void *)uint64_t v9 = sub_100124F00();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 0;
  sub_10011D134(0, &qword_100164908, sub_10011BBB8);
  sub_100119690(a1, v48, v26, (uint64_t)&v9[*(int *)(v28 + 44)]);
  sub_10011D1A0((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))sub_10011BB24);
  *(_OWORD *)&v13[*(int *)(v11 + 36)] = xmmword_100130370;
  sub_10011D208((uint64_t)v9, (uint64_t (*)(void))sub_10011BB24);
  if (*(unsigned char *)(a1 + *(int *)(v27 + 32)) == 1)
  {
    sub_100124B60();
  }
  else
  {
    uint64_t v51 = _swiftEmptyArrayStorage;
    sub_10011D0EC(&qword_10015F100, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_10005F210(0);
    sub_10011D0EC((unint64_t *)&qword_10015F110, sub_10005F210);
    sub_100126090();
  }
  unint64_t v29 = sub_10011BFFC();
  sub_1001254D0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v47);
  sub_10011D208((uint64_t)v13, (uint64_t (*)(void))sub_10011BB04);
  char v30 = v43;
  sub_100125030();
  uint64_t v51 = (void *)v11;
  unint64_t v52 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = v37;
  sub_100125480();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v45);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v32);
  unint64_t v33 = v26[3];
  uint64_t v51 = (void *)v26[2];
  unint64_t v52 = v33;
  uint64_t v49 = v32;
  uint64_t v50 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_10001BA50();
  uint64_t v34 = v42;
  sub_100125460();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v34);
  uint64_t v51 = sub_100118980();
  unint64_t v52 = v35;
  sub_100124B10();
  swift_bridgeObjectRelease();
  sub_10011D208((uint64_t)v23, (uint64_t (*)(void))sub_10011BA2C);
  return sub_10011D208((uint64_t)v26, type metadata accessor for DetailContentViewModel);
}

uint64_t sub_10011838C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v56 = a2;
  uint64_t v5 = sub_1001238A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  uint64_t v55 = v6;
  __chkstk_darwin(v5);
  uint64_t v51 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = _s11FormatStyleVMa_0() - 8;
  __chkstk_darwin(v53);
  uint64_t v50 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v49 = sub_100125060();
  uint64_t v9 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011B0CC();
  uint64_t v13 = v12;
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10011B018();
  uint64_t v48 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011D30C(0, &qword_100164710, (uint64_t (*)(uint64_t))sub_10011B018, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  uint64_t v52 = v20;
  __chkstk_darwin(v20);
  uint64_t v45 = (char *)&v45 - v21;
  uint64_t v22 = type metadata accessor for DetailContentViewModel(0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for DetailTimelineEntry();
  sub_10011D1A0(a1 + *(int *)(v47 + 20), (uint64_t)v24, type metadata accessor for DetailContentViewModel);
  *uint64_t v15 = sub_1001257D0();
  v15[1] = v25;
  sub_10011D134(0, &qword_100164928, sub_10011B160);
  sub_10011A258(v3, a1, (uint64_t)v24, (char *)v15 + *(int *)(v26 + 44));
  sub_100125030();
  uint64_t v27 = sub_10011D0EC(&qword_1001647A8, (void (*)(uint64_t))sub_10011B0CC);
  sub_100125480();
  (*(void (**)(char *, unint64_t))(v9 + 8))(v11, v49);
  sub_10011D208((uint64_t)v15, (uint64_t (*)(void))sub_10011B0CC);
  uint64_t v46 = v24;
  uint64_t v28 = *((void *)v24 + 3);
  uint64_t v59 = *((void *)v24 + 2);
  uint64_t v60 = v28;
  uint64_t v57 = v13;
  uint64_t v58 = v27;
  swift_getOpaqueTypeConformance2();
  unint64_t v49 = sub_10001BA50();
  uint64_t v29 = v48;
  sub_100125460();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v29);
  uint64_t v30 = v3 + *(int *)(type metadata accessor for DetailComplicationContentView() + 24) + *(int *)(v47 + 20);
  uint64_t v31 = *(void *)(v30 + 80);
  LODWORD(v19) = *(unsigned __int8 *)(v30 + 88);
  uint64_t v32 = *(void *)(v30 + 112);
  LOBYTE(v11) = *(unsigned char *)(v30 + 120);
  uint64_t v33 = *(void *)(v30 + 128);
  LODWORD(v13) = *(unsigned __int8 *)(v30 + 136);
  uint64_t v34 = v51;
  sub_100060104(v51);
  uint64_t v35 = v54;
  uint64_t v36 = v55;
  uint64_t v37 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v50, v34, v54);
  uint64_t v38 = (int *)v53;
  *(unsigned char *)(v37 + *(int *)(v53 + 28)) = 0;
  *(unsigned char *)(v37 + v38[8]) = 0;
  *(unsigned char *)(v37 + v38[9]) = 1;
  uint64_t v39 = (void *)(v37 + v38[10]);
  *uint64_t v39 = 0;
  v39[1] = 0xE000000000000000;
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
  uint64_t v40 = sub_1000AEBE4(v31, (int)v19, v32, (char)v11, v33, v13);
  uint64_t v42 = v41;
  sub_10011D208(v37, (uint64_t (*)(void))_s11FormatStyleVMa_0);
  uint64_t v59 = v40;
  uint64_t v60 = v42;
  uint64_t v43 = (uint64_t)v45;
  sub_100124B10();
  swift_bridgeObjectRelease();
  sub_10011CB38(v43);
  return sub_10011D208((uint64_t)v46, type metadata accessor for DetailContentViewModel);
}

id sub_100118980()
{
  uint64_t v1 = sub_1001233E0();
  __chkstk_darwin(v1 - 8);
  v39[2] = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100125AC0();
  __chkstk_darwin(v3 - 8);
  v39[1] = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1001238A0();
  uint64_t v5 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s11FormatStyleVMa_0();
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011D034(0, (unint64_t *)&qword_10015E810, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100128E90;
  uint64_t v13 = v0 + *(int *)(type metadata accessor for DetailComplicationContentView() + 24);
  uint64_t v14 = v13 + *(int *)(type metadata accessor for DetailTimelineEntry() + 20);
  uint64_t v15 = *(void *)(v14 + 80);
  int v43 = *(unsigned __int8 *)(v14 + 88);
  uint64_t v42 = *(void *)(v14 + 112);
  int v16 = *(unsigned __int8 *)(v14 + 120);
  uint64_t v17 = *(void *)(v14 + 128);
  int v40 = *(unsigned __int8 *)(v14 + 136);
  int v41 = v16;
  sub_100060104((uint64_t)v7);
  uint64_t v18 = v44;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v7, v44);
  v11[v9[7]] = 0;
  v11[v9[8]] = 0;
  v11[v9[9]] = 1;
  uint64_t v19 = &v11[v9[10]];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0xE000000000000000;
  uint64_t v20 = v7;
  uint64_t v21 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v18);
  uint64_t v22 = sub_1000AEBE4(v15, v43, v42, v41, v17, v40);
  uint64_t v24 = v23;
  sub_10011D208((uint64_t)v11, (uint64_t (*)(void))_s11FormatStyleVMa_0);
  *(void *)(v12 + 32) = v22;
  *(void *)(v12 + 40) = v24;
  if (*(void *)(v14 + 72) == 1)
  {
    sub_100125AB0();
    sub_100123390();
    uint64_t v25 = sub_100125B70();
    unint64_t v27 = v26;
LABEL_16:
    *(void *)(v21 + 48) = v25;
    *(void *)(v21 + 56) = v27;
    uint64_t v45 = v21;
    sub_10011D034(0, (unint64_t *)&qword_10015E1D0, (uint64_t)&type metadata for String, (uint64_t (*)(void, uint64_t))&type metadata accessor for Array);
    sub_10009DFA0();
    uint64_t v38 = sub_100125A50();
    swift_bridgeObjectRelease();
    return (id)v38;
  }
  uint64_t v25 = 9666786;
  if (*(unsigned char *)(v14 + 56))
  {
LABEL_15:
    unint64_t v27 = 0xA300000000000000;
    goto LABEL_16;
  }
  double v28 = *(double *)(v14 + 48);
  if (v28 <= 1000000.0)
  {
LABEL_10:
    if (qword_10015D520 != -1) {
      swift_once();
    }
    id v34 = (id)sub_10002F64C(0, 3, 1, v28);
    [v34 setNumberStyle:1];
    id v35 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v28];
    id v36 = [v34 stringFromNumber:v35];

    if (v36)
    {
      uint64_t v25 = sub_100125B10();
      unint64_t v27 = v37;

      goto LABEL_16;
    }

    goto LABEL_15;
  }
  type metadata accessor for UnitNumberFormatter();
  uint64_t inited = swift_initStackObject();
  id result = [objc_allocWithZone((Class)SCICUNumberFormatter) init];
  *(void *)(inited + 16) = result;
  if ((~*(void *)&v28 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v28 < 9.22337204e18)
  {
    uint64_t v31 = result;
    uint64_t v32 = sub_100054244((uint64_t)v28, 0, 0);
    unint64_t v27 = v33;

    if (v27)
    {
      uint64_t v25 = v32;
      goto LABEL_16;
    }
    goto LABEL_10;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_100118ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10011C2BC();
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10011D080(0, &qword_1001648F8, (uint64_t (*)(uint64_t))sub_10011C2BC, (uint64_t)&type metadata for Text, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  __chkstk_darwin(v9);
  uint64_t v11 = &v17[-v10];
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for DetailTimelineEntry() + 32)) == 1)
  {
    sub_100124EC0();
    *(void *)uint64_t v11 = sub_100125340();
    *((void *)v11 + 1) = v12;
    v11[16] = v13 & 1;
    *((void *)v11 + 3) = v14;
    swift_storeEnumTagMultiPayload();
    sub_10011D0EC(&qword_1001648C0, (void (*)(uint64_t))sub_10011C2BC);
    return sub_100124F80();
  }
  else
  {
    *(void *)uint64_t v8 = sub_100124E70();
    *((void *)v8 + 1) = 0;
    v8[16] = 1;
    sub_10011D134(0, &qword_100164900, sub_10011C350);
    sub_1001191C4(a2, a3, (uint64_t)&v8[*(int *)(v16 + 44)]);
    sub_10011D1A0((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))sub_10011C2BC);
    swift_storeEnumTagMultiPayload();
    sub_10011D0EC(&qword_1001648C0, (void (*)(uint64_t))sub_10011C2BC);
    sub_100124F80();
    return sub_10011D208((uint64_t)v8, (uint64_t (*)(void))sub_10011C2BC);
  }
}

uint64_t sub_1001191C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v5 = _s11FormatStyleVMa_0();
  uint64_t v6 = (int *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1001238A0();
  uint64_t v47 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100124EB0();
  __chkstk_darwin(v11 - 8);
  sub_10011B53C();
  __chkstk_darwin(v12 - 8);
  uint64_t v48 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v45 = (uint64_t)&v41 - v15;
  sub_1001165C8(a1, (uint64_t)&v41 - v15);
  sub_100124EA0();
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  sub_100124E90(v49);
  sub_100124E80(*(Swift::String *)a2);
  v50._countAndFlagsBits = 32;
  v50._object = (void *)0xE100000000000000;
  sub_100124E90(v50);
  uint64_t v16 = *(void *)(a2 + 80);
  int v17 = *(unsigned __int8 *)(a2 + 88);
  uint64_t v18 = *(void *)(a2 + 112);
  int v42 = *(unsigned __int8 *)(a2 + 120);
  int v43 = v17;
  uint64_t v19 = *(void *)(a2 + 128);
  LODWORD(a2) = *(unsigned __int8 *)(a2 + 136);
  type metadata accessor for DetailComplicationContentView();
  sub_100060104((uint64_t)v10);
  uint64_t v20 = v44;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v8, v10, v44);
  v8[v6[7]] = 0;
  v8[v6[8]] = 0;
  v8[v6[9]] = 0;
  uint64_t v21 = &v8[v6[10]];
  *(void *)uint64_t v21 = 9666786;
  *((void *)v21 + 1) = 0xA300000000000000;
  uint64_t v22 = sub_1000AEBE4(v16, v43, v18, v42, v19, a2);
  uint64_t v24 = v23;
  sub_10011D208((uint64_t)v8, (uint64_t (*)(void))_s11FormatStyleVMa_0);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v20);
  v51._countAndFlagsBits = v22;
  v51._object = v24;
  sub_100124E80(v51);
  swift_bridgeObjectRelease();
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  sub_100124E90(v52);
  sub_100124ED0();
  uint64_t v25 = sub_100125340();
  uint64_t v27 = v26;
  uint64_t v47 = v28;
  LOBYTE(v6) = v29 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = sub_100125150();
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = v45;
  uint64_t v35 = v48;
  sub_10011D1A0(v45, v48, (uint64_t (*)(void))sub_10011B53C);
  uint64_t v36 = v35;
  uint64_t v37 = v46;
  sub_10011D1A0(v36, v46, (uint64_t (*)(void))sub_10011B53C);
  sub_10011C38C(0, &qword_100164898, (void (*)(uint64_t))sub_10011B53C, (void (*)(uint64_t))sub_10011C408);
  uint64_t v39 = v37 + *(int *)(v38 + 48);
  *(void *)uint64_t v39 = v25;
  *(void *)(v39 + 8) = v27;
  *(unsigned char *)(v39 + 16) = (_BYTE)v6;
  *(void *)(v39 + 24) = v47;
  *(void *)(v39 + 32) = KeyPath;
  *(void *)(v39 + 40) = 1;
  *(unsigned char *)(v39 + 48) = 0;
  *(void *)(v39 + 56) = v31;
  *(void *)(v39 + 64) = 0x3FE6000000000000;
  *(void *)(v39 + 72) = v33;
  *(void *)(v39 + 80) = v32;
  sub_10001BC2C(v25, v27, (char)v6);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10011D208(v34, (uint64_t (*)(void))sub_10011B53C);
  sub_10001BAA4(v25, v27, (char)v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10011D208(v48, (uint64_t (*)(void))sub_10011B53C);
}

uint64_t sub_100119690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v49 = a4;
  sub_10011BDAC(0, &qword_100164800, &qword_100164808, (uint64_t (*)(uint64_t))sub_10011BE24);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v48 - v8;
  sub_10011BD08();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011BC88();
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  int v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t)&v48 - v19;
  uint64_t v48 = (uint64_t)&v48 - v19;
  sub_100119AE4(a1, a2, (uint64_t)a3);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10011CEC4((uint64_t)v9, (uint64_t)v13);
  uint64_t v22 = &v13[*(int *)(v11 + 44)];
  *(void *)uint64_t v22 = KeyPath;
  *((void *)v22 + 1) = 1;
  v22[16] = 0;
  sub_10011CF4C((uint64_t)v9);
  uint64_t v23 = sub_100125270();
  uint64_t v24 = swift_getKeyPath();
  sub_10011D1A0((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))sub_10011BD08);
  uint64_t v25 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  uint64_t *v25 = v24;
  v25[1] = v23;
  sub_10011D208((uint64_t)v13, (uint64_t (*)(void))sub_10011BD08);
  sub_10011CFCC((uint64_t)v17, v20, (uint64_t (*)(void))sub_10011BC88);
  uint64_t v26 = a3[7];
  uint64_t v27 = a3[8];
  uint64_t v28 = a3[9];
  uint64_t v60 = a3[6];
  uint64_t v61 = v26;
  uint64_t v62 = v27;
  uint64_t v63 = v28;
  LOBYTE(v50) = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  char v53 = 0;
  long long v54 = xmmword_100128D30;
  unint64_t v55 = 0xA300000000000000;
  uint64_t v56 = 9666786;
  unint64_t v57 = 0xA300000000000000;
  uint64_t v58 = 9666786;
  unint64_t v59 = 0xA300000000000000;
  sub_1000321B8(v60, v26, v27, v28);
  sub_100041810();
  sub_10011D0EC((unint64_t *)&qword_10015F430, (void (*)(uint64_t))sub_100041810);
  sub_100041944();
  uint64_t v29 = sub_100125330();
  uint64_t v31 = v30;
  LOBYTE(v24) = v32 & 1;
  sub_100125170();
  uint64_t v33 = sub_1001252E0();
  uint64_t v35 = v34;
  LOBYTE(v20) = v36;
  swift_release();
  sub_10001BAA4(v29, v31, v24);
  swift_bridgeObjectRelease();
  int v50 = sub_100124FC0();
  uint64_t v37 = sub_1001252C0();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  LOBYTE(v24) = v42 & 1;
  sub_10001BAA4(v33, v35, v20 & 1);
  swift_bridgeObjectRelease();
  uint64_t v43 = v48;
  sub_10011D1A0(v48, (uint64_t)v17, (uint64_t (*)(void))sub_10011BC88);
  uint64_t v44 = v49;
  sub_10011D1A0((uint64_t)v17, v49, (uint64_t (*)(void))sub_10011BC88);
  sub_10011BBEC();
  uint64_t v46 = v44 + *(int *)(v45 + 48);
  *(void *)uint64_t v46 = v37;
  *(void *)(v46 + 8) = v39;
  *(unsigned char *)(v46 + 16) = v24;
  *(void *)(v46 + 24) = v41;
  *(_OWORD *)(v46 + 32) = xmmword_100130380;
  sub_10001BC2C(v37, v39, v24);
  swift_bridgeObjectRetain();
  sub_10011D208(v43, (uint64_t (*)(void))sub_10011BC88);
  sub_10001BAA4(v37, v39, v24);
  swift_bridgeObjectRelease();
  return sub_10011D208((uint64_t)v17, (uint64_t (*)(void))sub_10011BC88);
}

uint64_t sub_100119AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10011BE24();
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10011D080(0, &qword_100164910, (uint64_t (*)(uint64_t))sub_10011BE24, (uint64_t)&type metadata for Text, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent.Storage);
  __chkstk_darwin(v9);
  uint64_t v11 = &v17[-v10];
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for DetailTimelineEntry() + 32)) == 1)
  {
    sub_100124EC0();
    *(void *)uint64_t v11 = sub_100125340();
    *((void *)v11 + 1) = v12;
    v11[16] = v13 & 1;
    *((void *)v11 + 3) = v14;
    swift_storeEnumTagMultiPayload();
    sub_10011D0EC(&qword_100164920, (void (*)(uint64_t))sub_10011BE24);
    return sub_100124F80();
  }
  else
  {
    *(void *)uint64_t v8 = sub_100124E70();
    *((void *)v8 + 1) = 0x4000000000000000;
    v8[16] = 0;
    sub_10011D134(0, &qword_100164918, sub_10011BEB8);
    sub_100119DD8(a2, a3, (uint64_t)&v8[*(int *)(v16 + 44)]);
    sub_10011D1A0((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))sub_10011BE24);
    swift_storeEnumTagMultiPayload();
    sub_10011D0EC(&qword_100164920, (void (*)(uint64_t))sub_10011BE24);
    sub_100124F80();
    return sub_10011D208((uint64_t)v8, (uint64_t (*)(void))sub_10011BE24);
  }
}

uint64_t sub_100119DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1001238A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)_s11FormatStyleVMa_0();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011B53C();
  __chkstk_darwin(v13 - 8);
  uint64_t v46 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  int v17 = (char *)&v39 - v16;
  sub_1001165C8(a1, (uint64_t)&v39 - v16);
  uint64_t v18 = *(void *)(a2 + 8);
  uint64_t v47 = *(void *)a2;
  swift_bridgeObjectRetain();
  sub_1001257D0();
  sub_100124990();
  uint64_t v45 = v55;
  int v44 = v56;
  uint64_t v43 = v57;
  int v42 = v58;
  uint64_t v41 = v59;
  uint64_t v40 = v60;
  char v19 = *(unsigned char *)(a2 + 88);
  uint64_t v20 = *(void *)(a2 + 96);
  char v21 = *(unsigned char *)(a2 + 120);
  uint64_t v22 = *(void *)(a2 + 128);
  char v23 = *(unsigned char *)(a2 + 136);
  uint64_t v48 = *(void *)(a2 + 80);
  char v49 = v19;
  uint64_t v50 = v20;
  long long v39 = *(_OWORD *)(a2 + 104);
  long long v51 = v39;
  char v52 = v21;
  uint64_t v53 = v22;
  char v54 = v23;
  type metadata accessor for DetailComplicationContentView();
  swift_bridgeObjectRetain();
  sub_100060104((uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v9, v6);
  v12[v10[5]] = 0;
  v12[v10[6]] = 0;
  v12[v10[7]] = 0;
  uint64_t v24 = &v12[v10[8]];
  *(void *)uint64_t v24 = 9666786;
  *((void *)v24 + 1) = 0xA300000000000000;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10011D0EC(&qword_100162CA8, (void (*)(uint64_t))_s11FormatStyleVMa_0);
  sub_1000D2B88();
  uint64_t v25 = sub_100125330();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  LOBYTE(v6) = v30 & 1;
  uint64_t v31 = v46;
  sub_10011D1A0((uint64_t)v17, v46, (uint64_t (*)(void))sub_10011B53C);
  LOBYTE(v48) = 0;
  sub_10011D1A0(v31, a3, (uint64_t (*)(void))sub_10011B53C);
  sub_10011BEEC();
  uint64_t v33 = a3 + v32[12];
  uint64_t v34 = v47;
  *(void *)uint64_t v33 = v47;
  *(void *)(v33 + 8) = v18;
  *(unsigned char *)(v33 + 16) = 0;
  *(void *)(v33 + 24) = _swiftEmptyArrayStorage;
  uint64_t v35 = a3 + v32[16];
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 1;
  *(void *)(v35 + 16) = v45;
  *(unsigned char *)(v35 + 24) = v44;
  *(void *)(v35 + 32) = v43;
  *(unsigned char *)(v35 + 40) = v42;
  *(void *)(v35 + 48) = v41;
  *(void *)(v35 + 56) = v40;
  uint64_t v36 = a3 + v32[20];
  *(void *)uint64_t v36 = v25;
  *(void *)(v36 + 8) = v27;
  *(unsigned char *)(v36 + 16) = v6;
  *(void *)(v36 + 24) = v29;
  uint64_t v37 = a3 + v32[24];
  *(void *)uint64_t v37 = 0;
  *(unsigned char *)(v37 + 8) = 1;
  sub_10001BC2C(v34, v18, 0);
  swift_bridgeObjectRetain();
  sub_10001BC2C(v25, v27, v6);
  swift_bridgeObjectRetain();
  sub_10011D208((uint64_t)v17, (uint64_t (*)(void))sub_10011B53C);
  sub_10001BAA4(v25, v27, v6);
  swift_bridgeObjectRelease();
  sub_10001BAA4(v34, v18, v48);
  swift_bridgeObjectRelease();
  return sub_10011D208(v31, (uint64_t (*)(void))sub_10011B53C);
}

uint64_t sub_10011A258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v35 = a1;
  long long v39 = a4;
  sub_10011B32C();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011B278();
  uint64_t v38 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011B1F8();
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v34 = (uint64_t)&v34 - v16;
  uint64_t v17 = sub_100125890();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  char v23 = (char *)&v34 - v22;
  sub_100125880();
  *(void *)uint64_t v6 = sub_100124EF0();
  *((void *)v6 + 1) = 0;
  unsigned char v6[16] = 0;
  sub_10011D134(0, &qword_100164930, sub_10011B3C0);
  sub_10011A6B8(v35, v36, v37, (uint64_t)&v6[*(int *)(v24 + 44)]);
  sub_10011D0EC(&qword_100164798, (void (*)(uint64_t))sub_10011B32C);
  sub_100125410();
  sub_10011D208((uint64_t)v6, (uint64_t (*)(void))sub_10011B32C);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = v38;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v38);
  uint64_t v27 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v27 = KeyPath;
  *((void *)v27 + 1) = 1;
  v27[16] = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  uint64_t v28 = v34;
  sub_10011CFCC((uint64_t)v14, v34, (uint64_t (*)(void))sub_10011B1F8);
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v29(v20, v23, v17);
  sub_10011D1A0(v28, (uint64_t)v14, (uint64_t (*)(void))sub_10011B1F8);
  char v30 = v39;
  v29(v39, v20, v17);
  sub_10011C38C(0, &qword_100164730, (void (*)(uint64_t))&type metadata accessor for AccessoryWidgetBackground, (void (*)(uint64_t))sub_10011B1F8);
  sub_10011D1A0((uint64_t)v14, (uint64_t)&v30[*(int *)(v31 + 48)], (uint64_t (*)(void))sub_10011B1F8);
  sub_10011D208(v28, (uint64_t (*)(void))sub_10011B1F8);
  char v32 = *(void (**)(char *, uint64_t))(v18 + 8);
  v32(v23, v17);
  sub_10011D208((uint64_t)v14, (uint64_t (*)(void))sub_10011B1F8);
  return ((uint64_t (*)(char *, uint64_t))v32)(v20, v17);
}

uint64_t sub_10011A6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v103 = a4;
  uint64_t v101 = sub_1001238A0();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v99 = (uint64_t)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = _s11FormatStyleVMa_0();
  __chkstk_darwin(v97);
  uint64_t v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011B69C(0, &qword_100164768, (void (*)(uint64_t))sub_10011B728, (void (*)(void))sub_10011B7E0);
  uint64_t v107 = *(void *)(v10 - 8);
  uint64_t v108 = v10;
  __chkstk_darwin(v10);
  uint64_t v102 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v96 - v13;
  __chkstk_darwin(v15);
  uint64_t v106 = (char *)&v96 - v16;
  sub_10011B53C();
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011B4C0(0);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v105 = (uint64_t)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v96 - v24;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v96 - v27;
  uint64_t v98 = a1;
  sub_1001165C8(a1, (uint64_t)v19);
  if (*(unsigned char *)(a2 + *(int *)(type metadata accessor for DetailTimelineEntry() + 32))) {
    double v29 = 0.0;
  }
  else {
    double v29 = -2.0;
  }
  sub_10011D1A0((uint64_t)v19, (uint64_t)v25, (uint64_t (*)(void))sub_10011B53C);
  char v30 = &v25[*(int *)(v21 + 44)];
  *(void *)char v30 = 0;
  *((double *)v30 + 1) = v29;
  sub_10011D208((uint64_t)v19, (uint64_t (*)(void))sub_10011B53C);
  uint64_t v104 = v28;
  sub_10011CFCC((uint64_t)v25, (uint64_t)v28, (uint64_t (*)(void))sub_10011B4C0);
  swift_bridgeObjectRetain();
  sub_100125150();
  sub_100125160();
  swift_release();
  uint64_t v31 = sub_1001252E0();
  uint64_t v33 = v32;
  char v35 = v34;
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  swift_release();
  unsigned __int8 v38 = sub_100125100();
  unsigned __int8 v39 = sub_100125120();
  char v40 = sub_100125110();
  sub_100125110();
  if (sub_100125110() != v38) {
    char v40 = sub_100125110();
  }
  sub_100125110();
  if (sub_100125110() != v39) {
    char v40 = sub_100125110();
  }
  sub_100124890();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v110 = v31;
  uint64_t v111 = v33;
  LOBYTE(v112) = v35 & 1;
  *(void *)&long long v113 = v37;
  BYTE8(v113) = v40;
  uint64_t v114 = v42;
  uint64_t v115 = v44;
  uint64_t v116 = v46;
  uint64_t v117 = v48;
  char v118 = 0;
  uint64_t v119 = KeyPath;
  uint64_t v120 = 0x3FD999999999999ALL;
  sub_10011B728();
  sub_10011B7E0();
  sub_1001253D0();
  sub_10001BAA4(v31, v33, v35 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v106, v14, v108);
  char v50 = *(unsigned char *)(a3 + 88);
  uint64_t v51 = *(void *)(a3 + 96);
  char v52 = *(unsigned char *)(a3 + 120);
  uint64_t v53 = *(void *)(a3 + 128);
  char v54 = *(unsigned char *)(a3 + 136);
  uint64_t v110 = *(void *)(a3 + 80);
  LOBYTE(v111) = v50;
  uint64_t v112 = v51;
  long long v96 = *(_OWORD *)(a3 + 104);
  long long v113 = v96;
  LOBYTE(v114) = v52;
  uint64_t v115 = v53;
  LOBYTE(v116) = v54;
  type metadata accessor for DetailComplicationContentView();
  swift_bridgeObjectRetain();
  uint64_t v55 = v99;
  sub_100060104(v99);
  uint64_t v56 = v100;
  uint64_t v57 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v9, v55, v101);
  unsigned __int8 v58 = (int *)v97;
  v9[*(int *)(v97 + 20)] = 1;
  v9[v58[6]] = 1;
  v9[v58[7]] = 0;
  uint64_t v59 = &v9[v58[8]];
  *(void *)uint64_t v59 = 9666786;
  *((void *)v59 + 1) = 0xA300000000000000;
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
  sub_10011D0EC(&qword_100162CA8, (void (*)(uint64_t))_s11FormatStyleVMa_0);
  sub_1000D2B88();
  uint64_t v60 = sub_100125330();
  uint64_t v62 = v61;
  char v64 = v63 & 1;
  sub_100125230();
  sub_1001251B0();
  sub_1001251F0();
  swift_release();
  uint64_t v100 = sub_1001252E0();
  uint64_t v99 = v65;
  char v67 = v66;
  uint64_t v101 = v68;
  swift_release();
  sub_10001BAA4(v60, v62, v64);
  swift_bridgeObjectRelease();
  unsigned __int8 v69 = sub_100125100();
  unsigned __int8 v70 = sub_100125120();
  char v71 = sub_100125110();
  sub_100125110();
  if (sub_100125110() != v69) {
    char v71 = sub_100125110();
  }
  sub_100125110();
  if (sub_100125110() != v70) {
    char v71 = sub_100125110();
  }
  sub_100124890();
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  uint64_t v98 = swift_getKeyPath();
  uint64_t v80 = v105;
  sub_10011D1A0((uint64_t)v104, v105, (uint64_t (*)(void))sub_10011B4C0);
  uint64_t v81 = v107;
  uint64_t v82 = v108;
  uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  uint64_t v84 = v102;
  uint64_t v85 = v106;
  v83(v102, v106, v108);
  LOBYTE(v110) = v67 & 1;
  char v109 = 0;
  uint64_t v86 = v103;
  sub_10011D1A0(v80, v103, (uint64_t (*)(void))sub_10011B4C0);
  sub_10011B3F4();
  uint64_t v88 = v87;
  v83((char *)(v86 + *(int *)(v87 + 48)), v84, v82);
  uint64_t v89 = v86 + *(int *)(v88 + 64);
  char v90 = v110;
  char v91 = v109;
  uint64_t v92 = v100;
  uint64_t v93 = v99;
  *(void *)uint64_t v89 = v100;
  *(void *)(v89 + 8) = v93;
  *(unsigned char *)(v89 + 16) = v90;
  *(void *)(v89 + 24) = v101;
  *(unsigned char *)(v89 + 32) = v71;
  *(void *)(v89 + 40) = v73;
  *(void *)(v89 + 48) = v75;
  *(void *)(v89 + 56) = v77;
  *(void *)(v89 + 64) = v79;
  *(unsigned char *)(v89 + 72) = v91;
  *(void *)(v89 + 80) = v98;
  *(void *)(v89 + 88) = 0x3FD3333333333333;
  sub_10001BC2C(v92, v93, v90);
  uint64_t v94 = *(void (**)(char *, uint64_t))(v81 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v94(v85, v82);
  sub_10011D208((uint64_t)v104, (uint64_t (*)(void))sub_10011B4C0);
  sub_10001BAA4(v92, v93, v110);
  swift_release();
  swift_bridgeObjectRelease();
  v94(v84, v82);
  return sub_10011D208(v105, (uint64_t (*)(void))sub_10011B4C0);
}

void sub_10011B018()
{
  if (!qword_100164718)
  {
    sub_10011B0CC();
    sub_10011D0EC(&qword_1001647A8, (void (*)(uint64_t))sub_10011B0CC);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100164718);
    }
  }
}

void sub_10011B0CC()
{
  if (!qword_100164720)
  {
    sub_10011B160(255);
    sub_10011D0EC(&qword_1001647A0, sub_10011B160);
    unint64_t v0 = sub_100125730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164720);
    }
  }
}

void sub_10011B160(uint64_t a1)
{
}

void sub_10011B19C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  if (!*a2)
  {
    sub_10011C38C(255, a3, a4, a5);
    unint64_t v6 = sub_100125820();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_10011B1F8()
{
  if (!qword_100164738)
  {
    sub_10011B278();
    sub_10011B8F4(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164738);
    }
  }
}

void sub_10011B278()
{
  if (!qword_100164740)
  {
    sub_10011B32C();
    sub_10011D0EC(&qword_100164798, (void (*)(uint64_t))sub_10011B32C);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100164740);
    }
  }
}

void sub_10011B32C()
{
  if (!qword_100164748)
  {
    sub_10011B3C0(255);
    sub_10011D0EC(&qword_100164790, sub_10011B3C0);
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164748);
    }
  }
}

void sub_10011B3C0(uint64_t a1)
{
}

void sub_10011B3F4()
{
  if (!qword_100164758)
  {
    sub_10011B4C0(255);
    sub_10011B69C(255, &qword_100164768, (void (*)(uint64_t))sub_10011B728, (void (*)(void))sub_10011B7E0);
    sub_10011B728();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_100164758);
    }
  }
}

void sub_10011B4C0(uint64_t a1)
{
}

void sub_10011B4E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100124B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10011B53C()
{
  if (!qword_100162E30)
  {
    sub_10011B5B0(255, &qword_100162E38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v0 = sub_100125580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100162E30);
    }
  }
}

void sub_10011B5B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_10011CC54(255, &qword_100162E40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    uint64_t v7 = v6;
    sub_10011BFAC(255, (unint64_t *)&qword_100162E48, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for EmptyView, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_10011B668(uint64_t a1)
{
}

void sub_10011B69C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v7) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_10011B728()
{
  if (!qword_100164770)
  {
    sub_10011BFAC(255, &qword_100164778, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for _PaddingLayout, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_10011D034(255, (unint64_t *)&qword_10015EE00, (uint64_t)&type metadata for CGFloat, (uint64_t (*)(void, uint64_t))&type metadata accessor for _EnvironmentKeyWritingModifier);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164770);
    }
  }
}

unint64_t sub_10011B7E0()
{
  unint64_t result = qword_100164780;
  if (!qword_100164780)
  {
    sub_10011B728();
    sub_10011B858();
    sub_1000DA580();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164780);
  }
  return result;
}

unint64_t sub_10011B858()
{
  unint64_t result = qword_100164788;
  if (!qword_100164788)
  {
    sub_10011BFAC(255, &qword_100164778, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for _PaddingLayout, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164788);
  }
  return result;
}

void sub_10011B8F4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_10011D034(255, a3, a4, (uint64_t (*)(void, uint64_t))&type metadata accessor for Optional);
    unint64_t v5 = sub_1001250A0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_10011B960(uint64_t a1)
{
}

void sub_10011B980(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void *))
{
  if (!*a2)
  {
    sub_10011D30C(255, &qword_100164710, (uint64_t (*)(uint64_t))sub_10011B018, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    unint64_t v7 = a3(a1, v6, &type metadata for EmptyView);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_10011BA2C(uint64_t a1)
{
}

void sub_10011BA74(uint64_t a1)
{
}

void sub_10011BABC(uint64_t a1)
{
}

void sub_10011BB04(uint64_t a1)
{
}

void sub_10011BB24()
{
  if (!qword_1001647D8)
  {
    sub_10011BBB8(255);
    sub_10011D0EC(&qword_100164838, sub_10011BBB8);
    unint64_t v0 = sub_100125720();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001647D8);
    }
  }
}

void sub_10011BBB8(uint64_t a1)
{
}

void sub_10011BBEC()
{
  if (!qword_1001647E8)
  {
    sub_10011BC88();
    sub_10011BFAC(255, &qword_100164830, (uint64_t)&type metadata for Text, (uint64_t)&type metadata for _OffsetEffect, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1001647E8);
    }
  }
}

void sub_10011BC88()
{
  if (!qword_1001647F0)
  {
    sub_10011BD08();
    sub_10011B8F4(255, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001647F0);
    }
  }
}

void sub_10011BD08()
{
  if (!qword_1001647F8)
  {
    sub_10011BDAC(255, &qword_100164800, &qword_100164808, (uint64_t (*)(uint64_t))sub_10011BE24);
    sub_10011B8F4(255, (unint64_t *)&qword_10015E5B8, &qword_10015E5C0, (uint64_t)&type metadata for Int);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001647F8);
    }
  }
}

void sub_10011BDAC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_10011D080(255, a3, a4, (uint64_t)&type metadata for Text, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    unint64_t v5 = sub_100125580();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_10011BE24()
{
  if (!qword_100164810)
  {
    sub_10011BEB8(255);
    sub_10011D0EC(&qword_100164828, sub_10011BEB8);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164810);
    }
  }
}

void sub_10011BEB8(uint64_t a1)
{
}

void sub_10011BEEC()
{
  if (!qword_100164820)
  {
    sub_10011B53C();
    sub_10011BFAC(255, (unint64_t *)&qword_10015FA58, (uint64_t)&type metadata for Spacer, (uint64_t)&type metadata for _FrameLayout, (uint64_t (*)(void, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_100164820);
    }
  }
}

void sub_10011BFAC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_10011BFFC()
{
  unint64_t result = qword_100164840;
  if (!qword_100164840)
  {
    sub_10011BB04(255);
    sub_10011D0EC(&qword_100164848, (void (*)(uint64_t))sub_10011BB24);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164840);
  }
  return result;
}

void sub_10011C0A4(uint64_t a1)
{
}

void sub_10011C0EC(uint64_t a1)
{
}

void sub_10011C134(uint64_t a1)
{
}

void sub_10011C17C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v9) {
      atomic_store(OpaqueTypeMetadata2, a2);
    }
  }
}

void sub_10011C24C(uint64_t a1)
{
}

void sub_10011C294(uint64_t a1)
{
}

void sub_10011C2BC()
{
  if (!qword_100164888)
  {
    sub_10011C350(255);
    sub_10011D0EC(&qword_1001648A8, sub_10011C350);
    unint64_t v0 = sub_100125680();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164888);
    }
  }
}

void sub_10011C350(uint64_t a1)
{
}

void sub_10011C38C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_10011C408()
{
  if (!qword_1001648A0)
  {
    sub_1000358C0();
    sub_10011B8F4(255, (unint64_t *)&qword_10015EDD0, &qword_10015EDD8, (uint64_t)&type metadata for Font);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001648A0);
    }
  }
}

unint64_t sub_10011C488()
{
  unint64_t result = qword_1001648B0;
  if (!qword_1001648B0)
  {
    sub_10011C294(255);
    sub_10011C4F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001648B0);
  }
  return result;
}

unint64_t sub_10011C4F8()
{
  unint64_t result = qword_1001648B8;
  if (!qword_1001648B8)
  {
    sub_10011D080(255, &qword_100164880, (uint64_t (*)(uint64_t))sub_10011C2BC, (uint64_t)&type metadata for Text, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for _ConditionalContent);
    sub_10011D0EC(&qword_1001648C0, (void (*)(uint64_t))sub_10011C2BC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001648B8);
  }
  return result;
}

unint64_t sub_10011C5D8()
{
  unint64_t result = qword_1001648D0;
  if (!qword_1001648D0)
  {
    sub_10011D30C(255, &qword_100164710, (uint64_t (*)(uint64_t))sub_10011B018, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    sub_10011B0CC();
    sub_10011D0EC(&qword_1001647A8, (void (*)(uint64_t))sub_10011B0CC);
    swift_getOpaqueTypeConformance2();
    sub_10011D0EC(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001648D0);
  }
  return result;
}

uint64_t sub_10011C724()
{
  return sub_10011C76C(&qword_1001648D8, sub_10011C0A4, (void (*)(void))sub_10011C7F8, (void (*)(void))sub_10011C908);
}

uint64_t sub_10011C76C(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10011C7F8()
{
  unint64_t result = qword_1001648E0;
  if (!qword_1001648E0)
  {
    sub_10011C0EC(255);
    sub_10011C24C(255);
    sub_10011C294(255);
    sub_10011C488();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10011D0EC(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001648E0);
  }
  return result;
}

unint64_t sub_10011C908()
{
  unint64_t result = qword_1001648E8;
  if (!qword_1001648E8)
  {
    sub_10011BA2C(255);
    sub_10011BABC(255);
    sub_10011BB04(255);
    sub_10011BFFC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10011D0EC(&qword_100161CD0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001648E8);
  }
  return result;
}

unint64_t sub_10011CA18()
{
  unint64_t result = qword_1001648F0;
  if (!qword_1001648F0)
  {
    sub_10011B960(255);
    sub_10011C5D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001648F0);
  }
  return result;
}

uint64_t sub_10011CA90(uint64_t a1, uint64_t a2)
{
  sub_10011D30C(0, &qword_100164710, (uint64_t (*)(uint64_t))sub_10011B018, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011CB38(uint64_t a1)
{
  sub_10011D30C(0, &qword_100164710, (uint64_t (*)(uint64_t))sub_10011B018, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10011CBD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_10011CC54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_10011D080(255, (unint64_t *)&qword_10015EDB0, (uint64_t (*)(uint64_t))sub_10011B668, (uint64_t)&type metadata for Image, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
    unint64_t v7 = a3(a1, v6, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_10011CCF8(uint64_t a1, uint64_t a2)
{
  sub_10011D080(0, (unint64_t *)&qword_10015EDB0, (uint64_t (*)(uint64_t))sub_10011B668, (uint64_t)&type metadata for Image, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011CD94(uint64_t a1, uint64_t a2)
{
  sub_10011D080(0, (unint64_t *)&qword_10015EDB0, (uint64_t (*)(uint64_t))sub_10011B668, (uint64_t)&type metadata for Image, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011CE30(uint64_t a1)
{
  sub_10011D080(0, (unint64_t *)&qword_10015EDB0, (uint64_t (*)(uint64_t))sub_10011B668, (uint64_t)&type metadata for Image, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ModifiedContent);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10011CEC4(uint64_t a1, uint64_t a2)
{
  sub_10011BDAC(0, &qword_100164800, &qword_100164808, (uint64_t (*)(uint64_t))sub_10011BE24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011CF4C(uint64_t a1)
{
  sub_10011BDAC(0, &qword_100164800, &qword_100164808, (uint64_t (*)(uint64_t))sub_10011BE24);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10011CFCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_10011D034(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_10011D080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_10011D0EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10011D134(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1001249F0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10011D1A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10011D208(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10011D268()
{
  return sub_10011C76C(&qword_100164938, sub_10011D2C4, (void (*)(void))sub_10011C724, (void (*)(void))sub_10011CA18);
}

void sub_10011D2C4(uint64_t a1)
{
}

void sub_10011D30C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4(255);
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

id sub_10011D390()
{
  id result = sub_10011D414();
  qword_1001727D0 = (uint64_t)result;
  return result;
}

id sub_10011D3BC()
{
  id result = sub_10011D414();
  qword_1001727D8 = (uint64_t)result;
  return result;
}

id sub_10011D3E8()
{
  id result = sub_10011D414();
  qword_1001727E0 = (uint64_t)result;
  return result;
}

id sub_10011D414()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setNumberStyle:3];
  sub_1000C0940();
  Class isa = sub_100125FE0(100.0).super.super.isa;
  [v0 setMultiplier:isa];

  [v0 setMinimumFractionDigits:2];
  [v0 setMaximumFractionDigits:2];
  NSString v2 = sub_100125AD0();
  [v0 setPositivePrefix:v2];

  NSString v3 = sub_100125AD0();
  [v0 setNegativePrefix:v3];

  return v0;
}

uint64_t type metadata accessor for PercentChangeFormatter()
{
  return self;
}

uint64_t sub_10011D54C(char a1, double a2, double a3)
{
  double v3 = a2 - a3;
  double v4 = a3 / v3;
  if (v3 <= 0.0) {
    double v5 = 0.0;
  }
  else {
    double v5 = v4;
  }
  if (a1)
  {
    if (qword_10015D630 != -1) {
      swift_once();
    }
    uint64_t v6 = (void *)qword_1001727D8;
    id v7 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v5];
    id v8 = [v6 stringFromNumber:v7];
  }
  else
  {
    if (qword_10015D628 != -1) {
      swift_once();
    }
    uint64_t v9 = (void *)qword_1001727D0;
    id v7 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v5];
    id v8 = [v9 stringFromNumber:v7];
  }
  id v10 = v8;

  if (!v10) {
    return 0;
  }
  uint64_t v11 = sub_100125B10();

  return v11;
}

uint64_t sub_10011D6AC(double a1, double a2)
{
  double v3 = a1 - a2;
  double v4 = a2 / v3;
  if (v3 <= 0.0) {
    double v5 = 0.0;
  }
  else {
    double v5 = v4;
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
  if (a2 >= 0.0)
  {
    v25._countAndFlagsBits = 0x8000000100132120;
    v8._countAndFlagsBits = 28789;
    v8._object = (void *)0xE200000000000000;
  }
  else
  {
    v25._countAndFlagsBits = 0x80000001001320E0;
    v8._countAndFlagsBits = 1853321060;
    v8._object = (void *)0xE400000000000000;
  }
  v28.value._countAndFlagsBits = 0;
  v28.value._object = 0;
  v9.super.Class isa = v7;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  uint64_t v10 = sub_100123070(v8, v28, v9, v30, v25);
  uint64_t v12 = v11;

  if (qword_10015D638 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_1001727E0;
  id v14 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v5];
  id v15 = [v13 stringFromNumber:v14];

  if (v15)
  {
    uint64_t v16 = sub_100125B10();
    uint64_t v18 = v17;

    uint64_t v19 = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
    v26._countAndFlagsBits = 0x8000000100133660;
    v27._countAndFlagsBits = 0x4025204025;
    v27._object = (void *)0xE500000000000000;
    v29.value._countAndFlagsBits = 0;
    v29.value._object = 0;
    v20.super.Class isa = v19;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    sub_100123070(v27, v29, v20, v31, v26);

    sub_100005590();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100128E90;
    *(void *)(v21 + 56) = &type metadata for String;
    unint64_t v22 = sub_100005648();
    *(void *)(v21 + 32) = v10;
    *(void *)(v21 + 40) = v12;
    *(void *)(v21 + 96) = &type metadata for String;
    *(void *)(v21 + 104) = v22;
    *(void *)(v21 + 64) = v22;
    *(void *)(v21 + 72) = v16;
    *(void *)(v21 + 80) = v18;
    uint64_t v23 = sub_100125AE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v23;
}

uint64_t sub_10011D94C()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10011D96C, 0, 0);
}

uint64_t sub_10011D96C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[3] = v2;
  *(void *)(v2 + 16) = v1;
  double v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *double v3 = v0;
  v3[1] = sub_10011DA58;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_10011DA58()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10011DB70, 0, 0);
}

uint64_t sub_10011DB70()
{
  id v1 = [*(id *)(v0 + 16) filePath];
  if (v1)
  {
    sub_100125B10();

    id v2 = objc_allocWithZone((Class)UIImage);
    NSString v3 = sub_100125AD0();
    swift_bridgeObjectRelease();
    id v1 = [v2 initWithContentsOfFile:v3];
  }
  double v4 = *(uint64_t (**)(id))(v0 + 8);
  return v4(v1);
}

uint64_t sub_10011DC4C(uint64_t a1, void *a2)
{
  sub_10011DE0C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_10011DF08;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10011DF6C;
  aBlock[3] = &unk_100155130;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  id v11 = [a2 downloadIfNeededWithCompletion:v10];
  _Block_release(v10);
  return swift_unknownObjectRelease();
}

uint64_t sub_10011DE04(uint64_t a1)
{
  return sub_10011DC4C(a1, *(void **)(v1 + 16));
}

void sub_10011DE0C()
{
  if (!qword_1001649E8)
  {
    unint64_t v0 = sub_100125DA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001649E8);
    }
  }
}

uint64_t sub_10011DE78()
{
  sub_10011DE0C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10011DF08()
{
  return sub_100125D90();
}

uint64_t sub_10011DF6C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_10011DFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10011DFC0()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for DetailChartWidget()
{
  return &type metadata for DetailChartWidget;
}

uint64_t sub_10011DFD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10011DFF4()
{
  return sub_100124E10();
}

uint64_t sub_10011E034(uint64_t a1)
{
  uint64_t v2 = sub_1001238A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_1000C26B8();
  sub_100124E20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_10011E178@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v1 = type metadata accessor for DetailTimelineProvider(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011E7E4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011E964();
  uint64_t v40 = v9;
  uint64_t v37 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011EA18();
  uint64_t v41 = v12;
  uint64_t v39 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unsigned __int8 v38 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123B70();
  if (qword_10015D4B8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100124570();
  uint64_t v15 = sub_100019244(v14, (uint64_t)qword_100172570);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v3, v15, v14);
  type metadata accessor for DetailChartWidgetView();
  sub_10011E91C(&qword_1001649F8, (void (*)(uint64_t))type metadata accessor for DetailChartWidgetView);
  sub_10011E91C(&qword_100160048, (void (*)(uint64_t))type metadata accessor for DetailTimelineProvider);
  sub_100125940();
  sub_100124EC0();
  uint64_t v16 = sub_100125340();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  uint64_t v21 = sub_10011E91C(&qword_100164A08, (void (*)(uint64_t))sub_10011E7E4);
  sub_100124F40();
  sub_10001BAA4(v16, v18, v20);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100124EC0();
  uint64_t v22 = sub_100125340();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  uint64_t v43 = v5;
  uint64_t v44 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  Swift::String_optional v28 = v38;
  uint64_t v29 = v40;
  sub_100124F20();
  sub_10001BAA4(v22, v24, v26);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v29);
  sub_100121F50(0, &qword_10015EF50, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for _ContiguousArrayStorage);
  uint64_t v30 = sub_1001258F0();
  uint64_t v31 = *(void *)(v30 - 8);
  unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_100127010;
  (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v33 + v32, enum case for WidgetFamily.accessoryRectangular(_:), v30);
  uint64_t v43 = v29;
  uint64_t v44 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = v41;
  sub_100124F30();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v28, v34);
}

void sub_10011E7E4()
{
  if (!qword_1001649F0)
  {
    sub_100123B70();
    type metadata accessor for DetailChartWidgetView();
    sub_10011E91C(qword_10015E6A0, (void (*)(uint64_t))&type metadata accessor for SymbolWidgetConfigurationIntent);
    sub_10011E91C(&qword_1001649F8, (void (*)(uint64_t))type metadata accessor for DetailChartWidgetView);
    unint64_t v0 = sub_100125950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001649F0);
    }
  }
}

uint64_t type metadata accessor for DetailChartWidgetView()
{
  uint64_t result = qword_100164A70;
  if (!qword_100164A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10011E91C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10011E964()
{
  if (!qword_100164A00)
  {
    sub_10011E7E4();
    sub_10011E91C(&qword_100164A08, (void (*)(uint64_t))sub_10011E7E4);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100164A00);
    }
  }
}

void sub_10011EA18()
{
  if (!qword_100164A10)
  {
    sub_10011E964();
    sub_10011E7E4();
    sub_10011E91C(&qword_100164A08, (void (*)(uint64_t))sub_10011E7E4);
    swift_getOpaqueTypeConformance2();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_100164A10);
    }
  }
}

uint64_t sub_10011EB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100048DC4(a1, a2);
}

void *sub_10011EB0C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DetailTimelineEntry();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_1001232B0();
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    uint64_t v66 = v7;
    ((void (*)(void *, void *))v65)(a1, a2);
    uint64_t v8 = v6[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    *(void *)uint64_t v9 = *(void *)((char *)a2 + v8);
    *((void *)v9 + 1) = v11;
    uint64_t v12 = *(void *)((char *)a2 + v8 + 24);
    *((void *)v9 + 2) = *(void *)((char *)a2 + v8 + 16);
    *((void *)v9 + 3) = v12;
    uint64_t v13 = *(void *)((char *)a2 + v8 + 40);
    *((void *)v9 + 4) = *(void *)((char *)a2 + v8 + 32);
    *((void *)v9 + 5) = v13;
    uint64_t v14 = (_OWORD *)((char *)a1 + v8 + 48);
    uint64_t v15 = (_OWORD *)((char *)a2 + v8 + 48);
    uint64_t v16 = *(void *)((char *)a2 + v8 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v67 = v6;
    uint64_t v68 = a2;
    if (v16 == 1)
    {
      long long v17 = *((_OWORD *)v10 + 4);
      *uint64_t v14 = *v15;
      *((_OWORD *)v9 + 4) = v17;
    }
    else
    {
      *(void *)uint64_t v14 = *(void *)v15;
      v9[56] = v10[56];
      *((void *)v9 + 8) = *((void *)v10 + 8);
      *((void *)v9 + 9) = v16;
      swift_bridgeObjectRetain();
    }
    *((void *)v9 + 10) = *((void *)v10 + 10);
    v9[88] = v10[88];
    uint64_t v19 = *((void *)v10 + 13);
    *((void *)v9 + 12) = *((void *)v10 + 12);
    *((void *)v9 + 13) = v19;
    *((void *)v9 + 14) = *((void *)v10 + 14);
    v9[120] = v10[120];
    *((void *)v9 + 16) = *((void *)v10 + 16);
    v9[136] = v10[136];
    v9[137] = v10[137];
    unsigned __int8 v69 = (int *)type metadata accessor for DetailContentViewModel(0);
    uint64_t v20 = v69[9];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    uint64_t v23 = (int *)type metadata accessor for PreparedSparkline(0);
    uint64_t v24 = *((void *)v23 - 1);
    char v25 = *(unsigned int (**)(char *, uint64_t, int *))(v24 + 48);
    swift_bridgeObjectRetain();
    if (v25(v22, 1, v23))
    {
      sub_100121F50(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v21 = *(void *)v22;
      uint64_t v27 = v23[5];
      Swift::String_optional v28 = &v21[v27];
      uint64_t v29 = &v22[v27];
      char v63 = &v21[v27];
      char v64 = &v22[v27];
      swift_bridgeObjectRetain();
      v65(v28, v29, v66);
      sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
      v65(&v63[*(int *)(v30 + 36)], &v64[*(int *)(v30 + 36)], v66);
      uint64_t v31 = v23[6];
      unint64_t v32 = &v21[v31];
      uint64_t v33 = &v22[v31];
      uint64_t v34 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      *(_OWORD *)&v21[v23[7]] = *(_OWORD *)&v22[v23[7]];
      uint64_t v35 = v23[8];
      uint64_t v36 = &v21[v35];
      uint64_t v37 = &v22[v35];
      *(void *)uint64_t v36 = *(void *)v37;
      _OWORD v36[8] = v37[8];
      v21[v23[9]] = v22[v23[9]];
      (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
    }
    *(void *)&v9[v69[10]] = *(void *)&v10[v69[10]];
    uint64_t v38 = v69[11];
    uint64_t v39 = &v9[v38];
    uint64_t v40 = &v10[v38];
    sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
    uint64_t v42 = v41;
    uint64_t v43 = *(void *)(v41 - 8);
    uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    swift_bridgeObjectRetain();
    if (v44(v40, 1, v42))
    {
      sub_100029100();
      memcpy(v39, v40, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v39, v40, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
    }
    uint64_t v46 = v69[12];
    uint64_t v47 = &v9[v46];
    uint64_t v48 = &v10[v46];
    uint64_t v49 = sub_100123150();
    uint64_t v50 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      sub_100121F50(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    uint64_t v52 = v67[6];
    uint64_t v53 = (char *)a1 + v52;
    char v54 = (char *)v68 + v52;
    uint64_t v55 = sub_100123670();
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      sub_100121F50(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    uint64_t v58 = v67[7];
    uint64_t v59 = (char *)a1 + v58;
    uint64_t v60 = (char *)v68 + v58;
    uint64_t v61 = sub_1001238A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    *((unsigned char *)a1 + v67[8]) = *((unsigned char *)v68 + v67[8]);
    *((unsigned char *)a1 + v67[9]) = *((unsigned char *)v68 + v67[9]);
  }
  return a1;
}

uint64_t sub_10011F2A0(uint64_t a1)
{
  uint64_t v2 = sub_1001232B0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v5 = a1 + v4[5];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + 72) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v7 = v5 + v6[9];
  uint64_t v8 = type metadata accessor for PreparedSparkline(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    v3(v9, v2);
    sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    v3(v9 + *(int *)(v10 + 36), v2);
    uint64_t v11 = v7 + *(int *)(v8 + 24);
    uint64_t v12 = sub_1001234F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v5 + v6[11];
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
  }
  uint64_t v17 = v5 + v6[12];
  uint64_t v18 = sub_100123150();
  uint64_t v19 = *(void *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  uint64_t v20 = a1 + v4[6];
  uint64_t v21 = sub_100123670();
  uint64_t v22 = *(void *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  uint64_t v23 = a1 + v4[7];
  uint64_t v24 = sub_1001238A0();
  char v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t sub_10011F6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001232B0();
  uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  v59(a1, a2, v4);
  uint64_t v61 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v5 = v61[5];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void *)(a2 + v5 + 8);
  *(void *)uint64_t v6 = *(void *)(a2 + v5);
  *(void *)(v6 + 8) = v8;
  uint64_t v9 = *(void *)(a2 + v5 + 24);
  *(void *)(v6 + 16) = *(void *)(a2 + v5 + 16);
  *(void *)(v6 + 24) = v9;
  uint64_t v10 = *(void *)(a2 + v5 + 40);
  *(void *)(v6 + 32) = *(void *)(a2 + v5 + 32);
  *(void *)(v6 + 40) = v10;
  uint64_t v11 = (_OWORD *)(a1 + v5 + 48);
  uint64_t v12 = (_OWORD *)(a2 + v5 + 48);
  uint64_t v13 = *(void *)(a2 + v5 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  if (v13 == 1)
  {
    long long v14 = *(_OWORD *)(v7 + 64);
    *uint64_t v11 = *v12;
    *(_OWORD *)(v6 + 64) = v14;
  }
  else
  {
    *(void *)uint64_t v11 = *(void *)v12;
    *(unsigned char *)(v6 + 56) = *(unsigned char *)(v7 + 56);
    *(void *)(v6 + 64) = *(void *)(v7 + 64);
    *(void *)(v6 + 72) = v13;
    swift_bridgeObjectRetain();
  }
  *(void *)(v6 + 80) = *(void *)(v7 + 80);
  *(unsigned char *)(v6 + 88) = *(unsigned char *)(v7 + 88);
  uint64_t v15 = *(void *)(v7 + 104);
  *(void *)(v6 + 96) = *(void *)(v7 + 96);
  *(void *)(v6 + 104) = v15;
  *(void *)(v6 + 112) = *(void *)(v7 + 112);
  *(unsigned char *)(v6 + 120) = *(unsigned char *)(v7 + 120);
  *(void *)(v6 + 128) = *(void *)(v7 + 128);
  *(unsigned char *)(v6 + 136) = *(unsigned char *)(v7 + 136);
  *(unsigned char *)(v6 + 137) = *(unsigned char *)(v7 + 137);
  uint64_t v60 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v16 = v60[9];
  uint64_t v17 = (void *)(v6 + v16);
  uint64_t v18 = (void *)(v7 + v16);
  uint64_t v19 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(unsigned int (**)(void *, uint64_t, int *))(v20 + 48);
  swift_bridgeObjectRetain();
  if (v21(v18, 1, v19))
  {
    sub_100121F50(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v17 = *v18;
    uint64_t v23 = v19[5];
    uint64_t v24 = (char *)v17 + v23;
    char v25 = (char *)v18 + v23;
    swift_bridgeObjectRetain();
    v59((uint64_t)v24, (uint64_t)v25, v4);
    sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    v59((uint64_t)&v24[*(int *)(v26 + 36)], (uint64_t)&v25[*(int *)(v26 + 36)], v4);
    uint64_t v27 = v19[6];
    Swift::String_optional v28 = (char *)v17 + v27;
    uint64_t v29 = (char *)v18 + v27;
    uint64_t v30 = sub_1001234F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    *(_OWORD *)((char *)v17 + v19[7]) = *(_OWORD *)((char *)v18 + v19[7]);
    uint64_t v31 = v19[8];
    unint64_t v32 = (char *)v17 + v31;
    uint64_t v33 = (char *)v18 + v31;
    *(void *)unint64_t v32 = *(void *)v33;
    v32[8] = v33[8];
    *((unsigned char *)v17 + v19[9]) = *((unsigned char *)v18 + v19[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  *(void *)(v6 + v60[10]) = *(void *)(v7 + v60[10]);
  uint64_t v34 = v60[11];
  uint64_t v35 = (void *)(v6 + v34);
  uint64_t v36 = (const void *)(v7 + v34);
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v38 = v37;
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v40 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48);
  swift_bridgeObjectRetain();
  if (v40(v36, 1, v38))
  {
    sub_100029100();
    memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v35, v36, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v38);
  }
  uint64_t v42 = v60[12];
  uint64_t v43 = (void *)(v6 + v42);
  uint64_t v44 = (const void *)(v7 + v42);
  uint64_t v45 = sub_100123150();
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    sub_100121F50(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(v43, v44, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  uint64_t v48 = v61[6];
  uint64_t v49 = (void *)(v63 + v48);
  uint64_t v50 = (const void *)(v62 + v48);
  uint64_t v51 = sub_100123670();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    sub_100121F50(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  uint64_t v54 = v61[7];
  uint64_t v55 = v63 + v54;
  uint64_t v56 = v62 + v54;
  uint64_t v57 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
  *(unsigned char *)(v63 + v61[8]) = *(unsigned char *)(v62 + v61[8]);
  *(unsigned char *)(v63 + v61[9]) = *(unsigned char *)(v62 + v61[9]);
  return v63;
}

uint64_t sub_10011FDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001232B0();
  uint64_t v92 = *(void *)(v4 - 8);
  char v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 24);
  v90(a1, a2, v4);
  uint64_t v5 = type metadata accessor for DetailTimelineEntry();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  *(void *)(v7 + 8) = *(void *)(a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (_OWORD *)(v7 + 48);
  uint64_t v10 = (_OWORD *)(v8 + 48);
  uint64_t v11 = *(void *)(v8 + 72);
  uint64_t v94 = a2;
  uint64_t v95 = a1;
  uint64_t v93 = (int *)v5;
  if (*(void *)(v7 + 72) == 1)
  {
    if (v11 == 1)
    {
      long long v12 = *(_OWORD *)(v8 + 64);
      *uint64_t v9 = *v10;
      *(_OWORD *)(v7 + 64) = v12;
    }
    else
    {
      uint64_t v14 = *(void *)v10;
      *(unsigned char *)(v7 + 56) = *(unsigned char *)(v8 + 56);
      *(void *)uint64_t v9 = v14;
      *(void *)(v7 + 64) = *(void *)(v8 + 64);
      *(void *)(v7 + 72) = *(void *)(v8 + 72);
      swift_bridgeObjectRetain();
    }
  }
  else if (v11 == 1)
  {
    sub_10003088C(v7 + 48);
    long long v13 = *(_OWORD *)(v8 + 64);
    *uint64_t v9 = *v10;
    *(_OWORD *)(v7 + 64) = v13;
  }
  else
  {
    uint64_t v15 = *(void *)v10;
    *(unsigned char *)(v7 + 56) = *(unsigned char *)(v8 + 56);
    *(void *)uint64_t v9 = v15;
    *(void *)(v7 + 64) = *(void *)(v8 + 64);
    *(void *)(v7 + 72) = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = *(void *)(v8 + 80);
  *(unsigned char *)(v7 + 88) = *(unsigned char *)(v8 + 88);
  *(void *)(v7 + 80) = v16;
  *(void *)(v7 + 96) = *(void *)(v8 + 96);
  *(void *)(v7 + 104) = *(void *)(v8 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v8 + 112);
  *(unsigned char *)(v7 + 120) = *(unsigned char *)(v8 + 120);
  *(void *)(v7 + 112) = v17;
  uint64_t v18 = *(void *)(v8 + 128);
  *(unsigned char *)(v7 + 136) = *(unsigned char *)(v8 + 136);
  *(void *)(v7 + 128) = v18;
  *(unsigned char *)(v7 + 137) = *(unsigned char *)(v8 + 137);
  long long v96 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v19 = v96[9];
  uint64_t v20 = (void *)(v7 + v19);
  uint64_t v21 = (void *)(v8 + v19);
  uint64_t v22 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      *uint64_t v20 = *v21;
      uint64_t v27 = v22[5];
      Swift::String_optional v28 = (char *)v20 + v27;
      uint64_t v89 = (char *)v21 + v27;
      char v91 = (char *)v20 + v27;
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
      swift_bridgeObjectRetain();
      v29(v28, v89, v4);
      sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
      v29(&v91[*(int *)(v30 + 36)], &v89[*(int *)(v30 + 36)], v4);
      uint64_t v31 = v22[6];
      unint64_t v32 = (char *)v20 + v31;
      uint64_t v33 = (char *)v21 + v31;
      uint64_t v34 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      *(_OWORD *)((char *)v20 + v22[7]) = *(_OWORD *)((char *)v21 + v22[7]);
      uint64_t v35 = v22[8];
      uint64_t v36 = (char *)v20 + v35;
      uint64_t v37 = (char *)v21 + v35;
      char v38 = v37[8];
      *(void *)uint64_t v36 = *(void *)v37;
      _OWORD v36[8] = v38;
      *((unsigned char *)v20 + v22[9]) = *((unsigned char *)v21 + v22[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v26)
  {
    sub_1001220F4((uint64_t)v20, type metadata accessor for PreparedSparkline);
LABEL_13:
    sub_100121F50(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v20, v21, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_14;
  }
  *uint64_t v20 = *v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = v22[5];
  uint64_t v75 = (char *)v20 + v74;
  uint64_t v76 = (char *)v21 + v74;
  v90((uint64_t)v20 + v74, (uint64_t)v21 + v74, v4);
  sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
  v90((uint64_t)&v75[*(int *)(v77 + 36)], (uint64_t)&v76[*(int *)(v77 + 36)], v4);
  uint64_t v78 = v22[6];
  uint64_t v79 = (char *)v20 + v78;
  uint64_t v80 = (char *)v21 + v78;
  uint64_t v81 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  uint64_t v82 = v22[7];
  uint64_t v83 = (void *)((char *)v20 + v82);
  uint64_t v84 = (void *)((char *)v21 + v82);
  *uint64_t v83 = *v84;
  v83[1] = v84[1];
  uint64_t v85 = v22[8];
  uint64_t v86 = (char *)v20 + v85;
  uint64_t v87 = (char *)v21 + v85;
  char v88 = v87[8];
  *(void *)uint64_t v86 = *(void *)v87;
  v86[8] = v88;
  *((unsigned char *)v20 + v22[9]) = *((unsigned char *)v21 + v22[9]);
LABEL_14:
  *(void *)(v7 + v96[10]) = *(void *)(v8 + v96[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = v96[11];
  uint64_t v41 = (void *)(v7 + v40);
  uint64_t v42 = (void *)(v8 + v40);
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(v43 - 8);
  uint64_t v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v41, 1, v43);
  int v48 = v46(v42, 1, v44);
  if (v47)
  {
    uint64_t v49 = v94;
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v45 + 16))(v41, v42, v44);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v41, 0, 1, v44);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  uint64_t v49 = v94;
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v45 + 8))(v41, v44);
LABEL_19:
    sub_100029100();
    memcpy(v41, v42, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v45 + 24))(v41, v42, v44);
LABEL_20:
  uint64_t v51 = v96[12];
  uint64_t v52 = (void *)(v7 + v51);
  uint64_t v53 = (void *)(v8 + v51);
  uint64_t v54 = sub_100123150();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, void *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v55 + 8))(v52, v54);
LABEL_25:
    sub_100121F50(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v52, v53, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v55 + 24))(v52, v53, v54);
LABEL_26:
  uint64_t v60 = v93[6];
  uint64_t v61 = (void *)(v95 + v60);
  uint64_t v62 = (void *)(v49 + v60);
  uint64_t v63 = sub_100123670();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v64 + 48);
  int v66 = v65(v61, 1, v63);
  int v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(void *, void *, uint64_t))(v64 + 24))(v61, v62, v63);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_31;
  }
  if (v67)
  {
LABEL_31:
    sub_100121F50(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v61, v62, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v64 + 16))(v61, v62, v63);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_32:
  uint64_t v69 = v93[7];
  uint64_t v70 = v95 + v69;
  uint64_t v71 = v49 + v69;
  uint64_t v72 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 24))(v70, v71, v72);
  *(unsigned char *)(v95 + v93[8]) = *(unsigned char *)(v49 + v93[8]);
  *(unsigned char *)(v95 + v93[9]) = *(unsigned char *)(v49 + v93[9]);
  return v95;
}

uint64_t sub_1001208A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001232B0();
  uint64_t v5 = (void (**)(void))(*(void *)(v4 - 8) + 32);
  uint64_t v59 = *v5;
  ((void (*)(uint64_t, uint64_t, uint64_t))*v5)(a1, a2, v4);
  uint64_t v61 = (int *)type metadata accessor for DetailTimelineEntry();
  uint64_t v6 = v61[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  long long v9 = *(_OWORD *)(a2 + v6 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(_OWORD *)(v7 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + v6 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a2 + v6 + 32);
  *(_OWORD *)(v7 + 48) = v10;
  long long v11 = *(_OWORD *)(a2 + v6 + 80);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a2 + v6 + 64);
  *(_OWORD *)(v7 + 80) = v11;
  *(_OWORD *)(v7 + 121) = *(_OWORD *)(a2 + v6 + 121);
  long long v12 = *(_OWORD *)(a2 + v6 + 112);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a2 + v6 + 96);
  *(_OWORD *)(v7 + 112) = v12;
  *(unsigned char *)(v7 + 137) = *(unsigned char *)(a2 + v6 + 137);
  uint64_t v60 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v13 = v60[9];
  uint64_t v14 = (void *)(v7 + v13);
  uint64_t v15 = (void *)(v8 + v13);
  uint64_t v16 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    sub_100121F50(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *uint64_t v14 = *v15;
    uint64_t v19 = v16[5];
    uint64_t v57 = a2;
    uint64_t v58 = a1;
    uint64_t v56 = (char *)v14 + v19;
    uint64_t v20 = (char *)v15 + v19;
    v59();
    sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
    uint64_t v22 = *(int *)(v21 + 36);
    uint64_t v23 = &v20[v22];
    a2 = v57;
    ((void (*)(char *, char *, uint64_t))v59)(&v56[v22], v23, v4);
    uint64_t v24 = v16[6];
    int v25 = (char *)v14 + v24;
    int v26 = (char *)v15 + v24;
    uint64_t v27 = sub_1001234F0();
    Swift::String_optional v28 = v26;
    a1 = v58;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v28, v27);
    *(_OWORD *)((char *)v14 + v16[7]) = *(_OWORD *)((char *)v15 + v16[7]);
    uint64_t v29 = v16[8];
    uint64_t v30 = (char *)v14 + v29;
    uint64_t v31 = (char *)v15 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    *((unsigned char *)v14 + v16[9]) = *((unsigned char *)v15 + v16[9]);
    (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  *(void *)(v7 + v60[10]) = *(void *)(v8 + v60[10]);
  uint64_t v32 = v60[11];
  uint64_t v33 = (void *)(v7 + v32);
  uint64_t v34 = (const void *)(v8 + v32);
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v35))
  {
    sub_100029100();
    memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v37 + 32))(v33, v34, v36);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
  }
  uint64_t v39 = v60[12];
  uint64_t v40 = (void *)(v7 + v39);
  uint64_t v41 = (const void *)(v8 + v39);
  uint64_t v42 = sub_100123150();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    sub_100121F50(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  uint64_t v45 = v61[6];
  uint64_t v46 = (void *)(a1 + v45);
  int v47 = (const void *)(a2 + v45);
  uint64_t v48 = sub_100123670();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    sub_100121F50(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v46, v47, v48);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  uint64_t v51 = v61[7];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  *(unsigned char *)(a1 + v61[8]) = *(unsigned char *)(a2 + v61[8]);
  *(unsigned char *)(a1 + v61[9]) = *(unsigned char *)(a2 + v61[9]);
  return a1;
}

uint64_t sub_100120F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1001232B0();
  uint64_t v84 = *(void *)(v4 - 8);
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 40);
  v82(a1, a2, v4);
  uint64_t v5 = type metadata accessor for DetailTimelineEntry();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *(void *)uint64_t v7 = *(void *)(a2 + v6);
  *(void *)(v7 + 8) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v8 + 24);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v8 + 40);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = v11;
  swift_bridgeObjectRelease();
  long long v12 = (_OWORD *)(v7 + 48);
  uint64_t v13 = (_OWORD *)(v8 + 48);
  uint64_t v86 = a2;
  uint64_t v87 = a1;
  uint64_t v85 = (int *)v5;
  if (*(void *)(v7 + 72) == 1) {
    goto LABEL_4;
  }
  uint64_t v14 = *(void *)(v8 + 72);
  if (v14 == 1)
  {
    sub_10003088C(v7 + 48);
LABEL_4:
    long long v15 = *(_OWORD *)(v8 + 64);
    *long long v12 = *v13;
    *(_OWORD *)(v7 + 64) = v15;
    goto LABEL_6;
  }
  *(void *)long long v12 = *(void *)v13;
  *(unsigned char *)(v7 + 56) = *(unsigned char *)(v8 + 56);
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  *(void *)(v7 + 72) = v14;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(v7 + 80) = *(void *)(v8 + 80);
  *(unsigned char *)(v7 + 88) = *(unsigned char *)(v8 + 88);
  uint64_t v16 = *(void *)(v8 + 104);
  *(void *)(v7 + 96) = *(void *)(v8 + 96);
  *(void *)(v7 + 104) = v16;
  swift_bridgeObjectRelease();
  *(void *)(v7 + 112) = *(void *)(v8 + 112);
  *(unsigned char *)(v7 + 120) = *(unsigned char *)(v8 + 120);
  *(void *)(v7 + 128) = *(void *)(v8 + 128);
  *(_WORD *)(v7 + 136) = *(_WORD *)(v8 + 136);
  char v88 = (int *)type metadata accessor for DetailContentViewModel(0);
  uint64_t v17 = v88[9];
  uint64_t v18 = (void *)(v7 + v17);
  uint64_t v19 = (void *)(v8 + v17);
  uint64_t v20 = (int *)type metadata accessor for PreparedSparkline(0);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      *uint64_t v18 = *v19;
      uint64_t v25 = v20[5];
      uint64_t v83 = (char *)v18 + v25;
      int v26 = (char *)v19 + v25;
      uint64_t v27 = *(void (**)(void))(v84 + 32);
      v27();
      sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
      ((void (*)(char *, char *, uint64_t))v27)(&v83[*(int *)(v28 + 36)], &v26[*(int *)(v28 + 36)], v4);
      uint64_t v29 = v20[6];
      uint64_t v30 = (char *)v18 + v29;
      uint64_t v31 = (char *)v19 + v29;
      uint64_t v32 = sub_1001234F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
      uint64_t v33 = v20[8];
      uint64_t v34 = (char *)v18 + v33;
      uint64_t v35 = (char *)v19 + v33;
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v35[8];
      *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
      (*(void (**)(void *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v24)
  {
    sub_1001220F4((uint64_t)v18, type metadata accessor for PreparedSparkline);
LABEL_11:
    sub_100121F50(0, (unint64_t *)&qword_10015DF28, type metadata accessor for PreparedSparkline, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v18, v19, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_12;
  }
  *uint64_t v18 = *v19;
  swift_bridgeObjectRelease();
  uint64_t v71 = v20[5];
  uint64_t v72 = (char *)v18 + v71;
  uint64_t v73 = (char *)v19 + v71;
  v82((uint64_t)v18 + v71, (uint64_t)v19 + v71, v4);
  sub_10006E380(0, (unint64_t *)&qword_10015EB48, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(void))sub_10002FE9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ClosedRange);
  v82((uint64_t)&v72[*(int *)(v74 + 36)], (uint64_t)&v73[*(int *)(v74 + 36)], v4);
  uint64_t v75 = v20[6];
  uint64_t v76 = (char *)v18 + v75;
  uint64_t v77 = (char *)v19 + v75;
  uint64_t v78 = sub_1001234F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 40))(v76, v77, v78);
  *(_OWORD *)((char *)v18 + v20[7]) = *(_OWORD *)((char *)v19 + v20[7]);
  uint64_t v79 = v20[8];
  uint64_t v80 = (char *)v18 + v79;
  uint64_t v81 = (char *)v19 + v79;
  v80[8] = v81[8];
  *(void *)uint64_t v80 = *(void *)v81;
  *((unsigned char *)v18 + v20[9]) = *((unsigned char *)v19 + v20[9]);
LABEL_12:
  *(void *)(v7 + v88[10]) = *(void *)(v8 + v88[10]);
  swift_bridgeObjectRelease();
  uint64_t v37 = v88[11];
  uint64_t v38 = (void *)(v7 + v37);
  uint64_t v39 = (void *)(v8 + v37);
  sub_10006E380(0, (unint64_t *)&qword_10015E708, (uint64_t (*)(uint64_t))sub_10002919C, sub_1000291D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for NonEmpty);
  uint64_t v41 = v40;
  uint64_t v42 = *(void *)(v40 - 8);
  uint64_t v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
  int v44 = v43(v38, 1, v40);
  int v45 = v43(v39, 1, v41);
  if (v44)
  {
    uint64_t v46 = v86;
    if (!v45)
    {
      (*(void (**)(void *, void *, uint64_t))(v42 + 32))(v38, v39, v41);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v38, 0, 1, v41);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v46 = v86;
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v42 + 8))(v38, v41);
LABEL_17:
    sub_100029100();
    memcpy(v38, v39, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v42 + 40))(v38, v39, v41);
LABEL_18:
  uint64_t v48 = v88[12];
  uint64_t v49 = (void *)(v7 + v48);
  uint64_t v50 = (void *)(v8 + v48);
  uint64_t v51 = sub_100123150();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
  int v54 = v53(v49, 1, v51);
  int v55 = v53(v50, 1, v51);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(void *, void *, uint64_t))(v52 + 32))(v49, v50, v51);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v55)
  {
    (*(void (**)(void *, uint64_t))(v52 + 8))(v49, v51);
LABEL_23:
    sub_100121F50(0, &qword_1001626D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v49, v50, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v52 + 40))(v49, v50, v51);
LABEL_24:
  uint64_t v57 = v85[6];
  uint64_t v58 = (void *)(v87 + v57);
  uint64_t v59 = (void *)(v46 + v57);
  uint64_t v60 = sub_100123670();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  int v63 = v62(v58, 1, v60);
  int v64 = v62(v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v61 + 40))(v58, v59, v60);
      goto LABEL_30;
    }
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
    goto LABEL_29;
  }
  if (v64)
  {
LABEL_29:
    sub_100121F50(0, &qword_10015DF20, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetQuote, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    memcpy(v58, v59, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v61 + 32))(v58, v59, v60);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_30:
  uint64_t v66 = v85[7];
  uint64_t v67 = v87 + v66;
  uint64_t v68 = v46 + v66;
  uint64_t v69 = sub_1001238A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
  *(unsigned char *)(v87 + v85[8]) = *(unsigned char *)(v46 + v85[8]);
  *(unsigned char *)(v87 + v85[9]) = *(unsigned char *)(v46 + v85[9]);
  return v87;
}

uint64_t sub_100121944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100121958);
}

uint64_t sub_100121958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailTimelineEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1001219C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001219D8);
}

uint64_t sub_1001219D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailTimelineEntry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100121A48()
{
  uint64_t result = type metadata accessor for DetailTimelineEntry();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100121AD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100121BC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100121BE0@<X0>(uint64_t a1@<X8>)
{
  v24[1] = a1;
  uint64_t v2 = type metadata accessor for DetailTimelineEntry();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DetailChartComplicationContentView();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  long long v12 = (char *)v24 - v11;
  sub_100121EA4();
  uint64_t v14 = v13;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100048DC4(v1, (uint64_t)v5);
  *uint64_t v9 = swift_getKeyPath();
  sub_100121F50(0, &qword_10015FB58, (uint64_t (*)(uint64_t))&type metadata accessor for PriceChangeDisplay, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  swift_storeEnumTagMultiPayload();
  sub_100121FB4((uint64_t)v5, (uint64_t)v9 + *(int *)(v7 + 28), (uint64_t (*)(void))type metadata accessor for DetailTimelineEntry);
  sub_100121FB4((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DetailChartComplicationContentView);
  uint64_t v17 = v1 + *(int *)(v3 + 36);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  sub_10003C850(0);
  uint64_t v21 = (char *)v19 + *(int *)(v20 + 28);
  uint64_t v22 = sub_1001238A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, v17, v22);
  *uint64_t v19 = KeyPath;
  sub_100121FB4((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DetailChartComplicationContentView);
  type metadata accessor for DetailContentViewModel(0);
  sub_10012201C();
  sub_1001253E0();
  return sub_1001220F4((uint64_t)v16, (uint64_t (*)(void))sub_100121EA4);
}

void sub_100121EA4()
{
  if (!qword_100164AA8)
  {
    type metadata accessor for DetailChartComplicationContentView();
    sub_10003C850(255);
    unint64_t v0 = sub_100124B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100164AA8);
    }
  }
}

uint64_t sub_100121F0C()
{
  return sub_100124E10();
}

void sub_100121F50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100121FB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10012201C()
{
  unint64_t result = qword_100164AB0;
  if (!qword_100164AB0)
  {
    sub_100121EA4();
    sub_10011E91C(&qword_100164AB8, (void (*)(uint64_t))type metadata accessor for DetailChartComplicationContentView);
    sub_10011E91C(&qword_10015F0E0, sub_10003C850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164AB0);
  }
  return result;
}

uint64_t sub_1001220F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100122154()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SymbolName()
{
  return &type metadata for SymbolName;
}

uint64_t sub_1001221BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  sub_10012286C(0, &qword_100164AD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedEncodingContainer);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v13 - v10;
  sub_100009D98(a1, a1[3]);
  sub_100122818();
  sub_100126650();
  char v15 = 0;
  sub_100126480();
  if (!v5)
  {
    char v14 = 1;
    sub_100126480();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100122344()
{
  if (*v0) {
    return 0x74726F6873;
  }
  else {
    return 0x746361706D6F63;
  }
}

uint64_t sub_10012237C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100122510(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001223A4(uint64_t a1)
{
  unint64_t v2 = sub_100122818();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001223E0(uint64_t a1)
{
  unint64_t v2 = sub_100122818();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10012241C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_100126530(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_100126530();
    }
  }
  return result;
}

uint64_t sub_1001224C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001225FC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1001224F0(void *a1)
{
  return sub_1001221BC(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_100122510(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746361706D6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_100126530() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74726F6873 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_100126530();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001225FC(void *a1)
{
  sub_10012286C(0, &qword_100164AC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for KeyedDecodingContainer);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[4];
  sub_100009D98(a1, a1[3]);
  sub_100122818();
  sub_100126640();
  if (v1)
  {
    sub_100009D48((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_1001263B0();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_1001263B0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    sub_100009D48((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_100122818()
{
  unint64_t result = qword_100164AC8;
  if (!qword_100164AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164AC8);
  }
  return result;
}

void sub_10012286C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_100122818();
    unint64_t v7 = a3(a1, &type metadata for SymbolName.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SymbolName.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012299CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolName.CodingKeys()
{
  return &type metadata for SymbolName.CodingKeys;
}

unint64_t sub_1001229D8()
{
  unint64_t result = qword_100164AD8;
  if (!qword_100164AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164AD8);
  }
  return result;
}

unint64_t sub_100122A30()
{
  unint64_t result = qword_100164AE0;
  if (!qword_100164AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164AE0);
  }
  return result;
}

unint64_t sub_100122A88()
{
  unint64_t result = qword_100164AE8;
  if (!qword_100164AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100164AE8);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_100122B00()
{
  return static AppIntentInternal.sideEffect.getter();
}

uint64_t sub_100122B10()
{
  return static AppIntentInternal.shortcutsMetadata.getter();
}

uint64_t sub_100122B20()
{
  return AppDependencyManager.addStocksDependencies(using:)();
}

uint64_t sub_100122B30()
{
  return static AppDependencyManager.shared.getter();
}

uint64_t sub_100122B40()
{
  return type metadata accessor for AppDependencyManager();
}

uint64_t sub_100122B80()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t sub_100122B90()
{
  return static AppIntent.description.getter();
}

uint64_t sub_100122BA0()
{
  return AppIntent.systemContext.getter();
}

uint64_t sub_100122BB0()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t sub_100122BC0()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t sub_100122BD0()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t sub_100122C00()
{
  return IntentDialog._GeneratedDialogContent.init(fromResult:options:fallbackDialog:)();
}

uint64_t sub_100122C10()
{
  return type metadata accessor for IntentDialog._GeneratedDialogContent();
}

uint64_t sub_100122C30()
{
  return IntentDialog.init<A, B>(from:capturedContent:)();
}

uint64_t sub_100122C40()
{
  return type metadata accessor for IntentDialog();
}

uint64_t sub_100122C50()
{
  return static IntentResult.result<A>(value:dialog:)();
}

uint64_t sub_100122C60()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t sub_100122C70()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100122C80()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_100122C90()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t sub_100122CA0()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_100122CB0()
{
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_100122CC0()
{
  return IntentDescription.init(stringLiteral:)();
}

uint64_t sub_100122CD0()
{
  return type metadata accessor for IntentDescription();
}

uint64_t sub_100122D10()
{
  return IntentSystemContext.preciseTimestamp.getter();
}

uint64_t sub_100122D20()
{
  return type metadata accessor for IntentSystemContext();
}

uint64_t sub_100122D30()
{
  return static _DialogBuilderEntity.buildBlock<A>(_:)();
}

uint64_t sub_100122D40()
{
  return static _DialogBuilderEntity.buildExpression<A, B>(_:)();
}

uint64_t sub_100122D50()
{
  return DisplayRepresentation.Image.init(appBundleIdentifier:)();
}

uint64_t sub_100122D60()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t sub_100122D70()
{
  return DisplayRepresentation.init(title:subtitle:image:synonyms:descriptionText:)();
}

uint64_t sub_100122D80()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t sub_100122D90()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t sub_100122DA0()
{
  return static EnumerableEntityQuery.findIntentDescription.getter();
}

uint64_t sub_100122DB0()
{
  return type metadata accessor for IntentResultContainer();
}

uint64_t sub_100122DC0()
{
  return _URLRepresentableEnum.urlRepresentationParameter.getter();
}

uint64_t sub_100122DD0()
{
  return _UniqueEntityProvider.init(_:)();
}

uint64_t sub_100122DF0()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t sub_100122E00()
{
  return _EnumURLRepresentation.EnumSingleURLRepresentation.init(stringLiteral:)();
}

uint64_t sub_100122E10()
{
  return type metadata accessor for _EnumURLRepresentation.EnumSingleURLRepresentation();
}

uint64_t sub_100122E20()
{
  return _EnumURLRepresentation.init(_:)();
}

uint64_t sub_100122E30()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t sub_100122E40()
{
  return _URLRepresentableEntity.urlRepresentationParameter.getter();
}

uint64_t sub_100122EA0()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t sub_100122EC0()
{
  return type metadata accessor for _GeneratedContentOptions();
}

uint64_t sub_100122ED0()
{
  return TypeDisplayRepresentation.init(stringLiteral:)();
}

uint64_t sub_100122EE0()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_100122EF0()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t sub_100122F00()
{
  return type metadata accessor for _GeneratedContentFallback();
}

uint64_t sub_100122F20()
{
  return type metadata accessor for _EntityDeferredPropertyValue();
}

uint64_t sub_100122F30()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t sub_100122F40()
{
  return type metadata accessor for _IntentUpdatableEntityProperty();
}

uint64_t sub_100122F50()
{
  return dispatch thunk of FormatStyle.format(_:)();
}

uint64_t sub_100122F60()
{
  return FormatStyle.locale(_:)();
}

uint64_t sub_100122F70()
{
  return type metadata accessor for JSONDecoder.DateDecodingStrategy();
}

uint64_t sub_100122F80()
{
  return dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
}

uint64_t sub_100122F90()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_100122FA0()
{
  return JSONDecoder.init()();
}

uint64_t sub_100122FB0()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_100122FC0()
{
  return type metadata accessor for JSONEncoder.DateEncodingStrategy();
}

uint64_t sub_100122FD0()
{
  return dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
}

uint64_t sub_100122FE0()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_100122FF0()
{
  return JSONEncoder.init()();
}

uint64_t sub_100123000()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_100123010()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100123020()
{
  return type metadata accessor for Notification();
}

uint64_t sub_100123030()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_100123040()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t sub_100123050()
{
  return DateComponents.hour.getter();
}

uint64_t sub_100123060()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_100123070(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_100123080()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_100123090()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1001230A0()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t sub_1001230B0()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t sub_1001230C0()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1001230D0()
{
  return static FormatStyleCapitalizationContext.unknown.getter();
}

uint64_t sub_1001230E0()
{
  return type metadata accessor for FormatStyleCapitalizationContext();
}

uint64_t sub_1001230F0()
{
  return static URL.temporaryDirectory.getter();
}

void sub_100123100(NSURL *retstr@<X8>)
{
}

uint64_t sub_100123110()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_100123120()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100123130()
{
  return URL.path.getter();
}

uint64_t sub_100123140()
{
  return URL.appending(queryItems:)();
}

uint64_t sub_100123150()
{
  return type metadata accessor for URL();
}

NSData sub_100123160()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_100123170()
{
  return type metadata accessor for Date.FormatStyle.TimeStyle();
}

uint64_t sub_100123180()
{
  return type metadata accessor for Date.FormatStyle.DateStyle();
}

uint64_t sub_100123190()
{
  return Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
}

uint64_t sub_1001231A0()
{
  return Date.FormatStyle.hour(_:)();
}

uint64_t sub_1001231B0()
{
  return static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)();
}

uint64_t sub_1001231C0()
{
  return static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter();
}

uint64_t sub_1001231D0()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle();
}

uint64_t sub_1001231E0()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Hour();
}

uint64_t sub_1001231F0()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t sub_100123200()
{
  return Date.init(timeInterval:since:)();
}

uint64_t sub_100123210()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_100123220()
{
  return Date.addingTimeInterval(_:)();
}

NSDate sub_100123230()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_100123240()
{
  return static Date.> infix(_:_:)();
}

uint64_t sub_100123250()
{
  return static Date.+ infix(_:_:)();
}

uint64_t sub_100123260()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_100123270()
{
  return static Date.now.getter();
}

uint64_t sub_100123280()
{
  return Date.compare(_:)();
}

uint64_t sub_100123290()
{
  return Date.formatted()()._countAndFlagsBits;
}

uint64_t sub_1001232A0()
{
  return Date.init()();
}

uint64_t sub_1001232B0()
{
  return type metadata accessor for Date();
}

uint64_t sub_1001232C0()
{
  return UUID.uuidString.getter();
}

uint64_t sub_1001232D0()
{
  return UUID.init()();
}

uint64_t sub_1001232E0()
{
  return type metadata accessor for UUID();
}

uint64_t sub_1001232F0()
{
  return Locale.shouldSwapPriceChangeColors.getter();
}

uint64_t sub_100123300()
{
  return static Locale.identifier(fromComponents:)();
}

uint64_t sub_100123310()
{
  return Locale.init(identifier:)();
}

uint64_t sub_100123320()
{
  return Locale.LanguageCode.identifier.getter();
}

uint64_t sub_100123330()
{
  return Locale.LanguageCode.init(stringLiteral:)();
}

uint64_t sub_100123340()
{
  return type metadata accessor for Locale.LanguageCode();
}

NSLocale sub_100123350()
{
  return Locale._bridgeToObjectiveC()();
}

uint64_t sub_100123360()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t sub_100123370()
{
  return Locale.Region.identifier.getter();
}

uint64_t sub_100123380()
{
  return type metadata accessor for Locale.Region();
}

uint64_t sub_100123390()
{
  return static Locale.current.getter();
}

uint64_t sub_1001233A0()
{
  return Locale.Language.languageCode.getter();
}

uint64_t sub_1001233B0()
{
  return Locale.Language.region.getter();
}

uint64_t sub_1001233C0()
{
  return type metadata accessor for Locale.Language();
}

uint64_t sub_1001233D0()
{
  return Locale.language.getter();
}

uint64_t sub_1001233E0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1001233F0()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t sub_100123400()
{
  return Calendar.init(identifier:)();
}

uint64_t sub_100123410()
{
  return type metadata accessor for Calendar.MatchingPolicy();
}

uint64_t sub_100123420()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t sub_100123430()
{
  return type metadata accessor for Calendar.SearchDirection();
}

uint64_t sub_100123440()
{
  return type metadata accessor for Calendar.RepeatedTimePolicy();
}

uint64_t sub_100123450()
{
  return static Calendar._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100123460()
{
  return Calendar.date(bySettingHour:minute:second:of:matchingPolicy:repeatedTimePolicy:direction:)();
}

uint64_t sub_100123470()
{
  return static Calendar.current.getter();
}

uint64_t sub_100123480()
{
  return Calendar.timeZone.setter();
}

uint64_t sub_100123490()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_1001234A0()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1001234B0()
{
  return TimeZone.init(identifier:)();
}

NSTimeZone sub_1001234C0()
{
  return TimeZone._bridgeToObjectiveC()();
}

uint64_t sub_1001234D0()
{
  return static TimeZone.== infix(_:_:)();
}

uint64_t sub_1001234E0()
{
  return static TimeZone.current.getter();
}

uint64_t sub_1001234F0()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_100123500()
{
  return type metadata accessor for ChartRange();
}

uint64_t sub_100123510()
{
  return QuoteDetail.dayLowPrice.getter();
}

uint64_t sub_100123520()
{
  return QuoteDetail.dayHighPrice.getter();
}

uint64_t sub_100123530()
{
  return QuoteDetail.init(dayOpenPrice:dayLowPrice:dayHighPrice:yearLowPrice:yearHighPrice:dividendYield:volume:averageVolume:priceEarningsRatio:beta:earningsPerShare:earningsStartDate:earningsEndDate:currencyCode:detailsURL:keyStatisticsURL:marketTimeZone:fundAssetClass:fundCategory:fundFocus:fundNiche:fundRegion:fundTopHoldings:fundSectors:dateLastRefreshed:)();
}

uint64_t sub_100123540()
{
  return QuoteDetail.dayOpenPrice.getter();
}

uint64_t sub_100123550()
{
  return QuoteDetail.yearLowPrice.getter();
}

uint64_t sub_100123560()
{
  return QuoteDetail.averageVolume.getter();
}

uint64_t sub_100123570()
{
  return QuoteDetail.dividendYield.getter();
}

uint64_t sub_100123580()
{
  return QuoteDetail.yearHighPrice.getter();
}

uint64_t sub_100123590()
{
  return QuoteDetail.earningsPerShare.getter();
}

uint64_t sub_1001235A0()
{
  return QuoteDetail.dateLastRefreshed.getter();
}

uint64_t sub_1001235B0()
{
  return QuoteDetail.priceEarningsRatio.getter();
}

uint64_t sub_1001235C0()
{
  return QuoteDetail.beta.getter();
}

uint64_t sub_1001235D0()
{
  return QuoteDetail.volume.getter();
}

uint64_t sub_1001235E0()
{
  return type metadata accessor for QuoteDetail();
}

uint64_t sub_1001235F0()
{
  return WidgetQuote.priceChange.getter();
}

uint64_t sub_100123600()
{
  return WidgetQuote.currencyCode.getter();
}

uint64_t sub_100123610()
{
  return WidgetQuote.exchangeStatus.getter();
}

uint64_t sub_100123620()
{
  return WidgetQuote.exchangeNextOpen.getter();
}

uint64_t sub_100123630()
{
  return WidgetQuote.marketCapitalization.getter();
}

uint64_t sub_100123640()
{
  return WidgetQuote.init(from:)();
}

uint64_t sub_100123650()
{
  return WidgetQuote.init(price:priceChange:marketCapitalization:currencyCode:exchangeStatus:exchangeNextOpen:)();
}

uint64_t sub_100123660()
{
  return WidgetQuote.price.getter();
}

uint64_t sub_100123670()
{
  return type metadata accessor for WidgetQuote();
}

uint64_t sub_100123680()
{
  return ExchangeStatus.isClosed.getter();
}

uint64_t sub_100123690()
{
  return ExchangeStatus.rawValue.getter();
}

uint64_t sub_1001236A0()
{
  return type metadata accessor for ExchangeStatus();
}

uint64_t sub_1001236B0()
{
  return type metadata accessor for HeadlineOrigin();
}

uint64_t sub_1001236C0()
{
  return StockPriceData.sparklines.getter();
}

uint64_t sub_1001236D0()
{
  return static StockPriceData.empty.getter();
}

uint64_t sub_1001236E0()
{
  return StockPriceData.quotes.getter();
}

uint64_t sub_1001236F0()
{
  return type metadata accessor for StockPriceData();
}

uint64_t sub_100123700()
{
  return NewsUserProfile.mutedTagIDs.getter();
}

uint64_t sub_100123710()
{
  return NewsUserProfile.init(subscribedTagIDs:mutedTagIDs:autoFavoritedTagIDs:purchasedTagIDs:bundleSubscription:)();
}

uint64_t sub_100123720()
{
  return NewsUserProfile.bundleSubscription.getter();
}

uint64_t sub_100123730()
{
  return type metadata accessor for NewsUserProfile();
}

uint64_t sub_100123740()
{
  return AppConfiguration.widgetSectionConfigID.getter();
}

uint64_t sub_100123750()
{
  return AppConfiguration.tabiScoringInWidgetsEnabled.getter();
}

uint64_t sub_100123760()
{
  return AppConfiguration.widgetSystemReloadJitterMax.getter();
}

uint64_t sub_100123770()
{
  return AppConfiguration.newsPersonalizationTreatment.getter();
}

uint64_t sub_100123780()
{
  return AppConfiguration.newsWidgetSystemReloadInterval.getter();
}

uint64_t sub_100123790()
{
  return AppConfiguration.widgetHeadlinesFetchMultiplier.getter();
}

uint64_t sub_1001237A0()
{
  return AppConfiguration.aggregatesInWidgetsXavierEnabled.getter();
}

uint64_t sub_1001237B0()
{
  return AppConfiguration.smallNewsWidgetSystemReloadInterval.getter();
}

uint64_t sub_1001237C0()
{
  return AppConfiguration.sparklineAutoRefreshMinimumInterval.getter();
}

uint64_t sub_1001237D0()
{
  return AppConfiguration.openMarketWidgetSystemReloadInterval.getter();
}

uint64_t sub_1001237E0()
{
  return AppConfiguration.stockPriceAutoRefreshMinimumInterval.getter();
}

uint64_t sub_1001237F0()
{
  return type metadata accessor for AppConfiguration();
}

uint64_t sub_100123800()
{
  return HeadlineMetadata.StockEntityMetadata.symbol.getter();
}

uint64_t sub_100123810()
{
  return type metadata accessor for HeadlineMetadata.StockEntityMetadata();
}

uint64_t sub_100123820()
{
  return HeadlineMetadata.entityMetadata.getter();
}

uint64_t sub_100123830()
{
  return type metadata accessor for HeadlineMetadata();
}

uint64_t sub_100123840()
{
  return type metadata accessor for HeadlineCondition();
}

uint64_t sub_100123850()
{
  return type metadata accessor for NewsHeadlineScore();
}

uint64_t sub_100123870()
{
  return type metadata accessor for SymbolWidgetQuery();
}

uint64_t sub_100123880()
{
  return type metadata accessor for NewsFeedSortMethod();
}

uint64_t sub_100123890()
{
  return PriceChangeDisplay.rawValue.getter();
}

uint64_t sub_1001238A0()
{
  return type metadata accessor for PriceChangeDisplay();
}

uint64_t sub_1001238B0()
{
  return SymbolWidgetEntity.identifier.getter();
}

uint64_t sub_1001238C0()
{
  return static SymbolWidgetEntity.defaultQuery.getter();
}

uint64_t sub_1001238D0()
{
  return SymbolWidgetEntity.symbol.getter();
}

uint64_t sub_1001238E0()
{
  return type metadata accessor for SymbolWidgetEntity();
}

uint64_t sub_1001238F0()
{
  return type metadata accessor for UserIdentitySource();
}

uint64_t sub_100123900()
{
  return type metadata accessor for WatchlistSortState();
}

uint64_t sub_100123910()
{
  return dispatch thunk of StockFeedServiceType.fetchHeadlines(for:networkProxy:maxCount:)();
}

uint64_t sub_100123920()
{
  return dispatch thunk of StockFeedServiceType.fetchHeadlines(for:networkProxy:maxCount:)();
}

uint64_t sub_100123930()
{
  return dispatch thunk of WatchlistManagerType.defaultAllSymbolsWatchlist.getter();
}

uint64_t sub_100123940()
{
  return dispatch thunk of WatchlistManagerType.fetchStocks(from:)();
}

uint64_t sub_100123950()
{
  return dispatch thunk of WatchlistManagerType.fetchWatchlist(id:)();
}

uint64_t sub_100123960()
{
  return dispatch thunk of WatchlistManagerType.reloadWatchlists(synchronize:)();
}

uint64_t sub_100123970()
{
  return FeedLookupServiceType.fetchFeedIDs(for:)();
}

uint64_t sub_100123980()
{
  return NewsFeedFilterOptions.init(arrayLiteral:)();
}

uint64_t sub_100123990()
{
  return type metadata accessor for NewsFeedFilterOptions.Option();
}

uint64_t sub_1001239A0()
{
  return type metadata accessor for NewsFeedFilterOptions();
}

uint64_t sub_1001239B0()
{
  return dispatch thunk of TopStoriesServiceType.fetchTopStoriesHeadlines()();
}

uint64_t sub_1001239C0()
{
  return static WatchlistWidgetEntity.defaultWatchlistEntity.getter();
}

uint64_t sub_1001239D0()
{
  return WatchlistWidgetEntity.identifier.getter();
}

uint64_t sub_1001239E0()
{
  return type metadata accessor for WatchlistWidgetEntity();
}

uint64_t sub_100123A00()
{
  return dispatch thunk of FeatureAvailabilityType.appleNewsContent.getter();
}

uint64_t sub_100123A10()
{
  return dispatch thunk of FeatureAvailabilityType.isNewsFreeExperienceEnabled.getter();
}

uint64_t sub_100123A20()
{
  return dispatch thunk of FeatureAvailabilityType.isWidgetNewsCurationEnabled.getter();
}

uint64_t sub_100123A30()
{
  return dispatch thunk of FeatureAvailabilityType.isWidgetSpecificConfigurationEnabled.getter();
}

uint64_t sub_100123A40()
{
  return dispatch thunk of FeatureAvailabilityType.isYahooNewsAttributionInWidgetEnabled.getter();
}

uint64_t sub_100123A50()
{
  return dispatch thunk of NewsHeadlineServiceType.fetchHeadlines(for:origin:)();
}

uint64_t sub_100123A60()
{
  return NewsDisplayConfiguration.rawValue.getter();
}

uint64_t sub_100123A70()
{
  return type metadata accessor for NewsDisplayConfiguration();
}

uint64_t sub_100123A80()
{
  return StockMetadataManagerType.fetchStocks(for:cachePolicy:)();
}

uint64_t sub_100123A90()
{
  return dispatch thunk of StockPriceDataManagerType.priceData(for:quoteCachePolicy:sparklineCachePolicy:isInitial:)();
}

uint64_t sub_100123AA0()
{
  return dispatch thunk of AppConfigurationManagerType.asyncObservableAppConfiguration.getter();
}

uint64_t sub_100123AB0()
{
  return dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
}

uint64_t sub_100123AC0()
{
  return dispatch thunk of AppConfigurationManagerType.fetchInitial()();
}

uint64_t sub_100123AD0()
{
  return dispatch thunk of AppConfigurationManagerType.refresh()();
}

uint64_t sub_100123AE0()
{
  return dispatch thunk of AppConfigurationManagerType.accessor<A>(for:)();
}

uint64_t sub_100123AF0()
{
  return dispatch thunk of NewsUserProfileProviderType.fetchNewsUserProfile()();
}

uint64_t sub_100123B10()
{
  return dispatch thunk of WatchlistSortingServiceType.sort(_:by:with:)();
}

uint64_t sub_100123B20()
{
  return EmptyNewsUserProfileProvider.init()();
}

uint64_t sub_100123B30()
{
  return type metadata accessor for EmptyNewsUserProfileProvider();
}

uint64_t sub_100123B40()
{
  return type metadata accessor for NewsPersonalizationTreatment();
}

uint64_t sub_100123B50()
{
  return SymbolWidgetConfigurationIntent.newsDisplayConfiguration.getter();
}

uint64_t sub_100123B60()
{
  return SymbolWidgetConfigurationIntent.stock.getter();
}

uint64_t sub_100123B70()
{
  return type metadata accessor for SymbolWidgetConfigurationIntent();
}

uint64_t sub_100123B90()
{
  return NoopFeedPersonalizerHeadlineScorer.init()();
}

uint64_t sub_100123BA0()
{
  return type metadata accessor for NoopFeedPersonalizerHeadlineScorer();
}

uint64_t sub_100123BB0()
{
  return WatchlistWidgetConfigurationIntent.newsDisplayConfiguration.getter();
}

uint64_t sub_100123BC0()
{
  return WatchlistWidgetConfigurationIntent.selectedWatchlist.getter();
}

uint64_t sub_100123BD0()
{
  return type metadata accessor for WatchlistWidgetConfigurationIntent();
}

uint64_t sub_100123BE0()
{
  return static URLs.NewsPrivateDataDirectory.getter();
}

uint64_t sub_100123BF0()
{
  return Chart.previousClose.getter();
}

uint64_t sub_100123C00()
{
  return Chart.Entry.referenceDate.getter();
}

uint64_t sub_100123C10()
{
  return Chart.Entry.close.getter();
}

uint64_t sub_100123C20()
{
  return Chart.valid(for:)();
}

uint64_t sub_100123C30()
{
  return Chart.entries.getter();
}

uint64_t sub_100123C40()
{
  return Chart.dateRange.getter();
}

uint64_t sub_100123C50()
{
  return type metadata accessor for Chart();
}

uint64_t sub_100123C60()
{
  return Quote.exchangeStatus.getter();
}

uint64_t sub_100123C70()
{
  return Quote.serverCreatedAt.getter();
}

uint64_t sub_100123C80()
{
  return Quote.dateLastRefreshed.getter();
}

uint64_t sub_100123C90()
{
  return Quote.price.getter();
}

uint64_t sub_100123CA0()
{
  return type metadata accessor for Quote();
}

uint64_t sub_100123CB0()
{
  return Stock.identifier.getter();
}

uint64_t sub_100123CC0()
{
  return Stock.compactName.getter();
}

uint64_t sub_100123CD0()
{
  return Stock.universalLinkURL.getter();
}

uint64_t sub_100123CE0()
{
  return static Stock.== infix(_:_:)();
}

uint64_t sub_100123CF0()
{
  return Stock.name.getter();
}

uint64_t sub_100123D00()
{
  return Stock.type.getter();
}

uint64_t sub_100123D10()
{
  return Stock.init(symbol:name:exchange:type:shortName:compactName:sector:industry:)();
}

uint64_t sub_100123D20()
{
  return Stock.symbol.getter();
}

uint64_t sub_100123D30()
{
  return Stock.shortName.getter();
}

uint64_t sub_100123D40()
{
  return type metadata accessor for Stock();
}

uint64_t sub_100123D50()
{
  return static Account.StorefrontID.ca.getter();
}

uint64_t sub_100123D60()
{
  return static Account.StorefrontID.us.getter();
}

uint64_t sub_100123D70()
{
  return static Account.storefrontID.getter();
}

uint64_t sub_100123D80()
{
  return AppGroup.settingsDomain.getter();
}

uint64_t sub_100123D90()
{
  return static AppGroup.stocks.getter();
}

uint64_t sub_100123DA0()
{
  return type metadata accessor for AppGroup();
}

uint64_t sub_100123DB0()
{
  return Assembly.init()();
}

uint64_t sub_100123DC0()
{
  return type metadata accessor for Assembly();
}

uint64_t sub_100123DD0()
{
  return Headline.fcHeadline.getter();
}

uint64_t sub_100123DE0()
{
  return Headline.identifier.getter();
}

uint64_t sub_100123DF0()
{
  return Headline.copy(with:)();
}

uint64_t sub_100123E00()
{
  return Headline.title.getter();
}

uint64_t sub_100123E10()
{
  return Headline.hasAudio.getter();
}

uint64_t sub_100123E20()
{
  return Headline.articleID.getter();
}

uint64_t sub_100123E30()
{
  return type metadata accessor for Headline();
}

uint64_t sub_100123E40()
{
  return type metadata accessor for StockType();
}

uint64_t sub_100123E50()
{
  return static Watchlist.defaultWatchlistIdentifier.getter();
}

uint64_t sub_100123E60()
{
  return static Watchlist.defaultWatchlistName.getter();
}

uint64_t sub_100123E70()
{
  return static Watchlist.defaultWatchlistDisplay.getter();
}

uint64_t sub_100123E80()
{
  return Watchlist.isDefaultWatchlist.getter();
}

uint64_t sub_100123E90()
{
  return Watchlist.displayState.getter();
}

uint64_t sub_100123EA0()
{
  return Watchlist.name.getter();
}

uint64_t sub_100123EB0()
{
  return Watchlist.sortState.getter();
}

uint64_t sub_100123EC0()
{
  return type metadata accessor for Watchlist();
}

uint64_t sub_100123ED0()
{
  return static Settings.Identification.resetOnNextLaunch.getter();
}

uint64_t sub_100123EE0()
{
  return static Settings.News.bilingualFeedEnabled.getter();
}

uint64_t sub_100123EF0()
{
  return static Settings.News.overrideWidgetSectionConfigID.getter();
}

uint64_t sub_100123F00()
{
  return static Settings.Widget.dumpEntries.getter();
}

uint64_t sub_100123F10()
{
  return static Settings.Widget.entryInterval.getter();
}

uint64_t sub_100123F20()
{
  return static Settings.Widget.demoMode.getter();
}

uint64_t sub_100123F50()
{
  return Configurable.setting<A>(_:)();
}

uint64_t sub_100123F70()
{
  return SettingReader.read<A>(_:)();
}

uint64_t sub_100123F80()
{
  return static SettingReader.shared.getter();
}

uint64_t sub_100123F90()
{
  return type metadata accessor for SettingReader();
}

uint64_t sub_100123FA0()
{
  return SettingProperty.wrappedValue.getter();
}

uint64_t sub_100123FB0()
{
  return SettingProperty.wrappedValue.setter();
}

uint64_t sub_100123FC0()
{
  return type metadata accessor for SettingProperty();
}

uint64_t sub_100123FD0()
{
  return SettingProperty.init(_:)();
}

uint64_t sub_100123FE0()
{
  return type metadata accessor for Access();
}

uint64_t sub_100123FF0()
{
  return type metadata accessor for Domain();
}

uint64_t sub_100124000()
{
  return type metadata accessor for Setting();
}

uint64_t sub_100124010()
{
  return Setting.init(_:defaultValue:domain:access:)();
}

uint64_t sub_100124030()
{
  return Updatable.apply(preset:)();
}

uint64_t sub_100124060()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100124070()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100124080()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100124090()
{
  return Definition.thenConfigure(_:)();
}

uint64_t sub_1001240A0()
{
  return Definition.inScope(_:)();
}

uint64_t sub_1001240B0()
{
  return type metadata accessor for CachePolicy();
}

uint64_t sub_1001240C0()
{
  return type metadata accessor for NetworkProxy();
}

uint64_t sub_1001240D0()
{
  return dispatch thunk of ResolverType.resolve<A>(_:name:)();
}

uint64_t sub_1001240E0()
{
  return dispatch thunk of ResolverType.resolve<A>(_:name:)();
}

uint64_t sub_1001240F0()
{
  return dispatch thunk of ResolverType.resolve<A>(_:)();
}

uint64_t sub_100124100()
{
  return dispatch thunk of ResolverType.resolve<A>(_:)();
}

uint64_t sub_100124110()
{
  return type metadata accessor for CallbackScope();
}

uint64_t sub_100124120()
{
  return SingletonPool.init()();
}

uint64_t sub_100124130()
{
  return type metadata accessor for SingletonPool();
}

uint64_t sub_100124140()
{
  return ProxyContainer.public.getter();
}

uint64_t sub_100124150()
{
  return ProxyContainer.private.getter();
}

uint64_t sub_100124160()
{
  return ProxyContainer.callback.getter();
}

uint64_t sub_100124180()
{
  return AsyncObservable.onNext(on:eager:block:)();
}

uint64_t sub_1001241A0()
{
  return type metadata accessor for FrameworkAssembly();
}

uint64_t sub_100124240()
{
  return type metadata accessor for TaskDeadlineError();
}

uint64_t sub_100124250()
{
  return RegistrationContainer.lazy(block:)();
}

uint64_t sub_100124260()
{
  return RegistrationContainer.register<A>(_:name:factory:)();
}

uint64_t sub_100124270()
{
  return RegistrationContainer.register<A>(_:name:factory:)();
}

uint64_t sub_100124290()
{
  return dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
}

uint64_t sub_1001242A0()
{
  return dispatch thunk of RemoteNotificationHandler.handleRemoteNotification(userInfo:)();
}

uint64_t sub_1001242B0()
{
  return Cache.init()();
}

uint64_t sub_1001242C0()
{
  return type metadata accessor for Cache();
}

uint64_t sub_1001242D0()
{
  return Cache.subscript.getter();
}

uint64_t sub_1001242E0()
{
  return Cache.subscript.setter();
}

uint64_t sub_1001242F0()
{
  return type metadata accessor for Scope();
}

uint64_t sub_100124300()
{
  return zalgo.getter();
}

uint64_t sub_100124320()
{
  return Promise.__allocating_init<A>(task:)();
}

uint64_t sub_100124330()
{
  return Promise.then<A>(on:closure:)();
}

uint64_t sub_100124340()
{
  return Promise.error(on:closure:)();
}

uint64_t sub_100124350()
{
  return Promise.init(error:)();
}

uint64_t sub_100124360()
{
  return Promise.timeout(after:on:message:)();
}

uint64_t sub_100124370()
{
  return type metadata accessor for Promise();
}

uint64_t sub_100124380()
{
  return firstly<A>(closure:)();
}

uint64_t sub_100124390()
{
  return Accessor.value.getter();
}

uint64_t sub_1001243A0()
{
  return NonEmpty.isEmpty.getter();
}

uint64_t sub_1001243B0()
{
  return NonEmpty.rawElements.modify();
}

uint64_t sub_1001243C0()
{
  return NonEmpty.rawElements.setter();
}

uint64_t sub_1001243D0()
{
  return NonEmpty.map<A>(_:)();
}

uint64_t sub_1001243E0()
{
  return NonEmpty.count.getter();
}

uint64_t sub_1001243F0()
{
  return NonEmpty.first.getter();
}

uint64_t sub_100124400()
{
  return NonEmpty.elements.getter();
}

uint64_t sub_100124410()
{
  return NonEmpty<>.last.getter();
}

uint64_t sub_100124420()
{
  return type metadata accessor for NonEmpty();
}

uint64_t sub_100124430()
{
  return NonEmpty.init<A, B>(_:)();
}

uint64_t sub_100124440()
{
  return NonEmpty.init(_:)();
}

uint64_t sub_100124450()
{
  return type metadata accessor for Container.Environment();
}

uint64_t sub_100124460()
{
  return Container.init(bundleAssemblies:assemblies:singletonPool:environment:)();
}

uint64_t sub_100124470()
{
  return Container.resolver.getter();
}

uint64_t sub_100124480()
{
  return type metadata accessor for Container();
}

uint64_t sub_100124490()
{
  return type metadata accessor for StatelessPersonalizationConfiguration();
}

uint64_t sub_1001244A0()
{
  return type metadata accessor for FeatureState();
}

uint64_t sub_1001244B0()
{
  return Configuration.init(articleEmbeddingsScoringState:clientSideEngagementBoostEnabled:fallbackToReverseChronSorting:newsTabiPersonalizationState:personalizationTreatment:statelessPersonalizationState:extensionStatelessPersonalizationState:publisherDampeningConfig:shadowPublisherDampeningConfig:statelessPersonalizationPublisherFavorability:personalizationAnalyticsEnabled:tabiTagScoringEnabled:tabiCohortMembershipsEnabled:aggregatesInXavierEnabled:aggregatesInExtensionsXavierEnabled:tabiScoringInExtensionsEnabled:)();
}

uint64_t sub_1001244C0()
{
  return type metadata accessor for Configuration();
}

uint64_t sub_1001244D0()
{
  return XavierScoringService.__allocating_init(aggregateStore:configurationManager:translationProvider:todayPrivateData:)();
}

uint64_t sub_1001244E0()
{
  return type metadata accessor for XavierScoringService();
}

uint64_t sub_1001244F0()
{
  return ConfigurationManagerType.fetchConfigurationIfNeeded(cachedOnly:)();
}

uint64_t sub_100124500()
{
  return NewsHeadlineScorerFactory.init(stockEntityService:watchlistManager:appConfigurationManager:newsPersonalizationScorer:tabiScorer:)();
}

uint64_t sub_100124510()
{
  return type metadata accessor for NewsHeadlineScorerFactory();
}

uint64_t sub_100124520()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t sub_100124530()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_100124540()
{
  return static Logger.stocksNews.getter();
}

uint64_t sub_100124550()
{
  return Logger.logObject.getter();
}

uint64_t sub_100124560()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100124570()
{
  return type metadata accessor for Logger();
}

uint64_t sub_100124580()
{
  return AxisGridLine.init(centered:stroke:)();
}

uint64_t sub_100124590()
{
  return type metadata accessor for AxisGridLine();
}

uint64_t sub_1001245A0()
{
  return type metadata accessor for BuilderTuple();
}

uint64_t sub_1001245B0()
{
  return ChartContent.foregroundStyle<A>(_:)();
}

uint64_t sub_1001245C0()
{
  return ChartContent.compositingLayer<A>(style:)();
}

uint64_t sub_1001245D0()
{
  return ChartContent.interpolationMethod(_:)();
}

uint64_t sub_1001245E0()
{
  return ChartContent.lineStyle(_:)();
}

uint64_t sub_1001245F0()
{
  return static AxisMarkPreset.automatic.getter();
}

uint64_t sub_100124600()
{
  return type metadata accessor for AxisMarkPreset();
}

uint64_t sub_100124610()
{
  return static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
}

uint64_t sub_100124620()
{
  return static AxisMarkValues.automatic<A>(minimumStride:desiredCount:roundLowerBound:roundUpperBound:)();
}

uint64_t sub_100124630()
{
  return type metadata accessor for AxisMarkValues();
}

uint64_t sub_100124640()
{
  return AxisValueLabel.init<A>(format:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
}

uint64_t sub_100124650()
{
  return static PlottableValue.value(_:_:)();
}

uint64_t sub_100124660()
{
  return static AxisMarkPosition.bottom.getter();
}

uint64_t sub_100124670()
{
  return static AxisMarkPosition.trailing.getter();
}

uint64_t sub_100124680()
{
  return type metadata accessor for AxisMarkPosition();
}

uint64_t sub_100124690()
{
  return type metadata accessor for ChartPlotContent();
}

uint64_t sub_1001246A0()
{
  return static PlottableProjection.value(_:_:)();
}

uint64_t sub_1001246B0()
{
  return static PlottableProjection.value(_:_:)();
}

uint64_t sub_1001246C0()
{
  return type metadata accessor for PlottableProjection();
}

uint64_t sub_1001246D0()
{
  return static AxisValueLabelOrientation.automatic.getter();
}

uint64_t sub_1001246E0()
{
  return type metadata accessor for AxisValueLabelOrientation();
}

uint64_t sub_1001246F0()
{
  return type metadata accessor for VectorizedAreaPlotContent();
}

uint64_t sub_100124700()
{
  return type metadata accessor for VectorizedLinePlotContent();
}

uint64_t sub_100124710()
{
  return static AxisValueLabelCollisionResolution.automatic.getter();
}

uint64_t sub_100124720()
{
  return type metadata accessor for AxisValueLabelCollisionResolution();
}

uint64_t sub_100124730()
{
  return Plot.init(content:)();
}

uint64_t sub_100124740()
{
  return Chart.init(content:)();
}

uint64_t sub_100124750()
{
  return type metadata accessor for Chart();
}

uint64_t sub_100124760()
{
  return AreaPlot.init<A, B, C>(_:x:yStart:yEnd:)();
}

uint64_t sub_100124770()
{
  return AxisMark.foregroundStyle<A>(_:)();
}

uint64_t sub_100124780()
{
  return AxisMark.font(_:)();
}

uint64_t sub_100124790()
{
  return static AxisTick.Length.label(extendPastBy:)();
}

uint64_t sub_1001247A0()
{
  return type metadata accessor for AxisTick.Length();
}

uint64_t sub_1001247B0()
{
  return AxisTick.init(centered:length:stroke:)();
}

uint64_t sub_1001247C0()
{
  return type metadata accessor for AxisTick();
}

uint64_t sub_1001247D0()
{
  return DateBins.thresholds.getter();
}

uint64_t sub_1001247E0()
{
  return DateBins.init(unit:by:range:calendar:)();
}

uint64_t sub_1001247F0()
{
  return type metadata accessor for DateBins();
}

uint64_t sub_100124800()
{
  return LinePlot.init<A, B, C>(_:x:y:)();
}

uint64_t sub_100124810()
{
  return RuleMark.init<A>(xStart:xEnd:y:)();
}

uint64_t sub_100124820()
{
  return type metadata accessor for RuleMark();
}

uint64_t sub_100124830()
{
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_100124840()
{
  return type metadata accessor for AxisMarks();
}

uint64_t sub_100124850()
{
  return AxisValue.index.getter();
}

uint64_t sub_100124860()
{
  return type metadata accessor for ScaleType();
}

uint64_t sub_100124870()
{
  return Animatable<>.animatableData.modify();
}

uint64_t sub_100124880()
{
  return static Animatable<>._makeAnimatable(value:inputs:)();
}

uint64_t sub_100124890()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_1001248A0()
{
  return type metadata accessor for _ShapeView();
}

uint64_t sub_1001248B0()
{
  return type metadata accessor for ColorScheme();
}

uint64_t sub_1001248C0()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t sub_1001248D0()
{
  return type metadata accessor for TupleWidget();
}

uint64_t sub_1001248F0()
{
  return static ViewSpacing.zero.getter();
}

uint64_t sub_100124900()
{
  return ViewSpacing.union(_:edges:)();
}

uint64_t sub_100124910()
{
  return ViewSpacing.init()();
}

uint64_t sub_100124920()
{
  return type metadata accessor for ViewSpacing();
}

uint64_t sub_100124930()
{
  return type metadata accessor for _LayoutRoot();
}

uint64_t sub_100124940()
{
  return _LayoutRoot.init(_:)();
}

uint64_t sub_100124950()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_100124960()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_100124970()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_100124980()
{
  return static WidgetBundle.main()();
}

uint64_t sub_100124990()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_1001249A0()
{
  return LayoutSubview.dimensions(in:)();
}

uint64_t sub_1001249B0()
{
  return LayoutSubview.sizeThatFits(_:)();
}

uint64_t sub_1001249C0()
{
  return LayoutSubview.place(at:anchor:proposal:)();
}

uint64_t sub_1001249D0()
{
  return LayoutSubview.spacing.getter();
}

uint64_t sub_1001249E0()
{
  return type metadata accessor for LayoutSubview();
}

uint64_t sub_1001249F0()
{
  return type metadata accessor for _VariadicView.Tree();
}

uint64_t sub_100124A00()
{
  return _VariadicView.Tree.init(_:content:)();
}

uint64_t sub_100124A20()
{
  return type metadata accessor for LayoutSubviews();
}

uint64_t sub_100124A30()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t sub_100124A40()
{
  return ViewDimensions.width.getter();
}

uint64_t sub_100124A50()
{
  return ViewDimensions.height.getter();
}

uint64_t sub_100124A60()
{
  return type metadata accessor for ViewDimensions();
}

uint64_t sub_100124A70()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_100124A80()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t sub_100124A90()
{
  return GraphicsContext.environment.getter();
}

double sub_100124AA0(CGSize in)
{
  *(void *)&double result = *(_OWORD *)&GraphicsContext.ResolvedText.measure(in:)(in);
  return result;
}

uint64_t sub_100124AB0()
{
  return type metadata accessor for GraphicsContext.ResolvedText();
}

uint64_t sub_100124AC0()
{
  return GraphicsContext.draw(_:in:)();
}

uint64_t sub_100124AD0()
{
  return GraphicsContext.draw(_:options:)();
}

uint64_t sub_100124AE0()
{
  return GraphicsContext.resolve(_:)();
}

uint64_t sub_100124AF0()
{
  return static LayoutDirection.== infix(_:_:)();
}

uint64_t sub_100124B00()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t sub_100124B10()
{
  return ModifiedContent<>.accessibilityValue<A>(_:)();
}

uint64_t sub_100124B20()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t sub_100124B30()
{
  return type metadata accessor for StrokeShapeView();
}

uint64_t sub_100124B40()
{
  return LayoutProperties.stackOrientation.setter();
}

uint64_t sub_100124B50()
{
  return LayoutProperties.init()();
}

uint64_t sub_100124B60()
{
  return static RedactionReasons.placeholder.getter();
}

uint64_t sub_100124B70()
{
  return type metadata accessor for RedactionReasons();
}

uint64_t sub_100124B80()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_100124B90()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_100124BA0()
{
  return type metadata accessor for _OverlayModifier();
}

uint64_t sub_100124BB0()
{
  return static ContentTransition.numericText(_:)();
}

uint64_t sub_100124BC0()
{
  return ContentTransition.NumericTextConfiguration.reversed(_:)();
}

uint64_t sub_100124BD0()
{
  return static ContentTransition.NumericTextConfiguration.automatic(value:)();
}

uint64_t sub_100124BE0()
{
  return type metadata accessor for ContentTransition.NumericTextConfiguration();
}

uint64_t sub_100124BF0()
{
  return type metadata accessor for ContentTransition();
}

uint64_t sub_100124C00()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_100124C10()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_100124C20()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100124C30()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_100124C40()
{
  return EnvironmentValues.displayScale.getter();
}

uint64_t sub_100124C50()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t sub_100124C60()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t sub_100124C70()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_100124C80()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_100124C90()
{
  return EnvironmentValues.allowsTightening.getter();
}

uint64_t sub_100124CA0()
{
  return EnvironmentValues.allowsTightening.setter();
}

uint64_t sub_100124CB0()
{
  return EnvironmentValues.dividerThickness.getter();
}

uint64_t sub_100124CC0()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_100124CD0()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100124CE0()
{
  return EnvironmentValues.contentTransition.setter();
}

uint64_t sub_100124CF0()
{
  return EnvironmentValues.minimumScaleFactor.getter();
}

uint64_t sub_100124D00()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_100124D10()
{
  return EnvironmentValues.fontResolutionContext.getter();
}

uint64_t sub_100124D20()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_100124D30()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100124D40()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_100124D50()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100124D60()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100124D70()
{
  return EnvironmentValues.textCase.setter();
}

uint64_t sub_100124D80()
{
  return type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey();
}

uint64_t sub_100124D90()
{
  return EnvironmentValues.widgetFamily.getter();
}

uint64_t sub_100124DA0()
{
  return EnvironmentValues.widgetRenderingMode.getter();
}

uint64_t sub_100124DB0()
{
  return EnvironmentValues.widgetRenderingMode.setter();
}

uint64_t sub_100124DC0()
{
  return EnvironmentValues.widgetContentMargins.getter();
}

uint64_t sub_100124DD0()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t sub_100124DE0()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100124DF0()
{
  return EnvironmentValues.init()();
}

uint64_t sub_100124E00()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_100124E10()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100124E20()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_100124E30()
{
  return static VerticalAlignment.lastTextBaseline.getter();
}

uint64_t sub_100124E40()
{
  return static VerticalAlignment.firstTextBaseline.getter();
}

uint64_t sub_100124E50()
{
  return static VerticalAlignment.top.getter();
}

uint64_t sub_100124E60()
{
  return static VerticalAlignment.bottom.getter();
}

uint64_t sub_100124E70()
{
  return static VerticalAlignment.center.getter();
}

void sub_100124E80(Swift::String a1)
{
}

void sub_100124E90(Swift::String a1)
{
}

uint64_t sub_100124EA0()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t sub_100124EB0()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t sub_100124EC0()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_100124ED0()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t sub_100124EE0()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_100124EF0()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t sub_100124F00()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_100124F10()
{
  return static HorizontalAlignment.trailing.getter();
}

uint64_t sub_100124F20()
{
  return WidgetConfiguration.description(_:)();
}

uint64_t sub_100124F30()
{
  return WidgetConfiguration.supportedFamilies(_:)();
}

uint64_t sub_100124F40()
{
  return WidgetConfiguration.configurationDisplayName(_:)();
}

uint64_t sub_100124F50()
{
  return WidgetConfiguration.enableContentMarginsForFirstParty(_:)();
}

uint64_t sub_100124F60()
{
  return type metadata accessor for _BackgroundModifier();
}

uint64_t sub_100124F70()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t sub_100124F80()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100124F90()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t sub_100124FA0()
{
  return type metadata accessor for _TraitWritingModifier();
}

uint64_t sub_100124FB0()
{
  return type metadata accessor for _ViewModifier_Content();
}

uint64_t sub_100124FC0()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_100124FD0()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t sub_100124FE0()
{
  return type metadata accessor for LayoutPriorityTraitKey();
}

uint64_t sub_100124FF0()
{
  return type metadata accessor for _ContainerShapeModifier();
}

uint64_t sub_100125000()
{
  return type metadata accessor for _ForegroundStyleModifier();
}

uint64_t sub_100125010()
{
  return DividerStyleConfiguration.orientation.getter();
}

uint64_t sub_100125020()
{
  return type metadata accessor for _TextRendererViewModifier();
}

uint64_t sub_100125030()
{
  return static AccessibilityChildBehavior.ignore.getter();
}

uint64_t sub_100125040()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t sub_100125050()
{
  return static AccessibilityChildBehavior.contain.getter();
}

uint64_t sub_100125060()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_100125070()
{
  return static ContainerBackgroundPlacement.widget.getter();
}

uint64_t sub_100125080()
{
  return type metadata accessor for ContainerBackgroundPlacement();
}

void sub_100125090(AXChartDescriptor a1)
{
}

uint64_t sub_1001250A0()
{
  return type metadata accessor for _EnvironmentKeyWritingModifier();
}

uint64_t sub_1001250B0()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t sub_1001250C0()
{
  return type metadata accessor for _EnvironmentKeyTransformModifier();
}

uint64_t sub_1001250D0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_1001250E0()
{
  return Axis.rawValue.getter();
}

uint64_t sub_1001250F0()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_100125100()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_100125110()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t sub_100125120()
{
  return static Edge.Set.trailing.getter();
}

uint64_t sub_100125130()
{
  return Font.platformFont(in:)();
}

uint64_t sub_100125140()
{
  return static Font.subheadline.getter();
}

uint64_t sub_100125150()
{
  return static Font.body.getter();
}

uint64_t sub_100125160()
{
  return Font.bold()();
}

uint64_t sub_100125170()
{
  return static Font.title.getter();
}

uint64_t sub_100125180()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_100125190()
{
  return static Font.Weight.bold.getter();
}

uint64_t sub_1001251A0()
{
  return static Font.Weight.heavy.getter();
}

uint64_t sub_1001251B0()
{
  return static Font.Weight.medium.getter();
}

uint64_t sub_1001251C0()
{
  return static Font.Weight.regular.getter();
}

uint64_t sub_1001251D0()
{
  return static Font.Weight.semibold.getter();
}

uint64_t sub_1001251E0()
{
  return static Font.system(size:weight:design:)();
}

uint64_t sub_1001251F0()
{
  return Font.weight(_:)();
}

uint64_t sub_100125200()
{
  return type metadata accessor for Font.Context();
}

uint64_t sub_100125210()
{
  return type metadata accessor for Font.Leading();
}

uint64_t sub_100125220()
{
  return static Font.callout.getter();
}

uint64_t sub_100125230()
{
  return static Font.caption.getter();
}

uint64_t sub_100125240()
{
  return Font.leading(_:)();
}

uint64_t sub_100125250()
{
  return static Font.caption2.getter();
}

uint64_t sub_100125260()
{
  return static Font.footnote.getter();
}

uint64_t sub_100125270()
{
  return static Font.headline.getter();
}

uint64_t sub_100125280()
{
  return Font.init(_:)();
}

uint64_t sub_100125290()
{
  return Link.init(destination:label:)();
}

uint64_t sub_1001252A0()
{
  return type metadata accessor for Link();
}

uint64_t sub_1001252B0()
{
  return Text.fontWeight(_:)();
}

uint64_t sub_1001252C0()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t sub_1001252D0()
{
  return type metadata accessor for Text.Case();
}

uint64_t sub_1001252E0()
{
  return Text.font(_:)();
}

uint64_t sub_1001252F0()
{
  return Text.Layout.isTruncated.getter();
}

uint64_t sub_100125300()
{
  return Text.Layout.Line.typographicBounds.getter();
}

uint64_t sub_100125310()
{
  return type metadata accessor for Text.Layout.Line();
}

uint64_t sub_100125320()
{
  return type metadata accessor for Text.Layout();
}

uint64_t sub_100125330()
{
  return Text.init<A>(_:format:)();
}

uint64_t sub_100125340()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100125350()
{
  return Text.init<A>(_:)();
}

uint64_t sub_100125360()
{
  return View.chartXAxis<A>(content:)();
}

uint64_t sub_100125370()
{
  return View.chartXAxis(_:)();
}

uint64_t sub_100125380()
{
  return View.chartYAxis<A>(content:)();
}

uint64_t sub_100125390()
{
  return View.chartYAxis(_:)();
}

uint64_t sub_1001253A0()
{
  return View.chartXScale<A>(domain:type:)();
}

uint64_t sub_1001253B0()
{
  return View.chartYScale<A>(domain:type:)();
}

uint64_t sub_1001253C0()
{
  return View.chartPlotStyle<A>(content:)();
}

uint64_t sub_1001253D0()
{
  return View.widgetAccentable(_:)();
}

uint64_t sub_1001253E0()
{
  return View.widgetURL(_:)();
}

uint64_t sub_1001253F0()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_100125400()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_100125410()
{
  return View.unredacted()();
}

uint64_t sub_100125420()
{
  return View.dividerStyle<A>(_:)();
}

uint64_t sub_100125430()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100125440()
{
  return View.dynamicTypeSize(_:)();
}

uint64_t sub_100125450()
{
  return View.accessibilityLabel(_:isEnabled:)();
}

uint64_t sub_100125460()
{
  return View.accessibilityLabel<A>(_:)();
}

uint64_t sub_100125470()
{
  return View.containerBackground<A>(for:alignment:content:)();
}

uint64_t sub_100125480()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_100125490()
{
  return View.transformEnvironment<A>(_:transform:)();
}

uint64_t sub_1001254A0()
{
  return View.accessibilitySortPriority(_:)();
}

uint64_t sub_1001254B0()
{
  return View.accessibilityChartDescriptor<A>(_:)();
}

uint64_t sub_1001254C0()
{
  return View.opacity(_:)();
}

uint64_t sub_1001254D0()
{
  return View.redacted(reason:)();
}

uint64_t sub_1001254E0()
{
  return Color.init(uiColor:)();
}

uint64_t sub_1001254F0()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t sub_100125500()
{
  return static Color.gray.getter();
}

uint64_t sub_100125510()
{
  return static Color.black.getter();
}

uint64_t sub_100125520()
{
  return static Color.white.getter();
}

uint64_t sub_100125530()
{
  return Color.opacity(_:)();
}

uint64_t sub_100125540()
{
  return static Color.primary.getter();
}

uint64_t sub_100125550()
{
  return static Color.secondary.getter();
}

uint64_t sub_100125560()
{
  return Color.init(_:red:green:blue:opacity:)();
}

uint64_t sub_100125570()
{
  return Color.init(_:)();
}

uint64_t sub_100125580()
{
  return type metadata accessor for Group();
}

uint64_t sub_100125590()
{
  return Image.init(uiImage:)();
}

uint64_t sub_1001255A0()
{
  return Image.init(systemName:)();
}

uint64_t sub_1001255B0()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t sub_1001255C0()
{
  return Image.renderingMode(_:)();
}

uint64_t sub_1001255D0()
{
  return Image.init(_internalSystemName:)();
}

uint64_t sub_1001255E0()
{
  return type metadata accessor for Image.TemplateRenderingMode();
}

uint64_t sub_1001255F0()
{
  return type metadata accessor for Image.Scale();
}

uint64_t sub_100125600()
{
  return Image.widgetAccentedRenderingMode(_:)();
}

uint64_t sub_100125610()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t sub_100125620()
{
  return Image.init(_:bundle:)();
}

uint64_t sub_100125650()
{
  return Shape.layoutDirectionBehavior.getter();
}

uint64_t sub_100125680()
{
  return type metadata accessor for HStack();
}

uint64_t sub_100125690()
{
  return dispatch thunk of Layout.sizeThatFits(proposal:subviews:cache:)();
}

uint64_t sub_1001256A0()
{
  return dispatch thunk of Layout.placeSubviews(in:proposal:subviews:cache:)();
}

uint64_t sub_1001256B0()
{
  return dispatch thunk of Layout.makeCache(subviews:)();
}

uint64_t sub_1001256C0()
{
  return static Layout._makeLayoutView(root:inputs:body:)();
}

uint64_t sub_1001256D0()
{
  return Layout.updateCache(_:subviews:)();
}

uint64_t sub_1001256E0()
{
  return static Layout.layoutProperties.getter();
}

uint64_t sub_1001256F0()
{
  return Layout.spacing(subviews:cache:)();
}

uint64_t sub_100125700()
{
  return Layout<>.makeCache(subviews:)();
}

uint64_t sub_100125710()
{
  return VStack.init(alignment:spacing:content:)();
}

uint64_t sub_100125720()
{
  return type metadata accessor for VStack();
}

uint64_t sub_100125730()
{
  return type metadata accessor for ZStack();
}

uint64_t sub_100125740()
{
  return Divider.init()();
}

uint64_t sub_100125750()
{
  return type metadata accessor for Divider();
}

uint64_t sub_100125760()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100125770()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100125780()
{
  return type metadata accessor for ForEach();
}

uint64_t sub_100125790()
{
  return Gradient.init(colors:)();
}

uint64_t sub_1001257A0()
{
  return static Alignment.topLeading.getter();
}

uint64_t sub_1001257B0()
{
  return static Alignment.top.getter();
}

uint64_t sub_1001257C0()
{
  return static Alignment.bottom.getter();
}

uint64_t sub_1001257D0()
{
  return static Alignment.center.getter();
}

uint64_t sub_1001257E0()
{
  return static Alignment.trailing.getter();
}

uint64_t sub_1001257F0()
{
  return Rectangle.path(in:)();
}

uint64_t sub_100125800()
{
  return type metadata accessor for ShapeRole();
}

uint64_t sub_100125810()
{
  return TextProxy.sizeThatFits(_:)();
}

uint64_t sub_100125820()
{
  return type metadata accessor for TupleView();
}

uint64_t sub_100125830()
{
  return TupleView.init(_:)();
}

uint64_t sub_100125840()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t sub_100125850()
{
  return static UnitPoint.top.getter();
}

uint64_t sub_100125860()
{
  return static UnitPoint.bottom.getter();
}

uint64_t sub_100125870()
{
  return static UnitPoint.center.getter();
}

uint64_t sub_100125880()
{
  return AccessoryWidgetBackground.init()();
}

uint64_t sub_100125890()
{
  return type metadata accessor for AccessoryWidgetBackground();
}

uint64_t sub_1001258A0()
{
  return static WidgetRenderingMode.== infix(_:_:)();
}

uint64_t sub_1001258B0()
{
  return static WidgetRenderingMode.fullColor.getter();
}

uint64_t sub_1001258C0()
{
  return type metadata accessor for WidgetRenderingMode();
}

uint64_t sub_1001258D0()
{
  return static WidgetAccentedRenderingMode.fullColor.getter();
}

uint64_t sub_1001258E0()
{
  return type metadata accessor for WidgetAccentedRenderingMode();
}

uint64_t sub_1001258F0()
{
  return type metadata accessor for WidgetFamily();
}

uint64_t sub_100125900()
{
  return static TimelineReloadPolicy.after(_:)();
}

uint64_t sub_100125910()
{
  return static TimelineReloadPolicy.atEnd.getter();
}

uint64_t sub_100125920()
{
  return static TimelineReloadPolicy.never.getter();
}

uint64_t sub_100125930()
{
  return type metadata accessor for TimelineReloadPolicy();
}

uint64_t sub_100125940()
{
  return AppIntentConfiguration.init<A>(kind:intent:provider:content:)();
}

uint64_t sub_100125950()
{
  return type metadata accessor for AppIntentConfiguration();
}

uint64_t sub_100125960()
{
  return TimelineEntryRelevance.init(score:duration:)();
}

uint64_t sub_100125970()
{
  return type metadata accessor for TimelineEntryRelevance();
}

uint64_t sub_100125980()
{
  return TimelineProviderContext.family.getter();
}

uint64_t sub_100125990()
{
  return TimelineProviderContext.isPreview.getter();
}

uint64_t sub_1001259A0()
{
  return type metadata accessor for TimelineProviderContext();
}

uint64_t sub_1001259C0()
{
  return AppIntentTimelineProvider.recommendations()();
}

uint64_t sub_1001259E0()
{
  return Timeline.init(entries:policy:)();
}

NSDictionary sub_1001259F0()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_100125A00()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100125A10()
{
  return Dictionary.description.getter();
}

uint64_t sub_100125A20()
{
  return type metadata accessor for Dictionary();
}

uint64_t sub_100125A30()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_100125A40()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_100125A50()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_100125A60()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t sub_100125A70()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_100125A80()
{
  return type metadata accessor for ClosedRange();
}

uint64_t sub_100125A90()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_100125AA0()
{
  return String.init(contentsOfFile:)();
}

uint64_t sub_100125AB0()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_100125AC0()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_100125AD0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_100125AE0()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_100125AF0()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100125B00()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_100125B10()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100125B20()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_100125B30()
{
  return String.init(data:encoding:)();
}

uint64_t sub_100125B40()
{
  return String.init(format:_:)();
}

uint64_t sub_100125B50()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_100125B60()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_100125B70()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_100125B80()
{
  return static String.pushNotificationsEnabled.getter();
}

uint64_t sub_100125B90()
{
  return String.init<A>(reflecting:)();
}

uint64_t sub_100125BA0()
{
  return String.hash(into:)();
}

void sub_100125BB0(Swift::String a1)
{
}

Swift::Int sub_100125BC0()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_100125BD0(Swift::String repeating, Swift::Int count)
{
  return String.init(repeating:count:)(repeating, count)._countAndFlagsBits;
}

uint64_t sub_100125BE0()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_100125C00()
{
  return dispatch thunk of Sequence.underestimatedCount.getter();
}

uint64_t sub_100125C10()
{
  return Sequence.enumerated()();
}

uint64_t sub_100125C20()
{
  return Sequence.lazy.getter();
}

uint64_t sub_100125C60()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_100125C70()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100125C80()
{
  return RawRepresentable<>.init(from:)();
}

NSArray sub_100125C90()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_100125CA0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100125CB0()
{
  return Array<A>.sorted(by:)();
}

uint64_t sub_100125CC0()
{
  return Array<A>.filtered(_:)();
}

uint64_t sub_100125CD0()
{
  return Array.description.getter();
}

uint64_t sub_100125CE0()
{
  return specialized Array._endMutation()();
}

void sub_100125CF0(Swift::Int a1)
{
}

void sub_100125D00()
{
}

uint64_t sub_100125D10()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_100125D20()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_100125D30()
{
  return Array.count.getter();
}

uint64_t sub_100125D40()
{
  return Array.append(_:)();
}

uint64_t sub_100125D50()
{
  return type metadata accessor for Array();
}

uint64_t sub_100125D60()
{
  return Array.subscript.getter();
}

uint64_t sub_100125D70()
{
  return type metadata accessor for Bool.IntentDisplayName();
}

uint64_t sub_100125D80()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_100125D90()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100125DA0()
{
  return type metadata accessor for CheckedContinuation();
}

uint64_t sub_100125DB0()
{
  return static MainActor.shared.getter();
}

uint64_t sub_100125DC0()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_100125DD0()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_100125DE0()
{
  return type metadata accessor for TaskPriority();
}

NSNumber sub_100125DF0()
{
  return Double._bridgeToObjectiveC()();
}

uint64_t sub_100125E00()
{
  return Double.write<A>(to:)();
}

uint64_t sub_100125E10()
{
  return static Double.oneHour.getter();
}

uint64_t sub_100125E30()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100125E40()
{
  return RandomAccessCollection<>.indices.getter();
}

uint64_t sub_100125E50()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_100125E60()
{
  return dispatch thunk of Collection._failEarlyRangeCheck(_:bounds:)();
}

uint64_t sub_100125E70()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_100125E80()
{
  return dispatch thunk of Collection.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_100125E90()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t sub_100125EA0()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_100125EB0()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_100125EC0()
{
  return Collection.count.getter();
}

uint64_t sub_100125ED0()
{
  return Collection.prefix(_:)();
}

uint64_t sub_100125EE0()
{
  return Collection.dropFirst(_:)();
}

uint64_t sub_100125EF0()
{
  return dispatch thunk of Collection.subscript.getter();
}

uint64_t sub_100125F00()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_100125F10()
{
  return type metadata accessor for Range();
}

AXDataPoint sub_100125F20(Swift::Double x, Swift::Double_optional y, Swift::OpaquePointer additionalValues, Swift::String_optional label)
{
  return AXDataPoint.init(x:y:additionalValues:label:)(x, y, additionalValues, label);
}

uint64_t sub_100125F30()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_100125F40()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_100125F50()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_100125F60()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_100125F70()
{
  return AXChartDescriptor.init(title:summary:xAxis:yAxis:additionalAxes:series:)();
}

uint64_t sub_100125F80()
{
  return static NSNotificationName.stocksDidClearSharedCache.getter();
}

uint64_t sub_100125F90()
{
  return FCFeedPersonalizing.score(items:options:configurationSet:)();
}

uint64_t sub_100125FA0()
{
  return FCHeadlineProviding.derivedMetadata.getter();
}

uint64_t sub_100125FB0()
{
  return FCHeadlineProviding.stocksArticleURL.getter();
}

uint64_t sub_100125FC0()
{
  return AXNumericDataAxisDescriptor.init(title:range:gridlinePositions:valueDescriptionProvider:)();
}

uint64_t sub_100125FD0()
{
  return static UIColor.feedBackground.getter();
}

NSNumber sub_100125FE0(Swift::Double floatLiteral)
{
  return NSNumber.init(floatLiteral:)(floatLiteral);
}

uint64_t sub_100125FF0()
{
  return static OS_os_log.default.getter();
}

uint64_t sub_100126000()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_100126010()
{
  return type metadata accessor for Optional();
}

uint64_t sub_100126020()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_100126030()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_100126040()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_100126050()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_100126060()
{
  return StringProtocol.write(to:atomically:encoding:)();
}

uint64_t sub_100126070()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_100126080()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t sub_100126090()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

Swift::Int sub_1001260A0(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_1001260B0()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_1001260C0()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t sub_1001260D0()
{
  return type metadata accessor for _SetStorage();
}

void sub_1001260E0(Swift::Int a1)
{
}

uint64_t sub_1001260F0()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_100126100()
{
  return dispatch thunk of Identifiable.id.getter();
}

uint64_t sub_100126110()
{
  return type metadata accessor for LazySequence();
}

uint64_t sub_100126120()
{
  return Zip2Sequence.makeIterator()();
}

uint64_t sub_100126130()
{
  return Zip2Sequence.Iterator.next()();
}

uint64_t sub_100126140()
{
  return type metadata accessor for Zip2Sequence.Iterator();
}

uint64_t sub_100126150()
{
  return type metadata accessor for Zip2Sequence();
}

uint64_t sub_100126160()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_100126170()
{
  return type metadata accessor for DecodingError.Context();
}

uint64_t sub_100126180()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_100126190()
{
  return EncodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_1001261A0()
{
  return type metadata accessor for EncodingError.Context();
}

uint64_t sub_1001261B0()
{
  return type metadata accessor for EncodingError();
}

uint64_t sub_1001261C0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1001261D0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_1001261E0()
{
  return specialized ContiguousArray._endMutation()();
}

void sub_1001261F0(Swift::Int a1)
{
}

uint64_t sub_100126200()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_100126210()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_100126220()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_100126230()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_100126240()
{
  return ContiguousArray.init()();
}

uint64_t sub_100126250()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_100126260()
{
  return type metadata accessor for LazyMapSequence();
}

uint64_t sub_100126270()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_100126280()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_100126290()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1001262A0()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_1001262B0()
{
  return type metadata accessor for EnumeratedSequence();
}

uint64_t sub_1001262C0()
{
  return type metadata accessor for LazyFilterSequence();
}

uint64_t sub_1001262D0()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1001262E0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1001262F0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_100126300()
{
  return type metadata accessor for _DictionaryStorage();
}

uint64_t sub_100126310()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_100126320()
{
  return LazySequenceProtocol.map<A>(_:)();
}

uint64_t sub_100126330()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int sub_100126340(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_100126350()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100126360()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_100126370()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_100126380()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_100126390()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1001263A0()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1001263B0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001263C0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001263D0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001263E0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1001263F0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100126400()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_100126410()
{
  return type metadata accessor for KeyedDecodingContainer();
}

uint64_t sub_100126420()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_100126430()
{
  return KeyedEncodingContainer.codingPath.getter();
}

uint64_t sub_100126440()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100126450()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100126460()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_100126470()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_100126480()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_100126490()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001264A0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001264B0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1001264C0()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1001264D0()
{
  return type metadata accessor for KeyedEncodingContainer();
}

Swift::Int sub_1001264E0(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_1001264F0()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_100126500()
{
  return type metadata accessor for _ContiguousArrayStorage();
}

uint64_t sub_100126520()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_100126530()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100126540()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_100126550()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_100126560()
{
  return zip<A, B>(_:_:)();
}

uint64_t sub_100126570()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100126580()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_100126590()
{
  return Error.isMissingRecord.getter();
}

uint64_t sub_1001265A0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_1001265B0()
{
  return Error._code.getter();
}

uint64_t sub_1001265C0()
{
  return Error._domain.getter();
}

uint64_t sub_1001265D0()
{
  return Error._userInfo.getter();
}

uint64_t sub_1001265F0()
{
  return Hasher.init(_seed:)();
}

void sub_100126600(Swift::UInt a1)
{
}

void sub_100126610(Swift::UInt8 a1)
{
}

void sub_100126620(Swift::UInt64 a1)
{
}

Swift::Int sub_100126630()
{
  return Hasher._finalize()();
}

uint64_t sub_100126640()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_100126650()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_100126680()
{
  return TaskLocal.init(wrappedValue:)();
}

uint64_t sub_100126690()
{
  return TaskLocal.get()();
}

uint64_t sub_1001266B0()
{
  return type metadata accessor for TaskLocal();
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGRect CGRectStandardize(CGRect rect)
{
  return _CGRectStandardize(rect);
}

CGFloat CTFontGetCapHeight(CTFontRef font)
{
  return _CTFontGetCapHeight(font);
}

uint64_t FCMutateHeadlineWithBlock()
{
  return _FCMutateHeadlineWithBlock();
}

uint64_t FCURLForContainerizedUserAccountCachesDirectory()
{
  return _FCURLForContainerizedUserAccountCachesDirectory();
}

uint64_t FCURLForTodayDropbox()
{
  return _FCURLForTodayDropbox();
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

BOOL UIAccessibilityDarkerSystemColorsEnabled(void)
{
  return _UIAccessibilityDarkerSystemColorsEnabled();
}

BOOL UIAccessibilityIsInvertColorsEnabled(void)
{
  return _UIAccessibilityIsInvertColorsEnabled();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return __swift_isClassOrObjCExistentialType();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

void bzero(void *a1, size_t a2)
{
}

void exit(int a1)
{
}

void free(void *a1)
{
}

long double log10(long double __x)
{
  return _log10(__x);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocObject()
{
  return _swift_deallocObject();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return _swift_getExistentialMetatypeMetadata();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return _swift_getExistentialTypeMetadata();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout()
{
  return _swift_getTupleTypeLayout();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return _swift_getTupleTypeMetadata3();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStaticObject()
{
  return _swift_initStaticObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}