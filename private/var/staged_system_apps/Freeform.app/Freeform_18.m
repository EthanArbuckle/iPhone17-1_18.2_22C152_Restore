uint64_t sub_100EFB698()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  v1 = *(void **)(v0 + 912);
  v2 = *(void **)(v0 + 816);
  v3 = *(void **)(v0 + 760);
  v4 = *(void *)(v0 + 656);
  v5 = *(void *)(v0 + 584);

  swift_release();
  swift_bridgeObjectRelease();
  sub_100F38180(v4, type metadata accessor for CRLBoardIdentifier);
  sub_100522F00(v5, (uint64_t *)&unk_1016741D0);
  swift_bridgeObjectRelease();
  sub_100F0F760();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100EFB87C()
{
  v2 = (void *)*v1;
  v2[121] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v2[94];
    uint64_t v4 = v2[93];
    return _swift_task_switch(sub_100EFC238, v4, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v2[59];
    v2[122] = v5;
    v6 = (void *)swift_task_alloc();
    v2[123] = v6;
    void *v6 = v2;
    v6[1] = sub_100EFBA3C;
    return sub_100EE1704(v5);
  }
}

uint64_t sub_100EFBA3C()
{
  v2 = (void *)*v1;
  v2[124] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v2[94];
    uint64_t v4 = v2[93];
    return _swift_task_switch(sub_100EFC3C0, v4, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v2[58];
    v2[125] = v5;
    v6 = (void *)swift_task_alloc();
    v2[126] = v6;
    void *v6 = v2;
    v6[1] = sub_100EFBBF4;
    return sub_100EE1A5C(v5);
  }
}

uint64_t sub_100EFBBF4()
{
  v2 = (void *)*v1;
  v2[127] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v2[94];
    uint64_t v4 = v2[93];
    return _swift_task_switch(sub_100EFC548, v4, v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v2[57];
    v2[128] = v5;
    v6 = (void *)swift_task_alloc();
    v2[129] = v6;
    void *v6 = v2;
    v6[1] = sub_100EFBDA4;
    return sub_100EE88B0(v5);
  }
}

uint64_t sub_100EFBDA4()
{
  v2 = *(void **)v1;
  uint64_t v3 = *(void **)v1;
  *(void *)(*(void *)v1 + 1040) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v2[94];
    uint64_t v5 = v2[93];
    return _swift_task_switch(sub_100EFC6D0, v5, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[61];
    v2[131] = v6;
    v7 = (void *)swift_task_alloc();
    v2[132] = v7;
    void *v7 = v3;
    v7[1] = sub_100EFBF58;
    return sub_100EFCF7C(v6);
  }
}

uint64_t sub_100EFBF58()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1064) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 752);
    uint64_t v4 = *(void *)(v2 + 744);
    uint64_t v5 = sub_100EFC858;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 752);
    uint64_t v4 = *(void *)(v2 + 744);
    uint64_t v5 = sub_100EFC0A8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EFC0A8()
{
  uint64_t v1 = (void *)v0[95];
  swift_release();
  swift_bridgeObjectRelease();
  sub_100F0F760();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[119];
  return v2(v3);
}

uint64_t sub_100EFC238()
{
  uint64_t v1 = *(void **)(v0 + 760);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100F0F760();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EFC3C0()
{
  uint64_t v1 = *(void **)(v0 + 760);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100F0F760();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EFC548()
{
  uint64_t v1 = *(void **)(v0 + 760);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100F0F760();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EFC6D0()
{
  uint64_t v1 = *(void **)(v0 + 760);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100F0F760();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EFC858()
{
  uint64_t v1 = *(void **)(v0 + 760);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100F0F760();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EFC9E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(unsigned char *)(v6 + 169) = a5;
  *(unsigned char *)(v6 + 168) = a4;
  *(void *)(v6 + 72) = a3;
  *(void *)(v6 + 80) = v5;
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = a2;
  sub_1005057FC(&qword_101672C30);
  *(void *)(v6 + 88) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 96) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 104) = v8;
  *(void *)(v6 + 112) = v7;
  return _swift_task_switch(sub_100EFCAB4, v8, v7);
}

uint64_t sub_100EFCAB4()
{
  uint64_t v1 = sub_100D1D1B4(*(void **)(v0 + 64));
  *(void *)(v0 + 120) = v1;
  uint64_t v2 = v1;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 128) = inited;
  *(_OWORD *)(inited + 16) = xmmword_101177E70;
  *(void *)(inited + 32) = v2;
  uint64_t v10 = inited;
  specialized Array._endMutation()();
  *(void *)(v0 + 136) = v10;
  uint64_t v4 = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100EFCC0C;
  char v6 = *(unsigned char *)(v0 + 169);
  char v7 = *(unsigned char *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 72);
  return sub_100EF904C(v10, v8, v7, v6);
}

uint64_t sub_100EFCC0C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[19] = a1;
  v3[20] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[13];
    uint64_t v5 = v3[14];
    char v6 = sub_100EFCEFC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = v3[13];
    uint64_t v5 = v3[14];
    char v6 = sub_100EFCD28;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100EFCD28()
{
  uint64_t v1 = v0[19];
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v4 = *(void *)(v3 - 8);
  if (v2)
  {
    sub_100F38118(v0[19]+ ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80)), v0[11], type metadata accessor for CRLBoardIdentifier);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = v0[11];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v6, v5, 1, v3);
  swift_bridgeObjectRelease();
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3);
  uint64_t v8 = (void *)v0[15];
  uint64_t v9 = v0[11];
  if (v7 == 1)
  {
    sub_100522F00(v0[11], &qword_101672C30);
    sub_1006DAC0C();
    swift_allocError();
    *uint64_t v10 = 0;
    swift_willThrow();
  }
  else
  {
    uint64_t v12 = v0[7];

    sub_100F37878(v9, v12, type metadata accessor for CRLBoardIdentifier);
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100EFCEFC()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_release();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EFCF7C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100EFD014, v4, v3);
}

uint64_t sub_100EFD014()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EFD044, 0, 0);
}

uint64_t sub_100EFD044()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[2];
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100EE18C4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000020, 0x80000001012573F0, sub_10081D9DC, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100EFD13C(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1005057FC(&qword_101672BD0);
    uint64_t v5 = swift_allocError();
    void *v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100EFD1F0(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v12 = *((void *)v11 - 1);
  __chkstk_darwin(v11, v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  v19 = (char *)&v43 - v18;
  __chkstk_darwin(v20, v21);
  v23 = (unsigned __int8 *)&v43 - v22;
  v24 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata);
  swift_beginAccess();
  uint64_t v25 = *v24;
  if (!*(void *)(*v24 + 16)) {
    return swift_endAccess();
  }
  unint64_t v26 = sub_1009563EC(a1);
  if ((v27 & 1) == 0) {
    return swift_endAccess();
  }
  uint64_t v28 = *(void *)(v25 + 56) + *(void *)(v12 + 72) * v26;
  v52 = type metadata accessor for CRLBoardViewModelMetadata;
  sub_100F38118(v28, (uint64_t)v19, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100F37878((uint64_t)v19, (uint64_t)v23, type metadata accessor for CRLBoardViewModelMetadata);
  swift_endAccess();
  int v29 = *v23;
  int v47 = v23[1];
  int v48 = v29;
  uint64_t v30 = v11[6];
  v31 = &v23[v30];
  uint64_t v51 = v12;
  v32 = &v15[v30];
  uint64_t v33 = type metadata accessor for Date();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v50 = a1;
  v35 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v34 + 16);
  v49 = v10;
  v35(v32, v31, v33);
  sub_100522E9C((uint64_t)&v23[v11[7]], (uint64_t)&v15[v11[7]], (uint64_t *)&unk_1016741E0);
  LOBYTE(v31) = v23[v11[8]];
  LOBYTE(v32) = v23[v11[9]];
  int v36 = v23[v11[13]];
  int v45 = v23[v11[12]];
  int v46 = v36;
  uint64_t v37 = v11[16];
  v38 = &v23[v37];
  v39 = &v15[v37];
  LODWORD(v37) = v23[v11[15]];
  int v43 = v23[v11[14]];
  int v44 = v37;
  v35(v39, v38, v33);
  char *v15 = v48;
  v15[1] = v47;
  v15[v11[8]] = (char)v31;
  v15[v11[9]] = (char)v32;
  v15[v11[10]] = 0;
  v40 = &v15[v11[11]];
  *(void *)v40 = 0;
  v40[8] = 1;
  v15[v11[12]] = v45;
  v15[v11[13]] = v46;
  v15[v11[14]] = v43;
  v15[v11[15]] = v44;
  uint64_t v41 = (uint64_t)v49;
  sub_100F38118(v50, (uint64_t)v49, type metadata accessor for CRLBoardIdentifier);
  sub_100F38118((uint64_t)v15, (uint64_t)v6, v52);
  (*(void (**)(char *, void, uint64_t, int *))(v51 + 56))(v6, 0, 1, v11);
  swift_beginAccess();
  sub_10057F4F4((uint64_t)v6, v41);
  swift_endAccess();
  sub_100F38180((uint64_t)v15, type metadata accessor for CRLBoardViewModelMetadata);
  return sub_100F38180((uint64_t)v23, type metadata accessor for CRLBoardViewModelMetadata);
}

void sub_100EFD5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v60[2] = a4;
  uint64_t v69 = a3;
  uint64_t v5 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v5, v6);
  v68 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v67 = (uint64_t)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v75 - 8);
  __chkstk_darwin(v75, v12);
  v74 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  v73 = (char *)v60 - v16;
  uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  v24 = (char *)v60 - v23;
  __chkstk_darwin(v25, v26);
  uint64_t v66 = (uint64_t)v60 - v27;
  __chkstk_darwin(v28, v29);
  v31 = (char *)v60 - v30;
  uint64_t v32 = *(void *)(a1 + 16);
  if (v32)
  {
    v64 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    v62 = (void (**)(char *, uint64_t))(v11 + 8);
    v63 = CKCurrentUserDefaultName;
    v61 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    swift_bridgeObjectRetain();
    v60[1] = a1;
    uint64_t v33 = (void **)(a1 + 56);
    v65 = v20;
    while (1)
    {
      uint64_t v34 = (uint64_t)v24;
      uint64_t v35 = v5;
      uint64_t v36 = (uint64_t)*(v33 - 3);
      uint64_t v37 = (uint64_t)*(v33 - 2);
      uint64_t v39 = (uint64_t)*(v33 - 1);
      v38 = *v33;
      uint64_t v40 = v36 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v41 = v40;
      uint64_t v42 = v67;
      sub_100F38118(v41, v67, type metadata accessor for CRLBoardCRDTData);
      id v72 = v38;
      swift_retain_n();
      uint64_t v70 = v37;
      swift_retain();
      uint64_t v71 = v39;
      swift_retain();
      sub_1005057FC(&qword_101674550);
      int v43 = v73;
      CRRegister.wrappedValue.getter();
      sub_100F38180(v42, type metadata accessor for CRLBoardCRDTData);
      uint64_t v45 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      unint64_t v44 = *(void *)(v36 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      (*v64)(v74, v43, v75);
      BOOL v47 = v45 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v44 == v46;
      if (v47
        || (char v48 = _stringCompareWithSmolCheck(_:_:expecting:)(),
            swift_bridgeObjectRetain(),
            swift_bridgeObjectRelease(),
            (v48 & 1) != 0))
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = 0;
        unint64_t v44 = 0xE000000000000000;
      }
      uint64_t v5 = v35;
      uint64_t v49 = v75;
      (*v62)(v73, v75);
      uint64_t v50 = (uint64_t)v68;
      (*v61)(v68, v74, v49);
      uint64_t v51 = (void *)(v50 + *(int *)(v5 + 20));
      *uint64_t v51 = v45;
      v51[1] = v44;
      uint64_t v52 = v66;
      sub_100F37878(v50, v66, type metadata accessor for CRLBoardIdentifierStorage);
      sub_100F37878(v52, (uint64_t)v31, type metadata accessor for CRLBoardIdentifier);
      swift_release();
      uint64_t v53 = v69;
      LOBYTE(v52) = static UUID.== infix(_:_:)();
      sub_100F38118((uint64_t)v31, v34, type metadata accessor for CRLBoardIdentifier);
      uint64_t v54 = (uint64_t)v65;
      sub_100F38118(v53, (uint64_t)v65, type metadata accessor for CRLBoardIdentifier);
      if (v52)
      {
        uint64_t v55 = *(int *)(v5 + 20);
        uint64_t v56 = *(void *)(v34 + v55);
        uint64_t v57 = *(void *)(v34 + v55 + 8);
        v58 = (void *)(v54 + v55);
        v24 = (char *)v34;
        if (v56 == *v58 && v57 == v58[1])
        {
          sub_100F38180(v54, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v34, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180((uint64_t)v31, type metadata accessor for CRLBoardIdentifier);
LABEL_16:
          *(void *)(v36 + 24) = sub_1002094A4();
          sub_100EFD1F0(v69);
          goto LABEL_4;
        }
        char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100F38180(v54, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180(v34, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180((uint64_t)v31, type metadata accessor for CRLBoardIdentifier);
        if (v59) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_100F38180(v54, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180(v34, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180((uint64_t)v31, type metadata accessor for CRLBoardIdentifier);
        v24 = (char *)v34;
      }
LABEL_4:
      swift_release();
      swift_release();

      swift_release();
      v33 += 5;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_100EFDBD4()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100540B58;
  return sub_100EF1EDC(3, (uint64_t)&_swiftEmptySetSingleton);
}

uint64_t sub_100EFDD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_100EFDDA4, v6, v5);
}

uint64_t sub_100EFDDA4()
{
  uint64_t v1 = v0[5] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_realTimeCollaborationDelegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  uint64_t v3 = *(void *)(v1 + 8);
  v0[10] = v3;
  if (Strong)
  {
    uint64_t ObjectType = swift_getObjectType();
    v0[11] = ObjectType;
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
    uint64_t v5 = (void *)swift_task_alloc();
    v0[12] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100EFDF40;
    uint64_t v6 = v0[4];
    return v10(v6, ObjectType, v3);
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v0[15] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100EFE380;
    uint64_t v9 = v0[4];
    return sub_100EFE58C(v9);
  }
}

uint64_t sub_100EFDF40(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 136) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_100EFE068, v4, v3);
}

uint64_t sub_100EFE068()
{
  if (*(unsigned char *)(v0 + 136) == 1)
  {
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 80) + 16)
                                                                              + **(int **)(*(void *)(v0 + 80) + 16));
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v1;
    void *v1 = v0;
    v1[1] = sub_100EFE1D8;
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v2 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 16);
    return v10(v6, v4, v5, v2, v3);
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100EFE380;
    uint64_t v9 = *(void *)(v0 + 32);
    return sub_100EFE58C(v9);
  }
}

uint64_t sub_100EFE1D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_100EFE4BC;
  }
  else {
    uint64_t v5 = sub_100EFE314;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EFE314()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EFE380()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_100EFE528;
  }
  else {
    uint64_t v5 = sub_100618D48;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EFE4BC()
{
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EFE528()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EFE58C(uint64_t a1)
{
  v2[55] = a1;
  v2[56] = v1;
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[57] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[58] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[59] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[60] = v4;
  v2[61] = v3;
  return _swift_task_switch(sub_100EFE67C, v4, v3);
}

uint64_t sub_100EFE67C()
{
  uint64_t v1 = *(void *)(v0 + 456);
  (*(void (**)(void))(**(void **)(v0 + 440) + 192))();
  sub_10050F848((void *)(v0 + 304), *(void *)(v0 + 328));
  sub_100B18D74(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v2;
  void *v2 = v0;
  v2[1] = sub_100EFE774;
  uint64_t v4 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  return sub_100F83AB8(v3, v4);
}

uint64_t sub_100EFE774()
{
  uint64_t v2 = *v1;
  (*v1)[63] = v0;
  swift_task_dealloc();
  sub_100F38180(v2[57], type metadata accessor for CRLGloballyScopedBoardIdentifier);
  if (v0)
  {
    uint64_t v3 = v2[60];
    uint64_t v4 = v2[61];
    uint64_t v5 = sub_100EFF0BC;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v2 + 38));
    uint64_t v3 = v2[60];
    uint64_t v4 = v2[61];
    uint64_t v5 = sub_100EFE8CC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100EFE8CC()
{
  uint64_t v1 = sub_100EEBC0C(v0[58]);
  if ((unint64_t)v1 >> 62) {
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v2 = *(void *)(((unint64_t)v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_release();
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[58];
    swift_beginAccess();
    uint64_t v33 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v35 = v33;
    uint64_t v36 = UUID.uuidString.getter();
    uint64_t v38 = v37;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v36;
    *(void *)(inited + 40) = v38;
    uint64_t v39 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Cannot accept collaboration because the board is not open. Board %{public}@", 75, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_1006DAC0C();
    swift_allocError();
    unsigned char *v40 = 2;
    goto LABEL_14;
  }
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[56];
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  id v6 = v4;
  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  *(void *)(v5 + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(v5 + 64) = v10;
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v9;
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Start real time collaboration for board %{public}@", 50, 2, v5);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if (!*(void *)(v13 + 16) || (unint64_t v14 = sub_1009563EC(v0[58]), (v15 & 1) == 0))
  {
    uint64_t v18 = v0[58];
    swift_endAccess();
    swift_release();
    uint64_t v26 = (void *)static OS_os_log.realTimeSync;
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_10117E810;
    id v28 = v26;
    uint64_t v29 = UUID.uuidString.getter();
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = v10;
    *(void *)(v27 + 32) = v29;
    *(void *)(v27 + 40) = v30;
    uint64_t v31 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Cannot accept collaboration because the board info corresponding the given board identifier was not found. Board %{public}@", 123, 2, v27);
    swift_setDeallocating();
    swift_arrayDestroy();

    sub_1006DAC0C();
    swift_allocError();
    unsigned char *v32 = 0;
LABEL_14:
    swift_willThrow();
    goto LABEL_15;
  }
  uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
  v0[64] = v16;
  swift_endAccess();
  uint64_t v17 = (void *)(v16 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
  swift_beginAccess();
  if (*v17)
  {
    uint64_t v18 = v0[58];
    swift_retain();
    swift_release();
    uint64_t v19 = (void *)static OS_os_log.realTimeSync;
    uint64_t v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_10117E810;
    id v21 = v19;
    uint64_t v22 = UUID.uuidString.getter();
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = v10;
    *(void *)(v20 + 32) = v22;
    *(void *)(v20 + 40) = v23;
    uint64_t v24 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Not activating standard real-time session because a real-time session already exists for board %{public}@", 105, 2, v20);
    swift_setDeallocating();
    swift_arrayDestroy();

    sub_1007DC5DC();
    swift_allocError();
    *uint64_t v25 = 1;
    swift_willThrow();
    swift_release();
LABEL_15:
    sub_100F38180(v18, type metadata accessor for CRLBoardIdentifier);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v41 = (uint64_t (*)(void))v0[1];
    return v41();
  }
  swift_retain();
  int v43 = (void *)swift_task_alloc();
  v0[65] = v43;
  *int v43 = v0;
  v43[1] = sub_100EFEED8;
  uint64_t v44 = v0[55];
  return sub_100F08E74(v44);
}

uint64_t sub_100EFEED8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 528) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 488);
  uint64_t v4 = *(void *)(v2 + 480);
  if (v0) {
    uint64_t v5 = sub_100EFF13C;
  }
  else {
    uint64_t v5 = sub_100EFF014;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EFF014()
{
  uint64_t v1 = *(void *)(v0 + 464);
  swift_release();
  swift_release();
  sub_100F38180(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EFF0BC()
{
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 304);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EFF13C()
{
  uint64_t v1 = *(void *)(v0 + 464);
  swift_release();
  swift_release();
  sub_100F38180(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EFF1D8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = v3 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos;
  swift_beginAccess();
  if (*(void *)(*(void *)v8 + 16) && (sub_1009563EC(a1), (v9 & 1) != 0))
  {
    swift_endAccess();
    uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_opportunisticGroupSessionManager);
    swift_beginAccess();
    if (!*(void *)(*(void *)(v10 + 88) + 16)
      || (swift_bridgeObjectRetain(), sub_1009567DC(a2), char v12 = v11, swift_bridgeObjectRelease(), (v12 & 1) == 0))
    {
      char v20 = sub_100B1B0D8(a2, a3 & 1) ^ 1;
      return v20 & 1;
    }
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v13 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v15 = v13;
    uint64_t v16 = UUID.uuidString.getter();
    uint64_t v18 = v17;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v16;
    *(void *)(inited + 40) = v18;
    uint64_t v19 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Currently leaving activtiy for %{public}@, should not activate new one.", 71, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    swift_endAccess();
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_100EFF3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[35] = a4;
  v5[36] = a5;
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v5[37] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[38] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[39] = v7;
  v5[40] = v6;
  return _swift_task_switch(sub_100EFF498, v7, v6);
}

void sub_100EFF498()
{
  uint64_t v1 = (uint64_t *)(v0[35] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1009563EC(v0[36]), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    v0[41] = v5;
    swift_endAccess();
    uint64_t v6 = *(void **)(v5 + 16);
    uint64_t v7 = self;
    swift_retain();
    uint64_t v8 = v6;
    id v9 = [v7 sharedApplication];
    id v10 = [v9 delegate];

    if (v10)
    {
      type metadata accessor for CRLiOSAppDelegate();
      uint64_t v11 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
      swift_retain();
      swift_unknownObjectRelease();
      uint64_t v12 = *(void *)(v11 + 48);
      swift_release();
      v8[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_realTimeSessionNeedsAccountUpgrade] = (v12 & 2) == 0;

      v0[42] = *(void *)(*(void *)(*(void *)(v5 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                         + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
      swift_retain();
      uint64_t v13 = (void *)swift_task_alloc();
      v0[43] = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_100EFF7F8;
      uint64_t v15 = v0[36];
      uint64_t v14 = v0[37];
      sub_100F8401C(v14, v15);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_endAccess();
    swift_release();
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v16 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v18 = v16;
    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v21 = v20;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v19;
    *(void *)(inited + 40) = v21;
    uint64_t v22 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Cannot start opportunistic activity. Did not find the board with id %{public}@", 78, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_task_dealloc();
    uint64_t v23 = (void (*)(void))v0[1];
    v23();
  }
}

uint64_t sub_100EFF7F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 320);
  uint64_t v4 = *(void *)(v2 + 312);
  if (v0) {
    uint64_t v5 = sub_100F000C8;
  }
  else {
    uint64_t v5 = sub_100EFF934;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EFF934()
{
  uint64_t v1 = v0[42];
  if (sub_100EFF1D8(v0[36], v0[37], *(void *)(v1 + 16) != 0))
  {
    uint64_t v2 = (void *)(v0[41] + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
    swift_beginAccess();
    if (*v2)
    {
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v3 = (id)static OS_os_log.realTimeSync;
      uint64_t v4 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"hasOngoingRealTimeSyncSession meaning we are switching between Me-to-Me and CKShare, will deactivateOpportunisticRealTimeCollaboration() and exitRealTimeSync() current session.", 176, 2, (uint64_t)_swiftEmptyArrayStorage);

      uint64_t v5 = (void *)swift_task_alloc();
      v0[45] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_100EFFD2C;
      uint64_t v6 = v0[37];
      return sub_100B1B1A4(v6, 1);
    }
    else
    {
      id v18 = *(void **)(v1 + 16);
      v0[46] = v18;
      id v19 = v18;
      uint64_t v20 = (void *)swift_task_alloc();
      v0[47] = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_100EFFEEC;
      uint64_t v21 = v0[37];
      return sub_100B1C1D0(v21, (uint64_t)v18);
    }
  }
  else
  {
    swift_release();
    uint64_t v8 = *(void *)(v1 + 16);
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v9 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    BOOL v11 = v8 == 0;
    if (v8) {
      uint64_t v12 = 0x65736C6166;
    }
    else {
      uint64_t v12 = 1702195828;
    }
    if (v11) {
      uint64_t v13 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v13 = (void *)0xE500000000000000;
    }
    id v14 = v9;
    v15._countAndFlagsBits = v12;
    v15._object = v13;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0xE000000000000000;
    uint64_t v16 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v16, (uint64_t)"GroupActivity already exists for isMeToMe: %{public}@, should not activate.", 75, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_release();
    swift_release();
    sub_100F38180(v0[37], type metadata accessor for CRLGloballyScopedBoardIdentifier);
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_100EFFD2C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 320);
  uint64_t v3 = *(void *)(v1 + 312);
  return _swift_task_switch(sub_100EFFE4C, v3, v2);
}

uint64_t sub_100EFFE4C()
{
  swift_release();
  sub_100F0BA70();
  swift_release();
  swift_release();
  sub_100F38180(*(void *)(v0 + 296), type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EFFEEC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 368);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 320);
  uint64_t v4 = *(void *)(v1 + 312);
  return _swift_task_switch(sub_100F0002C, v4, v3);
}

uint64_t sub_100F0002C()
{
  swift_release();
  swift_release();
  swift_release();
  sub_100F38180(*(void *)(v0 + 296), type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F000C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F00150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v5[4] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_100F00214, v7, v6);
}

uint64_t sub_100F00214()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_100F002B8;
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  return sub_100F8401C(v2, v3);
}

uint64_t sub_100F002B8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v5 = sub_100DF7728;
  }
  else {
    uint64_t v5 = sub_100F003F4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100F003F4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  void *v1 = v0;
  v1[1] = sub_100F0049C;
  uint64_t v2 = *(void *)(v0 + 32);
  return sub_100B1B1A4(v2, 0);
}

uint64_t sub_100F0049C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100F005BC, v3, v2);
}

uint64_t sub_100F005BC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  sub_100F38180(v1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t (*sub_100F00644())()
{
  return j__swift_endAccess;
}

uint64_t sub_100F006A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[26] = a3;
  v4[27] = v3;
  v4[24] = a1;
  v4[25] = a2;
  v4[28] = type metadata accessor for CRLBoardCRDTData(0);
  v4[29] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v4[30] = swift_task_alloc();
  return _swift_task_switch(sub_100F00764, 0, 0);
}

uint64_t sub_100F00764()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[24];
  uint64_t v5 = (void *)v0[25];
  *(void *)(v3 + 24) = [self weakObjectsHashTable];
  *(void *)(v3 + 32) = [self weakObjectsHashTable];
  *(void *)(v3 + 40) = &_swiftEmptySetSingleton;
  *(void *)(v3 + 48) = 0;
  *(_WORD *)(v3 + 56) = 0;
  type metadata accessor for CRLUnfairLock();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (_DWORD *)swift_slowAlloc();
  _DWORD *v7 = 0;
  *(void *)(v6 + 16) = v7;
  atomic_thread_fence(memory_order_acq_rel);
  *(void *)(v3 + 64) = v6;
  sub_1005057FC(&qword_1016A2338);
  swift_allocObject();
  *(void *)(v3 + 72) = PassthroughSubject.init()();
  *(unsigned char *)(v3 + 80) = 0;
  v0[31] = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo__unsafe_lastActivityTime;
  Date.init()();
  *(unsigned char *)(v3 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_didLockOnPausingOutgoingRealTimeChanges) = 0;
  uint64_t v8 = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_databaseSaveObserverForRealTimeSync;
  v0[32] = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_databaseSaveObserverForRealTimeSync;
  *(void *)(v3 + v8) = 0;
  uint64_t v9 = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession;
  v0[33] = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession;
  id v10 = (_OWORD *)(v3 + v9);
  *id v10 = 0u;
  v10[1] = 0u;
  uint64_t v11 = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_onlyShowJoinLeavePlacardsAfterThisTime;
  v0[34] = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_onlyShowJoinLeavePlacardsAfterThisTime;
  uint64_t v12 = v3 + v11;
  uint64_t v13 = type metadata accessor for Date();
  v0[35] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v0[36] = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  *(void *)(v3
            + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_cloudQuotaExceededAlertMinimumLastShowDateInterval) = 0x408C200000000000;
  *(void *)(v3 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_promptCloudQuotaExceededTask) = 0;
  *(void *)(v3 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_reloadBoardTask) = 0;
  uint64_t v15 = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_syncPriorityProvider;
  v0[37] = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_syncPriorityProvider;
  *(void *)(v3 + v15) = v2;
  sub_100F38118(v4, v1, type metadata accessor for CRLBoardIdentifier);
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_101682FB8 + dword_101682FB8);
  swift_retain();
  id v16 = v5;
  uint64_t v17 = (void *)swift_task_alloc();
  v0[38] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_100F00A14;
  uint64_t v18 = v0[30];
  uint64_t v19 = v0[25];
  return v21(v18, v19, 0);
}

uint64_t sub_100F00A14(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 312) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100F00DF4;
  }
  else
  {
    *(void *)(v4 + 320) = a1;
    uint64_t v5 = sub_100F00B3C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100F00B3C()
{
  uint64_t v1 = v0[27];
  *(void *)(v1 + 16) = v0[40];
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[29];
  uint64_t v20 = (void *)v0[25];
  uint64_t v19 = v0[24];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v5 = v3;
  uint64_t v6 = UUID.uuidString.getter();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  id v10 = *(char **)(*(void *)(v1 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v11, v2, type metadata accessor for CRLBoardCRDTData);
  uint64_t v12 = v10;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v13 = v0[22];
  uint64_t v14 = v0[23];
  sub_100F38180(v2, type metadata accessor for CRLBoardCRDTData);

  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v13;
  *(void *)(inited + 80) = v14;
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Created BoardInfo for %{public}@ : '%@'", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_release();
  sub_100F38180(v19, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  id v16 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v17 = v0[27];
  return v16(v17);
}

uint64_t sub_100F00DF4()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v4 = v0[33];
  uint64_t v5 = v0[31];
  uint64_t v6 = v0[27];
  uint64_t v7 = v0[24];
  uint64_t v8 = (void *)v0[25];
  swift_release();

  sub_100F38180(v7, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v6 + v5, v3);
  swift_unknownObjectRelease();
  sub_100741AB8(*(void *)(v6 + v4));
  sub_100522F00(v6 + v2, &qword_101672EB0);
  swift_release();
  swift_release();
  swift_release();
  type metadata accessor for CRLBoardLibrary.BoardInfo();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100F00FAC()
{
  v1[40] = v0;
  sub_1005057FC(&qword_101672EB0);
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  type metadata accessor for CRLBoardCRDTData(0);
  v1[43] = swift_task_alloc();
  type metadata accessor for UUID();
  v1[44] = swift_task_alloc();
  uint64_t v2 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v1[45] = v2;
  v1[46] = *(void *)(v2 + 64);
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  uint64_t v3 = sub_1005057FC(&qword_1016A2400);
  v1[49] = v3;
  v1[50] = *(void *)(v3 - 8);
  v1[51] = swift_task_alloc();
  return _swift_task_switch(sub_100F01178, 0, 0);
}

uint64_t sub_100F01178(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[40];
  if (*(unsigned char *)(v4 + 56) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setUp()", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2060, (uint64_t)"Duplicate call to setUp()", 25, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setUp()", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2060);
    uint64_t v4 = v3[40];
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v3[52] = v5;
  uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator);
  v3[53] = v6;
  if (v6)
  {
    type metadata accessor for MainActor();
    swift_retain();
    v3[54] = static MainActor.shared.getter();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
    a1 = sub_100F012EC;
    a2 = v7;
    a3 = v9;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_100F012EC()
{
  uint64_t v1 = *(void *)(v0 + 424);
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setObserver(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLSuspendResumeCoordinator.swift", 102, 2, 71, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setObserver(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLSuspendResumeCoordinator.swift", 102, 2, 71);
    swift_unknownObjectRelease();
  }
  *(void *)(v1 + 24) = &off_101532CE0;
  swift_unknownObjectWeakAssign();
  swift_release();
  return _swift_task_switch(sub_100F0143C, 0, 0);
}

uint64_t sub_100F0143C()
{
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  *(void *)(v0 + 440) = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v50 = v3;
  uint64_t v51 = v1;
  uint64_t v4 = *(char **)(v1 + v3);
  *(void *)(v0 + 448) = v4;
  uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedChangeAvailablePublisher];
  uint64_t v6 = self;
  uint64_t v7 = v4;
  swift_retain();
  id v8 = [v6 mainRunLoop];
  *(void *)(v0 + 16) = 0x3FB999999999999ALL;
  *(void *)(v0 + 24) = v5;
  *(void *)(v0 + 32) = v8;
  *(void *)(v0 + 40) = NSRunLoopCommonModes;
  *(void *)(v0 + 48) = sub_100F0205C;
  *(void *)(v0 + 56) = 0;
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = NSRunLoopCommonModes;
  sub_1005057FC(&qword_1016A2408);
  sub_100523288(&qword_1016A2410, &qword_1016A2408);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();

  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v13 = *(void *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedRealTimeChangesAvailablePublisher];
  swift_retain();
  id v14 = [v6 mainRunLoop];
  *(void *)(v0 + 112) = 0x3F847AE147AE147BLL;
  *(void *)(v0 + 120) = v13;
  *(void *)(v0 + 128) = v14;
  *(void *)(v0 + 136) = v12;
  *(void *)(v0 + 144) = CRLWPShapeLayout.descendersCannotClip.getter;
  *(void *)(v0 + 152) = 0;
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v7;
  uint64_t v49 = v7;
  uint64_t v17 = v12;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();

  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  *(void *)(v0 + 304) = *(void *)(v2 + 72);
  uint64_t v18 = qword_10166FE38;
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)(v0 + 400);
  uint64_t v20 = *(void *)(v0 + 408);
  uint64_t v47 = *(void *)(v0 + 352);
  uint64_t v48 = *(void *)(v0 + 384);
  uint64_t v46 = *(void *)(v0 + 344);
  uint64_t v45 = *(void *)(v0 + 392);
  uint64_t v21 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  sub_100556B74(v21, (uint64_t)qword_10171C388);
  id v22 = [v6 mainRunLoop];
  *(void *)(v0 + 312) = v22;
  sub_1005057FC(&qword_1016A2338);
  sub_10050BF48(0, &qword_1016773B0);
  sub_100523288(&qword_1016A2418, &qword_1016A2338);
  sub_10062E0F4(&qword_1016773C0, &qword_1016773B0);
  Publisher.throttle<A>(for:scheduler:latest:)();

  swift_release();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v23;
  *(void *)(v25 + 24) = v24;
  sub_100523288(&qword_1016A2420, &qword_1016A2400);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v45);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v26 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v27 = *(void *)&v49[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v27, v46, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  *(void *)(v0 + 456) = sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180(v46, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  id v28 = (uint64_t *)(*(void *)&v49[v26] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v30 = *v28;
  unint64_t v29 = v28[1];
  swift_bridgeObjectRetain();
  sub_100753370(v47, v30, v29, v48);
  id v31 = [self defaultCenter];
  if (qword_10166F7C0 != -1) {
    swift_once();
  }
  uint64_t v33 = *(void *)(v0 + 376);
  uint64_t v32 = *(void *)(v0 + 384);
  uint64_t v34 = *(void *)(v0 + 360);
  uint64_t v35 = *(void *)(v0 + 320);
  uint64_t v36 = qword_10171B688;
  uint64_t v37 = swift_allocObject();
  swift_weakInit();
  sub_100F38118(v32, v33, type metadata accessor for CRLBoardIdentifier);
  unint64_t v38 = (*(unsigned __int8 *)(v34 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v37;
  sub_100F37878(v33, v39 + v38, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v0 + 96) = sub_100F36FAC;
  *(void *)(v0 + 104) = v39;
  *(void *)(v0 + 64) = _NSConcreteStackBlock;
  *(void *)(v0 + 72) = *(void *)"";
  *(void *)(v0 + 80) = sub_1005E5680;
  *(void *)(v0 + 88) = &unk_101533470;
  uint64_t v40 = _Block_copy((const void *)(v0 + 64));
  swift_release();
  id v41 = [v31 addObserverForName:v36 object:0 queue:0 usingBlock:v40];
  _Block_release(v40);

  *(void *)(v35 + 48) = v41;
  swift_unknownObjectRelease();
  uint64_t v42 = *(void *)(*(void *)(*(void *)(v51 + v50) + OBJC_IVAR____TtC8Freeform8CRLBoard_store)
                  + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_assetUploadTracker);
  *(void *)(v0 + 464) = v42;
  uint64_t v43 = *(void *)(v42 + 16);
  *(void *)(v0 + 472) = v43;
  swift_retain();
  return _swift_task_switch(sub_100F01D24, v43, 0);
}

uint64_t sub_100F01D24()
{
  [*(id *)(*(void *)(v0 + 472) + 112) addObject:*(void *)(v0 + 320)];
  swift_release();
  return _swift_task_switch(sub_100F01DA4, 0, 0);
}

uint64_t sub_100F01DA4()
{
  uint64_t v17 = (void *)v0[56];
  uint64_t v1 = v0[47];
  uint64_t v16 = v0[48];
  uint64_t v2 = v0[43];
  uint64_t v3 = v0[44];
  uint64_t v18 = v0[41];
  uint64_t v19 = v0[40];
  uint64_t v4 = v0[42];
  uint64_t v5 = *(char **)(v0[52] + v0[55]);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v7, v2, type metadata accessor for CRLBoardCRDTData);
  id v8 = v5;
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_100F38180(v2, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v9 = (uint64_t *)(*(void *)&v5[v6] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  swift_bridgeObjectRetain();
  sub_100753370(v3, v10, v11, v1);

  sub_1006045E0(v1);
  sub_100F38180(v1, type metadata accessor for CRLBoardIdentifier);
  Date.init(timeIntervalSinceNow:)();

  sub_100F38180(v16, type metadata accessor for CRLBoardIdentifier);
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 0, 1, v12);
  sub_10051B3EC(v4, v18, &qword_101672EB0);
  uint64_t v13 = v19 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_onlyShowJoinLeavePlacardsAfterThisTime;
  swift_beginAccess();
  sub_1006063BC(v18, v13, &qword_101672EB0);
  swift_endAccess();
  *(unsigned char *)(v19 + 56) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100F0205C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1005057FC(&qword_10169A028);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  unint64_t v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(int *)(v9 + 48);
  sub_100F38118(a1, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  uint64_t v13 = *(unsigned __int8 *)(a1 + v12);
  v11[v12] = v13;
  sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  if (v13 == 1)
  {
    if (qword_10166FB70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v14 = (void *)static OS_os_log.boardStore;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v16 = *(int *)(v7 + 48);
    sub_100F38118(a1, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    v11[v16] = *(unsigned char *)(a1 + v12);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v11, v2);
    id v17 = v14;
    sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    uint64_t v18 = UUID.uuidString.getter();
    uint64_t v20 = v19;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v21 = sub_100528BE4();
    *(void *)(inited + 32) = v18;
    *(void *)(inited + 64) = v21;
    *(void *)(inited + 40) = v20;
    uint64_t v22 = static os_log_type_t.info.getter();
    uint64_t v23 = "Observed a significant change in board %@. Saving immediately.";
    uint64_t v24 = (uint64_t)v17;
    uint64_t v25 = 62;
  }
  else
  {
    if (qword_10166FB70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v26 = (void *)static OS_os_log.boardStore;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v27 = *(int *)(v7 + 48);
    sub_100F38118(a1, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    v11[v27] = *(unsigned char *)(a1 + v12);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v11, v2);
    id v17 = v26;
    sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    uint64_t v28 = UUID.uuidString.getter();
    uint64_t v30 = v29;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v31 = sub_100528BE4();
    *(void *)(inited + 32) = v28;
    *(void *)(inited + 64) = v31;
    *(void *)(inited + 40) = v30;
    uint64_t v22 = static os_log_type_t.info.getter();
    uint64_t v23 = "Observed a change in board %@. Saving soon";
    uint64_t v24 = (uint64_t)v17;
    uint64_t v25 = 42;
  }
  sub_100BAC898(v24, (uint64_t)&_mh_execute_header, v22, (uint64_t)v23, v25, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return v13;
}

void sub_100F02484()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v11 = (void *)Strong;
    swift_beginAccess();
    uint64_t v12 = swift_weakLoadStrong();
    if (v12)
    {
      uint64_t v13 = v12;
      sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
      uint64_t v20 = static OS_dispatch_queue.main.getter();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v11;
      *(void *)(v14 + 24) = v13;
      aBlock[4] = sub_100F37240;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_101533538;
      uint64_t v15 = _Block_copy(aBlock);
      uint64_t v19 = v5;
      uint64_t v16 = v15;
      id v18 = v11;
      swift_retain();
      static DispatchQoS.unspecified.getter();
      unint64_t v21 = _swiftEmptyArrayStorage;
      sub_100F359B0((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v17 = (void *)v20;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v16);

      swift_release();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v19);
      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_100F027DC(char *a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FB70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v15 = (void *)static OS_os_log.boardStore;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v18 = *(void *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v18, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  id v19 = v15;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v20 = (uint64_t *)(*(void *)&a1[v17] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v10, v21, v22, (uint64_t)v14);
  uint64_t v23 = v32;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v14, v32);
  sub_100F38180((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
  uint64_t v24 = UUID.uuidString.getter();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v23);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v24;
  *(void *)(inited + 40) = v26;
  uint64_t v27 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Autosaving %{public}@", 21, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a1;
  *(void *)(v28 + 24) = v33;
  uint64_t v29 = a1;
  swift_retain();
  sub_100D12064((uint64_t (*)(void, void))sub_100F3724C, v28);
  return swift_release();
}

uint64_t sub_100F02BA8(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v49 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  id v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t result = __chkstk_darwin(v20 - 8, v21);
  uint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 & 1) == 0 && (a1)
  {
    uint64_t v44 = v15;
    uint64_t v45 = v8;
    uint64_t v46 = v7;
    uint64_t v47 = a4;
    if (qword_10166FB70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v25 = (void *)static OS_os_log.boardStore;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v27 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v28 = v48;
    uint64_t v29 = *(void *)(v48 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100F38118(v29, (uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
    id v30 = v25;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100F38180((uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v31 = (uint64_t *)(*(void *)(v28 + v27) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v32 = *v31;
    unint64_t v33 = v31[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v19, v32, v33, (uint64_t)v24);
    uint64_t v34 = v44;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v24, v44);
    sub_100F38180((uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
    uint64_t v35 = UUID.uuidString.getter();
    uint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v34);
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v35;
    *(void *)(inited + 40) = v37;
    uint64_t v38 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v38, (uint64_t)"Success autosaving %{public}@", 29, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v39 = v47;
    uint64_t v40 = *(void *)(v47 + 64);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v40 + 16));
    *(unsigned char *)(v39 + 80) = 1;
    id v41 = v49;
    Date.init()();
    uint64_t v42 = v39 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo__unsafe_lastActivityTime;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 40))(v42, v41, v46);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v40 + 16));
    sub_1005057FC(&qword_1016A2338);
    sub_100523288(&qword_1016A2450, &qword_1016A2338);
    return Subject<>.send()();
  }
  return result;
}

uint64_t sub_100F0308C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  type metadata accessor for MainActor();
  swift_retain();
  id v10 = a3;
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v9;
  v12[5] = v10;
  swift_release();
  sub_1005912D0((uint64_t)v7, (uint64_t)&unk_1016A2430, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_100F03220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[32] = a4;
  v5[33] = a5;
  sub_1005057FC(&qword_101672BB0);
  v5[34] = swift_task_alloc();
  type metadata accessor for CRLBoardCRDTData(0);
  v5[35] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v5[36] = v6;
  v5[37] = *(void *)(v6 - 8);
  v5[38] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v5[39] = swift_task_alloc();
  sub_1005057FC(&qword_10168B130);
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  v5[42] = type metadata accessor for MainActor();
  v5[43] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F033E0, v8, v7);
}

uint64_t sub_100F033E0()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (uint64_t *)(Strong + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
    swift_beginAccess();
    uint64_t v3 = *v2;
    sub_100741A58(*v2);
    swift_release();
    if (v3)
    {
      uint64_t v4 = swift_retain();
      sub_100741AB8(v4);
      uint64_t v5 = *(void *)(v3 + 32);
      swift_retain();
      swift_release();
      if (v5)
      {
        swift_beginAccess();
        uint64_t v6 = swift_weakLoadStrong();
        if (!v6) {
          goto LABEL_17;
        }
        uint64_t v7 = (uint64_t *)(v6 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
        swift_beginAccess();
        uint64_t v8 = *v7;
        sub_100741A58(*v7);
        swift_release();
        if (!v8) {
          goto LABEL_17;
        }
        uint64_t v9 = swift_retain();
        sub_100741AB8(v9);
        sub_1005057FC(&qword_101692C70);
        uint64_t v10 = swift_dynamicCastClass();
        if (!v10)
        {
          swift_release();
LABEL_17:
          uint64_t v33 = v0[34];
          uint64_t v34 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
          swift_retain();
          uint64_t v35 = static MainActor.shared.getter();
          uint64_t v36 = (void *)swift_allocObject();
          v36[2] = v35;
          v36[3] = &protocol witness table for MainActor;
          v36[4] = v5;
          sub_1005912D0(v33, (uint64_t)&unk_1016A2440, (uint64_t)v36);
          swift_release();
          swift_release();
          goto LABEL_18;
        }
        uint64_t v11 = v0[41];
        uint64_t v12 = v10 + *(void *)(*(void *)v10 + 280);
        swift_beginAccess();
        sub_100522E9C(v12, v11, &qword_10168B130);
        uint64_t v13 = sub_1005057FC(&qword_101692B50);
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
        {
          swift_release();
        }
        else
        {
          uint64_t v15 = v0[40];
          sub_100522E9C(v0[41], v15, &qword_10168B130);
          if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 88))(v15, v13) == enum case for GroupSession.State.waiting<A>(_:))
          {
            uint64_t v16 = qword_10166FBA0;
            swift_retain();
            if (v16 != -1) {
              swift_once();
            }
            uint64_t v17 = v0[38];
            uint64_t v40 = v0[37];
            uint64_t v41 = v0[39];
            uint64_t v18 = v0[35];
            uint64_t v42 = v0[36];
            uint64_t v43 = v0[41];
            uint64_t v19 = v0[33];
            swift_beginAccess();
            uint64_t v39 = (void *)static OS_os_log.realTimeSync;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_10117E810;
            uint64_t v21 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
            uint64_t v22 = *(void *)(v19 + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
                + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
            swift_beginAccess();
            sub_100F38118(v22, v18, type metadata accessor for CRLBoardCRDTData);
            id v23 = v39;
            swift_retain();
            sub_1005057FC(&qword_101674550);
            CRRegister.wrappedValue.getter();
            sub_100F38180(v18, type metadata accessor for CRLBoardCRDTData);
            swift_release();
            uint64_t v24 = (uint64_t *)(*(void *)(v19 + v21) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
            uint64_t v25 = *v24;
            unint64_t v26 = v24[1];
            swift_bridgeObjectRetain();
            sub_100753370(v17, v25, v26, v41);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v17, v41, v42);
            sub_100F38180(v41, type metadata accessor for CRLBoardIdentifier);
            uint64_t v27 = UUID.uuidString.getter();
            uint64_t v29 = v28;
            (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v17, v42);
            *(void *)(inited + 56) = &type metadata for String;
            *(void *)(inited + 64) = sub_100528BE4();
            *(void *)(inited + 32) = v27;
            *(void *)(inited + 40) = v29;
            uint64_t v30 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Tried to send real-time changes but state is .waiting, so fast sync changes will not be transferred %{public}@", 110, 2, inited);
            swift_release_n();
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            uint64_t v31 = v43;
            goto LABEL_16;
          }
          uint64_t v32 = v0[40];
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v32, v13);
        }
        uint64_t v31 = v0[41];
LABEL_16:
        sub_100522F00(v31, &qword_10168B130);
        goto LABEL_17;
      }
    }
  }
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_100F03A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_1005057FC(&qword_101672BB0);
  v4[3] = swift_task_alloc();
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  return _swift_task_switch(sub_100F03B08, a4, 0);
}

uint64_t sub_100F03B08()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = sub_100F359B0((unint64_t *)&qword_101692C80, (void (*)(uint64_t))type metadata accessor for CRLGroupSessionSyncController);
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  v5[3] = v4;
  v5[4] = v2;
  swift_retain_n();
  sub_1005912D0(v1, (uint64_t)&unk_1016A2448, (uint64_t)v5);
  swift_release();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F03C60, v7, v6);
}

uint64_t sub_100F03C60()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100F03CCC()
{
  uint64_t v0 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v64 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = (char *)Strong;
    swift_beginAccess();
    uint64_t v19 = swift_weakLoadStrong();
    if (v19)
    {
      uint64_t v58 = v4;
      v63 = v18;
      uint64_t v20 = *(os_unfair_lock_s **)(*(void *)(v19 + 64) + 16);
      uint64_t v21 = v19;
      os_unfair_lock_lock(v20);
      uint64_t v61 = v21;
      uint64_t v22 = v21 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo__unsafe_lastActivityTime;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v22, v12);
      os_unfair_lock_unlock(v20);
      uint64_t v59 = v12;
      uint64_t v60 = v13;
      v62 = v16;
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v23 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v25 = v63;
      uint64_t v26 = *(void *)&v63[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
      uint64_t v27 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v53 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v28 = v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v57 = type metadata accessor for CRLBoardCRDTData;
      sub_100F38118(v28, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
      id v52 = v23;
      swift_retain();
      uint64_t v56 = sub_1005057FC(&qword_101674550);
      CRRegister.wrappedValue.getter();
      uint64_t v54 = type metadata accessor for CRLBoardCRDTData;
      sub_100F38180((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      uint64_t v29 = (uint64_t *)(*(void *)&v25[v27] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v30 = *v29;
      unint64_t v31 = v29[1];
      swift_bridgeObjectRetain();
      sub_100753370((uint64_t)v7, v30, v31, (uint64_t)v11);
      uint64_t v32 = v64;
      uint64_t v33 = v58;
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v7, v11, v58);
      uint64_t v55 = type metadata accessor for CRLBoardIdentifier;
      sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
      uint64_t v34 = UUID.uuidString.getter();
      uint64_t v36 = v35;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
      uint64_t v37 = (uint64_t)v3;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v38 = sub_100528BE4();
      *(void *)(inited + 64) = v38;
      *(void *)(inited + 32) = v34;
      *(void *)(inited + 40) = v36;
      uint64_t v39 = Date.description.getter();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v38;
      *(void *)(inited + 72) = v39;
      *(void *)(inited + 80) = v40;
      uint64_t v41 = static os_log_type_t.info.getter();
      id v42 = v52;
      sub_100BAC898((uint64_t)v52, (uint64_t)&_mh_execute_header, v41, (uint64_t)"Updating activity time for %{public}@ to %{public}@", 51, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v43 = v61;
      uint64_t v44 = *(os_unfair_lock_s **)(*(void *)(v61 + 64) + 16);
      os_unfair_lock_lock(v44);
      *(unsigned char *)(v43 + 80) = 0;
      os_unfair_lock_unlock(v44);
      uint64_t v45 = v63;
      uint64_t v46 = v53;
      uint64_t v47 = *(void *)&v63[v53] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100F38118(v47, v37, v57);
      swift_retain();
      CRRegister.wrappedValue.getter();
      sub_100F38180(v37, v54);
      swift_release();
      uint64_t v48 = (uint64_t *)(*(void *)&v45[v46] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v49 = *v48;
      unint64_t v50 = v48[1];
      swift_bridgeObjectRetain();
      sub_100753370((uint64_t)v7, v49, v50, (uint64_t)v11);
      uint64_t v51 = (uint64_t)v62;
      uint64_t v18 = v45;
      sub_100C74E7C((uint64_t)v11, (uint64_t)v62, 0, 0);
      swift_release();
      sub_100F38180((uint64_t)v11, v55);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v51, v59);
    }
  }
}

uint64_t sub_100F042D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLZoneSyncResultScenarios();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = Notification.userInfo.getter();
    if (v14)
    {
      uint64_t v15 = v14;
      unint64_t v28 = 0xD000000000000026;
      unint64_t v29 = 0x800000010126BC20;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v15 + 16) && (unint64_t v16 = sub_10095647C((uint64_t)v30), (v17 & 1) != 0))
      {
        sub_100522D7C(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v31);
      }
      else
      {
        long long v31 = 0u;
        long long v32 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10050BFE0((uint64_t)v30);
      if (*((void *)&v32 + 1))
      {
        sub_1005057FC(&qword_10168DAF8);
        if ((swift_dynamicCast() & 1) == 0) {
          return swift_release();
        }
        uint64_t v18 = v30[0];
        if (*(void *)(v30[0] + 16) && (unint64_t v19 = sub_1009563EC(a3), (v20 & 1) != 0))
        {
          sub_100F38118(*(void *)(v18 + 56) + *(void *)(v9 + 72) * v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
          uint64_t v21 = 0;
        }
        else
        {
          uint64_t v21 = 1;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v21, 1, v8);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
        {
          swift_release();
          return sub_100522F00((uint64_t)v7, &qword_101674220);
        }
        sub_100F37878((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
        if (*v12 == 1) {
          sub_100F075A4();
        }
        if (v12[1] == 1) {
          sub_100F06C9C();
        }
        uint64_t v22 = Notification.userInfo.getter();
        if (v22)
        {
          uint64_t v23 = v22;
          unint64_t v28 = 0xD000000000000029;
          unint64_t v29 = 0x800000010126BC50;
          AnyHashable.init<A>(_:)();
          if (*(void *)(v23 + 16) && (unint64_t v24 = sub_10095647C((uint64_t)v30), (v25 & 1) != 0))
          {
            sub_100522D7C(*(void *)(v23 + 56) + 32 * v24, (uint64_t)&v31);
          }
          else
          {
            long long v31 = 0u;
            long long v32 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_10050BFE0((uint64_t)v30);
          if (*((void *)&v32 + 1))
          {
            if (swift_dynamicCast())
            {
              if (v30[0])
              {
                sub_100F38180((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
                return swift_release();
              }
              uint64_t v26 = swift_bridgeObjectRetain();
              sub_100F0C904(v26);
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_release();
            }
            return sub_100F38180((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
          }
        }
        else
        {
          long long v31 = 0u;
          long long v32 = 0u;
        }
        swift_release();
        sub_100522F00((uint64_t)&v31, &qword_101672BF0);
        return sub_100F38180((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      }
    }
    else
    {
      long long v31 = 0u;
      long long v32 = 0u;
    }
    swift_release();
    return sub_100522F00((uint64_t)&v31, &qword_101672BF0);
  }
  return result;
}

void sub_100F0473C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v68 - v13;
  uint64_t v15 = Notification.userInfo.getter();
  if (!v15) {
    return;
  }
  uint64_t v16 = v15;
  uint64_t v77 = v1;
  if (qword_10166EE98 != -1) {
    swift_once();
  }
  char v17 = (void *)qword_10171A4C0;
  uint64_t v78 = qword_10171A4C0;
  type metadata accessor for Name(0);
  sub_100F359B0(&qword_101670F48, type metadata accessor for Name);
  id v18 = v17;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v16 + 16) && (unint64_t v19 = sub_10095647C((uint64_t)v79), (v20 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v16 + 56) + 32 * v19, (uint64_t)&v80);
  }
  else
  {
    long long v80 = 0u;
    long long v81 = 0u;
  }
  sub_10050BFE0((uint64_t)v79);
  if (!*((void *)&v81 + 1)) {
    goto LABEL_22;
  }
  uint64_t v76 = sub_1005057FC((uint64_t *)&unk_10167C2B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v75 = v78;
  if (qword_10166EEA0 != -1) {
    swift_once();
  }
  uint64_t v78 = qword_10171A4C8;
  id v21 = (id)qword_10171A4C8;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v16 + 16) && (unint64_t v22 = sub_10095647C((uint64_t)v79), (v23 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v16 + 56) + 32 * v22, (uint64_t)&v80);
  }
  else
  {
    long long v80 = 0u;
    long long v81 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v79);
  if (!*((void *)&v81 + 1))
  {
LABEL_22:
    swift_bridgeObjectRelease();
    sub_100522F00((uint64_t)&v80, &qword_101672BF0);
    return;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v24 = v78;
  uint64_t v25 = v77 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_onlyShowJoinLeavePlacardsAfterThisTime;
  swift_beginAccess();
  sub_100522E9C(v25, (uint64_t)v5, &qword_101672EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v5, v6);
    static Date.now.getter();
    char v26 = static Date.> infix(_:_:)();
    unint64_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v28 = v7 + 8;
    uint64_t v27 = v29;
    v29(v10, v6);
    if ((v26 & 1) == 0)
    {
      v27(v14, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    uint64_t v69 = v27;
    uint64_t v70 = v28;
    uint64_t v30 = v75;
    unint64_t v31 = swift_bridgeObjectRetain();
    Swift::Int v32 = sub_100CDEBFC(v31);
    swift_bridgeObjectRelease();
    unint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = sub_100CDEBFC(v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    Swift::Int v35 = sub_100F25E98(v34, v32);
    uint64_t v36 = sub_10102281C(v35, v34);
    uint64_t v37 = sub_10102281C(v35, v32);
    uint64_t v71 = v24;
    uint64_t v38 = (uint64_t)v37;
    swift_release();
    uint64_t v39 = sub_1006BB3E0((uint64_t)v36);
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_1006BB3E0(v38);
    swift_bridgeObjectRelease();
    if (qword_10166FAE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v41 = (void *)static OS_os_log.crlJoinLeave;
    uint64_t v72 = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    long long v74 = xmmword_10117E810;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = v76;
    uint64_t v73 = sub_100523288((unint64_t *)&qword_10167C560, (uint64_t *)&unk_10167C2B0);
    *(void *)(inited + 64) = v73;
    *(void *)(inited + 32) = v30;
    id v43 = v41;
    uint64_t v44 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v44, (uint64_t)"Notification received: oldList: %@", 34, 2, inited);
    swift_setDeallocating();
    uint64_t v75 = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v45 = (void *)static OS_os_log.crlJoinLeave;
    uint64_t v46 = swift_initStackObject();
    *(_OWORD *)(v46 + 16) = v74;
    uint64_t v47 = v76;
    uint64_t v48 = v73;
    *(void *)(v46 + 56) = v76;
    *(void *)(v46 + 64) = v48;
    *(void *)(v46 + 32) = v71;
    id v49 = v45;
    uint64_t v50 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v49, (uint64_t)&_mh_execute_header, v50, (uint64_t)"Notification received: newList: %@", 34, 2, v46);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v51 = (void *)static OS_os_log.crlJoinLeave;
    uint64_t v52 = swift_initStackObject();
    *(_OWORD *)(v52 + 16) = v74;
    *(void *)(v52 + 56) = v47;
    uint64_t v53 = v73;
    *(void *)(v52 + 64) = v73;
    *(void *)(v52 + 32) = v39;
    id v54 = v51;
    swift_retain();
    uint64_t v55 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v54, (uint64_t)&_mh_execute_header, v55, (uint64_t)"Notification received: addedCollaborators: %@", 45, 2, v52);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v56 = (void *)static OS_os_log.crlJoinLeave;
    uint64_t v57 = swift_initStackObject();
    *(_OWORD *)(v57 + 16) = v74;
    *(void *)(v57 + 56) = v76;
    *(void *)(v57 + 64) = v53;
    *(void *)(v57 + 32) = v40;
    id v58 = v56;
    swift_retain();
    uint64_t v59 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v58, (uint64_t)&_mh_execute_header, v59, (uint64_t)"Notification received: removedCollaborators: %@", 47, 2, v57);
    swift_setDeallocating();
    swift_arrayDestroy();

    id v60 = [*(id *)(v77 + 24) allObjects];
    type metadata accessor for CRLiOSBoardViewController();
    unint64_t v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v61 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v62) {
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v62) {
        goto LABEL_41;
      }
    }
    if (v62 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v63 = 0;
    do
    {
      if ((v61 & 0xC000000000000001) != 0) {
        id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v64 = *(id *)(v61 + 8 * v63 + 32);
      }
      v65 = v64;
      ++v63;
      sub_100E60A3C((unint64_t)v39);
      sub_100E612E0((unint64_t)v40);
    }
    while (v62 != v63);
LABEL_41:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v69(v14, v6);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100522F00((uint64_t)v5, &qword_101672EB0);
LABEL_37:
  if (qword_10166FAE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v66 = (id)static OS_os_log.crlJoinLeave;
  uint64_t v67 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v67, (uint64_t)"Skipping activeParticipantListChangedNotification: Still in quiet time.", 71, 2, (uint64_t)_swiftEmptyArrayStorage);
}

void sub_100F05168()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v10 - 8, v11);
  v173 = (uint64_t (*)(uint64_t))((char *)&v150 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  id v21 = (char *)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLBoardIdentifier(0) - 8;
  uint64_t v24 = __chkstk_darwin(v22, v23);
  __chkstk_darwin(v24, v25);
  if (*(unsigned char *)(v0 + 57))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2219, (uint64_t)"Duplicate call to tearDown()", 28, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2219);
    return;
  }
  v156 = v9;
  v157 = v29;
  v158 = v28;
  uint64_t v159 = v2;
  v166 = v5;
  uint64_t v167 = v18;
  uint64_t v165 = v27;
  uint64_t v160 = v1;
  v161 = *(uint64_t (**)(uint64_t))(v0
                                           + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_syncPriorityProvider);
  uint64_t v162 = v17;
  uint64_t v172 = v0;
  uint64_t v30 = *(char **)(v0 + 16);
  uint64_t v31 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  Swift::Int v32 = *(char **)&v30[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];
  uint64_t v33 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v34 = *(void *)&v32[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  Swift::Int v35 = (char *)&v150 - v26;
  swift_beginAccess();
  sub_100F38118(v34, (uint64_t)v16, type metadata accessor for CRLBoardCRDTData);
  uint64_t v36 = (uint64_t)v16;
  uint64_t v37 = v32;
  swift_retain();
  uint64_t v171 = sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  uint64_t v164 = v36;
  sub_100F38180(v36, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v38 = (uint64_t *)(*(void *)&v32[v33] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v39 = *v38;
  unint64_t v40 = v38[1];
  swift_bridgeObjectRetain();
  v163 = v21;
  sub_100753370((uint64_t)v21, v39, v40, (uint64_t)v35);

  sub_100604758((uint64_t)v35);
  v170 = v35;
  sub_100F38180((uint64_t)v35, type metadata accessor for CRLBoardIdentifier);
  v169 = v30;
  uint64_t v41 = *(void *)&v30[v31] + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  id v42 = v173;
  sub_100522E9C(v41, (uint64_t)v173, (uint64_t *)&unk_10169A1A0);
  uint64_t v43 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  if ((*(unsigned int (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v42, 1, v43) != 1)
  {
    unint64_t v40 = (unint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2225, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2225);
  }
  uint64_t v168 = v31;
  sub_100522F00((uint64_t)v42, (uint64_t *)&unk_10169A1A0);
  uint64_t v44 = v172;
  if (*(void *)(v172 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_reloadBoardTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  v161 = (uint64_t (*)(uint64_t))(v44 + 40);
  swift_beginAccess();
  unint64_t v45 = *(void *)(v44 + 40);
  if ((v45 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100F359B0(&qword_101677490, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    Set.Iterator.init(_cocoa:)();
    unint64_t v45 = v176;
    v173 = v177;
    uint64_t v46 = v178;
    unint64_t v47 = v179;
    unint64_t v48 = v180;
  }
  else
  {
    uint64_t v49 = -1 << *(unsigned char *)(v45 + 32);
    uint64_t v50 = *(void *)(v45 + 56);
    v173 = (uint64_t (*)(uint64_t))(v45 + 56);
    uint64_t v46 = ~v49;
    uint64_t v51 = -v49;
    if (v51 < 64) {
      uint64_t v52 = ~(-1 << v51);
    }
    else {
      uint64_t v52 = -1;
    }
    unint64_t v48 = v52 & v50;
    swift_bridgeObjectRetain();
    unint64_t v47 = 0;
  }
  id v155 = (id)v46;
  int64_t v53 = (unint64_t)(v46 + 64) >> 6;
  if ((v45 & 0x8000000000000000) != 0) {
    goto LABEL_16;
  }
  while (1)
  {
    if (v48)
    {
      uint64_t v54 = (v48 - 1) & v48;
      unint64_t v55 = __clz(__rbit64(v48)) | (v47 << 6);
      unint64_t v40 = v47;
      goto LABEL_33;
    }
    int64_t v57 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v57 >= v53) {
      goto LABEL_36;
    }
    unint64_t v58 = *((void *)v173 + v57);
    unint64_t v40 = v47 + 1;
    if (!v58)
    {
      unint64_t v40 = v47 + 2;
      if ((uint64_t)(v47 + 2) >= v53) {
        goto LABEL_36;
      }
      unint64_t v58 = *((void *)v173 + v40);
      if (!v58)
      {
        unint64_t v40 = v47 + 3;
        if ((uint64_t)(v47 + 3) >= v53) {
          goto LABEL_36;
        }
        unint64_t v58 = *((void *)v173 + v40);
        if (!v58)
        {
          unint64_t v40 = v47 + 4;
          if ((uint64_t)(v47 + 4) >= v53) {
            goto LABEL_36;
          }
          unint64_t v58 = *((void *)v173 + v40);
          if (!v58) {
            break;
          }
        }
      }
    }
LABEL_32:
    uint64_t v54 = (v58 - 1) & v58;
    unint64_t v55 = __clz(__rbit64(v58)) + (v40 << 6);
LABEL_33:
    uint64_t v46 = *(void *)(*(void *)(v45 + 48) + 8 * v55);
    swift_retain();
    if (!v46) {
      goto LABEL_36;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release();
      unint64_t v47 = v40;
      unint64_t v48 = v54;
      if ((v45 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_16:
      uint64_t v56 = __CocoaSet.Iterator.next()();
      if (v56)
      {
        uint64_t v174 = v56;
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v46 = v175;
        swift_unknownObjectRelease();
        unint64_t v40 = v47;
        uint64_t v54 = v48;
        if (v46) {
          continue;
        }
      }
      goto LABEL_36;
    }
  }
  unint64_t v59 = v47 + 5;
  while (v53 != v59)
  {
    unint64_t v58 = *((void *)v173 + v59++);
    if (v58)
    {
      unint64_t v40 = v59 - 1;
      goto LABEL_32;
    }
  }
LABEL_36:
  sub_10052E1EC();
  *(void *)v161 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t v46 = self;
  unint64_t v40 = (unint64_t)&selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
  unint64_t v45 = (unint64_t)[(id)v46 defaultCenter];
  if (qword_10166EE88 == -1) {
    goto LABEL_37;
  }
LABEL_52:
  swift_once();
LABEL_37:
  uint64_t v60 = v172;
  [(id)v45 removeObserver:v172 name:qword_10171A4B0 object:0];

  unint64_t v61 = v169;
  if (qword_10166FAE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v62 = (id)static OS_os_log.crlJoinLeave;
  uint64_t v63 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v62, (uint64_t)&_mh_execute_header, v63, (uint64_t)"BoardLibrary teardown CRLBoardRealTimeParticipantsDidChange observer", 68, 2, (uint64_t)_swiftEmptyArrayStorage);

  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v64 = (id)static OS_os_log.realTimeSync;
  uint64_t v65 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v64, (uint64_t)&_mh_execute_header, v65, (uint64_t)"BoardInfo teared down", 21, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v66 = *(void *)(v60 + 48);
  if (v66)
  {
    swift_unknownObjectRetain();
    id v67 = [(id)v46 *(SEL *)(v40 + 2808)];
    [v67 removeObserver:v66];

    swift_unknownObjectRelease();
  }
  uint64_t v68 = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_databaseSaveObserverForRealTimeSync;
  uint64_t v69 = *(void *)(v60 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_databaseSaveObserverForRealTimeSync);
  if (v69)
  {
    swift_unknownObjectRetain();
    id v70 = [(id)v46 *(SEL *)(v40 + 2808)];
    [v70 removeObserver:v69];
    swift_unknownObjectRelease();

    *(void *)(v60 + v68) = 0;
    swift_unknownObjectRelease();
  }
  uint64_t v71 = type metadata accessor for TaskPriority();
  uint64_t v72 = v156;
  (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v156, 1, 1, v71);
  uint64_t v73 = (void *)swift_allocObject();
  v73[2] = 0;
  v73[3] = 0;
  v73[4] = v60;
  swift_retain();
  sub_1005912D0((uint64_t)v72, (uint64_t)&unk_1016A23E8, (uint64_t)v73);
  swift_release();
  if (qword_10166FB70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  long long v74 = (void *)static OS_os_log.boardStore;
  id v155 = (id)sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v76 = *(char **)&v61[v168];
  uint64_t v77 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v78 = *(void *)&v76[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  v173 = type metadata accessor for CRLBoardCRDTData;
  uint64_t v79 = v164;
  sub_100F38118(v78, v164, type metadata accessor for CRLBoardCRDTData);
  v156 = v74;
  long long v80 = v76;
  swift_retain();
  uint64_t v81 = (uint64_t)v163;
  CRRegister.wrappedValue.getter();
  v161 = type metadata accessor for CRLBoardCRDTData;
  sub_100F38180(v79, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  v82 = (uint64_t *)(*(void *)&v76[v77] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v83 = *v82;
  unint64_t v84 = v82[1];
  swift_bridgeObjectRetain();
  uint64_t v85 = (uint64_t)v170;
  sub_100753370(v81, v83, v84, (uint64_t)v170);

  uint64_t v86 = v167;
  uint64_t v87 = v85;
  uint64_t v88 = v85;
  uint64_t v89 = v162;
  v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16);
  uint64_t v154 = v167 + 16;
  v153(v81, v88, v162);
  sub_100F38180(v87, type metadata accessor for CRLBoardIdentifier);
  uint64_t v90 = UUID.uuidString.getter();
  uint64_t v92 = v91;
  v93 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
  uint64_t v167 = v86 + 8;
  v151 = v93;
  v93(v81, v89);
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v152 = sub_100528BE4();
  *(void *)(inited + 64) = v152;
  *(void *)(inited + 32) = v90;
  *(void *)(inited + 40) = v92;
  uint64_t v94 = static os_log_type_t.info.getter();
  v95 = v156;
  sub_100BAC898((uint64_t)v156, (uint64_t)&_mh_execute_header, v94, (uint64_t)"Saving %{public}@ for tearDown", 30, 2, inited);
  swift_setDeallocating();
  uint64_t v150 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v96 = v168;
  v97 = v169;
  v98 = *(char **)&v169[v168];
  v99 = *(void **)&v98[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
  uint64_t v100 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v101 = *(void *)&v98[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v101, v79, v173);
  v173 = v99;
  v102 = v98;
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_100F38180(v79, v161);
  swift_release();
  v103 = (uint64_t *)(*(void *)&v98[v100] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v104 = *v103;
  unint64_t v105 = v103[1];
  swift_bridgeObjectRetain();
  uint64_t v106 = v165;
  sub_100753370(v81, v104, v105, v165);

  v107 = *(void **)&v97[v96];
  uint64_t v108 = (uint64_t)v170;
  sub_100F38118(v106, (uint64_t)v170, type metadata accessor for CRLBoardIdentifier);
  unint64_t v109 = (*((unsigned __int8 *)v157 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v157 + 80);
  uint64_t v110 = swift_allocObject();
  v111 = v173;
  *(void *)(v110 + 16) = v173;
  sub_100F37878(v108, v110 + v109, type metadata accessor for CRLBoardIdentifier);
  v112 = v111;
  id v113 = v107;
  sub_100D12064((uint64_t (*)(void, void))sub_100F36E7C, v110);

  swift_release();
  uint64_t v114 = v172;
  uint64_t v115 = *(void *)(v172 + 64);
  v116 = *(os_unfair_lock_s **)(v115 + 16);
  os_unfair_lock_lock(v116);
  LODWORD(v109) = *(unsigned __int8 *)(v114 + 80);
  os_unfair_lock_unlock(v116);
  if (v109 == 1)
  {
    os_unfair_lock_lock(v116);
    v161 = (uint64_t (*)(uint64_t))v115;
    uint64_t v117 = v114 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo__unsafe_lastActivityTime;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v159 + 16))(v166, v117, v160);
    os_unfair_lock_unlock(v116);
    v173 = v112;
    v118 = (void *)static OS_os_log.boardStore;
    uint64_t v119 = swift_initStackObject();
    *(_OWORD *)(v119 + 16) = xmmword_10117D8C0;
    v120 = *(char **)&v97[v96];
    uint64_t v121 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v122 = *(void *)&v120[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    v157 = type metadata accessor for CRLBoardCRDTData;
    uint64_t v123 = v164;
    sub_100F38118(v122, v164, type metadata accessor for CRLBoardCRDTData);
    id v155 = v118;
    v124 = v120;
    swift_retain();
    uint64_t v125 = (uint64_t)v163;
    CRRegister.wrappedValue.getter();
    v156 = type metadata accessor for CRLBoardCRDTData;
    sub_100F38180(v123, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    v126 = (uint64_t *)(*(void *)&v120[v121] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v127 = *v126;
    unint64_t v128 = v126[1];
    swift_bridgeObjectRetain();
    uint64_t v129 = (uint64_t)v170;
    sub_100753370(v125, v127, v128, (uint64_t)v170);

    uint64_t v130 = v162;
    v153(v125, v129, v162);
    v158 = type metadata accessor for CRLBoardIdentifier;
    sub_100F38180(v129, type metadata accessor for CRLBoardIdentifier);
    uint64_t v131 = UUID.uuidString.getter();
    uint64_t v133 = v132;
    v151(v125, v130);
    unint64_t v134 = v152;
    *(void *)(v119 + 56) = &type metadata for String;
    *(void *)(v119 + 64) = v134;
    *(void *)(v119 + 32) = v131;
    *(void *)(v119 + 40) = v133;
    uint64_t v135 = Date.description.getter();
    *(void *)(v119 + 96) = &type metadata for String;
    *(void *)(v119 + 104) = v134;
    *(void *)(v119 + 72) = v135;
    *(void *)(v119 + 80) = v136;
    uint64_t v137 = static os_log_type_t.info.getter();
    id v138 = v155;
    sub_100BAC898((uint64_t)v155, (uint64_t)&_mh_execute_header, v137, (uint64_t)"Updating activity time for %{public}@ for tearDown to %{public}@", 64, 2, v119);
    swift_setDeallocating();
    uint64_t v114 = v172;
    swift_arrayDestroy();

    v139 = (os_unfair_lock_s *)*((void *)v161 + 2);
    os_unfair_lock_lock(v139);
    *(unsigned char *)(v114 + 80) = 0;
    os_unfair_lock_unlock(v139);
    v140 = *(char **)&v169[v168];
    v141 = *(void **)&v140[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
    uint64_t v142 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v143 = *(void *)&v140[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100F38118(v143, v123, v157);
    id v144 = v141;
    v169 = v140;
    swift_retain();
    CRRegister.wrappedValue.getter();
    sub_100F38180(v123, v156);
    swift_release();
    v145 = (uint64_t *)(*(void *)&v140[v142] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v146 = *v145;
    unint64_t v147 = v145[1];
    swift_bridgeObjectRetain();
    sub_100753370(v125, v146, v147, v129);

    uint64_t v148 = (uint64_t)v166;
    sub_100C74E7C(v129, (uint64_t)v166, 0, 0);

    v149 = v158;
    sub_100F38180(v129, v158);
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v148, v160);
    sub_100F38180(v165, v149);
  }
  else
  {
    sub_100F38180(v106, type metadata accessor for CRLBoardIdentifier);
  }
  *(unsigned char *)(v114 + 57) = 1;
}

uint64_t sub_100F064B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100F064D0, 0, 0);
}

uint64_t sub_100F064D0()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(*(void *)(v0[2] + 16)
                                         + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                             + OBJC_IVAR____TtC8Freeform8CRLBoard_store)
                 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_assetUploadTracker);
  v0[3] = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  v0[4] = v2;
  swift_retain();
  return _swift_task_switch(sub_100F0657C, v2, 0);
}

uint64_t sub_100F0657C()
{
  [*(id *)(v0[4] + 112) removeObject:v0[2]];
  swift_release();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100F065F4()
{
  if ((*(unsigned char *)(v0 + 57) & 1) == 0 && *(unsigned char *)(v0 + 56) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2272, (uint64_t)"Board info deallocated without calling tearDown()!", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2272);
  }

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo__unsafe_lastActivityTime;
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  sub_100741AB8(*(void *)(v0 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession));
  sub_100522F00(v0 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_onlyShowJoinLeavePlacardsAfterThisTime, &qword_101672EB0);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100F067BC()
{
  sub_100F065F4();

  return swift_deallocClassInstance();
}

uint64_t sub_100F06814()
{
  return type metadata accessor for CRLBoardLibrary.BoardInfo();
}

uint64_t type metadata accessor for CRLBoardLibrary.BoardInfo()
{
  uint64_t result = qword_1016A1E50;
  if (!qword_1016A1E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100F06868@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self standardUserDefaults];
  id v3 = [v2 objectForKey:@"CRLCloudQuotaExceededAlertLastShownDate"];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_10051B3EC((uint64_t)v8, (uint64_t)v9, &qword_101672BF0);
  if (v10)
  {
    uint64_t v4 = type metadata accessor for Date();
    int v5 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, v5 ^ 1u, 1, v4);
  }
  else
  {
    sub_100522F00((uint64_t)v9, &qword_101672BF0);
    uint64_t v7 = type metadata accessor for Date();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 1, v7);
  }
}

uint64_t sub_100F069D0()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  uint64_t v16 = *(char **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v18, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v19 = v16;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v20 = (uint64_t *)(*(void *)&v16[v17] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v8, v21, v22, (uint64_t)v12);

  uint64_t v36 = UUID.uuidString.getter();
  uint64_t v37 = v23;
  swift_bridgeObjectRetain();
  v24._countAndFlagsBits = 58;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  uint64_t v25 = v36;
  uint64_t v26 = v37;
  uint64_t v27 = (uint64_t *)&v12[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  uint64_t v28 = *v27;
  unint64_t v29 = (void *)v27[1];
  uint64_t v36 = v25;
  uint64_t v37 = v26;
  swift_bridgeObjectRetain();
  v30._countAndFlagsBits = v28;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  uint64_t v31 = v36;
  Swift::Int v32 = v37;
  sub_100F38180((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
  uint64_t v36 = v13;
  uint64_t v37 = v15;
  swift_bridgeObjectRetain();
  v33._countAndFlagsBits = v31;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_100F06C9C()
{
  return sub_100F075CC(&OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_promptCloudQuotaExceededTask, (uint64_t)&unk_101533340, (uint64_t)&unk_1016A23D8);
}

uint64_t sub_100F06CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a5;
  v5[24] = type metadata accessor for MainActor();
  v5[25] = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[26] = v6;
  void *v6 = v5;
  v6[1] = sub_100F06D74;
  return sub_100F07094();
}

uint64_t sub_100F06D74()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100F06ED0;
  }
  else {
    uint64_t v4 = sub_100F3899C;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100F06ED0()
{
  swift_release();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Failed to prompt cloud quota exceeded for board with UUID %@, error %@", 70, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_100F07094()
{
  v1[2] = v0;
  sub_1005057FC(&qword_101672EB0);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Date();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F071D8, v4, v3);
}

void sub_100F071D8()
{
  swift_release();
  uint64_t v1 = self;
  id v2 = [v1 standardUserDefaults];
  sub_100F069D0();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v4 = [v2 BOOLForKey:v3];

  if ((v4 & 1) == 0)
  {
    uint64_t v5 = v0[5];
    uint64_t v6 = v0[6];
    uint64_t v7 = v0[4];
    sub_100F06868(v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
    {
      sub_100522F00(v0[4], &qword_101672EB0);
      goto LABEL_5;
    }
    uint64_t v8 = v0[7];
    uint64_t v9 = v0[8];
    uint64_t v10 = v0[5];
    uint64_t v11 = v0[6];
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 32))(v9, v0[4], v10);
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v13 = v12;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v14(v8, v10);
    v14(v9, v10);
    if (v13 >= 900.0)
    {
LABEL_5:
      uint64_t v15 = v0[5];
      uint64_t v16 = v0[6];
      uint64_t v17 = v0[2];
      uint64_t v18 = v0[3];
      Date.init()();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v15);
      sub_100F36180(v18);
      id v19 = [v1 standardUserDefaults];
      sub_100F069D0();
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v19 setBool:1 forKey:v20];

      id v21 = [*(id *)(v17 + 24) allObjects];
      type metadata accessor for CRLiOSBoardViewController();
      unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v23) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v23)
        {
LABEL_7:
          if (v23 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v23; ++i)
          {
            if ((v22 & 0xC000000000000001) != 0) {
              id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v25 = *(id *)(v22 + 8 * i + 32);
            }
            uint64_t v26 = v25;
            sub_100E50C64();
          }
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (void (*)(void))v0[1];
  v27();
}

uint64_t sub_100F074FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a6;
  return _swift_task_switch(sub_100F0751C, a6, 0);
}

uint64_t sub_100F0751C()
{
  uint64_t v1 = *(void *)(v0 + 16) + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache;
  *(unsigned char *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  sub_100E97A3C();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100F075A4()
{
  return sub_100F075CC(&OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_reloadBoardTask, (uint64_t)&unk_101533318, (uint64_t)&unk_1016A23C8);
}

uint64_t sub_100F075CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v43 = a3;
  uint64_t v41 = a2;
  uint64_t v39 = a1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  id v42 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v40 + 64);
  uint64_t v19 = __chkstk_darwin(v16 - 8, v18);
  NSString v20 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v39 - v22;
  Swift::String v24 = *(char **)(*(void *)(v4 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v25 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v26 = *(void *)&v24[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v26, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  uint64_t v27 = v24;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v28 = (uint64_t *)(*(void *)&v24[v25] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v29 = *v28;
  unint64_t v30 = v28[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v15, v29, v30, (uint64_t)v23);

  uint64_t v31 = *v39;
  if (*(void *)(v4 + *v39))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  uint64_t v32 = type metadata accessor for TaskPriority();
  uint64_t v33 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v42, 1, 1, v32);
  sub_100F38118((uint64_t)v23, (uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v34 = static MainActor.shared.getter();
  unint64_t v35 = (*(unsigned __int8 *)(v40 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v36 = (void *)swift_allocObject();
  v36[2] = v34;
  v36[3] = &protocol witness table for MainActor;
  v36[4] = v4;
  sub_100F37878((uint64_t)v20, (uint64_t)v36 + v35, type metadata accessor for CRLBoardIdentifier);
  uint64_t v37 = sub_1005912D0(v33, v43, (uint64_t)v36);
  sub_100F38180((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v4 + v31) = v37;
  return swift_release();
}

uint64_t sub_100F079B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a5;
  v5[24] = type metadata accessor for MainActor();
  v5[25] = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[26] = v6;
  void *v6 = v5;
  v6[1] = sub_100F07A68;
  return sub_100F07DE8();
}

uint64_t sub_100F07A68()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100F07C24;
  }
  else {
    uint64_t v4 = sub_100F07BC4;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100F07BC4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F07C24()
{
  swift_release();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Failed to reload a board with UUID %@, error %@", 47, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_100F07DE8()
{
  v1[29] = v0;
  type metadata accessor for CRLBoardCRDTData(0);
  v1[30] = swift_task_alloc();
  type metadata accessor for UUID();
  v1[31] = swift_task_alloc();
  v1[32] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[36] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[37] = v3;
  v1[38] = v2;
  return _swift_task_switch(sub_100F07F4C, v3, v2);
}

uint64_t sub_100F07F4C(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3[29] + 16);
  v3[39] = v4;
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator);
  if (!v5)
  {
    __break(1u);
    return _swift_task_switch(a1, a2, a3);
  }
  uint64_t v6 = *(void *)(v5 + 48);
  if (*(unsigned char *)(v5 + 40))
  {
    if (v6 <= 0)
    {
LABEL_11:
      uint64_t v9 = *(char **)(v4 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      v3[40] = v9;
      uint64_t v10 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
      if (*(double *)&v9[OBJC_IVAR____TtC8Freeform8CRLBoard_lastSaveChangesTime] > *(double *)(*(void *)&v9[OBJC_IVAR____TtC8Freeform8CRLBoard_store]
                                                                                              + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_lastFetchResultsTime))
      {
        swift_release();
        goto LABEL_8;
      }
      uint64_t v11 = v3[35];
      uint64_t v12 = v3[31];
      uint64_t v13 = v3[32];
      uint64_t v14 = v3[30];
      uint64_t v15 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      v3[41] = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v16 = *(void *)&v9[v15] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100F38118(v16, v14, type metadata accessor for CRLBoardCRDTData);
      uint64_t v17 = v9;
      swift_retain();
      v3[42] = sub_1005057FC(&qword_101674550);
      CRRegister.wrappedValue.getter();
      sub_100F38180(v14, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      uint64_t v18 = (uint64_t *)(*(void *)&v9[v15] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v19 = *v18;
      unint64_t v20 = v18[1];
      swift_bridgeObjectRetain();
      sub_100753370(v12, v19, v20, v11);
      sub_1005057FC(&qword_10167ADD0);
      unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v22 = swift_allocObject();
      v3[43] = v22;
      *(_OWORD *)(v22 + 16) = xmmword_10117E810;
      sub_100F37878(v11, v22 + v21, type metadata accessor for CRLBoardIdentifier);
      uint64_t v23 = *(void **)&v9[v10];
      v3[44] = v23;
      id v24 = v23;
      a1 = sub_100F0825C;
      a2 = 0;
      a3 = 0;
      return _swift_task_switch(a1, a2, a3);
    }
  }
  else if (v6 <= 0)
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(v5 + 72) + 16)) {
      goto LABEL_11;
    }
  }
  swift_release();
  *(unsigned char *)(v3[29] + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) = 1;
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v7 = (uint64_t (*)(void))v3[1];
  return v7();
}

uint64_t sub_100F0825C()
{
  uint64_t v2 = v0[43];
  uint64_t v1 = v0[44];
  uint64_t v3 = swift_task_alloc();
  v0[45] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = 1;
  *(unsigned char *)(v3 + 40) = 1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[46] = v4;
  uint64_t v5 = type metadata accessor for CRLBoardDatabaseFetchResult();
  *uint64_t v4 = v0;
  v4[1] = sub_100F08368;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 28, 0, 0, 0x3A5F286863746566, 0xE900000000000029, sub_1006DA81C, v3, v5);
}

uint64_t sub_100F08368()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100F08B3C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100F08484;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100F08484()
{
  uint64_t v1 = (void *)v0[44];
  swift_bridgeObjectRelease();

  v0[48] = v0[28];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[38];
  return _swift_task_switch(sub_100F084F4, v2, v3);
}

uint64_t sub_100F084F4()
{
  receiver = v0[24].receiver;
  Class super_class = v0[20].super_class;
  id v3 = v0[20].receiver;
  uint64_t v4 = (uint64_t)v0[17].receiver;
  uint64_t v6 = (uint64_t)v0[15].receiver;
  uint64_t v5 = (uint64_t)v0[15].super_class;
  uint64_t v7 = *(void *)((char *)super_class + (void)v3) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v7, v6, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_100F38180(v6, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v8 = (uint64_t *)(*(void *)((char *)super_class + (void)v3) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  swift_bridgeObjectRetain();
  sub_100753370(v5, v9, v10, v4);
  swift_beginAccess();
  if (*(void *)(receiver[3] + 16))
  {
    uint64_t v11 = (uint64_t)v0[17].receiver;
    swift_bridgeObjectRetain();
    sub_1009563EC(v11);
    uint64_t v12 = v0[24].receiver;
    uint64_t v13 = (uint64_t)v0[17].receiver;
    if (v14)
    {
      Class v15 = v0[20].super_class;
      id v16 = v0[20].receiver;
      uint64_t v54 = (uint64_t)v0[16].super_class;
      uint64_t v18 = (uint64_t)v0[15].receiver;
      uint64_t v17 = (uint64_t)v0[15].super_class;
      swift_retain();
      swift_bridgeObjectRelease();
      sub_100F38180(v13, type metadata accessor for CRLBoardIdentifier);
      swift_release();
      uint64_t v19 = *(void *)((char *)v15 + (void)v16) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100F38118(v19, v18, type metadata accessor for CRLBoardCRDTData);
      swift_retain();
      CRRegister.wrappedValue.getter();
      sub_100F38180(v18, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      unint64_t v20 = (uint64_t *)(*(void *)((char *)v15 + (void)v16) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v21 = *v20;
      unint64_t v22 = v20[1];
      swift_bridgeObjectRetain();
      sub_100753370(v17, v21, v22, v54);
      swift_beginAccess();
      if (*(void *)(v12[4] + 16))
      {
        uint64_t v23 = (uint64_t)v0[16].super_class;
        swift_bridgeObjectRetain();
        sub_1009563EC(v23);
        if (v24)
        {
          id v25 = v0[24].receiver;
          Class v26 = v0[19].super_class;
          uint64_t v27 = (uint64_t)v0[16].super_class;
          swift_retain();
          swift_bridgeObjectRelease();
          sub_100F38180(v27, type metadata accessor for CRLBoardIdentifier);
          swift_release();
          uint64_t v28 = (objc_class *)type metadata accessor for CRLCommandMergeDatabaseChanges();
          uint64_t v29 = (char *)objc_allocWithZone(v28);
          *(void *)&v29[OBJC_IVAR____TtC8Freeform30CRLCommandMergeDatabaseChanges_fetchResult] = v25;
          v0[13].receiver = v29;
          v0[13].Class super_class = v28;
          swift_retain();
          unint64_t v30 = (objc_class *)[v0 init];
          v0[24].Class super_class = v30;
          uint64_t v31 = *(char **)((char *)v26 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
          uint64_t v32 = (double **)&v31[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
          swift_beginAccess();
          uint64_t v33 = *v32;
          uint64_t v34 = v31;
          int64_t v53 = v30;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          void *v32 = v33;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v33 = sub_100F62618(0, *((void *)v33 + 2) + 1, 1, v33);
            void *v32 = v33;
          }
          unint64_t v37 = *((void *)v33 + 2);
          unint64_t v36 = *((void *)v33 + 3);
          unint64_t v38 = v37 + 1;
          if (v37 >= v36 >> 1)
          {
            uint64_t v52 = sub_100F62618((double *)(v36 > 1), v37 + 1, 1, v33);
            unint64_t v38 = v37 + 1;
            uint64_t v33 = v52;
            void *v32 = v52;
          }
          Class v39 = v0[20].super_class;
          id v40 = v0[20].receiver;
          uint64_t v55 = (uint64_t)v0[17].super_class;
          uint64_t v42 = (uint64_t)v0[15].receiver;
          uint64_t v41 = (uint64_t)v0[15].super_class;
          *((void *)v33 + 2) = v38;
          uint64_t v43 = &v33[2 * v37];
          *((void *)v43 + 4) = v53;
          *((unsigned char *)v43 + 40) = 2;
          swift_endAccess();
          sub_10078F194();

          uint64_t v44 = *(void *)((char *)v39 + (void)v40) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
          swift_beginAccess();
          sub_100F38118(v44, v42, type metadata accessor for CRLBoardCRDTData);
          swift_retain();
          CRRegister.wrappedValue.getter();
          sub_100F38180(v42, type metadata accessor for CRLBoardCRDTData);
          swift_release();
          unint64_t v45 = (uint64_t *)(*(void *)((char *)v39 + (void)v40) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
          uint64_t v47 = *v45;
          unint64_t v46 = v45[1];
          swift_bridgeObjectRetain();
          sub_100753370(v41, v47, v46, v55);
          unint64_t v48 = (void *)swift_task_alloc();
          v0[25].receiver = v48;
          *unint64_t v48 = v0;
          v48[1] = sub_100F08C68;
          return sub_10081B048();
        }
        swift_bridgeObjectRelease();
      }
      id v50 = v0[20].receiver;
      uint64_t v13 = (uint64_t)v0[16].super_class;
    }
    else
    {
      id v50 = v0[20].receiver;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v50 = v0[20].receiver;
    uint64_t v13 = (uint64_t)v0[17].receiver;
  }
  sub_100F38180(v13, type metadata accessor for CRLBoardIdentifier);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v51 = (uint64_t (*)(void))v0->super_class;
  return v51();
}

uint64_t sub_100F08B3C()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  return _swift_task_switch(sub_100F08BA0, v1, v2);
}

uint64_t sub_100F08BA0()
{
  uint64_t v1 = *(void **)(v0 + 320);

  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100F08C68()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 280);
  swift_task_dealloc();
  sub_100F38180(v2, type metadata accessor for CRLBoardIdentifier);
  uint64_t v3 = *(void *)(v1 + 304);
  uint64_t v4 = *(void *)(v1 + 296);
  return _swift_task_switch(sub_100F08DC0, v4, v3);
}

uint64_t sub_100F08DC0()
{
  uint64_t v1 = (void *)v0[49];
  uint64_t v2 = (void *)v0[40];
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100F08E74(uint64_t a1)
{
  v2[75] = v1;
  v2[74] = a1;
  type metadata accessor for CRLBoardCRDTData(0);
  v2[76] = swift_task_alloc();
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[77] = v3;
  v2[78] = *(void *)(v3 + 64);
  v2[79] = swift_task_alloc();
  v2[80] = swift_task_alloc();
  v2[81] = type metadata accessor for CRLCollaboratorCursorColor();
  v2[82] = swift_task_alloc();
  v2[83] = type metadata accessor for CRLRealTimeEnter(0);
  v2[84] = swift_task_alloc();
  v2[85] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[86] = v4;
  v2[87] = *(void *)(v4 - 8);
  v2[88] = swift_task_alloc();
  v2[89] = swift_task_alloc();
  v2[90] = swift_task_alloc();
  v2[91] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v2[92] = v5;
  v2[93] = *(void *)(v5 - 8);
  v2[94] = swift_task_alloc();
  v2[95] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10169A1A0);
  v2[96] = swift_task_alloc();
  v2[97] = swift_task_alloc();
  v2[98] = swift_task_alloc();
  v2[99] = swift_task_alloc();
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[100] = swift_task_alloc();
  v2[101] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[102] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[103] = v7;
  v2[104] = v6;
  return _swift_task_switch(sub_100F091A4, v7, v6);
}

uint64_t sub_100F091A4()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession;
  v0[105] = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession;
  uint64_t v3 = (uint64_t *)(v1 + v2);
  uint64_t v4 = swift_beginAccess();
  uint64_t v5 = *v3;
  if (*v3)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enterRealTimeSync(groupSession:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2437, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enterRealTimeSync(groupSession:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2437);
    uint64_t v4 = sub_100741AB8(v5);
  }
  uint64_t v6 = v0[74];
  uint64_t v7 = *(void (**)(uint64_t))(*(void *)v6 + 192);
  uint64_t v8 = *(void *)v6 + 192;
  v0[106] = v7;
  v0[107] = v8 & 0xFFFFFFFFFFFFLL | 0xEE51000000000000;
  v7(v4);
  if (*(unsigned char *)(*sub_10050F848(v0 + 26, v0[29]) + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_isMeToMe)) {
    goto LABEL_7;
  }
  uint64_t v9 = *(void **)(*(void *)(*(void *)(*(void *)(v0[75] + 16)
                                        + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                            + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                + 16);
  if (v9)
  {
    id v10 = [v9 owner];
    id v11 = [v10 userIdentity];

    id v12 = [v11 userRecordID];
    if (v12)
    {

LABEL_7:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 26));
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v13 = (void *)static OS_os_log.realTimeSync;
      v0[108] = sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v15 = v13;
      ((void (*)(id, uint64_t, uint64_t))v7)(v15, v16, v17);
      int v18 = *(unsigned __int8 *)(*sub_10050F848(v0 + 31, v0[34])
                               + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_isMeToMe);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 31));
      unint64_t v19 = sub_100528BE4();
      uint64_t v20 = 28494;
      if (v18) {
        uint64_t v20 = 7562585;
      }
      unint64_t v21 = 0xE200000000000000;
      if (v18) {
        unint64_t v21 = 0xE300000000000000;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = v19;
      *(void *)(inited + 32) = v20;
      *(void *)(inited + 40) = v21;
      uint64_t v22 = static os_log_type_t.debug.getter();
      sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v22, (uint64_t)"enterRealTimeSync() is MeToME: %@", 33, 2, inited);
      swift_setDeallocating();
      v0[109] = sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      id v23 = [self sharedApplication];
      id v24 = [v23 delegate];

      if (v24)
      {
        type metadata accessor for CRLiOSAppDelegate();
        v0[110] = *(void *)(swift_dynamicCastClassUnconditional()
                            + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
        swift_retain();
        swift_unknownObjectRelease();
        id v25 = sub_100F09764;
        uint64_t v26 = 0;
        uint64_t v27 = 0;
      }
      else
      {
        __break(1u);
      }
      return _swift_task_switch(v25, v26, v27);
    }
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 26));
  swift_release();
  sub_1006DAC0C();
  swift_allocError();
  *uint64_t v28 = 6;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t sub_100F09764()
{
  if (*(void *)(v0[110] + 40))
  {
    swift_release();
    v0[113] = 0;
    uint64_t v1 = v0[104];
    uint64_t v2 = v0[103];
    return _swift_task_switch(sub_100F09BC4, v2, v1);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[111] = v3;
    uint64_t v4 = sub_10050BF48(0, &qword_10167BED0);
    *uint64_t v3 = v0;
    v3[1] = sub_100F098A0;
    uint64_t v5 = v0[110];
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 73, 0, 0, 0xD00000000000001DLL, 0x80000001012970D0, sub_100F36A70, v5, v4);
  }
}

uint64_t sub_100F098A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 896) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100F09A2C;
  }
  else
  {

    uint64_t v3 = sub_100F099BC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100F099BC()
{
  swift_release();
  v0[113] = v0[112];
  uint64_t v1 = v0[104];
  uint64_t v2 = v0[103];
  return _swift_task_switch(sub_100F09BC4, v2, v1);
}

uint64_t sub_100F09A2C()
{
  return _swift_task_switch(sub_100F09A48, *(void *)(v0 + 824), *(void *)(v0 + 832));
}

uint64_t sub_100F09A48()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F09BC4()
{
  uint64_t v1 = (void (*)(void))v0[106];
  uint64_t v2 = v0[101];
  uint64_t v3 = v0[100];
  uint64_t v138 = v0[75];
  v1();
  sub_10050F848(v0 + 36, v0[39]);
  sub_100B18D74(v2);
  uint64_t v134 = type metadata accessor for CRLBoardIdentifierStorage(0);
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(v134 + 20));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  swift_bridgeObjectRetain();
  sub_100F38180(v2, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 36));
  sub_100C37890(v5, v6, 0, 0xE000000000000000, (uint64_t)&_mh_execute_header, (uint64_t)"enterRealTimeSync(groupSession:)", 32, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2u, 2466);
  uint64_t v7 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v1)(v7);
  sub_10050F848(v0 + 41, v0[44]);
  sub_100B18D74(v3);
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 41));
  uint64_t v9 = *(char **)(v138 + 16);
  v0[114] = v9;
  uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator];
  if (!v10)
  {
    __break(1u);
    return result;
  }
  uint64_t v11 = v0[101];
  uint64_t v128 = v0[99];
  uint64_t v139 = v0[93];
  uint64_t v130 = v0[92];
  uint64_t v12 = v0[74];
  uint64_t v13 = (uint64_t *)(v0[75] + v0[105]);
  uint64_t v14 = sub_100F38118(v0[100], v11, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  char v15 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 208))(v14);
  type metadata accessor for CRLBoardRealTimeChangeCoordinator(0);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v9;
  swift_retain();
  uint64_t v18 = sub_100F2A978((uint64_t)v17, v10, v11, v15 & 1, v16);
  v0[115] = v18;

  swift_release();
  id v19 = [self standardUserDefaults];
  char v20 = [v19 BOOLForKey:@"CRLEncryptSharePlayData"];

  type metadata accessor for CRLBoardRealTimeSyncDataSource();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_100F2B0BC(v22, v20, v21);
  v0[116] = v23;
  swift_release();
  uint64_t v24 = *v13;
  *uint64_t v13 = v12;
  v13[1] = v23;
  v13[2] = v18;
  v13[3] = (uint64_t)&_swiftEmptySetSingleton;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100741AB8(v24);
  uint64_t v126 = v23;
  v17[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_realTimeSessionUsesEncryption] = *(unsigned char *)(v23 + 144);
  uint64_t v25 = v12 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID;
  uint64_t v26 = (uint64_t *)(v18
                  + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_globallyScopedBoardIdentifier
                  + *(int *)(v134 + 20));
  uint64_t v27 = *v26;
  unint64_t v28 = v26[1];
  swift_bridgeObjectRetain();
  sub_100D03E8C(v27, v28, v25);
  uint64_t v29 = v17;
  swift_bridgeObjectRelease();
  uint64_t v30 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  v0[117] = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v31 = *(void *)&v17[v30] + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  sub_100522E9C(v31, v128, (uint64_t *)&unk_10169A1A0);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
  int v33 = v32(v128, 1, v130);
  uint64_t v34 = v0[99];
  if (v33)
  {
    sub_100522F00(v0[99], (uint64_t *)&unk_10169A1A0);
  }
  else
  {
    uint64_t v135 = v17;
    uint64_t v35 = v0[95];
    uint64_t v36 = v0[92];
    sub_100F38118(v34, v35, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_100522F00(v34, (uint64_t *)&unk_10169A1A0);
    uint64_t v37 = *(void *)(v35 + *(int *)(v36 + 24));
    swift_retain();
    sub_100F38180(v35, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    id v38 = [self defaultCenter];
    if (qword_10166EE88 != -1) {
      swift_once();
    }
    [v38 addObserver:v0[75] selector:"activeParticipantListChangedNotification:" name:qword_10171A4B0 object:v37];

    if (qword_10166FAE8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v39 = (id)static OS_os_log.crlJoinLeave;
    uint64_t v40 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v40, (uint64_t)"CRLBoardLibrary now observing CRLBoardRealTimeParticipantsDidChange notifications", 81, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_release();

    uint64_t v29 = v135;
  }
  uint64_t v41 = *(void *)&v29[v30];
  uint64_t v42 = *(void **)(*(void *)(v41 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16);
  if (!v42) {
    goto LABEL_16;
  }
  id v43 = v42;
  id v44 = [v43 currentUserParticipant];
  if (!v44)
  {

    goto LABEL_16;
  }
  uint64_t v136 = v44;
  uint64_t v45 = v0[97];
  uint64_t v46 = v0[92];
  uint64_t v47 = v41 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  sub_100522E9C(v47, v45, (uint64_t *)&unk_10169A1A0);
  if (v32(v45, 1, v46) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enterRealTimeSync(groupSession:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2491, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v119) = 2;
    uint64_t v117 = "invalid nil found when unwrapping value";
    uint64_t v118 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enterRealTimeSync(groupSession:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2491);
  }
  uint64_t v48 = v0[98];
  uint64_t v49 = v0[92];
  sub_10051B3EC(v0[97], v48, (uint64_t *)&unk_10169A1A0);
  if (v32(v48, 1, v49) == 1)
  {
    uint64_t v50 = v0[98];

    sub_100522F00(v50, (uint64_t *)&unk_10169A1A0);
LABEL_16:
    uint64_t v51 = *(void **)&v29[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers];
    if ((objc_msgSend(v51, "containsObject:", v0[75], v117, v118, v119) & 1) == 0) {
      [v51 addObject:v0[75]];
    }
    uint64_t v52 = v0[88];
    uint64_t v53 = v0[80];
    uint64_t v54 = v0[76];
    uint64_t v55 = *(char **)&v29[v30];
    uint64_t v56 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v57 = *(void *)&v55[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100F38118(v57, v54, type metadata accessor for CRLBoardCRDTData);
    unint64_t v58 = v55;
    swift_retain();
    v0[118] = sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100F38180(v54, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    unint64_t v59 = (uint64_t *)(*(void *)&v55[v56] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v61 = *v59;
    unint64_t v60 = v59[1];
    swift_bridgeObjectRetain();
    sub_100753370(v52, v61, v60, v53);

    Class v62 = sub_100D3EC2C(v53);
    sub_100F38180(v53, type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for CRLRealTimeDataEncryptor();
    uint64_t v63 = (void *)swift_allocObject();
    v0[119] = v63;
    v63[4] = 0;
    if (qword_10166EE68 != -1) {
      swift_once();
    }
    uint64_t v64 = v0[74];
    uint64_t v65 = (void *)qword_10171A488;
    v63[2] = v62;
    v63[3] = v65;
    uint64_t v137 = (uint64_t (*)(uint64_t, _UNKNOWN **, void *))(*(void *)(*(void *)v64 + 240)
                                                                  + **(int **)(*(void *)v64 + 240));
    swift_retain();
    id v66 = v65;
    id v67 = (void *)swift_task_alloc();
    v0[120] = v67;
    *id v67 = v0;
    v67[1] = sub_100F0AE50;
    return v137(v126, &off_101530FE0, v63);
  }
  uint64_t v68 = v0[113];
  uint64_t v69 = v0[91];
  sub_100F37878(v0[98], v0[94], type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_10081CB88(v69);
  if (v68)
  {
    uint64_t v70 = v0[100];
    uint64_t v71 = v0[94];
    swift_release();
    swift_release();

    swift_release();
  }
  else
  {
    uint64_t v72 = v0[96];
    uint64_t v73 = v0[92];
    uint64_t v74 = *(void *)&v29[v30] + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess();
    sub_100522E9C(v74, v72, (uint64_t *)&unk_10169A1A0);
    int v75 = v32(v72, 1, v73);
    uint64_t v131 = v0[91];
    if (v75)
    {
      uint64_t v70 = v0[100];
      uint64_t v71 = v0[94];
      uint64_t v76 = v0[87];
      uint64_t v77 = v0[86];
      sub_100522F00(v0[96], (uint64_t *)&unk_10169A1A0);
      sub_10057AC18();
      swift_allocError();
      *uint64_t v78 = 1;
      swift_willThrow();
      swift_release();
      swift_release();

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v131, v77);
    }
    else
    {
      uint64_t v80 = v0[96];
      uint64_t v81 = v0[95];
      v82 = (uint64_t *)v0[94];
      uint64_t v83 = v0[92];
      uint64_t v84 = v0[87];
      uint64_t v121 = v0[86];
      uint64_t v124 = v0[90];
      sub_100F38118(v80, v81, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_100522F00(v80, (uint64_t *)&unk_10169A1A0);
      swift_retain();
      sub_100F38180(v81, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      uint64_t v129 = (char *)sub_100704BC0(v136, v131, (uint64_t)v82 + *(int *)(v83 + 28), 1, 1);
      swift_release();
      uint64_t v127 = *v82;
      swift_retain();
      id v85 = [v136 userIdentity];
      uint64_t v86 = v121;
      uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16);
      v122(v124, v131, v86);
      Date.timeIntervalSince1970.getter();
      if (v85)
      {
        uint64_t v88 = v87;
        uint64_t v132 = v43;
        uint64_t v89 = v0[90];
        uint64_t v90 = v0[87];
        uint64_t v91 = v0[86];
        uint64_t v92 = v0[85];
        v93 = (char *)v0[84];
        uint64_t v94 = (int *)v0[83];
        *(void *)v93 = v85;
        v95 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 32);
        v95(&v93[v94[5]], v89, v91);
        *(void *)&v93[v94[6]] = v88;
        v93[v94[7]] = 1;
        sub_100F37878((uint64_t)v93, v92, type metadata accessor for CRLRealTimeEnter);
        uint64_t v96 = sub_1008A93A8();
        unint64_t v103 = v97;
        v120 = v95;
        uint64_t v104 = v0[91];
        uint64_t v105 = v0[89];
        uint64_t v106 = v0[86];
        uint64_t v107 = v96;
        sub_100510D4C(v96, v97);
        sub_100F28FE0(2, v107, v103, v127);
        v122(v105, v104, v106);
        unint64_t v108 = *(void *)&v129[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_collaboratorColorIndex];
        if ((v108 & 0x8000000000000000) != 0 || HIDWORD(v108)) {
          return _assertionFailure(_:_:file:line:flags:)();
        }
        unint64_t v109 = (char *)v0[82];
        uint64_t v110 = v0[81];
        v120(v109, v0[89], v0[86]);
        *(_DWORD *)&v109[*(int *)(v110 + 20)] = v108;
        uint64_t v111 = sub_100AF6674();
        unint64_t v113 = v112;
        uint64_t v140 = v0[94];
        uint64_t v114 = v0[87];
        uint64_t v123 = v0[86];
        uint64_t v125 = v0[91];
        uint64_t v115 = v0[85];
        uint64_t v116 = v0[82];
        sub_100510D4C(v111, v112);
        sub_100510D4C(v111, v113);
        sub_100F28FE0(4, v111, v113, v127);
        swift_release();

        sub_100510084(v111, v113);
        sub_100510084(v111, v113);
        sub_100510084(v107, v103);
        sub_100510084(v107, v103);
        sub_100F38180(v116, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursorColor);
        sub_100F38180(v115, type metadata accessor for CRLRealTimeEnter);
        (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v125, v123);
        sub_100F38180(v140, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        sub_100510084(v111, v113);
        goto LABEL_16;
      }
      uint64_t v70 = v0[100];
      uint64_t v71 = v0[94];
      uint64_t v133 = v0[91];
      uint64_t v98 = v0[90];
      uint64_t v99 = v0[87];
      uint64_t v100 = v0[86];
      sub_1005F7CE8();
      swift_allocError();
      *uint64_t v101 = 0;
      swift_willThrow();
      v102 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
      v102(v98, v100);
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      v102(v133, v100);
    }
  }
  sub_100F38180(v71, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_100F38180(v70, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v79 = (uint64_t (*)(void))v0[1];
  return v79();
}

uint64_t sub_100F0AE50()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 832);
  uint64_t v3 = *(void *)(v1 + 824);
  return _swift_task_switch(sub_100F0AF94, v3, v2);
}

uint64_t sub_100F0AF94()
{
  uint64_t v1 = v0[117];
  uint64_t v2 = v0[114];
  uint64_t v3 = v0[88];
  uint64_t v4 = v0[80];
  uint64_t v5 = v0[76];
  swift_release();
  uint64_t v6 = *(char **)(v2 + v1);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v8 = *(void *)&v6[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v8, v5, type metadata accessor for CRLBoardCRDTData);
  uint64_t v9 = v6;
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_100F38180(v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v10 = (uint64_t *)(*(void *)&v6[v7] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  swift_bridgeObjectRetain();
  sub_100753370(v3, v11, v12, v4);

  id v44 = [self defaultCenter];
  if (qword_10166FE08 != -1) {
    swift_once();
  }
  uint64_t v42 = v0[117];
  uint64_t v43 = v0[114];
  uint64_t v48 = v0[100];
  uint64_t v13 = v0[88];
  uint64_t v45 = v0[87];
  uint64_t v46 = v0[86];
  uint64_t v14 = v0[80];
  uint64_t v47 = v14;
  char v15 = *(void **)(*(void *)(v43 + v42) + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  uint64_t v41 = qword_10171C300;
  uint64_t v16 = v0[79];
  uint64_t v17 = v0[77];
  uint64_t v49 = v0[76];
  uint64_t v18 = v0[75];
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  sub_100F38118(v14, v16, type metadata accessor for CRLBoardIdentifier);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  sub_100F37878(v16, v21 + v20, type metadata accessor for CRLBoardIdentifier);
  v0[24] = sub_100F36A58;
  v0[25] = v21;
  v0[20] = _NSConcreteStackBlock;
  v0[21] = *(void *)"";
  v0[22] = sub_1005E5680;
  v0[23] = &unk_1015332B8;
  uint64_t v22 = _Block_copy(v0 + 20);
  id v23 = v15;
  swift_release();
  id v24 = [v44 addObserverForName:v41 object:v23 queue:0 usingBlock:v22];
  _Block_release(v22);

  *(void *)(v18 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_databaseSaveObserverForRealTimeSync) = v24;
  swift_unknownObjectRelease();
  uint64_t v25 = (void *)static OS_os_log.realTimeSync;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v27 = *(char **)(v43 + v42);
  uint64_t v28 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v29 = *(void *)&v27[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v29, v49, type metadata accessor for CRLBoardCRDTData);
  id v30 = v25;
  uint64_t v31 = v27;
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_100F38180(v49, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v32 = (uint64_t *)(*(void *)&v27[v28] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v34 = *v32;
  unint64_t v33 = v32[1];
  swift_bridgeObjectRetain();
  sub_100753370(v13, v34, v33, v16);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v13, v16, v46);
  sub_100F38180(v16, type metadata accessor for CRLBoardIdentifier);
  uint64_t v35 = UUID.uuidString.getter();
  uint64_t v37 = v36;
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v13, v46);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v35;
  *(void *)(inited + 40) = v37;
  uint64_t v38 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v38, (uint64_t)"Started real time collaboration session on board %{public}@", 59, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_release();
  swift_release();
  swift_release();

  sub_100F38180(v47, type metadata accessor for CRLBoardIdentifier);
  sub_100F38180(v48, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v39 = (uint64_t (*)(void))v0[1];
  return v39();
}

uint64_t sub_100F0B64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = Notification.userInfo.getter();
    if (v9)
    {
      uint64_t v10 = v9;
      unint64_t v22 = 0xD00000000000001ALL;
      unint64_t v23 = 0x800000010127D080;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v10 + 16) && (unint64_t v11 = sub_10095647C((uint64_t)v24), (v12 & 1) != 0))
      {
        sub_100522D7C(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v25);
      }
      else
      {
        long long v25 = 0u;
        long long v26 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10050BFE0((uint64_t)v24);
      if (!*((void *)&v26 + 1))
      {
        swift_release();
        return sub_100522F00((uint64_t)&v25, &qword_101672BF0);
      }
      sub_1005057FC(&qword_101699728);
      if (swift_dynamicCast())
      {
        unint64_t v13 = v22;
        if (*(void *)(v22 + 16) && (unint64_t v14 = sub_1009563EC(a3), (v15 & 1) != 0))
        {
          uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v17 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
          uint64_t v18 = swift_allocObject();
          swift_weakInit();
          type metadata accessor for MainActor();
          swift_retain();
          uint64_t v19 = static MainActor.shared.getter();
          unint64_t v20 = (void *)swift_allocObject();
          v20[2] = v19;
          v20[3] = &protocol witness table for MainActor;
          v20[4] = v18;
          v20[5] = v16;
          swift_release();
          sub_1005912D0((uint64_t)v7, (uint64_t)&unk_1016A23B8, (uint64_t)v20);
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100F0B8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  type metadata accessor for MainActor();
  v5[11] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F0B990, v7, v6);
}

uint64_t sub_100F0B990()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v1 = sub_100F00644();
    if (*v2)
    {
      uint64_t v3 = swift_bridgeObjectRetain();
      sub_10057CB20(v3);
    }
    ((void (*)(uint64_t, void))v1)(v0 + 16, 0);
    swift_release();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_100F0BA70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v114 = *(void *)(v6 - 8);
  uint64_t v115 = v6;
  __chkstk_darwin(v6, v7);
  unint64_t v113 = (uint64_t *)((char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v116 = (uint64_t)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLRealTimeLeave(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v123 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for UUID();
  uint64_t v132 = *(void *)(v138 - 8);
  uint64_t v20 = __chkstk_darwin(v138, v19);
  unint64_t v22 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  long long v25 = (char *)&v113 - v24;
  uint64_t v26 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v137 = (uint64_t)&v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void *)(v0 + 16);
  id v30 = *(void **)(v29 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers);
  if ([v30 containsObject:v1]) {
    [v30 removeObject:v1];
  }
  uint64_t v121 = v5;
  uint64_t v122 = v22;
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v31 = (void *)static OS_os_log.realTimeSync;
  uint64_t v134 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v133 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v135 = v29;
  uint64_t v131 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  unint64_t v33 = *(char **)(v29 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v34 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v35 = *(void *)&v33[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v35, (uint64_t)v18, type metadata accessor for CRLBoardCRDTData);
  uint64_t v36 = (uint64_t)v18;
  id v37 = v31;
  uint64_t v38 = v33;
  swift_retain();
  uint64_t v126 = sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  uint64_t v125 = v36;
  sub_100F38180(v36, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  id v39 = (uint64_t *)(*(void *)&v33[v34] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v40 = *v39;
  unint64_t v41 = v39[1];
  swift_bridgeObjectRetain();
  uint64_t v42 = v137;
  sub_100753370((uint64_t)v25, v40, v41, v137);

  uint64_t v43 = v132;
  uint64_t v44 = v138;
  uint64_t v127 = *(void (**)(char *, uint64_t, uint64_t))(v132 + 16);
  uint64_t v128 = v132 + 16;
  v127(v25, v42, v138);
  sub_100F38180(v42, type metadata accessor for CRLBoardIdentifier);
  uint64_t v45 = UUID.uuidString.getter();
  uint64_t v47 = v46;
  uint64_t v129 = *(void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v130 = v43 + 8;
  v129(v25, v44);
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v136 = sub_100528BE4();
  *(void *)(inited + 64) = v136;
  *(void *)(inited + 32) = v45;
  *(void *)(inited + 40) = v47;
  uint64_t v48 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v37, (uint64_t)&_mh_execute_header, v48, (uint64_t)"exitRealTimeSync() for board %{public}@", 39, 2, inited);
  swift_setDeallocating();
  uint64_t v49 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v50 = OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_databaseSaveObserverForRealTimeSync;
  uint64_t v51 = *(void *)(v1 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_databaseSaveObserverForRealTimeSync);
  if (v51)
  {
    uint64_t v52 = self;
    swift_unknownObjectRetain();
    id v53 = [v52 defaultCenter];
    [v53 removeObserver:v51];

    swift_unknownObjectRelease();
    *(void *)(v1 + v50) = 0;
    swift_unknownObjectRelease();
  }
  uint64_t v54 = (uint64_t *)(v1 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
  swift_beginAccess();
  if (*v54)
  {
    uint64_t v55 = v54[2];
    uint64_t v56 = v54[3];
    uint64_t v57 = v54[1];
    uint64_t v58 = qword_10166FAE8;
    uint64_t v120 = *v54;
    swift_retain();
    uint64_t v119 = v57;
    swift_retain();
    uint64_t v124 = v55;
    swift_retain();
    uint64_t v118 = v56;
    swift_bridgeObjectRetain();
    uint64_t v59 = v135;
    if (v58 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v60 = (id)static OS_os_log.crlJoinLeave;
    uint64_t v61 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v60, (uint64_t)&_mh_execute_header, v61, (uint64_t)"BoardLibrary exitRealTimeSync: stop observing CRLBoardRealTimeParticipantsDidChange observer", 92, 2, (uint64_t)_swiftEmptyArrayStorage);

    id v62 = [self defaultCenter];
    if (qword_10166EE88 != -1) {
      swift_once();
    }
    [v62 removeObserver:v1 name:qword_10171A4B0 object:0];

    uint64_t v63 = (uint64_t)v122;
    sub_10081CB88((uint64_t)v122);
    uint64_t v64 = (uint64_t)v123;
    uint64_t v117 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v132 + 32))(v123, v63, v138);
    uint64_t v103 = sub_1008A9A2C();
    unint64_t v105 = v104;
    uint64_t v106 = *(void *)(v59 + v131) + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess();
    uint64_t v107 = v106;
    uint64_t v108 = v116;
    sub_100522E9C(v107, v116, (uint64_t *)&unk_10169A1A0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v108, 1, v115))
    {
      sub_100F38180(v64, type metadata accessor for CRLRealTimeLeave);
      sub_100510084(v103, v105);
      sub_100522F00(v108, (uint64_t *)&unk_10169A1A0);
    }
    else
    {
      uint64_t v109 = v108;
      uint64_t v110 = v113;
      sub_100F38118(v109, (uint64_t)v113, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_100510D4C(v103, v105);
      sub_100522F00(v116, (uint64_t *)&unk_10169A1A0);
      uint64_t v132 = *v110;
      swift_retain();
      sub_100F38180((uint64_t)v110, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_100510D4C(v103, v105);
      sub_100F28FE0(3, v103, v105, v132);
      swift_release();
      sub_100510084(v103, v105);
      sub_100510084(v103, v105);
      sub_100F38180(v64, type metadata accessor for CRLRealTimeLeave);
      sub_100510084(v103, v105);
    }
    uint64_t v111 = v125;
    uint64_t v112 = (uint64_t)v121;
    uint64_t v65 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v112, 1, 1, v65);
    id v66 = (void *)swift_allocObject();
    v66[2] = 0;
    v66[3] = 0;
    v66[4] = v124;
    swift_retain();
    sub_100B107F4(v112, (uint64_t)&unk_1016A23A8, (uint64_t)v66);
    swift_release();
    sub_100522F00(v112, &qword_101672BB0);
    sub_100D04B30();
    uint64_t v67 = *v54;
    *(_OWORD *)uint64_t v54 = 0u;
    *((_OWORD *)v54 + 1) = 0u;
    sub_100741AB8(v67);
    uint64_t v68 = (void *)static OS_os_log.realTimeSync;
    uint64_t v69 = swift_initStackObject();
    *(_OWORD *)(v69 + 16) = v133;
    uint64_t v70 = *(char **)(v59 + v131);
    uint64_t v71 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v72 = *(void *)&v70[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100F38118(v72, v111, type metadata accessor for CRLBoardCRDTData);
    id v91 = v68;
    uint64_t v73 = v70;
    swift_retain();
    CRRegister.wrappedValue.getter();
    sub_100F38180(v111, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v74 = (uint64_t *)(*(void *)&v70[v71] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v75 = *v74;
    unint64_t v76 = v74[1];
    swift_bridgeObjectRetain();
    uint64_t v77 = v137;
    sub_100753370((uint64_t)v25, v75, v76, v137);

    uint64_t v78 = v138;
    v127(v25, v77, v138);
    sub_100F38180(v77, type metadata accessor for CRLBoardIdentifier);
    uint64_t v79 = UUID.uuidString.getter();
    uint64_t v81 = v80;
    v129(v25, v78);
    unint64_t v82 = v136;
    *(void *)(v69 + 56) = &type metadata for String;
    *(void *)(v69 + 64) = v82;
    *(void *)(v69 + 32) = v79;
    *(void *)(v69 + 40) = v81;
    uint64_t v83 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v91, (uint64_t)&_mh_execute_header, v83, (uint64_t)"Ended real time collaboration session on board %{public}@", 57, 2, v69);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v84 = (void *)static OS_os_log.realTimeSync;
    uint64_t v85 = swift_initStackObject();
    *(_OWORD *)(v85 + 16) = v133;
    uint64_t v86 = *(char **)(v135 + v131);
    uint64_t v87 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v88 = *(void *)&v86[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v89 = v88;
    uint64_t v90 = v125;
    sub_100F38118(v89, v125, type metadata accessor for CRLBoardCRDTData);
    id v91 = v84;
    uint64_t v92 = v86;
    swift_retain();
    CRRegister.wrappedValue.getter();
    sub_100F38180(v90, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    v93 = (uint64_t *)(*(void *)&v86[v87] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v94 = *v93;
    unint64_t v95 = v93[1];
    swift_bridgeObjectRetain();
    uint64_t v96 = v137;
    sub_100753370((uint64_t)v25, v94, v95, v137);

    uint64_t v97 = v138;
    v127(v25, v96, v138);
    sub_100F38180(v96, type metadata accessor for CRLBoardIdentifier);
    uint64_t v98 = UUID.uuidString.getter();
    uint64_t v100 = v99;
    v129(v25, v97);
    unint64_t v101 = v136;
    *(void *)(v85 + 56) = &type metadata for String;
    *(void *)(v85 + 64) = v101;
    *(void *)(v85 + 32) = v98;
    *(void *)(v85 + 40) = v100;
    uint64_t v102 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v91, (uint64_t)&_mh_execute_header, v102, (uint64_t)"Nothing to do for exiting a real-time session. A real-time sync session object is not associated to the board %{public}@", 120, 2, v85);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
}

uint64_t sub_100F0C904(uint64_t a1)
{
  uint64_t v104 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v6);
  uint64_t v8 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v100 = (uint64_t)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v106 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16, v17);
  uint64_t v103 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v120 = (char *)&v95 - v22;
  __chkstk_darwin(v21, v23);
  long long v25 = (char *)&v95 - v24;
  uint64_t v26 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  uint64_t v108 = (uint64_t)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v107 = (uint64_t)&v95 - v32;
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v111 = (uint64_t)&v95 - v35;
  __chkstk_darwin(v34, v36);
  uint64_t v112 = (uint64_t)&v95 - v37;
  uint64_t v105 = v1;
  uint64_t v38 = (uint64_t *)(v1 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
  uint64_t result = swift_beginAccess();
  uint64_t v40 = *v38;
  if (!*v38) {
    return result;
  }
  uint64_t v41 = v38[3];
  sub_100741A58(*v38);
  swift_bridgeObjectRetain();
  sub_100741AB8(v40);
  uint64_t v42 = *(void *)(v41 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v42) {
    return result;
  }
  uint64_t v115 = v38;
  uint64_t v99 = (uint64_t *)v8;
  uint64_t v98 = *(void *)(v105 + 16);
  uint64_t v97 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v43 = *(char **)(v98 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v44 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v45 = *(void *)&v43[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v45, (uint64_t)v15, type metadata accessor for CRLBoardCRDTData);
  uint64_t v46 = v43;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v15, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v47 = (uint64_t *)(*(void *)&v43[v44] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v48 = *v47;
  unint64_t v49 = v47[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v25, v48, v49, v112);

  uint64_t v122 = &_swiftEmptySetSingleton;
  uint64_t v50 = v104;
  uint64_t v51 = *(void *)(v104 + 16);
  if (!v51) {
    goto LABEL_29;
  }
  uint64_t v96 = v5;
  uint64_t v52 = v104 + 32;
  uint64_t v53 = type metadata accessor for CRLBoardItemSyncLocalChangeRecord(0);
  uint64_t v119 = (void (**)(char *, unint64_t, uint64_t))(v106 + 16);
  uint64_t v54 = (void (**)(char *, uint64_t))(v106 + 8);
  swift_bridgeObjectRetain();
  uint64_t v55 = 0;
  uint64_t v56 = v115;
  uint64_t v109 = v50 + 32;
  uint64_t v110 = v51;
  uint64_t v113 = v53;
  do
  {
    uint64_t v57 = *(void *)(v52 + 16 * v55);
    uint64_t v58 = swift_dynamicCastClass();
    if (v58)
    {
      uint64_t v59 = *v56;
      if (*v56)
      {
        uint64_t v60 = v57;
        uint64_t v61 = v56[3];
        uint64_t v62 = v58;
        swift_unknownObjectRetain();
        sub_100741A58(v59);
        sub_100741A58(v59);
        uint64_t v117 = v60;
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRetain();
        sub_100741AB8(v59);
        uint64_t v116 = v62;
        uint64_t v63 = *v119;
        uint64_t v114 = v62 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
        uint64_t v118 = v63;
        ((void (*)(char *))v63)(v120);
        if (*(void *)(v61 + 16)
          && (sub_100F359B0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID), v64 = dispatch thunk of Hashable._rawHashValue(seed:)(), v65 = -1 << *(unsigned char *)(v61 + 32), unint64_t v66 = v64 & ~v65, ((*(void *)(v61 + 56 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) != 0))
        {
          uint64_t v67 = ~v65;
          uint64_t v68 = *(void *)(v106 + 72);
          do
          {
            v118(v25, *(void *)(v61 + 48) + v68 * v66, v16);
            sub_100F359B0((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v69 = dispatch thunk of static Equatable.== infix(_:_:)();
            (*v54)(v25, v16);
            if (v69) {
              break;
            }
            unint64_t v66 = (v66 + 1) & v67;
          }
          while (((*(void *)(v61 + 56 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) != 0);
        }
        else
        {
          char v69 = 0;
        }
        swift_bridgeObjectRelease();
        uint64_t v70 = *v54;
        (*v54)(v120, v16);
        if ((v69 & 1) == 0)
        {
          swift_unknownObjectRelease_n();
          uint64_t v56 = v115;
          uint64_t v51 = v110;
          uint64_t v52 = v109;
          goto LABEL_6;
        }
        uint64_t v71 = v111;
        sub_100F38118(v116 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier, v111, type metadata accessor for CRLBoardIdentifier);
        uint64_t v72 = v112;
        char v73 = static UUID.== infix(_:_:)();
        uint64_t v74 = v107;
        sub_100F38118(v71, v107, type metadata accessor for CRLBoardIdentifier);
        uint64_t v75 = v72;
        uint64_t v76 = v108;
        sub_100F38118(v75, v108, type metadata accessor for CRLBoardIdentifier);
        if ((v73 & 1) == 0)
        {
          sub_100F38180(v76, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v74, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v71, type metadata accessor for CRLBoardIdentifier);
          uint64_t v56 = v115;
          uint64_t v51 = v110;
          uint64_t v52 = v109;
LABEL_25:
          swift_unknownObjectRelease_n();
          goto LABEL_6;
        }
        uint64_t v77 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v78 = *(void *)(v74 + v77);
        uint64_t v79 = *(void *)(v74 + v77 + 8);
        uint64_t v80 = (void *)(v76 + v77);
        if (v78 == *v80 && v79 == v80[1])
        {
          sub_100F38180(v76, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v74, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v111, type metadata accessor for CRLBoardIdentifier);
          uint64_t v56 = v115;
          uint64_t v51 = v110;
          uint64_t v52 = v109;
        }
        else
        {
          char v82 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100F38180(v76, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v74, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v111, type metadata accessor for CRLBoardIdentifier);
          uint64_t v56 = v115;
          uint64_t v51 = v110;
          uint64_t v52 = v109;
          if ((v82 & 1) == 0) {
            goto LABEL_25;
          }
        }
        uint64_t v83 = v103;
        v118(v103, v114, v16);
        sub_100CB4BC8((uint64_t)v25, v83);
        swift_unknownObjectRelease_n();
        v70(v25, v16);
      }
    }
LABEL_6:
    ++v55;
  }
  while (v55 != v51);
  swift_bridgeObjectRelease();
  uint64_t v5 = v96;
LABEL_29:
  uint64_t v84 = sub_100F00644();
  if (*v85)
  {
    uint64_t v86 = swift_bridgeObjectRetain();
    sub_1010295C8(v86);
    swift_bridgeObjectRelease();
  }
  ((void (*)(char *, void))v84)(v121, 0);
  uint64_t v87 = v99;
  uint64_t v88 = *(void *)(v98 + v97) + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  uint64_t v89 = v88;
  uint64_t v90 = v100;
  sub_100522E9C(v89, v100, (uint64_t *)&unk_10169A1A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v90, 1, v102))
  {
    sub_100522F00(v90, (uint64_t *)&unk_10169A1A0);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100F38118(v90, (uint64_t)v87, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_100522F00(v90, (uint64_t *)&unk_10169A1A0);
    uint64_t v91 = *v87;
    swift_retain();
    sub_100F38180((uint64_t)v87, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    uint64_t v92 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v5, 1, 1, v92);
    v93 = v122;
    uint64_t v94 = (void *)swift_allocObject();
    v94[2] = 0;
    v94[3] = 0;
    v94[4] = v93;
    v94[5] = v91;
    swift_retain();
    sub_100B107F4((uint64_t)v5, (uint64_t)&unk_1016A23A0, (uint64_t)v94);
    swift_release();
    swift_release();
    sub_100522F00((uint64_t)v5, &qword_101672BB0);
  }
  return sub_100F38180(v112, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100F0D4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[29] = a4;
  v5[30] = a5;
  sub_1005057FC((uint64_t *)&unk_101674160);
  v5[31] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CRLProto_Data(0);
  v5[32] = v6;
  v5[33] = *(void *)(v6 - 8);
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  v5[36] = type metadata accessor for CRLProto_BoardItemIdentifier(0);
  v5[37] = swift_task_alloc();
  type metadata accessor for CRLServerSyncedPeerAddedItemEvent();
  v5[38] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674520);
  v5[39] = swift_task_alloc();
  return _swift_task_switch(sub_100F0D684, 0, 0);
}

uint64_t sub_100F0D684()
{
  uint64_t v61 = *(void *)(v0 + 288);
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v60 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v56 = v3 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v4;
  int64_t v57 = (unint64_t)(63 - v6) >> 6;
  unint64_t v66 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  uint64_t v58 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v62 = *(void *)(v0 + 232);
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v55 = _swiftEmptyArrayStorage;
  uint64_t v59 = v1;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      uint64_t v10 = (v7 - 1) & v7;
      unint64_t v11 = v9 | (v8 << 6);
      goto LABEL_20;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v12 >= v57) {
      goto LABEL_30;
    }
    unint64_t v13 = *(void *)(v56 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v57) {
        goto LABEL_30;
      }
      unint64_t v13 = *(void *)(v56 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v57) {
          goto LABEL_30;
        }
        unint64_t v13 = *(void *)(v56 + 8 * v8);
        if (!v13) {
          break;
        }
      }
    }
LABEL_19:
    uint64_t v10 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_20:
    uint64_t v15 = *(void *)(v0 + 312);
    uint64_t v16 = *(void *)(v62 + 48);
    uint64_t v17 = type metadata accessor for UUID();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))(v15, v16 + *(void *)(v18 + 72) * v11, v17);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1) {
      goto LABEL_31;
    }
    unint64_t v64 = v10;
    int64_t v65 = v8;
    uint64_t v19 = *(void *)(v0 + 296);
    uint64_t v20 = *(void **)(v0 + 280);
    uint64_t v21 = *(void *)(v0 + 256);
    uint64_t v63 = *(void *)(v0 + 248);
    (*(void (**)(void, void, uint64_t))(v18 + 32))(*(void *)(v0 + 304), *(void *)(v0 + 312), v17);
    UnknownStorage.init()();
    uint64_t v22 = v19 + *(int *)(v61 + 20);
    uint64_t v23 = *v66;
    (*v66)(v22, 1, 1, v21);
    *uint64_t v20 = 0;
    *(void *)(v60 + 8) = 0xC000000000000000;
    UnknownStorage.init()();
    sub_100522F00(v22, (uint64_t *)&unk_101674160);
    sub_100F37878((uint64_t)v20, v22, type metadata accessor for CRLProto_Data);
    v23(v22, 0, 1, v21);
    *(void *)(v0 + 320) = UUID.uuid.getter();
    *(unsigned char *)(v0 + 328) = v24;
    *(unsigned char *)(v0 + 329) = v25;
    *(unsigned char *)(v0 + 330) = v26;
    *(unsigned char *)(v0 + 331) = v27;
    *(unsigned char *)(v0 + 332) = v28;
    *(unsigned char *)(v0 + 333) = v29;
    *(unsigned char *)(v0 + 334) = v30;
    *(unsigned char *)(v0 + 335) = v31;
    UUID.uuid.getter();
    type metadata accessor for __DataStorage();
    swift_allocObject();
    uint64_t v32 = __DataStorage.init(bytes:length:)();
    sub_100522E9C(v22, v63, (uint64_t *)&unk_101674160);
    int v33 = (*v58)(v63, 1, v21);
    uint64_t v34 = *(void **)(v0 + 272);
    uint64_t v35 = *(void *)(v0 + 248);
    if (v33 == 1)
    {
      *uint64_t v34 = 0;
      uint64_t v36 = v59;
      *(void *)(v59 + 8) = 0xC000000000000000;
      UnknownStorage.init()();
      sub_100522F00(v35, (uint64_t *)&unk_101674160);
    }
    else
    {
      sub_100F37878(*(void *)(v0 + 248), (uint64_t)v34, type metadata accessor for CRLProto_Data);
      uint64_t v36 = v59;
    }
    uint64_t v37 = *(uint64_t **)(v0 + 272);
    uint64_t v38 = *(void *)(v0 + 256);
    sub_100510084(*v37, *(void *)(v36 + 8));
    *uint64_t v37 = 0x1000000000;
    *(void *)(v36 + 8) = v32 | 0x4000000000000000;
    sub_100522F00(v22, (uint64_t *)&unk_101674160);
    sub_100F37878((uint64_t)v37, v22, type metadata accessor for CRLProto_Data);
    v23(v22, 0, 1, v38);
    sub_100F359B0((unint64_t *)&qword_101673FA0, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardItemIdentifier);
    uint64_t v39 = Message.serializedData(partial:)();
    unint64_t v41 = v40;
    sub_100F38180(*(void *)(v0 + 296), type metadata accessor for CRLProto_BoardItemIdentifier);
    sub_100510D4C(v39, v41);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v55 = sub_100F63C34(0, *((void *)v55 + 2) + 1, 1, v55);
    }
    unint64_t v7 = v64;
    int64_t v8 = v65;
    unint64_t v43 = *((void *)v55 + 2);
    unint64_t v42 = *((void *)v55 + 3);
    if (v43 >= v42 >> 1) {
      uint64_t v55 = sub_100F63C34((double *)(v42 > 1), v43 + 1, 1, v55);
    }
    uint64_t v44 = *(void *)(v0 + 304);
    *(void *)(v0 + 160) = &type metadata for CRLBoardAuxiliaryRealTimeChange;
    *(void *)(v0 + 168) = &off_10150CB90;
    uint64_t v45 = swift_allocObject();
    *(void *)(v0 + 136) = v45;
    *(unsigned char *)(v45 + 16) = 8;
    *(void *)(v45 + 24) = v39;
    *(void *)(v45 + 32) = v41;
    *(unsigned char *)(v45 + 40) = 1;
    *((void *)v55 + 2) = v43 + 1;
    sub_10053974C((long long *)(v0 + 136), (uint64_t)&v55[5 * v43 + 4]);
    sub_100510084(v39, v41);
    sub_100F38180(v44, (uint64_t (*)(void))type metadata accessor for CRLServerSyncedPeerAddedItemEvent);
  }
  int64_t v14 = v12 + 3;
  if (v14 < v57)
  {
    unint64_t v13 = *(void *)(v56 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v8 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        if (v8 >= v57) {
          goto LABEL_30;
        }
        unint64_t v13 = *(void *)(v56 + 8 * v8);
        ++v14;
        if (v13) {
          goto LABEL_19;
        }
      }
LABEL_39:
      __break(1u);
    }
    int64_t v8 = v14;
    goto LABEL_19;
  }
LABEL_30:
  uint64_t v46 = *(void *)(v0 + 312);
  uint64_t v47 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
LABEL_31:
  swift_release();
  if (*((void *)v55 + 2))
  {
    uint64_t v48 = *(void *)(v0 + 240);
    unint64_t v49 = *(NSObject **)(v48 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v48;
    *(void *)(v50 + 24) = v55;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_100F368F4;
    *(void *)(v51 + 24) = v50;
    *(void *)(v0 + 120) = sub_1006591F0;
    *(void *)(v0 + 128) = v51;
    *(void *)(v0 + 88) = _NSConcreteStackBlock;
    *(void *)(v0 + 96) = *(void *)"";
    *(void *)(v0 + 104) = sub_1006D9628;
    *(void *)(v0 + 112) = &unk_101533178;
    uint64_t v52 = _Block_copy((const void *)(v0 + 88));
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v49, v52);
    _Block_release(v52);
    LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if (v49)
    {
      __break(1u);
      goto LABEL_34;
    }
  }
  else
  {
LABEL_34:
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_100F0E0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[24] = a4;
  v5[25] = a5;
  type metadata accessor for CRLServerSyncedPeerAddedItemEvent();
  v5[26] = swift_task_alloc();
  return _swift_task_switch(sub_100F0E14C, 0, 0);
}

uint64_t sub_100F0E14C()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[24];
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v1, v2, v3);
  uint64_t v4 = sub_100EC72B0();
  unint64_t v6 = v5;
  uint64_t v7 = v0[25];
  sub_1005057FC(&qword_1016A2600);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117E810;
  *(void *)(v8 + 56) = &type metadata for CRLBoardAuxiliaryRealTimeChange;
  *(void *)(v8 + 64) = &off_10150CB90;
  uint64_t v9 = swift_allocObject();
  *(void *)(v8 + 32) = v9;
  *(unsigned char *)(v9 + 16) = 8;
  *(void *)(v9 + 24) = v4;
  *(void *)(v9 + 32) = v6;
  *(unsigned char *)(v9 + 40) = 1;
  uint64_t v10 = *(NSObject **)(v7 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v7;
  *(void *)(v11 + 24) = v8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100F3890C;
  *(void *)(v12 + 24) = v11;
  v0[15] = sub_100659320;
  v0[16] = v12;
  v0[11] = _NSConcreteStackBlock;
  v0[12] = *(void *)"";
  v0[13] = sub_1006D9628;
  v0[14] = &unk_101533A78;
  unint64_t v13 = _Block_copy(v0 + 11);
  sub_100510D4C(v4, v6);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_100510084(v4, v6);
  if (v7)
  {
    __break(1u);
  }
  else
  {
    sub_100F38180(v0[26], (uint64_t (*)(void))type metadata accessor for CRLServerSyncedPeerAddedItemEvent);
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  return result;
}

void sub_100F0E550(void *a1)
{
  uint64_t v3 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v12 = *(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess();
    sub_100522E9C(v12, (uint64_t)v11, (uint64_t *)&unk_10169A1A0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3))
    {
      sub_100522F00((uint64_t)v11, (uint64_t *)&unk_10169A1A0);
    }
    else
    {
      sub_100F38118((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      id v13 = a1;
      sub_100522F00((uint64_t)v11, (uint64_t *)&unk_10169A1A0);
      swift_retain();
      sub_100F38180((uint64_t)v7, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      id v14 = v13;
      sub_10070417C(a1);
      swift_release();
    }
  }
}

void sub_100F0E7B8()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_1005E873C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100F0E8F8()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10117D8C0;
  uint64_t v40 = *(void *)(v0 + 16);
  uint64_t v41 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  id v14 = *(char **)(v40 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v15 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v39 = type metadata accessor for CRLBoardCRDTData;
  sub_100F38118(v16, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v17 = v14;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  uint64_t v38 = type metadata accessor for CRLBoardCRDTData;
  sub_100F38180((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v18 = (uint64_t *)(*(void *)&v14[v15] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v19 = *v18;
  unint64_t v20 = v18[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v8, v19, v20, (uint64_t)v12);

  uint64_t v44 = UUID.uuidString.getter();
  uint64_t v45 = v21;
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = 58;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = v44;
  uint64_t v24 = v45;
  char v25 = (uint64_t *)&v12[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  uint64_t v26 = *v25;
  char v27 = (void *)v25[1];
  uint64_t v44 = v23;
  uint64_t v45 = v24;
  swift_bridgeObjectRetain();
  v28._countAndFlagsBits = v26;
  v28._object = v27;
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = v44;
  uint64_t v30 = v45;
  sub_100F38180((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v31 = sub_100528BE4();
  *(void *)(v13 + 64) = v31;
  *(void *)(v13 + 32) = v29;
  *(void *)(v13 + 40) = v30;
  uint64_t v32 = *(char **)(v40 + v41);
  uint64_t v33 = *(void *)&v32[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v33, (uint64_t)v4, v39);
  uint64_t v34 = v32;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v35 = v42;
  uint64_t v36 = v43;
  sub_100F38180((uint64_t)v4, v38);

  *(void *)(v13 + 96) = &type metadata for String;
  *(void *)(v13 + 104) = v31;
  *(void *)(v13 + 72) = v35;
  *(void *)(v13 + 80) = v36;
  return String.init(format:_:)();
}

Swift::Int sub_100F0EC80()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init(_seed:)();
  uint64_t v10 = *(char **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v11, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v12 = v10;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);

  swift_release();
  sub_100F359B0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  return Hasher._finalize()();
}

Swift::Int sub_100F0EEA4()
{
  return sub_100F0EC80();
}

uint64_t sub_100F0EEC8()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(char **)(*(void *)(*(void *)v0 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v11, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v12 = v10;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);

  swift_release();
  sub_100F359B0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

Swift::Int sub_100F0F0E0()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init(_seed:)();
  uint64_t v10 = *(char **)(*(void *)(*(void *)v0 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v11, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  uint64_t v12 = v10;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);

  swift_release();
  sub_100F359B0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  return Hasher._finalize()();
}

uint64_t sub_100F0F30C()
{
  return sub_100F0E8F8();
}

uint64_t sub_100F0F330(uint64_t *a1, uint64_t *a2)
{
  return sub_100F29260(*a1, *a2);
}

void sub_100F0F33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLZoneSyncResultScenarios();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v14 = (char *)Strong;
  uint64_t v15 = Notification.userInfo.getter();
  if (!v15)
  {
    long long v33 = 0u;
    long long v34 = 0u;
LABEL_13:

    sub_100522F00((uint64_t)&v33, &qword_101672BF0);
    return;
  }
  uint64_t v16 = v15;
  v31[1] = 0xD000000000000026;
  v31[2] = 0x800000010126BC20;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v16 + 16) && (unint64_t v17 = sub_10095647C((uint64_t)v32), (v18 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&v33);
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v32);
  if (!*((void *)&v34 + 1)) {
    goto LABEL_13;
  }
  sub_1005057FC(&qword_10168DAF8);
  if (swift_dynamicCast())
  {
    uint64_t v19 = v32[0];
    if (*(void *)(v32[0] + 16) && (unint64_t v20 = sub_1009563EC(a3), (v21 & 1) != 0))
    {
      sub_100F38118(*(void *)(v19 + 56) + *(void *)(v9 + 72) * v20, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v22, 1, v8);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {

      sub_100522F00((uint64_t)v7, &qword_101674220);
      return;
    }
    sub_100F37878((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    if (v12[2] == 1)
    {
      id v23 = [self sharedApplication];
      id v24 = [v23 delegate];

      if (!v24)
      {
        __break(1u);
        return;
      }
      type metadata accessor for CRLiOSAppDelegate();
      swift_dynamicCastClassUnconditional();
      sub_1006C6B2C();
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
      if (v26)
      {
        sub_100A7F3D4();
      }
    }
    uint64_t v27 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_databaseSyncObserver;
    uint64_t v28 = *(void *)&v14[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_databaseSyncObserver];
    if (v28)
    {
      uint64_t v29 = self;
      swift_unknownObjectRetain();
      id v30 = [v29 defaultCenter];
      [v30 removeObserver:v28];
      swift_unknownObjectRelease();

      sub_100F38180((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      *(void *)&v14[v27] = 0;

      swift_unknownObjectRelease();
      return;
    }
    sub_100F38180((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
  }
}

void sub_100F0F760()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pauseSnapshotUpdateCount;
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pauseSnapshotUpdateCount];
  uint64_t v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_9;
  }
  *(void *)&v0[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pauseSnapshotUpdateCount] = v7;
  if (v7 < 0)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v7;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"resumeSnapshotUpdates()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2920, (uint64_t)"Invalid pause count: %d", 23, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"resumeSnapshotUpdates()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2920);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    *(void *)&v0[v5] = 0;
  }
  else if (v6 != 1)
  {
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_10117E810;
    uint64_t v10 = *(void *)&v0[v5];
    *(void *)(v9 + 56) = &type metadata for Int;
    *(void *)(v9 + 64) = &protocol witness table for Int;
    *(void *)(v9 + 32) = v10;
    id v11 = v8;
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Snapshot update pause counter decremented to: %d", 48, 2, v9);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return;
  }
  if (qword_10166FA60 != -1) {
    goto LABEL_14;
  }
LABEL_9:
  swift_beginAccess();
  id v14 = (id)static OS_os_log.crlBoardLibrary;
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Resuming snapshot updates", 25, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v16 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pendingUpdateOptions;
  uint64_t v17 = *(void *)&v0[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pendingUpdateOptions];
  char v18 = &v0[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pendingChangedBoards];
  swift_beginAccess();
  uint64_t v19 = *(void *)v18;
  if (v17 || *(void *)(v19 + 16))
  {
    *(void *)&v0[v16] = 0;
    *(void *)char v18 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
    type metadata accessor for MainActor();
    char v21 = v0;
    uint64_t v22 = static MainActor.shared.getter();
    id v23 = (void *)swift_allocObject();
    v23[2] = v22;
    v23[3] = &protocol witness table for MainActor;
    v23[4] = v21;
    v23[5] = v17;
    v23[6] = v19;
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_1016A2278, (uint64_t)v23);
    swift_release();
  }
}

uint64_t sub_100F0FB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = type metadata accessor for MainActor();
  v6[3] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_100F0FC58;
  return sub_100EF1EDC(a5, a6);
}

uint64_t sub_100F0FC58()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F0FD94, v1, v0);
}

void sub_100F0FD94()
{
  swift_release();
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];

  if (v2)
  {
    type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional();
    sub_1006C47D4();
    swift_unknownObjectRelease();
    uint64_t v3 = *(void (**)(void))(v0 + 8);
    v3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100F0FE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a4;
  v6[3] = type metadata accessor for MainActor();
  v6[4] = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_task_alloc();
  v6[5] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_100F0FF2C;
  return sub_100F34038(a6);
}

uint64_t sub_100F0FF2C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 56) = v2;
  return _swift_task_switch(sub_100F10070, v3, v2);
}

uint64_t sub_100F10070(unint64_t a1)
{
  double v2 = *(double *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_snapshotUpdateInterval);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!is_mul_ok((unint64_t)v2, 0x3B9ACA00uLL))
  {
LABEL_11:
    __break(1u);
    return static Task<>.sleep(nanoseconds:)(a1);
  }
  unint64_t v3 = 1000000000 * (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100F1016C;
  a1 = v3;
  return static Task<>.sleep(nanoseconds:)(a1);
}

uint64_t sub_100F1016C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v5 = sub_1007C91BC;
  }
  else {
    uint64_t v5 = sub_100F102A8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100F102A8()
{
  swift_release();
  sub_100F0F760();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F10314(uint64_t a1)
{
  v2[24] = a1;
  v2[25] = v1;
  sub_1005057FC((uint64_t *)&unk_1016741E0);
  v2[26] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  v2[27] = v3;
  v2[28] = *(void *)(v3 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = sub_1005057FC(&qword_1016A22C8);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  v2[36] = v4;
  v2[37] = *(void *)(v4 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v2[42] = v5;
  v2[43] = *(void *)(v5 - 8);
  v2[44] = swift_task_alloc();
  v2[45] = sub_1005057FC(&qword_10167BE58);
  v2[46] = swift_task_alloc();
  v2[47] = sub_1005057FC((uint64_t *)&unk_10167BE60);
  v2[48] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[49] = v6;
  v2[50] = *(void *)(v6 - 8);
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[56] = swift_task_alloc();
  v2[57] = swift_task_alloc();
  v2[58] = swift_task_alloc();
  v2[59] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[60] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[61] = v8;
  v2[62] = v7;
  return _swift_task_switch(sub_100F106D0, v8, v7);
}

uint64_t sub_100F106D0()
{
  *(void *)(v0 + 504) = *(void *)(*(void *)(v0 + 200) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100F10700, 0, 0);
}

uint64_t sub_100F10700()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = swift_task_alloc();
  v0[64] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[65] = v3;
  uint64_t v4 = sub_1005057FC(&qword_10167BF58);
  *uint64_t v3 = v0;
  v3[1] = sub_100F10804;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 19, 0, 0, 0xD00000000000001DLL, 0x8000000101296400, sub_100F35A18, v2, v4);
}

uint64_t sub_100F10804()
{
  *(void *)(*(void *)v1 + 528) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100F10BCC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100F10920;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100F10920()
{
  v0[67] = v0[19];
  return _swift_task_switch(sub_100F10940, v0[61], v0[62]);
}

uint64_t sub_100F10940()
{
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100F109AC, 0, 0);
}

uint64_t sub_100F109AC()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = swift_task_alloc();
  v0[68] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[69] = v3;
  uint64_t v4 = sub_1005057FC(&qword_101677400);
  *uint64_t v3 = v0;
  v3[1] = sub_100F10AB0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 23, 0, 0, 0xD000000000000022, 0x8000000101296450, sub_100F35A20, v2, v4);
}

uint64_t sub_100F10AB0()
{
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100F10F1C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100F11280;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100F10BCC()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 496);
  return _swift_task_switch(sub_100F10C30, v1, v2);
}

uint64_t sub_100F10C30()
{
  uint64_t v1 = v0[66];
  swift_release();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[66];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[22] = v1;
  id v5 = v3;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error updating snapshot from store: %@", 38, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  if (!v2) {
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = (_OWORD *)v0[24];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v10[1] = 0u;
  v10[2] = 0u;
  *uint64_t v10 = 0u;
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100F10F1C()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 496);
  return _swift_task_switch(sub_100F10F8C, v1, v2);
}

uint64_t sub_100F10F8C()
{
  uint64_t v1 = v0[70];
  swift_release();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[66];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[22] = v1;
  id v5 = v3;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error updating snapshot from store: %@", 38, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  if (!v2) {
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = (_OWORD *)v0[24];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v10[1] = 0u;
  v10[2] = 0u;
  *uint64_t v10 = 0u;
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100F11280()
{
  v0[71] = v0[23];
  return _swift_task_switch(sub_100F112A0, v0[61], v0[62]);
}

uint64_t sub_100F112A0()
{
  uint64_t v176 = v0;
  uint64_t v1 = *(void *)(v0 + 536);
  swift_release();
  unint64_t v173 = sub_100A3A0F0((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v174 = sub_100A3A320((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 560);
    uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v5 = *v4;
      v175[0] = *(v4 - 1);
      v175[1] = v5;
      sub_100F1AB90(v175, (uint64_t *)&v174, (uint64_t)&v173);
      v4 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 560);
  }
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 200);
  *(void *)(v0 + 160) = sub_100A3A334((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v0 + 160;
  uint64_t v9 = sub_100F2A7C4(v6, (void (*)(uint64_t, id))sub_100F35A28, v8);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  v175[0] = (uint64_t)v9;
  swift_bridgeObjectRetain();
  sub_100F20934((unint64_t *)v175);
  if (v3)
  {
    return swift_release();
  }
  uint64_t v11 = *(void *)(v0 + 472);
  uint64_t v12 = *(void *)(v0 + 200);
  swift_bridgeObjectRelease();
  uint64_t v13 = v175[0];
  unint64_t v14 = *(void *)(v12 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  uint64_t v15 = sub_1005057FC(&qword_101670F30);
  uint64_t isUniquelyReferenced_nonNull_native = *(void *)(v15 - 8);
  uint64_t v156 = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 56))(v11, 1, 5);
  uint64_t v17 = swift_task_alloc();
  *(void *)(v17 + 16) = v11;
  swift_bridgeObjectRetain();
  char v18 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_100F38910, v17, v14);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_100F38180(v11, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if (!v18)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateAllBoardsAndCKShare()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3280, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateAllBoardsAndCKShare()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3280);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v135 = 0;
    v163 = 0;
    uint64_t v138 = 0;
    unint64_t v140 = 0;
    uint64_t v142 = 0;
    id v137 = 0;
    goto LABEL_94;
  }
  uint64_t v19 = *(void *)(v13 + 16);
  uint64_t v20 = &OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
  id v136 = v18;
  if (v19)
  {
    uint64_t v170 = isUniquelyReferenced_nonNull_native;
    uint64_t v21 = *(void *)(v0 + 400);
    v175[0] = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v22 = v13 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v23 = *(void *)(v21 + 72);
    do
    {
      uint64_t v25 = *(void *)(v0 + 432);
      uint64_t v24 = *(void *)(v0 + 440);
      sub_100F38118(v22, v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100F38118(v24, v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v26 = (objc_class *)type metadata accessor for CRLBoardLibraryViewModelItemNode();
      uint64_t v27 = (char *)objc_allocWithZone(v26);
      *(void *)&v27[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
      sub_100F38118(v25, (uint64_t)&v27[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);
      *(void *)(v0 + 136) = v27;
      *(void *)(v0 + 144) = v26;
      [super init];
      sub_100F38180(v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100F38180(v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v22 += v23;
      --v19;
    }
    while (v19);
    v163 = (double *)v175[0];
    swift_release();
    char v18 = v136;
    uint64_t v20 = &OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
    uint64_t isUniquelyReferenced_nonNull_native = v170;
  }
  else
  {
    swift_release();
    v163 = _swiftEmptyArrayStorage;
  }
  id v28 = [v18 children];
  type metadata accessor for CRLBoardLibraryViewModelItemNode();
  unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v29 >> 62) {
    goto LABEL_145;
  }
  uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  unint64_t v31 = v163;
  swift_bridgeObjectRetain();
LABEL_19:
  uint64_t v161 = (unint64_t)v31 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v31 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v31 = v163;
    uint64_t v166 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v166 = *(void *)(((unint64_t)v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v32 = 0;
  unint64_t v33 = 0;
  uint64_t v159 = *(void *)(v0 + 376);
  uint64_t v143 = *(void *)(v0 + 360);
  uint64_t v150 = v29 & 0xFFFFFFFFFFFFFF8;
  unint64_t v152 = v29 & 0xC000000000000001;
  unint64_t v148 = v29 + 32;
  uint64_t v34 = *(void *)(v0 + 344);
  unint64_t v164 = (unint64_t)v31 & 0xC000000000000001;
  uint64_t v154 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 48);
  uint64_t v134 = (void (**)(uint64_t, uint64_t))(v34 + 8);
  long long v133 = (void (**)(void, uint64_t, uint64_t))(v34 + 32);
  uint64_t v157 = v30;
  while (1)
  {
    if (v33 == v30)
    {
      uint64_t v38 = 0;
      uint64_t isUniquelyReferenced_nonNull_native = 0;
      unint64_t v33 = v30;
      if (v166 == v32) {
        goto LABEL_90;
      }
      goto LABEL_34;
    }
    if (v152)
    {
      id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v33 & 0x8000000000000000) != 0) {
        goto LABEL_139;
      }
      if (v33 >= *(void *)(v150 + 16)) {
        goto LABEL_140;
      }
      id v39 = *(id *)(v148 + 8 * v33);
    }
    uint64_t v38 = v39;
    BOOL v40 = __OFADD__(v33++, 1);
    if (v40) {
      goto LABEL_141;
    }
    if (v166 == v32) {
      break;
    }
LABEL_34:
    if (v164)
    {
      id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v32 >= *(void *)(v161 + 16))
      {
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v31 = v163;
        uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
        goto LABEL_19;
      }
      id v41 = *(id *)&v31[v32 + 4];
    }
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v41;
    if (__OFADD__(v32, 1)) {
      goto LABEL_138;
    }
    if (!v38) {
      goto LABEL_90;
    }
    if (!v41) {
      goto LABEL_83;
    }
    unint64_t v29 = *(void *)(v0 + 384);
    uint64_t v168 = v38;
    uint64_t v171 = v41;
    uint64_t v42 = (uint64_t)v38 + *v20;
    uint64_t v43 = isUniquelyReferenced_nonNull_native + *v20;
    uint64_t v44 = (unsigned __int8 *)(v29 + *(int *)(v159 + 48));
    sub_100F38118(v42, v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100F38118(v43, (uint64_t)v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      sub_100F38118(*(void *)(v0 + 384), *(void *)(v0 + 424), type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v30 = v157;
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_87;
      }
      char v35 = **(unsigned __int8 **)(v0 + 424) == *v44;
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v171;
      goto LABEL_24;
    }
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v61 = *(void *)(v0 + 408);
      sub_100F38118(*(void *)(v0 + 384), v61, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v62 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
      unint64_t v63 = *(void *)(v61 + v62 + 8);
      uint64_t v141 = *(void *)(v61 + v62);
      int v64 = swift_getEnumCaseMultiPayload();
      uint64_t v65 = *(void *)(v0 + 408);
      if (v64 == 2)
      {
        unint64_t v146 = v63;
        uint64_t v66 = *(void *)(v0 + 320);
        uint64_t v67 = *(void *)(v0 + 328);
        uint64_t v68 = *(void *)(v0 + 304);
        uint64_t v69 = *(void *)(v0 + 312);
        uint64_t v139 = *(void *)&v44[v62];
        unint64_t v144 = *(void *)&v44[v62 + 8];
        sub_100F37878(v65, v67, type metadata accessor for CRLBoardIdentifier);
        sub_100F37878((uint64_t)v44, v66, type metadata accessor for CRLBoardIdentifier);
        char v70 = static UUID.== infix(_:_:)();
        sub_100F38118(v67, v69, type metadata accessor for CRLBoardIdentifier);
        sub_100F38118(v66, v68, type metadata accessor for CRLBoardIdentifier);
        uint64_t v72 = *(void *)(v0 + 304);
        uint64_t v71 = *(void *)(v0 + 312);
        if (v70)
        {
          uint64_t v73 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
          uint64_t v74 = *(void *)(v71 + v73);
          uint64_t v75 = *(void *)(v71 + v73 + 8);
          uint64_t v76 = (void *)(v72 + v73);
          if (v74 == *v76 && v75 == v76[1])
          {
            sub_100F38180(v72, type metadata accessor for CRLBoardIdentifier);
            sub_100F38180(v71, type metadata accessor for CRLBoardIdentifier);
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v171;
            unint64_t v29 = v144;
            unint64_t v77 = v146;
            goto LABEL_54;
          }
          char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100F38180(v72, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v71, type metadata accessor for CRLBoardIdentifier);
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v171;
          unint64_t v29 = v144;
          unint64_t v77 = v146;
          if (v78)
          {
LABEL_54:
            uint64_t v30 = v157;
            if (v141 == v139 && v77 == v29)
            {
              char v35 = 1;
              unint64_t v29 = v77;
            }
            else
            {
              char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
            }
          }
          else
          {
            char v35 = 0;
            uint64_t v30 = v157;
          }
        }
        else
        {
          sub_100F38180(*(void *)(v0 + 304), type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v71, type metadata accessor for CRLBoardIdentifier);
          char v35 = 0;
          uint64_t v30 = v157;
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v171;
          unint64_t v29 = v144;
        }
        uint64_t v37 = *(void *)(v0 + 320);
        uint64_t v36 = *(void *)(v0 + 328);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100F38180(v37, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180(v36, type metadata accessor for CRLBoardIdentifier);
        unint64_t v31 = v163;
        uint64_t v20 = &OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      uint64_t v88 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v47 = v65;
LABEL_86:
      sub_100F38180(v47, v88);
LABEL_87:
      sub_100522F00(*(void *)(v0 + 384), (uint64_t *)&unk_10167BE60);

LABEL_88:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_92:
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v136 setChildren:isa];

      swift_bridgeObjectRelease();
      BOOL v90 = 1;
LABEL_93:
      unint64_t v140 = v174;
      uint64_t v142 = *(void *)(v0 + 568);
      uint64_t v138 = *(void *)(v0 + 160);
      BOOL v135 = v90;
      id v137 = (id)v173;
LABEL_94:
      uint64_t v91 = *(BOOL **)(v0 + 192);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      *uint64_t v91 = v135;
      v91[1] = (BOOL)v163;
      v91[2] = v140;
      v91[3] = v138;
      v91[4] = v142;
      v91[5] = (BOOL)v137;
      uint64_t v92 = *(uint64_t (**)(void))(v0 + 8);
      return v92();
    }
    sub_100F38118(*(void *)(v0 + 384), *(void *)(v0 + 416), type metadata accessor for CRLBoardLibraryViewModel.Item);
    int v46 = swift_getEnumCaseMultiPayload();
    uint64_t v47 = *(void *)(v0 + 416);
    if (v46 != 1)
    {
      uint64_t v88 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      goto LABEL_86;
    }
    uint64_t v49 = *(void *)(v0 + 456);
    uint64_t v48 = *(void *)(v0 + 464);
    uint64_t v50 = *(void *)(v0 + 368);
    sub_100F37878(v47, v48, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100F37878((uint64_t)v44, v49, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v51 = v50 + *(int *)(v143 + 48);
    sub_100F38118(v48, v50, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100F38118(v49, v51, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v52 = *v154;
    unsigned int v53 = (*v154)(v50, 5, v156);
    uint64_t v30 = v157;
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v171;
    switch(v53)
    {
      case 1u:
        if (v52(v51, 5, v156) == 1) {
          goto LABEL_67;
        }
        goto LABEL_68;
      case 2u:
        if (v52(v51, 5, v156) != 2) {
          goto LABEL_68;
        }
        goto LABEL_67;
      case 3u:
        if (v52(v51, 5, v156) != 3) {
          goto LABEL_68;
        }
        goto LABEL_67;
      case 4u:
        if (v52(v51, 5, v156) != 4) {
          goto LABEL_68;
        }
        goto LABEL_67;
      case 5u:
        if (v52(v51, 5, v156) == 5) {
          goto LABEL_67;
        }
        goto LABEL_68;
      default:
        uint64_t v54 = *(void *)(v0 + 448);
        sub_100F38118(*(void *)(v0 + 368), v54, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v55 = *(int *)(v156 + 48);
        uint64_t v57 = *(void *)(v54 + v55);
        uint64_t v56 = *(void *)(v54 + v55 + 8);
        int v58 = ((uint64_t (*)(uint64_t, uint64_t))v52)(v51, 5);
        uint64_t v59 = *(void *)(v0 + 448);
        if (v58)
        {
          uint64_t v60 = *(void *)(v0 + 336);
          swift_bridgeObjectRelease();
          (*v134)(v59, v60);
          uint64_t v20 = &OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v171;
LABEL_68:
          sub_100522F00(*(void *)(v0 + 368), &qword_10167BE58);
          goto LABEL_69;
        }
        uint64_t v145 = v57;
        uint64_t v80 = *(void *)(v0 + 336);
        uint64_t v81 = *(void *)(v51 + v55);
        uint64_t v147 = *(void *)(v51 + v55 + 8);
        (*v133)(*(void *)(v0 + 352), v51, v80);
        char v82 = static UUID.== infix(_:_:)();
        uint64_t v83 = *v134;
        (*v134)(v59, v80);
        if (v82)
        {
          uint64_t v84 = *(void *)(v0 + 352);
          uint64_t v85 = *(void *)(v0 + 336);
          uint64_t v20 = &OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
          if (v145 == v81 && v56 == v147)
          {
            swift_bridgeObjectRelease_n();
            v83(v84, v85);
            uint64_t v30 = v157;
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v171;
          }
          else
          {
            char v87 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v83(v84, v85);
            uint64_t v30 = v157;
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v171;
            if ((v87 & 1) == 0)
            {
              sub_100F38180(*(void *)(v0 + 368), type metadata accessor for CRLBoardLibraryViewModel.Folder);
LABEL_69:
              char v35 = 0;
              goto LABEL_70;
            }
          }
LABEL_67:
          sub_100F38180(*(void *)(v0 + 368), type metadata accessor for CRLBoardLibraryViewModel.Folder);
          char v35 = 1;
LABEL_70:
          unint64_t v31 = v163;
          goto LABEL_71;
        }
        uint64_t v86 = *(void *)(v0 + 368);
        v83(*(void *)(v0 + 352), *(void *)(v0 + 336));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100F38180(v86, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        char v35 = 0;
        unint64_t v31 = v163;
        uint64_t v20 = &OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
        uint64_t v30 = v157;
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v171;
LABEL_71:
        uint64_t v79 = *(void *)(v0 + 464);
        unint64_t v29 = (unint64_t)type metadata accessor for CRLBoardLibraryViewModel.Folder;
        sub_100F38180(*(void *)(v0 + 456), type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100F38180(v79, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        break;
    }
LABEL_24:
    sub_100F38180(*(void *)(v0 + 384), type metadata accessor for CRLBoardLibraryViewModel.Item);

    ++v32;
    if ((v35 & 1) == 0) {
      goto LABEL_88;
    }
  }
  if (v39)
  {
LABEL_83:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    goto LABEL_92;
  }
  uint64_t isUniquelyReferenced_nonNull_native = 0;
LABEL_90:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (isUniquelyReferenced_nonNull_native)
  {

    goto LABEL_92;
  }
  uint64_t v156 = *(void *)(v0 + 248);
  uint64_t v158 = *(void *)(v0 + 296);
  uint64_t v93 = *(void *)(v0 + 224);
  uint64_t v94 = (uint64_t **)(*(void *)(v0 + 200) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata);
  swift_beginAccess();
  uint64_t v20 = *v94;
  swift_bridgeObjectRetain();
  uint64_t v95 = (void *)sub_100A3A334((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v149 = v93;
  v151 = v20 + 8;
  uint64_t v96 = -1;
  uint64_t v97 = -1 << *((unsigned char *)v20 + 32);
  if (-v97 < 64) {
    uint64_t v96 = ~(-1 << -(char)v97);
  }
  unint64_t v98 = v96 & v20[8];
  int64_t v153 = (unint64_t)(63 - v97) >> 6;
  id v155 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
  uint64_t v160 = v20;
  swift_bridgeObjectRetain();
  int64_t v99 = 0;
  while (2)
  {
    uint64_t v172 = v95;
    if (v98)
    {
      uint64_t v165 = (v98 - 1) & v98;
      int64_t v167 = v99;
      unint64_t v101 = __clz(__rbit64(v98)) | (v99 << 6);
    }
    else
    {
      int64_t v102 = v99 + 1;
      if (__OFADD__(v99, 1)) {
        goto LABEL_143;
      }
      if (v102 >= v153) {
        goto LABEL_133;
      }
      unint64_t v103 = v151[v102];
      int64_t v104 = v99 + 1;
      if (!v103)
      {
        int64_t v104 = v99 + 2;
        if (v99 + 2 >= v153) {
          goto LABEL_133;
        }
        unint64_t v103 = v151[v104];
        if (!v103)
        {
          int64_t v104 = v99 + 3;
          if (v99 + 3 >= v153) {
            goto LABEL_133;
          }
          unint64_t v103 = v151[v104];
          if (!v103)
          {
            int64_t v104 = v99 + 4;
            if (v99 + 4 >= v153) {
              goto LABEL_133;
            }
            unint64_t v103 = v151[v104];
            if (!v103)
            {
              uint64_t v105 = v99 + 5;
              if (v99 + 5 >= v153) {
                goto LABEL_133;
              }
              unint64_t v103 = v151[v105];
              if (!v103)
              {
                while (1)
                {
                  int64_t v104 = v105 + 1;
                  if (__OFADD__(v105, 1))
                  {
                    __break(1u);
                    JUMPOUT(0x100F12994);
                  }
                  if (v104 >= v153) {
                    break;
                  }
                  unint64_t v103 = v151[v104];
                  ++v105;
                  if (v103) {
                    goto LABEL_119;
                  }
                }
LABEL_133:
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                uint64_t v131 = *(void *)(v0 + 160);
                swift_bridgeObjectRetain();
                char v132 = sub_100ED69F8((uint64_t)v95, v131);
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                BOOL v90 = (v132 & 1) == 0;
                goto LABEL_93;
              }
              int64_t v104 = v99 + 5;
            }
          }
        }
      }
LABEL_119:
      uint64_t v165 = (v103 - 1) & v103;
      int64_t v167 = v104;
      unint64_t v101 = __clz(__rbit64(v103)) + (v104 << 6);
    }
    uint64_t isUniquelyReferenced_nonNull_native = *(void *)(v0 + 272);
    uint64_t v106 = *(void *)(v0 + 280);
    uint64_t v107 = *(void *)(v0 + 264);
    uint64_t v108 = *(void *)(v0 + 208);
    uint64_t v169 = *(void *)(v0 + 216);
    uint64_t v162 = *(void *)(v158 + 72);
    unint64_t v29 = (unint64_t)type metadata accessor for CRLBoardIdentifier;
    sub_100F38118(v160[6] + v162 * v101, v106, type metadata accessor for CRLBoardIdentifier);
    uint64_t v109 = v160[7];
    uint64_t v110 = (int *)(type metadata accessor for CRLBoardViewModelMetadata(0) - 8);
    sub_100F38118(v109 + *(void *)(*(void *)v110 + 72) * v101, v106 + *(int *)(v156 + 48), type metadata accessor for CRLBoardViewModelMetadata);
    sub_10051B3EC(v106, isUniquelyReferenced_nonNull_native, &qword_1016A22C8);
    uint64_t v111 = *(int *)(v156 + 48);
    uint64_t v112 = v107 + v111;
    uint64_t v113 = isUniquelyReferenced_nonNull_native + v111;
    sub_100F38118(isUniquelyReferenced_nonNull_native, v107, type metadata accessor for CRLBoardIdentifier);
    sub_100F38118(v113, v112, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v20 = (uint64_t *)&unk_1016741E0;
    sub_100522E9C(v112 + v110[9], v108, (uint64_t *)&unk_1016741E0);
    sub_100F38180(v112, type metadata accessor for CRLBoardViewModelMetadata);
    if ((*v155)(v108, 1, v169) == 1)
    {
      uint64_t v100 = *(void *)(v0 + 264);
      sub_100522F00(*(void *)(v0 + 208), (uint64_t *)&unk_1016741E0);
      sub_100F38180(v100, type metadata accessor for CRLBoardIdentifier);
      uint64_t v95 = v172;
      goto LABEL_101;
    }
    uint64_t v20 = *(uint64_t **)(v0 + 264);
    uint64_t v114 = *(void *)(v0 + 272);
    uint64_t v115 = *(void *)(v0 + 256);
    uint64_t v116 = *(void *)(v0 + 232);
    unint64_t v29 = *(void *)(v0 + 240);
    sub_100F37878(*(void *)(v0 + 208), v29, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    sub_100F38180((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
    uint64_t v117 = v115 + *(int *)(v156 + 48);
    sub_100F38118(v114, v115, type metadata accessor for CRLBoardIdentifier);
    sub_100F38118(v113, v117, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100F38118(v29, v116, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v175[0] = (uint64_t)v95;
    unint64_t v119 = sub_1009563EC(v115);
    uint64_t v120 = v95[2];
    BOOL v121 = (v118 & 1) == 0;
    uint64_t v122 = v120 + v121;
    if (__OFADD__(v120, v121)) {
      goto LABEL_142;
    }
    char v123 = v118;
    if (v95[3] >= v122)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v118) {
          goto LABEL_129;
        }
      }
      else
      {
        sub_100986014();
        uint64_t v95 = (void *)v175[0];
        if (v123) {
          goto LABEL_129;
        }
      }
LABEL_125:
      uint64_t v127 = *(void *)(v0 + 256);
      uint64_t v20 = *(uint64_t **)(v0 + 232);
      v95[(v119 >> 6) + 8] |= 1 << v119;
      sub_100F38118(v127, v95[6] + v119 * v162, type metadata accessor for CRLBoardIdentifier);
      sub_100F37878((uint64_t)v20, v95[7] + *(void *)(v149 + 72) * v119, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
      uint64_t v128 = v95[2];
      BOOL v40 = __OFADD__(v128, 1);
      uint64_t v129 = v128 + 1;
      if (v40) {
        goto LABEL_144;
      }
      v95[2] = v129;
LABEL_130:
      uint64_t v20 = *(uint64_t **)(v0 + 256);
      uint64_t v130 = *(void *)(v0 + 240);
      swift_bridgeObjectRelease();
      sub_100F38180((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180(v130, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
      sub_100F38180(v117, type metadata accessor for CRLBoardViewModelMetadata);
LABEL_101:
      unint64_t v98 = v165;
      int64_t v99 = v167;
      sub_100522F00(*(void *)(v0 + 272), &qword_1016A22C8);
      continue;
    }
    break;
  }
  uint64_t v124 = *(void *)(v0 + 256);
  sub_1009712EC(v122, isUniquelyReferenced_nonNull_native);
  uint64_t v95 = (void *)v175[0];
  unint64_t v125 = sub_1009563EC(v124);
  if ((v123 & 1) == (v126 & 1))
  {
    unint64_t v119 = v125;
    if ((v123 & 1) == 0) {
      goto LABEL_125;
    }
LABEL_129:
    sub_100F35A30(*(void *)(v0 + 232), v95[7] + *(void *)(v149 + 72) * v119, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    goto LABEL_130;
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100F129AC(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  type metadata accessor for MainActor();
  v2[13] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[14] = v4;
  v2[15] = v3;
  return _swift_task_switch(sub_100F12A44, v4, v3);
}

uint64_t sub_100F12A44()
{
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 96);
  swift_beginAccess();
  id v2 = (id)static OS_os_log.crlBoardLibrary;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Building metadata from the database", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

  *(void *)(v0 + 128) = *(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100F12B44, 0, 0);
}

uint64_t sub_100F12B44()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = swift_task_alloc();
  v0[17] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  uint64_t v4 = sub_1005057FC(&qword_1016A22E0);
  *uint64_t v3 = v0;
  v3[1] = sub_100F12C48;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 8, 0, 0, 0xD000000000000027, 0x8000000101296350, sub_100F35A00, v2, v4);
}

uint64_t sub_100F12C48()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100F12FA8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100F12D64;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100F12D64()
{
  *(void *)(v0 + 160) = *(void *)(v0 + 64);
  return _swift_task_switch(sub_100F12D88, 0, 0);
}

uint64_t sub_100F12D88()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = swift_task_alloc();
  v0[21] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[22] = v3;
  uint64_t v4 = sub_1005057FC(&qword_101677400);
  *uint64_t v3 = v0;
  v3[1] = sub_100F12E8C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 9, 0, 0, 0xD000000000000022, 0x8000000101296380, sub_100F35A08, v2, v4);
}

uint64_t sub_100F12E8C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100F132B4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100F13070;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100F12FA8()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_100F1300C, v1, v2);
}

uint64_t sub_100F1300C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F13070()
{
  *(void *)(v0 + 192) = *(void *)(v0 + 72);
  return _swift_task_switch(sub_100F13094, 0, 0);
}

uint64_t sub_100F13094()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = swift_task_alloc();
  v0[25] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[26] = v3;
  uint64_t v4 = sub_1005057FC(&qword_101691F60);
  *uint64_t v3 = v0;
  v3[1] = sub_100F13198;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 10, 0, 0, 0xD000000000000019, 0x80000001012963B0, sub_100F35A10, v2, v4);
}

uint64_t sub_100F13198()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100F13384;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100F13460;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100F132B4()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_100F13318, v1, v2);
}

uint64_t sub_100F13318()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F13384()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_100F133E8, v1, v2);
}

uint64_t sub_100F133E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F13460()
{
  v0[28] = v0[10];
  return _swift_task_switch(sub_100F13480, v0[14], v0[15]);
}

uint64_t sub_100F13480()
{
  uint64_t v1 = v0[28];
  uint64_t v12 = v0[24];
  uint64_t v13 = v0[20];
  uint64_t v2 = (void *)v0[12];
  uint64_t v3 = (void *)v0[11];
  swift_release();
  uint64_t v4 = v3[5];
  unint64_t v11 = sub_100A3A370((uint64_t)_swiftEmptyArrayStorage);
  v0[7] = v3[1];
  v0[5] = v3[2];
  uint64_t v5 = v3[3];
  v0[6] = v5;
  uint64_t v6 = v3[4];
  swift_bridgeObjectRetain();
  id v7 = v2;
  swift_bridgeObjectRetain();
  sub_1007BA66C((uint64_t)(v0 + 7));
  sub_1007BA66C((uint64_t)(v0 + 5));
  sub_1007BA66C((uint64_t)(v0 + 6));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_100F2CA50(v11, v13, v1, (uint64_t)v7, v4, v5, v6, v12);
  swift_bridgeObjectRelease();
  sub_10058EEF8((uint64_t)(v0 + 7));
  sub_10058EEF8((uint64_t)(v0 + 5));
  sub_10058EEF8((uint64_t)(v0 + 6));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v8);
}

uint64_t sub_100F13618(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v139 = (uint64_t)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v145 = (uint64_t)&v122 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v152 = (uint64_t)&v122 - v14;
  __chkstk_darwin(v13, v15);
  uint64_t v151 = (uint64_t)&v122 - v16;
  uint64_t v130 = type metadata accessor for UUID();
  uint64_t v17 = *(char **)(v130 - 8);
  __chkstk_darwin(v130, v18);
  char v126 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_1005057FC(&qword_10167BE58);
  __chkstk_darwin(v138, v20);
  uint64_t v154 = (uint64_t)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v23 = __chkstk_darwin(v146, v22);
  uint64_t v153 = (uint64_t)&v122 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v140 = (uint64_t)&v122 - v27;
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (unsigned __int8 *)&v122 - v29;
  uint64_t v159 = sub_1005057FC((uint64_t *)&unk_10167BE60);
  __chkstk_darwin(v159, v31);
  uint64_t v156 = (char **)((char *)&v122 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v35 = __chkstk_darwin(v33 - 8, v34);
  unint64_t v37 = (unint64_t)&v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v35, v38);
  uint64_t v137 = (uint64_t)&v122 - v40;
  uint64_t v42 = __chkstk_darwin(v39, v41);
  uint64_t v150 = (uint64_t)&v122 - v43;
  uint64_t v45 = __chkstk_darwin(v42, v44);
  uint64_t v149 = (uint64_t)&v122 - v46;
  __chkstk_darwin(v45, v47);
  uint64_t v49 = (char *)&v122 - v48;
  unint64_t v50 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  uint64_t v51 = sub_1005057FC(&qword_101670F30);
  uint64_t v52 = *(void **)(v51 - 8);
  unsigned int v53 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v52[7];
  uint64_t v155 = v51;
  long long v133 = v52 + 7;
  char v132 = v53;
  ((void (*)(char *, uint64_t, uint64_t))v53)(v49, 2, 5);
  v163 = v49;
  swift_bridgeObjectRetain();
  unint64_t v54 = sub_1008E81F4(1, (uint64_t (*)(id))sub_100F38910, (uint64_t)v162, v50);
  swift_bridgeObjectRelease();
  sub_100F38180((uint64_t)v49, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if (!v54)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateRecentsFolderNode(allBoardNodes:metadata:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3436, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateRecentsFolderNode(allBoardNodes:metadata:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3436);
    return 0;
  }
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v121 = swift_bridgeObjectRetain();
    uint64_t v55 = (uint64_t)sub_1006B9E48(v121);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v55 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v164 = v55;
  sub_100F2F334(&v164, a2);
  swift_bridgeObjectRelease();
  uint64_t v56 = v164;
  uint64_t v57 = &selRef_beginHandwritingModeIfNeeded;
  id v58 = [(id)v54 children];
  uint64_t v135 = type metadata accessor for CRLBoardLibraryViewModelItemNode();
  unint64_t v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v59 >> 62) {
    goto LABEL_98;
  }
  uint64_t v128 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
  swift_bridgeObjectRelease();
  id v60 = [(id)v54 v57[498]];
  unint64_t v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v136 = v61;
  if (v61 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v62 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  uint64_t v57 = v156;
  uint64_t v63 = ((unint64_t)v56 >> 62) & 1;
  if (v56 < 0) {
    LODWORD(v63) = 1;
  }
  int v127 = v63;
  uint64_t v129 = (char *)v37;
  id v131 = (id)v54;
  if (v63 == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v160 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
  }
  else
  {
    uint64_t v160 = *(void *)(v56 + 16);
  }
  unint64_t v54 = 0;
  unint64_t v37 = 0;
  unint64_t v144 = v136 & 0xC000000000000001;
  uint64_t v143 = v136 & 0xFFFFFFFFFFFFFF8;
  unint64_t v142 = v136 + 32;
  uint64_t v161 = v56;
  unint64_t v158 = v56 & 0xC000000000000001;
  uint64_t v147 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 6);
  unint64_t v125 = (void (**)(uint64_t, uint64_t))(v17 + 8);
  uint64_t v124 = (void (**)(char *, uint64_t, uint64_t))(v17 + 32);
  unint64_t v148 = v30;
  uint64_t v157 = v62;
  while (1)
  {
    if (v37 == v62)
    {
      uint64_t v17 = 0;
      uint64_t v52 = 0;
      unint64_t v37 = v62;
      uint64_t v56 = v161;
      if (v160 == v54) {
        goto LABEL_83;
      }
      goto LABEL_28;
    }
    if (v144)
    {
      uint64_t v65 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v37 & 0x8000000000000000) != 0) {
        goto LABEL_95;
      }
      if (v37 >= *(void *)(v143 + 16)) {
        goto LABEL_97;
      }
      uint64_t v65 = (char *)*(id *)(v142 + 8 * v37);
    }
    uint64_t v17 = v65;
    BOOL v66 = __OFADD__(v37++, 1);
    uint64_t v56 = v161;
    if (v66) {
      goto LABEL_96;
    }
    if (v160 == v54) {
      break;
    }
LABEL_28:
    if (v158)
    {
      uint64_t v67 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v54 >= *(void *)(v56 + 16)) {
        goto LABEL_94;
      }
      uint64_t v67 = *(id *)(v56 + 8 * v54 + 32);
    }
    uint64_t v52 = v67;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      swift_bridgeObjectRetain();
      uint64_t v128 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    if (!v17) {
      goto LABEL_83;
    }
    if (!v67) {
      goto LABEL_78;
    }
    uint64_t v68 = (uint64_t)v67 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
    uint64_t v69 = (unsigned __int8 *)v57 + *(int *)(v159 + 48);
    sub_100F38118((uint64_t)&v17[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], (uint64_t)v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100F38118(v68, (uint64_t)v69, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      sub_100F38118((uint64_t)v57, (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
      int v82 = swift_getEnumCaseMultiPayload();
      uint64_t v62 = v157;
      if (v82) {
        goto LABEL_81;
      }
      uint64_t v56 = *v30 == *v69;
      goto LABEL_18;
    }
    uint64_t v71 = v153;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v72 = v140;
      sub_100F38118((uint64_t)v57, v140, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v73 = v149;
        sub_100F37878(v72, v149, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v74 = v150;
        sub_100F37878((uint64_t)v69, v150, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v75 = v154;
        uint64_t v76 = v154 + *(int *)(v138 + 48);
        sub_100F38118(v73, v154, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100F38118(v74, v76, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        unint64_t v77 = *v147;
        unsigned int v78 = (*v147)(v75, 5, v155);
        uint64_t v30 = v148;
        uint64_t v79 = v137;
        switch(v78)
        {
          case 1u:
            if (v77(v76, 5, v155) == 1) {
              goto LABEL_54;
            }
            goto LABEL_56;
          case 2u:
            if (v77(v76, 5, v155) != 2) {
              goto LABEL_56;
            }
            goto LABEL_54;
          case 3u:
            if (v77(v76, 5, v155) != 3) {
              goto LABEL_56;
            }
            goto LABEL_54;
          case 4u:
            if (v77(v76, 5, v155) == 4) {
              goto LABEL_54;
            }
            goto LABEL_56;
          case 5u:
            if (v77(v76, 5, v155) != 5) {
              goto LABEL_56;
            }
LABEL_54:
            sub_100F38180(v154, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v56 = 1;
            goto LABEL_57;
          default:
            sub_100F38118(v154, v137, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v80 = *(int *)(v155 + 48);
            uint64_t v81 = *(void *)(v79 + v80 + 8);
            uint64_t v141 = *(void *)(v79 + v80);
            if (((unsigned int (*)(uint64_t, uint64_t))v77)(v76, 5))
            {
              swift_bridgeObjectRelease();
              (*v125)(v79, v130);
LABEL_56:
              sub_100522F00(v154, &qword_10167BE58);
              uint64_t v56 = 0;
              goto LABEL_57;
            }
            uint64_t v134 = v81;
            uint64_t v101 = *(void *)(v76 + v80 + 8);
            uint64_t v122 = *(void *)(v76 + v80);
            uint64_t v123 = v101;
            int64_t v102 = v126;
            uint64_t v103 = v130;
            (*v124)(v126, v76, v130);
            char v104 = static UUID.== infix(_:_:)();
            uint64_t v105 = *v125;
            (*v125)(v79, v103);
            if ((v104 & 1) == 0)
            {
              v105((uint64_t)v102, v103);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_100F38180(v154, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v56 = 0;
LABEL_57:
              uint64_t v57 = v156;
              goto LABEL_58;
            }
            if (v141 == v122 && v134 == v123)
            {
              swift_bridgeObjectRelease_n();
              v105((uint64_t)v126, v103);
              uint64_t v57 = v156;
LABEL_72:
              sub_100F38180(v154, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v56 = 1;
              goto LABEL_58;
            }
            LODWORD(v141) = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v105((uint64_t)v126, v103);
            uint64_t v57 = v156;
            if (v141) {
              goto LABEL_72;
            }
            sub_100F38180(v154, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v56 = 0;
LABEL_58:
            sub_100F38180(v150, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            sub_100F38180(v149, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            break;
        }
        goto LABEL_17;
      }
      sub_100F38180(v72, type metadata accessor for CRLBoardLibraryViewModel.Folder);
LABEL_81:
      sub_100522F00((uint64_t)v57, (uint64_t *)&unk_10167BE60);
      swift_bridgeObjectRelease_n();
      uint64_t v56 = v161;
      swift_release();

LABEL_85:
LABEL_86:
      id v106 = v131;
      uint64_t v107 = v132;
      int v108 = v127;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v106 setChildren:isa];

      uint64_t v110 = (uint64_t)v129;
      v107(v129, 2, 5, v155);
      if (v108)
      {
        swift_bridgeObjectRetain();
        uint64_t v111 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
      }
      else
      {
        uint64_t v111 = *(void *)(v56 + 16);
      }
      swift_release();
      if (qword_10166FA60 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v112 = (void *)static OS_os_log.crlBoardLibrary;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      id v114 = v112;
      uint64_t v115 = sub_100DD4C48();
      uint64_t v117 = v116;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v118 = sub_100528BE4();
      *(void *)(inited + 32) = v115;
      *(void *)(inited + 40) = v117;
      *(void *)(inited + 96) = &type metadata for Int;
      *(void *)(inited + 104) = &protocol witness table for Int;
      uint64_t v119 = v128;
      *(void *)(inited + 64) = v118;
      *(void *)(inited + 72) = v119;
      *(void *)(inited + 136) = &type metadata for Int;
      *(void *)(inited + 144) = &protocol witness table for Int;
      *(void *)(inited + 112) = v111;
      uint64_t v120 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v114, (uint64_t)&_mh_execute_header, v120, (uint64_t)"Updated \"%s\" library folder. Before: %d, After: %d", 50, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100F38180(v110, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      return 1;
    }
    sub_100F38118((uint64_t)v57, v153, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v83 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
    uint64_t v85 = *(void *)(v71 + v83);
    uint64_t v84 = *(void *)(v71 + v83 + 8);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      swift_bridgeObjectRelease();
      sub_100F38180(v71, type metadata accessor for CRLBoardIdentifier);
      uint64_t v57 = v156;
      goto LABEL_81;
    }
    uint64_t v86 = *(void *)&v69[v83 + 8];
    uint64_t v134 = *(void *)&v69[v83];
    uint64_t v141 = v86;
    uint64_t v87 = v71;
    uint64_t v88 = v151;
    sub_100F37878(v87, v151, type metadata accessor for CRLBoardIdentifier);
    uint64_t v89 = v152;
    sub_100F37878((uint64_t)v69, v152, type metadata accessor for CRLBoardIdentifier);
    char v90 = static UUID.== infix(_:_:)();
    uint64_t v91 = v88;
    uint64_t v92 = v145;
    sub_100F38118(v91, v145, type metadata accessor for CRLBoardIdentifier);
    uint64_t v93 = v89;
    uint64_t v94 = v92;
    uint64_t v95 = v139;
    sub_100F38118(v93, v139, type metadata accessor for CRLBoardIdentifier);
    if (v90)
    {
      uint64_t v96 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v97 = *(void *)(v94 + v96);
      uint64_t v98 = *(void *)(v94 + v96 + 8);
      int64_t v99 = (void *)(v95 + v96);
      if (v97 == *v99 && v98 == v99[1])
      {
        sub_100F38180(v95, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180(v145, type metadata accessor for CRLBoardIdentifier);
LABEL_50:
        uint64_t v30 = v148;
        if (v85 == v134 && v84 == v141) {
          uint64_t v56 = 1;
        }
        else {
          uint64_t v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        goto LABEL_16;
      }
      char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100F38180(v95, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180(v145, type metadata accessor for CRLBoardIdentifier);
      if (v100) {
        goto LABEL_50;
      }
      uint64_t v56 = 0;
    }
    else
    {
      sub_100F38180(v95, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180(v94, type metadata accessor for CRLBoardIdentifier);
      uint64_t v56 = 0;
    }
    uint64_t v30 = v148;
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100F38180(v152, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180(v151, type metadata accessor for CRLBoardIdentifier);
    uint64_t v57 = v156;
LABEL_17:
    uint64_t v62 = v157;
LABEL_18:
    sub_100F38180((uint64_t)v57, type metadata accessor for CRLBoardLibraryViewModel.Item);

    ++v54;
    if ((v56 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v56 = v161;
      swift_release();
      goto LABEL_86;
    }
  }
  if (v65)
  {
LABEL_78:
    swift_bridgeObjectRelease_n();
    swift_release();

    goto LABEL_86;
  }
  uint64_t v52 = 0;
LABEL_83:
  swift_bridgeObjectRelease();
  swift_release();
  if (v52)
  {
    swift_bridgeObjectRelease();
    goto LABEL_85;
  }
  swift_release();

  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100F14A90(unint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v155 = (uint64_t)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v161 = (uint64_t)&v139 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v139 - v15;
  __chkstk_darwin(v14, v17);
  uint64_t v166 = (uint64_t)&v139 - v18;
  uint64_t v147 = type metadata accessor for UUID();
  uint64_t v177 = *(char **)(v147 - 8);
  __chkstk_darwin(v147, v19);
  uint64_t v143 = (char *)&v139 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_1005057FC(&qword_10167BE58);
  __chkstk_darwin(v154, v21);
  uint64_t v167 = (uint64_t)&v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v24 = __chkstk_darwin(v169, v23);
  uint64_t v170 = (char *)&v139 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24, v26);
  uint64_t v157 = (uint64_t)&v139 - v28;
  __chkstk_darwin(v27, v29);
  uint64_t v156 = (unsigned __int8 *)&v139 - v30;
  uint64_t v176 = sub_1005057FC((uint64_t *)&unk_10167BE60);
  __chkstk_darwin(v176, v31);
  uint64_t v178 = (uint64_t)&v139 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v35 = __chkstk_darwin(v33 - 8, v34);
  unint64_t v37 = (char *)&v139 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v35, v38);
  uint64_t v153 = (uint64_t)&v139 - v40;
  uint64_t v42 = __chkstk_darwin(v39, v41);
  uint64_t v165 = (uint64_t)&v139 - v43;
  uint64_t v45 = __chkstk_darwin(v42, v44);
  uint64_t v164 = (uint64_t)&v139 - v46;
  __chkstk_darwin(v45, v47);
  uint64_t v49 = (char *)&v139 - v48;
  unint64_t v50 = *(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot];
  uint64_t v51 = sub_1005057FC(&qword_101670F30);
  uint64_t v52 = *(void **)(v51 - 8);
  unsigned int v53 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v52[7];
  uint64_t v168 = v51;
  uint64_t v149 = v52 + 7;
  unint64_t v148 = v53;
  ((void (*)(char *, uint64_t, uint64_t))v53)(v49, 4, 5);
  unint64_t v180 = v49;
  swift_bridgeObjectRetain();
  unint64_t v54 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_100F38910, (uint64_t)v179, v50);
  swift_bridgeObjectRelease();
  sub_100F38180((uint64_t)v49, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if (!v54)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSharedFolderNode(allBoardNodes:metadata:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3345, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSharedFolderNode(allBoardNodes:metadata:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3345);
    return 0;
  }
  id v151 = v54;
  uint64_t v146 = v37;
  unint64_t v55 = swift_bridgeObjectRetain();
  unint64_t v56 = 0;
  uint64_t v57 = sub_100F29B24(v55, a2);
  swift_bridgeObjectRelease();
  v183 = v57;
  unint64_t v58 = *(void *)(*(void *)&v3[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController]
                  + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  if (v58 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v59)
    {
LABEL_4:
      id v60 = sub_1008E93E0(a1);
      unint64_t v61 = sub_100F2CD34((uint64_t)_swiftEmptyArrayStorage, v58, (uint64_t)v60);
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  unint64_t v61 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_8:
  swift_bridgeObjectRelease();
  unint64_t v63 = sub_100A3A370((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v181 = v63;
  unint64_t v182 = v61;
  if (v61 >> 62) {
    goto LABEL_124;
  }
  uint64_t v64 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_10:
  uint64_t v152 = v16;
  if (v64)
  {
    unint64_t v65 = v61;
    while (1)
    {
      unint64_t v66 = v65 >> 62;
      if (v65 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v175 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v175)
        {
          __break(1u);
LABEL_130:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __break(1u);
          JUMPOUT(0x100F16288);
        }
        swift_bridgeObjectRetain();
        uint64_t v16 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v16) {
          goto LABEL_116;
        }
      }
      else if (!*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      if ((v65 & 0xC000000000000001) != 0)
      {
        uint64_t v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (v66) {
          goto LABEL_22;
        }
      }
      else
      {
        if (!*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_117;
        }
        uint64_t v16 = (char *)*(id *)(v65 + 32);
        if (v66)
        {
LABEL_22:
          swift_bridgeObjectRetain();
          uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }
      uint64_t v67 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_23:
      if (!v67) {
        goto LABEL_118;
      }
      sub_100F4CA70(0, 1);
      id v68 = [v16 children];
      type metadata accessor for CRLBoardLibraryViewModelItemNode();
      unint64_t v69 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1006E0C58(v69);
      sub_100F1B4F4((uint64_t)&v181, (uint64_t)v16, v3, a2);

      unint64_t v65 = v182;
      if (v56) {
        goto LABEL_130;
      }
      if (v182 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v16)
        {
LABEL_29:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v63 = v181;
          uint64_t v16 = v152;
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v16 = *(char **)((v182 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v16) {
          goto LABEL_29;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  unint64_t v70 = swift_bridgeObjectRetain();
  uint64_t v71 = sub_100F2A088(v70, (uint64_t *)&v183);
  swift_bridgeObjectRelease();
  sub_1006E0C58((unint64_t)v71);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v181 = *a2;
  *a2 = 0x8000000000000000;
  sub_100F20480(v63, (uint64_t)sub_100F203EC, 0, isUniquelyReferenced_nonNull_native, &v181);
  *a2 = v181;
  swift_bridgeObjectRelease();
  id v73 = v151;
  id v74 = [v151 children];
  unint64_t v61 = type metadata accessor for CRLBoardLibraryViewModelItemNode();
  unint64_t v75 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v75 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v145 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v145 = *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = v170;
  swift_bridgeObjectRelease();
  id v76 = [v73 children];
  unint64_t v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v56 = (unint64_t)v183;
  if (v77 >> 62)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v78 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
  }
  unint64_t v150 = v77;
  uint64_t v171 = v78;
  unint64_t v144 = v61;
  uint64_t v173 = v56 & 0xFFFFFFFFFFFFFF8;
  if (v56 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v78 = v171;
    uint64_t v175 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v175 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v63 = 0;
  a2 = 0;
  unint64_t v160 = v150 & 0xC000000000000001;
  uint64_t v159 = v150 & 0xFFFFFFFFFFFFFF8;
  unint64_t v158 = v150 + 32;
  unint64_t v174 = v56 & 0xC000000000000001;
  v163 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 6);
  unint64_t v142 = (void (**)(uint64_t, uint64_t))(v177 + 8);
  uint64_t v141 = (void (**)(char *, uint64_t, uint64_t))(v177 + 32);
  unint64_t v172 = v56;
  while (1)
  {
    if (a2 == (uint64_t *)v78)
    {
      unint64_t v61 = 0;
      uint64_t v52 = 0;
      a2 = (uint64_t *)v78;
      if (v175 == v63) {
        goto LABEL_107;
      }
      goto LABEL_51;
    }
    if (v160)
    {
      id v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (((unint64_t)a2 & 0x8000000000000000) != 0) {
        goto LABEL_121;
      }
      if ((unint64_t)a2 >= *(void *)(v159 + 16)) {
        goto LABEL_123;
      }
      id v79 = *(id *)(v158 + 8 * (void)a2);
    }
    unint64_t v61 = (unint64_t)v79;
    BOOL v80 = __OFADD__(a2, 1);
    a2 = (uint64_t *)((char *)a2 + 1);
    if (v80) {
      goto LABEL_122;
    }
    if (v175 == v63) {
      break;
    }
LABEL_51:
    if (v174)
    {
      uint64_t v81 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v63 >= *(void *)(v173 + 16)) {
        goto LABEL_119;
      }
      uint64_t v81 = *(id *)(v56 + 8 * v63 + 32);
    }
    uint64_t v52 = v81;
    if (__OFADD__(v63, 1)) {
      goto LABEL_120;
    }
    if (!v61) {
      goto LABEL_107;
    }
    if (!v81) {
      goto LABEL_101;
    }
    uint64_t v177 = (char *)v61;
    uint64_t v82 = v61 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
    uint64_t v83 = (uint64_t)v52 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
    uint64_t v84 = (unsigned __int8 *)(v178 + *(int *)(v176 + 48));
    sub_100F38118(v82, v178, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100F38118(v83, (uint64_t)v84, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      uint64_t v97 = v156;
      sub_100F38118(v178, (uint64_t)v156, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_105;
      }
      unint64_t v61 = *v97 == *v84;
      goto LABEL_40;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v86 = v157;
      sub_100F38118(v178, v157, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v87 = v164;
        sub_100F37878(v86, v164, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v88 = v165;
        sub_100F37878((uint64_t)v84, v165, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v89 = v167;
        uint64_t v90 = v167 + *(int *)(v154 + 48);
        sub_100F38118(v87, v167, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100F38118(v88, v90, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v91 = *v163;
        unsigned int v92 = (*v163)(v89, 5, v168);
        uint64_t v93 = v153;
        switch(v92)
        {
          case 1u:
            BOOL v116 = v91(v90, 5, v168) == 1;
            goto LABEL_80;
          case 2u:
            BOOL v116 = v91(v90, 5, v168) == 2;
            goto LABEL_80;
          case 3u:
            BOOL v116 = v91(v90, 5, v168) == 3;
            goto LABEL_80;
          case 4u:
            BOOL v116 = v91(v90, 5, v168) == 4;
            goto LABEL_80;
          case 5u:
            BOOL v116 = v91(v90, 5, v168) == 5;
LABEL_80:
            unint64_t v56 = v172;
            if (!v116) {
              goto LABEL_83;
            }
            sub_100F38180(v167, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            unint64_t v61 = 1;
            goto LABEL_84;
          default:
            sub_100F38118(v167, v153, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v94 = *(int *)(v168 + 48);
            uint64_t v96 = *(void *)(v93 + v94);
            uint64_t v95 = *(void *)(v93 + v94 + 8);
            if (((unsigned int (*)(uint64_t, uint64_t))v91)(v90, 5))
            {
              swift_bridgeObjectRelease();
              (*v142)(v93, v147);
              unint64_t v56 = v172;
LABEL_83:
              sub_100522F00(v167, &qword_10167BE58);
              unint64_t v61 = 0;
LABEL_84:
              uint64_t v3 = v170;
LABEL_85:
              sub_100F38180(v165, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              sub_100F38180(v164, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              goto LABEL_41;
            }
            uint64_t v140 = v96;
            uint64_t v117 = *(void *)(v90 + v94 + 8);
            uint64_t v139 = *(void *)(v90 + v94);
            uint64_t v162 = v117;
            unint64_t v118 = v143;
            uint64_t v119 = v147;
            (*v141)(v143, v90, v147);
            char v120 = static UUID.== infix(_:_:)();
            unint64_t v121 = *v142;
            (*v142)(v93, v119);
            if (v120)
            {
              if (v140 == v139 && v95 == v162)
              {
                swift_bridgeObjectRelease_n();
                v121((uint64_t)v143, v147);
                uint64_t v3 = v170;
              }
              else
              {
                char v122 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v121((uint64_t)v143, v147);
                uint64_t v3 = v170;
                if ((v122 & 1) == 0)
                {
                  sub_100F38180(v167, type metadata accessor for CRLBoardLibraryViewModel.Folder);
                  unint64_t v61 = 0;
                  goto LABEL_96;
                }
              }
              sub_100F38180(v167, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              unint64_t v61 = 1;
            }
            else
            {
              v121((uint64_t)v118, v119);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_100F38180(v167, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              unint64_t v61 = 0;
              uint64_t v3 = v170;
            }
LABEL_96:
            unint64_t v56 = v172;
            goto LABEL_85;
        }
      }
      uint64_t v123 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      uint64_t v124 = v86;
LABEL_104:
      sub_100F38180(v124, v123);
LABEL_105:
      sub_100522F00(v178, (uint64_t *)&unk_10167BE60);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      goto LABEL_108;
    }
    sub_100F38118(v178, (uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v98 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
    uint64_t v100 = *(void *)&v3[v98];
    uint64_t v99 = *(void *)&v3[v98 + 8];
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      swift_bridgeObjectRelease();
      uint64_t v123 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v124 = (uint64_t)v3;
      goto LABEL_104;
    }
    uint64_t v101 = &v84[v98];
    uint64_t v102 = *(void *)&v84[v98];
    uint64_t v162 = *((void *)v101 + 1);
    uint64_t v103 = (uint64_t)v3;
    uint64_t v104 = v166;
    sub_100F37878(v103, v166, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878((uint64_t)v84, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    char v105 = static UUID.== infix(_:_:)();
    uint64_t v106 = v104;
    uint64_t v107 = v161;
    sub_100F38118(v106, v161, type metadata accessor for CRLBoardIdentifier);
    uint64_t v108 = (uint64_t)v16;
    uint64_t v109 = v107;
    uint64_t v110 = v155;
    sub_100F38118(v108, v155, type metadata accessor for CRLBoardIdentifier);
    if (v105)
    {
      uint64_t v111 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v112 = *(void *)(v109 + v111);
      uint64_t v113 = *(void *)(v109 + v111 + 8);
      id v114 = (void *)(v110 + v111);
      if (v112 == *v114 && v113 == v114[1])
      {
        sub_100F38180(v110, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180(v161, type metadata accessor for CRLBoardIdentifier);
        uint64_t v16 = v152;
LABEL_72:
        uint64_t v3 = v170;
        if (v100 == v102 && v99 == v162) {
          unint64_t v61 = 1;
        }
        else {
          unint64_t v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        goto LABEL_39;
      }
      char v115 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100F38180(v110, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180(v161, type metadata accessor for CRLBoardIdentifier);
      uint64_t v16 = v152;
      if (v115) {
        goto LABEL_72;
      }
      unint64_t v61 = 0;
    }
    else
    {
      sub_100F38180(v110, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180(v109, type metadata accessor for CRLBoardIdentifier);
      unint64_t v61 = 0;
      uint64_t v16 = v152;
    }
    uint64_t v3 = v170;
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100F38180((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180(v166, type metadata accessor for CRLBoardIdentifier);
LABEL_40:
    unint64_t v56 = v172;
LABEL_41:
    sub_100F38180(v178, type metadata accessor for CRLBoardLibraryViewModel.Item);

    ++v63;
    uint64_t v78 = v171;
    if ((v61 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_109;
    }
  }
  if (v79)
  {
LABEL_101:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    goto LABEL_109;
  }
  uint64_t v52 = 0;
LABEL_107:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (v52)
  {
LABEL_108:

LABEL_109:
    id v125 = v151;
    unint64_t v126 = (unint64_t)v183;
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v125 setChildren:isa];

    uint64_t v128 = (uint64_t)v146;
    v148(v146, 4, 5, v168);
    if (v126 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v129 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v129 = *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v130 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    id v132 = v130;
    uint64_t v133 = sub_100DD4C48();
    uint64_t v135 = v134;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v136 = sub_100528BE4();
    *(void *)(inited + 32) = v133;
    *(void *)(inited + 40) = v135;
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 104) = &protocol witness table for Int;
    uint64_t v137 = v145;
    *(void *)(inited + 64) = v136;
    *(void *)(inited + 72) = v137;
    *(void *)(inited + 136) = &type metadata for Int;
    *(void *)(inited + 144) = &protocol witness table for Int;
    *(void *)(inited + 112) = v129;
    uint64_t v138 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v132, (uint64_t)&_mh_execute_header, v138, (uint64_t)"Updated \"%s\" library folder. Before: %d, After: %d", 50, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100F38180(v128, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    return 1;
  }
  else
  {

    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_100F162A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v142 = (uint64_t)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v148 = (uint64_t)&v125 - v10;
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v151 = (uint64_t)&v125 - v13;
  __chkstk_darwin(v12, v14);
  uint64_t v154 = (uint64_t)&v125 - v15;
  unint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(unsigned __int8 **)(v16 - 8);
  __chkstk_darwin(v16, v18);
  id v131 = (char *)&v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1005057FC(&qword_10167BE58);
  __chkstk_darwin(v141, v20);
  uint64_t v156 = (uint64_t)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v23 = __chkstk_darwin(v160, v22);
  uint64_t v155 = (uint64_t)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v143 = (uint64_t)&v125 - v27;
  __chkstk_darwin(v26, v28);
  uint64_t v159 = (char *)&v125 - v29;
  uint64_t v163 = sub_1005057FC((uint64_t *)&unk_10167BE60);
  __chkstk_darwin(v163, v30);
  uint64_t v32 = (char *)&v125 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v35 = __chkstk_darwin(v33 - 8, v34);
  uint64_t v37 = (uint64_t)&v125 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v35, v38);
  uint64_t v144 = (uint64_t)&v125 - v40;
  uint64_t v42 = __chkstk_darwin(v39, v41);
  uint64_t v153 = (uint64_t)&v125 - v43;
  uint64_t v45 = __chkstk_darwin(v42, v44);
  uint64_t v152 = (uint64_t)&v125 - v46;
  __chkstk_darwin(v45, v47);
  uint64_t v49 = (char *)&v125 - v48;
  unint64_t v50 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  uint64_t v51 = sub_1005057FC(&qword_101670F30);
  uint64_t v52 = *(char **)(v51 - 8);
  unsigned int v53 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*((void *)v52 + 7);
  uint64_t v158 = v51;
  uint64_t v137 = v52 + 56;
  unint64_t v136 = v53;
  ((void (*)(char *, uint64_t, uint64_t))v53)(v49, 3, 5);
  uint64_t v168 = v49;
  swift_bridgeObjectRetain();
  unint64_t v54 = sub_1008E81F4(1, (uint64_t (*)(id))sub_100F38910, (uint64_t)v167, v50);
  swift_bridgeObjectRelease();
  sub_100F38180((uint64_t)v49, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if (!v54)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateFavoritesFolderNode(allBoardNodes:metadata:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3407, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateFavoritesFolderNode(allBoardNodes:metadata:)", 50, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3407);
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v55 = swift_bridgeObjectRetain();
  uint64_t v157 = sub_100F2A31C(v55, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v56 = &selRef_beginHandwritingModeIfNeeded;
  id v57 = [(id)v54 children];
  uint64_t v139 = type metadata accessor for CRLBoardLibraryViewModelItemNode();
  unint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v58 >> 62) {
    goto LABEL_95;
  }
  uint64_t v132 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
  swift_bridgeObjectRelease();
  id v59 = [(id)v54 v56[498]];
  unint64_t v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v140 = v60;
  if (v60 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v56 = (char **)v157;
    swift_bridgeObjectRetain();
    uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v56 = (char **)v157;
    swift_bridgeObjectRetain();
  }
  unint64_t v130 = v16;
  unint64_t v133 = (unint64_t)v56 >> 62;
  uint64_t v161 = v61;
  uint64_t v134 = v37;
  id v135 = (id)v54;
  uint64_t v165 = (unint64_t)v56 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v56 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = v161;
    uint64_t v164 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v164 = *(void *)(((unint64_t)v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v16 = 0;
  unint64_t v54 = 0;
  unint64_t v147 = v140 & 0xC000000000000001;
  uint64_t v146 = v140 & 0xFFFFFFFFFFFFFF8;
  unint64_t v145 = v140 + 32;
  unint64_t v162 = (unint64_t)v56 & 0xC000000000000001;
  unint64_t v150 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  uint64_t v129 = (void (**)(uint64_t, unint64_t))(v17 + 8);
  uint64_t v128 = (void (**)(char *, uint64_t, unint64_t))(v17 + 32);
  uint64_t v17 = (unsigned __int8 *)v159;
  while (1)
  {
    if (v54 == v61)
    {
      uint64_t v64 = 0;
      uint64_t v52 = 0;
      unint64_t v54 = v61;
      if (v164 == v16) {
        goto LABEL_80;
      }
      goto LABEL_24;
    }
    if (v147)
    {
      id v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v54 & 0x8000000000000000) != 0) {
        goto LABEL_92;
      }
      if (v54 >= *(void *)(v146 + 16)) {
        goto LABEL_93;
      }
      id v65 = *(id *)(v145 + 8 * v54);
    }
    uint64_t v64 = v65;
    if (__OFADD__(v54++, 1)) {
      goto LABEL_94;
    }
    if (v164 == v16) {
      break;
    }
LABEL_24:
    if (v162)
    {
      uint64_t v67 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v16 >= *(void *)(v165 + 16))
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        swift_bridgeObjectRetain();
        uint64_t v132 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      uint64_t v67 = v56[v16 + 4];
    }
    uint64_t v52 = v67;
    if (__OFADD__(v16, 1)) {
      goto LABEL_91;
    }
    if (!v64) {
      goto LABEL_80;
    }
    if (!v67) {
      goto LABEL_74;
    }
    id v166 = v64;
    uint64_t v68 = (uint64_t)&v67[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item];
    unint64_t v69 = &v32[*(int *)(v163 + 48)];
    sub_100F38118((uint64_t)v64 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100F38118(v68, (uint64_t)v69, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      sub_100F38118((uint64_t)v32, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
      int v84 = swift_getEnumCaseMultiPayload();
      uint64_t v61 = v161;
      if (v84) {
        goto LABEL_78;
      }
      uint64_t v37 = *v17 == *v69;
      goto LABEL_13;
    }
    uint64_t v71 = (uint64_t)v32;
    uint64_t v72 = v155;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v72 = v143;
      sub_100F38118(v71, v143, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v73 = v152;
        sub_100F37878(v72, v152, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v74 = v153;
        sub_100F37878((uint64_t)v69, v153, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v75 = v156;
        uint64_t v76 = v156 + *(int *)(v141 + 48);
        sub_100F38118(v73, v156, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        sub_100F38118(v74, v76, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        unint64_t v77 = *v150;
        unsigned int v78 = (*v150)(v75, 5, v158);
        uint64_t v32 = (char *)v71;
        uint64_t v79 = v144;
        switch(v78)
        {
          case 1u:
            BOOL v102 = v77(v76, 5, v158) == 1;
            goto LABEL_53;
          case 2u:
            BOOL v102 = v77(v76, 5, v158) == 2;
            goto LABEL_53;
          case 3u:
            BOOL v102 = v77(v76, 5, v158) == 3;
            goto LABEL_53;
          case 4u:
            BOOL v102 = v77(v76, 5, v158) == 4;
            goto LABEL_53;
          case 5u:
            BOOL v102 = v77(v76, 5, v158) == 5;
LABEL_53:
            uint64_t v17 = (unsigned __int8 *)v159;
            id v63 = v166;
            if (!v102) {
              goto LABEL_56;
            }
            sub_100F38180(v156, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v37 = 1;
            goto LABEL_57;
          default:
            sub_100F38118(v156, v144, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v80 = *(int *)(v158 + 48);
            uint64_t v82 = *(void *)(v79 + v80);
            uint64_t v81 = *(void *)(v79 + v80 + 8);
            int v83 = ((uint64_t (*)(uint64_t, uint64_t))v77)(v76, 5);
            uint64_t v17 = (unsigned __int8 *)v159;
            if (v83)
            {
              swift_bridgeObjectRelease();
              (*v129)(v144, v130);
              id v63 = v166;
LABEL_56:
              sub_100522F00(v156, &qword_10167BE58);
              uint64_t v37 = 0;
LABEL_57:
              unint64_t v56 = (char **)v157;
LABEL_58:
              sub_100F38180(v153, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              sub_100F38180(v152, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v61 = v161;
              goto LABEL_14;
            }
            uint64_t v127 = v82;
            uint64_t v149 = v81;
            uint64_t v103 = *(void *)(v76 + v80 + 8);
            uint64_t v126 = *(void *)(v76 + v80);
            uint64_t v138 = v103;
            uint64_t v104 = v131;
            unint64_t v105 = v130;
            (*v128)(v131, v76, v130);
            uint64_t v106 = v144;
            char v107 = static UUID.== infix(_:_:)();
            uint64_t v108 = *v129;
            (*v129)(v106, v105);
            if (v107)
            {
              if (v127 == v126 && v149 == v138)
              {
                swift_bridgeObjectRelease_n();
                v108((uint64_t)v131, v130);
                unint64_t v56 = (char **)v157;
              }
              else
              {
                char v109 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v108((uint64_t)v131, v130);
                unint64_t v56 = (char **)v157;
                if ((v109 & 1) == 0)
                {
                  sub_100F38180(v156, type metadata accessor for CRLBoardLibraryViewModel.Folder);
                  uint64_t v37 = 0;
                  goto LABEL_69;
                }
              }
              sub_100F38180(v156, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v37 = 1;
            }
            else
            {
              v108((uint64_t)v104, v105);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_100F38180(v156, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v37 = 0;
              unint64_t v56 = (char **)v157;
            }
LABEL_69:
            id v63 = v166;
            goto LABEL_58;
        }
      }
      uint64_t v110 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
LABEL_77:
      sub_100F38180(v72, v110);
      uint64_t v32 = (char *)v71;
LABEL_78:
      sub_100522F00((uint64_t)v32, (uint64_t *)&unk_10167BE60);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

      goto LABEL_82;
    }
    sub_100F38118(v71, v155, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v85 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
    uint64_t v87 = *(void *)(v72 + v85);
    uint64_t v86 = *(void *)(v72 + v85 + 8);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      swift_bridgeObjectRelease();
      uint64_t v110 = type metadata accessor for CRLBoardIdentifier;
      goto LABEL_77;
    }
    uint64_t v88 = *(void *)&v69[v85 + 8];
    uint64_t v138 = *(void *)&v69[v85];
    uint64_t v149 = v88;
    uint64_t v89 = v154;
    sub_100F37878(v72, v154, type metadata accessor for CRLBoardIdentifier);
    uint64_t v90 = v151;
    sub_100F37878((uint64_t)v69, v151, type metadata accessor for CRLBoardIdentifier);
    char v91 = static UUID.== infix(_:_:)();
    uint64_t v92 = v89;
    uint64_t v93 = v148;
    sub_100F38118(v92, v148, type metadata accessor for CRLBoardIdentifier);
    uint64_t v94 = v90;
    uint64_t v95 = v93;
    uint64_t v96 = v142;
    sub_100F38118(v94, v142, type metadata accessor for CRLBoardIdentifier);
    if (v91)
    {
      uint64_t v97 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v98 = *(void *)(v95 + v97);
      uint64_t v99 = *(void *)(v95 + v97 + 8);
      uint64_t v100 = (void *)(v96 + v97);
      if (v98 == *v100 && v99 == v100[1])
      {
        sub_100F38180(v96, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180(v148, type metadata accessor for CRLBoardIdentifier);
        uint64_t v101 = v151;
        uint64_t v32 = (char *)v71;
LABEL_45:
        uint64_t v17 = (unsigned __int8 *)v159;
        if (v87 == v138 && v86 == v149) {
          uint64_t v37 = 1;
        }
        else {
          uint64_t v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        goto LABEL_12;
      }
      LODWORD(v127) = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100F38180(v96, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180(v148, type metadata accessor for CRLBoardIdentifier);
      uint64_t v101 = v151;
      uint64_t v32 = (char *)v71;
      if (v127) {
        goto LABEL_45;
      }
      uint64_t v37 = 0;
    }
    else
    {
      sub_100F38180(v96, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180(v95, type metadata accessor for CRLBoardIdentifier);
      uint64_t v37 = 0;
      uint64_t v101 = v151;
      uint64_t v32 = (char *)v71;
    }
    uint64_t v17 = (unsigned __int8 *)v159;
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100F38180(v101, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180(v154, type metadata accessor for CRLBoardIdentifier);
    unint64_t v56 = (char **)v157;
    uint64_t v61 = v161;
LABEL_13:
    id v63 = v166;
LABEL_14:
    sub_100F38180((uint64_t)v32, type metadata accessor for CRLBoardLibraryViewModel.Item);

    ++v16;
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_83;
    }
  }
  if (v65)
  {
LABEL_74:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();

    goto LABEL_83;
  }
  uint64_t v52 = 0;
LABEL_80:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v52)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
LABEL_82:

LABEL_83:
  id v111 = v135;
  uint64_t v112 = v136;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v111 setChildren:isa];

  uint64_t v114 = v134;
  v112(v134, 3, 5, v158);
  if (v133)
  {
    swift_bridgeObjectRetain();
    uint64_t v115 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v115 = *(void *)(v165 + 16);
  }
  swift_bridgeObjectRelease();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  BOOL v116 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v118 = v116;
  uint64_t v119 = sub_100DD4C48();
  uint64_t v121 = v120;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v122 = sub_100528BE4();
  *(void *)(inited + 32) = v119;
  *(void *)(inited + 40) = v121;
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  uint64_t v123 = v132;
  *(void *)(inited + 64) = v122;
  *(void *)(inited + 72) = v123;
  *(void *)(inited + 136) = &type metadata for Int;
  *(void *)(inited + 144) = &protocol witness table for Int;
  *(void *)(inited + 112) = v115;
  uint64_t v124 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v118, (uint64_t)&_mh_execute_header, v124, (uint64_t)"Updated \"%s\" library folder. Before: %d, After: %d", 50, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100F38180(v114, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return 1;
}

uint64_t sub_100F17788()
{
  v1[49] = v0;
  v1[50] = sub_1005057FC(&qword_10167BE58);
  v1[51] = swift_task_alloc();
  v1[52] = sub_1005057FC((uint64_t *)&unk_10167BE60);
  v1[53] = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  v1[58] = type metadata accessor for CRLBoardIdentifierStorage(0);
  v1[59] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v1[60] = swift_task_alloc();
  v1[61] = swift_task_alloc();
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  v1[65] = type metadata accessor for CRLBoardCRDTData(0);
  v1[66] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for UUID();
  v1[67] = v2;
  v1[68] = *(void *)(v2 - 8);
  v1[69] = swift_task_alloc();
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v1[72] = v3;
  v1[73] = *(void *)(v3 - 8);
  v1[74] = swift_task_alloc();
  v1[75] = swift_task_alloc();
  v1[76] = swift_task_alloc();
  v1[77] = swift_task_alloc();
  v1[78] = swift_task_alloc();
  v1[79] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[80] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[81] = v5;
  v1[82] = v4;
  return _swift_task_switch(sub_100F17AB4, v5, v4);
}

uint64_t sub_100F17AB4()
{
  unint64_t v1 = *(void *)(v0[49] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1008E9BF8(1, 0, v1);
  v0[83] = v2;
  swift_bridgeObjectRelease();
  if (v2)
  {
    v0[84] = *(void *)(v0[49] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    return _swift_task_switch(sub_100F17D7C, 0, 0);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateRecentlyDeletedFolderNode()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3476, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateRecentlyDeletedFolderNode()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3476);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3(0);
  }
}

uint64_t sub_100F17D7C()
{
  uint64_t v1 = v0[84];
  uint64_t v2 = swift_task_alloc();
  v0[85] = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = -1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[86] = v3;
  uint64_t v4 = sub_1005057FC(&qword_1016A22C0);
  *uint64_t v3 = v0;
  v3[1] = sub_100F17E84;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 48, 0, 0, 0xD00000000000002ALL, 0x80000001012961C0, sub_100F359F8, v2, v4);
}

uint64_t sub_100F17E84()
{
  *(void *)(*(void *)v1 + 696) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100F19D08;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100F17FA0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100F17FA0()
{
  v0[88] = v0[48];
  return _swift_task_switch(sub_100F17FC4, v0[81], v0[82]);
}

uint64_t sub_100F17FC4()
{
  v220 = v0;
  unint64_t v4 = v0[88];
  swift_release();
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    v217 = v0;
    if (v5) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v29 = _swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v217 = v0;
  if (!v5) {
    goto LABEL_21;
  }
LABEL_3:
  v219[0] = (unint64_t)_swiftEmptyArrayStorage;
  sub_1006BB704(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0) {
    goto LABEL_177;
  }
  uint64_t v6 = 0;
  Class v205 = (Class)v0[73];
  uint64_t v7 = v0[68];
  uint64_t v202 = v0[58];
  uint64_t v189 = v0[88] + 32;
  v198 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  unint64_t v200 = v4 & 0xC000000000000001;
  v194 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v190 = v5;
  v192 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  do
  {
    uint64_t v209 = v6;
    if (v200)
    {
      uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v8 = *(void *)(v189 + 8 * v6);
      swift_retain();
    }
    uint64_t v9 = v0[71];
    uint64_t v10 = v0[70];
    uint64_t v11 = v0[67];
    uint64_t v12 = v0[66];
    uint64_t v13 = v8 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v215 = v13;
    sub_100F38118(v13, v12, type metadata accessor for CRLBoardCRDTData);
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100F38180(v12, type metadata accessor for CRLBoardCRDTData);
    uint64_t v15 = *(void *)(v8 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    unint64_t v14 = *(void *)(v8 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
    (*v198)(v10, v9, v11);
    BOOL v17 = v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v16;
    if (v17
      || (char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          (v18 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = 0;
      unint64_t v14 = 0xE000000000000000;
    }
    uint64_t v19 = v0[79];
    uint64_t v20 = v0[71];
    uint64_t v21 = v0[70];
    uint64_t v22 = v0[67];
    uint64_t v23 = v0[66];
    uint64_t v24 = v0[64];
    uint64_t v25 = v217[59];
    v211 = (void *)(v19 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
    (*v194)(v20, v22);
    (*v192)(v25, v21, v22);
    uint64_t v26 = (void *)(v25 + *(int *)(v202 + 20));
    *uint64_t v26 = v15;
    v26[1] = v14;
    uint64_t v0 = v217;
    sub_100F37878(v25, v24, type metadata accessor for CRLBoardIdentifierStorage);
    sub_100F37878(v24, v19, type metadata accessor for CRLBoardIdentifier);
    sub_100F38118(v215, v23, type metadata accessor for CRLBoardCRDTData);
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    uint64_t v27 = v217[45];
    uint64_t v28 = v217[46];
    sub_100F38180(v23, type metadata accessor for CRLBoardCRDTData);
    void *v211 = v27;
    v211[1] = v28;
    swift_storeEnumTagMultiPayload();
    swift_release();
    uint64_t v29 = (double *)v219[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1006BB704(0, *(void *)(v219[0] + 16) + 1, 1);
      uint64_t v29 = (double *)v219[0];
    }
    unint64_t v31 = *((void *)v29 + 2);
    unint64_t v30 = *((void *)v29 + 3);
    if (v31 >= v30 >> 1)
    {
      sub_1006BB704(v30 > 1, v31 + 1, 1);
      uint64_t v29 = (double *)v219[0];
    }
    uint64_t v32 = v217[79];
    uint64_t v6 = v209 + 1;
    *((void *)v29 + 2) = v31 + 1;
    sub_100F37878(v32, (uint64_t)v29+ ((*((unsigned __int8 *)v205 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v205 + 80))+ *((void *)v205 + 9) * v31, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  while (v190 != v209 + 1);
  swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v33 = v0;
  uint64_t v34 = v0[87];
  v219[0] = (unint64_t)v29;
  swift_bridgeObjectRetain();
  sub_100F20934(v219);
  if (v34)
  {
    return swift_release();
  }
  uint64_t v36 = (void *)v0[83];
  uint64_t v37 = v33[57];
  swift_bridgeObjectRelease();
  unint64_t v38 = v219[0];
  id v39 = [v36 children];
  uint64_t v40 = (objc_class *)type metadata accessor for CRLBoardLibraryViewModelItemNode();
  unint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v42 = sub_1005057FC(&qword_101670F30);
  uint64_t v43 = *(char **)(v42 - 8);
  uint64_t v216 = v42;
  v214 = (void (*)(uint64_t, uint64_t, uint64_t))*((void *)v43 + 7);
  v214(v37, 5, 5);
  uint64_t v44 = swift_task_alloc();
  *(void *)(v44 + 16) = v37;
  unint64_t v3 = sub_1008E81F4(1, (uint64_t (*)(id))sub_10062DB78, v44, v41);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_100F38180(v37, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v45 = v33;
  unint64_t v203 = v38;
  v206 = v40;
  if (!v3)
  {
    if (!*(void *)(v38 + 16))
    {
      uint64_t v92 = (void *)v33[83];
      goto LABEL_173;
    }
    uint64_t v60 = v33[78];
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v214)(v60, 5, 5, v216);
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = (char *)objc_allocWithZone(v40);
    *(void *)&v61[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
    sub_100F38118(v60, (uint64_t)&v61[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);
    v45[41] = v61;
    v45[42] = v40;
    [v45 init];
    sub_100F38180(v60, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v63 = *(void *)(v38 + 16);
    if (v63)
    {
      uint64_t v64 = v45[73];
      v219[0] = (unint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v65 = v38 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
      uint64_t v66 = *(void *)(v64 + 72);
      do
      {
        uint64_t v67 = v45[78];
        uint64_t v68 = v45[77];
        sub_100F38118(v65, v67, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100F38118(v67, v68, type metadata accessor for CRLBoardLibraryViewModel.Item);
        unint64_t v69 = (char *)objc_allocWithZone(v40);
        *(void *)&v69[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
        sub_100F38118(v68, (uint64_t)&v69[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);
        v45[43] = v69;
        v45[44] = v40;
        [super init];
        sub_100F38180(v68, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100F38180(v67, type metadata accessor for CRLBoardLibraryViewModel.Item);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v65 += v66;
        --v63;
      }
      while (v63);
      unint64_t v3 = 0;
    }
    unint64_t v70 = v217;
    uint64_t v71 = (void *)v217[83];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v73 = (SEL *)&selRef_screenScaleDidChange;
    [v62 setChildren:isa];

    id v74 = v62;
    id v75 = [v71 children];
    uint64_t v76 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v219[0] = (unint64_t)v76;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v219[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v219[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_195;
    }
    goto LABEL_44;
  }
  id v46 = [(id)v3 children];
  unint64_t v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v47 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v188 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v188 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v48 = *(void *)(v38 + 16);
  unint64_t v187 = v3;
  if (!v48)
  {
    uint64_t v79 = (void *)v33[83];
    uint64_t v80 = (char *)(id)v3;
    id v81 = [v79 children];
    unint64_t v82 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v219[0] = v82;
    unint64_t v3 = v82 >> 62;
    v212 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v80;
    if (v82 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
      if (v83) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v83 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v83)
      {
LABEL_47:
        uint64_t v84 = 0;
        unint64_t v70 = &OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
        while (1)
        {
          id v85 = (v82 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(v82 + 8 * v84 + 32);
          uint64_t v86 = v85;
          uint64_t v87 = v217[78];
          uint64_t v2 = (uint64_t)v85 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v214)(v87, 5, 5, v216);
          swift_storeEnumTagMultiPayload();
          unint64_t v1 = sub_100DDCC28(v2, v87);
          sub_100F38180(v87, type metadata accessor for CRLBoardLibraryViewModel.Item);

          if (v1) {
            break;
          }
          uint64_t v88 = v84 + 1;
          if (__OFADD__(v84, 1)) {
            goto LABEL_176;
          }
          ++v84;
          if (v88 == v83) {
            goto LABEL_54;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v93 = v84 + 1;
        if (__OFADD__(v84, 1))
        {
          __break(1u);
        }
        else if (!v3)
        {
          if (v93 == *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_56;
          }
LABEL_63:
          unint64_t v3 = v84 + 5;
          while (1)
          {
            unint64_t v94 = v3 - 4;
            id v74 = (id)(v82 & 0xC000000000000001);
            if ((v82 & 0xC000000000000001) != 0)
            {
              uint64_t v95 = (SEL *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if ((v94 & 0x8000000000000000) != 0) {
                goto LABEL_181;
              }
              if (v94 >= *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_182;
              }
              uint64_t v95 = (SEL *)*(id *)(v82 + 8 * v3);
            }
            uint64_t v73 = v95;
            unint64_t v56 = v217[78];
            uint64_t v2 = (uint64_t)v95 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
            ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v214)(v56, 5, 5, v216);
            swift_storeEnumTagMultiPayload();
            unint64_t v1 = sub_100DDCC28(v2, v56);
            sub_100F38180(v56, type metadata accessor for CRLBoardLibraryViewModel.Item);

            if ((v1 & 1) == 0)
            {
              if (v94 != v84)
              {
                if (v74)
                {
                  uint64_t v73 = (SEL *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  id v97 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  if (v84 < 0)
                  {
                    __break(1u);
LABEL_190:
                    __break(1u);
LABEL_191:
                    __break(1u);
LABEL_192:
                    __break(1u);
LABEL_193:
                    __break(1u);
LABEL_194:
                    __break(1u);
LABEL_195:
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_44:
                    unint64_t v77 = (void *)v70[83];
                    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                    specialized Array._endMutation()();
                    Class v78 = Array._bridgeToObjectiveC()().super.isa;
                    swift_bridgeObjectRelease();
                    [v77 v73[329] v78];

                    uint64_t v188 = 0;
                    uint64_t v45 = v70;
                    unint64_t v58 = v203;
                    goto LABEL_167;
                  }
                  unint64_t v56 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (v84 >= v56) {
                    goto LABEL_190;
                  }
                  uint64_t v96 = (SEL *)*(id *)(v82 + 8 * v84 + 32);
                  if ((v94 & 0x8000000000000000) != 0) {
                    goto LABEL_191;
                  }
                  if (v94 >= v56) {
                    goto LABEL_192;
                  }
                  uint64_t v73 = v96;
                  id v97 = *(id *)(v82 + 8 * v3);
                }
                unint64_t v1 = (unint64_t)v97;
                if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                  || (v82 & 0x8000000000000000) != 0
                  || (v82 & 0x4000000000000000) != 0)
                {
                  unint64_t v82 = sub_100F68540(v82);
                  v219[0] = v82;
                }
                uint64_t v98 = *(void **)((v82 & 0xFFFFFFFFFFFFFF8) + 8 * v84 + 0x20);
                *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 8 * v84 + 0x20) = v1;

                specialized Array._endMutation()();
                unint64_t v99 = v219[0];
                if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                  || (v99 & 0x8000000000000000) != 0
                  || (v99 & 0x4000000000000000) != 0)
                {
                  unint64_t v99 = sub_100F68540(v99);
                  v219[0] = v99;
                }
                if ((v94 & 0x8000000000000000) != 0) {
                  goto LABEL_193;
                }
                uint64_t v100 = v99 & 0xFFFFFFFFFFFFFF8;
                if (v94 >= *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_194;
                }
                uint64_t v101 = *(void **)(v100 + 8 * v3);
                *(void *)(v100 + 8 * v3) = v73;

                specialized Array._endMutation()();
              }
              BOOL v102 = __OFADD__(v84++, 1);
              if (v102)
              {
                __break(1u);
                goto LABEL_187;
              }
            }
            unint64_t v103 = v3 - 3;
            if (__OFADD__(v94, 1)) {
              goto LABEL_183;
            }
            unint64_t v82 = v219[0];
            if (v219[0] >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v104 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v104 = *(void *)((v219[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            ++v3;
            if (v103 == v104) {
              goto LABEL_56;
            }
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v177 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v93 == v177) {
          goto LABEL_56;
        }
        goto LABEL_63;
      }
    }
LABEL_54:
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_200;
    }
    uint64_t v84 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
LABEL_56:
      unint64_t v3 = v187;
      unint64_t v58 = v203;
      if (v82 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v89 >= v84)
        {
LABEL_58:
          uint64_t v90 = (void *)v217[83];
          sub_100F4CA70(v84, v89);
          Class v91 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v90 setChildren:v91];

          uint64_t v45 = v217;
LABEL_167:
          uint64_t v2 = (uint64_t)v45;
          ((void (*)(void, uint64_t, uint64_t, uint64_t))v214)(v45[57], 5, 5, v216);
          unint64_t v1 = *(void *)(v58 + 16);
          swift_release();
          if (qword_10166FA60 == -1)
          {
LABEL_168:
            id v166 = *(void **)(v2 + 664);
            uint64_t v167 = *(void *)(v2 + 456);
            swift_beginAccess();
            uint64_t v168 = (void *)static OS_os_log.crlBoardLibrary;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_10117DF40;
            id v170 = v168;
            uint64_t v171 = sub_100DD4C48();
            uint64_t v173 = v172;
            *(void *)(inited + 56) = &type metadata for String;
            unint64_t v174 = sub_100528BE4();
            *(void *)(inited + 32) = v171;
            *(void *)(inited + 40) = v173;
            *(void *)(inited + 96) = &type metadata for Int;
            *(void *)(inited + 104) = &protocol witness table for Int;
            *(void *)(inited + 64) = v174;
            *(void *)(inited + 72) = v188;
            *(void *)(inited + 136) = &type metadata for Int;
            *(void *)(inited + 144) = &protocol witness table for Int;
            *(void *)(inited + 112) = v1;
            uint64_t v175 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v170, (uint64_t)&_mh_execute_header, v175, (uint64_t)"Updated \"%s\" library folder. Before: %d, After: %d", 50, 2, inited);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            sub_100F38180(v167, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            unsigned int v218 = 1;
            uint64_t v45 = (void *)v2;
            goto LABEL_169;
          }
LABEL_184:
          swift_once();
          goto LABEL_168;
        }
      }
      else
      {
        uint64_t v89 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v89 >= v84) {
          goto LABEL_58;
        }
      }
      __break(1u);
LABEL_200:
      swift_bridgeObjectRetain();
      uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
  }
  v212 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v43;
  uint64_t v49 = v33[73];
  v219[0] = (unint64_t)_swiftEmptyArrayStorage;
  id v186 = (id)v3;
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v50 = v38 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
  uint64_t v51 = *(void *)(v49 + 72);
  do
  {
    uint64_t v52 = v33[78];
    uint64_t v53 = v33[77];
    sub_100F38118(v50, v52, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100F38118(v52, v53, type metadata accessor for CRLBoardLibraryViewModel.Item);
    unint64_t v54 = (char *)objc_allocWithZone(v206);
    *(void *)&v54[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
    sub_100F38118(v53, (uint64_t)&v54[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);
    v33[39] = v54;
    v33[40] = v206;
    [super init];
    sub_100F38180(v53, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100F38180(v52, type metadata accessor for CRLBoardLibraryViewModel.Item);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    v50 += v51;
    --v48;
  }
  while (v48);
  uint64_t v2 = v219[0];
  id v55 = [v186 children];
  unint64_t v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v56 >> 62)
  {
LABEL_187:
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v57 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_retain();
  }
  uint64_t v45 = v217;
  unint64_t v58 = v203;
  if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v208 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
  }
  else
  {
    uint64_t v208 = *(void *)(v2 + 16);
  }
  unint64_t v1 = 0;
  unint64_t v3 = 0;
  uint64_t v59 = v217[68];
  uint64_t v180 = v217[58];
  uint64_t v204 = v217[52];
  uint64_t v193 = v56 & 0xFFFFFFFFFFFFFF8;
  unint64_t v195 = v56 & 0xC000000000000001;
  unint64_t v191 = v56 + 32;
  uint64_t v185 = v217[50];
  unint64_t v207 = v2 & 0xC000000000000001;
  v199 = v212 + 6;
  uint64_t v201 = v57;
  uint64_t v178 = (void (**)(void, uint64_t, uint64_t))(v59 + 32);
  unint64_t v179 = (void (**)(uint64_t, uint64_t))(v59 + 8);
  uint64_t v184 = v2;
  while (v3 == v57)
  {
    uint64_t v110 = 0;
    id v111 = 0;
    unint64_t v3 = v57;
    if (v208 == v1) {
      goto LABEL_164;
    }
LABEL_111:
    if (!v207)
    {
      if (v1 < *(void *)(v2 + 16))
      {
        id v113 = *(id *)(v2 + 8 * v1 + 32);
        goto LABEL_114;
      }
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
      goto LABEL_184;
    }
    id v113 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_114:
    id v111 = v113;
    if (__OFADD__(v1, 1)) {
      goto LABEL_175;
    }
    if (!v110) {
      goto LABEL_164;
    }
    if (!v113) {
      goto LABEL_158;
    }
    v210 = v110;
    v213 = v113;
    uint64_t v114 = (uint64_t)v110 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
    uint64_t v115 = (uint64_t)v111 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
    BOOL v116 = (unsigned __int8 *)(v45[53] + *(int *)(v204 + 48));
    sub_100F38118(v114, v45[53], type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100F38118(v115, (uint64_t)v116, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_100F38118(v45[53], v45[75], type metadata accessor for CRLBoardLibraryViewModel.Item);
        int v118 = swift_getEnumCaseMultiPayload();
        uint64_t v119 = v45[75];
        if (v118 == 1)
        {
          uint64_t v121 = v45[55];
          uint64_t v120 = v45[56];
          uint64_t v122 = v45[51];
          sub_100F37878(v119, v120, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          sub_100F37878((uint64_t)v116, v121, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v123 = v122 + *(int *)(v185 + 48);
          sub_100F38118(v120, v122, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          sub_100F38118(v121, v123, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v124 = *v199;
          unsigned int v125 = (*v199)(v122, 5, v216);
          unint64_t v105 = v213;
          switch(v125)
          {
            case 1u:
              if (v124(v123, 5, v216) == 1) {
                goto LABEL_98;
              }
              goto LABEL_145;
            case 2u:
              if (v124(v123, 5, v216) != 2) {
                goto LABEL_145;
              }
              goto LABEL_98;
            case 3u:
              if (v124(v123, 5, v216) != 3) {
                goto LABEL_145;
              }
              goto LABEL_98;
            case 4u:
              if (v124(v123, 5, v216) != 4) {
                goto LABEL_145;
              }
              goto LABEL_98;
            case 5u:
              if (v124(v123, 5, v216) != 5) {
                goto LABEL_145;
              }
              goto LABEL_98;
            default:
              uint64_t v126 = v45[54];
              sub_100F38118(v45[51], v126, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v127 = v45;
              uint64_t v128 = *(int *)(v216 + 48);
              uint64_t v130 = *(void *)(v126 + v128);
              uint64_t v129 = *(void *)(v126 + v128 + 8);
              if (((unsigned int (*)(uint64_t, uint64_t))v124)(v123, 5))
              {
                uint64_t v131 = v127[67];
                uint64_t v132 = v127[54];
                swift_bridgeObjectRelease();
                (*v179)(v132, v131);
                uint64_t v45 = v127;
                unint64_t v58 = v203;
LABEL_145:
                sub_100522F00(v45[51], &qword_10167BE58);
                char v106 = 0;
              }
              else
              {
                uint64_t v183 = v130;
                uint64_t v154 = v127[67];
                uint64_t v155 = v127[54];
                uint64_t v156 = v123 + v128;
                uint64_t v157 = *(void *)(v123 + v128);
                uint64_t v197 = *(void *)(v156 + 8);
                (*v178)(v127[69], v123, v154);
                char v158 = static UUID.== infix(_:_:)();
                uint64_t v159 = v155;
                uint64_t v160 = *v179;
                (*v179)(v159, v154);
                if (v158)
                {
                  uint64_t v161 = v127[69];
                  uint64_t v162 = v127[67];
                  if (v183 == v157 && v129 == v197)
                  {
                    swift_bridgeObjectRelease_n();
                    v160(v161, v162);
                    unint64_t v58 = v203;
                    unint64_t v105 = v213;
                  }
                  else
                  {
                    char v163 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v160(v161, v162);
                    unint64_t v58 = v203;
                    unint64_t v105 = v213;
                    if ((v163 & 1) == 0)
                    {
                      uint64_t v45 = v217;
                      sub_100F38180(v217[51], type metadata accessor for CRLBoardLibraryViewModel.Folder);
                      char v106 = 0;
                      goto LABEL_99;
                    }
                  }
                  uint64_t v45 = v217;
LABEL_98:
                  sub_100F38180(v45[51], type metadata accessor for CRLBoardLibraryViewModel.Folder);
                  char v106 = 1;
                }
                else
                {
                  uint64_t v164 = v127[51];
                  v160(v127[69], v127[67]);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_100F38180(v164, type metadata accessor for CRLBoardLibraryViewModel.Folder);
                  char v106 = 0;
                  uint64_t v45 = v127;
                  unint64_t v58 = v203;
                  unint64_t v105 = v213;
                }
              }
LABEL_99:
              uint64_t v107 = v45[56];
              sub_100F38180(v45[55], type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v108 = v107;
              char v109 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
              break;
          }
          goto LABEL_100;
        }
        sub_100F38180(v119, type metadata accessor for CRLBoardLibraryViewModel.Folder);
LABEL_161:
        sub_100522F00(v45[53], (uint64_t *)&unk_10167BE60);

LABEL_162:
        swift_release();
        swift_bridgeObjectRelease_n();
LABEL_166:
        Class v165 = Array._bridgeToObjectiveC()().super.isa;
        swift_release();
        [v186 setChildren:v165];

        unint64_t v3 = v187;
        goto LABEL_167;
      }
      uint64_t v133 = v45[74];
      sub_100F38118(v45[53], v133, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v134 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
      uint64_t v135 = v133 + v134;
      uint64_t v136 = *(void *)(v133 + v134);
      uint64_t v196 = *(void *)(v135 + 8);
      int v137 = swift_getEnumCaseMultiPayload();
      uint64_t v138 = v45[74];
      if (v137 != 2)
      {
        swift_bridgeObjectRelease();
        sub_100F38180(v138, type metadata accessor for CRLBoardIdentifier);
        unint64_t v58 = v203;
        goto LABEL_161;
      }
      uint64_t v182 = v136;
      uint64_t v139 = v45[63];
      uint64_t v140 = v217[62];
      uint64_t v141 = v217[61];
      uint64_t v142 = v217[60];
      uint64_t v143 = *(void *)&v116[v134 + 8];
      uint64_t v181 = *(void *)&v116[v134];
      sub_100F37878(v138, v139, type metadata accessor for CRLBoardIdentifier);
      sub_100F37878((uint64_t)v116, v140, type metadata accessor for CRLBoardIdentifier);
      char v144 = static UUID.== infix(_:_:)();
      sub_100F38118(v139, v141, type metadata accessor for CRLBoardIdentifier);
      sub_100F38118(v140, v142, type metadata accessor for CRLBoardIdentifier);
      uint64_t v146 = v217[60];
      uint64_t v145 = v217[61];
      if (v144)
      {
        uint64_t v147 = *(int *)(v180 + 20);
        uint64_t v148 = *(void *)(v145 + v147);
        uint64_t v149 = *(void *)(v145 + v147 + 8);
        unint64_t v150 = (void *)(v146 + v147);
        if (v148 == *v150 && v149 == v150[1])
        {
          sub_100F38180(v217[60], type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v145, type metadata accessor for CRLBoardIdentifier);
          unint64_t v58 = v203;
          uint64_t v2 = v184;
          goto LABEL_132;
        }
        char v151 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100F38180(v146, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180(v145, type metadata accessor for CRLBoardIdentifier);
        unint64_t v58 = v203;
        uint64_t v2 = v184;
        if (v151)
        {
LABEL_132:
          unint64_t v105 = v213;
          if (v182 == v181 && v196 == v143) {
            char v106 = 1;
          }
          else {
            char v106 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          goto LABEL_148;
        }
        char v106 = 0;
      }
      else
      {
        sub_100F38180(v217[60], type metadata accessor for CRLBoardIdentifier);
        sub_100F38180(v145, type metadata accessor for CRLBoardIdentifier);
        char v106 = 0;
        unint64_t v58 = v203;
        uint64_t v2 = v184;
      }
      unint64_t v105 = v213;
LABEL_148:
      uint64_t v153 = v217[62];
      uint64_t v152 = v217[63];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100F38180(v153, type metadata accessor for CRLBoardIdentifier);
      uint64_t v108 = v152;
      char v109 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v45 = v217;
LABEL_100:
      sub_100F38180(v108, v109);
      goto LABEL_101;
    }
    sub_100F38118(v45[53], v45[76], type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload()) {
      goto LABEL_161;
    }
    char v106 = *(unsigned __int8 *)v45[76] == *v116;
    unint64_t v105 = v213;
LABEL_101:
    sub_100F38180(v45[53], type metadata accessor for CRLBoardLibraryViewModel.Item);

    ++v1;
    uint64_t v57 = v201;
    if ((v106 & 1) == 0) {
      goto LABEL_162;
    }
  }
  if (v195)
  {
    id v112 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if ((v3 & 0x8000000000000000) != 0) {
      goto LABEL_178;
    }
    if (v3 >= *(void *)(v193 + 16)) {
      goto LABEL_179;
    }
    id v112 = *(id *)(v191 + 8 * v3);
  }
  uint64_t v110 = v112;
  BOOL v102 = __OFADD__(v3++, 1);
  if (v102) {
    goto LABEL_180;
  }
  if (v208 != v1) {
    goto LABEL_111;
  }
  if (v112)
  {
LABEL_158:
    swift_release();
    swift_bridgeObjectRelease_n();

    goto LABEL_166;
  }
  id v111 = 0;
LABEL_164:
  swift_release();
  swift_bridgeObjectRelease();
  if (v111)
  {
    swift_bridgeObjectRelease();

    goto LABEL_166;
  }
  uint64_t v92 = (void *)v45[83];
  swift_bridgeObjectRelease();
  swift_release();

LABEL_173:
  swift_release();

  unsigned int v218 = 0;
LABEL_169:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v176 = (uint64_t (*)(void))v45[1];
  return v176(v218);
}

uint64_t sub_100F19D08()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 656);
  uint64_t v2 = *(void *)(v0 + 648);
  return _swift_task_switch(sub_100F19D70, v2, v1);
}

uint64_t sub_100F19D70()
{
  swift_release();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[87];
  uint64_t v2 = (void *)v0[83];
  swift_beginAccess();
  unint64_t v3 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[47] = v1;
  id v5 = v3;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error updating Recently Deleted snapshot from store: %@", 55, 2, inited);

  swift_errorRelease();
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

BOOL sub_100F1A04C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v65 = a5;
  uint64_t v67 = a4;
  unint64_t v69 = a3;
  uint64_t v8 = sub_1005057FC(&qword_1016A22B8);
  __chkstk_darwin(v8, v9);
  uint64_t v70 = (uint64_t)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v68 = (unsigned __int8 *)v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  char v18 = (char *)v63 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)v63 - v20;
  uint64_t v22 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v23 = *(void **)(v22 - 8);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v66 = (unsigned __int8 *)v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25, v27);
  unint64_t v30 = (char *)v63 - v29;
  __chkstk_darwin(v28, v31);
  uint64_t v71 = (uint64_t)v63 - v32;
  uint64_t v33 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata);
  swift_beginAccess();
  uint64_t v34 = *v33;
  if (!*(void *)(v34 + 16) || (unint64_t v35 = sub_1009563EC(a1), (v36 & 1) == 0))
  {
    swift_endAccess();
    return 1;
  }
  v63[1] = v5;
  uint64_t v64 = a1;
  uint64_t v37 = *(void *)(v34 + 56);
  v63[0] = v23[9];
  sub_100F38118(v37 + v63[0] * v35, (uint64_t)v30, type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v38 = v71;
  sub_100F37878((uint64_t)v30, v71, type metadata accessor for CRLBoardViewModelMetadata);
  swift_endAccess();
  sub_100F38118(v38, (uint64_t)v21, type metadata accessor for CRLBoardViewModelMetadata);
  id v39 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v23[7];
  uint64_t v40 = 1;
  v39(v21, 0, 1, v22);
  uint64_t v41 = *v69;
  if (*(void *)(*v69 + 16))
  {
    unint64_t v42 = sub_1009563EC(v64);
    if (v43)
    {
      sub_100F38118(*(void *)(v41 + 56) + v42 * v63[0], (uint64_t)v18, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v40 = 0;
    }
  }
  v39(v18, v40, 1, v22);
  uint64_t v44 = v70;
  uint64_t v45 = v70 + *(int *)(v8 + 48);
  sub_100522E9C((uint64_t)v21, v70, (uint64_t *)&unk_1016741D0);
  sub_100522E9C((uint64_t)v18, v45, (uint64_t *)&unk_1016741D0);
  id v46 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v23[6];
  if (v46(v44, 1, v22) == 1)
  {
    sub_100522F00((uint64_t)v18, (uint64_t *)&unk_1016741D0);
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_1016741D0);
    if (v46(v45, 1, v22) == 1)
    {
      sub_100522F00(v44, (uint64_t *)&unk_1016741D0);
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  unint64_t v47 = v68;
  sub_100522E9C(v44, (uint64_t)v68, (uint64_t *)&unk_1016741D0);
  if (v46(v45, 1, v22) == 1)
  {
    sub_100522F00((uint64_t)v18, (uint64_t *)&unk_1016741D0);
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_1016741D0);
    sub_100F38180((uint64_t)v47, type metadata accessor for CRLBoardViewModelMetadata);
LABEL_12:
    sub_100522F00(v44, &qword_1016A22B8);
LABEL_23:
    sub_100F38180(v71, type metadata accessor for CRLBoardViewModelMetadata);
    return 1;
  }
  uint64_t v48 = v66;
  sub_100F37878(v45, (uint64_t)v66, type metadata accessor for CRLBoardViewModelMetadata);
  char v49 = sub_100DC5344(v47, v48);
  sub_100F38180((uint64_t)v48, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100522F00((uint64_t)v18, (uint64_t *)&unk_1016741D0);
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_1016741D0);
  sub_100F38180((uint64_t)v47, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100522F00(v44, (uint64_t *)&unk_1016741D0);
  if ((v49 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_14:
  uint64_t v50 = v67;
  uint64_t v51 = v64;
  if (!*(void *)(v67 + 16)) {
    goto LABEL_21;
  }
  unint64_t v52 = sub_1009563EC(v64);
  if ((v53 & 1) == 0 || !*(void *)(v65 + 16)) {
    goto LABEL_21;
  }
  unint64_t v54 = (uint64_t *)(*(void *)(v50 + 56) + 16 * v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  swift_bridgeObjectRetain();
  uint64_t v57 = v65;
  unint64_t v58 = sub_1009563EC(v51);
  if ((v59 & 1) == 0 || (uint64_t v60 = (void *)(*(void *)(v57 + 56) + 16 * v58), v56 == *v60) && v55 == v60[1])
  {
    swift_bridgeObjectRelease();
LABEL_21:
    sub_100F38180(v71, type metadata accessor for CRLBoardViewModelMetadata);
    return 0;
  }
  char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  sub_100F38180(v71, type metadata accessor for CRLBoardViewModelMetadata);
  return (v62 & 1) == 0;
}

uint64_t sub_100F1A650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 144) = a4;
  return _swift_task_switch(sub_100F1A670, 0, 0);
}

uint64_t sub_100F1A670()
{
  uint64_t v1 = v0[18];
  v0[19] = [self standardUserDefaults];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  uint64_t v3 = swift_task_alloc();
  v0[20] = v3;
  *(void *)(v3 + 16) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100F1A79C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 23, 0, 0, 0xD00000000000001DLL, 0x80000001012969F0, sub_100F3650C, v3, &type metadata for CRLBoardDataStore.CRLBoardDataStoreMetadata);
}

uint64_t sub_100F1A79C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100F1A980;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100F1A8B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100F1A8B8()
{
  uint64_t v1 = *(void **)(v0 + 152);
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  [v1 setValue:isa forKey:@"CRLUserHasDataUserDefault"];

  Class v3 = Bool._bridgeToObjectiveC()().super.super.isa;
  [v1 setValue:v3 forKey:@"CRLUserHasUnsyncedDataUserDefault"];

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100F1A980()
{
  swift_task_dealloc();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Error in fetching board datastore metadata: %@", 46, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v8 = *(void **)(v0 + 152);
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  [v8 setValue:isa forKey:@"CRLUserHasDataUserDefault"];

  Class v10 = Bool._bridgeToObjectiveC()().super.super.isa;
  [v8 setValue:v10 forKey:@"CRLUserHasUnsyncedDataUserDefault"];

  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_100F1AB90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v42 = a3;
  uint64_t v5 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v39, v8);
  Class v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v17 = __chkstk_darwin(v15 - 8, v16);
  uint64_t v40 = (uint64_t)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v22 = (char *)&v38 - v21;
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v26 = *a1;
  uint64_t v27 = (void *)a1[1];
  uint64_t v28 = *a1 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v28, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  uint64_t v30 = *(void *)(v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  unint64_t v29 = *(void *)(v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v14, v30, v29, (uint64_t)v25);
  sub_100F38118((uint64_t)v25, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
  if (v27)
  {
    id v31 = v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = *a2;
    *a2 = 0x8000000000000000;
    sub_100979740((uint64_t)v31, (uint64_t)v22, isUniquelyReferenced_nonNull_native);
    *a2 = v43;
    swift_bridgeObjectRelease();
    sub_100F38180((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    uint64_t v33 = (void *)sub_10095DD2C((uint64_t)v22);
    sub_100F38180((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
  }
  uint64_t v34 = v40;
  sub_100F38118((uint64_t)v25, v40, type metadata accessor for CRLBoardIdentifier);
  sub_100F38118(v28, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  type metadata accessor for CRLSharedBoardMetadataCRDTData(0);
  sub_1005057FC(&qword_10168B6F0);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  uint64_t v35 = (uint64_t)v41;
  Date.init(timeIntervalSinceReferenceDate:)();
  uint64_t v36 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  sub_10057EBF0(v35, v34);
  return sub_100F38180((uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100F1AFC4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v57 = a4;
  uint64_t v58 = a5;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v55 = (uint64_t)&v54 - v13;
  uint64_t v59 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v59, v14);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UUID();
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v23, v26);
  unint64_t v29 = (char *)&v54 - v28;
  __chkstk_darwin(v27, v30);
  uint64_t v32 = (char *)&v54 - v31;
  uint64_t v33 = a1 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v33, (uint64_t)v16, type metadata accessor for CRLBoardCRDTData);
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v16, type metadata accessor for CRLBoardCRDTData);
  uint64_t v34 = a1 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName;
  uint64_t v35 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  unint64_t v36 = *(void *)(v34 + 8);
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v20, v35, v36, (uint64_t)v32);
  uint64_t v37 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v38 = *v37;
  if (*(void *)(*v37 + 16) && (unint64_t v39 = sub_1009563EC((uint64_t)v32), (v40 & 1) != 0))
  {
    uint64_t v41 = *(void *)(*(void *)(v38 + 56) + 8 * v39);
    swift_endAccess();
    sub_100F38118((uint64_t)v32, (uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
    uint64_t v42 = *(void **)(*(void *)(*(void *)(*(void *)(v41 + 16)
                                           + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                               + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                   + 16);
    if (v42)
    {
      swift_retain();
      id v43 = v42;
      uint64_t v44 = v55;
      sub_100DC4FC8(v43, v55);
      uint64_t v45 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
    }
    else
    {
      uint64_t v49 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      uint64_t v44 = v55;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v55, 1, 1, v49);
      swift_retain();
    }
    uint64_t v46 = v58;
    sub_10057F6DC(v44, (uint64_t)v29);
    swift_release();
  }
  else
  {
    swift_endAccess();
    uint64_t v46 = v58;
    unint64_t v47 = v56;
    if (v56)
    {
      sub_100F38118((uint64_t)v32, (uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
      sub_100DC4FC8(v47, (uint64_t)v11);
      uint64_t v48 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v11, 0, 1, v48);
      sub_10057F6DC((uint64_t)v11, (uint64_t)v25);
    }
  }
  uint64_t v50 = (void *)(v46 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
  sub_100F38118((uint64_t)v32, v46, type metadata accessor for CRLBoardIdentifier);
  sub_100F38118(v33, (uint64_t)v16, type metadata accessor for CRLBoardCRDTData);
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v51 = v60;
  uint64_t v52 = v61;
  sub_100F38180((uint64_t)v16, type metadata accessor for CRLBoardCRDTData);
  sub_100F38180((uint64_t)v32, type metadata accessor for CRLBoardIdentifier);
  *uint64_t v50 = v51;
  v50[1] = v52;
  type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100F1B4F4(uint64_t a1, uint64_t a2, char *a3, uint64_t *a4)
{
  uint64_t v89 = a4;
  unint64_t v94 = a3;
  uint64_t v98 = (char *)a2;
  uint64_t v91 = a1;
  uint64_t v93 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v97 = *(void *)(v93 - 8);
  __chkstk_darwin(v93, v4);
  uint64_t v86 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v88 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v90 = (uint64_t)&v81 - v11;
  uint64_t v12 = sub_1005057FC(&qword_101672EB0);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v95 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v81 - v17;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v87 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  uint64_t v96 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v33 = __chkstk_darwin(v31 - 8, v32);
  uint64_t v35 = (char *)&v81 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v36);
  uint64_t v38 = (char *)&v81 - v37;
  sub_100F38118((uint64_t)&v98[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v83 = v18;
    uint64_t v84 = v19;
    uint64_t v85 = v23;
    id v81 = v35;
    uint64_t v98 = v26;
    unint64_t v39 = (int *)v93;
    uint64_t v92 = v22;
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_100F37878((uint64_t)v30, (uint64_t)v38, type metadata accessor for CRLBoardIdentifier);
    unint64_t v41 = *(void *)(*(void *)&v94[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController]
                    + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
    __chkstk_darwin(v40, v42);
    uint64_t v80 = v38;
    swift_bridgeObjectRetain();
    uint64_t v43 = v99;
    uint64_t v44 = (char *)sub_100ED54F0((uint64_t (*)(id *))sub_100DBFA74, (uint64_t)v79, v41);
    swift_bridgeObjectRelease();
    if (!v44) {
      return sub_100F38180((uint64_t)v38, type metadata accessor for CRLBoardIdentifier);
    }
    unint64_t v82 = v38;
    uint64_t v99 = v43;
    uint64_t v46 = *(void *)&v44[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString];
    uint64_t v45 = *(void *)&v44[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareString + 8];
    uint64_t v47 = (uint64_t)v98;
    uint64_t v48 = &v98[*(int *)(v85 + 28)];
    uint64_t v49 = &v44[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_shareURL];
    uint64_t v50 = type metadata accessor for URL();
    uint64_t v51 = *(void *)(v50 - 8);
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    *(void *)uint64_t v47 = 0;
    *(void *)(v47 + 8) = v46;
    *(void *)(v47 + 16) = v45;
    *(unsigned char *)(v47 + 24) = 0;
    uint64_t v52 = *v89;
    uint64_t v53 = *(void *)(*v89 + 16);
    unint64_t v94 = v44;
    if (v53)
    {
      swift_bridgeObjectRetain();
      unint64_t v54 = sub_1009563EC((uint64_t)v82);
      uint64_t v56 = v96;
      uint64_t v55 = v97;
      uint64_t v58 = (uint64_t)v83;
      uint64_t v57 = v84;
      uint64_t v59 = v39;
      uint64_t v60 = v86;
      uint64_t v61 = v87;
      uint64_t v62 = (uint64_t)v95;
      if (v63)
      {
        uint64_t v64 = *(void *)(v52 + 56) + *(void *)(v97 + 72) * v54;
        uint64_t v65 = v90;
        sub_100F38118(v64, v90, type metadata accessor for CRLBoardViewModelMetadata);
        uint64_t v66 = *(uint64_t **)(v55 + 56);
        uint64_t v67 = v65;
        uint64_t v68 = 0;
      }
      else
      {
        uint64_t v66 = *(uint64_t **)(v97 + 56);
        uint64_t v65 = v90;
        uint64_t v67 = v90;
        uint64_t v68 = 1;
      }
      uint64_t v89 = v66;
      ((void (*)(uint64_t, uint64_t, uint64_t, int *))v66)(v67, v68, 1, v59);
    }
    else
    {
      uint64_t v55 = v97;
      uint64_t v65 = v90;
      uint64_t v59 = v39;
      uint64_t v89 = *(uint64_t **)(v97 + 56);
      ((void (*)(uint64_t, uint64_t, uint64_t, int *))v89)(v90, 1, 1, v39);
      swift_bridgeObjectRetain();
      uint64_t v58 = (uint64_t)v83;
      uint64_t v57 = v84;
      uint64_t v60 = v86;
      uint64_t v61 = v87;
      uint64_t v62 = (uint64_t)v95;
      uint64_t v56 = v96;
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v55 + 48))(v65, 1, v59))
    {
      sub_100522F00(v65, (uint64_t *)&unk_1016741D0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v62, 1, 1, v57);
    }
    else
    {
      sub_100F38118(v65, (uint64_t)v60, type metadata accessor for CRLBoardViewModelMetadata);
      sub_100522F00(v65, (uint64_t *)&unk_1016741D0);
      (*(void (**)(uint64_t, char *, uint64_t))(v61 + 16))(v62, &v60[v59[16]], v57);
      sub_100F38180((uint64_t)v60, type metadata accessor for CRLBoardViewModelMetadata);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v62, 0, 1, v57);
      int v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v62, 1, v57);
      uint64_t v72 = v92;
      if (v71 != 1)
      {
LABEL_15:
        sub_10051B3EC(v62, v58, &qword_101672EB0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v58, 1, v57) == 1)
        {
          static Date.distantPast.getter();
          sub_100522F00(v58, &qword_101672EB0);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v72, v58, v57);
        }
        uint64_t v73 = (uint64_t)v88;
        id v74 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
        v74(&v60[v59[6]], &v94[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_timeStamp], v57);
        uint64_t v75 = v57;
        uint64_t v76 = (uint64_t)&v60[v59[7]];
        sub_100F38118((uint64_t)v98, v76, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v76, 0, 1, v85);
        v74(&v60[v59[16]], v92, v75);
        *(_WORD *)uint64_t v60 = 0;
        v60[v59[8]] = 1;
        v60[v59[9]] = 1;
        v60[v59[10]] = 0;
        unint64_t v77 = &v60[v59[11]];
        *(void *)unint64_t v77 = 0;
        v77[8] = 1;
        v60[v59[12]] = 0;
        v60[v59[13]] = 1;
        v60[v59[14]] = 0;
        v60[v59[15]] = 0;
        uint64_t v78 = (uint64_t)v81;
        uint64_t v30 = v82;
        sub_100F38118((uint64_t)v82, (uint64_t)v81, type metadata accessor for CRLBoardIdentifier);
        sub_100F38118((uint64_t)v60, v73, type metadata accessor for CRLBoardViewModelMetadata);
        ((void (*)(uint64_t, void, uint64_t, int *))v89)(v73, 0, 1, v59);
        sub_10057F4F4(v73, v78);

        sub_100F38180((uint64_t)v60, type metadata accessor for CRLBoardViewModelMetadata);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v92, v75);
        sub_100F38180((uint64_t)v98, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
        unint64_t v69 = type metadata accessor for CRLBoardIdentifier;
        return sub_100F38180((uint64_t)v30, v69);
      }
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSharedFolderNode(allBoardNodes:metadata:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3367, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v80) = 2;
    uint64_t v72 = v92;
    v79[1] = 39;
    uint64_t v56 = v96;
    v79[0] = "invalid nil found when unwrapping value";
    uint64_t v62 = (uint64_t)v95;
    uint64_t v58 = (uint64_t)v83;
    uint64_t v57 = v84;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSharedFolderNode(allBoardNodes:metadata:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3367);
    goto LABEL_15;
  }
  unint64_t v69 = type metadata accessor for CRLBoardLibraryViewModel.Item;
  return sub_100F38180((uint64_t)v30, v69);
}

uint64_t sub_100F1BF7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v89 = a3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v88 = (void (*)(char *, uint64_t, uint64_t))((char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v9 = *(void **)(v8 - 8);
  uint64_t v92 = v8;
  uint64_t v93 = v9;
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v84 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v79 - v14;
  uint64_t v16 = sub_1005057FC(&qword_101672EB0);
  uint64_t v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v85 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v87 = (char *)&v79 - v22;
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v79 - v24;
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v27 = *(void **)(v26 - 8);
  uint64_t v90 = v26;
  uint64_t v91 = v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v83 = (char *)&v79 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v31);
  uint64_t v86 = (char *)&v79 - v32;
  uint64_t v33 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v35 = __chkstk_darwin(v33, v34);
  uint64_t v37 = (char *)&v79 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v38);
  uint64_t v40 = (char *)&v79 - v39;
  uint64_t v41 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v43 = __chkstk_darwin(v41 - 8, v42);
  uint64_t v94 = (uint64_t)&v79 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43, v45);
  uint64_t v47 = (char *)&v79 - v46;
  uint64_t v48 = *a1;
  uint64_t v49 = *a2;
  sub_100F38118(v48 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t v59 = (uint64_t)v40;
LABEL_9:
    sub_100F38180(v59, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_10;
  }
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  sub_100F37878((uint64_t)v40, (uint64_t)v47, type metadata accessor for CRLBoardIdentifier);
  sub_100F38118(v49 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v37, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100F38180((uint64_t)v47, type metadata accessor for CRLBoardIdentifier);
    uint64_t v59 = (uint64_t)v37;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  sub_100F37878((uint64_t)v37, v94, type metadata accessor for CRLBoardIdentifier);
  uint64_t v50 = v89;
  if (!*(void *)(v89 + 16) || (unint64_t v51 = sub_1009563EC((uint64_t)v47), (v52 & 1) == 0))
  {
    uint64_t v56 = v90;
    uint64_t v58 = v91;
    uint64_t v57 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v91[7];
    v57(v25, 1, 1, v90);
    goto LABEL_12;
  }
  uint64_t v53 = *(void *)(v50 + 56);
  uint64_t v81 = v93[9];
  sub_100F38118(v53 + v81 * v51, (uint64_t)v15, type metadata accessor for CRLBoardViewModelMetadata);
  unint64_t v54 = v91;
  uint64_t v55 = &v15[*(int *)(v92 + 24)];
  uint64_t v56 = v90;
  unint64_t v82 = (void (*)(char *, char *, uint64_t))v91[2];
  v82(v25, v55, v90);
  sub_100F38180((uint64_t)v15, type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v57 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v54[7];
  v57(v25, 0, 1, v56);
  uint64_t v80 = (unsigned int (*)(char *, uint64_t, uint64_t))v54[6];
  if (v80(v25, 1, v56) == 1)
  {
    uint64_t v58 = v54;
LABEL_12:
    uint64_t v61 = v92;
    sub_100522F00((uint64_t)v25, &qword_101672EB0);
    uint64_t v62 = (uint64_t)v88;
    if (*(void *)(v50 + 16) && (unint64_t v63 = sub_1009563EC(v94), (v64 & 1) != 0))
    {
      sub_100F38118(*(void *)(v50 + 56) + v93[9] * v63, v62, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v65 = 0;
    }
    else
    {
      uint64_t v65 = 1;
    }
    uint64_t v66 = v93;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v93[7])(v62, v65, 1, v61);
    sub_100F38180(v94, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v47, type metadata accessor for CRLBoardIdentifier);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v66[6])(v62, 1, v61) == 1)
    {
      sub_100522F00(v62, (uint64_t *)&unk_1016741D0);
      uint64_t v67 = (uint64_t)v87;
      v57(v87, 1, 1, v56);
    }
    else
    {
      uint64_t v68 = v62 + *(int *)(v61 + 24);
      uint64_t v67 = (uint64_t)v87;
      ((void (*)(char *, uint64_t, uint64_t))v58[2])(v87, v68, v56);
      sub_100F38180(v62, type metadata accessor for CRLBoardViewModelMetadata);
      char v60 = 1;
      v57((char *)v67, 0, 1, v56);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v58[6])(v67, 1, v56) != 1)
      {
LABEL_20:
        sub_100522F00(v67, &qword_101672EB0);
        return v60 & 1;
      }
    }
    char v60 = 0;
    goto LABEL_20;
  }
  uint64_t v70 = v54 + 4;
  int v71 = (void (*)(char *, uint64_t, uint64_t))v54[4];
  uint64_t v72 = v86;
  uint64_t v93 = v70;
  uint64_t v88 = v71;
  v71(v86, (uint64_t)v25, v56);
  if (*(void *)(v50 + 16) && (unint64_t v73 = sub_1009563EC(v94), (v74 & 1) != 0))
  {
    uint64_t v75 = v84;
    sub_100F38118(*(void *)(v50 + 56) + v73 * v81, v84, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v76 = (uint64_t)v85;
    v82(v85, (char *)(v75 + *(int *)(v92 + 24)), v56);
    sub_100F38180(v75, type metadata accessor for CRLBoardViewModelMetadata);
    v57((char *)v76, 0, 1, v56);
    if (v80((char *)v76, 1, v56) != 1)
    {
      unint64_t v77 = v83;
      v88(v83, v76, v56);
      char v60 = static Date.> infix(_:_:)();
      uint64_t v78 = (void (*)(char *, uint64_t))v91[1];
      v78(v77, v56);
      v78(v72, v56);
      sub_100F38180(v94, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180((uint64_t)v47, type metadata accessor for CRLBoardIdentifier);
      return v60 & 1;
    }
  }
  else
  {
    uint64_t v76 = (uint64_t)v85;
    v57(v85, 1, 1, v56);
  }
  ((void (*)(char *, uint64_t))v91[1])(v72, v56);
  sub_100F38180(v94, type metadata accessor for CRLBoardIdentifier);
  sub_100F38180((uint64_t)v47, type metadata accessor for CRLBoardIdentifier);
  sub_100522F00(v76, &qword_101672EB0);
LABEL_10:
  char v60 = 0;
  return v60 & 1;
}

void sub_100F1C8D8(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v63 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v62 = (double **)((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10, v11);
  uint64_t v61 = (uint64_t)&v55 - v12;
  uint64_t v13 = sub_100F362F4();
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v58 = v1;
    int64_t v15 = *(void *)(v13 + 16);
    uint64_t v16 = _swiftEmptyArrayStorage;
    if (v15)
    {
      uint64_t v56 = a1;
      uint64_t v57 = v6;
      char v64 = _swiftEmptyArrayStorage;
      uint64_t v17 = &v64;
      sub_1006BB504(0, v15, 0);
      a1 = sub_100F27B80(v14);
      uint64_t v19 = v18;
      uint64_t v21 = v20 & 1;
      uint64_t v60 = v14 + 56;
      uint64_t v59 = v14;
      while ((a1 & 0x8000000000000000) == 0 && a1 < 1 << *(unsigned char *)(v14 + 32))
      {
        if (((*(void *)(v60 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a1) & 1) == 0) {
          goto LABEL_20;
        }
        if (*(_DWORD *)(v14 + 36) != v19) {
          goto LABEL_21;
        }
        uint64_t v22 = v61;
        sub_100F38118(*(void *)(v14 + 48) + *(void *)(v63 + 72) * a1, v61, type metadata accessor for CRLBoardIdentifier);
        uint64_t v17 = v62;
        sub_100F37878(v22, (uint64_t)v62, type metadata accessor for CRLBoardIdentifier);
        uint64_t v23 = UUID.uuidString.getter();
        uint64_t v25 = v24;
        sub_100F38180((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
        uint64_t v16 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v17 = &v64;
          sub_1006BB504(0, *((void *)v16 + 2) + 1, 1);
          uint64_t v16 = v64;
        }
        unint64_t v27 = *((void *)v16 + 2);
        unint64_t v26 = *((void *)v16 + 3);
        uint64_t v6 = (char *)(v27 + 1);
        if (v27 >= v26 >> 1)
        {
          uint64_t v17 = &v64;
          sub_1006BB504(v26 > 1, v27 + 1, 1);
          uint64_t v16 = v64;
        }
        *((void *)v16 + 2) = v6;
        uint64_t v28 = &v16[2 * v27];
        *((void *)v28 + 4) = v23;
        *((void *)v28 + 5) = v25;
        uint64_t v14 = v59;
        uint64_t v29 = sub_100666C8C(a1, v19, v21 & 1, v59);
        a1 = v29;
        uint64_t v19 = v30;
        uint64_t v21 = v31 & 1;
        if (!--v15)
        {
          sub_10056A4C4(v29, v30, v31 & 1);
          uint64_t v6 = v57;
          a1 = v56;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
    else
    {
LABEL_17:
      int64_t v15 = v14;
      char v64 = v16;
      sub_1005057FC((uint64_t *)&unk_1016773F0);
      sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
      uint64_t v17 = (double **)BidirectionalCollection<>.joined(separator:)();
      uint64_t v21 = v39;
      swift_bridgeObjectRelease();
      if (qword_10166FA60 == -1)
      {
LABEL_18:
        swift_beginAccess();
        uint64_t v40 = (void *)static OS_os_log.crlBoardLibrary;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v42 = sub_100528BE4();
        *(void *)(inited + 64) = v42;
        *(void *)(inited + 32) = v17;
        *(void *)(inited + 40) = v21;
        id v43 = v40;
        uint64_t v44 = Notification.description.getter();
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v42;
        *(void *)(inited + 72) = v44;
        *(void *)(inited + 80) = v45;
        uint64_t v46 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Updating metadata for boards (%@) for notification: %@", 54, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v47 = v58;
        sub_100F1CFB4(a1);
        uint64_t v48 = type metadata accessor for TaskPriority();
        uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56);
        v49(v6, 1, 1, v48);
        uint64_t v50 = (void *)swift_allocObject();
        v50[2] = 0;
        v50[3] = 0;
        v50[4] = v47;
        id v51 = v47;
        sub_100B107F4((uint64_t)v6, (uint64_t)&unk_10167B178, (uint64_t)v50);
        swift_release();
        sub_100522F00((uint64_t)v6, &qword_101672BB0);
        v49(v6, 1, 1, v48);
        type metadata accessor for MainActor();
        id v52 = v51;
        uint64_t v53 = static MainActor.shared.getter();
        unint64_t v54 = (void *)swift_allocObject();
        v54[2] = v53;
        v54[3] = &protocol witness table for MainActor;
        v54[4] = v52;
        v54[5] = v15;
        sub_1005912D0((uint64_t)v6, (uint64_t)&unk_1016A2370, (uint64_t)v54);
        swift_release();
        return;
      }
    }
    swift_once();
    goto LABEL_18;
  }
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v32 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v33 = swift_initStackObject();
  *(_OWORD *)(v33 + 16) = xmmword_10117E810;
  id v34 = v32;
  uint64_t v35 = Notification.description.getter();
  uint64_t v37 = v36;
  *(void *)(v33 + 56) = &type metadata for String;
  *(void *)(v33 + 64) = sub_100528BE4();
  *(void *)(v33 + 32) = v35;
  *(void *)(v33 + 40) = v37;
  uint64_t v38 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v38, (uint64_t)"No board identifier for notification: %@", 40, 2, v33);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_100F1CFB4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  char v64 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Notification();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v61 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v65 = (char *)v60 - v11;
  __chkstk_darwin(v12, v13);
  int64_t v15 = (char *)v60 - v14;
  v60[1] = v16;
  __chkstk_darwin(v17, v18);
  char v20 = (char *)v60 - v19;
  uint64_t v66 = a1;
  uint64_t v21 = (void *)Notification.name.getter();
  if (qword_10166FE20 != -1) {
    swift_once();
  }
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;
  if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
    char v26 = 1;
  }
  else {
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v27(v20, v66, v5);
  if (v26)
  {
    char v28 = 1;
  }
  else
  {
    uint64_t v29 = v27;
    uint64_t v30 = (void *)Notification.name.getter();
    if (qword_10166FE18 != -1) {
      swift_once();
    }
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
    if (v31 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v33 == v34) {
      char v28 = 1;
    }
    else {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v27 = v29;
  }
  uint64_t v63 = v6;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v6 + 8);
  v35(v20, v5);
  uint64_t v36 = v66;
  v27(v15, v66, v5);
  if (v28) {
    goto LABEL_22;
  }
  v60[0] = v27;
  uint64_t v37 = (void *)Notification.name.getter();
  if (qword_10166FE28 != -1) {
    swift_once();
  }
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v40 = v39;
  if (v38 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v40 == v41)
  {

    swift_bridgeObjectRelease_n();
    unint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v60[0];
LABEL_22:
    v35(v15, v5);
    unint64_t v42 = v65;
    v27(v65, v36, v5);
    goto LABEL_23;
  }
  char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35(v15, v5);
  unint64_t v42 = v65;
  unint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v60[0];
  ((void (*)(char *, uint64_t, uint64_t))v60[0])(v65, v36, v5);
  if ((v53 & 1) == 0)
  {
    unint64_t v54 = (void *)Notification.name.getter();
    if (qword_10166FE08 != -1) {
      swift_once();
    }
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v57 = v56;
    if (v55 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v57 != v58)
    {
      char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v35)(v42, v5);
      unint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v60[0];
      if ((v59 & 1) == 0) {
        return result;
      }
      goto LABEL_24;
    }

    swift_bridgeObjectRelease_n();
    unint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v60[0];
  }
LABEL_23:
  v35(v42, v5);
LABEL_24:
  uint64_t result = sub_100F362F4();
  if (result)
  {
    uint64_t v44 = result;
    uint64_t v45 = type metadata accessor for TaskPriority();
    uint64_t v46 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v64, 1, 1, v45);
    uint64_t v47 = v61;
    v27(v61, v36, v5);
    type metadata accessor for MainActor();
    id v48 = v62;
    uint64_t v49 = static MainActor.shared.getter();
    uint64_t v50 = v63;
    unint64_t v51 = (*(unsigned __int8 *)(v63 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    id v52 = (char *)swift_allocObject();
    *((void *)v52 + 2) = v49;
    *((void *)v52 + 3) = &protocol witness table for MainActor;
    *((void *)v52 + 4) = v44;
    *((void *)v52 + 5) = v48;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v52[v51], v47, v5);
    sub_1005912D0(v46, (uint64_t)&unk_1016A2380, (uint64_t)v52);
    return swift_release();
  }
  return result;
}

uint64_t sub_100F1D60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = type metadata accessor for MainActor();
  v5[3] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  void *v7 = v5;
  v7[1] = sub_10053DCA8;
  return sub_100EF1EDC(2, a5);
}

uint64_t sub_100F1D7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[58] = a4;
  v5[59] = a5;
  v5[60] = type metadata accessor for CRLBoardIdentifierStorage(0);
  v5[61] = swift_task_alloc();
  type metadata accessor for CRLBoardCRDTData(0);
  v5[62] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v5[63] = v6;
  v5[64] = *(void *)(v6 - 8);
  v5[65] = swift_task_alloc();
  v5[66] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v5[67] = swift_task_alloc();
  v5[68] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5[69] = swift_task_alloc();
  v5[70] = swift_task_alloc();
  v5[71] = swift_task_alloc();
  v5[72] = swift_task_alloc();
  v5[73] = swift_task_alloc();
  v5[74] = swift_task_alloc();
  v5[75] = type metadata accessor for MainActor();
  v5[76] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[77] = v7;
  void *v7 = v5;
  v7[1] = sub_100F1DA00;
  return sub_100EF1EDC(1, (uint64_t)&_swiftEmptySetSingleton);
}

uint64_t sub_100F1DA00()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F1DB3C, v1, v0);
}

uint64_t sub_100F1DB3C()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = (_OWORD *)(v0 + 272);
  swift_release();
  uint64_t v3 = Notification.userInfo.getter();
  if (!v3)
  {
    _OWORD *v2 = 0u;
    *(_OWORD *)(v0 + 288) = 0u;
LABEL_10:
    sub_100522F00(v0 + 272, &qword_101672BF0);
    goto LABEL_11;
  }
  uint64_t v4 = v3;
  *(void *)(v0 + 400) = 0xD000000000000017;
  *(void *)(v0 + 408) = 0x8000000101240F40;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10095647C(v0 + 56), (v6 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v4 + 56) + 32 * v5, v0 + 272);
  }
  else
  {
    _OWORD *v2 = 0u;
    *(_OWORD *)(v0 + 288) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0(v0 + 56);
  if (!*(void *)(v0 + 296)) {
    goto LABEL_10;
  }
  sub_1005057FC(&qword_101677400);
  if (swift_dynamicCast())
  {
    uint64_t v7 = *(void **)(v0 + 456);
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v7 = &_swiftEmptySetSingleton;
LABEL_12:
  uint64_t v132 = (uint64_t)v7;
  uint64_t v8 = (_OWORD *)(v0 + 208);
  uint64_t v9 = Notification.userInfo.getter();
  if (!v9)
  {
    *uint64_t v8 = 0u;
    *(_OWORD *)(v0 + 224) = 0u;
LABEL_21:
    sub_100522F00(v0 + 208, &qword_101672BF0);
    goto LABEL_22;
  }
  uint64_t v10 = v9;
  *(void *)(v0 + 416) = 0xD00000000000001BLL;
  *(void *)(v0 + 424) = 0x800000010127C680;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_10095647C(v0 + 96), (v12 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v10 + 56) + 32 * v11, v0 + 208);
  }
  else
  {
    *uint64_t v8 = 0u;
    *(_OWORD *)(v0 + 224) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0(v0 + 96);
  if (!*(void *)(v0 + 232)) {
    goto LABEL_21;
  }
  sub_1005057FC(&qword_101677400);
  if (swift_dynamicCast())
  {
    uint64_t v13 = *(void **)(v0 + 448);
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v13 = &_swiftEmptySetSingleton;
LABEL_23:
  uint64_t v14 = (_OWORD *)(v0 + 240);
  uint64_t v15 = Notification.userInfo.getter();
  if (v15)
  {
    uint64_t v16 = v15;
    *(void *)(v0 + 432) = 0x446C61636F4C7369;
    *(void *)(v0 + 440) = 0xEF6E6F6974656C65;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v16 + 16) && (unint64_t v17 = sub_10095647C(v0 + 16), (v18 & 1) != 0))
    {
      sub_100522D7C(*(void *)(v16 + 56) + 32 * v17, v0 + 240);
    }
    else
    {
      *uint64_t v14 = 0u;
      *(_OWORD *)(v0 + 256) = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10050BFE0(v0 + 16);
    if (*(void *)(v0 + 264))
    {
      int v19 = swift_dynamicCast();
      char v20 = *(unsigned char *)(v0 + 624);
      if (!v19) {
        char v20 = 2;
      }
      goto LABEL_33;
    }
  }
  else
  {
    *uint64_t v14 = 0u;
    *(_OWORD *)(v0 + 256) = 0u;
  }
  sub_100522F00(v0 + 240, &qword_101672BF0);
  char v20 = 2;
LABEL_33:
  char v128 = v20;
  uint64_t v21 = v0 + 328;
  id v22 = [self standardUserDefaults];
  unsigned int v23 = [v22 BOOLForKey:@"CRLAllowInteractionWithUnsupportedBoardAndBoardItemsUserDefault"];

  if (v23)
  {
    swift_bridgeObjectRelease();
    if (qword_10166FA60 != -1) {
LABEL_130:
    }
      swift_once();
    swift_beginAccess();
    id v24 = (id)static OS_os_log.crlBoardLibrary;
    uint64_t v25 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v25, (uint64_t)"CRLAllowInteractionWithUnsupportedBoardAndBoardItemsUserDefault set to true, ignoring boardIdentifiersToClose with unsupported identifiers.", 139, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v26 = v132;
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_100ED90F8((uint64_t)v13, v132);
  }
  int64_t v27 = 0;
  uint64_t v28 = v1[68];
  uint64_t v29 = v26 + 56;
  uint64_t v30 = -1;
  uint64_t v31 = -1 << *(unsigned char *)(v26 + 32);
  uint64_t v32 = v1[64];
  uint64_t v136 = v1[60];
  if (-v31 < 64) {
    uint64_t v30 = ~(-1 << -(char)v31);
  }
  unint64_t v33 = v30 & *(void *)(v26 + 56);
  uint64_t v122 = v1[58];
  int v137 = (uint64_t *)(v122 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  uint64_t v121 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController;
  int64_t v134 = (unint64_t)(63 - v31) >> 6;
  uint64_t v131 = (void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  uint64_t v129 = (void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
  uint64_t v130 = (void (**)(void, uint64_t))(v32 + 8);
  uint64_t v125 = v26;
  uint64_t v126 = v21;
  uint64_t v124 = v1[68];
  uint64_t v127 = v26 + 56;
  while (1)
  {
    if (v33)
    {
      uint64_t v141 = (v33 - 1) & v33;
      unint64_t v34 = __clz(__rbit64(v33)) | (v27 << 6);
      goto LABEL_55;
    }
    if (__OFADD__(v27++, 1)) {
      goto LABEL_128;
    }
    if (v27 >= v134) {
      break;
    }
    unint64_t v36 = *(void *)(v29 + 8 * v27);
    if (!v36)
    {
      int64_t v37 = v27 + 1;
      if (v27 + 1 >= v134) {
        break;
      }
      unint64_t v36 = *(void *)(v29 + 8 * v37);
      if (!v36)
      {
        int64_t v37 = v27 + 2;
        if (v27 + 2 >= v134) {
          break;
        }
        unint64_t v36 = *(void *)(v29 + 8 * v37);
        if (!v36)
        {
          int64_t v37 = v27 + 3;
          if (v27 + 3 >= v134) {
            break;
          }
          unint64_t v36 = *(void *)(v29 + 8 * v37);
          if (!v36)
          {
            while (1)
            {
              int64_t v27 = v37 + 1;
              if (__OFADD__(v37, 1)) {
                break;
              }
              if (v27 >= v134) {
                goto LABEL_123;
              }
              unint64_t v36 = *(void *)(v29 + 8 * v27);
              ++v37;
              if (v36) {
                goto LABEL_54;
              }
            }
LABEL_129:
            __break(1u);
            goto LABEL_130;
          }
        }
      }
      int64_t v27 = v37;
    }
LABEL_54:
    uint64_t v141 = (v36 - 1) & v36;
    unint64_t v34 = __clz(__rbit64(v36)) + (v27 << 6);
LABEL_55:
    uint64_t v38 = v1[74];
    uint64_t v39 = v1[73];
    sub_100F38118(*(void *)(v26 + 48) + *(void *)(v28 + 72) * v34, v38, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878(v38, v39, type metadata accessor for CRLBoardIdentifier);
    swift_beginAccess();
    uint64_t v40 = *v137;
    if (!*(void *)(*v137 + 16) || (unint64_t v41 = sub_1009563EC(v1[73]), (v42 & 1) == 0))
    {
      swift_endAccess();
      goto LABEL_41;
    }
    uint64_t v43 = v1[73];
    uint64_t v44 = *(void *)(*(void *)(v40 + 56) + 8 * v41);
    swift_endAccess();
    uint64_t v21 = (uint64_t)*(id *)(*(void *)(v44 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    int64_t v135 = v27;
    char v133 = sub_1006E5EA4(v43, v132);
    if (v133)
    {
      unint64_t v45 = *(void *)(*(void *)(v122 + v121)
                      + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
      if (v45 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
        if (v46)
        {
LABEL_60:
          uint64_t v123 = v21;
          uint64_t v47 = 0;
          unint64_t v139 = v45;
          unint64_t v140 = v45 & 0xC000000000000001;
          uint64_t v138 = v46;
          while (1)
          {
            if (v140)
            {
              id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v49 = v47 + 1;
              if (__OFADD__(v47, 1)) {
                goto LABEL_126;
              }
            }
            else
            {
              id v48 = *(id *)(v45 + 8 * v47 + 32);
              uint64_t v49 = v47 + 1;
              if (__OFADD__(v47, 1))
              {
LABEL_126:
                __break(1u);
                goto LABEL_127;
              }
            }
            uint64_t v50 = v1[73];
            uint64_t v51 = v1[72];
            uint64_t v52 = v1[71];
            char v53 = v48;
            uint64_t v54 = (uint64_t)v48 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier;
            char v55 = static UUID.== infix(_:_:)();
            sub_100F38118(v54, v51, type metadata accessor for CRLBoardIdentifier);
            sub_100F38118(v50, v52, type metadata accessor for CRLBoardIdentifier);
            uint64_t v21 = v1[72];
            uint64_t v56 = v1[71];
            if (v55)
            {
              uint64_t v57 = *(int *)(v136 + 20);
              uint64_t v58 = *(void *)(v21 + v57);
              uint64_t v59 = *(void *)(v21 + v57 + 8);
              uint64_t v60 = (void *)(v56 + v57);
              if (v58 == *v60 && v59 == v60[1])
              {
                sub_100F38180(v1[71], type metadata accessor for CRLBoardIdentifier);
                sub_100F38180(v21, type metadata accessor for CRLBoardIdentifier);
LABEL_81:
                swift_bridgeObjectRelease_n();
                sub_1005057FC((uint64_t *)&unk_101676C10);
                uint64_t inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_101177E70;
                *(void *)(inited + 32) = v53;
                unint64_t v142 = inited;
                specialized Array._endMutation()();
                if (v142 >> 62)
                {
                  id v117 = v53;
                  swift_bridgeObjectRetain();
                  uint64_t v118 = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                  if (v118)
                  {
LABEL_83:
                    swift_bridgeObjectRetain();
                    unint64_t v66 = swift_bridgeObjectRetain();
                    uint64_t v67 = sub_100F29878(v66, v142);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_10053D3C0((uint64_t)v67);
                  }
                }
                else
                {
                  uint64_t v64 = *(void *)((v142 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  id v65 = v53;
                  if (v64) {
                    goto LABEL_83;
                  }
                }
                swift_bridgeObjectRelease();

LABEL_85:
                uint64_t v21 = v123;
                goto LABEL_88;
              }
              char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
              sub_100F38180(v56, type metadata accessor for CRLBoardIdentifier);
              sub_100F38180(v21, type metadata accessor for CRLBoardIdentifier);
              unint64_t v45 = v139;
              if (v62) {
                goto LABEL_81;
              }
            }
            else
            {
              sub_100F38180(v1[71], type metadata accessor for CRLBoardIdentifier);
              sub_100F38180(v21, type metadata accessor for CRLBoardIdentifier);
              unint64_t v45 = v139;
            }

            ++v47;
            if (v49 == v138)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_85;
            }
          }
        }
      }
      else
      {
        uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v46) {
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRelease_n();
    }
LABEL_88:
    uint64_t v68 = v1[67];
    unint64_t v69 = (void *)v1[58];
    uint64_t v70 = type metadata accessor for TaskPriority();
    uint64_t v71 = *(void *)(v70 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v68, 1, 1, v70);
    uint64_t v72 = (char *)(id)v21;
    id v73 = v69;
    uint64_t v74 = static MainActor.shared.getter();
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v74;
    *(void *)(v75 + 24) = &protocol witness table for MainActor;
    *(void *)(v75 + 32) = v72;
    *(unsigned char *)(v75 + 40) = v133 & 1;
    *(unsigned char *)(v75 + 41) = v128;
    *(void *)(v75 + 48) = v73;
    int v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v68, 1, v70);
    uint64_t v77 = v1[67];
    if (v76 == 1)
    {
      sub_100522F00(v1[67], &qword_101672BB0);
      if (*(void *)(v75 + 16)) {
        goto LABEL_90;
      }
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v77, v70);
      if (*(void *)(v75 + 16))
      {
LABEL_90:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v78 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v80 = v79;
        swift_unknownObjectRelease();
        goto LABEL_93;
      }
    }
    uint64_t v78 = 0;
    uint64_t v80 = 0;
LABEL_93:
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = &unk_1016A2358;
    *(void *)(v81 + 24) = v75;
    if (v80 | v78)
    {
      v1[22] = 0;
      v1[23] = 0;
      v1[24] = v78;
      v1[25] = v80;
    }
    uint64_t v82 = v1[66];
    uint64_t v83 = v1[65];
    uint64_t v84 = v1[62];
    uint64_t v85 = v1[63];
    swift_task_create();
    swift_release();
    uint64_t v86 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v87 = *(void *)&v72[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100F38118(v87, v84, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100F38180(v84, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v88 = (uint64_t *)(*(void *)&v72[v86] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v90 = *v88;
    unint64_t v89 = v88[1];
    (*v131)(v83, v82, v85);
    BOOL v92 = v90 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v89 == v91;
    if (v92
      || (char v93 = _stringCompareWithSmolCheck(_:_:expecting:)(),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          (v93 & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v90 = 0;
      unint64_t v89 = 0xE000000000000000;
    }
    uint64_t v94 = v1[70];
    uint64_t v95 = v1[69];
    uint64_t v96 = v1[65];
    uint64_t v97 = v1[63];
    uint64_t v98 = v1[61];
    (*v130)(v1[66], v97);
    (*v129)(v98, v96, v97);
    uint64_t v99 = (void *)(v98 + *(int *)(v136 + 20));
    void *v99 = v90;
    v99[1] = v89;
    sub_100F37878(v98, v95, type metadata accessor for CRLBoardIdentifierStorage);
    sub_100F37878(v95, v94, type metadata accessor for CRLBoardIdentifier);
    swift_beginAccess();
    uint64_t v100 = *v137;
    if (*(void *)(*v137 + 16) && (unint64_t v101 = sub_1009563EC(v1[70]), (v102 & 1) != 0))
    {
      uint64_t v103 = *(void *)(*(void *)(v100 + 56) + 8 * v101);
      swift_endAccess();
      id v104 = [*(id *)(v103 + 32) allObjects];
      type metadata accessor for CRLBoardLibraryHeadlessController();
      unint64_t v105 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      swift_endAccess();
      unint64_t v105 = (unint64_t)_swiftEmptyArrayStorage;
    }
    int64_t v27 = v135;
    char v106 = (void *)v1[58];
    if (v105 >> 62)
    {
      id v114 = v106;
      swift_bridgeObjectRetain();
      uint64_t v107 = _CocoaArrayWrapper.endIndex.getter();
      if (v107)
      {
LABEL_107:
        if ((v105 & 0xC000000000000001) != 0) {
          char v109 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          char v109 = (char *)*(id *)(v105 + 32);
        }
        uint64_t v110 = v109;
        sub_100EDCA20(v109);

        if (v107 != 1)
        {
          uint64_t v21 = 5;
          while (1)
          {
            id v111 = (v105 & 0xC000000000000001) != 0
                 ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
                 : (char *)*(id *)(v105 + 8 * v21);
            id v112 = v111;
            uint64_t v113 = v21 - 3;
            if (__OFADD__(v21 - 4, 1)) {
              break;
            }
            sub_100EDCA20(v111);

            ++v21;
            if (v113 == v107) {
              goto LABEL_117;
            }
          }
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
          goto LABEL_129;
        }
LABEL_117:
        swift_bridgeObjectRelease();
        uint64_t v26 = v125;
        uint64_t v21 = v126;
        uint64_t v28 = v124;
        int64_t v27 = v135;
        goto LABEL_120;
      }
    }
    else
    {
      uint64_t v107 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v108 = v106;
      swift_bridgeObjectRetain();
      if (v107) {
        goto LABEL_107;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = v125;
    uint64_t v21 = v126;
    uint64_t v28 = v124;
LABEL_120:
    uint64_t v115 = v1[70];
    BOOL v116 = (void *)v1[58];
    swift_bridgeObjectRelease();
    sub_100F38180(v115, type metadata accessor for CRLBoardIdentifier);

    uint64_t v29 = v127;
LABEL_41:
    unint64_t v33 = v141;
    sub_100F38180(v1[73], type metadata accessor for CRLBoardIdentifier);
  }
LABEL_123:
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v119 = (uint64_t (*)(void))v1[1];
  return v119();
}

uint64_t sub_100F1EDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[21] = a5;
  v6[22] = a6;
  v6[20] = a4;
  v6[23] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[26] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F1EEE4, v8, v7);
}

uint64_t sub_100F1EEE4()
{
  uint64_t v44 = v0[23];
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  swift_release();
  uint64_t v41 = v1 + 56;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 56);
  char v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  int64_t v42 = (unint64_t)(63 - v4) >> 6;
  uint64_t v43 = v1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }
    if (v11 >= v42) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v41 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v42) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v41 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v42) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v41 + 8 * v8);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_22:
    uint64_t v14 = v0[24];
    uint64_t v15 = v0[25];
    sub_100F38118(*(void *)(v43 + 48) + *(void *)(v44 + 72) * v10, v15, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878(v15, v14, type metadata accessor for CRLBoardIdentifier);
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v16 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v18 = v16;
    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v21 = v20;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v19;
    *(void *)(inited + 40) = v21;
    uint64_t v22 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Did sync a CKShare change for board identifier: %@", 50, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_beginAccess();
    uint64_t v23 = *v6;
    if (!*(void *)(*v6 + 16) || (unint64_t v24 = sub_1009563EC(v0[24]), (v25 & 1) == 0))
    {
      swift_endAccess();
      goto LABEL_5;
    }
    uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
    swift_endAccess();
    swift_retain();
    int64_t v27 = (void *)Notification.name.getter();
    if (qword_10166FE28 != -1) {
      swift_once();
    }
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;
    if (v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31)
    {
      swift_bridgeObjectRelease_n();

LABEL_32:
      id v33 = (id)static OS_os_log.shareState;
      uint64_t v34 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Received a CRLBoardDataStoreDidSyncCKShareDeletion notification.", 64, 2, (uint64_t)_swiftEmptyArrayStorage);

      uint64_t v35 = *(char **)(*(void *)(v26 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      if (*(void *)(*(void *)&v35[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16))
      {
        unint64_t v36 = v35;
        swift_retain();
        sub_100F8570C(0);
        swift_release();
      }
      goto LABEL_34;
    }
    char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v32) {
      goto LABEL_32;
    }
LABEL_34:
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    uint64_t v37 = v0[24];
    swift_beginAccess();
    id v38 = (id)static OS_os_log.realTimeSync;
    uint64_t v39 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Ensure that we are in an activity, and switch between Me-to-Me and CKShare if necessary.", 88, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_100EE8550(v37);
    swift_release();
LABEL_5:
    uint64_t result = sub_100F38180(v0[24], type metadata accessor for CRLBoardIdentifier);
  }
  int64_t v13 = v11 + 3;
  if (v13 < v42)
  {
    unint64_t v12 = *(void *)(v41 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_41;
        }
        if (v8 >= v42) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v41 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_21;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_21;
  }
LABEL_37:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = (uint64_t (*)(void))v0[1];
  return v40();
}

void sub_100F1F498(void **a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  unint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int64_t v8 = (char *)Strong;
    if ([v6 BOOLForKey:@"CRLEnsureOwnershipOfDataUserDefault"])
    {
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v9 = (id)static OS_os_log.boardStore;
      uint64_t v10 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Observed change to dataclass. About to ensure ownership of data after some delay.", 81, 2, (uint64_t)_swiftEmptyArrayStorage);

      uint64_t v11 = type metadata accessor for TaskPriority();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
      unint64_t v12 = *(void **)&v8[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
      int64_t v13 = (void *)swift_allocObject();
      v13[2] = 0;
      v13[3] = 0;
      v13[4] = v12;
      id v14 = v12;
      sub_100B107F4((uint64_t)v5, (uint64_t)&unk_1016A25E0, (uint64_t)v13);
      swift_release();
      sub_100522F00((uint64_t)v5, &qword_101672BB0);
      [v6 removeObjectForKey:@"CRLEnsureOwnershipOfDataUserDefault"];
    }
    else
    {
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v15 = (char *)(id)static OS_os_log.boardStore;
      uint64_t v16 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Observed change to dataclass. But no need to ensure ownership of data.", 70, 2, (uint64_t)_swiftEmptyArrayStorage);

      int64_t v8 = v15;
    }
  }
}

uint64_t sub_100F1F73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 248) = a4;
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 256) = v5;
  *unint64_t v5 = v4;
  v5[1] = sub_100F1F7D8;
  return static Task<>.sleep(nanoseconds:)(2000000000);
}

uint64_t sub_100F1F7D8()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v2 = sub_100F1FC4C;
  }
  else
  {
    uint64_t v2 = sub_100F1F8F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100F1F8F4()
{
  uint64_t v1 = v0[33];
  if (qword_10166FB70 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[31];
  swift_beginAccess();
  id v3 = (id)static OS_os_log.boardStore;
  uint64_t v4 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Observed change to dataclass. Ensuring ownership of data now.", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

  *(void *)(swift_task_alloc() + 16) = v2;
  OS_dispatch_queue.sync<A>(execute:)();
  if (v1)
  {
    swift_task_dealloc();
    unint64_t v5 = (void *)static OS_os_log.boardStore;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getErrorValue();
    id v7 = v5;
    uint64_t v8 = Error.localizedDescription.getter();
    uint64_t v10 = v9;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v11 = sub_100528BE4();
    *(void *)(inited + 64) = v11;
    *(void *)(inited + 32) = v8;
    *(void *)(inited + 40) = v10;
    uint64_t v12 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Failed to ensure ownership of data: %@", 38, 2, inited);
    swift_bridgeObjectRelease();

    uint64_t v13 = swift_initStackObject();
    *(_OWORD *)(v13 + 16) = xmmword_10117E810;
    swift_getErrorValue();
    uint64_t v14 = Error.localizedDescription.getter();
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = v11;
    *(void *)(v13 + 32) = v14;
    *(void *)(v13 + 40) = v15;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"startWatchingForUserDataDeletionRequest()", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3670, (uint64_t)"Failed to ensure ownership of data: %@", 38, 2u, v13);
    sub_100586FD4(v13, (uint64_t)"Failed to ensure ownership of data: %@");
    sub_1005871AC(v13, (uint64_t)"startWatchingForUserDataDeletionRequest()", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3670);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v16, v17);
    return _assertionFailure(_:_:file:line:flags:)();
  }
  else
  {
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t sub_100F1FC4C()
{
  if (qword_10166FB70 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 248);
  swift_beginAccess();
  id v2 = (id)static OS_os_log.boardStore;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Observed change to dataclass. Ensuring ownership of data now.", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

  *(void *)(swift_task_alloc() + 16) = v1;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t destroy for CRLBoardLibrary.BoardInfo.RealTimeSyncSession()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CRLBoardLibrary.BoardInfo.RealTimeSyncSession(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLBoardLibrary.BoardInfo.RealTimeSyncSession(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for CRLBoardLibrary.BoardInfo.RealTimeSyncSession(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLBoardLibrary.BoardInfo.RealTimeSyncSession()
{
  return &type metadata for CRLBoardLibrary.BoardInfo.RealTimeSyncSession;
}

ValueMetadata *type metadata accessor for CRLBoardLibrary.UpdateOptions()
{
  return &type metadata for CRLBoardLibrary.UpdateOptions;
}

unint64_t sub_100F20248()
{
  unint64_t result = qword_1016A2200;
  if (!qword_1016A2200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2200);
  }
  return result;
}

unint64_t sub_100F202A0()
{
  unint64_t result = qword_1016A2208;
  if (!qword_1016A2208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2208);
  }
  return result;
}

unint64_t sub_100F202F8()
{
  unint64_t result = qword_1016A2210;
  if (!qword_1016A2210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2210);
  }
  return result;
}

unint64_t sub_100F20350()
{
  unint64_t result = qword_1016A2218;
  if (!qword_1016A2218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2218);
  }
  return result;
}

uint64_t sub_100F203A4()
{
  return sub_100F359B0(&qword_1016A2220, (void (*)(uint64_t))type metadata accessor for CRLBoardLibrary.BoardInfo);
}

uint64_t sub_100F203EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(sub_1005057FC(&qword_1016A22C8) + 48);
  uint64_t v5 = a2 + *(int *)(sub_1005057FC(&qword_10168CF18) + 48);
  sub_100F38118(a1, a2, type metadata accessor for CRLBoardIdentifier);
  return sub_100F38118(v4, v5, type metadata accessor for CRLBoardViewModelMetadata);
}

uint64_t sub_100F20480(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  Swift::String v17 = (char *)v47 - v16;
  v47[0] = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v48 = *(void *)(v47[0] - 8);
  __chkstk_darwin(v47[0], v18);
  uint64_t v20 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC(&qword_1016A22D0);
  __chkstk_darwin(v21 - 8, v22);
  unint64_t v24 = (char *)v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v26 = ~v25;
  uint64_t v27 = *(void *)(a1 + 64);
  uint64_t v28 = -v25;
  uint64_t v49 = a1;
  uint64_t v50 = a1 + 64;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  else {
    uint64_t v29 = -1;
  }
  uint64_t v51 = v26;
  uint64_t v52 = 0;
  uint64_t v53 = v29 & v27;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  v47[2] = a1;
  swift_bridgeObjectRetain();
  v47[1] = a3;
  swift_retain();
  sub_100F2804C((uint64_t)v24);
  uint64_t v30 = sub_1005057FC(&qword_10168CF18);
  for (int i = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v24, 1, v30);
        ;
        int i = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v24, 1, v30))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_10052E1EC();
      return swift_release();
    }
    uint64_t v32 = (uint64_t)&v24[*(int *)(v30 + 48)];
    sub_100F37878((uint64_t)v24, (uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878(v32, (uint64_t)v17, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v33 = *a5;
    unint64_t v35 = sub_1009563EC((uint64_t)v20);
    uint64_t v36 = *(void *)(v33 + 16);
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      break;
    }
    char v39 = v34;
    if (*(void *)(v33 + 24) >= v38)
    {
      if (a4)
      {
        if (v34) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_10097F4C0();
        if (v39) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1009652C8(v38, a4 & 1);
      unint64_t v40 = sub_1009563EC((uint64_t)v20);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_22;
      }
      unint64_t v35 = v40;
      if (v39)
      {
LABEL_5:
        sub_100F38118((uint64_t)v17, (uint64_t)v14, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100F38180((uint64_t)v17, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100F38180((uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
        sub_100F35A30((uint64_t)v14, *(void *)(*a5 + 56) + *(void *)(v56 + 72) * v35, type metadata accessor for CRLBoardViewModelMetadata);
        goto LABEL_6;
      }
    }
    int64_t v42 = (void *)*a5;
    *(void *)(*a5 + 8 * (v35 >> 6) + 64) |= 1 << v35;
    sub_100F37878((uint64_t)v20, v42[6] + *(void *)(v48 + 72) * v35, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878((uint64_t)v17, v42[7] + *(void *)(v56 + 72) * v35, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v43 = v42[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_21;
    }
    v42[2] = v45;
LABEL_6:
    sub_100F2804C((uint64_t)v24);
    uint64_t v30 = sub_1005057FC(&qword_10168CF18);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_100F20934(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_100F6A024(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100F209DC(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100F209DC(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v353 = (uint64_t)&v327 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  v355 = (char *)&v327 - v8;
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v352 = (uint64_t)&v327 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  v354 = (char *)&v327 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v338 = (uint64_t)&v327 - v17;
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v340 = (uint64_t)&v327 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v337 = (uint64_t)&v327 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v339 = (uint64_t)&v327 - v26;
  __chkstk_darwin(v25, v27);
  uint64_t v332 = (uint64_t)&v327 - v28;
  uint64_t v29 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v349 = *(void *)(v29 - 8);
  uint64_t v31 = __chkstk_darwin(v29, v30);
  uint64_t v341 = (uint64_t)&v327 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v360 = (uint64_t)&v327 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  v363 = (char *)&v327 - v38;
  uint64_t v40 = __chkstk_darwin(v37, v39);
  v362 = (char *)&v327 - v41;
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v45 = (char *)&v327 - v44;
  uint64_t v47 = __chkstk_darwin(v43, v46);
  uint64_t v361 = (uint64_t)&v327 - v48;
  uint64_t v50 = __chkstk_darwin(v47, v49);
  uint64_t v347 = (uint64_t)&v327 - v51;
  uint64_t v53 = __chkstk_darwin(v50, v52);
  v343 = (char *)&v327 - v54;
  uint64_t v56 = __chkstk_darwin(v53, v55);
  uint64_t v350 = (uint64_t)&v327 - v57;
  uint64_t v59 = __chkstk_darwin(v56, v58);
  uint64_t v346 = (uint64_t)&v327 - v60;
  uint64_t v62 = __chkstk_darwin(v59, v61);
  uint64_t v64 = (char *)&v327 - v63;
  uint64_t v66 = __chkstk_darwin(v62, v65);
  v335 = (char *)&v327 - v67;
  uint64_t v69 = __chkstk_darwin(v66, v68);
  uint64_t v336 = (uint64_t)&v327 - v70;
  __chkstk_darwin(v69, v71);
  uint64_t v334 = (uint64_t)&v327 - v72;
  v370 = a1;
  Swift::Int v73 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v73);
  if (result >= v73)
  {
    if (v73 < 0) {
      goto LABEL_205;
    }
    if (v73) {
      return sub_100F23754(0, v73, 1, v370);
    }
    return result;
  }
  if (v73 >= 0) {
    uint64_t v75 = v73;
  }
  else {
    uint64_t v75 = v73 + 1;
  }
  if (v73 < -1)
  {
LABEL_213:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x100F236F4);
  }
  v330 = v64;
  Swift::Int v329 = result;
  if (v73 < 2)
  {
    uint64_t v79 = _swiftEmptyArrayStorage;
    unint64_t v348 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80));
    if (v73 != 1)
    {
      unint64_t v82 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v81 = _swiftEmptyArrayStorage;
      goto LABEL_171;
    }
    v328 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v76 = v75 >> 1;
    uint64_t v77 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v77 + 16) = v76;
    uint64_t v78 = *(unsigned __int8 *)(v349 + 80);
    v328 = (double *)v77;
    unint64_t v348 = v77 + ((v78 + 32) & ~v78);
  }
  int64_t v80 = 0;
  uint64_t v81 = _swiftEmptyArrayStorage;
  v345 = "serveCRDTMetadata";
  unint64_t v327 = 0x800000010128AE30;
  uint64_t v358 = v29;
  v359 = v45;
  do
  {
    int64_t v83 = v80 + 1;
    int64_t v344 = v80;
    if (v80 + 1 >= v73)
    {
      int64_t v95 = v80 + 1;
      goto LABEL_121;
    }
    uint64_t v365 = v73;
    uint64_t v84 = *v370;
    uint64_t v85 = *(void *)(v349 + 72);
    int64_t v86 = v80;
    uint64_t v87 = v334;
    sub_100F38118(*v370 + v85 * v83, v334, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v342 = v84;
    sub_100F38118(v84 + v85 * v86, v336, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100F38118(v87, (uint64_t)v335, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v89 = v332;
        sub_100F37878((uint64_t)v335, v332, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v90 = sub_100DD4C48();
        uint64_t v92 = v91;
        char v93 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        uint64_t v94 = (unsigned char *)v89;
      }
      else
      {
        uint64_t v97 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
        uint64_t v94 = v335;
        uint64_t v98 = (uint64_t *)&v335[v97];
        uint64_t v90 = *v98;
        uint64_t v92 = v98[1];
        char v93 = type metadata accessor for CRLBoardIdentifier;
      }
      sub_100F38180((uint64_t)v94, v93);
      goto LABEL_25;
    }
    if (!*v335)
    {
      id v99 = [self mainBundle:v327];
      NSString v100 = String._bridgeToObjectiveC()();
      NSString v101 = String._bridgeToObjectiveC()();
      id v102 = [v99 localizedStringForKey:v100 value:v101 table:0];

      uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v92 = v103;

LABEL_25:
      int64_t v80 = v344;
      uint64_t v96 = v365;
      goto LABEL_27;
    }
    int64_t v80 = v344;
    uint64_t v96 = v365;
    id v104 = [self mainBundle];
    NSString v105 = String._bridgeToObjectiveC()();
    NSString v106 = String._bridgeToObjectiveC()();
    id v107 = [v104 localizedStringForKey:v105 value:v106 table:0];

    uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v92 = v108;

LABEL_27:
    uint64_t v368 = v90;
    uint64_t v369 = v92;
    uint64_t v109 = (uint64_t)v330;
    sub_100F38118(v336, (uint64_t)v330, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int v110 = swift_getEnumCaseMultiPayload();
    if (v110)
    {
      if (v110 == 1)
      {
        uint64_t v111 = v332;
        sub_100F37878(v109, v332, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v112 = sub_100DD4C48();
        uint64_t v114 = v113;
        uint64_t v115 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        uint64_t v116 = v111;
      }
      else
      {
        uint64_t v120 = (uint64_t *)(v109 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
        uint64_t v116 = v109;
        uint64_t v112 = *v120;
        uint64_t v114 = v120[1];
        uint64_t v115 = type metadata accessor for CRLBoardIdentifier;
      }
      sub_100F38180(v116, v115);
    }
    else
    {
      id v117 = [self mainBundle];
      NSString v118 = String._bridgeToObjectiveC()();
      NSString v119 = String._bridgeToObjectiveC()();
      id v121 = [v117 localizedStringForKey:v118 value:v119 table:0];

      uint64_t v112 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v114 = v122;
    }
    uint64_t v366 = v112;
    uint64_t v367 = v114;
    int64_t v357 = sub_10052E310();
    uint64_t v364 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100F38180(v336, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100F38180(v334, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int64_t v95 = v80 + 2;
    if (v80 + 2 < v96)
    {
      v331 = v81;
      uint64_t v356 = v85 * v83;
      uint64_t v123 = v342;
      int64_t v124 = v85 * v95;
      while (1)
      {
        int64_t v125 = v95;
        uint64_t v126 = v346;
        sub_100F38118(v123 + v124, v346, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100F38118(v123 + v356, v350, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v127 = v126;
        char v128 = v343;
        sub_100F38118(v127, (uint64_t)v343, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int v129 = swift_getEnumCaseMultiPayload();
        if (v129)
        {
          if (v129 == 1)
          {
            uint64_t v130 = (uint64_t)v128;
            uint64_t v131 = v339;
            sub_100F37878(v130, v339, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v132 = v131;
            uint64_t v133 = v337;
            sub_100F38118(v132, v337, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v134 = sub_1005057FC(&qword_101670F30);
            switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 48))(v133, 5, v134))
            {
              case 1u:
              case 2u:
              case 3u:
              case 4u:
                id v151 = [self mainBundle];
                NSString v152 = String._bridgeToObjectiveC()();
                NSString v153 = String._bridgeToObjectiveC()();
                id v154 = [v151 localizedStringForKey:v152 value:v153 table:0];

                goto LABEL_45;
              case 5u:
                id v176 = [self mainBundle];
                NSString v177 = String._bridgeToObjectiveC()();
                NSString v178 = String._bridgeToObjectiveC()();
                id v154 = [v176 localizedStringForKey:v177 value:v178 table:0];

LABEL_45:
                uint64_t v137 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v138 = v155;

                break;
              default:
                uint64_t v135 = v337;
                uint64_t v136 = (uint64_t *)(v337 + *(int *)(v134 + 48));
                uint64_t v137 = *v136;
                uint64_t v138 = v136[1];
                uint64_t v139 = type metadata accessor for UUID();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v139 - 8) + 8))(v135, v139);
                break;
            }
            char v144 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
            uint64_t v145 = v339;
          }
          else
          {
            uint64_t v143 = (uint64_t *)&v128[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
            uint64_t v137 = *v143;
            uint64_t v138 = v143[1];
            char v144 = type metadata accessor for CRLBoardIdentifier;
            uint64_t v145 = (uint64_t)v128;
          }
          sub_100F38180(v145, v144);
        }
        else
        {
          if (*v128)
          {
            id v140 = [self mainBundle];
            NSString v141 = String._bridgeToObjectiveC()();
            NSString v142 = String._bridgeToObjectiveC()();
            id v149 = [v140 localizedStringForKey:v141 value:v142 table:0];
          }
          else
          {
            id v146 = [self mainBundle];
            NSString v147 = String._bridgeToObjectiveC()();
            NSString v148 = String._bridgeToObjectiveC()();
            id v149 = [v146 localizedStringForKey:v147 value:v148 table:0];
          }
          uint64_t v137 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v138 = v150;
        }
        uint64_t v368 = v137;
        uint64_t v369 = v138;
        sub_100F38118(v350, v347, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int v156 = swift_getEnumCaseMultiPayload();
        if (v156)
        {
          if (v156 == 1)
          {
            uint64_t v157 = v340;
            sub_100F37878(v347, v340, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v158 = v157;
            uint64_t v159 = v338;
            sub_100F38118(v158, v338, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v160 = sub_1005057FC(&qword_101670F30);
            switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 48))(v159, 5, v160))
            {
              case 1u:
              case 2u:
              case 3u:
              case 4u:
              case 5u:
                uint64_t v161 = v351;
                id v179 = [self mainBundle];
                NSString v180 = String._bridgeToObjectiveC()();
                NSString v181 = String._bridgeToObjectiveC()();
                id v182 = [v179 localizedStringForKey:v180 value:v181 table:0];

                uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v165 = v183;

                break;
              default:
                uint64_t v161 = v351;
                uint64_t v162 = v338;
                char v163 = (uint64_t *)(v338 + *(int *)(v160 + 48));
                uint64_t v164 = *v163;
                uint64_t v165 = v163[1];
                uint64_t v166 = type metadata accessor for UUID();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v166 - 8) + 8))(v162, v166);
                break;
            }
            uint64_t v173 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
            uint64_t v171 = v340;
          }
          else
          {
            uint64_t v161 = v351;
            uint64_t v170 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
            uint64_t v171 = v347;
            uint64_t v172 = (uint64_t *)(v347 + v170);
            uint64_t v164 = *v172;
            uint64_t v165 = v172[1];
            uint64_t v173 = type metadata accessor for CRLBoardIdentifier;
          }
          sub_100F38180(v171, v173);
        }
        else
        {
          uint64_t v161 = v351;
          id v167 = [self mainBundle];
          NSString v168 = String._bridgeToObjectiveC()();
          NSString v169 = String._bridgeToObjectiveC()();
          id v174 = [v167 localizedStringForKey:v168 value:v169 table:0];

          uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v165 = v175;
        }
        BOOL v184 = v364 == -1;
        uint64_t v366 = v164;
        uint64_t v367 = v165;
        uint64_t v185 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100F38180(v350, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100F38180(v346, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v351 = v161;
        if (v184 == (v185 != -1)) {
          break;
        }
        int64_t v95 = v125 + 1;
        v123 += v85;
        uint64_t v96 = v365;
        if (v365 == v125 + 1)
        {
          int64_t v95 = v365;
          uint64_t v81 = v331;
          int64_t v80 = v344;
          goto LABEL_62;
        }
      }
      uint64_t v81 = v331;
      int64_t v80 = v344;
      int64_t v95 = v125;
      uint64_t v96 = v365;
    }
    if (v364 != -1) {
      goto LABEL_75;
    }
LABEL_62:
    if (v95 < v80) {
      goto LABEL_208;
    }
    if (v80 < v95)
    {
      v331 = v81;
      uint64_t v186 = 0;
      uint64_t v187 = v85 * (v95 - 1);
      int64_t v188 = v80;
      int64_t v189 = v95 * v85;
      int64_t v190 = v188;
      uint64_t v191 = v188 * v85;
      uint64_t v333 = v85;
      do
      {
        if (v190 != v95 + v186 - 1)
        {
          uint64_t v192 = v342;
          if (!v342) {
            goto LABEL_211;
          }
          unint64_t v193 = v342 + v191;
          sub_100F37878(v342 + v191, v341, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (v191 < v187 || v193 >= v192 + v189)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v191 != v187)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          sub_100F37878(v341, v192 + v187, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v85 = v333;
        }
        ++v190;
        --v186;
        v187 -= v85;
        v189 -= v85;
        v191 += v85;
      }
      while (v190 < v95 + v186);
      uint64_t v194 = (uint64_t)v359;
      uint64_t v81 = v331;
      int64_t v80 = v344;
      uint64_t v96 = v365;
      if (v95 >= v365) {
        goto LABEL_121;
      }
    }
    else
    {
LABEL_75:
      uint64_t v194 = (uint64_t)v359;
      if (v95 >= v96) {
        goto LABEL_121;
      }
    }
    if (__OFSUB__(v95, v80)) {
      goto LABEL_204;
    }
    if (v95 - v80 >= v329) {
      goto LABEL_121;
    }
    if (__OFADD__(v80, v329)) {
      goto LABEL_206;
    }
    if (v80 + v329 >= v96) {
      int64_t v195 = v96;
    }
    else {
      int64_t v195 = v80 + v329;
    }
    if (v195 < v80)
    {
LABEL_207:
      __break(1u);
LABEL_208:
      __break(1u);
LABEL_209:
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
LABEL_212:
      __break(1u);
      goto LABEL_213;
    }
    if (v95 != v195)
    {
      v331 = v81;
      uint64_t v356 = *(void *)(v349 + 72);
      uint64_t v364 = v95 * v356;
      uint64_t v365 = v356 * (v95 - 1);
      uint64_t v342 = v195;
      do
      {
        uint64_t v197 = 0;
        int64_t v357 = v95;
        while (1)
        {
          uint64_t v198 = *v370;
          uint64_t v199 = v361;
          sub_100F38118(v364 + v197 + *v370, v361, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100F38118(v365 + v197 + v198, v194, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100F38118(v199, (uint64_t)v362, type metadata accessor for CRLBoardLibraryViewModel.Item);
          int v200 = swift_getEnumCaseMultiPayload();
          if (v200)
          {
            if (v200 == 1)
            {
              uint64_t v201 = (uint64_t)v354;
              sub_100F37878((uint64_t)v362, (uint64_t)v354, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v202 = v352;
              sub_100F38118(v201, v352, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v203 = sub_1005057FC(&qword_101670F30);
              switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v203 - 8) + 48))(v202, 5, v203))
              {
                case 1u:
                case 2u:
                case 3u:
                case 4u:
                  id v223 = [self mainBundle];
                  NSString v224 = String._bridgeToObjectiveC()();
                  NSString v225 = String._bridgeToObjectiveC()();
                  id v226 = [v223 localizedStringForKey:v224 value:v225 table:0];

                  uint64_t v194 = (uint64_t)v359;
                  goto LABEL_99;
                case 5u:
                  id v259 = [self mainBundle];
                  NSString v260 = String._bridgeToObjectiveC()();
                  NSString v261 = String._bridgeToObjectiveC()();
                  id v226 = [v259 localizedStringForKey:v260 value:v261 table:0];

                  uint64_t v194 = (uint64_t)v359;
LABEL_99:
                  uint64_t v206 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v207 = v227;

                  break;
                default:
                  uint64_t v204 = v352;
                  Class v205 = (uint64_t *)(v352 + *(int *)(v203 + 48));
                  uint64_t v206 = *v205;
                  uint64_t v207 = v205[1];
                  uint64_t v208 = type metadata accessor for UUID();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v208 - 8) + 8))(v204, v208);
                  break;
              }
              uint64_t v215 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
              v213 = v354;
            }
            else
            {
              uint64_t v212 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
              v213 = v362;
              v214 = (uint64_t *)&v362[v212];
              uint64_t v206 = *v214;
              uint64_t v207 = v214[1];
              uint64_t v215 = type metadata accessor for CRLBoardIdentifier;
            }
            sub_100F38180((uint64_t)v213, v215);
          }
          else
          {
            if (*v362)
            {
              id v209 = [self mainBundle];
              NSString v210 = String._bridgeToObjectiveC()();
              NSString v211 = String._bridgeToObjectiveC()();
              id v221 = [v209 localizedStringForKey:v210 value:v211 table:0];

              uint64_t v206 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v207 = v222;
            }
            else
            {
              id v216 = [self mainBundle];
              NSString v217 = String._bridgeToObjectiveC()();
              NSString v218 = String._bridgeToObjectiveC()();
              id v219 = [v216 localizedStringForKey:v217 value:v218 table:0];

              uint64_t v206 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v207 = v220;
            }
            uint64_t v194 = (uint64_t)v359;
          }
          uint64_t v368 = v206;
          uint64_t v369 = v207;
          sub_100F38118(v194, (uint64_t)v363, type metadata accessor for CRLBoardLibraryViewModel.Item);
          int v228 = swift_getEnumCaseMultiPayload();
          if (v228)
          {
            if (v228 == 1)
            {
              uint64_t v229 = (uint64_t)v355;
              sub_100F37878((uint64_t)v363, (uint64_t)v355, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v230 = v353;
              sub_100F38118(v229, v353, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v231 = sub_1005057FC(&qword_101670F30);
              switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v231 - 8) + 48))(v230, 5, v231))
              {
                case 1u:
                case 2u:
                case 3u:
                case 4u:
                  id v251 = [self mainBundle];
                  NSString v252 = String._bridgeToObjectiveC()();
                  NSString v253 = String._bridgeToObjectiveC()();
                  id v254 = [v251 localizedStringForKey:v252 value:v253 table:0];

                  uint64_t v194 = (uint64_t)v359;
                  goto LABEL_111;
                case 5u:
                  id v262 = [self mainBundle];
                  NSString v263 = String._bridgeToObjectiveC()();
                  NSString v264 = String._bridgeToObjectiveC()();
                  id v254 = [v262 localizedStringForKey:v263 value:v264 table:0];

                  uint64_t v194 = (uint64_t)v359;
LABEL_111:
                  uint64_t v234 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v235 = v255;

                  break;
                default:
                  uint64_t v232 = v353;
                  v233 = (uint64_t *)(v353 + *(int *)(v231 + 48));
                  uint64_t v234 = *v233;
                  uint64_t v235 = v233[1];
                  uint64_t v236 = type metadata accessor for UUID();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v236 - 8) + 8))(v232, v236);
                  break;
              }
              v243 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
              v241 = v355;
            }
            else
            {
              uint64_t v240 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
              v241 = v363;
              v242 = (uint64_t *)&v363[v240];
              uint64_t v234 = *v242;
              uint64_t v235 = v242[1];
              v243 = type metadata accessor for CRLBoardIdentifier;
            }
            sub_100F38180((uint64_t)v241, v243);
          }
          else if (*v363)
          {
            id v237 = [self mainBundle];
            NSString v238 = String._bridgeToObjectiveC()();
            NSString v239 = String._bridgeToObjectiveC()();
            id v249 = [v237 localizedStringForKey:v238 value:v239 table:0];

            uint64_t v234 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v235 = v250;

            uint64_t v194 = (uint64_t)v359;
          }
          else
          {
            id v244 = [self mainBundle];
            NSString v245 = String._bridgeToObjectiveC()();
            NSString v246 = String._bridgeToObjectiveC()();
            id v247 = [v244 localizedStringForKey:v245 value:v246 table:0];

            uint64_t v194 = (uint64_t)v359;
            uint64_t v234 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v235 = v248;
          }
          uint64_t v366 = v234;
          uint64_t v367 = v235;
          sub_10052E310();
          uint64_t v256 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100F38180(v194, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100F38180(v361, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (v256 != -1) {
            break;
          }
          uint64_t v257 = *v370;
          if (!*v370) {
            goto LABEL_209;
          }
          uint64_t v258 = v257 + v365 + v197;
          sub_100F37878(v257 + v364 + v197, v360, type metadata accessor for CRLBoardLibraryViewModel.Item);
          swift_arrayInitWithTakeFrontToBack();
          sub_100F37878(v360, v258, type metadata accessor for CRLBoardLibraryViewModel.Item);
          int64_t v196 = v357;
          v197 -= v356;
          if (v357 == ++v80) {
            goto LABEL_86;
          }
        }
        int64_t v196 = v357;
LABEL_86:
        int64_t v95 = v196 + 1;
        v365 += v356;
        v364 += v356;
        int64_t v80 = v344;
      }
      while (v95 != v342);
      int64_t v95 = v342;
      uint64_t v81 = v331;
    }
LABEL_121:
    if (v95 < v80) {
      goto LABEL_199;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v357 = v95;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v81 = sub_100F697E0(0, *((void *)v81 + 2) + 1, 1, (uint64_t)v81);
    }
    unint64_t v267 = *((void *)v81 + 2);
    unint64_t v266 = *((void *)v81 + 3);
    unint64_t v82 = v267 + 1;
    if (v267 >= v266 >> 1) {
      uint64_t v81 = sub_100F697E0((double *)(v266 > 1), v267 + 1, 1, (uint64_t)v81);
    }
    *((void *)v81 + 2) = v82;
    v268 = v81 + 4;
    v269 = &v81[2 * v267 + 4];
    int64_t v270 = v357;
    *(void *)v269 = v80;
    *((void *)v269 + 1) = v270;
    if (v267)
    {
      while (1)
      {
        unint64_t v271 = v82 - 1;
        if (v82 >= 4)
        {
          v276 = &v268[2 * v82];
          uint64_t v277 = *((void *)v276 - 8);
          uint64_t v278 = *((void *)v276 - 7);
          BOOL v282 = __OFSUB__(v278, v277);
          uint64_t v279 = v278 - v277;
          if (v282) {
            goto LABEL_188;
          }
          uint64_t v281 = *((void *)v276 - 6);
          uint64_t v280 = *((void *)v276 - 5);
          BOOL v282 = __OFSUB__(v280, v281);
          uint64_t v274 = v280 - v281;
          char v275 = v282;
          if (v282) {
            goto LABEL_189;
          }
          unint64_t v283 = v82 - 2;
          v284 = &v268[2 * v82 - 4];
          uint64_t v286 = *(void *)v284;
          uint64_t v285 = *((void *)v284 + 1);
          BOOL v282 = __OFSUB__(v285, v286);
          uint64_t v287 = v285 - v286;
          if (v282) {
            goto LABEL_191;
          }
          BOOL v282 = __OFADD__(v274, v287);
          uint64_t v288 = v274 + v287;
          if (v282) {
            goto LABEL_194;
          }
          if (v288 >= v279)
          {
            v306 = &v268[2 * v271];
            uint64_t v308 = *(void *)v306;
            uint64_t v307 = *((void *)v306 + 1);
            BOOL v282 = __OFSUB__(v307, v308);
            uint64_t v309 = v307 - v308;
            if (v282) {
              goto LABEL_198;
            }
            BOOL v299 = v274 < v309;
            goto LABEL_158;
          }
        }
        else
        {
          if (v82 != 3)
          {
            uint64_t v300 = *((void *)v81 + 4);
            uint64_t v301 = *((void *)v81 + 5);
            BOOL v282 = __OFSUB__(v301, v300);
            uint64_t v293 = v301 - v300;
            char v294 = v282;
            goto LABEL_152;
          }
          uint64_t v273 = *((void *)v81 + 4);
          uint64_t v272 = *((void *)v81 + 5);
          BOOL v282 = __OFSUB__(v272, v273);
          uint64_t v274 = v272 - v273;
          char v275 = v282;
        }
        if (v275) {
          goto LABEL_190;
        }
        unint64_t v283 = v82 - 2;
        v289 = &v268[2 * v82 - 4];
        uint64_t v291 = *(void *)v289;
        uint64_t v290 = *((void *)v289 + 1);
        BOOL v292 = __OFSUB__(v290, v291);
        uint64_t v293 = v290 - v291;
        char v294 = v292;
        if (v292) {
          goto LABEL_193;
        }
        v295 = &v268[2 * v271];
        uint64_t v297 = *(void *)v295;
        uint64_t v296 = *((void *)v295 + 1);
        BOOL v282 = __OFSUB__(v296, v297);
        uint64_t v298 = v296 - v297;
        if (v282) {
          goto LABEL_196;
        }
        if (__OFADD__(v293, v298)) {
          goto LABEL_197;
        }
        if (v293 + v298 >= v274)
        {
          BOOL v299 = v274 < v298;
LABEL_158:
          if (v299) {
            unint64_t v271 = v283;
          }
          goto LABEL_160;
        }
LABEL_152:
        if (v294) {
          goto LABEL_192;
        }
        v302 = &v268[2 * v271];
        uint64_t v304 = *(void *)v302;
        uint64_t v303 = *((void *)v302 + 1);
        BOOL v282 = __OFSUB__(v303, v304);
        uint64_t v305 = v303 - v304;
        if (v282) {
          goto LABEL_195;
        }
        if (v305 < v293) {
          goto LABEL_15;
        }
LABEL_160:
        unint64_t v310 = v271 - 1;
        if (v271 - 1 >= v82)
        {
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
          goto LABEL_207;
        }
        if (!*v370) {
          goto LABEL_210;
        }
        v311 = v81;
        v312 = &v268[2 * v310];
        uint64_t v313 = *(void *)v312;
        v314 = &v268[2 * v271];
        double v315 = v314[1];
        uint64_t v316 = v351;
        sub_100F2477C(*v370 + *(void *)(v349 + 72) * *(void *)v312, *v370 + *(void *)(v349 + 72) * *(void *)v314, *v370 + *(void *)(v349 + 72) * *(void *)&v315, v348);
        uint64_t v351 = v316;
        if (v316) {
          goto LABEL_182;
        }
        if (*(uint64_t *)&v315 < v313) {
          goto LABEL_185;
        }
        if (v271 > *((void *)v311 + 2)) {
          goto LABEL_186;
        }
        *(void *)v312 = v313;
        v268[2 * v310 + 1] = v315;
        unint64_t v317 = *((void *)v311 + 2);
        if (v271 >= v317) {
          goto LABEL_187;
        }
        uint64_t v81 = v311;
        unint64_t v82 = v317 - 1;
        memmove(&v268[2 * v271], v314 + 2, 16 * (v317 - 1 - v271));
        *((void *)v311 + 2) = v317 - 1;
        if (v317 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v82 = 1;
LABEL_15:
    Swift::Int v73 = v370[1];
    int64_t v80 = v357;
  }
  while (v357 < v73);
  uint64_t v79 = v328;
LABEL_171:
  v328 = v79;
  uint64_t v318 = v351;
  if (v82 >= 2)
  {
    uint64_t v319 = *v370;
    do
    {
      unint64_t v320 = v82 - 2;
      if (v82 < 2) {
        goto LABEL_200;
      }
      if (!v319) {
        goto LABEL_212;
      }
      v321 = v81;
      v322 = v81 + 4;
      double v323 = v81[2 * v320 + 4];
      double v324 = v81[2 * v82 + 3];
      sub_100F2477C(v319 + *(void *)(v349 + 72) * *(void *)&v323, v319 + *(void *)(v349 + 72) * *(void *)&v322[2 * v82 - 2], v319 + *(void *)(v349 + 72) * *(void *)&v324, v348);
      if (v318) {
        break;
      }
      if (*(uint64_t *)&v324 < *(uint64_t *)&v323) {
        goto LABEL_201;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v321 = sub_100F69F28((uint64_t)v321);
      }
      if (v320 >= *((void *)v321 + 2)) {
        goto LABEL_202;
      }
      v325 = &v321[2 * v320 + 4];
      double *v325 = v323;
      v325[1] = v324;
      unint64_t v326 = *((void *)v321 + 2);
      if (v82 > v326) {
        goto LABEL_203;
      }
      uint64_t v81 = v321;
      memmove(&v321[2 * v82 + 2], &v321[2 * v82 + 4], 16 * (v326 - v82));
      *((void *)v321 + 2) = v326 - 1;
      unint64_t v82 = v326 - 1;
    }
    while (v326 > 2);
  }
LABEL_182:
  swift_bridgeObjectRelease();
  v328[2] = 0.0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100F23754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  NSString v106 = a4;
  uint64_t v96 = a1;
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v98 = (uint64_t)v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v100 = (uint64_t)v94 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v97 = (uint64_t)v94 - v15;
  __chkstk_darwin(v14, v16);
  uint64_t v99 = (uint64_t)v94 - v17;
  uint64_t v18 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v20 = __chkstk_darwin(v18, v19);
  uint64_t v104 = (uint64_t)v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v25 = (char *)v94 - v24;
  uint64_t v27 = __chkstk_darwin(v23, v26);
  uint64_t v29 = (char *)v94 - v28;
  uint64_t v31 = __chkstk_darwin(v27, v30);
  uint64_t v114 = (uint64_t)v94 - v32;
  uint64_t result = __chkstk_darwin(v31, v33);
  uint64_t v107 = (uint64_t)v94 - v36;
  uint64_t v102 = a3;
  uint64_t v95 = a2;
  if (a3 != a2)
  {
    uint64_t v101 = *(void *)(v35 + 72);
    uint64_t v108 = v101 * v102;
    uint64_t v109 = v101 * (v102 - 1);
    v94[3] = "serveCRDTMetadata";
    v94[2] = 0x800000010128AE30;
    uint64_t v103 = v18;
    do
    {
      uint64_t v37 = 0;
      uint64_t v38 = v96;
      do
      {
        uint64_t v39 = v107;
        uint64_t v40 = *v106;
        uint64_t v105 = v108 + v37;
        sub_100F38118(v108 + v37 + v40, v107, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100F38118(v109 + v37 + v40, v114, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100F38118(v39, (uint64_t)v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v42 = v99;
            sub_100F37878((uint64_t)v29, v99, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v43 = v97;
            sub_100F38118(v42, v97, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v44 = sub_1005057FC(&qword_101670F30);
            switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 5, v44))
            {
              case 1u:
              case 2u:
              case 3u:
              case 4u:
                id v61 = [self mainBundle];
                NSString v62 = String._bridgeToObjectiveC()();
                NSString v63 = String._bridgeToObjectiveC()();
                id v64 = [v61 localizedStringForKey:v62 value:v63 table:0];

                goto LABEL_18;
              case 5u:
                id v65 = [self mainBundle];
                NSString v66 = String._bridgeToObjectiveC()();
                NSString v67 = String._bridgeToObjectiveC()();
                id v64 = [v65 localizedStringForKey:v66 value:v67 table:0];

LABEL_18:
                uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v48 = v68;

                break;
              default:
                uint64_t v45 = v97;
                uint64_t v46 = (uint64_t *)(v97 + *(int *)(v44 + 48));
                uint64_t v47 = *v46;
                uint64_t v48 = v46[1];
                uint64_t v49 = type metadata accessor for UUID();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v45, v49);
                break;
            }
            uint64_t v54 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
            uint64_t v55 = v99;
          }
          else
          {
            uint64_t v53 = (uint64_t *)&v29[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
            uint64_t v47 = *v53;
            uint64_t v48 = v53[1];
            uint64_t v54 = type metadata accessor for CRLBoardIdentifier;
            uint64_t v55 = (uint64_t)v29;
          }
          sub_100F38180(v55, v54);
        }
        else
        {
          if (*v29)
          {
            id v50 = [self mainBundle];
            NSString v51 = String._bridgeToObjectiveC()();
            NSString v52 = String._bridgeToObjectiveC()();
            id v59 = [v50 localizedStringForKey:v51 value:v52 table:0];
          }
          else
          {
            id v56 = [self mainBundle];
            NSString v57 = String._bridgeToObjectiveC()();
            NSString v58 = String._bridgeToObjectiveC()();
            id v59 = [v56 localizedStringForKey:v57 value:v58 table:0];
          }
          uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v48 = v60;
        }
        uint64_t v112 = v47;
        uint64_t v113 = v48;
        sub_100F38118(v114, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69)
        {
          if (v69 == 1)
          {
            uint64_t v70 = v100;
            sub_100F37878((uint64_t)v25, v100, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v71 = v98;
            sub_100F38118(v70, v98, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v72 = sub_1005057FC(&qword_101670F30);
            switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v71, 5, v72))
            {
              case 1u:
              case 2u:
              case 3u:
              case 4u:
              case 5u:
                id v86 = [self mainBundle];
                NSString v87 = String._bridgeToObjectiveC()();
                NSString v88 = String._bridgeToObjectiveC()();
                id v89 = [v86 localizedStringForKey:v87 value:v88 table:0];

                uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v76 = v90;

                break;
              default:
                uint64_t v73 = v98;
                uint64_t v74 = (uint64_t *)(v98 + *(int *)(v72 + 48));
                uint64_t v75 = *v74;
                uint64_t v76 = v74[1];
                uint64_t v77 = type metadata accessor for UUID();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v73, v77);
                break;
            }
            unint64_t v82 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
            uint64_t v83 = v100;
          }
          else
          {
            uint64_t v81 = (uint64_t *)&v25[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
            uint64_t v75 = *v81;
            uint64_t v76 = v81[1];
            unint64_t v82 = type metadata accessor for CRLBoardIdentifier;
            uint64_t v83 = (uint64_t)v25;
          }
          sub_100F38180(v83, v82);
        }
        else
        {
          id v78 = [self mainBundle];
          NSString v79 = String._bridgeToObjectiveC()();
          NSString v80 = String._bridgeToObjectiveC()();
          id v84 = [v78 localizedStringForKey:v79 value:v80 table:0];

          uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v76 = v85;
        }
        uint64_t v110 = v75;
        uint64_t v111 = v76;
        sub_10052E310();
        uint64_t v91 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100F38180(v114, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t result = sub_100F38180(v107, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (v91 != -1) {
          break;
        }
        uint64_t v92 = *v106;
        if (!*v106)
        {
          __break(1u);
          JUMPOUT(0x100F2474CLL);
        }
        uint64_t v93 = v92 + v109 + v37;
        sub_100F37878(v92 + v108 + v37, v104, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = sub_100F37878(v104, v93, type metadata accessor for CRLBoardLibraryViewModel.Item);
        v37 -= v101;
        ++v38;
      }
      while (v102 != v38);
      v109 += v101;
      v108 += v101;
      ++v102;
    }
    while (v102 != v95);
  }
  return result;
}

uint64_t sub_100F2477C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v121 = (uint64_t)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v119 = (uint64_t)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v123 = (uint64_t)&v117 - v17;
  uint64_t v19 = __chkstk_darwin(v16, v18);
  unint64_t v126 = (unint64_t)&v117 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v122 = (uint64_t)&v117 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v27 = (char *)&v117 - v26;
  uint64_t v29 = __chkstk_darwin(v25, v28);
  uint64_t v31 = (char *)&v117 - v30;
  uint64_t v33 = __chkstk_darwin(v29, v32);
  uint64_t v125 = (uint64_t)&v117 - v34;
  __chkstk_darwin(v33, v35);
  uint64_t v37 = (char *)&v117 - v36;
  uint64_t v124 = *(void *)(v38 + 72);
  if (!v124)
  {
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (a2 - a1 == 0x8000000000000000 && v124 == -1) {
    goto LABEL_87;
  }
  int64_t v39 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v124 == -1) {
    goto LABEL_88;
  }
  uint64_t v40 = (uint64_t)(a2 - a1) / v124;
  unint64_t v133 = a1;
  unint64_t v132 = a4;
  uint64_t v41 = v39 / v124;
  uint64_t v120 = v11;
  if (v40 >= v39 / v124)
  {
    if ((v41 & 0x8000000000000000) == 0)
    {
      uint64_t v43 = v41 * v124;
      if (a4 < a2 || a2 + v43 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v80 = a4 + v43;
      unint64_t v131 = a4 + v43;
      unint64_t v133 = a2;
      if (v43 >= 1 && a1 < a2)
      {
        uint64_t v82 = -v124;
        unint64_t v118 = a1;
        do
        {
          uint64_t v83 = v122;
          sub_100F38118(v80 + v82, v122, type metadata accessor for CRLBoardLibraryViewModel.Item);
          unint64_t v84 = a2 + v82;
          sub_100F38118(a2 + v82, v126, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100F38118(v83, v123, type metadata accessor for CRLBoardLibraryViewModel.Item);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v86 = v121;
              sub_100F37878(v123, v121, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v87 = sub_100DD4C48();
              uint64_t v89 = v88;
              uint64_t v90 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
              uint64_t v91 = v86;
            }
            else
            {
              uint64_t v95 = *(int *)(sub_1005057FC(&qword_101677100) + 48);
              uint64_t v91 = v123;
              uint64_t v96 = (uint64_t *)(v123 + v95);
              uint64_t v87 = *v96;
              uint64_t v89 = v96[1];
              uint64_t v90 = type metadata accessor for CRLBoardIdentifier;
            }
            sub_100F38180(v91, v90);
          }
          else
          {
            id v92 = [self mainBundle];
            NSString v93 = String._bridgeToObjectiveC()();
            NSString v94 = String._bridgeToObjectiveC()();
            id v97 = [v92 localizedStringForKey:v93 value:v94 table:0];

            uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v89 = v98;
          }
          uint64_t v99 = v119;
          uint64_t v129 = v87;
          uint64_t v130 = v89;
          sub_100F38118(v126, v119, type metadata accessor for CRLBoardLibraryViewModel.Item);
          int v100 = swift_getEnumCaseMultiPayload();
          if (v100)
          {
            if (v100 == 1)
            {
              uint64_t v101 = v99;
              uint64_t v99 = v121;
              sub_100F37878(v101, v121, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v102 = sub_100DD4C48();
              uint64_t v104 = v103;
              uint64_t v105 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
            }
            else
            {
              uint64_t v109 = (uint64_t *)(v99 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
              uint64_t v102 = *v109;
              uint64_t v104 = v109[1];
              uint64_t v105 = type metadata accessor for CRLBoardIdentifier;
            }
            sub_100F38180(v99, v105);
          }
          else
          {
            id v106 = [self mainBundle];
            NSString v107 = String._bridgeToObjectiveC()();
            NSString v108 = String._bridgeToObjectiveC()();
            id v110 = [v106 localizedStringForKey:v107 value:v108 table:0];

            uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v104 = v111;
          }
          unint64_t v112 = a3 + v82;
          uint64_t v127 = v102;
          uint64_t v128 = v104;
          sub_10052E310();
          uint64_t v113 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100F38180(v126, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100F38180(v122, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (v113 == -1)
          {
            unint64_t v115 = v118;
            if (a3 < a2 || v112 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v133 += v82;
          }
          else
          {
            unint64_t v114 = v131;
            v131 += v82;
            unint64_t v115 = v118;
            if (a3 < v114 || v112 >= v114)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v114)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v84 = a2;
          }
          unint64_t v80 = v131;
          if (v131 <= a4) {
            break;
          }
          a2 = v84;
          a3 += v82;
        }
        while (v84 > v115);
      }
      goto LABEL_85;
    }
  }
  else if ((v40 & 0x8000000000000000) == 0)
  {
    uint64_t v42 = v40 * v124;
    if (a4 < a1 || a1 + v42 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v126 = a4 + v42;
    unint64_t v131 = a4 + v42;
    if (v42 >= 1 && a2 < a3)
    {
      do
      {
        sub_100F38118(a2, (uint64_t)v37, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100F38118(a4, v125, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100F38118((uint64_t)v37, (uint64_t)v31, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int v45 = swift_getEnumCaseMultiPayload();
        if (v45)
        {
          if (v45 == 1)
          {
            uint64_t v46 = v121;
            sub_100F37878((uint64_t)v31, v121, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v47 = sub_100DD4C48();
            uint64_t v49 = v48;
            id v50 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
            uint64_t v51 = v46;
          }
          else
          {
            uint64_t v55 = (uint64_t *)&v31[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
            uint64_t v47 = *v55;
            uint64_t v49 = v55[1];
            id v50 = type metadata accessor for CRLBoardIdentifier;
            uint64_t v51 = (uint64_t)v31;
          }
          sub_100F38180(v51, v50);
        }
        else if (*v31)
        {
          id v52 = [self mainBundle];
          NSString v53 = String._bridgeToObjectiveC()();
          NSString v54 = String._bridgeToObjectiveC()();
          id v61 = [v52 localizedStringForKey:v53 value:v54 table:0];

          uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v49 = v62;
        }
        else
        {
          id v56 = [self mainBundle];
          NSString v57 = String._bridgeToObjectiveC()();
          NSString v58 = String._bridgeToObjectiveC()();
          id v59 = [v56 localizedStringForKey:v57 value:v58 table:0];

          uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v49 = v60;
        }
        uint64_t v129 = v47;
        uint64_t v130 = v49;
        sub_100F38118(v125, (uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int v63 = swift_getEnumCaseMultiPayload();
        if (v63)
        {
          if (v63 == 1)
          {
            uint64_t v64 = v121;
            sub_100F37878((uint64_t)v27, v121, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            uint64_t v65 = sub_100DD4C48();
            uint64_t v67 = v66;
            uint64_t v68 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
            uint64_t v69 = v64;
          }
          else
          {
            uint64_t v73 = (uint64_t *)&v27[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
            uint64_t v65 = *v73;
            uint64_t v67 = v73[1];
            uint64_t v68 = type metadata accessor for CRLBoardIdentifier;
            uint64_t v69 = (uint64_t)v27;
          }
          sub_100F38180(v69, v68);
        }
        else
        {
          id v70 = [self mainBundle];
          NSString v71 = String._bridgeToObjectiveC()();
          NSString v72 = String._bridgeToObjectiveC()();
          id v74 = [v70 localizedStringForKey:v71 value:v72 table:0];

          uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v67 = v75;
        }
        uint64_t v127 = v65;
        uint64_t v128 = v67;
        sub_10052E310();
        uint64_t v76 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100F38180(v125, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100F38180((uint64_t)v37, type metadata accessor for CRLBoardLibraryViewModel.Item);
        unint64_t v77 = v133;
        if (v76 == -1)
        {
          unint64_t v79 = a2 + v124;
          if (v133 < a2 || v133 >= v79)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v133 == a2)
          {
            unint64_t v77 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v78 = v132 + v124;
          if (v133 < v132 || v133 >= v78)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v133 != v132)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v132 = v78;
          unint64_t v79 = a2;
        }
        unint64_t v133 = v77 + v124;
        a4 = v132;
        if (v132 >= v126) {
          break;
        }
        a2 = v79;
      }
      while (v79 < a3);
    }
LABEL_85:
    sub_100F69B54(&v133, &v132, (uint64_t *)&v131);
    return 1;
  }
LABEL_89:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F2580C(uint64_t *__src, id *a2, unint64_t a3, uint64_t *__dst, uint64_t a5)
{
  uint64_t v5 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = (id *)__src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v46 = (id *)__src;
  int v45 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (__dst != (uint64_t *)a2 || &a2[v14] <= (id *)__dst) {
        memmove(__dst, a2, 8 * v14);
      }
      uint64_t v25 = &v5[v14];
      uint64_t v44 = v25;
      uint64_t v46 = v7;
      if (v8 < v7 && v12 >= 8)
      {
        uint64_t v26 = (id *)(a3 - 8);
        uint64_t v27 = v7;
        uint64_t v38 = v5;
        int64_t v39 = v8;
        while (1)
        {
          unint64_t v28 = (unint64_t)v25;
          uint64_t v29 = v25 - 1;
          id v43 = (id)*(v25 - 1);
          uint64_t v30 = *--v27;
          uint64_t v42 = v30;
          id v31 = v43;
          id v32 = v30;
          char v33 = sub_100F1BF7C((uint64_t *)&v43, (uint64_t *)&v42, a5);
          if (v41) {
            break;
          }
          char v34 = v33;
          uint64_t v41 = 0;
          uint64_t v35 = v26 + 1;

          if (v34)
          {
            if (v35 != v7 || v26 >= v7) {
              *uint64_t v26 = *v27;
            }
            uint64_t v46 = v27;
            uint64_t v36 = v38;
            uint64_t v25 = (uint64_t *)v28;
            if (v27 <= v39) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v44 = v29;
            if ((unint64_t)v35 < v28 || (unint64_t)v26 >= v28 || v35 != (id *)v28) {
              *uint64_t v26 = (id)*v29;
            }
            uint64_t v27 = v7;
            uint64_t v25 = v29;
            uint64_t v36 = v38;
            if (v7 <= v39) {
              goto LABEL_48;
            }
          }
          --v26;
          uint64_t v7 = v27;
          if (v25 <= v36) {
            goto LABEL_48;
          }
        }
      }
      goto LABEL_48;
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst) {
      memmove(__dst, __src, 8 * v11);
    }
    uint64_t v15 = &v5[v11];
    uint64_t v44 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        uint64_t v16 = v8;
        id v43 = *v7;
        uint64_t v17 = v5;
        uint64_t v42 = (void *)*v5;
        uint64_t v18 = v42;
        id v19 = v43;
        id v20 = v18;
        char v21 = sub_100F1BF7C((uint64_t *)&v43, (uint64_t *)&v42, a5);
        if (v41) {
          break;
        }
        char v22 = v21;

        if (v22)
        {
          uint64_t v23 = v7 + 1;
          uint64_t v24 = v16;
          if (v16 < v7 || v16 >= v23 || v16 != v7) {
            *uint64_t v16 = *v7;
          }
          uint64_t v5 = v17;
        }
        else
        {
          uint64_t v24 = v16;
          if (v16 != (id *)v17) {
            *uint64_t v16 = (id)*v17;
          }
          uint64_t v5 = v17 + 1;
          int v45 = v17 + 1;
          uint64_t v23 = v7;
        }
        uint64_t v41 = 0;
        uint64_t v8 = v24 + 1;
        uint64_t v46 = v8;
        if (v5 < v15)
        {
          uint64_t v7 = v23;
          if ((unint64_t)v23 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_100F69B50((void **)&v46, (const void **)&v45, &v44);
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_bridgeObjectRelease();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_100F25B70(uint64_t a1, Swift::Int a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (!v4) {
      return sub_100F26288(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100F27130);
    }
    goto LABEL_7;
  }
  if (v4)
  {
    if (a2 >= 0) {
      uint64_t v2 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v5 = __CocoaSet.count.getter();
    a2 = sub_100CBD3B4(v2, v5);
    a1 = v3;
LABEL_7:
    return sub_100A43FAC(a1, a2);
  }
  sub_10050BF48(0, (unint64_t *)&qword_101674210);
  uint64_t v7 = &_swiftEmptySetSingleton;
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()()) {
    goto LABEL_34;
  }
  uint64_t v8 = v3 + 56;
  do
  {
    swift_dynamicCast();
    if (!*(void *)(v3 + 16)) {
      goto LABEL_12;
    }
    Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(v3 + 40));
    uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v11 = v9 & ~v10;
    if (((*(void *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_12;
    }
    id v12 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    char v13 = static NSObject.== infix(_:_:)();

    if ((v13 & 1) == 0)
    {
      uint64_t v14 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v14;
        if (((*(void *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_12:

      continue;
    }
LABEL_20:
    unint64_t v17 = *((void *)&_swiftEmptySetSingleton + 2);
    if (*((void *)&_swiftEmptySetSingleton + 3) <= v17) {
      sub_100CC24E8(v17 + 1);
    }
    Swift::Int result = NSObject._rawHashValue(seed:)(*((void *)&_swiftEmptySetSingleton + 5));
    uint64_t v18 = (char *)&_swiftEmptySetSingleton + 56;
    uint64_t v19 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*((void *)&_swiftEmptySetSingleton + (v20 >> 6) + 7)) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*((void *)&_swiftEmptySetSingleton + (v20 >> 6) + 7))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v18[8 * v21];
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)&v18[(v22 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v22;
    *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v22) = v27;
    ++*((void *)&_swiftEmptySetSingleton + 2);
  }
  while (__CocoaSet.Iterator.next()());
  uint64_t v7 = &_swiftEmptySetSingleton;
LABEL_34:
  swift_release();
  return (Swift::Int)v7;
}

Swift::Int sub_100F25E98(uint64_t a1, Swift::Int a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (!v4) {
      return sub_100F26288(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100F27664);
    }
    goto LABEL_7;
  }
  if (v4)
  {
    if (a2 >= 0) {
      uint64_t v2 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v5 = __CocoaSet.count.getter();
    a2 = sub_100CBCD54(v2, v5);
    a1 = v3;
LABEL_7:
    return sub_100A44018(a1, a2);
  }
  type metadata accessor for CRLCollaborationParticipant(0);
  uint64_t v7 = &_swiftEmptySetSingleton;
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()()) {
    goto LABEL_34;
  }
  uint64_t v8 = v3 + 56;
  do
  {
    swift_dynamicCast();
    if (!*(void *)(v3 + 16)) {
      goto LABEL_12;
    }
    Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(v3 + 40));
    uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v11 = v9 & ~v10;
    if (((*(void *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_12;
    }
    id v12 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    char v13 = static NSObject.== infix(_:_:)();

    if ((v13 & 1) == 0)
    {
      uint64_t v14 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v14;
        if (((*(void *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_12:

      continue;
    }
LABEL_20:
    unint64_t v17 = *((void *)&_swiftEmptySetSingleton + 2);
    if (*((void *)&_swiftEmptySetSingleton + 3) <= v17) {
      sub_100CC061C(v17 + 1);
    }
    Swift::Int result = NSObject._rawHashValue(seed:)(*((void *)&_swiftEmptySetSingleton + 5));
    uint64_t v18 = (char *)&_swiftEmptySetSingleton + 56;
    uint64_t v19 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*((void *)&_swiftEmptySetSingleton + (v20 >> 6) + 7)) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*((void *)&_swiftEmptySetSingleton + (v20 >> 6) + 7))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v18[8 * v21];
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)&v18[(v22 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v22;
    *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v22) = v27;
    ++*((void *)&_swiftEmptySetSingleton + 2);
  }
  while (__CocoaSet.Iterator.next()());
  uint64_t v7 = &_swiftEmptySetSingleton;
LABEL_34:
  swift_release();
  return (Swift::Int)v7;
}

uint64_t sub_100F261B0(uint64_t a1, uint64_t a2)
{
  return sub_100F26288(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100F26424);
}

uint64_t sub_100F2621C(uint64_t a1, uint64_t a2)
{
  return sub_100F26288(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100F26C30);
}

uint64_t sub_100F26288(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = isStackAllocationSafe;
  char v6 = *(unsigned char *)(a2 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a3((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    swift_slowDealloc();
  }
  return v9;
}

void sub_100F26424(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v70 = a2;
  uint64_t v73 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v70 - v11;
  __chkstk_darwin(v13, v14);
  char v16 = (char *)&v70 - v15;
  __n128 v21 = __chkstk_darwin(v17, v18);
  unint64_t v22 = (char *)&v70 - v19;
  unint64_t v23 = *(void *)(a3 + 16);
  unint64_t v24 = *(void *)(a4 + 16);
  uint64_t v85 = v7 + 16;
  uint64_t v82 = a3;
  uint64_t v83 = a4;
  uint64_t v80 = v7;
  if (v24 >= v23)
  {
    uint64_t v77 = 0;
    int64_t v47 = 0;
    uint64_t v48 = *(void *)(a3 + 56);
    int64_t v72 = a3 + 56;
    uint64_t v49 = 1 << *(unsigned char *)(a3 + 32);
    if (v49 < 64) {
      uint64_t v50 = ~(-1 << v49);
    }
    else {
      uint64_t v50 = -1;
    }
    unint64_t v51 = v50 & v48;
    int64_t v74 = (unint64_t)(v49 + 63) >> 6;
    uint64_t v81 = a4 + 56;
    id v52 = (void (**)(char *, uint64_t))(v7 + 8);
    unint64_t v84 = v20;
    if ((v50 & v48) != 0) {
      goto LABEL_39;
    }
LABEL_40:
    int64_t v54 = v47 + 1;
    if (!__OFADD__(v47, 1))
    {
      if (v54 < v74)
      {
        unint64_t v55 = *(void *)(v72 + 8 * v54);
        int64_t v56 = v47 + 1;
        if (!v55)
        {
          int64_t v56 = v47 + 2;
          if (v47 + 2 >= v74) {
            goto LABEL_62;
          }
          unint64_t v55 = *(void *)(v72 + 8 * v56);
          if (!v55)
          {
            int64_t v56 = v47 + 3;
            if (v47 + 3 >= v74) {
              goto LABEL_62;
            }
            unint64_t v55 = *(void *)(v72 + 8 * v56);
            if (!v55)
            {
              uint64_t v57 = v47 + 4;
              if (v47 + 4 >= v74) {
                goto LABEL_62;
              }
              unint64_t v55 = *(void *)(v72 + 8 * v57);
              if (!v55)
              {
                while (1)
                {
                  int64_t v56 = v57 + 1;
                  if (__OFADD__(v57, 1)) {
                    goto LABEL_68;
                  }
                  if (v56 >= v74) {
                    goto LABEL_62;
                  }
                  unint64_t v55 = *(void *)(v72 + 8 * v56);
                  ++v57;
                  if (v55) {
                    goto LABEL_53;
                  }
                }
              }
              int64_t v56 = v47 + 4;
            }
          }
        }
LABEL_53:
        uint64_t v78 = (v55 - 1) & v55;
        int64_t v79 = v56;
        for (unint64_t i = __clz(__rbit64(v55)) + (v56 << 6); ; unint64_t i = __clz(__rbit64(v51)) | (v47 << 6))
        {
          uint64_t v58 = *(void *)(a3 + 48);
          uint64_t v59 = *(void *)(v7 + 72);
          unint64_t v76 = i;
          uint64_t v60 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
          v60(v84, v58 + v59 * i, v6, v21);
          sub_100F359B0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v61 = dispatch thunk of Hashable._rawHashValue(seed:)();
          uint64_t v62 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v63 = v61 & ~v62;
          if ((*(void *)(v81 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63))
          {
            uint64_t v75 = (char *)((unint64_t)v52 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
            uint64_t v64 = ~v62;
            while (1)
            {
              ((void (*)(char *, unint64_t, uint64_t))v60)(v12, *(void *)(v83 + 48) + v63 * v59, v6);
              sub_100F359B0((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
              char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
              uint64_t v66 = *v52;
              (*v52)(v12, v6);
              if (v65) {
                break;
              }
              unint64_t v63 = (v63 + 1) & v64;
              if (((*(void *)(v81 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63) & 1) == 0)
              {
                a3 = v82;
                a4 = v83;
                int64_t v47 = v79;
                uint64_t v7 = v80;
                uint64_t v67 = v84;
                unint64_t v51 = v78;
                goto LABEL_60;
              }
            }
            v66(v84, v6);
            *(unint64_t *)((char *)v73 + ((v76 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v76;
            unint64_t v51 = v78;
            BOOL v32 = __OFADD__(v77++, 1);
            a3 = v82;
            a4 = v83;
            int64_t v47 = v79;
            uint64_t v7 = v80;
            if (v32) {
              goto LABEL_66;
            }
            if (!v78) {
              goto LABEL_40;
            }
          }
          else
          {
            uint64_t v66 = *v52;
            a3 = v82;
            int64_t v47 = v79;
            uint64_t v7 = v80;
            uint64_t v67 = v84;
            unint64_t v51 = v78;
LABEL_60:
            v66(v67, v6);
            if (!v51) {
              goto LABEL_40;
            }
          }
LABEL_39:
          uint64_t v78 = (v51 - 1) & v51;
          int64_t v79 = v47;
        }
      }
      goto LABEL_62;
    }
  }
  else
  {
    int64_t v25 = 0;
    uint64_t v26 = *(void *)(a4 + 56);
    uint64_t v71 = a4 + 56;
    uint64_t v27 = 1 << *(unsigned char *)(a4 + 32);
    if (v27 < 64) {
      uint64_t v28 = ~(-1 << v27);
    }
    else {
      uint64_t v28 = -1;
    }
    unint64_t v29 = v28 & v26;
    int64_t v72 = (unint64_t)(v27 + 63) >> 6;
    unint64_t v76 = v7 + 32;
    uint64_t v77 = 0;
    uint64_t v81 = a3 + 56;
    unint64_t v84 = (char *)(v7 + 8);
    uint64_t v75 = (char *)&v70 - v19;
    if ((v28 & v26) != 0) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v34 = v25 + 1;
    if (!__OFADD__(v25, 1))
    {
      if (v34 < v72)
      {
        unint64_t v35 = *(void *)(v71 + 8 * v34);
        int64_t v36 = v25 + 1;
        if (v35) {
          goto LABEL_23;
        }
        int64_t v36 = v25 + 2;
        if (v25 + 2 >= v72) {
          goto LABEL_62;
        }
        unint64_t v35 = *(void *)(v71 + 8 * v36);
        if (v35) {
          goto LABEL_23;
        }
        int64_t v36 = v25 + 3;
        if (v25 + 3 >= v72) {
          goto LABEL_62;
        }
        unint64_t v35 = *(void *)(v71 + 8 * v36);
        if (v35)
        {
LABEL_23:
          uint64_t v78 = (v35 - 1) & v35;
          int64_t v79 = v36;
          for (unint64_t j = __clz(__rbit64(v35)) + (v36 << 6); ; unint64_t j = __clz(__rbit64(v29)) | (v25 << 6))
          {
            uint64_t v38 = *(void *)(v7 + 72);
            int64_t v39 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
            v39(v22, *(void *)(a4 + 48) + v38 * j, v6, v21);
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v22, v6);
            sub_100F359B0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v40 = v16;
            uint64_t v41 = dispatch thunk of Hashable._rawHashValue(seed:)();
            uint64_t v42 = -1 << *(unsigned char *)(a3 + 32);
            unint64_t v43 = v41 & ~v42;
            if ((*(void *)(v81 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43))
            {
              int64_t v74 = (unint64_t)v84 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
              uint64_t v44 = ~v42;
              while (1)
              {
                ((void (*)(char *, unint64_t, uint64_t))v39)(v12, *(void *)(v82 + 48) + v43 * v38, v6);
                sub_100F359B0((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
                char v45 = dispatch thunk of static Equatable.== infix(_:_:)();
                uint64_t v46 = *(void (**)(char *, uint64_t))v84;
                (*(void (**)(char *, uint64_t))v84)(v12, v6);
                if (v45) {
                  break;
                }
                unint64_t v43 = (v43 + 1) & v44;
                if (((*(void *)(v81 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
                {
                  a3 = v82;
                  int64_t v25 = v79;
                  uint64_t v7 = v80;
                  char v16 = v40;
                  unint64_t v22 = v75;
                  goto LABEL_30;
                }
              }
              v46(v40, v6);
              uint64_t v30 = (v43 >> 3) & 0x1FFFFFFFFFFFFFF8;
              uint64_t v31 = 1 << v43;
              char v16 = v40;
              *(unint64_t *)((char *)v73 + v30) |= v31;
              unint64_t v29 = v78;
              BOOL v32 = __OFADD__(v77++, 1);
              a3 = v82;
              a4 = v83;
              int64_t v25 = v79;
              uint64_t v7 = v80;
              unint64_t v22 = v75;
              if (v32) {
                goto LABEL_65;
              }
              if (!v78) {
                goto LABEL_10;
              }
            }
            else
            {
              uint64_t v46 = *(void (**)(char *, uint64_t))v84;
              int64_t v25 = v79;
              uint64_t v7 = v80;
              char v16 = v40;
              unint64_t v22 = v75;
LABEL_30:
              unint64_t v29 = v78;
              v46(v16, v6);
              a4 = v83;
              if (!v29) {
                goto LABEL_10;
              }
            }
LABEL_9:
            uint64_t v78 = (v29 - 1) & v29;
            int64_t v79 = v25;
          }
        }
        uint64_t v37 = v25 + 4;
        if (v25 + 4 < v72)
        {
          unint64_t v35 = *(void *)(v71 + 8 * v37);
          if (v35)
          {
            int64_t v36 = v25 + 4;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v36 = v37 + 1;
            if (__OFADD__(v37, 1)) {
              goto LABEL_67;
            }
            if (v36 >= v72) {
              break;
            }
            unint64_t v35 = *(void *)(v71 + 8 * v36);
            ++v37;
            if (v35) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_62:
      uint64_t v68 = v70;
      uint64_t v69 = v77;
      swift_retain();
      sub_10052B840(v73, v68, v69, a3);
      return;
    }
    __break(1u);
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
}

uint64_t sub_100F26C30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v39 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v6 = 0;
    int64_t v7 = 0;
    uint64_t v40 = a4 + 56;
    uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(a4 + 56);
    int64_t v48 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = a3 + 56;
    do
    {
      while (1)
      {
        if (v10)
        {
          unint64_t v12 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          unint64_t v13 = v12 | (v7 << 6);
        }
        else
        {
          int64_t v14 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
          if (v14 >= v48) {
            goto LABEL_60;
          }
          unint64_t v15 = *(void *)(v40 + 8 * v14);
          ++v7;
          if (!v15)
          {
            int64_t v7 = v14 + 1;
            if (v14 + 1 >= v48) {
              goto LABEL_60;
            }
            unint64_t v15 = *(void *)(v40 + 8 * v7);
            if (!v15)
            {
              int64_t v7 = v14 + 2;
              if (v14 + 2 >= v48) {
                goto LABEL_60;
              }
              unint64_t v15 = *(void *)(v40 + 8 * v7);
              if (!v15)
              {
                int64_t v16 = v14 + 3;
                if (v16 >= v48)
                {
LABEL_60:
                  uint64_t v36 = a2;
LABEL_62:
                  swift_retain();
                  return sub_10052C490(v39, v36, v6, a3);
                }
                unint64_t v15 = *(void *)(v40 + 8 * v16);
                if (!v15)
                {
                  while (1)
                  {
                    int64_t v7 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      break;
                    }
                    if (v7 >= v48) {
                      goto LABEL_60;
                    }
                    unint64_t v15 = *(void *)(v40 + 8 * v7);
                    ++v16;
                    if (v15) {
                      goto LABEL_22;
                    }
                  }
LABEL_65:
                  __break(1u);
                  goto LABEL_66;
                }
                int64_t v7 = v16;
              }
            }
          }
LABEL_22:
          unint64_t v10 = (v15 - 1) & v15;
          unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
        }
        sub_10052E538(*(void *)(a4 + 48) + 48 * v13, (uint64_t)v46);
        v42[0] = v46[0];
        v42[1] = v46[1];
        *(_OWORD *)unint64_t v43 = v47;
        Hasher.init(_seed:)();
        AnyHashable.hash(into:)();
        Hasher._combine(_:)(v43[1]);
        Swift::Int v17 = Hasher._finalize()();
        uint64_t v18 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v19 = v17 & ~v18;
        if ((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19)) {
          break;
        }
LABEL_6:
        Swift::Int result = sub_10058EF74((uint64_t)v42);
      }
      uint64_t v20 = ~v18;
      while (1)
      {
        sub_10052E538(*(void *)(a3 + 48) + 48 * v19, (uint64_t)v44);
        if ((static AnyHashable.== infix(_:_:)() & 1) != 0 && v45 == v43[1]) {
          break;
        }
        sub_10058EF74((uint64_t)v44);
        unint64_t v19 = (v19 + 1) & v20;
        if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          goto LABEL_6;
        }
      }
      sub_10058EF74((uint64_t)v44);
      Swift::Int result = sub_10058EF74((uint64_t)v42);
      *(unint64_t *)((char *)v39 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      BOOL v21 = __OFADD__(v6++, 1);
    }
    while (!v21);
    __break(1u);
  }
  uint64_t v38 = 0;
  int64_t v22 = 0;
  uint64_t v41 = a3 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a3 + 32);
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  unint64_t v25 = v24 & *(void *)(a3 + 56);
  int64_t v48 = (unint64_t)(v23 + 63) >> 6;
  uint64_t v26 = a4 + 56;
  uint64_t v6 = 48;
  while (v25)
  {
    unint64_t v27 = __clz(__rbit64(v25));
    v25 &= v25 - 1;
    unint64_t v28 = v27 | (v22 << 6);
LABEL_52:
    sub_10052E538(*(void *)(a3 + 48) + 48 * v28, (uint64_t)v46);
    Hasher.init(_seed:)();
    AnyHashable.hash(into:)();
    Hasher._combine(_:)(*((Swift::UInt64 *)&v47 + 1));
    Swift::Int v32 = Hasher._finalize()();
    uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)(v26 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
    {
      uint64_t v35 = ~v33;
      while (1)
      {
        sub_10052E538(*(void *)(a4 + 48) + 48 * v34, (uint64_t)v44);
        if ((static AnyHashable.== infix(_:_:)() & 1) != 0 && v45 == *((void *)&v47 + 1)) {
          break;
        }
        sub_10058EF74((uint64_t)v44);
        unint64_t v34 = (v34 + 1) & v35;
        if (((*(void *)(v26 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0) {
          goto LABEL_35;
        }
      }
      sub_10058EF74((uint64_t)v44);
      Swift::Int result = sub_10058EF74((uint64_t)v46);
      *(unint64_t *)((char *)v39 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      BOOL v21 = __OFADD__(v38++, 1);
      if (v21)
      {
        __break(1u);
        goto LABEL_60;
      }
    }
    else
    {
LABEL_35:
      Swift::Int result = sub_10058EF74((uint64_t)v46);
    }
  }
  int64_t v29 = v22 + 1;
  if (__OFADD__(v22, 1)) {
    goto LABEL_64;
  }
  if (v29 >= v48)
  {
LABEL_61:
    uint64_t v36 = a2;
    uint64_t v6 = v38;
    goto LABEL_62;
  }
  unint64_t v30 = *(void *)(v41 + 8 * v29);
  ++v22;
  if (v30) {
    goto LABEL_51;
  }
  int64_t v22 = v29 + 1;
  if (v29 + 1 >= v48) {
    goto LABEL_61;
  }
  unint64_t v30 = *(void *)(v41 + 8 * v22);
  if (v30) {
    goto LABEL_51;
  }
  int64_t v22 = v29 + 2;
  if (v29 + 2 >= v48) {
    goto LABEL_61;
  }
  unint64_t v30 = *(void *)(v41 + 8 * v22);
  if (v30)
  {
LABEL_51:
    unint64_t v25 = (v30 - 1) & v30;
    unint64_t v28 = __clz(__rbit64(v30)) + (v22 << 6);
    goto LABEL_52;
  }
  int64_t v31 = v29 + 3;
  if (v31 >= v48) {
    goto LABEL_61;
  }
  unint64_t v30 = *(void *)(v41 + 8 * v31);
  if (v30)
  {
    int64_t v22 = v31;
    goto LABEL_51;
  }
  while (1)
  {
    int64_t v22 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v22 >= v48) {
      goto LABEL_61;
    }
    unint64_t v30 = *(void *)(v41 + 8 * v22);
    ++v31;
    if (v30) {
      goto LABEL_51;
    }
  }
LABEL_66:
  __break(1u);
  return result;
}

void sub_100F27130(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v55 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v56 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v58 = 0;
    uint64_t v63 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          uint64_t v59 = (v9 - 1) & v9;
          int64_t v61 = v6;
          unint64_t v10 = __clz(__rbit64(v9)) | (v6 << 6);
          uint64_t v11 = a4;
        }
        else
        {
          int64_t v12 = v6 + 1;
          uint64_t v11 = a4;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_65;
          }
          if (v12 >= v56) {
            goto LABEL_63;
          }
          unint64_t v13 = *(void *)(v55 + 8 * v12);
          int64_t v14 = v6 + 1;
          if (!v13)
          {
            int64_t v14 = v12 + 1;
            if (v12 + 1 >= v56) {
              goto LABEL_63;
            }
            unint64_t v13 = *(void *)(v55 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v12 + 2;
              if (v12 + 2 >= v56) {
                goto LABEL_63;
              }
              unint64_t v13 = *(void *)(v55 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v12 + 3;
                if (v15 >= v56) {
                  goto LABEL_63;
                }
                unint64_t v13 = *(void *)(v55 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_67;
                    }
                    if (v14 >= v56) {
                      goto LABEL_63;
                    }
                    unint64_t v13 = *(void *)(v55 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v14 = v15;
              }
            }
          }
LABEL_22:
          uint64_t v59 = (v13 - 1) & v13;
          int64_t v61 = v14;
          unint64_t v10 = __clz(__rbit64(v13)) + (v14 << 6);
        }
        Swift::Int v16 = *(void *)(v5 + 40);
        id v17 = *(id *)(*(void *)(v11 + 48) + 8 * v10);
        Swift::Int v18 = NSObject._rawHashValue(seed:)(v16);
        uint64_t v19 = v5;
        uint64_t v20 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v21 = v18 & ~v20;
        unint64_t v22 = v21 >> 6;
        uint64_t v23 = 1 << v21;
        if (((1 << v21) & *(void *)(v63 + 8 * (v21 >> 6))) != 0) {
          break;
        }
LABEL_6:

        uint64_t v5 = v19;
        unint64_t v9 = v59;
        int64_t v6 = v61;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101674210);
      id v24 = *(id *)(*(void *)(v19 + 48) + 8 * v21);
      char v25 = static NSObject.== infix(_:_:)();

      if ((v25 & 1) == 0)
      {
        uint64_t v26 = ~v20;
        for (unint64_t i = v21 + 1; ; unint64_t i = v28 + 1)
        {
          unint64_t v28 = i & v26;
          if (((*(void *)(v63 + (((i & v26) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v26)) & 1) == 0) {
            break;
          }
          uint64_t v5 = v19;
          id v29 = *(id *)(*(void *)(v19 + 48) + 8 * v28);
          char v30 = static NSObject.== infix(_:_:)();

          if (v30)
          {

            unint64_t v22 = v28 >> 6;
            uint64_t v23 = 1 << v28;
            goto LABEL_30;
          }
        }
        goto LABEL_6;
      }

      uint64_t v5 = v19;
LABEL_30:
      unint64_t v9 = v59;
      int64_t v6 = v61;
      a1[v22] |= v23;
      BOOL v31 = __OFADD__(v58++, 1);
      if (v31) {
        goto LABEL_66;
      }
    }
  }
  int64_t v32 = 0;
  uint64_t v57 = a3 + 56;
  uint64_t v58 = 0;
  uint64_t v33 = 1 << *(unsigned char *)(a3 + 32);
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  else {
    uint64_t v34 = -1;
  }
  unint64_t v35 = v34 & *(void *)(a3 + 56);
  int64_t v60 = (unint64_t)(v33 + 63) >> 6;
  uint64_t v36 = a4 + 56;
  while (1)
  {
    if (v35)
    {
      unint64_t v37 = __clz(__rbit64(v35));
      v35 &= v35 - 1;
      int64_t v64 = v32;
      unint64_t v38 = v37 | (v32 << 6);
      goto LABEL_55;
    }
    int64_t v39 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v39 >= v60) {
      goto LABEL_63;
    }
    unint64_t v40 = *(void *)(v57 + 8 * v39);
    int64_t v41 = v32 + 1;
    if (!v40)
    {
      int64_t v41 = v32 + 2;
      if (v32 + 2 >= v60) {
        goto LABEL_63;
      }
      unint64_t v40 = *(void *)(v57 + 8 * v41);
      if (!v40)
      {
        int64_t v41 = v32 + 3;
        if (v32 + 3 >= v60) {
          goto LABEL_63;
        }
        unint64_t v40 = *(void *)(v57 + 8 * v41);
        if (!v40) {
          break;
        }
      }
    }
LABEL_54:
    unint64_t v35 = (v40 - 1) & v40;
    int64_t v64 = v41;
    unint64_t v38 = __clz(__rbit64(v40)) + (v41 << 6);
LABEL_55:
    unint64_t v62 = v38;
    Swift::Int v43 = *(void *)(v4 + 40);
    id v44 = *(id *)(*(void *)(v5 + 48) + 8 * v38);
    Swift::Int v45 = NSObject._rawHashValue(seed:)(v43);
    uint64_t v46 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v47 = v45 & ~v46;
    if (((*(void *)(v36 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47) & 1) == 0) {
      goto LABEL_38;
    }
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    id v48 = *(id *)(*(void *)(v4 + 48) + 8 * v47);
    char v49 = static NSObject.== infix(_:_:)();

    if (v49)
    {
LABEL_60:

      int64_t v32 = v64;
      *(unint64_t *)((char *)a1 + ((v62 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v62;
      BOOL v31 = __OFADD__(v58++, 1);
      uint64_t v4 = a4;
      if (v31)
      {
        __break(1u);
LABEL_63:
        swift_retain();
        sub_10052C218(a1, a2, v58, v5);
        return;
      }
    }
    else
    {
      uint64_t v50 = ~v46;
      while (1)
      {
        unint64_t v47 = (v47 + 1) & v50;
        uint64_t v4 = a4;
        if (((*(void *)(v36 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47) & 1) == 0) {
          break;
        }
        id v51 = *(id *)(*(void *)(a4 + 48) + 8 * v47);
        char v52 = static NSObject.== infix(_:_:)();

        if (v52) {
          goto LABEL_60;
        }
      }
LABEL_38:

      int64_t v32 = v64;
    }
  }
  uint64_t v42 = v32 + 4;
  if (v32 + 4 >= v60) {
    goto LABEL_63;
  }
  unint64_t v40 = *(void *)(v57 + 8 * v42);
  if (v40)
  {
    int64_t v41 = v32 + 4;
    goto LABEL_54;
  }
  while (1)
  {
    int64_t v41 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v41 >= v60) {
      goto LABEL_63;
    }
    unint64_t v40 = *(void *)(v57 + 8 * v41);
    ++v42;
    if (v40) {
      goto LABEL_54;
    }
  }
LABEL_68:
  __break(1u);
}

void sub_100F27664(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v53 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v54 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v56 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          uint64_t v57 = (v9 - 1) & v9;
          int64_t v59 = v6;
          unint64_t v11 = __clz(__rbit64(v9)) | (v6 << 6);
        }
        else
        {
          int64_t v12 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_65;
          }
          if (v12 >= v54) {
            goto LABEL_63;
          }
          unint64_t v13 = *(void *)(v53 + 8 * v12);
          int64_t v14 = v6 + 1;
          if (!v13)
          {
            int64_t v14 = v6 + 2;
            if (v6 + 2 >= v54) {
              goto LABEL_63;
            }
            unint64_t v13 = *(void *)(v53 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v6 + 3;
              if (v6 + 3 >= v54) {
                goto LABEL_63;
              }
              unint64_t v13 = *(void *)(v53 + 8 * v14);
              if (!v13)
              {
                uint64_t v15 = v6 + 4;
                if (v6 + 4 >= v54) {
                  goto LABEL_63;
                }
                unint64_t v13 = *(void *)(v53 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_67;
                    }
                    if (v14 >= v54) {
                      goto LABEL_63;
                    }
                    unint64_t v13 = *(void *)(v53 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v14 = v6 + 4;
              }
            }
          }
LABEL_22:
          uint64_t v57 = (v13 - 1) & v13;
          int64_t v59 = v14;
          unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        }
        Swift::Int v16 = *(void *)(v5 + 40);
        id v17 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
        Swift::Int v18 = NSObject._rawHashValue(seed:)(v16);
        uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v20 = v18 & ~v19;
        unint64_t v21 = v20 >> 6;
        uint64_t v22 = 1 << v20;
        if (((1 << v20) & *(void *)(v10 + 8 * (v20 >> 6))) != 0) {
          break;
        }
LABEL_6:

        uint64_t v4 = a4;
        unint64_t v9 = v57;
        int64_t v6 = v59;
      }
      type metadata accessor for CRLCollaborationParticipant(0);
      id v23 = *(id *)(*(void *)(v5 + 48) + 8 * v20);
      char v24 = static NSObject.== infix(_:_:)();

      if ((v24 & 1) == 0)
      {
        uint64_t v25 = ~v19;
        for (unint64_t i = v20 + 1; ; unint64_t i = v27 + 1)
        {
          unint64_t v27 = i & v25;
          uint64_t v5 = a3;
          if (((*(void *)(v10 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0) {
            break;
          }
          id v28 = *(id *)(*(void *)(a3 + 48) + 8 * v27);
          char v29 = static NSObject.== infix(_:_:)();

          if (v29)
          {

            unint64_t v21 = v27 >> 6;
            uint64_t v22 = 1 << v27;
            goto LABEL_30;
          }
        }
        goto LABEL_6;
      }

LABEL_30:
      int64_t v6 = v59;
      uint64_t v5 = a3;
      a1[v21] |= v22;
      unint64_t v9 = v57;
      BOOL v30 = __OFADD__(v56++, 1);
      uint64_t v4 = a4;
      if (v30) {
        goto LABEL_66;
      }
    }
  }
  int64_t v31 = 0;
  uint64_t v55 = a3 + 56;
  uint64_t v56 = 0;
  uint64_t v32 = 1 << *(unsigned char *)(a3 + 32);
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  else {
    uint64_t v33 = -1;
  }
  unint64_t v34 = v33 & *(void *)(a3 + 56);
  int64_t v58 = (unint64_t)(v32 + 63) >> 6;
  uint64_t v35 = a4 + 56;
  while (1)
  {
    if (v34)
    {
      unint64_t v36 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      int64_t v37 = v31;
      unint64_t v38 = v36 | (v31 << 6);
      uint64_t v5 = a3;
      goto LABEL_55;
    }
    int64_t v39 = v31 + 1;
    uint64_t v5 = a3;
    if (__OFADD__(v31, 1))
    {
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v39 >= v58) {
      goto LABEL_63;
    }
    unint64_t v40 = *(void *)(v55 + 8 * v39);
    int64_t v41 = v31 + 1;
    if (!v40)
    {
      int64_t v41 = v31 + 2;
      if (v31 + 2 >= v58) {
        goto LABEL_63;
      }
      unint64_t v40 = *(void *)(v55 + 8 * v41);
      if (!v40)
      {
        int64_t v41 = v31 + 3;
        if (v31 + 3 >= v58) {
          goto LABEL_63;
        }
        unint64_t v40 = *(void *)(v55 + 8 * v41);
        if (!v40) {
          break;
        }
      }
    }
LABEL_54:
    unint64_t v34 = (v40 - 1) & v40;
    int64_t v37 = v41;
    unint64_t v38 = __clz(__rbit64(v40)) + (v41 << 6);
LABEL_55:
    unint64_t v60 = v38;
    Swift::Int v43 = *(void *)(v4 + 40);
    id v44 = *(id *)(*(void *)(v5 + 48) + 8 * v38);
    Swift::Int v45 = NSObject._rawHashValue(seed:)(v43);
    uint64_t v46 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v47 = v45 & ~v46;
    if (((*(void *)(v35 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47) & 1) == 0) {
      goto LABEL_38;
    }
    type metadata accessor for CRLCollaborationParticipant(0);
    id v48 = *(id *)(*(void *)(a4 + 48) + 8 * v47);
    uint64_t v5 = static NSObject.== infix(_:_:)();

    if (v5)
    {
LABEL_60:

      *(unint64_t *)((char *)a1 + ((v60 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v60;
      BOOL v30 = __OFADD__(v56++, 1);
      uint64_t v4 = a4;
      int64_t v31 = v37;
      if (v30)
      {
        __break(1u);
LABEL_63:
        swift_retain();
        sub_10052D1F8(a1, a2, v56, v5);
        return;
      }
    }
    else
    {
      uint64_t v49 = ~v46;
      while (1)
      {
        unint64_t v47 = (v47 + 1) & v49;
        if (((*(void *)(v35 + ((v47 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v47) & 1) == 0) {
          break;
        }
        id v50 = *(id *)(*(void *)(a4 + 48) + 8 * v47);
        uint64_t v5 = static NSObject.== infix(_:_:)();

        if (v5) {
          goto LABEL_60;
        }
      }
LABEL_38:

      uint64_t v4 = a4;
      int64_t v31 = v37;
    }
  }
  uint64_t v42 = v31 + 4;
  if (v31 + 4 >= v58) {
    goto LABEL_63;
  }
  unint64_t v40 = *(void *)(v55 + 8 * v42);
  if (v40)
  {
    int64_t v41 = v31 + 4;
    goto LABEL_54;
  }
  while (1)
  {
    int64_t v41 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v41 >= v58) {
      goto LABEL_63;
    }
    unint64_t v40 = *(void *)(v55 + 8 * v41);
    ++v42;
    if (v40) {
      goto LABEL_54;
    }
  }
LABEL_68:
  __break(1u);
}

uint64_t sub_100F27B80(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100F27C20@<X0>(uint64_t a1@<X8>)
{
  return sub_100F28890(&qword_10169A270, &qword_1016A23F0, (uint64_t *)&unk_10169A260, a1);
}

uint64_t sub_100F27C3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101684FB0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  unint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101684FA8);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  int64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (uint64_t *)((char *)&v42 - v14);
  uint64_t v16 = *v1;
  uint64_t v17 = v1[1];
  uint64_t v19 = v1[2];
  int64_t v18 = v1[3];
  int64_t v20 = v18;
  unint64_t v21 = v1[4];
  Swift::Int v43 = v7;
  uint64_t v49 = v19;
  if (v21)
  {
    uint64_t v47 = a1;
    int64_t v48 = v18;
    uint64_t v44 = v17;
    uint64_t v45 = v4;
    uint64_t v46 = v12;
    uint64_t v22 = v3;
    uint64_t v23 = (v21 - 1) & v21;
    unint64_t v24 = __clz(__rbit64(v21)) | (v18 << 6);
LABEL_3:
    uint64_t v25 = *(void *)(v16 + 56);
    uint64_t v26 = (uint64_t *)(*(void *)(v16 + 48) + 16 * v24);
    uint64_t v27 = v16;
    uint64_t v28 = *v26;
    uint64_t v29 = v26[1];
    uint64_t v30 = v25 + *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674520) - 8) + 72) * v24;
    uint64_t v3 = v22;
    sub_100522E9C(v30, (uint64_t)v15 + *(int *)(v22 + 48), (uint64_t *)&unk_101674520);
    void *v15 = v28;
    v15[1] = v29;
    uint64_t v16 = v27;
    uint64_t v4 = v45;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v15, 0, 1, v22);
    swift_bridgeObjectRetain();
    int64_t v12 = v46;
    a1 = v47;
    uint64_t v17 = v44;
    goto LABEL_25;
  }
  int64_t v31 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v20 = v14;
    goto LABEL_24;
  }
  int64_t v32 = (unint64_t)(v19 + 64) >> 6;
  if (v31 < v32)
  {
    unint64_t v33 = *(void *)(v17 + 8 * v31);
    if (v33)
    {
LABEL_7:
      uint64_t v44 = v17;
      uint64_t v45 = v4;
      uint64_t v46 = v12;
      uint64_t v47 = a1;
      uint64_t v22 = v3;
      uint64_t v23 = (v33 - 1) & v33;
      unint64_t v24 = __clz(__rbit64(v33)) + (v31 << 6);
      int64_t v48 = v31;
      goto LABEL_3;
    }
    int64_t v34 = v18 + 2;
    int64_t v20 = v18 + 1;
    if (v18 + 2 < v32)
    {
      unint64_t v33 = *(void *)(v17 + 8 * v34);
      if (v33)
      {
LABEL_10:
        int64_t v31 = v34;
        goto LABEL_7;
      }
      int64_t v20 = v18 + 2;
      if (v18 + 3 < v32)
      {
        unint64_t v33 = *(void *)(v17 + 8 * (v18 + 3));
        if (v33)
        {
          int64_t v31 = v18 + 3;
          goto LABEL_7;
        }
        int64_t v34 = v18 + 4;
        int64_t v20 = v18 + 3;
        if (v18 + 4 < v32)
        {
          unint64_t v33 = *(void *)(v17 + 8 * v34);
          if (v33) {
            goto LABEL_10;
          }
          int64_t v31 = v18 + 5;
          int64_t v20 = v18 + 4;
          if (v18 + 5 < v32)
          {
            unint64_t v33 = *(void *)(v17 + 8 * v31);
            if (v33) {
              goto LABEL_7;
            }
            int64_t v14 = v32 - 1;
            uint64_t v35 = v18 + 6;
            while (v32 != v35)
            {
              unint64_t v33 = *(void *)(v17 + 8 * v35++);
              if (v33)
              {
                int64_t v31 = v35 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v48 = v20;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v15, 1, 1, v3);
  uint64_t v23 = 0;
LABEL_25:
  uint64_t *v1 = v16;
  v1[1] = v17;
  int64_t v36 = v48;
  v1[2] = v49;
  v1[3] = v36;
  v1[4] = v23;
  int64_t v37 = (void (*)(uint64_t))v1[5];
  sub_10051B3EC((uint64_t)v15, (uint64_t)v12, &qword_101684FA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    uint64_t v38 = sub_1005057FC(&qword_10169A0F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(a1, 1, 1, v38);
  }
  else
  {
    uint64_t v40 = (uint64_t)v43;
    sub_10051B3EC((uint64_t)v12, (uint64_t)v43, (uint64_t *)&unk_101684FB0);
    v37(v40);
    sub_100522F00(v40, (uint64_t *)&unk_101684FB0);
    uint64_t v41 = sub_1005057FC(&qword_10169A0F0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(a1, 0, 1, v41);
  }
}

uint64_t sub_100F2804C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_1016A22C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  unint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016A22D8);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  int64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10, v13);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = *v1;
  uint64_t v18 = v1[1];
  uint64_t v20 = v1[2];
  int64_t v19 = v1[3];
  int64_t v21 = v19;
  unint64_t v22 = v1[4];
  uint64_t v40 = v7;
  uint64_t v43 = v20;
  if (v22)
  {
    uint64_t v41 = a1;
    uint64_t v42 = v18;
    uint64_t v23 = (v22 - 1) & v22;
    unint64_t v24 = __clz(__rbit64(v22)) | (v19 << 6);
LABEL_3:
    uint64_t v25 = *(void *)(v17 + 48);
    uint64_t v26 = v17;
    uint64_t v27 = type metadata accessor for CRLBoardIdentifier(0);
    sub_100F38118(v25 + *(void *)(*(void *)(v27 - 8) + 72) * v24, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    uint64_t v28 = *(void *)(v26 + 56);
    uint64_t v29 = type metadata accessor for CRLBoardViewModelMetadata(0);
    sub_100F38118(v28 + *(void *)(*(void *)(v29 - 8) + 72) * v24, (uint64_t)&v16[*(int *)(v3 + 48)], type metadata accessor for CRLBoardViewModelMetadata);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v16, 0, 1, v3);
    a1 = v41;
    uint64_t v18 = v42;
    goto LABEL_23;
  }
  int64_t v30 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v31 = (unint64_t)(v20 + 64) >> 6;
  if (v30 < v31)
  {
    unint64_t v32 = *(void *)(v18 + 8 * v30);
    if (v32)
    {
LABEL_7:
      uint64_t v41 = a1;
      uint64_t v42 = v18;
      uint64_t v23 = (v32 - 1) & v32;
      unint64_t v24 = __clz(__rbit64(v32)) + (v30 << 6);
      int64_t v21 = v30;
      goto LABEL_3;
    }
    int64_t v33 = v19 + 2;
    int64_t v21 = v19 + 1;
    if (v19 + 2 < v31)
    {
      unint64_t v32 = *(void *)(v18 + 8 * v33);
      if (v32)
      {
LABEL_10:
        int64_t v30 = v33;
        goto LABEL_7;
      }
      int64_t v21 = v19 + 2;
      if (v19 + 3 < v31)
      {
        unint64_t v32 = *(void *)(v18 + 8 * (v19 + 3));
        if (v32)
        {
          int64_t v30 = v19 + 3;
          goto LABEL_7;
        }
        int64_t v33 = v19 + 4;
        int64_t v21 = v19 + 3;
        if (v19 + 4 < v31)
        {
          unint64_t v32 = *(void *)(v18 + 8 * v33);
          if (v32) {
            goto LABEL_10;
          }
          int64_t v30 = v19 + 5;
          int64_t v21 = v19 + 4;
          if (v19 + 5 < v31)
          {
            unint64_t v32 = *(void *)(v18 + 8 * v30);
            if (v32) {
              goto LABEL_7;
            }
            int64_t v21 = v31 - 1;
            int64_t v34 = v19 + 6;
            while (v31 != v34)
            {
              unint64_t v32 = *(void *)(v18 + 8 * v34++);
              if (v32)
              {
                int64_t v30 = v34 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v26 = v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v16, 1, 1, v3);
  uint64_t v23 = 0;
LABEL_23:
  uint64_t *v1 = v26;
  v1[1] = v18;
  v1[2] = v43;
  v1[3] = v21;
  v1[4] = v23;
  uint64_t v35 = (void (*)(uint64_t))v1[5];
  sub_10051B3EC((uint64_t)v16, (uint64_t)v12, &qword_1016A22D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
  {
    uint64_t v36 = sub_1005057FC(&qword_10168CF18);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 1, 1, v36);
  }
  else
  {
    uint64_t v37 = (uint64_t)v12;
    uint64_t v38 = (uint64_t)v40;
    sub_10051B3EC(v37, (uint64_t)v40, &qword_1016A22C8);
    v35(v38);
    sub_100522F00(v38, &qword_1016A22C8);
    uint64_t v39 = sub_1005057FC(&qword_10168CF18);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a1, 0, 1, v39);
  }
}

uint64_t sub_100F28464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v2 = sub_1005057FC(&qword_10167AAC8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016A25E8);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9, v12);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = *v1;
  uint64_t v17 = v1[1];
  uint64_t v19 = v1[2];
  int64_t v18 = v1[3];
  int64_t v20 = v18;
  unint64_t v21 = v1[4];
  uint64_t v40 = v6;
  uint64_t v44 = v19;
  if (v21)
  {
    uint64_t v41 = v11;
    uint64_t v22 = v17;
    uint64_t v23 = (v21 - 1) & v21;
    unint64_t v24 = __clz(__rbit64(v21)) | (v18 << 6);
LABEL_3:
    uint64_t v25 = *(void *)(v16 + 48);
    uint64_t v26 = v16;
    uint64_t v27 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v15, v25 + *(void *)(*(void *)(v27 - 8) + 72) * v24, v27);
    long long v42 = *(_OWORD *)(*(void *)(v26 + 56) + 16 * v24);
    *(_OWORD *)&v15[*(int *)(v2 + 48)] = v42;
    uint64_t v28 = v3;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
    swift_unknownObjectRetain();
    uint64_t v17 = v22;
    uint64_t v11 = v41;
    goto LABEL_23;
  }
  int64_t v29 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v30 = (unint64_t)(v19 + 64) >> 6;
  if (v29 < v30)
  {
    unint64_t v31 = *(void *)(v17 + 8 * v29);
    if (v31)
    {
LABEL_7:
      uint64_t v41 = v11;
      uint64_t v22 = v17;
      uint64_t v23 = (v31 - 1) & v31;
      unint64_t v24 = __clz(__rbit64(v31)) + (v29 << 6);
      int64_t v20 = v29;
      goto LABEL_3;
    }
    int64_t v32 = v18 + 2;
    int64_t v20 = v18 + 1;
    if (v18 + 2 < v30)
    {
      unint64_t v31 = *(void *)(v17 + 8 * v32);
      if (v31)
      {
LABEL_10:
        int64_t v29 = v32;
        goto LABEL_7;
      }
      int64_t v20 = v18 + 2;
      if (v18 + 3 < v30)
      {
        unint64_t v31 = *(void *)(v17 + 8 * (v18 + 3));
        if (v31)
        {
          int64_t v29 = v18 + 3;
          goto LABEL_7;
        }
        int64_t v32 = v18 + 4;
        int64_t v20 = v18 + 3;
        if (v18 + 4 < v30)
        {
          unint64_t v31 = *(void *)(v17 + 8 * v32);
          if (v31) {
            goto LABEL_10;
          }
          int64_t v29 = v18 + 5;
          int64_t v20 = v18 + 4;
          if (v18 + 5 < v30)
          {
            unint64_t v31 = *(void *)(v17 + 8 * v29);
            if (v31) {
              goto LABEL_7;
            }
            int64_t v20 = v30 - 1;
            int64_t v33 = v18 + 6;
            while (v30 != v33)
            {
              unint64_t v31 = *(void *)(v17 + 8 * v33++);
              if (v31)
              {
                int64_t v29 = v33 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v28 = v3;
  uint64_t v26 = v16;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v15, 1, 1, v2);
  uint64_t v23 = 0;
LABEL_23:
  uint64_t *v1 = v26;
  v1[1] = v17;
  v1[2] = v44;
  v1[3] = v20;
  v1[4] = v23;
  int64_t v34 = (void (*)(uint64_t))v1[5];
  sub_10051B3EC((uint64_t)v15, (uint64_t)v11, &qword_1016A25E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v11, 1, v2) == 1)
  {
    uint64_t v35 = sub_1005057FC(&qword_10167AAD0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v43, 1, 1, v35);
  }
  else
  {
    uint64_t v36 = (uint64_t)v11;
    uint64_t v37 = (uint64_t)v40;
    sub_10051B3EC(v36, (uint64_t)v40, &qword_10167AAC8);
    uint64_t v38 = v43;
    v34(v37);
    sub_100522F00(v37, &qword_10167AAC8);
    uint64_t v39 = sub_1005057FC(&qword_10167AAD0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
  }
}

uint64_t sub_100F28874@<X0>(uint64_t a1@<X8>)
{
  return sub_100F28890(&qword_10167AAA0, &qword_1016A23F8, &qword_10167AAA8, a1);
}

uint64_t sub_100F28890@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  id v50 = a3;
  uint64_t v8 = sub_1005057FC(a1);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(a2);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t result = __chkstk_darwin((char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v20 = *v4;
  uint64_t v21 = v4[1];
  uint64_t v23 = v4[2];
  int64_t v22 = v4[3];
  int64_t v24 = v22;
  unint64_t v25 = v4[4];
  uint64_t v44 = v12;
  uint64_t v45 = a1;
  uint64_t v48 = v23;
  uint64_t v49 = result;
  if (v25)
  {
    uint64_t v46 = a4;
    uint64_t v47 = a2;
    uint64_t v26 = (v25 - 1) & v25;
    unint64_t v27 = __clz(__rbit64(v25)) | (v22 << 6);
LABEL_3:
    uint64_t v28 = *(void *)(v20 + 48);
    uint64_t v29 = v20;
    uint64_t v30 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v19, v28 + *(void *)(*(void *)(v30 - 8) + 72) * v27, v30);
    *(void *)&v19[*(int *)(v8 + 48)] = *(void *)(*(void *)(v29 + 56) + 8 * v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v8);
    swift_retain();
    a4 = v46;
    a2 = v47;
    goto LABEL_23;
  }
  int64_t v31 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v32 = (unint64_t)(v23 + 64) >> 6;
  if (v31 < v32)
  {
    unint64_t v33 = *(void *)(v21 + 8 * v31);
    if (v33)
    {
LABEL_7:
      uint64_t v46 = a4;
      uint64_t v47 = a2;
      uint64_t v26 = (v33 - 1) & v33;
      unint64_t v27 = __clz(__rbit64(v33)) + (v31 << 6);
      int64_t v24 = v31;
      goto LABEL_3;
    }
    int64_t v34 = v22 + 2;
    int64_t v24 = v22 + 1;
    if (v22 + 2 < v32)
    {
      unint64_t v33 = *(void *)(v21 + 8 * v34);
      if (v33)
      {
LABEL_10:
        int64_t v31 = v34;
        goto LABEL_7;
      }
      int64_t v24 = v22 + 2;
      if (v22 + 3 < v32)
      {
        unint64_t v33 = *(void *)(v21 + 8 * (v22 + 3));
        if (v33)
        {
          int64_t v31 = v22 + 3;
          goto LABEL_7;
        }
        int64_t v34 = v22 + 4;
        int64_t v24 = v22 + 3;
        if (v22 + 4 < v32)
        {
          unint64_t v33 = *(void *)(v21 + 8 * v34);
          if (v33) {
            goto LABEL_10;
          }
          int64_t v31 = v22 + 5;
          int64_t v24 = v22 + 4;
          if (v22 + 5 < v32)
          {
            unint64_t v33 = *(void *)(v21 + 8 * v31);
            if (v33) {
              goto LABEL_7;
            }
            int64_t v24 = v32 - 1;
            int64_t v35 = v22 + 6;
            while (v32 != v35)
            {
              unint64_t v33 = *(void *)(v21 + 8 * v35++);
              if (v33)
              {
                int64_t v31 = v35 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v29 = v20;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v19, 1, 1, v8);
  uint64_t v26 = 0;
LABEL_23:
  *uint64_t v4 = v29;
  v4[1] = v21;
  v4[2] = v48;
  v4[3] = v24;
  v4[4] = v26;
  uint64_t v36 = (void (*)(uint64_t))v4[5];
  uint64_t v37 = v49;
  sub_10051B3EC((uint64_t)v19, v49, a2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v37, 1, v8) == 1)
  {
    uint64_t v38 = sub_1005057FC(v50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(a4, 1, 1, v38);
  }
  else
  {
    uint64_t v39 = v37;
    uint64_t v41 = (uint64_t)v44;
    uint64_t v40 = v45;
    sub_10051B3EC(v39, (uint64_t)v44, v45);
    v36(v41);
    sub_100522F00(v41, v40);
    uint64_t v42 = sub_1005057FC(v50);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(a4, 0, 1, v42);
  }
}

void sub_100F28C70()
{
  void (*v11)(uint64_t *__return_ptr, void *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  void v20[3];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = *(void **)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v11 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    uint64_t v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      uint64_t v15 = v0[1];
      uint64_t v16 = *(void *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        uint64_t v5 = (v16 - 1) & v16;
        unint64_t v6 = __clz(__rbit64(v16)) + (v13 << 6);
        int64_t v4 = v13;
        goto LABEL_3;
      }
      uint64_t v17 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        uint64_t v16 = *(void *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          uint64_t v13 = v17;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          uint64_t v16 = *(void *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            uint64_t v13 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v17 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            uint64_t v16 = *(void *)(v15 + 8 * v17);
            if (v16) {
              goto LABEL_10;
            }
            uint64_t v13 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              uint64_t v16 = *(void *)(v15 + 8 * v13);
              if (v16) {
                goto LABEL_7;
              }
              int64_t v4 = v14 - 1;
              uint64_t v18 = v3 + 6;
              while (v14 != v18)
              {
                uint64_t v16 = *(void *)(v15 + 8 * v18++);
                if (v16)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t sub_100F28E04(char a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  v18[3] = &type metadata for CRLBoardAuxiliaryRealTimeChange;
  v18[4] = &off_10150CB90;
  uint64_t v10 = swift_allocObject();
  v18[0] = v10;
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(unsigned char *)(v10 + 40) = a4;
  uint64_t v11 = *(NSObject **)(a5 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  sub_1005498A4((uint64_t)v18, (uint64_t)v17);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  sub_10053974C(v17, v12 + 24);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100F38998;
  *(void *)(v13 + 24) = v12;
  v16[4] = sub_100659320;
  v16[5] = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = *(void *)"";
  v16[2] = sub_1006D9628;
  v16[3] = &unk_101533600;
  uint64_t v14 = _Block_copy(v16);
  sub_100510D4C(a2, a3);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v14);
  _Block_release(v14);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((a5 & 1) == 0) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v18);
  }
  __break(1u);
  return result;
}

uint64_t sub_100F28FE0(char a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v17 = &type metadata for CRLBoardAuxiliaryRealTimeChangeLegacy;
  uint64_t v18 = &off_10152F208;
  v14[0] = a1;
  uint64_t v15 = a2;
  unint64_t v16 = a3;
  uint64_t v7 = *(NSObject **)(a4 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  sub_1005498A4((uint64_t)v14, (uint64_t)v13);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  sub_10053974C(v13, v8 + 24);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100F36A00;
  *(void *)(v9 + 24) = v8;
  v12[4] = sub_100659320;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_1006D9628;
  v12[3] = &unk_101533240;
  uint64_t v10 = _Block_copy(v12);
  sub_100510D4C(a2, a3);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v7, v10);
  _Block_release(v10);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v4 & 1) == 0) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v14);
  }
  __break(1u);
  return result;
}

uint64_t sub_100F29198(uint64_t a1, uint64_t a2)
{
  v7[3] = type metadata accessor for CRLAASApplicationTracker();
  v7[4] = &off_101519C50;
  v7[0] = a1;
  uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator);
  if (v4)
  {
    sub_1005498A4((uint64_t)v7, (uint64_t)v6);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    sub_1006063BC((uint64_t)v6, v4 + 24, &qword_101677C18);
    swift_endAccess();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v7);
}

uint64_t sub_100F29260(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = *(char **)(*(void *)(a1 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v16, v6, type metadata accessor for CRLBoardCRDTData);
  uint64_t v17 = v15;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180(v6, type metadata accessor for CRLBoardCRDTData);

  swift_release();
  uint64_t v18 = *(char **)(*(void *)(v25 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v19 = *(void *)&v18[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v19, v6, type metadata accessor for CRLBoardCRDTData);
  uint64_t v20 = v18;
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_100F38180(v6, type metadata accessor for CRLBoardCRDTData);

  swift_release();
  LOBYTE(v6) = static UUID.== infix(_:_:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  int64_t v22 = v10;
  uint64_t v23 = v26;
  v21(v22, v26);
  v21(v14, v23);
  return v6 & 1;
}

double *sub_100F29514(unint64_t a1, uint64_t a2, uint64_t (*a3)(void, void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v36 = a2;
  uint64_t v9 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v35 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v13 = a1 & 0xC000000000000001;
    uint64_t v38 = v5;
    uint64_t v39 = (unsigned char *)(v36 + 16);
    swift_beginAccess();
    uint64_t v14 = 4;
    uint64_t v37 = a4;
    unint64_t v33 = a3;
    unint64_t v34 = a1;
    unint64_t v31 = a1 & 0xC000000000000001;
    uint64_t v32 = v12;
    while (1)
    {
      id v15 = v13 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v14);
      uint64_t v5 = v15;
      uint64_t v16 = v14 - 3;
      uint64_t v17 = v39;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      if (*v39 == 1 || (swift_beginAccess(), char v18 = a3(v5, v17), swift_endAccess(), (v18 & 1) == 0))
      {
      }
      else
      {
        uint64_t v19 = v35;
        sub_100F38118((uint64_t)v5 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v20 = (objc_class *)type metadata accessor for CRLBoardLibraryViewModelItemNode();
        uint64_t v21 = a3;
        int64_t v22 = (char *)objc_allocWithZone(v20);
        *(void *)&v22[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
        sub_100F38118(v19, (uint64_t)&v22[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);
        v40.receiver = v22;
        v40.Class super_class = v20;
        [super init];
        sub_100F38180(v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
        id v24 = [v5 children];
        uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v26 = v36;
        swift_retain();
        unint64_t v27 = v38;
        sub_100F29514(v25, v26, v21, v37);
        uint64_t v38 = v27;
        swift_bridgeObjectRelease();
        swift_release();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v23 setChildren:isa];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        a4 = v37;
        a3 = v33;
        a1 = v34;
        unint64_t v13 = v31;
        uint64_t v12 = v32;
      }
      ++v14;
      if (v16 == v12)
      {
        swift_bridgeObjectRelease();
        return (double *)v41;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

double *sub_100F29878(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v27 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_39;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    uint64_t v25 = v3 + 32;
    uint64_t v26 = v3 & 0xFFFFFFFFFFFFFF8;
    uint64_t v23 = i;
    unint64_t v24 = a2 & 0xC000000000000001;
    unint64_t v22 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v5 >= *(void *)(v26 + 16)) {
          goto LABEL_36;
        }
        id v7 = *(id *)(v25 + 8 * v5);
      }
      uint64_t v8 = v7;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_37;
      }
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        if (!v10) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v10) {
          goto LABEL_16;
        }
      }
      id v11 = v24 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a2 + 32);
      uint64_t v12 = v11;
      uint64_t v3 = type metadata accessor for CRLSharedHighlight();
      char v13 = static NSObject.== infix(_:_:)();

      if ((v13 & 1) == 0) {
        break;
      }

      swift_bridgeObjectRelease();
LABEL_5:
      if (v5 == i) {
        return v27;
      }
    }
    if (v10 == 1)
    {
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      uint64_t v3 = (uint64_t)&v27;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      goto LABEL_5;
    }
    if (v24)
    {
      uint64_t v14 = 1;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v15 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        char v16 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();
        if (v16) {
          goto LABEL_29;
        }
        ++v14;
        if (v15 == v10) {
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v17 = 5;
    while (1)
    {
      uint64_t v18 = v17 - 3;
      if (__OFADD__(v17 - 4, 1)) {
        break;
      }
      id v19 = *(id *)(a2 + 8 * v17);
      char v20 = static NSObject.== infix(_:_:)();

      if (v20)
      {
LABEL_29:

        swift_bridgeObjectRelease();
        unint64_t v6 = v22;
        uint64_t i = v23;
        goto LABEL_5;
      }
      ++v17;
      if (v18 == v10)
      {
LABEL_28:
        swift_bridgeObjectRelease();
        unint64_t v6 = v22;
        uint64_t i = v23;
        goto LABEL_17;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    ;
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100F29B24(unint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  id v50 = a2;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v42 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v41 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v53, v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v54 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_26;
  }
  uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v22)
  {
    while (1)
    {
      uint64_t v40 = v3;
      unint64_t v23 = 0;
      unint64_t v24 = a1 & 0xC000000000000001;
      id v51 = v21;
      uint64_t v52 = a1 & 0xFFFFFFFFFFFFFF8;
      uint64_t v3 = v44;
      uint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
      uint64_t v49 = v17 + 8;
      uint64_t v46 = v22;
      uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
      unint64_t v45 = a1 & 0xC000000000000001;
      while (v24)
      {
        uint64_t v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v21 = v25;
        unint64_t v26 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_25;
        }
        sub_100F38118((uint64_t)&v25[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v27 = (uint64_t)v14;
          unint64_t v28 = a1;
          sub_1005057FC(&qword_101677100);
          swift_bridgeObjectRelease();
          uint64_t v29 = (uint64_t)v51;
          sub_100F37878((uint64_t)v17, (uint64_t)v51, type metadata accessor for CRLBoardIdentifier);
          uint64_t v30 = *v50;
          if (*(void *)(*v50 + 16) && (unint64_t v31 = sub_1009563EC(v29), (v32 & 1) != 0))
          {
            uint64_t v14 = (char *)v27;
            sub_100F38118(*(void *)(v30 + 56) + *(void *)(v43 + 72) * v31, v27, type metadata accessor for CRLBoardViewModelMetadata);
            uint64_t v33 = 0;
            a1 = v28;
          }
          else
          {
            uint64_t v33 = 1;
            a1 = v28;
            uint64_t v14 = (char *)v27;
          }
          (*v48)(v14, v33, 1, v3);
          if ((*v47)(v14, 1, v3))
          {
            sub_100F38180((uint64_t)v51, type metadata accessor for CRLBoardIdentifier);
            sub_100522F00((uint64_t)v14, (uint64_t *)&unk_1016741D0);
          }
          else
          {
            uint64_t v34 = v41;
            sub_100F38118((uint64_t)v14, v41, type metadata accessor for CRLBoardViewModelMetadata);
            sub_100522F00((uint64_t)v14, (uint64_t *)&unk_1016741D0);
            uint64_t v35 = v34 + *(int *)(v3 + 28);
            uint64_t v36 = v42;
            sub_100522E9C(v35, v42, (uint64_t *)&unk_1016741E0);
            uint64_t v37 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
            int v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37);
            sub_100522F00(v36, (uint64_t *)&unk_1016741E0);
            sub_100F38180(v34, type metadata accessor for CRLBoardViewModelMetadata);
            sub_100F38180((uint64_t)v51, type metadata accessor for CRLBoardIdentifier);
            if (v38 == 1)
            {
            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            a1 = v28;
            uint64_t v3 = v44;
          }
          unint64_t v24 = v45;
          uint64_t v22 = v46;
        }
        else
        {
          sub_100F38180((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        ++v23;
        if (v26 == v22) {
          return v54;
        }
      }
      if (v23 < *(void *)(v52 + 16)) {
        break;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      if (!v22) {
        return _swiftEmptyArrayStorage;
      }
    }
    uint64_t v25 = (char *)*(id *)(a1 + 8 * v23 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100F2A088(unint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a1;
  unint64_t v26 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_37;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = 0;
    uint64_t v23 = v2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v24 = v2 & 0xC000000000000001;
    uint64_t v21 = i;
    uint64_t v22 = v2 + 32;
    while (1)
    {
      if (v24)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v4 >= *(void *)(v23 + 16)) {
          goto LABEL_34;
        }
        id v5 = *(id *)(v22 + 8 * v4);
      }
      uint64_t v6 = v5;
      if (__OFADD__(v4++, 1)) {
        goto LABEL_35;
      }
      uint64_t v8 = *a2;
      if ((unint64_t)*a2 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        if (!v9) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v9) {
          goto LABEL_4;
        }
      }
      if ((v8 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(v8 + 32);
      }
      uint64_t v11 = v10;
      uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModelItemNode();
      char v12 = static NSObject.== infix(_:_:)();

      if (v12)
      {
LABEL_15:

        swift_bridgeObjectRelease_n();
        goto LABEL_5;
      }
      if (v9 != 1) {
        break;
      }
LABEL_4:
      swift_bridgeObjectRelease_n();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t v2 = (uint64_t)&v26;
      specialized ContiguousArray._endMutation()();
LABEL_5:
      if (v4 == v21) {
        return v26;
      }
    }
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = 1;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v14 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        char v15 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();
        if (v15) {
          goto LABEL_15;
        }
        ++v13;
        if (v14 == v9) {
          goto LABEL_4;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v16 = 5;
    while (1)
    {
      uint64_t v17 = v16 - 3;
      if (__OFADD__(v16 - 4, 1)) {
        break;
      }
      id v18 = *(id *)(v8 + 8 * v16);
      char v19 = static NSObject.== infix(_:_:)();

      if (v19) {
        goto LABEL_15;
      }
      ++v16;
      if (v17 == v9) {
        goto LABEL_4;
      }
    }
LABEL_36:
    __break(1u);
LABEL_37:
    ;
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100F2A31C(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v18)
  {
    while (1)
    {
      unint64_t v31 = v3;
      unint64_t v32 = a1;
      unint64_t v3 = 0;
      uint64_t v34 = v9;
      uint64_t v35 = v17 + 8;
      uint64_t v39 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v40 = a1 & 0xC000000000000001;
      uint64_t v37 = v18;
      int v38 = v13;
      uint64_t v36 = v14;
      uint64_t v33 = a2;
      while (v40)
      {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v20 = v19;
        unint64_t v21 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_24;
        }
        sub_100F38118((uint64_t)v19 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          sub_1005057FC(&qword_101677100);
          swift_bridgeObjectRelease();
          sub_100F37878((uint64_t)v17, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
          if (*(void *)(a2 + 16))
          {
            unint64_t v22 = sub_1009563EC((uint64_t)v13);
            if (v23)
            {
              unint64_t v24 = v22;
              uint64_t v25 = *(void *)(a2 + 56);
              uint64_t v26 = type metadata accessor for CRLBoardViewModelMetadata(0);
              uint64_t v27 = *(void *)(v26 - 8);
              uint64_t v28 = v25 + *(void *)(v27 + 72) * v24;
              a1 = v32;
              uint64_t v9 = v34;
              sub_100F38118(v28, (uint64_t)v34, type metadata accessor for CRLBoardViewModelMetadata);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v9, 0, 1, v26);
              a2 = v33;
            }
            else
            {
              uint64_t v26 = type metadata accessor for CRLBoardViewModelMetadata(0);
              uint64_t v9 = v34;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v34, 1, 1, v26);
            }
          }
          else
          {
            uint64_t v26 = type metadata accessor for CRLBoardViewModelMetadata(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 1, 1, v26);
          }
          sub_100F38180((uint64_t)v38, type metadata accessor for CRLBoardIdentifier);
          type metadata accessor for CRLBoardViewModelMetadata(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v9, 1, v26) == 1)
          {
            sub_100522F00((uint64_t)v9, (uint64_t *)&unk_1016741D0);
            uint64_t v14 = v36;
LABEL_20:

            uint64_t v13 = v38;
            goto LABEL_5;
          }
          char v29 = v9[1];
          sub_100F38180((uint64_t)v9, type metadata accessor for CRLBoardViewModelMetadata);
          uint64_t v14 = v36;
          if ((v29 & 1) == 0) {
            goto LABEL_20;
          }
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v9 = v34;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v13 = v38;
        }
        else
        {
          sub_100F38180((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
LABEL_5:
        ++v3;
        if (v21 == v37) {
          return v41;
        }
      }
      if (v3 < *(void *)(v39 + 16)) {
        break;
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      if (!v18) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v19 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100F2A7C4(uint64_t a1, void (*a2)(uint64_t, id), uint64_t a3)
{
  v20[1] = a3;
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8, v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v20[0] = v3;
    unint64_t v21 = _swiftEmptyArrayStorage;
    sub_1006BB704(0, v11, 0);
    uint64_t v12 = v21;
    uint64_t v13 = (id *)(a1 + 40);
    do
    {
      id v14 = *v13;
      id v15 = *v13;
      uint64_t v16 = swift_retain();
      a2(v16, v14);

      swift_release();
      unint64_t v21 = v12;
      unint64_t v18 = *((void *)v12 + 2);
      unint64_t v17 = *((void *)v12 + 3);
      if (v18 >= v17 >> 1)
      {
        sub_1006BB704(v17 > 1, v18 + 1, 1);
        uint64_t v12 = v21;
      }
      v13 += 2;
      *((void *)v12 + 2) = v18 + 1;
      sub_100F37878((uint64_t)v10, (uint64_t)v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
      --v11;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_100F2A978(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v61 = a3;
  uint64_t v56 = a2;
  uint64_t v59 = a1;
  uint64_t v7 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v60 = (uint64_t)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v55 = (uint64_t)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for UUID();
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58, v13);
  id v15 = (char *)v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v16 - 8, v17);
  id v19 = (char *)v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v54[1] = a5 + 112;
  swift_unknownObjectWeakInit();
  uint64_t v20 = a5 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache;
  *(unsigned char *)uint64_t v20 = 0;
  *(void *)(v20 + 8) = &_swiftEmptySetSingleton;
  *(void *)(v20 + 16) = 0;
  *(unsigned char *)(v20 + 24) = 1;
  *(void *)(a5 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask) = 0;
  *(unsigned char *)(a5 + 136) = a4;
  if ((a4 & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(editingCoordinator:suspendResumeCoordinatorState:globallyScopedBoardIdentifier:enforceParticipantCKShareWritePermission:)", 126, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 201, (uint64_t)"enforceParticipantCKShareWritePermission must always be true on iOS and macOS", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(editingCoordinator:suspendResumeCoordinatorState:globallyScopedBoardIdentifier:enforceParticipantCKShareWritePermission:)", 126, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 201);
  }
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v21 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  unint64_t v23 = sub_100528BE4();
  unint64_t v24 = v23;
  uint64_t v25 = 1702195828;
  if ((a4 & 1) == 0) {
    uint64_t v25 = 0x65736C6166;
  }
  unint64_t v26 = 0xE500000000000000;
  if (a4) {
    unint64_t v26 = 0xE400000000000000;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v23;
  *(void *)(inited + 32) = v25;
  *(void *)(inited + 40) = v26;
  id v27 = v21;
  uint64_t v28 = v61;
  uint64_t v29 = UUID.uuidString.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v24;
  *(void *)(inited + 72) = v29;
  *(void *)(inited + 80) = v30;
  uint64_t v31 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v31, (uint64_t)"CRLBoardRealTimeChangeCoordinator was instantiated with enforceParticipantCKShareWritePermission = %{public}@ for boardUUID: %{public}@", 135, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v32 = v59;
  swift_unknownObjectWeakAssign();
  uint64_t v33 = *(char **)(v32 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  *(void *)(a5 + 120) = v33;
  uint64_t v34 = (void *)(a5 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_suspendResumeCoordinatorState);
  *uint64_t v34 = v56;
  v34[1] = &off_101511D78;
  sub_100F38118(v28, a5 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  uint64_t v35 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v36 = *(void *)&v33[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v37 = v36;
  uint64_t v38 = v55;
  sub_100F38118(v37, v55, type metadata accessor for CRLBoardCRDTData);
  uint64_t v39 = v33;
  swift_retain();
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180(v38, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  unint64_t v40 = (uint64_t *)(*(void *)&v33[v35] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v41 = *v40;
  unint64_t v42 = v40[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v15, v41, v42, (uint64_t)v19);
  uint64_t v43 = v57;
  uint64_t v44 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v15, v19, v58);
  sub_100F38180((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
  sub_10060E598((uint64_t)v15, v28, (uint64_t)&_mh_execute_header, (uint64_t)"init(editingCoordinator:suspendResumeCoordinatorState:globallyScopedBoardIdentifier:enforceParticipantCKShareWritePermission:)", 126, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2u, 210);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v44);
  unint64_t v45 = *(void **)(*(void *)(*(void *)(a5 + 120) + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16);
  type metadata accessor for CRLChangeCoordinatorCachedShareState();
  uint64_t v46 = (void *)swift_allocObject();
  v46[4] = &_swiftEmptySetSingleton;
  _OWORD v46[2] = v45;
  id v47 = v45;
  unint64_t v48 = sub_100A39938((uint64_t)_swiftEmptyArrayStorage);

  v46[3] = v48;
  *(void *)(a5 + 128) = v46;
  uint64_t v49 = *(void **)(v32 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_shareObservers);
  swift_retain();
  if (([v49 containsObject:v46] & 1) == 0) {
    [v49 addObject:v46];
  }
  swift_release();
  *(void *)(a5 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates) = _swiftEmptyArrayStorage;
  uint64_t v50 = v61;
  uint64_t v51 = v60;
  sub_100F38118(v61, v60, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  type metadata accessor for CRLBoardRealTimeChangeCoordinator.CRLRealTimeChangeProcessor(0);
  uint64_t v52 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_100F37878(v51, v52+ OBJC_IVAR____TtCC8Freeform33CRLBoardRealTimeChangeCoordinator26CRLRealTimeChangeProcessor_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  sub_100F38180(v50, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  *(void *)(a5 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_processor) = v52;
  return a5;
}

uint64_t sub_100F2B0BC(uint64_t a1, char a2, uint64_t a3)
{
  swift_defaultActor_initialize();
  *(void *)(a3 + 112) = a1;
  *(void *)(a3 + 120) = &off_101531A18;
  *(unsigned char *)(a3 + 144) = a2;
  uint64_t v6 = qword_10166FBA0;
  swift_unknownObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v7 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unint64_t v9 = sub_100528BE4();
  uint64_t v10 = 0x64656C6261736964;
  if (a2) {
    uint64_t v10 = 0x656C62616E65;
  }
  unint64_t v11 = 0xE800000000000000;
  if (a2) {
    unint64_t v11 = 0xE600000000000000;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v11;
  id v12 = v7;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Board real-time sync additional message encryption (CloudKit share encryption) state: %{public}@", 96, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  *(void *)(a3 + 128) = PropertyListEncoder.init()();
  swift_retain();
  dispatch thunk of PropertyListEncoder.outputFormat.setter();
  swift_release();
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  *(void *)(a3 + 136) = PropertyListDecoder.init()();
  return a3;
}

uint64_t sub_100F2B28C(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[9] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[10] = v5;
  v3[11] = v4;
  return _swift_task_switch(sub_100F2B390, v5, v4);
}

uint64_t sub_100F2B390()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 96) = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v3 = *(void *)(v0 + 48);
    *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 104) = type metadata accessor for CRLImmutableBoard(0);
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    *(void *)(v0 + 112) = v5;
    int v6 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 200) = v6;
    *(void *)(v0 + 120) = *(void *)(v3 + 72);
    *(void *)(v0 + 128) = 0;
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v9 = v1 + ((v6 + 32) & ~(unint64_t)v6);
    swift_bridgeObjectRetain();
    sub_100F38118(v9, v7, type metadata accessor for CRLBoardIdentifier);
    sub_100F38118(v7, v8, type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for CRLBoardActor();
    uint64_t v10 = swift_allocObject();
    *(void *)(v0 + 136) = v10;
    id v11 = v5;
    swift_defaultActor_initialize();
    sub_100F37878(v8, v10 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
    *(void *)(v10 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store) = v11;
    return _swift_task_switch(sub_100F2B55C, v10, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    id v12 = *(uint64_t (**)(double *))(v0 + 8);
    return v12(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100F2B55C()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100F2B620;
  return sub_1006D9650(v2, v3, 1);
}

uint64_t sub_100F2B620(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[19] = a1;
  v3[20] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[17];
    uint64_t v5 = sub_100F2B994;
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v4 = v3[10];
    uint64_t v6 = v3[11];
    uint64_t v5 = sub_100F2B73C;
  }
  return _swift_task_switch(v5, v4, v6);
}

uint64_t sub_100F2B73C()
{
  id v1 = *(id *)(v0 + 152);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  uint64_t v2 = *(void **)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 128) + 1;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_release();

  sub_100F38180(v4, type metadata accessor for CRLBoardIdentifier);
  if (v5 == v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)(v0 + 16);
    *(void *)(v0 + 168) = v6;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v7;
    void *v7 = v0;
    v7[1] = sub_100F2BA9C;
    uint64_t v8 = *(void *)(v0 + 32);
    return sub_100EF904C(v6, v8, 1, 0);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 128) + 1;
    *(void *)(v0 + 128) = v11;
    id v12 = *(void **)(v0 + 112);
    uint64_t v13 = *(void *)(v0 + 56);
    uint64_t v14 = *(void *)(v0 + 64);
    sub_100F38118(*(void *)(v0 + 24)+ ((*(unsigned __int8 *)(v0 + 200) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 200))+ v10 * v11, v14, type metadata accessor for CRLBoardIdentifier);
    sub_100F38118(v14, v13, type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for CRLBoardActor();
    uint64_t v15 = swift_allocObject();
    *(void *)(v0 + 136) = v15;
    id v16 = v12;
    swift_defaultActor_initialize();
    sub_100F37878(v13, v15 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
    *(void *)(v15 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store) = v16;
    return _swift_task_switch(sub_100F2B55C, v15, 0);
  }
}

uint64_t sub_100F2B994()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  return _swift_task_switch(sub_100F2BA00, v1, v2);
}

uint64_t sub_100F2BA00()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  swift_release();
  sub_100F38180(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100F2BA9C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_100F2BC48;
  }
  else
  {
    swift_bridgeObjectRelease();
    v4[24] = a1;
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_100F2BBCC;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100F2BBCC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 192);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100F2BC48()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100F2BCC8(void *a1)
{
  id v2 = [a1 title];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  id v7 = [a1 message];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v14 = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v14;
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = v11;
  id v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Alert: %@ - %@", 14, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_100F2BE94()
{
  uint64_t v1 = sub_1005057FC(&qword_101682E08);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100F2BF28()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100F2BF60()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100F2BFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100F2BFB8()
{
  return swift_release();
}

uint64_t sub_100F2BFC0(uint64_t a1)
{
  return sub_100C7C8D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_100F2BFD4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100F0FE6C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100F2C09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v93 = a7;
  uint64_t v96 = a8;
  uint64_t v94 = a6;
  uint64_t v91 = a5;
  uint64_t v88 = a3;
  uint64_t v89 = a4;
  uint64_t v101 = a1;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v100 = (uint64_t)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v105 = (uint64_t)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v98 = *(void *)(v15 - 8);
  uint64_t v99 = (int *)v15;
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v90 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v106 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22, v23);
  uint64_t v104 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24, v26);
  NSString v108 = (char *)&v87 - v28;
  __chkstk_darwin(v27, v29);
  NSString v107 = (char *)&v87 - v30;
  uint64_t v31 = sub_1005057FC(&qword_1016A22E8);
  uint64_t v32 = v31 - 8;
  __chkstk_darwin(v31, v33);
  uint64_t v35 = (char *)&v87 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v38 = __chkstk_darwin(v36 - 8, v37);
  uint64_t v95 = (uint64_t)&v87 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v40);
  unint64_t v42 = (char *)&v87 - v41;
  uint64_t v43 = *(int *)(v32 + 56);
  sub_100F38118(a2, (uint64_t)v35, type metadata accessor for CRLBoardIdentifier);
  uint64_t v44 = *(void *)(a2 + v43);
  sub_100F37878((uint64_t)v35, (uint64_t)v42, type metadata accessor for CRLBoardIdentifier);
  uint64_t v45 = *(int *)(v32 + 56);
  uint64_t v46 = v88;
  sub_100F38118(a2, (uint64_t)v35, type metadata accessor for CRLBoardIdentifier);
  *(void *)&v35[v45] = v44;
  uint64_t v103 = v44;
  swift_retain();
  sub_100F38180((uint64_t)v35, type metadata accessor for CRLBoardIdentifier);
  uint64_t v47 = *(void *)(v46 + 16);
  uint64_t v102 = v42;
  if (v47 && (sub_1009563EC((uint64_t)v42), (v48 & 1) != 0))
  {
    uint64_t v49 = Date.init(timeIntervalSinceReferenceDate:)();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeViewModelMetadata(allBoardsAndCKResult:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3210, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v86) = 2;
    v85[0] = "invalid nil found when unwrapping value";
    v85[1] = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeViewModelMetadata(allBoardsAndCKResult:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 3210);
    uint64_t v49 = static Date.distantPast.getter();
  }
  unint64_t v51 = *(void *)(*(void *)(v89 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                  + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  __chkstk_darwin(v49, v50);
  uint64_t v52 = (uint64_t)v102;
  uint64_t v86 = v102;
  swift_bridgeObjectRetain();
  uint64_t v53 = v92;
  int64_t v54 = sub_100ED54F0((uint64_t (*)(id *))sub_100DBFA74, (uint64_t)v85, v51);
  uint64_t v92 = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = v94;
  uint64_t v56 = v91;
  uint64_t v57 = v106;
  if (v54) {

  }
  uint64_t v58 = v105;
  if (!*(void *)(v56 + 16) || (unint64_t v59 = sub_1009563EC(v52), (v60 & 1) == 0))
  {
    uint64_t v62 = (uint64_t)v90;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v90, 1, 1, v22);
    goto LABEL_12;
  }
  unint64_t v61 = *(void *)(v56 + 56) + *(void *)(v57 + 72) * v59;
  uint64_t v62 = (uint64_t)v90;
  (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v90, v61, v22);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v62, 0, 1, v22);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v62, 1, v22) == 1)
  {
LABEL_12:
    static Date.distantPast.getter();
    sub_100522F00(v62, &qword_101672EB0);
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v108, v62, v22);
LABEL_13:
  LODWORD(v93) = sub_1006E5EA4(v52, v93);
  LODWORD(v91) = *(unsigned __int8 *)(v103 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isFavorite);
  uint64_t v90 = *(char **)(v57 + 16);
  ((void (*)(char *, char *, uint64_t))v90)(v104, v107, v22);
  uint64_t v63 = *(void *)(v55 + 16);
  uint64_t v97 = v22;
  if (v63 && (unint64_t v64 = sub_1009563EC(v52), (v65 & 1) != 0))
  {
    unint64_t v66 = v64;
    uint64_t v67 = *(void *)(v55 + 56);
    uint64_t v68 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    uint64_t v69 = *(void *)(v68 - 8);
    sub_100F38118(v67 + *(void *)(v69 + 72) * v66, v58, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    uint64_t v70 = v68;
    uint64_t v52 = (uint64_t)v102;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v58, 0, 1, v70);
  }
  else
  {
    uint64_t v71 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v58, 1, 1, v71);
  }
  LODWORD(v102) = v54 != 0;
  LODWORD(v96) = sub_1006E5EA4(v52, v96);
  LODWORD(v94) = *(unsigned __int8 *)(v103
                                    + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_enableCollaboratorCursors);
  LODWORD(v89) = *(unsigned __int8 *)(v103
                                    + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isCanvasDotGridEnabled);
  uint64_t v72 = *(void *)(v103 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_lastOpenCrashedVersion);
  LODWORD(v88) = *(unsigned __int8 *)(v103
                                    + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isConnectorModeEnabled);
  char v73 = *(unsigned char *)(v103 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_lastOpenCrashedVersion + 8);
  char v74 = *(unsigned char *)(v103 + OBJC_IVAR____TtC8Freeform31CRLUserBoardMetadataDatabaseRow_isScenesNavigatorOpen);
  uint64_t v75 = v99;
  uint64_t v76 = v52;
  uint64_t v77 = v97;
  ((void (*)(char *, char *, uint64_t))v90)(&v18[v99[16]], v108, v97);
  *uint64_t v18 = v93 & 1;
  v18[1] = v91;
  uint64_t v78 = v106;
  (*(void (**)(char *, char *, uint64_t))(v106 + 32))(&v18[v75[6]], v104, v77);
  sub_10051B3EC(v105, (uint64_t)&v18[v75[7]], (uint64_t *)&unk_1016741E0);
  v18[v75[8]] = 0;
  v18[v75[9]] = (char)v102;
  v18[v75[10]] = v96 & 1;
  int64_t v79 = &v18[v75[11]];
  *(void *)int64_t v79 = v72;
  v79[8] = v73;
  v18[v75[12]] = v94;
  v18[v75[13]] = v89;
  v18[v75[14]] = v88;
  v18[v75[15]] = v74;
  uint64_t v80 = v76;
  uint64_t v81 = v95;
  sub_100F38118(v76, v95, type metadata accessor for CRLBoardIdentifier);
  uint64_t v82 = v100;
  sub_100F38118((uint64_t)v18, v100, type metadata accessor for CRLBoardViewModelMetadata);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v98 + 56))(v82, 0, 1, v75);
  sub_10057F4F4(v82, v81);
  swift_release();
  sub_100F38180((uint64_t)v18, type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v83 = *(void (**)(char *, uint64_t))(v78 + 8);
  v83(v108, v77);
  v83(v107, v77);
  return sub_100F38180(v80, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100F2CA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v38 = a7;
  uint64_t v39 = a8;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v11 = sub_1005057FC(&qword_1016A22E8);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v40 = a1;
  uint64_t v19 = *(void *)(a2 + 64);
  uint64_t v32 = a2 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v33 = (unint64_t)(v20 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v24 = 0;
  if (!v22) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  for (unint64_t i = v25 | (v24 << 6); ; unint64_t i = __clz(__rbit64(v28)) + (v24 << 6))
  {
    uint64_t v30 = *(void *)(a2 + 48);
    uint64_t v31 = type metadata accessor for CRLBoardIdentifier(0);
    sub_100F38118(v30 + *(void *)(*(void *)(v31 - 8) + 72) * i, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    *(void *)&v18[*(int *)(v11 + 48)] = *(void *)(*(void *)(a2 + 56) + 8 * i);
    sub_10051B3EC((uint64_t)v18, (uint64_t)v15, &qword_1016A22E8);
    swift_retain();
    sub_100F2C09C((uint64_t)&v40, (uint64_t)v15, v34, v35, v36, v37, v38, v39);
    if (v8)
    {
      swift_bridgeObjectRelease();
      sub_100522F00((uint64_t)v15, &qword_1016A22E8);
      return swift_release();
    }
    uint64_t result = sub_100522F00((uint64_t)v15, &qword_1016A22E8);
    if (v22) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v24++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v33) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v32 + 8 * v24);
    if (!v28) {
      break;
    }
LABEL_17:
    unint64_t v22 = (v28 - 1) & v28;
  }
  int64_t v29 = v24 + 1;
  if (v24 + 1 >= v33) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v32 + 8 * v29);
  if (v28) {
    goto LABEL_16;
  }
  int64_t v29 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v32 + 8 * v29);
  if (v28) {
    goto LABEL_16;
  }
  int64_t v29 = v24 + 3;
  if (v24 + 3 >= v33) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v32 + 8 * v29);
  if (v28) {
    goto LABEL_16;
  }
  int64_t v29 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_26:
    swift_release();
    return v40;
  }
  unint64_t v28 = *(void *)(v32 + 8 * v29);
  if (v28)
  {
LABEL_16:
    int64_t v24 = v29;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v24 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v24 >= v33) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v32 + 8 * v24);
    ++v29;
    if (v28) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100F2CD34(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v68 = a3;
  uint64_t v59 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v8 = __chkstk_darwin(v59, v7);
  uint64_t v58 = (uint64_t)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v57 = (uint64_t)v54 - v11;
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v66 = (uint64_t)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v19 = (char *)v54 - v18;
  __chkstk_darwin(v17, v20);
  unint64_t v22 = (char *)v54 - v21;
  uint64_t v70 = a1;
  if (a2 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    if (v23) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v23)
    {
LABEL_3:
      v54[1] = v4;
      a1 = 0;
      unint64_t v4 = a2 & 0xC000000000000001;
      unint64_t v56 = a2 + 32;
      uint64_t v67 = v68 + 56;
      uint64_t v61 = v23;
      unint64_t v62 = a2;
      unint64_t v60 = a2 & 0xC000000000000001;
      while (1)
      {
        if (v4)
        {
          int64_t v24 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v25 = __OFADD__(a1++, 1);
          if (v25) {
            goto LABEL_29;
          }
        }
        else
        {
          int64_t v24 = (char *)*(id *)(v56 + 8 * a1);
          BOOL v25 = __OFADD__(a1++, 1);
          if (v25)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
        }
        if (v24[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted]) {
          goto LABEL_6;
        }
        uint64_t v64 = a1;
        uint64_t v63 = v24;
        uint64_t v26 = (uint64_t)&v24[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier];
        if (!*(void *)(v68 + 16)) {
          goto LABEL_25;
        }
        uint64_t v27 = v68;
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        sub_100F359B0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v65 = type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v28 = Hasher._finalize()();
        uint64_t v29 = -1 << *(unsigned char *)(v27 + 32);
        unint64_t v30 = v28 & ~v29;
        if (((*(void *)(v67 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        {
LABEL_25:
          unint64_t v42 = v63;
          uint64_t v44 = *(void *)&v63[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle];
          uint64_t v43 = *(void *)&v63[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardTitle + 8];
          uint64_t v45 = sub_1005057FC(&qword_101677100);
          uint64_t v46 = v57;
          uint64_t v47 = (void *)(v57 + *(int *)(v45 + 48));
          sub_100F38118(v26, v57, type metadata accessor for CRLBoardIdentifier);
          *uint64_t v47 = v44;
          v47[1] = v43;
          swift_storeEnumTagMultiPayload();
          uint64_t v48 = v58;
          sub_100F38118(v46, v58, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v49 = (objc_class *)type metadata accessor for CRLBoardLibraryViewModelItemNode();
          uint64_t v50 = (char *)objc_allocWithZone(v49);
          *(void *)&v50[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
          sub_100F38118(v48, (uint64_t)&v50[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);
          v69.receiver = v50;
          v69.Class super_class = v49;
          swift_bridgeObjectRetain();
          id v51 = [super init];
          sub_100F38180(v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100F38180(v46, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v52 = (char *)v51;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          int64_t v24 = v52;
          uint64_t v23 = v61;
          a2 = v62;
          a1 = v64;
          unint64_t v4 = v60;
          goto LABEL_6;
        }
        uint64_t v31 = ~v29;
        uint64_t v32 = *(void *)(v55 + 72);
        while (1)
        {
          sub_100F38118(*(void *)(v68 + 48) + v32 * v30, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
          char v33 = static UUID.== infix(_:_:)();
          sub_100F38118((uint64_t)v22, (uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
          uint64_t v34 = (uint64_t)v19;
          uint64_t v35 = v66;
          sub_100F38118(v26, v66, type metadata accessor for CRLBoardIdentifier);
          if ((v33 & 1) == 0)
          {
            sub_100F38180(v35, type metadata accessor for CRLBoardIdentifier);
            sub_100F38180(v34, type metadata accessor for CRLBoardIdentifier);
            sub_100F38180((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
            uint64_t v19 = (char *)v34;
            goto LABEL_17;
          }
          uint64_t v36 = *(int *)(v65 + 20);
          uint64_t v37 = *(void *)(v34 + v36);
          uint64_t v38 = *(void *)(v34 + v36 + 8);
          uint64_t v39 = (void *)(v35 + v36);
          if (v37 == *v39 && v38 == v39[1])
          {
            sub_100F38180(v35, type metadata accessor for CRLBoardIdentifier);
            sub_100F38180(v34, type metadata accessor for CRLBoardIdentifier);
            sub_100F38180((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
            a2 = v62;
            uint64_t v19 = (char *)v34;
            goto LABEL_5;
          }
          char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100F38180(v35, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v34, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
          uint64_t v19 = (char *)v34;
          if (v41) {
            break;
          }
LABEL_17:
          unint64_t v30 = (v30 + 1) & v31;
          if (((*(void *)(v67 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
            goto LABEL_25;
          }
        }
        a2 = v62;
LABEL_5:
        unint64_t v4 = v60;
        uint64_t v23 = v61;
        int64_t v24 = v63;
        a1 = v64;
LABEL_6:

        if (a1 == v23)
        {
          swift_bridgeObjectRelease();
          return v70;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100F2D3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v67 = a1;
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v68 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v72 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v64 = (uint64_t *)((char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v71 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v65 = *(void *)(v18 - 8);
  uint64_t v66 = v18;
  __chkstk_darwin(v18, v19);
  uint64_t v63 = v20;
  uint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v22 - 8, v23);
  BOOL v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v62 - v28;
  __chkstk_darwin(v30, v31);
  char v33 = (char *)&v62 - v32;
  uint64_t v34 = *(void *)(v3 + 16);
  uint64_t v69 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v70 = v34;
  uint64_t v35 = *(char **)(v34 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v36 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v37 = *(void *)&v35[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v37, (uint64_t)v17, type metadata accessor for CRLBoardCRDTData);
  uint64_t v38 = v35;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v17, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v39 = (uint64_t *)(*(void *)&v35[v36] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v40 = *v39;
  unint64_t v41 = v39[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v21, v40, v41, (uint64_t)v33);

  LOBYTE(v40) = static UUID.== infix(_:_:)();
  sub_100F38118((uint64_t)v33, (uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
  sub_100F38118(a2, (uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
  if ((v40 & 1) == 0)
  {
    sub_100F38180((uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
    return sub_100F38180((uint64_t)v33, type metadata accessor for CRLBoardIdentifier);
  }
  uint64_t v42 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v43 = *(void *)&v29[v42];
  uint64_t v44 = *(void *)&v29[v42 + 8];
  uint64_t v45 = &v25[v42];
  if (v43 == *(void *)v45 && v44 == *((void *)v45 + 1))
  {
    sub_100F38180((uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v33, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100F38180((uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v29, type metadata accessor for CRLBoardIdentifier);
    uint64_t result = sub_100F38180((uint64_t)v33, type metadata accessor for CRLBoardIdentifier);
    if ((v47 & 1) == 0) {
      return result;
    }
  }
  uint64_t v48 = *(void *)(v70 + v69) + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  uint64_t v49 = v48;
  uint64_t v50 = v71;
  sub_100522E9C(v49, v71, (uint64_t *)&unk_10169A1A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v50, 1, v73))
  {
    id v51 = (uint64_t *)&unk_10169A1A0;
    uint64_t v52 = v50;
  }
  else
  {
    uint64_t v53 = v64;
    sub_100F38118(v50, (uint64_t)v64, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_100522F00(v50, (uint64_t *)&unk_10169A1A0);
    uint64_t v54 = *v53;
    swift_retain();
    sub_100F38180((uint64_t)v53, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    uint64_t v55 = type metadata accessor for TaskPriority();
    uint64_t v56 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v68, 1, 1, v55);
    uint64_t v58 = v65;
    uint64_t v57 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v21, v67, v66);
    unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    unint64_t v60 = (v63 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = 0;
    *(void *)(v61 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v61 + v59, v21, v57);
    *(void *)(v61 + v60) = v54;
    swift_retain();
    sub_100B107F4(v56, (uint64_t)&unk_1016A25F8, v61);
    swift_release();
    swift_release();
    id v51 = &qword_101672BB0;
    uint64_t v52 = v56;
  }
  return sub_100522F00(v52, v51);
}

uint64_t sub_100F2DA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest() - 8;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v17 - v11;
  uint64_t v18 = a2;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v15 = *(void *)(v10 + 72);
    do
    {
      sub_100F38118(v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
      sub_100CB9D50((uint64_t)v12, (uint64_t)v7);
      sub_100F38180((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
      v14 += v15;
      --v13;
    }
    while (v13);
    return v18;
  }
  return a2;
}

uint64_t sub_100F2DBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  char v33 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v32 = (char *)v26 - v10;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a2;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v16 = v5 + 16;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v19 = *(void *)(v16 + 56);
    unint64_t v20 = v16 + 40;
    uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
    uint64_t v30 = v17;
    uint64_t v27 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v28 = v19;
    uint64_t v31 = v16;
    uint64_t v21 = (void (**)(uint64_t, uint64_t))(v16 - 8);
    v26[1] = v20 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = (uint64_t)v32;
    uint64_t v22 = v33;
    while (1)
    {
      v30(v14, v18, v4);
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v20;
      (*(void (**)(char *, void, uint64_t, uint64_t))v20)(v14, 0, 1, v4);
      if ((*v29)(v14, 1, v4) == 1) {
        break;
      }
      (*v27)(v22, v14, v4);
      sub_100CB4BC8(v23, v22);
      (*v21)(v23, v4);
      v18 += v28;
      if (!--v15) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_7:
    v24(v14, 1, 1, v4);
  }
  return v34;
}

void sub_100F2DE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v8 = a1;
    uint64_t v9 = *a4;
    uint64_t v10 = (uint64_t *)(*a4 + 8 * a3 - 8);
LABEL_4:
    uint64_t v11 = *(void **)(v9 + 8 * v7);
    uint64_t v19 = v10;
    while (1)
    {
      uint64_t v21 = v11;
      unint64_t v20 = (void *)*v10;
      uint64_t v12 = v20;
      id v13 = v11;
      id v14 = v12;
      char v15 = sub_100F1BF7C((uint64_t *)&v21, (uint64_t *)&v20, a5);

      if (v5) {
        break;
      }
      if (v15)
      {
        if (!v9)
        {
          __break(1u);
          return;
        }
        uint64_t v16 = *v10;
        uint64_t v11 = (void *)v10[1];
        *uint64_t v10 = (uint64_t)v11;
        v10[1] = v16;
        --v10;
        if (v7 != ++v8) {
          continue;
        }
      }
      ++v7;
      uint64_t v10 = v19 + 1;
      uint64_t v8 = a1;
      if (v7 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

uint64_t sub_100F2DF20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v212 = (uint64_t)&v190 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v207 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v199 = (uint64_t)&v190 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  uint64_t v205 = (uint64_t)&v190 - v14;
  uint64_t v15 = sub_1005057FC(&qword_101672EB0);
  uint64_t v17 = __chkstk_darwin(v15 - 8, v16);
  int v200 = (char *)&v190 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  NSString v211 = (char *)&v190 - v21;
  __chkstk_darwin(v20, v22);
  uint64_t v215 = (char *)&v190 - v23;
  uint64_t v227 = type metadata accessor for Date();
  uint64_t v24 = *(void *)(v227 - 8);
  uint64_t v26 = __chkstk_darwin(v227, v25);
  uint64_t v198 = (char *)&v190 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v28);
  uint64_t v204 = (char *)&v190 - v29;
  uint64_t v218 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v31 = __chkstk_darwin(v218, v30);
  uint64_t v217 = (uint64_t)&v190 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v33);
  id v219 = (char *)&v190 - v34;
  uint64_t v35 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v37 = __chkstk_darwin(v35 - 8, v36);
  uint64_t v229 = (uint64_t)&v190 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v39);
  uint64_t v230 = (uint64_t)&v190 - v40;
  uint64_t v194 = a1;
  Swift::Int v41 = a1[1];
  swift_bridgeObjectRetain_n();
  Swift::Int v42 = _minimumMergeRunLength(_:)(v41);
  if (v42 >= v41)
  {
    if (v41 < 0) {
      goto LABEL_159;
    }
    if (v41)
    {
      swift_bridgeObjectRetain();
      sub_100F2DE24(0, v41, 1, v194, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  if (v41 >= 0) {
    uint64_t v43 = v41;
  }
  else {
    uint64_t v43 = v41 + 1;
  }
  if (v41 < -1) {
    goto LABEL_168;
  }
  Swift::Int v193 = v42;
  uint64_t v213 = a2;
  Swift::Int v201 = v41;
  if (v41 < 2)
  {
    char v47 = _swiftEmptyArrayStorage;
    uint64_t v233 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v206 = (uint64_t *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v41 != 1)
    {
      unint64_t v119 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_123:
      uint64_t v208 = v3;
      if (v119 >= 2)
      {
        uint64_t v177 = *v194;
        uint64_t v230 = *v194;
        do
        {
          unint64_t v178 = v119 - 2;
          if (v119 < 2) {
            goto LABEL_154;
          }
          if (!v177) {
            goto LABEL_167;
          }
          uint64_t v179 = (uint64_t)v47;
          double v180 = v47[2 * v178 + 4];
          double v181 = v47[2 * v119 + 3];
          id v182 = (uint64_t *)(v177 + 8 * *(void *)&v180);
          uint64_t v183 = (id *)(v177 + 8 * *(void *)&v47[2 * v119 + 2]);
          unint64_t v184 = v177 + 8 * *(void *)&v181;
          uint64_t v185 = v213;
          swift_bridgeObjectRetain();
          uint64_t v186 = v182;
          uint64_t v187 = v208;
          sub_100F2580C(v186, v183, v184, v206, v185);
          uint64_t v208 = v187;
          if (v187) {
            goto LABEL_135;
          }
          if (*(uint64_t *)&v181 < *(uint64_t *)&v180) {
            goto LABEL_155;
          }
          char v47 = (double *)v179;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v47 = sub_100F69F28(v179);
          }
          if (v178 >= *((void *)v47 + 2)) {
            goto LABEL_156;
          }
          int64_t v188 = &v47[2 * v178 + 4];
          *int64_t v188 = v180;
          v188[1] = v181;
          unint64_t v189 = *((void *)v47 + 2);
          if (v119 > v189) {
            goto LABEL_157;
          }
          memmove(&v47[2 * v119 + 2], &v47[2 * v119 + 4], 16 * (v189 - v119));
          *((void *)v47 + 2) = v189 - 1;
          unint64_t v119 = v189 - 1;
          uint64_t v177 = v230;
        }
        while (v189 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)((v233 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v44 = v43 >> 1;
    type metadata accessor for CRLBoardLibraryViewModelItemNode();
    uint64_t v45 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) = v44;
    uint64_t v206 = (uint64_t *)((v45 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v233 = v45;
  }
  Swift::Int v48 = 0;
  uint64_t v49 = *v194;
  id v216 = v219 + 8;
  uint64_t v214 = v217 + 8;
  id v226 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v220 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  id v221 = (void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v202 = (void (**)(char *, uint64_t, uint64_t))(v24 + 32);
  int64_t v196 = (void (**)(char *, uint64_t))(v24 + 8);
  NSString v210 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v207 + 56);
  id v209 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48);
  uint64_t v192 = v49 + 16;
  uint64_t v191 = v49 - 8;
  char v47 = _swiftEmptyArrayStorage;
  uint64_t v223 = v9;
  Swift::Int v50 = v201;
  uint64_t v224 = v49;
  while (1)
  {
    Swift::Int v51 = v48;
    Swift::Int v52 = v48 + 1;
    if (v48 + 1 >= v50)
    {
      uint64_t v57 = (uint64_t)v219;
    }
    else
    {
      uint64_t v53 = *(void **)(v49 + 8 * v52);
      uint64_t v231 = *(void **)(v49 + 8 * v48);
      uint64_t v54 = v231;
      uint64_t v232 = v53;
      id v55 = v53;
      id v56 = v54;
      LODWORD(v228) = sub_100F1BF7C((uint64_t *)&v232, (uint64_t *)&v231, a2);
      uint64_t v57 = (uint64_t)v219;
      if (v3)
      {
        swift_bridgeObjectRelease();

LABEL_138:
        *(void *)((v233 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()();
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }

      Swift::Int v52 = v51 + 2;
      if (v51 + 2 < v201)
      {
        uint64_t v58 = (void **)(v192 + 8 * v51);
        while (1)
        {
          Swift::Int v59 = v52;
          unint64_t v60 = *v58;
          uint64_t v231 = *(v58 - 1);
          uint64_t v61 = v231;
          uint64_t v232 = v60;
          id v62 = v60;
          id v63 = v61;
          LODWORD(v61) = sub_100F1BF7C((uint64_t *)&v232, (uint64_t *)&v231, a2);

          if ((v228 ^ v61)) {
            break;
          }
          Swift::Int v52 = v59 + 1;
          ++v58;
          if (v201 == v59 + 1)
          {
            Swift::Int v52 = v201;
            uint64_t v57 = (uint64_t)v219;
            goto LABEL_23;
          }
        }
        uint64_t v57 = (uint64_t)v219;
        Swift::Int v52 = v59;
      }
LABEL_23:
      uint64_t v49 = v224;
      if (v228)
      {
        if (v52 < v51) {
          goto LABEL_163;
        }
        if (v51 < v52)
        {
          uint64_t v64 = (uint64_t *)(v191 + 8 * v52);
          Swift::Int v65 = v52;
          Swift::Int v66 = v51;
          uint64_t v67 = (uint64_t *)(v224 + 8 * v51);
          do
          {
            if (v66 != --v65)
            {
              if (!v49) {
                goto LABEL_166;
              }
              uint64_t v68 = *v67;
              *uint64_t v67 = *v64;
              *uint64_t v64 = v68;
            }
            ++v66;
            --v64;
            ++v67;
          }
          while (v66 < v65);
        }
      }
    }
    if (v52 >= v201) {
      goto LABEL_70;
    }
    if (__OFSUB__(v52, v51)) {
      goto LABEL_160;
    }
    if (v52 - v51 >= v193) {
      goto LABEL_70;
    }
    Swift::Int v69 = v51 + v193;
    if (__OFADD__(v51, v193)) {
      goto LABEL_161;
    }
    if (v69 >= v201) {
      Swift::Int v69 = v201;
    }
    if (v69 < v51) {
      break;
    }
    if (v52 == v69) {
      goto LABEL_70;
    }
    Swift::Int v197 = v69;
    int64_t v190 = v47;
    uint64_t v208 = v3;
    uint64_t v70 = v191 + 8 * v52;
    Swift::Int v195 = v51;
    while (2)
    {
      uint64_t v71 = *(void **)(v49 + 8 * v52);
      Swift::Int v72 = v51;
      uint64_t v203 = v70;
      uint64_t v73 = v70;
      Swift::Int v222 = v52;
      while (1)
      {
        char v74 = *(void **)v73;
        sub_100F38118((uint64_t)v71 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() != 2)
        {
          sub_100F38180(v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v49 = v224;
          goto LABEL_41;
        }
        sub_1005057FC(&qword_101677100);
        int v228 = v71;
        uint64_t v75 = v74;
        swift_bridgeObjectRelease();
        sub_100F37878(v57, v230, type metadata accessor for CRLBoardIdentifier);
        uint64_t v76 = v217;
        sub_100F38118((uint64_t)&v75[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], v217, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() != 2)
        {
          sub_100F38180(v230, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v76, type metadata accessor for CRLBoardLibraryViewModel.Item);

          uint64_t v57 = (uint64_t)v219;
          uint64_t v49 = v224;
          Swift::Int v52 = v222;
          goto LABEL_41;
        }
        NSString v225 = v75;
        swift_bridgeObjectRelease();
        sub_100F37878(v76, v229, type metadata accessor for CRLBoardIdentifier);
        uint64_t v77 = v223;
        if (*(void *)(a2 + 16))
        {
          unint64_t v78 = sub_1009563EC(v230);
          if (v79) {
            break;
          }
        }
        uint64_t v90 = *v226;
        uint64_t v89 = (uint64_t)v215;
        (*v226)(v215, 1, 1, v227);
LABEL_50:
        sub_100522F00(v89, &qword_101672EB0);
        if (*(void *)(a2 + 16) && (unint64_t v92 = sub_1009563EC(v229), (v93 & 1) != 0))
        {
          uint64_t v94 = v212;
          sub_100F38118(*(void *)(a2 + 56) + *(void *)(v207 + 72) * v92, v212, type metadata accessor for CRLBoardViewModelMetadata);
          uint64_t v95 = 0;
        }
        else
        {
          uint64_t v95 = 1;
          uint64_t v94 = v212;
        }
        (*v210)(v94, v95, 1, v77);
        sub_100F38180(v229, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180(v230, type metadata accessor for CRLBoardIdentifier);
        if ((*v209)(v94, 1, v77) == 1)
        {
          sub_100522F00(v94, (uint64_t *)&unk_1016741D0);
          uint64_t v115 = (uint64_t)v211;
          v90(v211, 1, 1, v227);
          sub_100522F00(v115, &qword_101672EB0);

LABEL_66:
          uint64_t v57 = (uint64_t)v219;
          uint64_t v49 = v224;
          Swift::Int v52 = v222;
          goto LABEL_41;
        }
        uint64_t v96 = v94 + *(int *)(v77 + 24);
        uint64_t v97 = (uint64_t)v211;
        uint64_t v98 = v227;
        (*v221)(v211, v96, v227);
        sub_100F38180(v94, type metadata accessor for CRLBoardViewModelMetadata);
        v90((char *)v97, 0, 1, v98);
        LODWORD(v98) = (*v220)(v97, 1, v98);
        sub_100522F00(v97, &qword_101672EB0);

        if (v98 == 1) {
          goto LABEL_66;
        }
LABEL_56:
        uint64_t v57 = (uint64_t)v219;
        uint64_t v49 = v224;
        Swift::Int v52 = v222;
        if (!v224) {
          goto LABEL_164;
        }
        uint64_t v99 = *(void **)v73;
        uint64_t v71 = *(void **)(v73 + 8);
        *(void *)uint64_t v73 = v71;
        *(void *)(v73 + 8) = v99;
        v73 -= 8;
        if (v52 == ++v72) {
          goto LABEL_41;
        }
      }
      uint64_t v80 = v77;
      uint64_t v81 = *(void *)(v207 + 72);
      uint64_t v82 = v205;
      sub_100F38118(*(void *)(a2 + 56) + v81 * v78, v205, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v83 = v82 + *(int *)(v80 + 24);
      unint64_t v84 = *v221;
      uint64_t v85 = v215;
      uint64_t v86 = a2;
      uint64_t v87 = v227;
      (*v221)(v215, v83, v227);
      uint64_t v88 = v82;
      uint64_t v89 = (uint64_t)v85;
      sub_100F38180(v88, type metadata accessor for CRLBoardViewModelMetadata);
      uint64_t v90 = *v226;
      (*v226)(v85, 0, 1, v87);
      uint64_t v91 = *v220;
      if ((*v220)(v89, 1, v87) == 1)
      {
        uint64_t v77 = v223;
        a2 = v86;
        goto LABEL_50;
      }
      uint64_t v100 = v89;
      uint64_t v101 = v86;
      uint64_t v102 = *v202;
      (*v202)(v204, v100, v87);
      if (*(void *)(v101 + 16))
      {
        unint64_t v103 = sub_1009563EC(v229);
        if (v104)
        {
          uint64_t v105 = *(void *)(v101 + 56) + v103 * v81;
          uint64_t v106 = v199;
          sub_100F38118(v105, v199, type metadata accessor for CRLBoardViewModelMetadata);
          NSString v107 = v200;
          uint64_t v108 = v227;
          v84(v200, v106 + *(int *)(v223 + 24), v227);
          sub_100F38180(v106, type metadata accessor for CRLBoardViewModelMetadata);
          v90(v107, 0, 1, v108);
          uint64_t v109 = (uint64_t)v107;
          uint64_t v110 = v108;
          if (v91(v109, 1, v108) == 1) {
            goto LABEL_68;
          }
          uint64_t v111 = v198;
          v102(v198, v109, v108);
          unint64_t v112 = v204;
          char v113 = static Date.> infix(_:_:)();
          unint64_t v114 = *v196;
          (*v196)(v111, v110);
          v114(v112, v110);
          sub_100F38180(v229, type metadata accessor for CRLBoardIdentifier);
          sub_100F38180(v230, type metadata accessor for CRLBoardIdentifier);

          a2 = v213;
          if ((v113 & 1) == 0) {
            goto LABEL_66;
          }
          goto LABEL_56;
        }
      }
      uint64_t v109 = (uint64_t)v200;
      uint64_t v110 = v227;
      v90(v200, 1, 1, v227);
LABEL_68:
      (*v196)(v204, v110);
      sub_100F38180(v229, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180(v230, type metadata accessor for CRLBoardIdentifier);
      sub_100522F00(v109, &qword_101672EB0);

      a2 = v213;
      uint64_t v57 = (uint64_t)v219;
      uint64_t v49 = v224;
      Swift::Int v52 = v222;
LABEL_41:
      ++v52;
      uint64_t v70 = v203 + 8;
      Swift::Int v51 = v195;
      if (v52 != v197) {
        continue;
      }
      break;
    }
    Swift::Int v52 = v197;
    uint64_t v3 = v208;
    char v47 = v190;
LABEL_70:
    if (v52 < v51) {
      goto LABEL_158;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v208 = v3;
    Swift::Int v222 = v52;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      char v47 = sub_100F697E0(0, *((void *)v47 + 2) + 1, 1, (uint64_t)v47);
    }
    unint64_t v118 = *((void *)v47 + 2);
    unint64_t v117 = *((void *)v47 + 3);
    unint64_t v119 = v118 + 1;
    uint64_t v49 = v224;
    if (v118 >= v117 >> 1)
    {
      id v176 = sub_100F697E0((double *)(v117 > 1), v118 + 1, 1, (uint64_t)v47);
      uint64_t v49 = v224;
      char v47 = v176;
    }
    *((void *)v47 + 2) = v119;
    uint64_t v120 = (char *)(v47 + 4);
    uint64_t v121 = &v47[2 * v118 + 4];
    Swift::Int v122 = v222;
    *(void *)uint64_t v121 = v51;
    *((void *)v121 + 1) = v122;
    if (v118)
    {
      NSString v225 = (char *)(v47 + 4);
      while (1)
      {
        unint64_t v123 = v119 - 1;
        if (v119 >= 4)
        {
          uint64_t v128 = &v120[16 * v119];
          uint64_t v129 = *((void *)v128 - 8);
          uint64_t v130 = *((void *)v128 - 7);
          BOOL v134 = __OFSUB__(v130, v129);
          uint64_t v131 = v130 - v129;
          if (v134) {
            goto LABEL_143;
          }
          uint64_t v133 = *((void *)v128 - 6);
          uint64_t v132 = *((void *)v128 - 5);
          BOOL v134 = __OFSUB__(v132, v133);
          uint64_t v126 = v132 - v133;
          char v127 = v134;
          if (v134) {
            goto LABEL_144;
          }
          unint64_t v135 = v119 - 2;
          uint64_t v136 = &v120[16 * v119 - 32];
          uint64_t v138 = *(void *)v136;
          uint64_t v137 = *((void *)v136 + 1);
          BOOL v134 = __OFSUB__(v137, v138);
          uint64_t v139 = v137 - v138;
          if (v134) {
            goto LABEL_146;
          }
          BOOL v134 = __OFADD__(v126, v139);
          uint64_t v140 = v126 + v139;
          if (v134) {
            goto LABEL_149;
          }
          if (v140 >= v131)
          {
            uint64_t v158 = &v120[16 * v123];
            uint64_t v160 = *(void *)v158;
            uint64_t v159 = *((void *)v158 + 1);
            BOOL v134 = __OFSUB__(v159, v160);
            uint64_t v161 = v159 - v160;
            if (v134) {
              goto LABEL_153;
            }
            BOOL v151 = v126 < v161;
            goto LABEL_108;
          }
        }
        else
        {
          if (v119 != 3)
          {
            uint64_t v152 = *((void *)v47 + 4);
            uint64_t v153 = *((void *)v47 + 5);
            BOOL v134 = __OFSUB__(v153, v152);
            uint64_t v145 = v153 - v152;
            char v146 = v134;
            goto LABEL_102;
          }
          uint64_t v125 = *((void *)v47 + 4);
          uint64_t v124 = *((void *)v47 + 5);
          BOOL v134 = __OFSUB__(v124, v125);
          uint64_t v126 = v124 - v125;
          char v127 = v134;
        }
        if (v127) {
          goto LABEL_145;
        }
        unint64_t v135 = v119 - 2;
        NSString v141 = &v120[16 * v119 - 32];
        uint64_t v143 = *(void *)v141;
        uint64_t v142 = *((void *)v141 + 1);
        BOOL v144 = __OFSUB__(v142, v143);
        uint64_t v145 = v142 - v143;
        char v146 = v144;
        if (v144) {
          goto LABEL_148;
        }
        NSString v147 = &v120[16 * v123];
        uint64_t v149 = *(void *)v147;
        uint64_t v148 = *((void *)v147 + 1);
        BOOL v134 = __OFSUB__(v148, v149);
        uint64_t v150 = v148 - v149;
        if (v134) {
          goto LABEL_151;
        }
        if (__OFADD__(v145, v150)) {
          goto LABEL_152;
        }
        if (v145 + v150 >= v126)
        {
          BOOL v151 = v126 < v150;
LABEL_108:
          if (v151) {
            unint64_t v123 = v135;
          }
          goto LABEL_110;
        }
LABEL_102:
        if (v146) {
          goto LABEL_147;
        }
        id v154 = &v120[16 * v123];
        uint64_t v156 = *(void *)v154;
        uint64_t v155 = *((void *)v154 + 1);
        BOOL v134 = __OFSUB__(v155, v156);
        uint64_t v157 = v155 - v156;
        if (v134) {
          goto LABEL_150;
        }
        if (v157 < v145) {
          goto LABEL_119;
        }
LABEL_110:
        unint64_t v162 = v123 - 1;
        if (v123 - 1 >= v119)
        {
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
          goto LABEL_162;
        }
        if (!v49) {
          goto LABEL_165;
        }
        char v163 = v47;
        uint64_t v164 = &v120[16 * v162];
        uint64_t v165 = *(void *)v164;
        unint64_t v166 = v123;
        id v167 = &v120[16 * v123];
        uint64_t v168 = *((void *)v167 + 1);
        NSString v169 = (uint64_t *)(v49 + 8 * *(void *)v164);
        int v228 = (id *)(v49 + 8 * *(void *)v167);
        unint64_t v170 = v49 + 8 * v168;
        uint64_t v171 = v213;
        swift_bridgeObjectRetain();
        uint64_t v172 = v169;
        uint64_t v173 = v208;
        sub_100F2580C(v172, v228, v170, v206, v171);
        uint64_t v208 = v173;
        if (v173)
        {
LABEL_135:
          swift_bridgeObjectRelease();
          goto LABEL_138;
        }
        if (v168 < v165) {
          goto LABEL_140;
        }
        if (v166 > *((void *)v163 + 2)) {
          goto LABEL_141;
        }
        unint64_t v174 = v166;
        *(void *)uint64_t v164 = v165;
        uint64_t v120 = v225;
        *(void *)&v225[16 * v162 + 8] = v168;
        unint64_t v175 = *((void *)v163 + 2);
        if (v166 >= v175) {
          goto LABEL_142;
        }
        char v47 = v163;
        unint64_t v119 = v175 - 1;
        memmove(v167, v167 + 16, 16 * (v175 - 1 - v174));
        *((void *)v163 + 2) = v175 - 1;
        a2 = v213;
        uint64_t v49 = v224;
        if (v175 <= 2) {
          goto LABEL_119;
        }
      }
    }
    unint64_t v119 = 1;
LABEL_119:
    Swift::Int v50 = v201;
    Swift::Int v48 = v222;
    uint64_t v3 = v208;
    if (v222 >= v201) {
      goto LABEL_123;
    }
  }
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_165:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_166:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_167:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_168:
  swift_bridgeObjectRelease_n();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F2F334(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_100F6D440(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_bridgeObjectRetain();
  sub_100F2DF20(v8, a2);
  swift_bridgeObjectRelease();
  specialized ContiguousArray._endMutation()();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100F2F3E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v52 = a2;
  uint64_t v53 = a1;
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v8, v11);
  uint64_t v14 = (char *)&v51 - v13;
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t result = __chkstk_darwin(v16, v19);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v57 = a3;
  uint64_t v58 = 0;
  int64_t v23 = 0;
  uint64_t v26 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v24 = v26;
  uint64_t v27 = 1 << *(unsigned char *)(v25 - 24);
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  unint64_t v29 = v28 & v24;
  uint64_t v54 = v25;
  int64_t v55 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v64 = a4;
  uint64_t v63 = a4 + 56;
  if (!v29) {
    goto LABEL_9;
  }
  while (2)
  {
    while (1)
    {
      uint64_t v60 = (v29 - 1) & v29;
      int64_t v61 = v23;
      unint64_t v31 = __clz(__rbit64(v29)) | (v23 << 6);
LABEL_23:
      uint64_t v36 = *(void *)(v57 + 48);
      uint64_t v37 = *(void *)(v56 + 72);
      unint64_t v59 = v31;
      sub_100F38118(v36 + v37 * v31, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
      if (*(void *)(v64 + 16))
      {
        uint64_t v38 = v64;
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        sub_100F359B0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v62 = type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v39 = Hasher._finalize()();
        uint64_t v40 = -1 << *(unsigned char *)(v38 + 32);
        unint64_t v41 = v39 & ~v40;
        if ((*(void *)(v63 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41)) {
          break;
        }
      }
LABEL_6:
      uint64_t result = sub_100F38180((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
      *(unint64_t *)((char *)v53 + ((v59 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v59;
      BOOL v30 = __OFADD__(v58++, 1);
      unint64_t v29 = v60;
      int64_t v23 = v61;
      if (v30)
      {
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      if (!v60) {
        goto LABEL_9;
      }
    }
    uint64_t v42 = ~v40;
    while (1)
    {
      sub_100F38118(*(void *)(v64 + 48) + v41 * v37, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      char v43 = static UUID.== infix(_:_:)();
      sub_100F38118((uint64_t)v18, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
      sub_100F38118((uint64_t)v22, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      if ((v43 & 1) == 0)
      {
        sub_100F38180((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
        sub_100F38180((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        goto LABEL_27;
      }
      uint64_t v44 = *(int *)(v62 + 20);
      uint64_t v45 = *(void *)&v14[v44];
      uint64_t v46 = *(void *)&v14[v44 + 8];
      char v47 = &v10[v44];
      if (v45 == *(void *)v47 && v46 == *((void *)v47 + 1)) {
        break;
      }
      char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100F38180((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      if (v49) {
        goto LABEL_36;
      }
LABEL_27:
      unint64_t v41 = (v41 + 1) & v42;
      if (((*(void *)(v63 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
        goto LABEL_6;
      }
    }
    sub_100F38180((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
LABEL_36:
    uint64_t result = sub_100F38180((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
    unint64_t v29 = v60;
    int64_t v23 = v61;
    if (v60) {
      continue;
    }
    break;
  }
LABEL_9:
  int64_t v32 = v23 + 1;
  if (__OFADD__(v23, 1)) {
    goto LABEL_40;
  }
  if (v32 >= v55) {
    goto LABEL_38;
  }
  unint64_t v33 = *(void *)(v54 + 8 * v32);
  int64_t v34 = v23 + 1;
  if (v33) {
    goto LABEL_22;
  }
  int64_t v34 = v23 + 2;
  if (v23 + 2 >= v55) {
    goto LABEL_38;
  }
  unint64_t v33 = *(void *)(v54 + 8 * v34);
  if (v33) {
    goto LABEL_22;
  }
  int64_t v34 = v23 + 3;
  if (v23 + 3 >= v55) {
    goto LABEL_38;
  }
  unint64_t v33 = *(void *)(v54 + 8 * v34);
  if (v33) {
    goto LABEL_22;
  }
  uint64_t v35 = v23 + 4;
  if (v23 + 4 >= v55)
  {
LABEL_38:
    uint64_t v50 = v57;
    swift_retain();
    return sub_10052BE70(v53, v52, v58, v50);
  }
  unint64_t v33 = *(void *)(v54 + 8 * v35);
  if (v33)
  {
    int64_t v34 = v23 + 4;
LABEL_22:
    uint64_t v60 = (v33 - 1) & v33;
    int64_t v61 = v34;
    unint64_t v31 = __clz(__rbit64(v33)) + (v34 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v34 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v34 >= v55) {
      goto LABEL_38;
    }
    unint64_t v33 = *(void *)(v54 + 8 * v34);
    ++v35;
    if (v33) {
      goto LABEL_22;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100F2F954(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v10);
    bzero((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100F2F3E0((unint64_t *)((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100F2F3E0((unint64_t *)v12, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_100F2FB20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v37 = a7;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v30 = a2;
  unint64_t v31 = a1;
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = __chkstk_darwin(v10 - 8, v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v16 = 0;
  uint64_t v17 = *(void *)(a3 + 56);
  uint64_t v32 = 0;
  uint64_t v33 = a3 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v34 = (unint64_t)(v18 + 63) >> 6;
  while (v20)
  {
    unint64_t v21 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    unint64_t v22 = v21 | (v16 << 6);
LABEL_17:
    sub_100F38118(*(void *)(a3 + 48) + *(void *)(v11 + 72) * v22, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    BOOL v26 = sub_100F1A04C((uint64_t)v15, a4, v35, v36, v37);
    uint64_t result = sub_100F38180((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    if (v7) {
      return result;
    }
    if (v26)
    {
      *(unint64_t *)((char *)v31 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      BOOL v23 = __OFADD__(v32++, 1);
      if (v23) {
        goto LABEL_30;
      }
    }
  }
  BOOL v23 = __OFADD__(v16++, 1);
  if (v23)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v16 >= v34) {
    goto LABEL_27;
  }
  unint64_t v24 = *(void *)(v33 + 8 * v16);
  if (v24)
  {
LABEL_16:
    unint64_t v20 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v16 << 6);
    goto LABEL_17;
  }
  int64_t v25 = v16 + 1;
  if (v16 + 1 >= v34) {
    goto LABEL_27;
  }
  unint64_t v24 = *(void *)(v33 + 8 * v25);
  if (v24) {
    goto LABEL_15;
  }
  int64_t v25 = v16 + 2;
  if (v16 + 2 >= v34) {
    goto LABEL_27;
  }
  unint64_t v24 = *(void *)(v33 + 8 * v25);
  if (v24) {
    goto LABEL_15;
  }
  int64_t v25 = v16 + 3;
  if (v16 + 3 >= v34)
  {
LABEL_27:
    uint64_t v27 = v30;
    uint64_t v28 = v32;
    swift_retain();
    return sub_10052BE70(v31, v27, v28, a3);
  }
  unint64_t v24 = *(void *)(v33 + 8 * v25);
  if (v24)
  {
LABEL_15:
    int64_t v16 = v25;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v16 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v16 >= v34) {
      goto LABEL_27;
    }
    unint64_t v24 = *(void *)(v33 + 8 * v16);
    ++v25;
    if (v24) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100F2FDD0(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  char v10 = *(unsigned char *)(a1 + 32);
  unsigned int v11 = v10 & 0x3F;
  unint64_t v12 = (unint64_t)((1 << v10) + 63) >> 6;
  id v13 = a2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t isStackAllocationSafe = (uint64_t)v13;
  id v22 = (id)isStackAllocationSafe;
  if (v11 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v15);
    int64_t v16 = (char *)&v22 - ((8 * v12 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v16, 8 * v12);
    id v17 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_100F2FB20((unint64_t *)v16, v12, a1, (uint64_t)v17, a3, a4, a5);
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = (void *)swift_slowAlloc();
    bzero(v19, 8 * v12);
    id v20 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_100F2FB20((unint64_t *)v19, v12, a1, (uint64_t)v20, a3, a4, a5);
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  return v18;
}

uint64_t sub_100F3005C(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a2;
  uint64_t v3 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v58 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  char v10 = (char *)&v53 - v9;
  uint64_t v12 = __chkstk_darwin(v8, v11);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v20 = __chkstk_darwin(v16, v19);
  uint64_t v56 = (uint64_t)&v53 - v21;
  uint64_t result = __chkstk_darwin(v20, v22);
  int64_t v25 = (char *)&v53 - v24;
  int64_t v26 = 0;
  uint64_t v57 = a1;
  uint64_t v27 = *(void *)(a1 + 64);
  uint64_t v54 = a1 + 64;
  uint64_t v28 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v59 = _swiftEmptyArrayStorage;
  uint64_t v64 = _swiftEmptyArrayStorage;
  unint64_t v30 = v29 & v27;
  int64_t v55 = (unint64_t)(v28 + 63) >> 6;
  while (1)
  {
    uint64_t v31 = v60;
    if (!v30) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v61 = (v30 - 1) & v30;
    int64_t v62 = v26;
    unint64_t v32 = __clz(__rbit64(v30)) | (v26 << 6);
LABEL_21:
    uint64_t v37 = v56;
    uint64_t v38 = *(void *)(v63 + 72);
    sub_100F38118(*(void *)(v57 + 48) + v38 * v32, v56, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878(v37, (uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
    uint64_t v39 = *(void *)(v31 + 16);
    if (v39) {
      break;
    }
LABEL_36:
    sub_100F37878((uint64_t)v25, v58, type metadata accessor for CRLBoardIdentifier);
    Swift::Int v48 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1006BB8A4(0, *((void *)v48 + 2) + 1, 1);
    }
    char v49 = v64;
    unint64_t v51 = *((void *)v64 + 2);
    unint64_t v50 = *((void *)v64 + 3);
    if (v51 >= v50 >> 1)
    {
      sub_1006BB8A4(v50 > 1, v51 + 1, 1);
      char v49 = v64;
    }
    *((void *)v49 + 2) = v51 + 1;
    uint64_t v52 = *(unsigned __int8 *)(v63 + 80);
    unint64_t v59 = v49;
    uint64_t result = sub_100F37878(v58, (uint64_t)v49 + ((v52 + 32) & ~v52) + v51 * v38, type metadata accessor for CRLBoardIdentifier);
    unint64_t v30 = v61;
    int64_t v26 = v62;
  }
  uint64_t v40 = v31 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_100F38118(v40, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    char v41 = static UUID.== infix(_:_:)();
    sub_100F38118((uint64_t)v18, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    sub_100F38118((uint64_t)v25, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    if ((v41 & 1) == 0)
    {
      sub_100F38180((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_24;
    }
    uint64_t v42 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v43 = *(void *)&v14[v42];
    uint64_t v44 = *(void *)&v14[v42 + 8];
    uint64_t v45 = &v10[v42];
    if (v43 == *(void *)v45 && v44 == *((void *)v45 + 1)) {
      break;
    }
    char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100F38180((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    if (v47) {
      goto LABEL_33;
    }
LABEL_24:
    v40 += v38;
    if (!--v39)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  sub_100F38180((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  sub_100F38180((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
  sub_100F38180((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
LABEL_33:
  uint64_t v31 = v60;
  swift_bridgeObjectRelease();
  uint64_t result = sub_100F38180((uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
  unint64_t v30 = v61;
  int64_t v26 = v62;
  if (v61) {
    goto LABEL_5;
  }
LABEL_6:
  int64_t v33 = v26 + 1;
  if (__OFADD__(v26, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v33 >= v55) {
    goto LABEL_41;
  }
  unint64_t v34 = *(void *)(v54 + 8 * v33);
  int64_t v35 = v26 + 1;
  if (v34) {
    goto LABEL_20;
  }
  int64_t v35 = v26 + 2;
  if (v26 + 2 >= v55) {
    goto LABEL_41;
  }
  unint64_t v34 = *(void *)(v54 + 8 * v35);
  if (v34) {
    goto LABEL_20;
  }
  int64_t v35 = v26 + 3;
  if (v26 + 3 >= v55) {
    goto LABEL_41;
  }
  unint64_t v34 = *(void *)(v54 + 8 * v35);
  if (v34) {
    goto LABEL_20;
  }
  int64_t v35 = v26 + 4;
  if (v26 + 4 >= v55) {
    goto LABEL_41;
  }
  unint64_t v34 = *(void *)(v54 + 8 * v35);
  if (v34) {
    goto LABEL_20;
  }
  uint64_t v36 = v26 + 5;
  if (v26 + 5 >= v55)
  {
LABEL_41:
    swift_release();
    return (uint64_t)v59;
  }
  else
  {
    unint64_t v34 = *(void *)(v54 + 8 * v36);
    int64_t v35 = v26 + 5;
    if (v34)
    {
LABEL_20:
      uint64_t v61 = (v34 - 1) & v34;
      int64_t v62 = v35;
      unint64_t v32 = __clz(__rbit64(v34)) + (v35 << 6);
      goto LABEL_21;
    }
    while (1)
    {
      int64_t v35 = v36 + 1;
      if (__OFADD__(v36, 1)) {
        break;
      }
      if (v35 >= v55) {
        goto LABEL_41;
      }
      unint64_t v34 = *(void *)(v54 + 8 * v35);
      ++v36;
      if (v34) {
        goto LABEL_20;
      }
    }
LABEL_43:
    __break(1u);
  }
  return result;
}

uint64_t sub_100F305DC(uint64_t a1)
{
  v2[105] = v1;
  v2[104] = a1;
  uint64_t v3 = type metadata accessor for CRLBoardEntity();
  v2[106] = v3;
  v2[107] = *(void *)(v3 - 8);
  v2[108] = swift_task_alloc();
  sub_1005057FC(&qword_101691F20);
  v2[109] = swift_task_alloc();
  v2[110] = swift_task_alloc();
  v2[111] = swift_task_alloc();
  v2[112] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_1016741D0);
  v2[113] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v2[114] = v4;
  v2[115] = *(void *)(v4 - 8);
  v2[116] = swift_task_alloc();
  v2[117] = swift_task_alloc();
  v2[118] = swift_task_alloc();
  v2[119] = swift_task_alloc();
  v2[120] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[121] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v2[122] = swift_task_alloc();
  v2[123] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  v2[124] = v5;
  v2[125] = *(void *)(v5 - 8);
  v2[126] = swift_task_alloc();
  v2[127] = swift_task_alloc();
  v2[128] = swift_task_alloc();
  v2[129] = swift_task_alloc();
  v2[130] = swift_task_alloc();
  v2[131] = swift_task_alloc();
  v2[132] = swift_task_alloc();
  v2[133] = swift_task_alloc();
  v2[134] = swift_task_alloc();
  v2[135] = swift_task_alloc();
  v2[136] = swift_task_alloc();
  v2[137] = swift_task_alloc();
  v2[138] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[139] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[140] = v7;
  v2[141] = v6;
  return _swift_task_switch(sub_100F30944, v7, v6);
}

uint64_t sub_100F30944()
{
  unint64_t v1 = v0[104];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t v37 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain_n();
  if (!v2) {
    goto LABEL_20;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v6 = 0;
  uint64_t v7 = v0[125];
  unint64_t v8 = v1 & 0xC000000000000001;
  uint64_t v34 = v0[104] + 32;
  uint64_t v9 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v35 = v7;
  char v10 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v37 = _swiftEmptyArrayStorage;
  do
  {
    if (v8) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v34 + 8 * v6);
    }
    uint64_t v12 = v11;
    sub_100F38118((uint64_t)v11 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v0[121], type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v13 = v0[137];
      uint64_t v36 = v0[122];
      uint64_t v14 = v10;
      uint64_t v15 = v9;
      unint64_t v16 = v8;
      uint64_t v17 = v2;
      uint64_t v18 = v0[121];
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      uint64_t v19 = v18;
      uint64_t v2 = v17;
      unint64_t v8 = v16;
      uint64_t v9 = v15;
      char v10 = v14;
      sub_100F37878(v19, v13, type metadata accessor for CRLBoardIdentifier);
      sub_100F37878(v13, v36, type metadata accessor for CRLBoardIdentifier);
      uint64_t v20 = 0;
    }
    else
    {
      sub_100F38180(v0[121], type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v20 = 1;
    }
    uint64_t v21 = v0[124];
    uint64_t v22 = v0[123];
    uint64_t v23 = v0[122];
    (*v9)(v23, v20, 1, v21);
    sub_10051B3EC(v23, v22, &qword_101672C30);

    if ((*v10)(v22, 1, v21) == 1)
    {
      sub_100522F00(v0[123], &qword_101672C30);
    }
    else
    {
      uint64_t v24 = v0[138];
      uint64_t v25 = v0[136];
      sub_100F37878(v0[123], v24, type metadata accessor for CRLBoardIdentifier);
      sub_100F37878(v24, v25, type metadata accessor for CRLBoardIdentifier);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v37 = (double *)sub_100F632EC(0, *((void *)v37 + 2) + 1, 1, (unint64_t)v37);
      }
      unint64_t v27 = *((void *)v37 + 2);
      unint64_t v26 = *((void *)v37 + 3);
      if (v27 >= v26 >> 1) {
        uint64_t v37 = (double *)sub_100F632EC(v26 > 1, v27 + 1, 1, (unint64_t)v37);
      }
      uint64_t v28 = v0[136];
      *((void *)v37 + 2) = v27 + 1;
      sub_100F37878(v28, (uint64_t)v37+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v27, type metadata accessor for CRLBoardIdentifier);
    }
    ++v6;
  }
  while (v2 != v6);
LABEL_21:
  v0[142] = v37;
  uint64_t v29 = v0[105];
  swift_bridgeObjectRelease_n();
  unint64_t v30 = swift_bridgeObjectRetain();
  v0[143] = sub_1008E97DC(v30);
  uint64_t v3 = swift_bridgeObjectRelease();
  uint64_t v31 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore;
  v0[144] = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore;
  uint64_t v32 = *(void *)(v29 + v31);
  v0[145] = v32;
  if (!v32)
  {
LABEL_26:
    __break(1u);
    return _swift_task_switch(v3, v4, v5);
  }
  swift_retain();
  uint64_t v3 = (uint64_t)sub_100F30D3C;
  uint64_t v4 = v32;
  uint64_t v5 = 0;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100F30D3C()
{
  uint64_t v1 = v0[145];
  swift_beginAccess();
  v0[146] = *(void *)(v1 + 120);
  uint64_t v2 = v0[141];
  uint64_t v3 = v0[140];
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100F30DD4, v3, v2);
}

uint64_t sub_100F30DD4()
{
  uint64_t v1 = *(void *)(v0 + 1136);
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 1168);
    uint64_t v4 = *(void *)(v0 + 1000);
    uint64_t v5 = *(void *)(v4 + 72);
    unint64_t v85 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v6 = *(void *)(v0 + 1136) + v85;
    do
    {
      sub_100F38118(v6, *(void *)(v0 + 1080), type metadata accessor for CRLBoardIdentifier);
      if (*(void *)(v3 + 16)
        && (uint64_t v7 = *(void *)(v0 + 1080),
            swift_bridgeObjectRetain(),
            sub_1009563EC(v7),
            LOBYTE(v7) = v8,
            swift_bridgeObjectRelease(),
            (v7 & 1) != 0))
      {
        sub_100F38180(*(void *)(v0 + 1080), type metadata accessor for CRLBoardIdentifier);
      }
      else
      {
        sub_100F37878(*(void *)(v0 + 1080), *(void *)(v0 + 1072), type metadata accessor for CRLBoardIdentifier);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB8A4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
        }
        double v10 = _swiftEmptyArrayStorage[2];
        double v9 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v10 >= *(void *)&v9 >> 1) {
          sub_1006BB8A4(*(void *)&v9 > 1uLL, *(void *)&v10 + 1, 1);
        }
        uint64_t v11 = *(void *)(v0 + 1072);
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v10 + 1;
        sub_100F37878(v11, (uint64_t)_swiftEmptyArrayStorage + v85 + *(void *)&v10 * v5, type metadata accessor for CRLBoardIdentifier);
      }
      v6 += v5;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1176) = _swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12)
  {
    uint64_t v13 = *(void *)(v0 + 1168);
    uint64_t v14 = *(void *)(v0 + 1000);
    uint64_t v15 = *(void *)(v14 + 72);
    unint64_t v86 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v16 = *(void *)(v0 + 1136) + v86;
    do
    {
      sub_100F38118(v16, *(void *)(v0 + 1064), type metadata accessor for CRLBoardIdentifier);
      if (*(void *)(v13 + 16)
        && (uint64_t v17 = *(void *)(v0 + 1064),
            swift_bridgeObjectRetain(),
            sub_1009563EC(v17),
            LOBYTE(v17) = v18,
            swift_bridgeObjectRelease(),
            (v17 & 1) != 0))
      {
        sub_100F37878(*(void *)(v0 + 1064), *(void *)(v0 + 1056), type metadata accessor for CRLBoardIdentifier);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB8A4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
        }
        double v20 = _swiftEmptyArrayStorage[2];
        double v19 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v20 >= *(void *)&v19 >> 1) {
          sub_1006BB8A4(*(void *)&v19 > 1uLL, *(void *)&v20 + 1, 1);
        }
        uint64_t v21 = *(void *)(v0 + 1056);
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v20 + 1;
        sub_100F37878(v21, (uint64_t)_swiftEmptyArrayStorage + v86 + *(void *)&v20 * v15, type metadata accessor for CRLBoardIdentifier);
      }
      else
      {
        sub_100F38180(*(void *)(v0 + 1064), type metadata accessor for CRLBoardIdentifier);
      }
      v16 += v15;
      --v12;
    }
    while (v12);
  }
  uint64_t v22 = *(void *)(v0 + 1168);
  uint64_t v23 = *(void *)(v0 + 1136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1184) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 1192) = sub_100F3005C(v22, v23);
  swift_bridgeObjectRelease();
  double v24 = _swiftEmptyArrayStorage[2];
  *(double *)(v0 + 1200) = v24;
  if (v24 != 0.0)
  {
    uint64_t v25 = 0;
    uint64_t v26 = *(void *)(v0 + 1000);
    *(void *)(v0 + 1208) = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata;
    int v27 = *(_DWORD *)(v26 + 80);
    *(_DWORD *)(v0 + 1408) = v27;
    uint64_t v28 = *(void *)(v26 + 72);
    *(void *)(v0 + 1216) = v28;
    while (1)
    {
      *(void *)(v0 + 1232) = v25;
      *(void *)(v0 + 1224) = 0;
      uint64_t v29 = *(void *)(v0 + 1144);
      sub_100F38118(*(void *)(v0 + 1176) + ((v27 + 32) & ~(unint64_t)v27) + v28 * v25, *(void *)(v0 + 1048), type metadata accessor for CRLBoardIdentifier);
      if (*(void *)(v29 + 16))
      {
        unint64_t v30 = sub_1009563EC(*(void *)(v0 + 1048));
        if (v31)
        {
          uint64_t v32 = (uint64_t *)(*(void *)(v0 + 840) + *(void *)(v0 + 1208));
          int64_t v33 = (void *)(*(void *)(*(void *)(v0 + 1144) + 56) + 16 * v30);
          *(void *)(v0 + 1240) = *v33;
          *(void *)(v0 + 1248) = v33[1];
          swift_beginAccess();
          uint64_t v34 = *v32;
          uint64_t v35 = *(void *)(v34 + 16);
          swift_bridgeObjectRetain();
          if (v35)
          {
            unint64_t v36 = sub_1009563EC(*(void *)(v0 + 1048));
            if (v37)
            {
              uint64_t v73 = *(void *)(v0 + 1152);
              uint64_t v74 = *(void *)(v0 + 952);
              uint64_t v75 = *(void *)(v0 + 944);
              uint64_t v76 = *(void *)(v0 + 840);
              sub_100F38118(*(void *)(v34 + 56) + *(void *)(*(void *)(v0 + 920) + 72) * v36, v75, type metadata accessor for CRLBoardViewModelMetadata);
              sub_100F37878(v75, v74, type metadata accessor for CRLBoardViewModelMetadata);
              uint64_t inited = swift_endAccess();
              uint64_t v66 = *(void *)(v76 + v73);
              *(void *)(v0 + 1256) = v66;
              if (v66)
              {
                uint64_t v67 = sub_100F316BC;
                goto LABEL_44;
              }
              goto LABEL_58;
            }
          }
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v38 = *(void *)(v0 + 1200);
      uint64_t v39 = *(void *)(v0 + 1232) + 1;
      sub_100F38180(*(void *)(v0 + 1048), type metadata accessor for CRLBoardIdentifier);
      if (v39 == v38) {
        break;
      }
      uint64_t v25 = *(void *)(v0 + 1232) + 1;
      uint64_t v28 = *(void *)(v0 + 1216);
      LOBYTE(v27) = *(unsigned char *)(v0 + 1408);
    }
  }
  swift_release();
  uint64_t v40 = *(void *)(v0 + 1184);
  uint64_t v41 = *(void *)(v40 + 16);
  *(void *)(v0 + 1272) = v41;
  if (!v41)
  {
LABEL_41:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void *)(v0 + 1192);
    uint64_t v58 = *(void *)(v57 + 16);
    *(void *)(v0 + 1336) = v58;
    if (v58)
    {
      uint64_t v59 = *(void *)(v0 + 1000);
      int v60 = *(_DWORD *)(v59 + 80);
      *(_DWORD *)(v0 + 1416) = v60;
      *(void *)(v0 + 1344) = *(void *)(v59 + 72);
      *(void *)(v0 + 1352) = 0;
      uint64_t v61 = *(void *)(v0 + 1152);
      uint64_t v62 = *(void *)(v0 + 840);
      uint64_t inited = sub_100F38118(v57 + ((v60 + 32) & ~(unint64_t)v60), *(void *)(v0 + 1024), type metadata accessor for CRLBoardIdentifier);
      uint64_t v66 = *(void *)(v62 + v61);
      *(void *)(v0 + 1360) = v66;
      if (v66)
      {
        uint64_t v67 = sub_100F33168;
        goto LABEL_44;
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_10166FB50 != -1) {
        swift_once();
      }
      uint64_t v69 = *(void *)(v0 + 1152);
      uint64_t v70 = *(void *)(v0 + 840);
      swift_beginAccess();
      uint64_t v71 = (void *)static OS_os_log.appIntents;
      *(void *)(v0 + 1376) = static OS_os_log.appIntents;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(void *)(v0 + 1384) = inited;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v66 = *(void *)(v70 + v69);
      *(void *)(v0 + 1392) = v66;
      if (v66)
      {
        uint64_t v68 = sub_100F33D08;
        id v72 = v71;
        goto LABEL_49;
      }
    }
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v42 = 0;
  uint64_t v43 = *(void *)(v0 + 1000);
  *(void *)(v0 + 1280) = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata;
  int v44 = *(_DWORD *)(v43 + 80);
  *(_DWORD *)(v0 + 1412) = v44;
  uint64_t v45 = *(void *)(v43 + 72);
  *(void *)(v0 + 1288) = v45;
  while (1)
  {
    *(void *)(v0 + 1296) = v42;
    uint64_t v46 = *(void *)(v0 + 1144);
    sub_100F38118(v40 + ((v44 + 32) & ~(unint64_t)v44) + v45 * v42, *(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (*(void *)(v46 + 16))
    {
      unint64_t v47 = sub_1009563EC(*(void *)(v0 + 1040));
      if (v48) {
        break;
      }
    }
LABEL_39:
    uint64_t v55 = *(void *)(v0 + 1272);
    uint64_t v56 = *(void *)(v0 + 1296) + 1;
    sub_100F38180(*(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (v56 == v55) {
      goto LABEL_41;
    }
    uint64_t v42 = *(void *)(v0 + 1296) + 1;
    uint64_t v45 = *(void *)(v0 + 1288);
    LOBYTE(v44) = *(unsigned char *)(v0 + 1412);
    uint64_t v40 = *(void *)(v0 + 1184);
  }
  char v49 = (uint64_t *)(*(void *)(v0 + 840) + *(void *)(v0 + 1280));
  unint64_t v50 = (void *)(*(void *)(*(void *)(v0 + 1144) + 56) + 16 * v47);
  *(void *)(v0 + 1304) = *v50;
  *(void *)(v0 + 1312) = v50[1];
  swift_beginAccess();
  uint64_t v51 = *v49;
  uint64_t v52 = *(void *)(v51 + 16);
  swift_bridgeObjectRetain();
  if (!v52 || (unint64_t v53 = sub_1009563EC(*(void *)(v0 + 1040)), (v54 & 1) == 0))
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  uint64_t v77 = *(void *)(v0 + 1152);
  uint64_t v78 = *(void *)(v0 + 936);
  uint64_t v79 = *(void *)(v0 + 928);
  uint64_t v80 = *(void *)(v0 + 840);
  sub_100F38118(*(void *)(v51 + 56) + *(void *)(*(void *)(v0 + 920) + 72) * v53, v79, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100F37878(v79, v78, type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t inited = swift_endAccess();
  uint64_t v66 = *(void *)(v80 + v77);
  *(void *)(v0 + 1320) = v66;
  if (!v66)
  {
LABEL_59:
    __break(1u);
    return _swift_task_switch(inited, v64, v65);
  }
  uint64_t v81 = *(void *)(v0 + 920);
  uint64_t v82 = *(void *)(v0 + 912);
  uint64_t v83 = *(void *)(v0 + 904);
  sub_100F38118(*(void *)(v0 + 936), v83, type metadata accessor for CRLBoardViewModelMetadata);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v83, 0, 1, v82);
  uint64_t v67 = sub_100F324A4;
LABEL_44:
  uint64_t v68 = v67;
LABEL_49:
  swift_retain();
  uint64_t inited = (uint64_t)v68;
  uint64_t v64 = v66;
  uint64_t v65 = 0;
  return _swift_task_switch(inited, v64, v65);
}

uint64_t sub_100F316BC()
{
  uint64_t v1 = v0[153];
  sub_100FCCFF0(v0[131], v0[155], v0[156], v0[119]);
  v0[158] = v1;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = v0[141];
  uint64_t v3 = v0[140];
  if (v1) {
    uint64_t v4 = sub_100F31D0C;
  }
  else {
    uint64_t v4 = sub_100F3176C;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100F3176C()
{
  uint64_t v1 = *(void *)(v0 + 1264);
  sub_100F38180(*(void *)(v0 + 952), type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v2 = *(void *)(v0 + 1200);
  uint64_t v3 = *(void *)(v0 + 1232) + 1;
  sub_100F38180(*(void *)(v0 + 1048), type metadata accessor for CRLBoardIdentifier);
  if (v3 != v2)
  {
    do
    {
      uint64_t v23 = *(void *)(v0 + 1232) + 1;
      *(void *)(v0 + 1232) = v23;
      *(void *)(v0 + 1224) = v1;
      uint64_t v24 = *(void *)(v0 + 1144);
      sub_100F38118(*(void *)(v0 + 1176)+ ((*(unsigned __int8 *)(v0 + 1408) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1408))+ *(void *)(v0 + 1216) * v23, *(void *)(v0 + 1048), type metadata accessor for CRLBoardIdentifier);
      if (*(void *)(v24 + 16))
      {
        unint64_t v25 = sub_1009563EC(*(void *)(v0 + 1048));
        if (v26)
        {
          int v27 = (uint64_t *)(*(void *)(v0 + 840) + *(void *)(v0 + 1208));
          uint64_t v28 = (void *)(*(void *)(*(void *)(v0 + 1144) + 56) + 16 * v25);
          *(void *)(v0 + 1240) = *v28;
          *(void *)(v0 + 1248) = v28[1];
          swift_beginAccess();
          uint64_t v29 = *v27;
          uint64_t v30 = *(void *)(v29 + 16);
          swift_bridgeObjectRetain();
          if (v30)
          {
            unint64_t v31 = sub_1009563EC(*(void *)(v0 + 1048));
            if (v32)
            {
              uint64_t v33 = *(void *)(v0 + 1152);
              uint64_t v34 = *(void *)(v0 + 952);
              uint64_t v35 = *(void *)(v0 + 944);
              uint64_t v36 = *(void *)(v0 + 840);
              sub_100F38118(*(void *)(v29 + 56) + *(void *)(*(void *)(v0 + 920) + 72) * v31, v35, type metadata accessor for CRLBoardViewModelMetadata);
              sub_100F37878(v35, v34, type metadata accessor for CRLBoardViewModelMetadata);
              uint64_t inited = swift_endAccess();
              uint64_t v40 = *(void *)(v36 + v33);
              *(void *)(v0 + 1256) = v40;
              if (v40)
              {
                uint64_t v41 = sub_100F316BC;
                goto LABEL_23;
              }
              goto LABEL_36;
            }
          }
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v21 = *(void *)(v0 + 1200);
      uint64_t v22 = *(void *)(v0 + 1232) + 1;
      sub_100F38180(*(void *)(v0 + 1048), type metadata accessor for CRLBoardIdentifier);
    }
    while (v22 != v21);
  }
  swift_release();
  uint64_t v4 = *(void *)(v0 + 1184);
  uint64_t v5 = *(void *)(v4 + 16);
  *(void *)(v0 + 1272) = v5;
  if (!v5)
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)(v0 + 1192);
    uint64_t v43 = *(void *)(v42 + 16);
    *(void *)(v0 + 1336) = v43;
    if (v43)
    {
      uint64_t v44 = *(void *)(v0 + 1000);
      int v45 = *(_DWORD *)(v44 + 80);
      *(_DWORD *)(v0 + 1416) = v45;
      *(void *)(v0 + 1344) = *(void *)(v44 + 72);
      *(void *)(v0 + 1352) = 0;
      uint64_t v46 = *(void *)(v0 + 1152);
      uint64_t v47 = *(void *)(v0 + 840);
      uint64_t inited = sub_100F38118(v42 + ((v45 + 32) & ~(unint64_t)v45), *(void *)(v0 + 1024), type metadata accessor for CRLBoardIdentifier);
      uint64_t v40 = *(void *)(v47 + v46);
      *(void *)(v0 + 1360) = v40;
      if (v40)
      {
        uint64_t v41 = sub_100F33168;
        goto LABEL_23;
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_10166FB50 != -1) {
        swift_once();
      }
      uint64_t v49 = *(void *)(v0 + 1152);
      uint64_t v50 = *(void *)(v0 + 840);
      swift_beginAccess();
      uint64_t v51 = (void *)static OS_os_log.appIntents;
      *(void *)(v0 + 1376) = static OS_os_log.appIntents;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(void *)(v0 + 1384) = inited;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v40 = *(void *)(v50 + v49);
      *(void *)(v0 + 1392) = v40;
      if (v40)
      {
        char v48 = sub_100F33D08;
        id v52 = v51;
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = 0;
  uint64_t v7 = *(void *)(v0 + 1000);
  *(void *)(v0 + 1280) = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata;
  int v8 = *(_DWORD *)(v7 + 80);
  *(_DWORD *)(v0 + 1412) = v8;
  uint64_t v9 = *(void *)(v7 + 72);
  *(void *)(v0 + 1288) = v9;
  while (1)
  {
    *(void *)(v0 + 1296) = v6;
    uint64_t v10 = *(void *)(v0 + 1144);
    sub_100F38118(v4 + ((v8 + 32) & ~(unint64_t)v8) + v9 * v6, *(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (*(void *)(v10 + 16))
    {
      unint64_t v11 = sub_1009563EC(*(void *)(v0 + 1040));
      if (v12) {
        break;
      }
    }
LABEL_9:
    uint64_t v19 = *(void *)(v0 + 1272);
    uint64_t v20 = *(void *)(v0 + 1296) + 1;
    sub_100F38180(*(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (v20 == v19) {
      goto LABEL_20;
    }
    uint64_t v6 = *(void *)(v0 + 1296) + 1;
    uint64_t v9 = *(void *)(v0 + 1288);
    LOBYTE(v8) = *(unsigned char *)(v0 + 1412);
    uint64_t v4 = *(void *)(v0 + 1184);
  }
  uint64_t v13 = (uint64_t *)(*(void *)(v0 + 840) + *(void *)(v0 + 1280));
  uint64_t v14 = (void *)(*(void *)(*(void *)(v0 + 1144) + 56) + 16 * v11);
  *(void *)(v0 + 1304) = *v14;
  *(void *)(v0 + 1312) = v14[1];
  swift_beginAccess();
  uint64_t v15 = *v13;
  uint64_t v16 = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  if (!v16 || (unint64_t v17 = sub_1009563EC(*(void *)(v0 + 1040)), (v18 & 1) == 0))
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v53 = *(void *)(v0 + 1152);
  uint64_t v54 = *(void *)(v0 + 936);
  uint64_t v55 = *(void *)(v0 + 928);
  uint64_t v56 = *(void *)(v0 + 840);
  sub_100F38118(*(void *)(v15 + 56) + *(void *)(*(void *)(v0 + 920) + 72) * v17, v55, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100F37878(v55, v54, type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t inited = swift_endAccess();
  uint64_t v40 = *(void *)(v56 + v53);
  *(void *)(v0 + 1320) = v40;
  if (!v40)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return _swift_task_switch(inited, v38, v39);
  }
  uint64_t v57 = *(void *)(v0 + 920);
  uint64_t v58 = *(void *)(v0 + 912);
  uint64_t v59 = *(void *)(v0 + 904);
  sub_100F38118(*(void *)(v0 + 936), v59, type metadata accessor for CRLBoardViewModelMetadata);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v59, 0, 1, v58);
  uint64_t v41 = sub_100F324A4;
LABEL_23:
  char v48 = v41;
LABEL_28:
  swift_retain();
  uint64_t inited = (uint64_t)v48;
  uint64_t v38 = v40;
  uint64_t v39 = 0;
  return _swift_task_switch(inited, v38, v39);
}

uint64_t sub_100F31D0C()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v1 = 0xD000000000000012;
  uint64_t v2 = *(void *)(v0 + 1048);
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v7 = *v5;
  uint64_t v6 = (void *)v5[1];
  int v8 = (void *)0x800000010123FE90;
  if (*v5) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v6 == (void *)0xE000000000000000;
  }
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = v7;
    int v8 = v6;
  }
  uint64_t v10 = *(void *)(v0 + 1264);
  id v11 = v3;
  *(void *)(v0 + 744) = UUID.uuidString.getter();
  *(void *)(v0 + 752) = v12;
  v13._countAndFlagsBits = 15418;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = v1;
  v14._object = v8;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 62;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t v16 = *(void *)(v0 + 744);
  uint64_t v17 = *(void *)(v0 + 752);
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v18 = sub_100528BE4();
  *(void *)(inited + 64) = v18;
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 40) = v17;
  *(void *)(v0 + 824) = v10;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v19 = String.init<A>(describing:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v18;
  *(void *)(inited + 72) = v19;
  *(void *)(inited + 80) = v20;
  uint64_t v21 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Could not create new entity for board identifier %@: %@", 55, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  sub_100F38180(*(void *)(v0 + 952), type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v22 = *(void *)(v0 + 1200);
  uint64_t v23 = *(void *)(v0 + 1232) + 1;
  sub_100F38180(*(void *)(v0 + 1048), type metadata accessor for CRLBoardIdentifier);
  if (v23 != v22)
  {
    do
    {
      uint64_t v43 = *(void *)(v0 + 1232) + 1;
      *(void *)(v0 + 1232) = v43;
      *(void *)(v0 + 1224) = 0;
      uint64_t v44 = *(void *)(v0 + 1144);
      sub_100F38118(*(void *)(v0 + 1176)+ ((*(unsigned __int8 *)(v0 + 1408) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1408))+ *(void *)(v0 + 1216) * v43, *(void *)(v0 + 1048), type metadata accessor for CRLBoardIdentifier);
      if (*(void *)(v44 + 16))
      {
        unint64_t v45 = sub_1009563EC(*(void *)(v0 + 1048));
        if (v46)
        {
          uint64_t v47 = (uint64_t *)(*(void *)(v0 + 840) + *(void *)(v0 + 1208));
          char v48 = (void *)(*(void *)(*(void *)(v0 + 1144) + 56) + 16 * v45);
          *(void *)(v0 + 1240) = *v48;
          *(void *)(v0 + 1248) = v48[1];
          swift_beginAccess();
          uint64_t v49 = *v47;
          uint64_t v50 = *(void *)(v49 + 16);
          swift_bridgeObjectRetain();
          if (v50)
          {
            unint64_t v51 = sub_1009563EC(*(void *)(v0 + 1048));
            if (v52)
            {
              uint64_t v53 = *(void *)(v0 + 1152);
              uint64_t v54 = *(void *)(v0 + 952);
              uint64_t v55 = *(void *)(v0 + 944);
              uint64_t v56 = *(void *)(v0 + 840);
              sub_100F38118(*(void *)(v49 + 56) + *(void *)(*(void *)(v0 + 920) + 72) * v51, v55, type metadata accessor for CRLBoardViewModelMetadata);
              sub_100F37878(v55, v54, type metadata accessor for CRLBoardViewModelMetadata);
              uint64_t v57 = swift_endAccess();
              uint64_t v60 = *(void *)(v56 + v53);
              *(void *)(v0 + 1256) = v60;
              if (v60)
              {
                uint64_t v61 = sub_100F316BC;
                goto LABEL_31;
              }
              goto LABEL_44;
            }
          }
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v41 = *(void *)(v0 + 1200);
      uint64_t v42 = *(void *)(v0 + 1232) + 1;
      sub_100F38180(*(void *)(v0 + 1048), type metadata accessor for CRLBoardIdentifier);
    }
    while (v42 != v41);
  }
  swift_release();
  uint64_t v24 = *(void *)(v0 + 1184);
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v0 + 1272) = v25;
  if (!v25)
  {
LABEL_28:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v62 = *(void *)(v0 + 1192);
    uint64_t v63 = *(void *)(v62 + 16);
    *(void *)(v0 + 1336) = v63;
    if (v63)
    {
      uint64_t v64 = *(void *)(v0 + 1000);
      int v65 = *(_DWORD *)(v64 + 80);
      *(_DWORD *)(v0 + 1416) = v65;
      *(void *)(v0 + 1344) = *(void *)(v64 + 72);
      *(void *)(v0 + 1352) = 0;
      uint64_t v66 = *(void *)(v0 + 1152);
      uint64_t v67 = *(void *)(v0 + 840);
      uint64_t v57 = sub_100F38118(v62 + ((v65 + 32) & ~(unint64_t)v65), *(void *)(v0 + 1024), type metadata accessor for CRLBoardIdentifier);
      uint64_t v60 = *(void *)(v67 + v66);
      *(void *)(v0 + 1360) = v60;
      if (v60)
      {
        uint64_t v61 = sub_100F33168;
        goto LABEL_31;
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_10166FB50 != -1) {
        swift_once();
      }
      uint64_t v69 = *(void *)(v0 + 1152);
      uint64_t v70 = *(void *)(v0 + 840);
      swift_beginAccess();
      uint64_t v71 = (void *)static OS_os_log.appIntents;
      *(void *)(v0 + 1376) = static OS_os_log.appIntents;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v57 = swift_initStackObject();
      *(void *)(v0 + 1384) = v57;
      *(_OWORD *)(v57 + 16) = xmmword_10117E810;
      uint64_t v60 = *(void *)(v70 + v69);
      *(void *)(v0 + 1392) = v60;
      if (v60)
      {
        uint64_t v68 = sub_100F33D08;
        id v72 = v71;
        goto LABEL_36;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v26 = 0;
  uint64_t v27 = *(void *)(v0 + 1000);
  *(void *)(v0 + 1280) = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata;
  int v28 = *(_DWORD *)(v27 + 80);
  *(_DWORD *)(v0 + 1412) = v28;
  uint64_t v29 = *(void *)(v27 + 72);
  *(void *)(v0 + 1288) = v29;
  while (1)
  {
    *(void *)(v0 + 1296) = v26;
    uint64_t v30 = *(void *)(v0 + 1144);
    sub_100F38118(v24 + ((v28 + 32) & ~(unint64_t)v28) + v29 * v26, *(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (*(void *)(v30 + 16))
    {
      unint64_t v31 = sub_1009563EC(*(void *)(v0 + 1040));
      if (v32) {
        break;
      }
    }
LABEL_17:
    uint64_t v39 = *(void *)(v0 + 1272);
    uint64_t v40 = *(void *)(v0 + 1296) + 1;
    sub_100F38180(*(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (v40 == v39) {
      goto LABEL_28;
    }
    uint64_t v26 = *(void *)(v0 + 1296) + 1;
    uint64_t v29 = *(void *)(v0 + 1288);
    LOBYTE(v28) = *(unsigned char *)(v0 + 1412);
    uint64_t v24 = *(void *)(v0 + 1184);
  }
  uint64_t v33 = (uint64_t *)(*(void *)(v0 + 840) + *(void *)(v0 + 1280));
  uint64_t v34 = (void *)(*(void *)(*(void *)(v0 + 1144) + 56) + 16 * v31);
  *(void *)(v0 + 1304) = *v34;
  *(void *)(v0 + 1312) = v34[1];
  swift_beginAccess();
  uint64_t v35 = *v33;
  uint64_t v36 = *(void *)(v35 + 16);
  swift_bridgeObjectRetain();
  if (!v36 || (unint64_t v37 = sub_1009563EC(*(void *)(v0 + 1040)), (v38 & 1) == 0))
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v73 = *(void *)(v0 + 1152);
  uint64_t v74 = *(void *)(v0 + 936);
  uint64_t v75 = *(void *)(v0 + 928);
  uint64_t v76 = *(void *)(v0 + 840);
  sub_100F38118(*(void *)(v35 + 56) + *(void *)(*(void *)(v0 + 920) + 72) * v37, v75, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100F37878(v75, v74, type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v57 = swift_endAccess();
  uint64_t v60 = *(void *)(v76 + v73);
  *(void *)(v0 + 1320) = v60;
  if (!v60)
  {
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    return _swift_task_switch(v57, v58, v59);
  }
  uint64_t v77 = *(void *)(v0 + 920);
  uint64_t v78 = *(void *)(v0 + 912);
  uint64_t v79 = *(void *)(v0 + 904);
  sub_100F38118(*(void *)(v0 + 936), v79, type metadata accessor for CRLBoardViewModelMetadata);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v79, 0, 1, v78);
  uint64_t v61 = sub_100F324A4;
LABEL_31:
  uint64_t v68 = v61;
LABEL_36:
  swift_retain();
  uint64_t v57 = (uint64_t)v68;
  uint64_t v58 = v60;
  uint64_t v59 = 0;
  return _swift_task_switch(v57, v58, v59);
}

uint64_t sub_100F324A4()
{
  uint64_t v1 = v0[165] + 120;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (*(void *)(*(void *)v1 + 16) && (unint64_t v3 = sub_1009563EC(v0[130]), (v4 & 1) != 0))
  {
    sub_100F38118(*(void *)(v2 + 56) + *(void *)(v0[107] + 72) * v3, v0[112], (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = v0[112];
  uint64_t v7 = v0[107];
  uint64_t v8 = v0[106];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v6, v5, 1, v8);
  swift_endAccess();
  BOOL v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v10 = v9(v6, 1, v8);
  sub_100522F00(v6, &qword_101691F20);
  if (v10 == 1)
  {
    uint64_t v11 = v0[130];
    uint64_t v12 = v0[113];
    type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError();
    sub_100F359B0((unint64_t *)&qword_1016A09D8, (void (*)(uint64_t))type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError);
    v0[166] = swift_allocError();
    sub_100F38118(v11, v13, type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_100522F00(v12, (uint64_t *)&unk_1016741D0);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v14 = v0[141];
    uint64_t v15 = v0[140];
    uint64_t v16 = sub_100F327CC;
  }
  else
  {
    uint64_t v17 = v0[129];
    uint64_t v18 = v0[106];
    sub_100F38118(v0[130], v17, type metadata accessor for CRLBoardIdentifier);
    swift_beginAccess();
    uint64_t v19 = sub_100F474B0(v0 + 53, v17);
    if (!v9(v20, 1, v18)) {
      sub_1007DCD2C(v0[163], v0[164], v0[113], 0, 0xF000000000000000);
    }
    ((void (*)(void *, void))v19)(v0 + 53, 0);
    uint64_t v21 = v0[129];
    uint64_t v22 = v0[113];
    swift_endAccess();
    sub_100F38180(v21, type metadata accessor for CRLBoardIdentifier);
    sub_100522F00(v22, (uint64_t *)&unk_1016741D0);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v14 = v0[141];
    uint64_t v15 = v0[140];
    uint64_t v16 = sub_100F32D98;
  }
  return _swift_task_switch(v16, v15, v14);
}

uint64_t sub_100F327CC()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v1 = 0xD000000000000012;
  uint64_t v2 = *(void *)(v0 + 1040);
  swift_beginAccess();
  unint64_t v3 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v7 = *v5;
  uint64_t v6 = (void *)v5[1];
  uint64_t v8 = (void *)0x800000010123FE90;
  if (*v5) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v6 == (void *)0xE000000000000000;
  }
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = v7;
    uint64_t v8 = v6;
  }
  uint64_t v10 = *(void *)(v0 + 1328);
  id v11 = v3;
  *(void *)(v0 + 760) = UUID.uuidString.getter();
  *(void *)(v0 + 768) = v12;
  v13._countAndFlagsBits = 15418;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = v1;
  v14._object = v8;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 62;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t v16 = *(void *)(v0 + 760);
  uint64_t v17 = *(void *)(v0 + 768);
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v18 = sub_100528BE4();
  *(void *)(inited + 64) = v18;
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 40) = v17;
  *(void *)(v0 + 816) = v10;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v19 = String.init<A>(describing:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v18;
  *(void *)(inited + 72) = v19;
  *(void *)(inited + 80) = v20;
  uint64_t v21 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Could not update entity for board identifier %@: %@", 51, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  sub_100F38180(*(void *)(v0 + 936), type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v22 = *(void *)(v0 + 1272);
  uint64_t v23 = *(void *)(v0 + 1296) + 1;
  sub_100F38180(*(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
  if (v23 == v22)
  {
LABEL_10:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(v0 + 1192);
    uint64_t v25 = *(void *)(v24 + 16);
    *(void *)(v0 + 1336) = v25;
    if (v25)
    {
      uint64_t v26 = *(void *)(v0 + 1000);
      int v27 = *(_DWORD *)(v26 + 80);
      *(_DWORD *)(v0 + 1416) = v27;
      *(void *)(v0 + 1344) = *(void *)(v26 + 72);
      *(void *)(v0 + 1352) = 0;
      uint64_t v28 = *(void *)(v0 + 1152);
      uint64_t v29 = *(void *)(v0 + 840);
      uint64_t v30 = sub_100F38118(v24 + ((v27 + 32) & ~(unint64_t)v27), *(void *)(v0 + 1024), type metadata accessor for CRLBoardIdentifier);
      uint64_t v33 = *(void *)(v29 + v28);
      *(void *)(v0 + 1360) = v33;
      if (v33)
      {
        uint64_t v34 = sub_100F33168;
        goto LABEL_13;
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_10166FB50 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 1152);
      uint64_t v56 = *(void *)(v0 + 840);
      swift_beginAccess();
      uint64_t v57 = (void *)static OS_os_log.appIntents;
      *(void *)(v0 + 1376) = static OS_os_log.appIntents;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v30 = swift_initStackObject();
      *(void *)(v0 + 1384) = v30;
      *(_OWORD *)(v30 + 16) = xmmword_10117E810;
      uint64_t v33 = *(void *)(v56 + v55);
      *(void *)(v0 + 1392) = v33;
      if (v33)
      {
        uint64_t v35 = sub_100F33D08;
        id v58 = v57;
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  while (1)
  {
    uint64_t v38 = *(void *)(v0 + 1296) + 1;
    *(void *)(v0 + 1296) = v38;
    uint64_t v39 = *(void *)(v0 + 1144);
    sub_100F38118(*(void *)(v0 + 1184)+ ((*(unsigned __int8 *)(v0 + 1412) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1412))+ *(void *)(v0 + 1288) * v38, *(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (!*(void *)(v39 + 16)) {
      goto LABEL_16;
    }
    unint64_t v40 = sub_1009563EC(*(void *)(v0 + 1040));
    if ((v41 & 1) == 0) {
      goto LABEL_16;
    }
    uint64_t v42 = (uint64_t *)(*(void *)(v0 + 840) + *(void *)(v0 + 1280));
    uint64_t v43 = (void *)(*(void *)(*(void *)(v0 + 1144) + 56) + 16 * v40);
    *(void *)(v0 + 1304) = *v43;
    *(void *)(v0 + 1312) = v43[1];
    swift_beginAccess();
    uint64_t v44 = *v42;
    uint64_t v45 = *(void *)(v44 + 16);
    swift_bridgeObjectRetain();
    if (v45)
    {
      unint64_t v46 = sub_1009563EC(*(void *)(v0 + 1040));
      if (v47) {
        break;
      }
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v36 = *(void *)(v0 + 1272);
    uint64_t v37 = *(void *)(v0 + 1296) + 1;
    sub_100F38180(*(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (v37 == v36) {
      goto LABEL_10;
    }
  }
  uint64_t v48 = *(void *)(v0 + 1152);
  uint64_t v49 = *(void *)(v0 + 936);
  uint64_t v50 = *(void *)(v0 + 928);
  uint64_t v51 = *(void *)(v0 + 840);
  sub_100F38118(*(void *)(v44 + 56) + *(void *)(*(void *)(v0 + 920) + 72) * v46, v50, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100F37878(v50, v49, type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v30 = swift_endAccess();
  uint64_t v33 = *(void *)(v51 + v48);
  *(void *)(v0 + 1320) = v33;
  if (!v33)
  {
LABEL_32:
    __break(1u);
    return _swift_task_switch(v30, v31, v32);
  }
  uint64_t v52 = *(void *)(v0 + 920);
  uint64_t v53 = *(void *)(v0 + 912);
  uint64_t v54 = *(void *)(v0 + 904);
  sub_100F38118(*(void *)(v0 + 936), v54, type metadata accessor for CRLBoardViewModelMetadata);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v53);
  uint64_t v34 = sub_100F324A4;
LABEL_13:
  uint64_t v35 = v34;
LABEL_27:
  swift_retain();
  uint64_t v30 = (uint64_t)v35;
  uint64_t v31 = v33;
  uint64_t v32 = 0;
  return _swift_task_switch(v30, v31, v32);
}

uint64_t sub_100F32D98()
{
  sub_100F38180(*(void *)(v0 + 936), type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v1 = *(void *)(v0 + 1272);
  uint64_t v2 = *(void *)(v0 + 1296) + 1;
  sub_100F38180(*(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
  if (v2 == v1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 1192);
    uint64_t v4 = *(void *)(v3 + 16);
    *(void *)(v0 + 1336) = v4;
    if (v4)
    {
      uint64_t v5 = *(void *)(v0 + 1000);
      int v6 = *(_DWORD *)(v5 + 80);
      *(_DWORD *)(v0 + 1416) = v6;
      *(void *)(v0 + 1344) = *(void *)(v5 + 72);
      *(void *)(v0 + 1352) = 0;
      uint64_t v7 = *(void *)(v0 + 1152);
      uint64_t v8 = *(void *)(v0 + 840);
      uint64_t inited = sub_100F38118(v3 + ((v6 + 32) & ~(unint64_t)v6), *(void *)(v0 + 1024), type metadata accessor for CRLBoardIdentifier);
      uint64_t v12 = *(void *)(v8 + v7);
      *(void *)(v0 + 1360) = v12;
      if (v12)
      {
        Swift::String v13 = sub_100F33168;
        goto LABEL_5;
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_10166FB50 != -1) {
        swift_once();
      }
      uint64_t v34 = *(void *)(v0 + 1152);
      uint64_t v35 = *(void *)(v0 + 840);
      swift_beginAccess();
      uint64_t v36 = (void *)static OS_os_log.appIntents;
      *(void *)(v0 + 1376) = static OS_os_log.appIntents;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(void *)(v0 + 1384) = inited;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v12 = *(void *)(v35 + v34);
      *(void *)(v0 + 1392) = v12;
      if (v12)
      {
        Swift::String v14 = sub_100F33D08;
        id v37 = v36;
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v17 = *(void *)(v0 + 1296) + 1;
    *(void *)(v0 + 1296) = v17;
    uint64_t v18 = *(void *)(v0 + 1144);
    sub_100F38118(*(void *)(v0 + 1184)+ ((*(unsigned __int8 *)(v0 + 1412) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1412))+ *(void *)(v0 + 1288) * v17, *(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (!*(void *)(v18 + 16)) {
      goto LABEL_8;
    }
    unint64_t v19 = sub_1009563EC(*(void *)(v0 + 1040));
    if ((v20 & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v21 = (uint64_t *)(*(void *)(v0 + 840) + *(void *)(v0 + 1280));
    uint64_t v22 = (void *)(*(void *)(*(void *)(v0 + 1144) + 56) + 16 * v19);
    *(void *)(v0 + 1304) = *v22;
    *(void *)(v0 + 1312) = v22[1];
    swift_beginAccess();
    uint64_t v23 = *v21;
    uint64_t v24 = *(void *)(v23 + 16);
    swift_bridgeObjectRetain();
    if (v24)
    {
      unint64_t v25 = sub_1009563EC(*(void *)(v0 + 1040));
      if (v26) {
        break;
      }
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v15 = *(void *)(v0 + 1272);
    uint64_t v16 = *(void *)(v0 + 1296) + 1;
    sub_100F38180(*(void *)(v0 + 1040), type metadata accessor for CRLBoardIdentifier);
    if (v16 == v15) {
      goto LABEL_2;
    }
  }
  uint64_t v27 = *(void *)(v0 + 1152);
  uint64_t v28 = *(void *)(v0 + 936);
  uint64_t v29 = *(void *)(v0 + 928);
  uint64_t v30 = *(void *)(v0 + 840);
  sub_100F38118(*(void *)(v23 + 56) + *(void *)(*(void *)(v0 + 920) + 72) * v25, v29, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100F37878(v29, v28, type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t inited = swift_endAccess();
  uint64_t v12 = *(void *)(v30 + v27);
  *(void *)(v0 + 1320) = v12;
  if (!v12)
  {
LABEL_24:
    __break(1u);
    return _swift_task_switch(inited, v10, v11);
  }
  uint64_t v31 = *(void *)(v0 + 920);
  uint64_t v32 = *(void *)(v0 + 912);
  uint64_t v33 = *(void *)(v0 + 904);
  sub_100F38118(*(void *)(v0 + 936), v33, type metadata accessor for CRLBoardViewModelMetadata);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v32);
  Swift::String v13 = sub_100F324A4;
LABEL_5:
  Swift::String v14 = v13;
LABEL_19:
  swift_retain();
  uint64_t inited = (uint64_t)v14;
  uint64_t v10 = v12;
  uint64_t v11 = 0;
  return _swift_task_switch(inited, v10, v11);
}

uint64_t sub_100F33168()
{
  uint64_t v1 = v0[170] + 120;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (*(void *)(*(void *)v1 + 16))
  {
    unint64_t v3 = sub_1009563EC(v0[128]);
    uint64_t v4 = v0[111];
    uint64_t v5 = v0[107];
    uint64_t v6 = v0[106];
    if (v7)
    {
      sub_100F38118(*(void *)(v2 + 56) + *(void *)(v5 + 72) * v3, v0[111], (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v8 = *(void *)(v5 + 56);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v8)(v4, 0, 1, v6);
    }
    else
    {
      uint64_t v8 = *(void *)(v5 + 56);
      ((void (*)(void, uint64_t, uint64_t, uint64_t))v8)(v0[111], 1, 1, v6);
    }
  }
  else
  {
    uint64_t v8 = *(void *)(v0[107] + 56);
    ((void (*)(void, uint64_t, uint64_t, void))v8)(v0[111], 1, 1, v0[106]);
  }
  uint64_t v9 = v0[111];
  uint64_t v10 = v0[107];
  uint64_t v11 = v0[106];
  swift_endAccess();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v13 = v12(v9, 1, v11);
  sub_100522F00(v9, &qword_101691F20);
  uint64_t v14 = v0[128];
  if (v13 == 1)
  {
    type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError();
    sub_100F359B0((unint64_t *)&qword_1016A09D8, (void (*)(uint64_t))type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError);
    v0[171] = swift_allocError();
    sub_100F38118(v14, v15, type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v16 = v0[141];
    uint64_t v17 = v0[140];
    uint64_t v18 = sub_100F33900;
    goto LABEL_29;
  }
  uint64_t v19 = v0[110];
  uint64_t v20 = v0[106];
  sub_100F38118(v0[128], v0[127], type metadata accessor for CRLBoardIdentifier);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(v19, 1, 1, v20);
  swift_beginAccess();
  int v21 = v12(v19, 1, v20);
  unint64_t v22 = v0[127];
  uint64_t v23 = v0[110];
  if (v21 == 1)
  {
    sub_100522F00(v23, &qword_101691F20);
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1009563EC(v22);
    char v25 = v24;
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      uint64_t v31 = 1;
      goto LABEL_19;
    }
    char v26 = v0 + 100;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *(void *)v1;
    v0[100] = *(void *)v1;
    *(void *)uint64_t v1 = 0x8000000000000000;
    if (isUniquelyReferenced_nonNull_native)
    {
LABEL_11:
      uint64_t v29 = v0[109];
      uint64_t v30 = v0[107];
      sub_100F38180(*(void *)(v28 + 48) + v0[168] * v22, type metadata accessor for CRLBoardIdentifier);
      sub_100F37878(*(void *)(v28 + 56) + *(void *)(v30 + 72) * v22, v29, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      sub_100589ADC(v22, v28);
      *(void *)uint64_t v1 = v28;
      swift_bridgeObjectRelease();
      uint64_t v31 = 0;
LABEL_19:
      uint64_t v42 = v0[127];
      uint64_t v43 = v0[109];
      ((void (*)(uint64_t, uint64_t, uint64_t, void))v8)(v43, v31, 1, v0[106]);
      sub_100F38180(v42, type metadata accessor for CRLBoardIdentifier);
      sub_100522F00(v43, &qword_101691F20);
LABEL_28:
      swift_endAccess();
      swift_release();
      uint64_t v16 = v0[141];
      uint64_t v17 = v0[140];
      uint64_t v18 = sub_100F33740;
LABEL_29:
      uint64_t v49 = (uint64_t)v18;
      return _swift_task_switch(v49, v17, v16);
    }
LABEL_33:
    sub_10097F508();
    uint64_t v28 = *v26;
    goto LABEL_11;
  }
  sub_100F37878(v23, v0[108], (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  uint64_t v8 = swift_isUniquelyReferenced_nonNull_native();
  char v26 = *(uint64_t **)v1;
  v0[99] = *(void *)v1;
  *(void *)uint64_t v1 = 0x8000000000000000;
  unint64_t v33 = sub_1009563EC(v22);
  uint64_t v34 = v26[2];
  BOOL v35 = (v32 & 1) == 0;
  uint64_t v36 = v34 + v35;
  if (__OFADD__(v34, v35))
  {
    __break(1u);
    goto LABEL_33;
  }
  char v37 = v32;
  if (v26[3] >= v36)
  {
    if ((v8 & 1) == 0) {
      sub_10097F508();
    }
    goto LABEL_23;
  }
  uint64_t v38 = v0[127];
  sub_100965310(v36, v8);
  unint64_t v39 = sub_1009563EC(v38);
  if ((v37 & 1) == (v40 & 1))
  {
    unint64_t v33 = v39;
LABEL_23:
    uint64_t v44 = (void *)v0[99];
    if (v37)
    {
      sub_100F35A30(v0[108], v44[7] + *(void *)(v0[107] + 72) * v33, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    }
    else
    {
      uint64_t v45 = v0[168];
      uint64_t v46 = v0[127];
      uint64_t v47 = v0[108];
      uint64_t v48 = v0[107];
      v44[(v33 >> 6) + 8] |= 1 << v33;
      sub_100F38118(v46, v44[6] + v45 * v33, type metadata accessor for CRLBoardIdentifier);
      uint64_t v49 = sub_100F37878(v47, v44[7] + *(void *)(v48 + 72) * v33, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v50 = v44[2];
      BOOL v51 = __OFADD__(v50, 1);
      uint64_t v52 = v50 + 1;
      if (v51)
      {
        __break(1u);
        return _swift_task_switch(v49, v17, v16);
      }
      v44[2] = v52;
    }
    uint64_t v53 = v0[127];
    *(void *)uint64_t v1 = v44;
    swift_bridgeObjectRelease();
    sub_100F38180(v53, type metadata accessor for CRLBoardIdentifier);
    goto LABEL_28;
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100F33740()
{
  uint64_t v1 = *(void *)(v0 + 1336);
  uint64_t v2 = *(void *)(v0 + 1352) + 1;
  sub_100F38180(*(void *)(v0 + 1024), type metadata accessor for CRLBoardIdentifier);
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    if (qword_10166FB50 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)(v0 + 1152);
    uint64_t v4 = *(void *)(v0 + 840);
    swift_beginAccess();
    uint64_t v5 = (void *)static OS_os_log.appIntents;
    *(void *)(v0 + 1376) = static OS_os_log.appIntents;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 1384) = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v9 = *(void *)(v4 + v3);
    *(void *)(v0 + 1392) = v9;
    if (v9)
    {
      uint64_t v10 = sub_100F33D08;
      id v11 = v5;
      goto LABEL_8;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    return _swift_task_switch(inited, v7, v8);
  }
  uint64_t v12 = *(void *)(v0 + 1352) + 1;
  *(void *)(v0 + 1352) = v12;
  uint64_t v13 = *(void *)(v0 + 1152);
  uint64_t v14 = *(void *)(v0 + 840);
  uint64_t inited = sub_100F38118(*(void *)(v0 + 1192)+ ((*(unsigned __int8 *)(v0 + 1416) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1416))+ *(void *)(v0 + 1344) * v12, *(void *)(v0 + 1024), type metadata accessor for CRLBoardIdentifier);
  uint64_t v9 = *(void *)(v14 + v13);
  *(void *)(v0 + 1360) = v9;
  if (!v9) {
    goto LABEL_12;
  }
  uint64_t v10 = sub_100F33168;
LABEL_8:
  swift_retain();
  uint64_t inited = (uint64_t)v10;
  uint64_t v7 = v9;
  uint64_t v8 = 0;
  return _swift_task_switch(inited, v7, v8);
}

uint64_t sub_100F33900()
{
  swift_release();
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v1 = 0xD000000000000012;
  uint64_t v2 = *(void *)(v0 + 1024);
  uint64_t v3 = *(void *)(v0 + 1008);
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  sub_100F38118(v2, v3, type metadata accessor for CRLBoardIdentifier);
  uint64_t v6 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v8 = *v6;
  uint64_t v7 = (void *)v6[1];
  uint64_t v9 = (void *)0x800000010123FE90;
  if (*v6) {
    BOOL v10 = 0;
  }
  else {
    BOOL v10 = v7 == (void *)0xE000000000000000;
  }
  if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = v8;
    uint64_t v9 = v7;
  }
  uint64_t v11 = *(void *)(v0 + 1368);
  uint64_t v12 = *(void *)(v0 + 1008);
  id v13 = v4;
  *(void *)(v0 + 776) = UUID.uuidString.getter();
  *(void *)(v0 + 784) = v14;
  v15._countAndFlagsBits = 15418;
  v15._object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = v1;
  v16._object = v9;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 62;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  uint64_t v18 = *(void *)(v0 + 776);
  uint64_t v19 = *(void *)(v0 + 784);
  sub_100F38180(v12, type metadata accessor for CRLBoardIdentifier);
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v20 = sub_100528BE4();
  *(void *)(inited + 64) = v20;
  *(void *)(inited + 32) = v18;
  *(void *)(inited + 40) = v19;
  *(void *)(v0 + 808) = v11;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v21 = String.init<A>(describing:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v20;
  *(void *)(inited + 72) = v21;
  *(void *)(inited + 80) = v22;
  uint64_t v23 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Could not remove entity for board identifier %@: %@", 51, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v24 = *(void *)(v0 + 1336);
  uint64_t v25 = *(void *)(v0 + 1352) + 1;
  sub_100F38180(*(void *)(v0 + 1024), type metadata accessor for CRLBoardIdentifier);
  if (v25 == v24)
  {
    swift_bridgeObjectRelease();
    if (qword_10166FB50 != -1) {
      swift_once();
    }
    uint64_t v26 = *(void *)(v0 + 1152);
    uint64_t v27 = *(void *)(v0 + 840);
    swift_beginAccess();
    uint64_t v28 = (void *)static OS_os_log.appIntents;
    *(void *)(v0 + 1376) = static OS_os_log.appIntents;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v29 = swift_initStackObject();
    *(void *)(v0 + 1384) = v29;
    *(_OWORD *)(v29 + 16) = xmmword_10117E810;
    uint64_t v32 = *(void *)(v27 + v26);
    *(void *)(v0 + 1392) = v32;
    if (v32)
    {
      unint64_t v33 = sub_100F33D08;
      id v34 = v28;
      goto LABEL_16;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    return _swift_task_switch(v29, v30, v31);
  }
  uint64_t v35 = *(void *)(v0 + 1352) + 1;
  *(void *)(v0 + 1352) = v35;
  uint64_t v36 = *(void *)(v0 + 1152);
  uint64_t v37 = *(void *)(v0 + 840);
  uint64_t v29 = sub_100F38118(*(void *)(v0 + 1192)+ ((*(unsigned __int8 *)(v0 + 1416) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1416))+ *(void *)(v0 + 1344) * v35, *(void *)(v0 + 1024), type metadata accessor for CRLBoardIdentifier);
  uint64_t v32 = *(void *)(v37 + v36);
  *(void *)(v0 + 1360) = v32;
  if (!v32) {
    goto LABEL_20;
  }
  unint64_t v33 = sub_100F33168;
LABEL_16:
  swift_retain();
  uint64_t v29 = (uint64_t)v33;
  uint64_t v30 = v32;
  uint64_t v31 = 0;
  return _swift_task_switch(v29, v30, v31);
}

uint64_t sub_100F33D08()
{
  uint64_t v1 = v0[174];
  swift_beginAccess();
  v0[175] = *(void *)(v1 + 120);
  uint64_t v2 = v0[141];
  uint64_t v3 = v0[140];
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100F33DA0, v3, v2);
}

uint64_t sub_100F33DA0()
{
  uint64_t v1 = v0[175];
  uint64_t v2 = (void *)v0[173];
  uint64_t v3 = (void *)v0[172];
  swift_release();
  swift_release();
  v2[7] = sub_1005057FC(&qword_1016A22A8);
  v2[8] = sub_100523288(&qword_1016A22B0, &qword_1016A22A8);
  v2[4] = v1;
  uint64_t v4 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Updated entities in store: %@", 29, 2, (uint64_t)v2);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100F34038(uint64_t a1)
{
  v2[53] = a1;
  v2[54] = v1;
  v2[55] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[56] = swift_task_alloc();
  v2[57] = swift_task_alloc();
  v2[58] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v2[59] = swift_task_alloc();
  v2[60] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardIdentifier(0);
  v2[61] = v3;
  v2[62] = *(void *)(v3 - 8);
  v2[63] = swift_task_alloc();
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[66] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[67] = v5;
  v2[68] = v4;
  return _swift_task_switch(sub_100F341D8, v5, v4);
}

uint64_t sub_100F341D8()
{
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[53];
  swift_beginAccess();
  id v2 = (id)static OS_os_log.crlBoardLibrary;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Updating snapshot", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

  v0[69] = *(void *)(v1 + 16);
  v0[70] = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot;
  unint64_t v4 = swift_bridgeObjectRetain();
  v0[71] = sub_1008E97DC(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[72] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100F3433C;
  return sub_100F10314((uint64_t)(v0 + 17));
}

uint64_t sub_100F3433C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 544);
  uint64_t v3 = *(void *)(v1 + 536);
  return _swift_task_switch(sub_100F3445C, v3, v2);
}

uint64_t sub_100F3445C()
{
  sub_10051B3EC(v0 + 136, v0 + 88, &qword_1016A2288);
  if (*(void *)(v0 + 96))
  {
    long long v1 = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v0 + 200) = v1;
    *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 120);
    unint64_t v2 = *(void *)(v0 + 192);
    *(void *)(v0 + 584) = v2;
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v3 = result;
      uint64_t v23 = v0 + 184;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      uint64_t v23 = v0 + 184;
      if (v3)
      {
LABEL_4:
        if (v3 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v5 = 0;
        uint64_t v24 = *(void *)(v0 + 496);
        unint64_t v25 = v2 & 0xC000000000000001;
        uint64_t v6 = _swiftEmptyArrayStorage;
        unint64_t v26 = v2;
        do
        {
          if (v25) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v2 + 8 * v5 + 32);
          }
          uint64_t v8 = v7;
          sub_100F38118((uint64_t)v7 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, *(void *)(v0 + 464), type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            uint64_t v9 = *(void *)(v0 + 512);
            uint64_t v10 = *(void *)(v0 + 464);
            uint64_t v11 = *(void *)(v0 + 472);
            sub_1005057FC(&qword_101677100);
            swift_bridgeObjectRelease();
            sub_100F37878(v10, v9, type metadata accessor for CRLBoardIdentifier);
            sub_100F37878(v9, v11, type metadata accessor for CRLBoardIdentifier);
            uint64_t v12 = 0;
          }
          else
          {
            sub_100F38180(*(void *)(v0 + 464), type metadata accessor for CRLBoardLibraryViewModel.Item);
            uint64_t v12 = 1;
          }
          uint64_t v14 = *(void *)(v0 + 480);
          uint64_t v13 = *(void *)(v0 + 488);
          uint64_t v15 = *(void *)(v0 + 472);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v15, v12, 1, v13);
          sub_10051B3EC(v15, v14, &qword_101672C30);

          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v14, 1, v13) == 1)
          {
            sub_100522F00(*(void *)(v0 + 480), &qword_101672C30);
            unint64_t v2 = v26;
          }
          else
          {
            uint64_t v16 = *(void *)(v0 + 520);
            uint64_t v17 = *(void *)(v0 + 504);
            sub_100F37878(*(void *)(v0 + 480), v16, type metadata accessor for CRLBoardIdentifier);
            sub_100F37878(v16, v17, type metadata accessor for CRLBoardIdentifier);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v6 = (double *)sub_100F632EC(0, *((void *)v6 + 2) + 1, 1, (unint64_t)v6);
            }
            unint64_t v19 = *((void *)v6 + 2);
            unint64_t v18 = *((void *)v6 + 3);
            unint64_t v2 = v26;
            if (v19 >= v18 >> 1) {
              uint64_t v6 = (double *)sub_100F632EC(v18 > 1, v19 + 1, 1, (unint64_t)v6);
            }
            uint64_t v20 = *(void *)(v0 + 504);
            *((void *)v6 + 2) = v19 + 1;
            sub_100F37878(v20, (uint64_t)v6+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v19, type metadata accessor for CRLBoardIdentifier);
          }
          ++v5;
        }
        while (v3 != v5);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v0 + 648) = *(unsigned char *)(v0 + 184);
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 592) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_100F348F0;
    return sub_100F129AC(v23);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_100F348F0(uint64_t a1)
{
  unint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 600) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v4[49] = v4[25];
    sub_10058EEF8((uint64_t)(v4 + 49));
    v4[50] = v4[26];
    sub_10058EEF8((uint64_t)(v4 + 50));
    v4[51] = v4[27];
    sub_10058EEF8((uint64_t)(v4 + 51));
    v4[52] = v4[28];
    sub_10058EEF8((uint64_t)(v4 + 52));
    uint64_t v5 = v4[68];
    uint64_t v6 = v4[67];
    id v7 = sub_100F3571C;
  }
  else
  {
    v4[76] = a1;
    uint64_t v5 = v4[68];
    uint64_t v6 = v4[67];
    id v7 = sub_100F34A8C;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100F34A8C()
{
  uint64_t v1 = *(void *)(v0 + 608);
  unint64_t v2 = *(void *)(v0 + 584);
  *(void *)(v0 + 368) = v1;
  swift_bridgeObjectRetain();
  *(unsigned char *)(v0 + 649) = sub_100F13618(v2, v1) & 1;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 650) = sub_100F14A90(v2, (uint64_t *)(v0 + 368)) & 1;
  uint64_t v3 = *(void *)(v0 + 368);
  swift_bridgeObjectRetain();
  *(unsigned char *)(v0 + 651) = sub_100F162A0(v2, v3) & 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 616) = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_100F34BA0;
  return sub_100F17788();
}

uint64_t sub_100F34BA0(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 652) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 544);
  uint64_t v4 = *(void *)(v2 + 536);
  return _swift_task_switch(sub_100F34CC8, v4, v3);
}

uint64_t sub_100F34CC8()
{
  uint64_t v1 = &off_1016A1000;
  char v42 = *(unsigned char *)(v0 + 652) | *(unsigned char *)(v0 + 651) | *(unsigned char *)(v0 + 650) | *(unsigned char *)(v0 + 649) | *(unsigned char *)(v0 + 648) | (*(void *)(v0 + 552) != 0);
  if (!(((*(unsigned char *)(v0 + 652) | *(unsigned char *)(v0 + 651)) | (*(unsigned char *)(v0 + 650) | *(unsigned char *)(v0 + 649))) & 1 | *(unsigned char *)(v0 + 648) & 1 | (*(void *)(v0 + 552) != 0)))
  {
    unint64_t v2 = *(void *)(*(void *)(v0 + 432) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderHierarchySnapshot);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v3) {
        goto LABEL_28;
      }
    }
    else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_28;
    }
  }
  unint64_t v4 = *(void *)(*(void *)(v0 + 432) + *(void *)(v0 + 560));
  uint64_t v45 = swift_allocObject();
  *(unsigned char *)(v45 + 16) = 0;
  uint64_t v5 = (unsigned char *)(v45 + 16);
  if (v4 >> 62) {
    goto LABEL_23;
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v1 = (_UNKNOWN **)(v4 & 0xC000000000000001);
    swift_beginAccess();
    uint64_t v7 = 0;
    uint64_t v43 = v5;
    unint64_t v44 = v4;
    unint64_t v46 = v4 & 0xC000000000000001;
    uint64_t v47 = v6;
    while (1)
    {
      id v8 = v1 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v4 + 8 * v7 + 32);
      uint64_t v9 = v8;
      uint64_t v10 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        break;
      }
      if (*v5 == 1)
      {
      }
      else
      {
        uint64_t v11 = (uint64_t)v8 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
        sub_100F38118((uint64_t)v8 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, *(void *)(v0 + 456), type metadata accessor for CRLBoardLibraryViewModel.Item);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v13 = *(void *)(v0 + 456);
        if (EnumCaseMultiPayload == 2)
        {
          sub_1005057FC(&qword_101677100);
          swift_bridgeObjectRelease();
          sub_100F38180(v13, type metadata accessor for CRLBoardIdentifier);

          uint64_t v1 = (_UNKNOWN **)v46;
          uint64_t v6 = v47;
        }
        else
        {
          uint64_t v14 = *(void *)(v0 + 448);
          sub_100F38180(*(void *)(v0 + 456), type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100F38118(v11, v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v15 = (objc_class *)type metadata accessor for CRLBoardLibraryViewModelItemNode();
          uint64_t v16 = (char *)objc_allocWithZone(v15);
          *(void *)&v16[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
          sub_100F38118(v14, (uint64_t)&v16[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);
          *(void *)(v0 + 328) = v16;
          *(void *)(v0 + 336) = v15;
          id v17 = [super init];
          sub_100F38180(v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
          id v18 = [v9 children];
          unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_100F29514(v19, v45, (uint64_t (*)(void, void))sub_1008E92D4, 0);
          swift_bridgeObjectRelease();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v17 setChildren:isa];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v5 = v43;
          unint64_t v4 = v44;
          uint64_t v1 = (_UNKNOWN **)v46;
          uint64_t v6 = v47;
        }
      }
      ++v7;
      if (v10 == v6)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = &off_1016A1000;
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease();
LABEL_25:
  uint64_t v21 = *(void *)(v0 + 432);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = (char *)v1[414];
  uint64_t v23 = *(void *)&v22[v21];
  swift_bridgeObjectRetain();
  unsigned __int8 v24 = sub_1005BED54((unint64_t)_swiftEmptyArrayStorage, v23);
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0) {
    *(void *)&v22[v21] = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v25 = *(void *)(v0 + 568);
  unint64_t v26 = *(char **)(v0 + 432);
  unint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_1008E97DC(v27);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v0 + 368);
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_100C31858(v30);
  uint64_t v32 = &v26[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata];
  swift_beginAccess();
  uint64_t v33 = swift_bridgeObjectRetain();
  uint64_t v34 = sub_100C31858(v33);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_100F2F954(v34, v31);
  *(void *)(v0 + 624) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = v26;
  uint64_t v37 = sub_100F2FDD0(v31, v36, (uint64_t *)(v0 + 368), v25, v28);
  *(void *)(v0 + 632) = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v35 + 16) || *(void *)(v37 + 16))
  {
    *(void *)uint64_t v32 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v38 = 1;
  }
  else
  {
    char v38 = v42;
  }
  *(unsigned char *)(v0 + 653) = v38 & 1;
  uint64_t v39 = (void *)swift_task_alloc();
  *(void *)(v0 + 640) = v39;
  void *v39 = v0;
  v39[1] = sub_100F35300;
  uint64_t v40 = *(void *)(v0 + 584);
  return sub_100F305DC(v40);
}

uint64_t sub_100F35300()
{
  uint64_t v1 = (void *)*v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  v1[43] = v1[25];
  sub_10058EEF8((uint64_t)(v1 + 43));
  v1[44] = v1[26];
  sub_10058EEF8((uint64_t)(v1 + 44));
  v1[45] = v1[27];
  sub_10058EEF8((uint64_t)(v1 + 45));
  v1[47] = v1[28];
  sub_10058EEF8((uint64_t)(v1 + 47));
  uint64_t v2 = v1[68];
  uint64_t v3 = v1[67];
  return _swift_task_switch(sub_100F354E0, v3, v2);
}

uint64_t sub_100F354E0()
{
  char v1 = *(unsigned char *)(v0 + 653);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 432);
  if ((v1 & 1) != 0 || (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + 632);
    uint64_t v4 = *(void *)(v0 + 424);
    sub_100EE999C();
    *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating) = 1;
    Swift::Int v5 = sub_1005098D0((uint64_t)&off_101503AC8);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_100ED90F8(v3, v4);
    id v7 = [self defaultCenter];
    if (qword_1016700C0 != -1) {
      swift_once();
    }
    uint64_t v8 = *(void *)(v0 + 432);
    uint64_t v9 = qword_10171C6C8;
    unint64_t v10 = sub_100DC524C(v5, v6, *(void *)(v0 + 624));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100ED2BB8(v10);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v7 postNotificationName:v9 object:v8 userInfo:isa];
  }
  else
  {
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100F3571C()
{
  swift_release();
  char v1 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Error updating metadata: %@", 27, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100F358D8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_100F0FB94(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100F359A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100F359B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100F359F8(uint64_t a1)
{
  return sub_100C724B8(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F35A00(uint64_t a1)
{
  return sub_100C70F18(a1, *(char **)(v1 + 16));
}

uint64_t sub_100F35A08(uint64_t a1)
{
  return sub_100C718EC(a1, *(char **)(v1 + 16));
}

uint64_t sub_100F35A10(uint64_t a1)
{
  return sub_100C717F0(a1, *(char **)(v1 + 16));
}

uint64_t sub_100F35A18(uint64_t a1)
{
  return sub_100C7292C(a1);
}

uint64_t sub_100F35A20(uint64_t a1)
{
  return sub_100C7191C(a1, *(char **)(v1 + 16));
}

uint64_t sub_100F35A28@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100F1AFC4(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_100F35A30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100F35A98(uint64_t a1)
{
  return sub_100C7BEF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F35AA0(uint64_t a1)
{
  return sub_100C70E58(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F35AAC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100F00150(a1, v5, v6, v7, v8);
}

uint64_t sub_100F35BA8()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100F35C7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Notification() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100F1D7B4(a1, v5, v6, v7, v8);
}

uint64_t sub_100F35D78()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100F35DC0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 41);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100EEA8DC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100F35E9C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100F35ED8()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  sub_100E500C4(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_100F35F3C(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v7 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC(&qword_1016A2458);
  *(void *)(inited + 64) = sub_100523288(&qword_1016A2460, &qword_1016A2458);
  *(void *)(inited + 32) = a1;
  id v9 = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Updating store snapshot for new highlights. %@", 46, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  type metadata accessor for MainActor();
  id v12 = v1;
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v12;
  sub_1005912D0((uint64_t)v6, (uint64_t)&unk_1016A2470, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_100F36180(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self standardUserDefaults];
  sub_100522E9C(a1, (uint64_t)v5, &qword_101672EB0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  [v6 setObject:isa forKey:@"CRLCloudQuotaExceededAlertLastShownDate"];

  swift_unknownObjectRelease();
  return sub_100522F00(a1, &qword_101672EB0);
}

uint64_t sub_100F362F4()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v6 = 0u;
    long long v7 = 0u;
LABEL_11:
    sub_100522F00((uint64_t)&v6, &qword_101672BF0);
    return 0;
  }
  uint64_t v1 = v0;
  *(void *)&long long v6 = 0xD000000000000010;
  *((void *)&v6 + 1) = 0x8000000101240F20;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10095647C((uint64_t)v5), (v3 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v5);
  if (!*((void *)&v7 + 1)) {
    goto LABEL_11;
  }
  sub_1005057FC(&qword_101677400);
  if (swift_dynamicCast()) {
    return v5[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_100F36404()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100F3644C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100F1D60C(a1, v4, v5, v7, v6);
}

uint64_t sub_100F3650C()
{
  return sub_100CB35F4();
}

uint64_t sub_100F36514()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100F365F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Notification() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100F1EDE0(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100F366F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100EFF3D4(a1, v5, v6, v7, v8);
}

uint64_t sub_100F367F0()
{
  return sub_100F36AA4((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_100F3681C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100F0D4CC(a1, v4, v5, v7, v6);
}

uint64_t sub_100F368DC()
{
  return sub_100F38404((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100F368F4()
{
  return sub_1006AF840(*(void *)(v0 + 16));
}

uint64_t sub_100F368FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F3690C()
{
  sub_100510084(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100F36948(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100E94F00(a1, v4, v5, v6);
}

uint64_t sub_100F36A00()
{
  return sub_1006AF68C(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_100F36A0C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F36A1C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100F36A58(uint64_t a1)
{
  return sub_100F374A0(a1, sub_100F0B64C);
}

uint64_t sub_100F36A70(uint64_t a1)
{
  return sub_100AC30FC(a1, v1);
}

uint64_t sub_100F36A78()
{
  return sub_100F36AA4((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100F36AA4(void (*a1)(void), void (*a2)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v2 + 32));
  a2(*(void *)(v2 + 40));

  return _swift_deallocObject(v2, 48, 7);
}

uint64_t sub_100F36B0C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100F0B8F8(a1, v4, v5, v7, v6);
}

uint64_t sub_100F36BD0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100F079B8(a1, v5, v6, v7, v8);
}

uint64_t sub_100F36CD0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100F06CC4(a1, v5, v6, v7, v8);
}

uint64_t sub_100F36DD0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  v3[2] = v2;
  return _swift_task_switch(sub_100F064D0, 0, 0);
}

uint64_t sub_100F36E7C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  return sub_100C6A478(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), 0, 0);
}

uint64_t sub_100F36EE8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100F36F20()
{
  return sub_100F38404((void (*)(void))&_swift_release);
}

void sub_100F36F38()
{
}

uint64_t sub_100F36F40()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F36F80(uint64_t a1)
{
  return sub_100F0308C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100F36F88()
{
  return sub_100F38404((void (*)(void))&_swift_release);
}

void sub_100F36FA0()
{
}

uint64_t sub_100F36FAC(uint64_t a1)
{
  return sub_100F374A0(a1, sub_100F042D4);
}

uint64_t sub_100F36FC4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100F3700C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100F03220(a1, v4, v5, v7, v6);
}

uint64_t sub_100F370D0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100F03A58(a1, v4, v5, v6);
}

uint64_t sub_100F37188()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100528D08;
  return sub_100E2E2A4();
}

uint64_t sub_100F37240()
{
  return sub_100F027DC(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100F3724C(char a1, char a2)
{
  return sub_100F02BA8(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100F3725C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100528D08;
  return sub_100EFDBD4();
}

uint64_t sub_100F37314()
{
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100F37354()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F37364()
{
  return sub_100F38404((void (*)(void))&_swift_release);
}

uint64_t sub_100F3737C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F37390()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100F37488(uint64_t a1)
{
  return sub_100F374A0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100F0F33C);
}

uint64_t sub_100F374A0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_100F37528()
{
  return sub_100F38404((void (*)(void))&_swift_release);
}

uint64_t sub_100F37540()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F37550(uint64_t a1)
{
  return sub_100C79B10(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F37558(uint64_t a1)
{
  return sub_100C791B4(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F37560(uint64_t a1)
{
  return sub_100C7A478(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_100F37568()
{
  unint64_t result = qword_1016A24B0;
  if (!qword_1016A24B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1016A24B0);
  }
  return result;
}

uint64_t sub_100F375BC(uint64_t a1)
{
  return sub_100C6EB14(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F375C4(uint64_t a1)
{
  return sub_100C893AC(a1, *(void *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_100F375CC(uint64_t a1)
{
  return sub_100C88504(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F375D4(uint64_t a1)
{
  return sub_100C890EC(a1, *(void *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_100F375DC(uint64_t a1)
{
  return sub_100C6E9BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100F375E8(uint64_t a1)
{
  return sub_100C6EC80(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F375F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100EF6E10(a1, v5, v6, v7, v8);
}

uint64_t sub_100F376F0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528D08;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1016A24F8 + dword_1016A24F8);
  return v6(a1, v4);
}

uint64_t sub_100F377A8(uint64_t a1)
{
  return sub_100C75BFC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F377B0(uint64_t a1)
{
  return sub_100C705F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F377B8()
{
  return sub_100F38404((void (*)(void))&_swift_release);
}

uint64_t sub_100F377D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F377E0(uint64_t a1)
{
  return a1;
}

void sub_100F37818(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_100F37878(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_100F378E0(uint64_t a1@<X8>)
{
}

const char *sub_100F378FC()
{
  return "CRLEnsureOwnershipOfDataUserDefault";
}

id sub_100F37908@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 CRLEnsureOwnershipOfDataUserDefault];
  *a2 = (_BYTE)result;
  return result;
}

void sub_100F3793C(void **a1)
{
}

void sub_100F37944(unsigned __int8 *a1)
{
}

uint64_t sub_100F37950(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100EEF204(a1, v4, v5, v6);
}

uint64_t sub_100F37A04(uint64_t a1)
{
  return sub_100C71AC0(a1, *(char **)(v1 + 16));
}

uint64_t sub_100F37A0C(void *a1, uint64_t a2, char a3)
{
  return sub_100EF3660(a1, a2, a3 & 1, v3, (uint64_t)&unk_101533970, (uint64_t)sub_100F37D98, (uint64_t)&unk_101533988, (void (*)(uint64_t, uint64_t))sub_100626B48);
}

uint64_t sub_100F37A64(void *a1, uint64_t a2, char a3)
{
  return sub_100EF3660(a1, a2, a3 & 1, v3, (uint64_t)&unk_1015338F8, (uint64_t)sub_100F37C0C, (uint64_t)&unk_101533910, (void (*)(uint64_t, uint64_t))sub_10074B334);
}

void sub_100F37ABC(uint64_t a1)
{
}

uint64_t sub_100F37AC8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100EF5130(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_100F37BF4()
{
  return sub_100F37D3C((void (*)(void, void))sub_100541074);
}

uint64_t sub_100F37C0C()
{
  return sub_100F37DB0((uint64_t (*)(void, void, void, void))sub_100EF39CC);
}

uint64_t sub_100F37C28(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100EF3FB0(a1, v5, v6, v7, v8);
}

uint64_t sub_100F37D24()
{
  return sub_100F37D3C((void (*)(void, void))sub_100541080);
}

uint64_t sub_100F37D3C(void (*a1)(void, void))
{
  swift_release();
  a1(*(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));

  return _swift_deallocObject(v1, 48, 7);
}

uint64_t sub_100F37D98()
{
  return sub_100F37DB0((uint64_t (*)(void, void, void, void))sub_100EF2ECC);
}

uint64_t sub_100F37DB0(uint64_t (*a1)(void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100F37DCC()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100F37EE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528488;
  return sub_100EF3598(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_100F38018()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  v3[31] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[32] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100F1F7D8;
  return static Task<>.sleep(nanoseconds:)(2000000000);
}

void sub_100F380FC()
{
}

uint64_t sub_100F38118(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100F38180(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100F381E0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100F382C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100F0E0BC(a1, v6, v7, v8, v9);
}

uint64_t sub_100F383EC()
{
  return sub_100F38404((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100F38404(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_100F38454()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F38464(uint64_t a1)
{
  return sub_1007A35E0(a1, v1[2], v1[3], v1[4], v1[5]);
}

ValueMetadata *type metadata accessor for CRLDeletedBoardsModel()
{
  return &type metadata for CRLDeletedBoardsModel;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardLibrary.RenameError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100F3851CLL);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibrary.RenameError()
{
  return &type metadata for CRLBoardLibrary.RenameError;
}

uint64_t destroy for CRLBoardLibrary.UpdateAllBoardsAndCKShareResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLBoardLibrary.UpdateAllBoardsAndCKShareResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLBoardLibrary.UpdateAllBoardsAndCKShareResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLBoardLibrary.UpdateAllBoardsAndCKShareResult(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLBoardLibrary.UpdateAllBoardsAndCKShareResult()
{
  return &type metadata for CRLBoardLibrary.UpdateAllBoardsAndCKShareResult;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardLibrary.BoardError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *id result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100F3881CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibrary.BoardError()
{
  return &type metadata for CRLBoardLibrary.BoardError;
}

unint64_t sub_100F38858()
{
  unint64_t result = qword_1016A2620;
  if (!qword_1016A2620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2620);
  }
  return result;
}

unint64_t sub_100F388B0()
{
  unint64_t result = qword_1016A2628;
  if (!qword_1016A2628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2628);
  }
  return result;
}

uint64_t sub_100F389A0()
{
  return 1701667182;
}

uint64_t sub_100F389B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100F38A38(uint64_t a1)
{
  unint64_t v2 = sub_100F38BEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100F38A74(uint64_t a1)
{
  unint64_t v2 = sub_100F38BEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DebugData.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016A2630);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100F38BEC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_100F38BEC()
{
  unint64_t result = qword_1016A2638;
  if (!qword_1016A2638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2638);
  }
  return result;
}

uint64_t DebugData.init(from:)(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016A2640);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t)sub_10050F848(a1, a1[3]);
  sub_100F38BEC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t v8 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v8;
}

unint64_t sub_100F38D9C()
{
  unint64_t result = qword_1016A2648;
  if (!qword_1016A2648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2648);
  }
  return result;
}

unint64_t sub_100F38DF4()
{
  unint64_t result = qword_1016A2650;
  if (!qword_1016A2650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2650);
  }
  return result;
}

uint64_t sub_100F38E48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016A2640);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100F38BEC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  *a2 = v10;
  a2[1] = v12;
  return result;
}

uint64_t sub_100F38FC0(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016A2630);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100F38BEC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

ValueMetadata *type metadata accessor for DebugData()
{
  return &type metadata for DebugData;
}

unsigned char *storeEnumTagSinglePayload for DebugData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100F391A4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugData.CodingKeys()
{
  return &type metadata for DebugData.CodingKeys;
}

unint64_t sub_100F391E0()
{
  unint64_t result = qword_1016A2658;
  if (!qword_1016A2658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2658);
  }
  return result;
}

unint64_t sub_100F39238()
{
  unint64_t result = qword_1016A2660;
  if (!qword_1016A2660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2660);
  }
  return result;
}

unint64_t sub_100F39290()
{
  unint64_t result = qword_1016A2668;
  if (!qword_1016A2668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2668);
  }
  return result;
}

id CRLRateLimiter.__allocating_init(intervalInSeconds:)(double a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = OBJC_IVAR____TtC8Freeform14CRLRateLimiter_queue;
  sub_100656064();
  uint64_t v5 = v3;
  *(void *)&v3[v4] = static OS_dispatch_queue.main.getter();
  uint64_t v6 = &v5[OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  static Date.distantPast.getter();
  *(double *)&v5[OBJC_IVAR____TtC8Freeform14CRLRateLimiter_interval] = a1;

  v8.receiver = v5;
  v8.Class super_class = v1;
  return [super init];
}

id CRLRateLimiter.init(intervalInSeconds:)(double a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Freeform14CRLRateLimiter_queue;
  sub_100656064();
  uint64_t v4 = v1;
  *(void *)&v1[v3] = static OS_dispatch_queue.main.getter();
  uint64_t v5 = &v4[OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  static Date.distantPast.getter();
  *(double *)&v4[OBJC_IVAR____TtC8Freeform14CRLRateLimiter_interval] = a1;

  v7.receiver = v4;
  v7.Class super_class = (Class)type metadata accessor for CRLRateLimiter();
  return [super init];
}

uint64_t type metadata accessor for CRLRateLimiter()
{
  uint64_t result = qword_1016A26B8;
  if (!qword_1016A26B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CRLRateLimiter.exec(_:)(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v55 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for DispatchQoS();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56, v6);
  uint64_t v53 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  uint64_t v61 = v9;
  __chkstk_darwin(v8, v10);
  BOOL v51 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v59 = (char *)&v50 - v14;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  unint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v64 = (char *)&v50 - v22;
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"exec(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLRateLimiter.swift", 85, 2, 31, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"exec(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLRateLimiter.swift", 85, 2, 31);
    [self logFullBacktrace];
  }
  Date.init()();
  uint64_t v23 = v2 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_lastExecutionTime;
  swift_beginAccess();
  unsigned __int8 v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v24(v19, v23, v15);
  Date.timeIntervalSince(_:)();
  double v26 = v25;
  unint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  uint64_t v28 = v27(v19, v15);
  if (*(double *)(v2 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_interval) <= v26)
  {
    v62(v28);
    Date.init()();
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 40))(v23, v19, v15);
    swift_endAccess();
    uint64_t v37 = (void *)(v2 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    uint64_t v38 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    *uint64_t v37 = 0;
    v37[1] = 0;
    sub_1005174AC(v38);
    return v27(v64, v15);
  }
  else
  {
    uint64_t v50 = v15;
    uint64_t v52 = v27;
    uint64_t v29 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    uint64_t v30 = v2;
    uint64_t v32 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    uint64_t v31 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock + 8);
    if (v32)
    {
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      *(void *)(v33 + 24) = v31;
      sub_1005173A0(v32);
      sub_1005174AC((uint64_t)sub_1006DAE04);
      uint64_t v34 = *v29;
      uint64_t v35 = v63;
      *uint64_t v29 = (uint64_t)v62;
      v29[1] = v35;
      swift_retain();
      sub_1005174AC(v34);
      return v52(v64, v50);
    }
    else
    {
      sub_1005173A0(0);
      sub_1005174AC(0);
      uint64_t v39 = *v29;
      uint64_t v40 = v63;
      *uint64_t v29 = (uint64_t)v62;
      v29[1] = v40;
      swift_retain();
      sub_1005174AC(v39);
      uint64_t v63 = *(void *)(v30 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_queue);
      char v41 = v51;
      static DispatchTime.now()();
      uint64_t v42 = v50;
      v24(v19, v23, v50);
      Date.timeIntervalSinceNow.getter();
      v52(v19, v42);
      + infix(_:_:)();
      uint64_t v43 = *(void (**)(uint64_t))(v61 + 8);
      v61 += 8;
      uint64_t v62 = v43;
      ((void (*)(char *, uint64_t))v43)(v41, v60);
      uint64_t v44 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_100F39E68;
      aBlock[5] = v44;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_101533DB0;
      uint64_t v45 = _Block_copy(aBlock);
      swift_retain();
      unint64_t v46 = v53;
      static DispatchQoS.unspecified.getter();
      int v65 = _swiftEmptyArrayStorage;
      sub_100522CDC();
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_10056B494();
      uint64_t v47 = v55;
      uint64_t v48 = v58;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v49 = v59;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v45);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v48);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v56);
      ((void (*)(char *, uint64_t))v62)(v49, v60);
      v52(v64, v42);
      swift_release();
      return swift_release();
    }
  }
}

uint64_t sub_100F39CB4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100F39CEC()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (char *)Strong;
    uint64_t v7 = (uint64_t *)(Strong + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    uint64_t v8 = *(void (**)(uint64_t))(Strong + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    if (v8)
    {
      uint64_t v9 = swift_retain();
      v8(v9);
      sub_1005174AC((uint64_t)v8);
      uint64_t v10 = *v7;
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t *v7 = 0;
    v7[1] = 0;
    sub_1005174AC(v10);
    Date.init()();
    uint64_t v11 = &v6[OBJC_IVAR____TtC8Freeform14CRLRateLimiter_lastExecutionTime];
    swift_beginAccess();
    (*(void (**)(char *, unsigned char *, uint64_t))(v1 + 40))(v11, v4, v0);
    swift_endAccess();
  }
}

void sub_100F39E68()
{
}

uint64_t sub_100F39E70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100F39E80()
{
  return swift_release();
}

uint64_t sub_100F39E88()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void CRLRateLimiter.init()()
{
}

id CRLRateLimiter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLRateLimiter();
  return [super dealloc];
}

uint64_t sub_100F3A058()
{
  return type metadata accessor for CRLRateLimiter();
}

uint64_t sub_100F3A060()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100F3A118(uint64_t a1, void (**a2)(void))
{
  uint64_t v63 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v56 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for DispatchQoS();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57, v6);
  uint64_t v54 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for DispatchTime();
  uint64_t v62 = *(void *)(v60 - 8);
  __chkstk_darwin(v60, v8);
  uint64_t v52 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v53 = (char *)&v48 - v12;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v48 - v20;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = a2;
  uint64_t v22 = self;
  uint64_t v61 = a2;
  _Block_copy(a2);
  if (([v22 isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"exec(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLRateLimiter.swift", 85, 2, 31, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"exec(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLRateLimiter.swift", 85, 2, 31);
    [self logFullBacktrace];
  }
  Date.init()();
  uint64_t v23 = v63;
  uint64_t v24 = v63 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_lastExecutionTime;
  swift_beginAccess();
  double v25 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v25(v17, v24, v13);
  Date.timeIntervalSince(_:)();
  double v27 = v26;
  uint64_t v28 = *(void (***)(void))(v14 + 8);
  ((void (*)(char *, uint64_t))v28)(v17, v13);
  if (*(double *)(v23 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_interval) <= v27)
  {
    v61[2]();
    Date.init()();
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 40))(v24, v17, v13);
    swift_endAccess();
    uint64_t v35 = (void *)(v23 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    uint64_t v36 = *(void *)(v23 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    *uint64_t v35 = 0;
    v35[1] = 0;
    sub_1005174AC(v36);
    ((void (*)(char *, uint64_t))v28)(v21, v13);
  }
  else
  {
    uint64_t v61 = v28;
    BOOL v51 = v21;
    uint64_t v29 = (uint64_t *)(v23 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    uint64_t v31 = *(void *)(v23 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock);
    uint64_t v30 = *(void *)(v23 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_currentExecBlock + 8);
    if (v31)
    {
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v31;
      *(void *)(v32 + 24) = v30;
      sub_1005173A0(v31);
      sub_1005174AC((uint64_t)sub_10093B9B4);
      uint64_t v33 = *v29;
      uint64_t v34 = v64;
      *uint64_t v29 = (uint64_t)sub_1005E2108;
      v29[1] = v34;
      swift_retain();
      sub_1005174AC(v33);
      ((void (*)(char *, uint64_t))v61)(v51, v13);
    }
    else
    {
      sub_1005173A0(0);
      sub_1005174AC(0);
      uint64_t v37 = *v29;
      uint64_t v38 = v64;
      *uint64_t v29 = (uint64_t)sub_1005E2108;
      v29[1] = v38;
      swift_retain();
      sub_1005174AC(v37);
      uint64_t v50 = *(void *)(v23 + OBJC_IVAR____TtC8Freeform14CRLRateLimiter_queue);
      uint64_t v39 = v52;
      static DispatchTime.now()();
      v25(v17, v24, v13);
      Date.timeIntervalSinceNow.getter();
      ((void (*)(char *, uint64_t))v61)(v17, v13);
      uint64_t v40 = v53;
      + infix(_:_:)();
      char v41 = *(void (**)(char *, uint64_t))(v62 + 8);
      v62 += 8;
      uint64_t v49 = v41;
      v41(v39, v60);
      uint64_t v42 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_100F39E68;
      aBlock[5] = v42;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_101533E28;
      uint64_t v43 = _Block_copy(aBlock);
      swift_retain();
      uint64_t v44 = v54;
      static DispatchQoS.unspecified.getter();
      int v65 = _swiftEmptyArrayStorage;
      sub_100522CDC();
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_10056B494();
      uint64_t v45 = v56;
      uint64_t v46 = v59;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v43);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v45, v46);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v57);
      v49(v40, v60);
      ((void (*)(char *, uint64_t))v61)(v51, v13);
      swift_release();
      swift_release();
    }
  }
  return swift_release();
}

uint64_t sub_100F3A8FC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100F3A940()
{
  sub_10051B3EC(v0 + 232, (uint64_t)v9, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v9, (uint64_t)&v12, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)&v12) == 1) {
    return 0;
  }
  long long v24 = v16;
  long long v25 = v17;
  v26[0] = v18;
  v26[1] = v19;
  long long v20 = v12;
  long long v21 = v13;
  long long v22 = v14;
  long long v23 = v15;
  sub_10068F4B8();
  v27[2] = v14;
  v27[3] = v15;
  v27[4] = v16;
  uint64_t v28 = v17;
  v27[0] = v12;
  v27[1] = v13;
  v10[0] = v12;
  v10[1] = v13;
  v10[3] = v15;
  v10[4] = v16;
  v10[2] = v14;
  uint64_t v11 = v17;
  sub_10068F4F8((uint64_t)v27);
  objc_super v2 = sub_1007B0B84((uint64_t)v10);
  double v3 = *((float *)&v25 + 2);
  double v4 = *((float *)&v25 + 3);
  double v5 = *(float *)v26;
  double v6 = *((float *)v26 + 1);
  sub_10051B3EC((uint64_t)v26 + 8, (uint64_t)v29, &qword_101679B98);
  sub_10051B3EC((uint64_t)v29, (uint64_t)&v30, &qword_101679B98);
  if (v31) {
    id v7 = [objc_allocWithZone((Class)CRLCurvedShadow) initWithOffset:v2 angle:1 radius:v4 curve:v3 opacity:v5 color:v30 enabled:v6];
  }
  else {
    id v7 = [objc_allocWithZone((Class)CRLDropShadow) initWithAngle:v2 offset:1 radius:v3 opacity:v4 color:v5 enabled:v6];
  }
  id v1 = v7;

  return v1;
}

uint64_t sub_100F3AB08(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016A2730);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v12[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100F3CD8C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v14, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_101685110);
  char v15 = 0;
  sub_100A1D5EC();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    sub_10051B3EC(v3 + 232, (uint64_t)v13, (uint64_t *)&unk_101683E20);
    sub_10051B3EC((uint64_t)v13, (uint64_t)v12, (uint64_t *)&unk_101683E20);
    char v15 = 1;
    sub_10093C8F4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12[0]) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v12[0] = *(void *)(v3 + 368);
    char v15 = 3;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

BOOL sub_100F3AD58(char *a1, char *a2)
{
  return qword_1011BD428[*a1] == qword_1011BD428[*a2];
}

Swift::Int sub_100F3AD7C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BD428[v1]);
  return Hasher._finalize()();
}

void sub_100F3ADCC()
{
  Hasher._combine(_:)(qword_1011BD428[*v0]);
}

Swift::Int sub_100F3AE04()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BD428[v1]);
  return Hasher._finalize()();
}

void sub_100F3AE50(void *a1@<X8>)
{
  *a1 = qword_1011BD428[*v1];
}

unint64_t sub_100F3AE68()
{
  unint64_t result = 0x6144656B6F727473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6144776F64616873;
      break;
    case 2:
      unint64_t result = 0x615272656E726F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100F3AF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100F3CF48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100F3AF2C()
{
  return qword_1011BD428[*v0];
}

void sub_100F3AF44(void *a1@<X8>)
{
  *a1 = &off_101502F68;
}

uint64_t sub_100F3AF54(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100F3CD34();
  unint64_t v5 = sub_100F3CD8C();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100F3AFAC(uint64_t a1)
{
  unint64_t v2 = sub_100F3CD8C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100F3AFE8(uint64_t a1)
{
  unint64_t v2 = sub_100F3CD8C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100F3B024()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100F3B02C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 368) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100F3B058())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100F3B078(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_100F3AB04((uint64_t)v4, (uint64_t)__dst) & 1;
}

void *sub_100F3B0D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100F3D130(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x178uLL);
  }
  return result;
}

uint64_t sub_100F3B124(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_100F3AB08(a1);
}

uint64_t sub_100F3B178(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100F3D5E8();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100F3B1CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100F3D5E8();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100F3B220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100F3CC24();
  unint64_t v7 = sub_100F3D63C();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100F3B290(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100F3D5E8();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100F3B2DC()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100F3B32C()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100F3B374(uint64_t a1)
{
  unint64_t v2 = sub_100F3CEF4();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100F3B3C0(uint64_t a1, uint64_t a2)
{
  sub_10051B3EC(a1, (uint64_t)v37, (uint64_t *)&unk_101685110);
  sub_10051B3EC(a2, (uint64_t)v38, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v37, (uint64_t)v39, (uint64_t *)&unk_101685110);
  if (sub_100556850((uint64_t)v39) == 1)
  {
    sub_10051B3EC((uint64_t)v38, (uint64_t)v30, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)v30) == 1) {
      goto LABEL_7;
    }
LABEL_5:
    sub_10051B3EC((uint64_t)v37, (uint64_t)v30, (uint64_t *)&unk_101685110);
    sub_10051B3EC((uint64_t)v38, (uint64_t)&v32, (uint64_t *)&unk_101685110);
    sub_100AA0D80(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
    sub_100AA0D80(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
    sub_100556868((uint64_t)v30);
    goto LABEL_15;
  }
  sub_10051B3EC((uint64_t)v38, (uint64_t)v30, (uint64_t *)&unk_101685110);
  if (sub_100556850((uint64_t)v30) == 1) {
    goto LABEL_5;
  }
  sub_10051B3EC((uint64_t)v37, (uint64_t)v8, (uint64_t *)&unk_101685110);
  v33[11] = v8[11];
  v33[12] = v8[12];
  v33[13] = v8[13];
  v33[7] = v8[7];
  v33[8] = v8[8];
  v33[9] = v8[9];
  v33[10] = v8[10];
  v33[3] = v8[3];
  v33[4] = v8[4];
  v33[5] = v8[5];
  v33[6] = v8[6];
  v33[0] = v8[0];
  v33[1] = v8[1];
  uint64_t v34 = v9;
  v33[2] = v8[2];
  sub_10051B3EC((uint64_t)v38, (uint64_t)&v10, (uint64_t *)&unk_101685110);
  v35[11] = v21;
  v35[12] = v22;
  v35[13] = v23;
  v35[7] = v17;
  v35[8] = v18;
  v35[9] = v19;
  v35[10] = v20;
  v35[3] = v13;
  v35[4] = v14;
  v35[5] = v15;
  v35[6] = v16;
  v35[0] = v10;
  v35[1] = v11;
  uint64_t v36 = v24;
  v35[2] = v12;
  sub_100AA0D80(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
  sub_100AA0D80(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
  char v4 = sub_100A1CC04(v33, v35);
  sub_100AA0D80(v38, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
  sub_100AA0D80(v37, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
  if ((v4 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_7:
  sub_10051B3EC(a1 + 232, (uint64_t)v28, (uint64_t *)&unk_101683E20);
  sub_10051B3EC(a2 + 232, (uint64_t)v29, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v28, (uint64_t)v8, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)v8) != 1)
  {
    sub_10051B3EC((uint64_t)v29, (uint64_t)v27, (uint64_t *)&unk_101683E20);
    if (sub_10068F2EC((uint64_t)v27) == 1) {
      goto LABEL_11;
    }
    sub_10051B3EC((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_101683E20);
    long long v14 = v25[4];
    long long v15 = v25[5];
    long long v16 = v25[6];
    long long v17 = v25[7];
    long long v10 = v25[0];
    long long v11 = v25[1];
    long long v12 = v25[2];
    long long v13 = v25[3];
    sub_10051B3EC((uint64_t)v29, (uint64_t)v26, (uint64_t *)&unk_101683E20);
    v30[4] = v26[4];
    void v30[5] = v26[5];
    v30[6] = v26[6];
    v30[7] = v26[7];
    v30[0] = v26[0];
    v30[1] = v26[1];
    v30[2] = v26[2];
    v30[3] = v26[3];
    sub_100EC257C(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
    sub_100EC257C(v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
    char v5 = sub_10093C18C(&v10, v30);
    sub_100EC257C(v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A0B8);
    sub_100EC257C(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A0B8);
    if (v5) {
      goto LABEL_13;
    }
LABEL_15:
    char v6 = 0;
    return v6 & 1;
  }
  sub_10051B3EC((uint64_t)v29, (uint64_t)v30, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)v30) != 1)
  {
LABEL_11:
    sub_10051B3EC((uint64_t)v28, (uint64_t)v30, (uint64_t *)&unk_101683E20);
    sub_10051B3EC((uint64_t)v29, (uint64_t)&v31, (uint64_t *)&unk_101683E20);
    sub_100EC257C(v28, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
    sub_100EC257C(v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
    sub_10068F304((uint64_t)v30);
    goto LABEL_15;
  }
LABEL_13:
  if (*(float *)(a1 + 360) != *(float *)(a2 + 360)) {
    goto LABEL_15;
  }
  char v6 = sub_100ED60AC(*(void *)(a1 + 368), *(void *)(a2 + 368));
  return v6 & 1;
}

unint64_t sub_100F3B830(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  __chkstk_darwin(v3, v4);
  char v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v26 = (unint64_t)_swiftEmptyArrayStorage;
  v23[1] = a1;
  sub_10051B3EC(a1, (uint64_t)v27, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v27, (uint64_t)v30, (uint64_t *)&unk_101685110);
  id v7 = 0;
  if (sub_100556850((uint64_t)v30) != 1)
  {
    v28[12] = v30[12];
    v28[13] = v30[13];
    uint64_t v29 = v31;
    v28[8] = v30[8];
    v28[9] = v30[9];
    v28[10] = v30[10];
    v28[11] = v30[11];
    v28[4] = v30[4];
    v28[5] = v30[5];
    v28[6] = v30[6];
    v28[7] = v30[7];
    v28[0] = v30[0];
    v28[1] = v30[1];
    v28[2] = v30[2];
    v28[3] = v30[3];
    id v7 = sub_100A1E370((uint64_t)v28, 0);
  }
  id v8 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetStroke());
  uint64_t v9 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  long long v10 = *(void (**)(uint64_t))(**(void **)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  long long v11 = v1;
  v23[0] = v1;
  long long v12 = v11;
  uint64_t v13 = swift_retain();
  v10(v13);
  swift_release();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  uint64_t v15 = v25;
  uint64_t v24 = *(void *)(v24 + 8);
  ((void (*)(char *, uint64_t))v24)(v6, v25);
  [v8 initWithId:isa stroke:v7];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v16 = sub_100F3A940();
  id v17 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetShadow());
  long long v18 = *(void (**)(uint64_t))(**(void **)(v23[0] + v9) + 256);
  long long v19 = v12;
  uint64_t v20 = swift_retain();
  v18(v20);
  swift_release();
  Class v21 = UUID._bridgeToObjectiveC()().super.isa;
  ((void (*)(char *, uint64_t))v24)(v6, v15);
  [v17 initWithId:v21 shadow:v16];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return v26;
}

uint64_t destroy for CRLMediaPresetData(void *a1)
{
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[18])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (a1[25])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (a1[39])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLMediaPresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 96);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 36) = *(void *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v4;
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    char v6 = (_OWORD *)(a2 + 144);
    uint64_t v5 = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(void *)(a1 + 144) = v5;
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *v6;
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    uint64_t v14 = *(void *)(a2 + 200);
    swift_bridgeObjectRetain();
    if (v14)
    {
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v14;
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v15;
    }
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v7;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v8 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v8;
    long long v9 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v9;
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  id v16 = (_DWORD *)(a1 + 232);
  id v17 = (_DWORD *)(a2 + 232);
  uint64_t v18 = *(void *)(a2 + 312);
  if (v18)
  {
    *id v16 = *v17;
    *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    *(void *)(a1 + 252) = *(void *)(a2 + 252);
    *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = v18;
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
    uint64_t v19 = *(void *)(a2 + 352);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v20;
    long long v21 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v21;
    long long v22 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)id v16 = *(_OWORD *)v17;
    *(_OWORD *)(a1 + 248) = v22;
    long long v23 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v23;
  }
  *(_DWORD *)(a1 + 360) = *(_DWORD *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLMediaPresetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[12];
  if (*(void *)(a1 + 96))
  {
    if (v4)
    {
      uint64_t v5 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v5;
      LODWORD(v5) = *((_DWORD *)a2 + 4);
      *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
      *(_DWORD *)(a1 + 16) = v5;
      uint64_t v6 = a2[3];
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      *(void *)(a1 + 48) = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      *(void *)(a1 + 72) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      *(void *)(a1 + 88) = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v7 = (_OWORD *)(a1 + 144);
      uint64_t v8 = *(void *)(a1 + 144);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      uint64_t v9 = a2[14];
      *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
      *(void *)(a1 + 112) = v9;
      uint64_t v10 = a2[16];
      *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
      *(void *)(a1 + 128) = v10;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      long long v12 = a2 + 18;
      uint64_t v11 = a2[18];
      if (v8)
      {
        if (v11)
        {
          *(void *)(a1 + 144) = v11;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
          *(void *)(a1 + 160) = a2[20];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19AFC(a1 + 144);
          uint64_t v41 = a2[20];
          _OWORD *v7 = *v12;
          *(void *)(a1 + 160) = v41;
        }
      }
      else if (v11)
      {
        *(void *)(a1 + 144) = v11;
        *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
        *(void *)(a1 + 160) = a2[20];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v46 = *v12;
        *(void *)(a1 + 160) = a2[20];
        _OWORD *v7 = v46;
      }
      uint64_t v47 = a2[21];
      *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
      *(void *)(a1 + 168) = v47;
      *(void *)(a1 + 184) = a2[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v48 = (_OWORD *)(a1 + 192);
      uint64_t v49 = a2 + 24;
      uint64_t v50 = a2[25];
      if (*(void *)(a1 + 200))
      {
        if (v50)
        {
          *(void *)(a1 + 192) = a2[24];
          *(void *)(a1 + 200) = a2[25];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
          *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
          *(void *)(a1 + 216) = a2[27];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19B30(a1 + 192);
          long long v51 = *((_OWORD *)a2 + 13);
          *uint64_t v48 = *v49;
          *(_OWORD *)(a1 + 208) = v51;
        }
      }
      else if (v50)
      {
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = a2[25];
        *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
        *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
        *(void *)(a1 + 216) = a2[27];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v52 = *((_OWORD *)a2 + 13);
        *uint64_t v48 = *v49;
        *(_OWORD *)(a1 + 208) = v52;
      }
      *(void *)(a1 + 224) = a2[28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B409D8(a1);
      long long v20 = *((_OWORD *)a2 + 1);
      long long v19 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v20;
      *(_OWORD *)(a1 + 32) = v19;
      long long v21 = *((_OWORD *)a2 + 6);
      long long v23 = *((_OWORD *)a2 + 3);
      long long v22 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v21;
      *(_OWORD *)(a1 + 48) = v23;
      *(_OWORD *)(a1 + 64) = v22;
      long long v24 = *((_OWORD *)a2 + 10);
      long long v26 = *((_OWORD *)a2 + 7);
      long long v25 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v24;
      *(_OWORD *)(a1 + 112) = v26;
      *(_OWORD *)(a1 + 128) = v25;
      long long v28 = *((_OWORD *)a2 + 12);
      long long v27 = *((_OWORD *)a2 + 13);
      long long v29 = *((_OWORD *)a2 + 11);
      *(void *)(a1 + 224) = a2[28];
      *(_OWORD *)(a1 + 192) = v28;
      *(_OWORD *)(a1 + 208) = v27;
      *(_OWORD *)(a1 + 176) = v29;
    }
  }
  else if (v4)
  {
    uint64_t v13 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)a1 = v13;
    LODWORD(v13) = *((_DWORD *)a2 + 4);
    *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
    *(_DWORD *)(a1 + 16) = v13;
    uint64_t v14 = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    *(void *)(a1 + 48) = a2[6];
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(void *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = a2[12];
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    uint64_t v15 = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 112) = v15;
    uint64_t v16 = a2[16];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(void *)(a1 + 128) = v16;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    uint64_t v18 = (long long *)(a2 + 18);
    uint64_t v17 = a2[18];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *(void *)(a1 + 144) = v17;
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      *(void *)(a1 + 160) = a2[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v42 = *v18;
      *(void *)(a1 + 160) = a2[20];
      *(_OWORD *)(a1 + 144) = v42;
    }
    uint64_t v43 = a2[21];
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(void *)(a1 + 168) = v43;
    *(void *)(a1 + 184) = a2[23];
    uint64_t v44 = a2[25];
    swift_bridgeObjectRetain();
    if (v44)
    {
      *(void *)(a1 + 192) = a2[24];
      *(void *)(a1 + 200) = a2[25];
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
      *(void *)(a1 + 216) = a2[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v45 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v45;
    }
    *(void *)(a1 + 224) = a2[28];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *(_OWORD *)a2;
    long long v31 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v31;
    *(_OWORD *)a1 = v30;
    long long v32 = *((_OWORD *)a2 + 3);
    long long v33 = *((_OWORD *)a2 + 4);
    long long v34 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v34;
    *(_OWORD *)(a1 + 48) = v32;
    *(_OWORD *)(a1 + 64) = v33;
    long long v35 = *((_OWORD *)a2 + 7);
    long long v36 = *((_OWORD *)a2 + 8);
    long long v37 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v37;
    *(_OWORD *)(a1 + 112) = v35;
    *(_OWORD *)(a1 + 128) = v36;
    long long v38 = *((_OWORD *)a2 + 11);
    long long v39 = *((_OWORD *)a2 + 12);
    long long v40 = *((_OWORD *)a2 + 13);
    *(void *)(a1 + 224) = a2[28];
    *(_OWORD *)(a1 + 192) = v39;
    *(_OWORD *)(a1 + 208) = v40;
    *(_OWORD *)(a1 + 176) = v38;
  }
  uint64_t v53 = (_DWORD *)(a1 + 232);
  uint64_t v54 = (int *)(a2 + 29);
  uint64_t v55 = a2[39];
  if (*(void *)(a1 + 312))
  {
    if (v55)
    {
      int v56 = *v54;
      *(unsigned char *)(a1 + 236) = *((unsigned char *)a2 + 236);
      *uint64_t v53 = v56;
      uint64_t v57 = a2[30];
      *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
      *(void *)(a1 + 240) = v57;
      *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
      *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
      *(_DWORD *)(a1 + 260) = *((_DWORD *)a2 + 65);
      *(void *)(a1 + 264) = a2[33];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
      *(_DWORD *)(a1 + 284) = *((_DWORD *)a2 + 71);
      *(void *)(a1 + 288) = a2[36];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
      *(void *)(a1 + 304) = a2[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 312) = a2[39];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 320) = *((_DWORD *)a2 + 80);
      *(_DWORD *)(a1 + 324) = *((_DWORD *)a2 + 81);
      *(_DWORD *)(a1 + 328) = *((_DWORD *)a2 + 82);
      *(_DWORD *)(a1 + 332) = *((_DWORD *)a2 + 83);
      *(_DWORD *)(a1 + 336) = *((_DWORD *)a2 + 84);
      *(void *)(a1 + 344) = a2[43];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 352) = a2[44];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B40A2C(a1 + 232);
      long long v60 = *(_OWORD *)(a2 + 35);
      long long v62 = *(_OWORD *)v54;
      long long v61 = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
      *(_OWORD *)(a1 + 280) = v60;
      *(_OWORD *)uint64_t v53 = v62;
      *(_OWORD *)(a1 + 248) = v61;
      long long v63 = *(_OWORD *)(a2 + 43);
      long long v65 = *(_OWORD *)(a2 + 37);
      long long v64 = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
      *(_OWORD *)(a1 + 344) = v63;
      *(_OWORD *)(a1 + 296) = v65;
      *(_OWORD *)(a1 + 312) = v64;
    }
  }
  else if (v55)
  {
    int v58 = *v54;
    *(unsigned char *)(a1 + 236) = *((unsigned char *)a2 + 236);
    *uint64_t v53 = v58;
    uint64_t v59 = a2[30];
    *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
    *(void *)(a1 + 240) = v59;
    *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
    *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
    *(_DWORD *)(a1 + 260) = *((_DWORD *)a2 + 65);
    *(void *)(a1 + 264) = a2[33];
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
    *(_DWORD *)(a1 + 284) = *((_DWORD *)a2 + 71);
    *(void *)(a1 + 288) = a2[36];
    *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
    *(void *)(a1 + 304) = a2[38];
    *(void *)(a1 + 312) = a2[39];
    *(_DWORD *)(a1 + 320) = *((_DWORD *)a2 + 80);
    *(_DWORD *)(a1 + 324) = *((_DWORD *)a2 + 81);
    *(_DWORD *)(a1 + 328) = *((_DWORD *)a2 + 82);
    *(_DWORD *)(a1 + 332) = *((_DWORD *)a2 + 83);
    *(_DWORD *)(a1 + 336) = *((_DWORD *)a2 + 84);
    *(void *)(a1 + 344) = a2[43];
    *(void *)(a1 + 352) = a2[44];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v66 = *(_OWORD *)v54;
    long long v67 = *(_OWORD *)(a2 + 31);
    long long v68 = *(_OWORD *)(a2 + 35);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 280) = v68;
    *(_OWORD *)uint64_t v53 = v66;
    *(_OWORD *)(a1 + 248) = v67;
    long long v69 = *(_OWORD *)(a2 + 37);
    long long v70 = *(_OWORD *)(a2 + 39);
    long long v71 = *(_OWORD *)(a2 + 43);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 344) = v71;
    *(_OWORD *)(a1 + 296) = v69;
    *(_OWORD *)(a1 + 312) = v70;
  }
  *(_DWORD *)(a1 + 360) = *((_DWORD *)a2 + 90);
  *(void *)(a1 + 368) = a2[46];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for CRLMediaPresetData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x178uLL);
}

uint64_t assignWithTake for CRLMediaPresetData(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 96)) {
    goto LABEL_7;
  }
  if (!*(void *)(a2 + 96))
  {
    sub_100B409D8(a1);
LABEL_7:
    long long v6 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v6;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    long long v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    long long v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    long long v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_16;
  }
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 144);
  uint64_t v5 = *(void *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(void *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_100A19AFC(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
LABEL_10:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 200))
  {
LABEL_14:
    long long v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    goto LABEL_15;
  }
  uint64_t v13 = *(void *)(a2 + 200);
  if (!v13)
  {
    sub_100A19B30(a1 + 192);
    goto LABEL_14;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_15:
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v15 = (_OWORD *)(a1 + 232);
  uint64_t v16 = (_OWORD *)(a2 + 232);
  if (!*(void *)(a1 + 312))
  {
LABEL_20:
    long long v17 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v17;
    long long v18 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v18;
    long long v19 = *(_OWORD *)(a2 + 248);
    _OWORD *v15 = *v16;
    *(_OWORD *)(a1 + 248) = v19;
    long long v20 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v20;
    goto LABEL_21;
  }
  if (!*(void *)(a2 + 312))
  {
    sub_100B40A2C(a1 + 232);
    goto LABEL_20;
  }
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 252) = *(void *)(a2 + 252);
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_bridgeObjectRelease();
LABEL_21:
  *(_DWORD *)(a1 + 360) = *(_DWORD *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLMediaPresetData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 376)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 368);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLMediaPresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 376) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 368) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 376) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMediaPresetData()
{
  return &type metadata for CRLMediaPresetData;
}

unint64_t sub_100F3CB74()
{
  unint64_t result = qword_1016A26C8;
  if (!qword_1016A26C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A26C8);
  }
  return result;
}

unint64_t sub_100F3CBCC()
{
  unint64_t result = qword_1016A26D0;
  if (!qword_1016A26D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A26D0);
  }
  return result;
}

unint64_t sub_100F3CC24()
{
  unint64_t result = qword_1016A26D8;
  if (!qword_1016A26D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A26D8);
  }
  return result;
}

unint64_t sub_100F3CC84()
{
  unint64_t result = qword_1016A26E0;
  if (!qword_1016A26E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A26E0);
  }
  return result;
}

unint64_t sub_100F3CCDC()
{
  unint64_t result = qword_1016A26E8;
  if (!qword_1016A26E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A26E8);
  }
  return result;
}

unint64_t sub_100F3CD34()
{
  unint64_t result = qword_1016A26F0;
  if (!qword_1016A26F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A26F0);
  }
  return result;
}

unint64_t sub_100F3CD8C()
{
  unint64_t result = qword_1016A26F8;
  if (!qword_1016A26F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A26F8);
  }
  return result;
}

unint64_t sub_100F3CDE4()
{
  unint64_t result = qword_1016A2700;
  if (!qword_1016A2700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2700);
  }
  return result;
}

unint64_t sub_100F3CE3C()
{
  unint64_t result = qword_1016A2708;
  if (!qword_1016A2708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2708);
  }
  return result;
}

unint64_t sub_100F3CE94()
{
  unint64_t result = qword_1016A2710;
  if (!qword_1016A2710)
  {
    sub_100522D34(&qword_1016A2718);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2710);
  }
  return result;
}

unint64_t sub_100F3CEF4()
{
  unint64_t result = qword_1016A2720;
  if (!qword_1016A2720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2720);
  }
  return result;
}

uint64_t sub_100F3CF48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144656B6F727473 && a2 == 0xEA00000000006174;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144776F64616873 && a2 == 0xEA00000000006174 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void *sub_100F3D130@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016A2728);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[46] = _swiftEmptyDictionarySingleton;
  uint64_t v10 = a1[3];
  uint64_t v16 = a1;
  sub_10050F848(a1, v10);
  sub_100F3CD8C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = 0;
    sub_100A1D594();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC((uint64_t)&v25, (uint64_t)v23, (uint64_t *)&unk_101685110);
    sub_10051B3EC((uint64_t)v23, (uint64_t)v26, (uint64_t *)&unk_101685110);
    char v21 = 1;
    sub_100AA0D80(v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
    sub_10093C89C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC((uint64_t)&v22, (uint64_t)v20, (uint64_t *)&unk_101683E20);
    sub_10051B3EC((uint64_t)v20, (uint64_t)&v26[29], (uint64_t *)&unk_101683E20);
    v18[0] = 2;
    sub_100EC257C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
    KeyedDecodingContainer.decode(_:forKey:)();
    int v12 = v11;
    LODWORD(v26[45]) = v11;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    v18[383] = 3;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v13 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26[46] = v13;
    sub_10051B3EC((uint64_t)v23, (uint64_t)v17, (uint64_t *)&unk_101685110);
    sub_10051B3EC((uint64_t)v20, (uint64_t)&v17[29], (uint64_t *)&unk_101683E20);
    LODWORD(v17[45]) = v12;
    v17[46] = v13;
    sub_100B41F8C((uint64_t)v17);
    swift_bridgeObjectRelease();
    sub_100EC257C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A0B8);
    sub_100AA0D80(v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
    memcpy(v18, v26, 0x178uLL);
    sub_100B4209C((uint64_t)v18);
    return memcpy(a2, v17, 0x178uLL);
  }
}

unint64_t sub_100F3D5E8()
{
  unint64_t result = qword_1016A2738;
  if (!qword_1016A2738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2738);
  }
  return result;
}

unint64_t sub_100F3D63C()
{
  unint64_t result = qword_1016A2740;
  if (!qword_1016A2740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2740);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLMediaPresetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100F3D75CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMediaPresetData.CodingKeys()
{
  return &type metadata for CRLMediaPresetData.CodingKeys;
}

unint64_t sub_100F3D798()
{
  unint64_t result = qword_1016A2748;
  if (!qword_1016A2748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2748);
  }
  return result;
}

uint64_t sub_100F3D7EC()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v0 - 8, v1);
  int v3 = (char *)&v15[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v4 = sub_1004C840C(0);
  id v6 = [self pathSourceForShapeType:0 naturalSize:v4 v5];
  id v7 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithString:v8];

  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  sub_1005C6DF0((uint64_t)v16);
  sub_10051B3EC((uint64_t)v16, (uint64_t)v15, &qword_10168D670);
  id v11 = v6;
  id v12 = v9;
  sub_100F40DC0(0, 0, (uint64_t)v6, 0, 0, 0, 1, 0, 1, (void *)1, (void *)1, (void *)1, (void *)1, (char *)v9, v3, v15, 0, 0, 0);

  sub_100522F00((uint64_t)v3, (uint64_t *)&unk_101674610);
  type metadata accessor for CRLWPShapeItem();
  return swift_dynamicCastClassUnconditional();
}

id sub_100F3DA18(uint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, unsigned __int8 a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14)
{
  int v40 = a7;
  int v46 = a4;
  uint64_t v47 = a3;
  uint64_t v48 = a1;
  long long v45 = a13;
  uint64_t v44 = a12;
  uint64_t v43 = a11;
  long long v42 = a10;
  int v39 = a9;
  unsigned int v41 = a2 & 1;
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v18 - 8, v19);
  char v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for AttributedString();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  long long v30 = (char *)&v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0 || !sub_100F47148(v48))
  {
    sub_100522E9C(a14, (uint64_t)v25, &qword_101678470);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
    {
      AttributedString.init(stringLiteral:)();
      sub_100522F00((uint64_t)v25, &qword_101678470);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v30, v25, v26);
    }
    uint64_t v32 = a5;
    char v34 = v39;
    char v33 = v40;
    sub_10050BF48(0, (unint64_t *)&qword_10168D3B0);
    long long v31 = (char *)NSAttributedString.init(_:)();
  }
  else
  {
    long long v31 = 0;
    uint64_t v32 = a5;
    char v34 = v39;
    char v33 = v40;
  }
  uint64_t v35 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v21, 1, 1, v35);
  sub_1005C6DF0((uint64_t)v49);
  sub_10051B3EC((uint64_t)v49, (uint64_t)v50, &qword_10168D670);
  id v36 = sub_100F40DC0(v48, v41, v47, v46 & 1, v32, a6, v33 & 1, a8, v34 & 1, v42, v43, v44, v45, v31, v21, v50, 0, 0, 0);

  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674610);
  return v36;
}

uint64_t sub_100F3DD74(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = sub_1004C840C(0);
  id v10 = [self pathSourceForShapeType:0 naturalSize:v8 v9];
  sub_100F472F0(a1, (uint64_t)v7, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v11 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 0, 1, v11);
  id v12 = v10;
  sub_100F40DC0(0, 0, (uint64_t)v10, 0, 0, 0, 1, 0, 1, (void *)1, (void *)1, (void *)1, (void *)1, 0, v7, a2, 0, 0, 0);

  sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674610);
  type metadata accessor for CRLWPShapeItem();
  return swift_dynamicCastClassUnconditional();
}

uint64_t sub_100F3DF34(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(void **)(*(void *)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board)
                            + OBJC_IVAR____TtC8Freeform8CRLBoard_store)
                + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  double v9 = (objc_class *)type metadata accessor for CRLUUIDRemapHelper();
  id v10 = objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_objectUUIDMap] = _swiftEmptyDictionarySingleton;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap] = _swiftEmptyDictionarySingleton;
  v10[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs] = 1;
  v16.receiver = v10;
  v16.Class super_class = v9;
  id v11 = v7;
  [super init];
  uint64_t v13 = (*(uint64_t (**)(void *, char *, void, id))((swift_isaMask & *a1) + 0x1F0))(v7, v6, 0, v12);
  sub_100522F00((uint64_t)v6, (uint64_t *)&unk_101674520);

  return v13;
}

id sub_100F3E11C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v31 = a2;
  uint64_t v6 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v6 - 8, v7);
  double v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  __chkstk_darwin(v14 - 8, v15);
  long long v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  uint64_t v19 = *(char **)(v18 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v20 = *(void (**)(uint64_t))(**(void **)&v19[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  id v21 = *(id *)(v18 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  uint64_t v22 = v19;
  uint64_t v23 = swift_retain();
  v20(v23);

  swift_release();
  sub_100F472F0(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100F472F0(v31, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  id v24 = a3;
  id v25 = sub_100A5DE54((uint64_t)v21, (uint64_t)v17, (uint64_t)v13, (uint64_t)v9, a3);
  uint64_t v26 = self;
  id v27 = v25;
  id v28 = [v26 defaultShadow];
  sub_10088B0DC(v28);

  return v27;
}

id sub_100F3E34C(void *a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (objc_class *)type metadata accessor for CRLGroupItem();
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  uint64_t v10 = *(char **)(v9 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v11 = *(void (**)(uint64_t))(**(void **)&v10[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  id v12 = *(id *)(v9 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  uint64_t v13 = v10;
  uint64_t v14 = swift_retain();
  v11(v14);

  swift_release();
  id v15 = objc_allocWithZone(v8);
  id v16 = a1;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v18 = [v15 initWithStore:v12 parentContainerUUID:isa geometry:v16];

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v18;
}

id sub_100F3E518(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  id v33 = a1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v9 - 8, v10);
  id v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  __chkstk_darwin(v13 - 8, v14);
  id v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  id v18 = *(char **)(v17 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v19 = *(void (**)(uint64_t))(**(void **)&v18[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  id v20 = *(id *)(v17 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  id v21 = v18;
  uint64_t v22 = swift_retain();
  v19(v22);

  swift_release();
  sub_100522E9C(v31, (uint64_t)v12, (uint64_t *)&unk_10167D2B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v32, v4);
  id v23 = v33;
  id v24 = v33;
  id v25 = sub_10094D2F8((uint64_t)v20, (uint64_t)v16, (uint64_t)v12, (uint64_t)v8, v23);
  uint64_t v26 = self;
  id v27 = v25;
  id v28 = [v26 defaultShadow];
  sub_10088B0DC(v28);

  return v27;
}

id sub_100F3E7A0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v28 = a4;
  v27.n128_u64[0] = a3;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  __chkstk_darwin(v15 - 8, v16);
  id v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  id v20 = *(char **)(v19 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  id v21 = *(void (**)(uint64_t))(**(void **)&v20[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  id v22 = *(id *)(v19 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  id v23 = v20;
  uint64_t v24 = swift_retain();
  v21(v24);

  swift_release();
  sub_100F472F0(a2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522E9C(v27.n128_i64[0], (uint64_t)v10, (uint64_t *)&unk_10167D2B0);
  __n128 v27 = (__n128)matrix_identity_float4x4.columns[3];
  id v25 = a1;
  return sub_100732850((uint64_t)v22, (uint64_t)v18, a1, (uint64_t)v14, (uint64_t)v10, v28, v27);
}

uint64_t sub_100F3E9C8(char *a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = sub_1004C840C(0);
  id v8 = [self pathSourceForShapeType:0 naturalSize:v6, v7];
  uint64_t v9 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  sub_1005C6DF0((uint64_t)v13);
  sub_10051B3EC((uint64_t)v13, (uint64_t)v12, &qword_10168D670);
  id v10 = v8;
  sub_100F40DC0(0, 0, (uint64_t)v8, 0, 0, 0, 1, 0, 1, (void *)1, (void *)1, (void *)1, (void *)1, a1, v5, v12, 0, 0, 0);

  sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101674610);
  type metadata accessor for CRLWPShapeItem();
  return swift_dynamicCastClassUnconditional();
}

void *sub_100F3EB94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = (void *)__chkstk_darwin(a1, a2);
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5 - 8, v6);
  id v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [self pathSourceForShapeType:3 naturalSize:200.0, 200.0];
  [v9 naturalSize];
  id v12 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithSize:v10, v11];
  type metadata accessor for CRLBoardInsertStyleData(0);
  sub_1005057FC(&qword_101672450);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v128, (uint64_t)v143, &qword_101672448);
  sub_10051B3EC((uint64_t)v143, (uint64_t)v144, &qword_101672448);
  int v13 = sub_10089B950((uint64_t)v144);
  id v88 = v9;
  id v89 = v4;
  id v87 = v12;
  if (v13 == 1)
  {
    uint64_t v59 = 0;
    int v57 = 0;
    int v61 = 0;
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v74 = 0;
    uint64_t v75 = 0;
    uint64_t v72 = 0;
    uint64_t v73 = 0;
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    int v80 = 0;
    int v82 = 0;
    LODWORD(v83) = 0;
    uint64_t v84 = 0;
    uint64_t v85 = 0;
    unint64_t v86 = &_swiftEmptyDictionarySingleton;
    uint64_t v81 = -1;
    int v62 = 255;
    uint64_t v60 = 2;
    char v14 = 1;
    uint64_t v15 = 5;
    int v56 = 1;
    int v58 = 255;
    uint64_t v65 = 2;
    char v16 = 1;
  }
  else
  {
    uint64_t v85 = v175;
    unint64_t v86 = v177;
    char v16 = v176;
    uint64_t v84 = v173;
    uint64_t v81 = v171;
    int v82 = v172;
    LODWORD(v83) = v174;
    uint64_t v65 = v169;
    int v80 = v170;
    uint64_t v78 = v156;
    uint64_t v79 = v155;
    uint64_t v76 = v158;
    uint64_t v77 = v157;
    uint64_t v74 = v160;
    uint64_t v75 = v159;
    uint64_t v72 = v162;
    uint64_t v73 = v161;
    uint64_t v70 = v164;
    uint64_t v71 = v163;
    uint64_t v68 = v166;
    uint64_t v69 = v165;
    uint64_t v66 = v168;
    uint64_t v67 = v167;
    uint64_t v63 = v151;
    uint64_t v64 = v153;
    uint64_t v60 = v150;
    int v56 = v149;
    char v14 = v148;
    int v61 = v147;
    int v62 = v152;
    uint64_t v59 = v145[0];
    uint64_t v15 = v145[1];
    int v57 = v146;
    int v58 = v154;
    sub_1005DF3EC((uint64_t)v145);
  }
  char v93 = v14;
  char v92 = v16;
  type metadata accessor for CRLWPStickyNoteItem();
  uint64_t v17 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  id v18 = *(char **)&v17[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  uint64_t v19 = *(void (**)(uint64_t))(**(void **)&v18[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  id v20 = *(id *)&v17[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
  id v21 = v18;
  uint64_t v22 = swift_retain();
  v19(v22);

  swift_release();
  v94[0] = v59;
  v94[1] = v15;
  char v95 = v57;
  int v96 = v61;
  char v97 = v93;
  char v98 = v56;
  char v99 = v60;
  uint64_t v100 = v63;
  char v101 = v62;
  uint64_t v102 = v64;
  char v103 = v58;
  uint64_t v104 = v79;
  uint64_t v105 = v78;
  uint64_t v106 = v77;
  uint64_t v107 = v76;
  uint64_t v108 = v75;
  uint64_t v109 = v74;
  uint64_t v110 = v73;
  uint64_t v111 = v72;
  uint64_t v112 = v71;
  uint64_t v113 = v70;
  uint64_t v114 = v69;
  uint64_t v115 = v68;
  uint64_t v116 = v67;
  uint64_t v117 = v66;
  uint64_t v118 = v65;
  char v119 = v80;
  uint64_t v120 = v81;
  char v121 = v82;
  uint64_t v122 = v84;
  char v123 = v83;
  uint64_t v124 = v85;
  char v125 = v92;
  uint64_t v126 = v86;
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v94, v23);
  sub_10051B3EC((uint64_t)v94, (uint64_t)v142, &qword_10168D670);
  id v24 = v89;
  id v25 = v87;
  id v26 = v88;
  __n128 v27 = (void *)sub_100F9A760(v20, (uint64_t)v8, v24, v25, v26, v142, 3);
  sub_10051B3EC((uint64_t)v143, (uint64_t)v127, &qword_101672448);
  if (sub_10089B950((uint64_t)v127) == 1)
  {
    id v28 = [objc_allocWithZone((Class)CRLColor) initWithWhite:0.0 alpha:0.35];
    id v29 = objc_allocWithZone((Class)CRLCurvedShadow);
    id v30 = v27;
    id v31 = [v29 initWithOffset:v28 angle:1 radius:1.0 curve:90.0 opacity:15.0 color:-0.123095 enabled:1.0];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v33 = (void *)Strong;
      type metadata accessor for CRLFreehandDrawingItem();
      if ([v33 isKindOfClass:swift_getObjCClassFromMetadata()])
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
      }
    }
    sub_10088B0DC(v31);
  }
  else
  {
    memcpy(v128, v127, sizeof(v128));
    uint64_t v34 = *(void *)&v127[328];
    if (*(void *)&v127[328])
    {
      id v88 = v26;
      id v89 = v25;
      uint64_t v35 = *(void *)&v127[320];
      uint64_t v36 = *(void *)&v127[304];
      uint64_t v84 = *(void *)&v127[296];
      uint64_t v85 = *(void *)&v127[312];
      uint64_t v37 = *(void *)&v127[288];
      uint64_t v38 = *(void *)&v127[280];
      int v39 = v27;
      uint64_t v40 = *(void *)&v127[272];
      long long v83 = *(_OWORD *)&v127[256];
      uint64_t v41 = *(void *)&v127[248];
      id v87 = *(id *)&v127[240];
      unint64_t v86 = (void *)sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
      int v131 = v41;
      char v132 = BYTE4(v41) & 1;
      long long v133 = v83;
      uint64_t v134 = v40;
      __n128 v27 = v39;
      uint64_t v135 = v38;
      uint64_t v136 = v37;
      uint64_t v137 = v84;
      uint64_t v138 = v36;
      uint64_t v139 = v85;
      uint64_t v140 = v35;
      uint64_t v141 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v42 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1007B0B84((uint64_t)&v131);
      if (v87)
      {
        if (qword_10166FB80 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v44 = (id)static OS_os_log.persistence;
        uint64_t v45 = static os_log_type_t.info.getter();
        sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v45, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
      id v46 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v43];

      id v26 = v88;
      id v25 = v89;
    }
    else
    {
      id v46 = 0;
    }
    sub_100A9B548(v46);
    sub_10051B3EC((uint64_t)v127, (uint64_t)v90, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)v90) == 1)
    {
      id v47 = v27;
      id v48 = 0;
    }
    else
    {
      v129[11] = v90[11];
      v129[12] = v90[12];
      v129[13] = v90[13];
      v129[7] = v90[7];
      v129[8] = v90[8];
      v129[9] = v90[9];
      v129[10] = v90[10];
      v129[3] = v90[3];
      v129[4] = v90[4];
      v129[5] = v90[5];
      v129[6] = v90[6];
      v129[0] = v90[0];
      v129[1] = v90[1];
      uint64_t v130 = v91;
      v129[2] = v90[2];
      id v49 = v27;
      id v48 = sub_100A1E370((uint64_t)v129, 0);
    }
    sub_100BC9500(v48);

    id v50 = v27;
    id v51 = sub_100FB1824();
    uint64_t v52 = swift_unknownObjectWeakLoadStrong();
    if (v52)
    {
      uint64_t v53 = (void *)v52;
      type metadata accessor for CRLFreehandDrawingItem();
      if ([v53 isKindOfClass:swift_getObjCClassFromMetadata()])
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
      }
    }
    sub_10088B0DC(v51);

    sub_100F46F18((uint64_t)v143);
    sub_10098AE04();
  }
  return v27;
}

id sub_100F3F60C(void *a1, id a2, uint64_t a3)
{
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v7 - 8, v8);
  double v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLWPShapeItem();
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12) {
    goto LABEL_6;
  }
  int v13 = (char *)v12;
  uint64_t v64 = a3;
  uint64_t v65 = v3;
  id v66 = a2;
  uint64_t v14 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v15 = *(uint64_t (**)(uint64_t))(**(void **)(v12 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                          + 288);
  char v16 = a1;
  uint64_t v17 = swift_retain();
  id v18 = (void *)v15(v17);
  swift_release();
  unsigned int v19 = [v18 widthValid];

  if (!v19
    || (id v20 = *(uint64_t (**)(uint64_t))(**(void **)&v13[v14] + 288),
        uint64_t v21 = swift_retain(),
        uint64_t v22 = (void *)v20(v21),
        swift_release(),
        unsigned int v23 = [v22 heightValid],
        v22,
        !v23)
    || swift_getObjectType() != v11)
  {

    a2 = v66;
    a3 = v64;
LABEL_6:
    uint64_t v24 = type metadata accessor for CRLWPStorageCRDTData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
    sub_1005C6DF0((uint64_t)v102);
    sub_10051B3EC((uint64_t)v102, (uint64_t)v85, &qword_10168D670);
    id v25 = sub_100F40DC0(a3, 0, (uint64_t)a2, 0, 0, 0, 1, 0, 1, (void *)1, (void *)1, (void *)1, (void *)1, 0, v10, v85, 0, 0, 0);
    goto LABEL_7;
  }
  __n128 v27 = *(uint64_t (**)(void))((swift_isaMask & *v16) + 0xE0);
  id v28 = (void *)v27();
  [v28 size];
  double v30 = v29;
  double v32 = v31;

  id v33 = v66;
  [v66 naturalSize];
  if (sub_100934114(v30 / v32, v34 / v35))
  {
    uint64_t v36 = (void *)v27();
    [v36 size];
    double v38 = v37;
    double v40 = v39;
  }
  else
  {
    uint64_t v41 = *(uint64_t (**)(uint64_t))(**(void **)&v13[v14] + 288);
    long long v42 = v16;
    uint64_t v43 = swift_retain();
    id v44 = (void *)v41(v43);

    swift_release();
    [v44 size];
    double v46 = v45;
    double v48 = v47;

    [v33 naturalSize];
    double v51 = sqrt(v46 * v48 / (v49 * v50));
    [v33 naturalSize];
    double v38 = sub_1000646A4(v52, v53, v51);
    double v40 = v54;
  }
  uint64_t v55 = v64;
  [v33 scaleToNaturalSize:v38, v40];
  int v56 = v16;
  sub_100EC3284(v13, 0, (uint64_t)v85);
  long long v79 = v98;
  long long v80 = v99;
  long long v81 = v100;
  uint64_t v82 = v101;
  long long v75 = v94;
  long long v76 = v95;
  long long v77 = v96;
  long long v78 = v97;
  long long v71 = v90;
  long long v72 = v91;
  long long v73 = v92;
  long long v74 = v93;
  long long v67 = v86;
  long long v68 = v87;
  long long v69 = v88;
  long long v70 = v89;
  sub_1005DF3EC((uint64_t)&v67);
  sub_10089B2D0((uint64_t)v85);
  int v57 = v56;
  int v58 = (void *)sub_100BC934C();

  uint64_t v59 = v57;
  uint64_t v60 = (void *)sub_100A9B204();

  uint64_t v61 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v10, 1, 1, v61);
  v83[12] = v79;
  v83[13] = v80;
  v83[14] = v81;
  uint64_t v84 = v82;
  v83[8] = v75;
  v83[9] = v76;
  v83[10] = v77;
  v83[11] = v78;
  v83[4] = v71;
  v83[5] = v72;
  v83[6] = v73;
  v83[7] = v74;
  v83[0] = v67;
  v83[1] = v68;
  v83[2] = v69;
  v83[3] = v70;
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v83, v62);
  sub_10051B3EC((uint64_t)v83, (uint64_t)v102, &qword_10168D670);
  id v25 = sub_100F40DC0(v55, 0, (uint64_t)v33, 1, 0, 0, 1, 0, 1, v58, v60, (void *)1, (void *)1, 0, v10, v102, 0, 0, 0);
  sub_10089B210((uint64_t)&v67);

LABEL_7:
  sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101674610);
  return v25;
}

id sub_100F3FDCC(void *a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  uint64_t v9 = *(char **)(v8 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  double v10 = *(void (**)(uint64_t))(**(void **)&v9[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  id v11 = *(id *)(v8 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  uint64_t v12 = v9;
  uint64_t v13 = swift_retain();
  v10(v13);

  swift_release();
  id v14 = objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingItem());
  id v15 = a1;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v17 = [v14 initWithStore:v11 parentContainerUUID:isa geometry:v15];

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v17;
}

void sub_100F3FFF0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v4, v5);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_101670198 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = sub_100556B74(v8, (uint64_t)qword_10171CB50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, v9, v8);
  double v10 = (void *)(a2 + *(int *)(v4 + 20));
  *double v10 = 0;
  v10[1] = 0xE000000000000000;
  *(void *)(a2 + *(int *)(v4 + 24)) = _swiftEmptyDictionarySingleton;
  sub_1005498A4(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v12);
  sub_1005057FC(&qword_101693DB0);
  type metadata accessor for CRLAssetBackedAssetStorage();
  if (swift_dynamicCast())
  {
    sub_100F472F0(v11 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    swift_release();
    sub_100F47390(a2, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100F47288((uint64_t)v7, a2, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_makeAssetData(from:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 485, (uint64_t)"Asset needs to be a non-readonly asset!", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_makeAssetData(from:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 485);
  }
}

id sub_100F4026C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  id v37 = a1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  __chkstk_darwin(v12 - 8, v13);
  id v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *(char **)(v3 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  id v17 = *(char **)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  id v18 = *(void (**)(uint64_t))(**(void **)&v17[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  id v19 = *(id *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
  id v20 = v17;
  uint64_t v21 = swift_retain();
  v18(v21);

  swift_release();
  sub_100F472F0(v35, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522E9C(v36, (uint64_t)v7, (uint64_t *)&unk_10167D2B0);
  uint64_t v22 = v16;
  id v23 = v37;
  id v24 = v37;
  id v25 = sub_100F4600C((uint64_t)v19, (uint64_t)v15, (uint64_t)v11, (uint64_t)v7, v23, v22);
  type metadata accessor for CRLBoardInsertStyleData(0);
  sub_1005057FC(&qword_101672440);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v44, (uint64_t)v43, &qword_101672438);
  sub_10051B3EC((uint64_t)v43, (uint64_t)v44, &qword_101672438);
  if (sub_100F471D4((uint64_t)v44) == 1)
  {
    id v26 = self;
    id v27 = v25;
    id v28 = [v26 defaultShadow];
    sub_10088B0DC(v28);

    id v29 = sub_100A3252C(10.0);
    sub_100A36B4C(v29);
  }
  else
  {
    memcpy(v40, v44, sizeof(v40));
    sub_10051B3EC((uint64_t)v44, (uint64_t)v38, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)v38) == 1)
    {
      id v30 = 0;
    }
    else
    {
      v41[12] = v38[12];
      v41[13] = v38[13];
      uint64_t v42 = v39;
      v41[8] = v38[8];
      v41[9] = v38[9];
      v41[10] = v38[10];
      v41[11] = v38[11];
      v41[4] = v38[4];
      v41[5] = v38[5];
      v41[6] = v38[6];
      v41[7] = v38[7];
      v41[0] = v38[0];
      v41[1] = v38[1];
      v41[2] = v38[2];
      v41[3] = v38[3];
      id v30 = sub_100A1E370((uint64_t)v41, 0);
    }
    sub_100BC9500(v30);
    id v31 = sub_100B41014();
    sub_10088B0DC(v31);

    id v32 = sub_100A3252C(v44[90]);
    sub_100A36B4C(v32);

    sub_100F471EC((uint64_t)v43);
  }
  return v25;
}

id sub_100F40818(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  id v35 = a1;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  __chkstk_darwin(v14 - 8, v15);
  id v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
  id v19 = *(char **)(v18 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  id v20 = *(void (**)(uint64_t))(**(void **)&v19[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  id v21 = *(id *)(v18 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  uint64_t v22 = v19;
  uint64_t v23 = swift_retain();
  v20(v23);

  swift_release();
  sub_100F472F0(v33, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522E9C(v34, (uint64_t)v9, (uint64_t *)&unk_10167D2B0);
  id v24 = v35;
  id v25 = v35;
  id v26 = sub_100BF4E78((uint64_t)v21, (uint64_t)v17, (uint64_t)v13, (uint64_t)v9, v24, a4);
  type metadata accessor for CRLBoardInsertStyleData(0);
  sub_1005057FC(&qword_101672428);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v42, (uint64_t)v41, &qword_101672420);
  sub_10051B3EC((uint64_t)v41, (uint64_t)v42, &qword_101672420);
  if (sub_100F471D4((uint64_t)v42) == 1)
  {
    id v27 = self;
    id v28 = v26;
    id v29 = [v27 defaultShadow];
    sub_10088B0DC(v29);

    sub_100BEAD30(10.0);
  }
  else
  {
    memcpy(v38, v42, sizeof(v38));
    sub_10051B3EC((uint64_t)v42, (uint64_t)v36, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)v36) == 1)
    {
      id v30 = 0;
    }
    else
    {
      v39[12] = v36[12];
      v39[13] = v36[13];
      uint64_t v40 = v37;
      v39[8] = v36[8];
      v39[9] = v36[9];
      v39[10] = v36[10];
      v39[11] = v36[11];
      v39[4] = v36[4];
      v39[5] = v36[5];
      v39[6] = v36[6];
      v39[7] = v36[7];
      v39[0] = v36[0];
      v39[1] = v36[1];
      v39[2] = v36[2];
      v39[3] = v36[3];
      id v30 = sub_100A1E370((uint64_t)v39, 0);
    }
    sub_100BC9500(v30);
    id v31 = sub_100B41014();
    sub_10088B0DC(v31);

    sub_100BEAD30(v42[90]);
    sub_100F471EC((uint64_t)v41);
  }
  return v26;
}

id sub_100F40DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, void *a10, void *a11, void *a12, void *a13, char *a14, void *a15, void *a16, unsigned __int8 a17, void *a18, void *a19)
{
  *(double *)&uint64_t v20 = COERCE_DOUBLE(__chkstk_darwin(a1, a2));
  uint64_t v206 = v19;
  double v210 = v22;
  double v211 = v21;
  LODWORD(v212) = v23;
  double v25 = v24;
  char v27 = v26;
  id v29 = v28;
  int v31 = v30;
  uint64_t v32 = v20;
  LODWORD(v209) = a17;
  id v202 = a15;
  uint64_t v199 = a14;
  uint64_t v213 = a16;
  sub_10051B3EC((uint64_t)a16, (uint64_t)v248, &qword_10168D670);
  sub_10051B3EC((uint64_t)v248, (uint64_t)v265, &qword_10168D670);
  uint64_t v33 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v33 - 8, v34);
  uint64_t v195 = (uint64_t)&v187 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = (void *)type metadata accessor for CRLWPStorageCRDTData(0);
  uint64_t v200 = *(v36 - 1);
  id v201 = v36;
  uint64_t v38 = __chkstk_darwin(v36, v37);
  uint64_t v194 = (uint64_t)&v187 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v40);
  uint64_t v196 = (uint64_t)&v187 - v41;
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v197 = *(void *)(v42 - 8);
  uint64_t v198 = v42;
  uint64_t v44 = __chkstk_darwin(v42, v43);
  Swift::Int v193 = (char *)&v187 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v44, v46);
  uint64_t v192 = (char *)&v187 - v48;
  __chkstk_darwin(v47, v49);
  uint64_t v203 = (char *)&v187 - v50;
  LODWORD(v207) = v31;
  double v214 = *(double *)&v32;
  if (!v29)
  {
    if ((v31 & 1) != 0 || v32 != 21) {
      goto LABEL_16;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 563, (uint64_t)"pathSource must be given for custom shapes.", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v31) = (_BYTE)v207;
    *(double *)&uint64_t v32 = v214;
    uint64_t v52 = 563;
LABEL_15:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, v52);
    goto LABEL_16;
  }
  if (v31)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 555, (uint64_t)"shapeType must be given if pathSource is given.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v31) = (_BYTE)v207;
    *(double *)&uint64_t v32 = v214;
    uint64_t v52 = 555;
    goto LABEL_15;
  }
  if (sub_100F47148(v32))
  {
    sub_10050BF48(0, (unint64_t *)&unk_10168A0E0);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v208 = v29;
    if (([v208 isKindOfClass:ObjCClassFromMetadata] & 1) == 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 559, (uint64_t)"pathSource must be a connection line path source if shapeType is connection line.", 81, 2u, (uint64_t)_swiftEmptyArrayStorage);
      *(double *)&uint64_t v32 = v214;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 559);
    }
    if (v199)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 560, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      *(double *)&uint64_t v32 = v214;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 560);
    }
    if ((*(unsigned int (**)(id, uint64_t, id))(v200 + 48))(v202, 1, v201) != 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 561, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      *(double *)&uint64_t v32 = v214;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 561);
    }
  }
LABEL_16:
  if (v209)
  {
    if (v199)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 567, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v31) = (_BYTE)v207;
      *(double *)&uint64_t v32 = v214;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 567);
    }
    if ((*(unsigned int (**)(id, uint64_t, id))(v200 + 48))(v202, 1, v201) != 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 568, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v31) = (_BYTE)v207;
      *(double *)&uint64_t v32 = v214;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 568);
    }
  }
  if (v31) {
    uint64_t v32 = 3;
  }
  if (v212) {
    double v53 = 0.0;
  }
  else {
    double v53 = v211;
  }
  if (v212) {
    double v54 = 0.0;
  }
  else {
    double v54 = v25;
  }
  if (v29)
  {
    id v55 = v29;
  }
  else
  {
    double v56 = sub_1004C840C(v32);
    id v55 = [self pathSourceForShapeType:v32 naturalSize:v56];
  }
  id v58 = v29;
  if (v27)
  {
    [v55 naturalSize];
  }
  else
  {
    sub_100F46C58(v32);
    double v62 = v61;
    double v64 = v63;
    [v55 naturalSize];
    double v59 = sub_100066F2C(1, v62, v64, v65, v66);
  }
  double v67 = v59;
  double v68 = v60;
  if (a9)
  {
    sub_100F46C58(v32);
    double v69 = v70;
  }
  else
  {
    double v69 = v210;
  }
  id v71 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:v32 != 0, v32 != 0, 0, 0, v54, v53, v67, v68, v69];
  [v55 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10050BF48(0, (unint64_t *)&qword_1016800B8);
  swift_dynamicCast();
  double v72 = COERCE_DOUBLE(v233[0]);
  if ((v27 & 1) == 0)
  {
    [v71 size];
    [*(id *)&v72 scaleToNaturalSize:];
  }
  [v71 size];
  double v74 = v73;
  double v76 = v75;
  [*(id *)&v72 naturalSize];
  BOOL v79 = sub_1000640C4(v74, v76, v77, v78, 0.001);
  double v210 = *(double *)&v32;
  double v211 = v72;
  if (!v79)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 595, (uint64_t)"Geometry and path source must have the same size.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    *(double *)&uint64_t v32 = v210;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_makeShapeItem(shapeType:pathSource:preservePathSourceSize:position:angleInDegrees:stroke:fill:headLineEnd:tailLineEnd:attributedString:textCRDT:textPresetDataOverride:isForFreehandDrawing:pencilKitStrokePathCompactData:freehandMaskPath:)", 238, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 595);
  }
  id v212 = v71;
  id v204 = v55;
  if (*(double *)&v32 == 0.0 || sub_100F47110(v32) || v32 == 17)
  {
    long long v80 = v206;
    type metadata accessor for CRLBoardInsertStyleData(0);
  }
  else
  {
    long long v80 = v206;
  }
  sub_1005057FC(&qword_101672458);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v247, (uint64_t)v233, &qword_101685120);
  sub_10051B3EC((uint64_t)v233, (uint64_t)v247, &qword_101685120);
  sub_10051B3EC((uint64_t)v213, (uint64_t)v249, &qword_10168D670);
  if (sub_1005DF0EC((uint64_t)v249) == 1)
  {
    sub_10051B3EC((uint64_t)v247, (uint64_t)v233, &qword_101685120);
    if (sub_10089B950((uint64_t)v233) == 1)
    {
      sub_1008EF1E0(v32, (uint64_t)v250);
      long long v228 = v250[13];
      long long v229 = v250[14];
      uint64_t v230 = v251;
      long long v224 = v250[9];
      long long v225 = v250[10];
      long long v226 = v250[11];
      long long v227 = v250[12];
      long long v219 = v250[4];
      long long v220 = v250[5];
      long long v221 = v250[6];
      long long v222 = v250[7];
      long long v223 = v250[8];
      long long v215 = v250[0];
      long long v216 = v250[1];
      long long v217 = v250[2];
      long long v218 = v250[3];
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)&v215, v83);
    }
    else
    {
      long long v228 = v243[13];
      long long v229 = v243[14];
      long long v224 = v243[9];
      long long v225 = v243[10];
      long long v226 = v243[11];
      long long v227 = v243[12];
      long long v219 = v243[4];
      long long v220 = v243[5];
      long long v221 = v243[6];
      uint64_t v230 = v244;
      long long v222 = v243[7];
      long long v223 = v243[8];
      long long v215 = v243[0];
      long long v216 = v243[1];
      long long v217 = v243[2];
      long long v218 = v243[3];
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)&v215, *(Swift::String *)&v81);
      sub_1005DF3EC((uint64_t)v243);
    }
    uint64_t v84 = &v215;
  }
  else
  {
    uint64_t v84 = (long long *)v265;
  }
  sub_10051B3EC((uint64_t)v84, (uint64_t)v232, &qword_10168D670);
  id v85 = a11;
  sub_10051B3EC((uint64_t)v232, (uint64_t)v250, &qword_10168D670);
  if (a10 == (void *)1)
  {
    sub_10051B3EC((uint64_t)v247, (uint64_t)v233, &qword_101685120);
    if (sub_10089B950((uint64_t)v233) == 1)
    {
      sub_1008EF10C(v213, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
      if (sub_100F47110(v32) || v32 == 17)
      {
        *((void *)&v216 + 1) = &type metadata for CRLFeatureFlags;
        *(void *)&long long v217 = sub_1005396A8();
        LOBYTE(v215) = 8;
        char v141 = isFeatureEnabled(_:)();
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v215);
        id v142 = [self blackColor];
        if (v141) {
          double v143 = 3.0;
        }
        else {
          double v143 = 1.0;
        }
        uint64_t v213 = [self strokeWithColor:v142 width:v143];

        *(double *)&uint64_t v32 = v210;
      }
      else
      {
        uint64_t v213 = 0;
      }
    }
    else
    {
      sub_10051B3EC((uint64_t)v233, (uint64_t)&v215, (uint64_t *)&unk_101685110);
      if (sub_100556850((uint64_t)&v215) == 1)
      {
        sub_1008EF10C(v213, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
        uint64_t v213 = 0;
      }
      else
      {
        v263[11] = v226;
        v263[12] = v227;
        v263[13] = v228;
        v263[7] = v222;
        v263[8] = v223;
        v263[9] = v224;
        v263[10] = v225;
        v263[3] = v218;
        v263[4] = v219;
        v263[5] = v220;
        v263[6] = v221;
        v263[0] = v215;
        v263[1] = v216;
        uint64_t v264 = v229;
        v263[2] = v217;
        sub_1008EF10C(v213, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
        sub_10051B860(v247, sub_10051BA5C);
        uint64_t v213 = sub_100A1E370((uint64_t)v263, 0);
        sub_10051B860(v247, sub_10051B450);
      }
    }
  }
  else
  {
    sub_1008EF10C(v213, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
    uint64_t v213 = a10;
  }
  if (a11 != (void *)1)
  {
    sub_10052315C(a10);
    id v208 = a11;
    goto LABEL_68;
  }
  sub_10051B3EC((uint64_t)v247, (uint64_t)v233, &qword_101685120);
  if (sub_10089B950((uint64_t)v233) == 1)
  {
    sub_10052315C(a10);
    if (*(double *)&v32 != 0.0)
    {
      BOOL v86 = sub_100F47110(v32);
      double v87 = v214;
      if (v86 || v32 == 17)
      {
        id v208 = 0;
      }
      else
      {
        if (qword_10166F188 != -1) {
          swift_once();
        }
        id v208 = (id)qword_10171A998;
        id v88 = (id)qword_10171A998;
      }
      goto LABEL_69;
    }
    id v208 = 0;
LABEL_68:
    double v87 = v214;
    goto LABEL_69;
  }
  uint64_t v91 = v242;
  if (v242)
  {
    uint64_t v205 = 1;
    long long v92 = *(void **)&v80[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];
    uint64_t v93 = v241;
    uint64_t v189 = v240;
    id v190 = v92;
    uint64_t v188 = v239;
    uint64_t v94 = v238;
    uint64_t v95 = v237;
    uint64_t v96 = v236;
    uint64_t v97 = v235;
    long long v187 = v234;
    id v98 = v233[31];
    id v208 = v233[30];
    uint64_t v191 = sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
    int v252 = (int)v98;
    char v253 = BYTE4(v98) & 1;
    long long v254 = v187;
    uint64_t v255 = v97;
    uint64_t v256 = v96;
    uint64_t v257 = v95;
    uint64_t v258 = v94;
    uint64_t v259 = v188;
    uint64_t v260 = v189;
    uint64_t v261 = v93;
    uint64_t v262 = v91;
    sub_10051B860(v247, sub_10051BA5C);
    id v99 = v190;
    sub_10052315C(a10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v100 = sub_1007B0B84((uint64_t)&v252);
    if (v208)
    {
      LOBYTE(v31) = (_BYTE)v207;
      double v87 = v214;
      *(double *)&uint64_t v32 = v210;
      id v85 = (id)v205;
      if (qword_10166FB80 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v165 = (id)static OS_os_log.persistence;
      uint64_t v166 = static os_log_type_t.info.getter();
      sub_100BAC898((uint64_t)v165, (uint64_t)&_mh_execute_header, v166, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

      id v208 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v100];
      sub_10051B860(v247, sub_10051B450);

      long long v80 = v206;
    }
    else
    {
      id v208 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v100];

      sub_10051B860(v247, sub_10051B450);
      LOBYTE(v31) = (_BYTE)v207;
      double v87 = v214;
      *(double *)&uint64_t v32 = v210;
      id v85 = (id)v205;
      long long v80 = v206;
    }
  }
  else
  {
    sub_10052315C(a10);
    id v208 = 0;
    double v87 = v214;
    *(double *)&uint64_t v32 = v210;
  }
LABEL_69:
  if (a12 != (void *)1)
  {
    sub_10052315C(v85);
    double v214 = *(double *)&a12;
    if (a13 == (void *)1) {
      goto LABEL_75;
    }
LABEL_79:
    sub_10052315C(a12);
    id v90 = a13;
    goto LABEL_86;
  }
  if ((v31 & 1) != 0 || *(void *)&v87 != 15 && *(void *)&v87 != 16)
  {
    sub_10052315C(v85);
    double v214 = 0.0;
    if (a13 == (void *)1) {
      goto LABEL_75;
    }
    goto LABEL_79;
  }
  uint64_t v164 = self;
  sub_10052315C(v85);
  double v214 = COERCE_DOUBLE([v164 simpleArrow]);
  if (a13 != (void *)1) {
    goto LABEL_79;
  }
LABEL_75:
  if ((v31 & 1) != 0 || *(void *)&v87 != 15)
  {
    sub_10052315C(a12);
    id v90 = 0;
  }
  else
  {
    long long v89 = self;
    sub_10052315C(a12);
    id v90 = [v89 simpleArrow];
  }
LABEL_86:
  sub_10052315C(a13);
  BOOL v101 = sub_100F47148(v32);
  uint64_t v205 = (uint64_t)v90;
  if (v101)
  {
    sub_1008EF10C(v232, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
    sub_10051B860(v247, sub_10051B450);
    uint64_t v102 = *(void *)&v80[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];
    char v103 = *(char **)(v102 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
    uint64_t v104 = *(void (**)(uint64_t))(**(void **)&v103[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 256);
    id v105 = *(id *)(v102 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
    uint64_t v106 = v103;
    uint64_t v107 = swift_retain();
    uint64_t v108 = v203;
    v104(v107);

    swift_release();
    id v109 = objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineItem());
    id v110 = v90;
    id v111 = v212;
    uint64_t v112 = v213;
    id v113 = *(id *)&v214;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    uint64_t v115 = v109;
    double v116 = v211;
    id v117 = [v115 initWithStore:v105 parentContainerUUID:isa geometry:v111 pathSource:*(void *)&v211 stroke:v112 headLineEnd:v113 tailLineEnd:v110];

    (*(void (**)(char *, uint64_t))(v197 + 8))(v108, v198);
  }
  else if (v209)
  {
    sub_1008EF10C(v232, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
    sub_10051B860(v247, sub_10051B450);
    uint64_t v118 = *(void *)&v80[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];
    char v119 = *(char **)(v118 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
    uint64_t v120 = v90;
    char v121 = *(void (**)(uint64_t))(**(void **)&v119[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 256);
    uint64_t v209 = (uint64_t)*(id *)(v118 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
    uint64_t v122 = v119;
    uint64_t v123 = swift_retain();
    v121(v123);

    swift_release();
    uint64_t v206 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem());
    id v124 = a19;
    id v207 = v124;
    id v125 = v212;
    uint64_t v126 = v213;
    id v127 = *(id *)&v214;
    id v202 = v127;
    id v128 = v120;
    id v129 = v208;
    id v130 = a18;
    Class v131 = UUID._bridgeToObjectiveC()().super.isa;
    id v186 = v124;
    char v132 = (void *)v209;
    double v133 = v211;
    id v117 = [v206 initWithStore:v209 parentContainerUUID:v131 geometry:v125 pathSource:*(void *)&v211 fill:v129 stroke:v126 headLineEnd:v127 tailLineEnd:v128 pencilKitStrokePathCompactData:v130 maskPath:v186];

    (*(void (**)(char *, uint64_t))(v197 + 8))(v203, v198);
  }
  else
  {
    sub_10051B3EC((uint64_t)v247, (uint64_t)v233, &qword_101685120);
    if (sub_10089B950((uint64_t)v233) == 1)
    {
      if (v87 == 0.0 && (v31 & 1) == 0) {
        float v140 = 4.0;
      }
      else {
        float v140 = 10.0;
      }
      uint64_t v209 = 1;
    }
    else
    {
      sub_10051B860(v247, sub_10051B450);
      if (v246) {
        uint64_t v144 = 0;
      }
      else {
        uint64_t v144 = v245;
      }
      uint64_t v209 = v144;
      sub_10051B3EC((uint64_t)v247, (uint64_t)&v215, &qword_101685120);
      float v140 = v231;
    }
    uint64_t v145 = v195;
    sub_100522E9C((uint64_t)v202, v195, (uint64_t *)&unk_101674610);
    if ((*(unsigned int (**)(uint64_t, uint64_t, id))(v200 + 48))(v145, 1, v201) == 1)
    {
      sub_100522F00(v145, (uint64_t *)&unk_101674610);
      unsigned __int8 v146 = v199;
      if (v199) {
        uint64_t v203 = v199;
      }
      else {
        uint64_t v203 = (char *)[objc_allocWithZone((Class)NSAttributedString) init];
      }
      id v167 = v212;
      uint64_t v168 = *(void *)&v206[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];
      uint64_t v169 = *(char **)(v168 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      unsigned __int8 v170 = *(void (**)(id))(**(void **)&v169[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
      uint64_t v206 = (char *)*(id *)(v168 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
      uint64_t v171 = v169;
      swift_retain();
      id v172 = v146;
      uint64_t v173 = v193;
      v170(v172);

      swift_release();
      char v174 = v207 | (*(void *)&v87 != 0);
      type metadata accessor for CRLWPShapeItem();
      id v175 = v208;
      id v207 = v208;
      id v176 = v167;
      uint64_t v177 = v213;
      unint64_t v178 = v213;
      double v179 = v214;
      id v202 = *(id *)&v214;
      uint64_t v180 = v205;
      id v201 = (id)v205;
      uint64_t v185 = (void *)v180;
      double v181 = v206;
      id v182 = v173;
      uint64_t v183 = v203;
      id v117 = (id)sub_1009906BC(v206, v182, v203, v250, v176, *(void **)&v211, v177, v175, v140, *(void **)&v179, v185, v209, v174 & 1);
    }
    else
    {
      uint64_t v147 = v196;
      sub_100F47288(v145, v196, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v148 = *(void *)&v80[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];
      unsigned __int8 v149 = *(char **)(v148 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      unsigned __int8 v150 = *(void (**)(uint64_t))(**(void **)&v149[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                            + 256);
      id v207 = *(id *)(v148 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
      uint64_t v151 = v149;
      uint64_t v152 = swift_retain();
      uint64_t v153 = (uint64_t)v192;
      v150(v152);

      swift_release();
      uint64_t v154 = v147;
      uint64_t v155 = v194;
      sub_100F472F0(v154, v194, type metadata accessor for CRLWPStorageCRDTData);
      char v156 = v31 | (*(void *)&v87 != 0);
      id v201 = (id)type metadata accessor for CRLWPShapeItem();
      id v157 = v208;
      uint64_t v206 = (char *)v208;
      id v158 = v212;
      uint64_t v159 = v213;
      uint64_t v160 = v213;
      double v161 = v214;
      uint64_t v203 = (char *)*(id *)&v214;
      id v162 = (id)v205;
      id v202 = (id)v205;
      double v184 = v161;
      uint64_t v163 = v207;
      id v117 = sub_1009902FC(v207, v153, v155, v250, v158, *(void **)&v211, v159, v157, v140, *(void **)&v184, v162, v209, v156 & 1);

      sub_100F47390(v196, type metadata accessor for CRLWPStorageCRDTData);
    }
  }
  uint64_t v134 = v204;
  if (*(void *)&v210 == 21)
  {
    id v135 = v117;
    sub_10088AEB4(1);

    uint64_t v134 = v135;
  }
  double v137 = v211;
  id v136 = v212;

  return v117;
}

id sub_100F432B0(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v37 = a2;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = self;
  if (qword_10166F188 != -1) {
    swift_once();
  }
  id v14 = [(id)qword_10171A998 color];
  id v15 = [v13 colorWithColor:v14];

  if (sub_100F47110(a1))
  {

    uint64_t v16 = self;
    id v17 = [v16 blackColor];
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v16 colorNamed:v18 fallbackColor:v17];

    v39[3] = &type metadata for CRLFeatureFlags;
    v39[4] = sub_1005396A8();
    LOBYTE(v39[0]) = 8;
    LOBYTE(v17) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v39);
    if (v17) {
      double v20 = 3.0;
    }
    else {
      double v20 = 1.0;
    }
    double v21 = [self strokeWithColor:v19 width:v20];

    id v15 = 0;
  }
  else
  {
    double v21 = 0;
  }
  uint64_t v36 = a1;
  if (a1 == 15)
  {
    double v24 = self;
    id v22 = [v24 openArrow];
    id v23 = [v24 simpleArrow];
  }
  else if (a1 == 16)
  {
    id v22 = [self simpleArrow];
    id v23 = 0;
  }
  else
  {
    id v23 = 0;
    id v22 = 0;
  }
  uint64_t v33 = *(void *)&a4;
  uint64_t v34 = *(void *)&a3;
  uint64_t v35 = *(void *)&a5;
  uint64_t v25 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 1, 1, v25);
  sub_1005C6DF0((uint64_t)v38);
  sub_10051B3EC((uint64_t)v38, (uint64_t)v39, &qword_10168D670);
  id v26 = v23;
  char v27 = v21;
  id v28 = v15;
  id v29 = v22;
  id v30 = sub_100F40DC0(v36, 0, v37, 1, v34, v33, 0, v35, 0, v21, v15, v22, v23, 0, v12, v39, 0, 0, 0);

  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674610);
  return v30;
}

id sub_100F4370C(uint64_t a1, void *a2, void *a3, void *a4, void *a5, double a6, double a7)
{
  double v20 = a3;
  double v21 = a2;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v12 - 8, v13);
  id v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5 && !a4)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeShapeItemForFreehandDrawing(pathSource:position:stroke:fill:pencilKitStrokePathCompactData:maskPath:)", 105, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 187, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeShapeItemForFreehandDrawing(pathSource:position:stroke:fill:pencilKitStrokePathCompactData:maskPath:)", 105, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 187);
  }
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1005C6DF0((uint64_t)v22);
  sub_10051B3EC((uint64_t)v22, (uint64_t)v23, &qword_10168D670);
  id v17 = sub_100F40DC0(17, 0, a1, 1, *(uint64_t *)&a6, *(uint64_t *)&a7, 0, 0, 0, v21, v20, 0, 0, 0, v15, v23, 1u, a4, a5);
  sub_100522F00((uint64_t)v15, (uint64_t *)&unk_101674610);
  return v17;
}

Class sub_100F43A38(void *a1, double a2, uint64_t a3, void *a4, SEL *a5)
{
  uint64_t v9 = type metadata accessor for PKStroke();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = a4;
  id v15 = a1;
  static PKStroke._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = self;
  Class isa = PKStroke._bridgeToObjectiveC()().super.isa;
  id v18 = [v16 *a5 isa:v15 a2];

  type metadata accessor for CRLFreehandDrawingShapeItem();
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v19.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v19.super.isa;
}

void sub_100F43C4C(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v4 = (const char *)(a1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  if (!(*(void *)v4 >> 62))
  {
    if (*(uint64_t *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v13 <= 0)
  {
LABEL_3:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"blockToRunCommandToPostProcess(newBoardItem:shapeType:infosToConnect:commandController:)", 88, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 268, (uint64_t)"We are enqueueing multiple commands, so there should be an open command group.", 78, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"blockToRunCommandToPostProcess(newBoardItem:shapeType:infosToConnect:commandController:)", 88, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLBoardItemFactory.swift", 86, 2, 268);
  }
LABEL_4:
  uint64_t v5 = *(void *)v4;
  if (!(*(void *)v4 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_6;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v4 = "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.";
    a3 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  if (!v6) {
    goto LABEL_26;
  }
LABEL_6:
  unint64_t v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_28:
    uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v7 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v6 = *(void *)(v5 + 8 * v7 + 32);
  swift_retain();
LABEL_11:
  swift_bridgeObjectRelease();
  int v8 = *(unsigned __int8 *)(v6 + 16);
  if (v8 == 3 || v8 == 2 || v8 == 1)
  {
    swift_release();
LABEL_33:
    sub_1009BF768((unint64_t)a3);
    id v17 = v16;
    sub_10078BED8(v16, 0, 0, 4, 0);

    return;
  }
  uint64_t v5 = *(void *)v4;
  if (!(*(void *)v4 >> 62))
  {
    uint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v9) {
      goto LABEL_17;
    }
LABEL_32:
    swift_bridgeObjectRelease_n();
    *(unsigned char *)(v6 + 16) = 1;
    swift_release();
    goto LABEL_33;
  }
LABEL_31:
  swift_bridgeObjectRetain_n();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  if (!v9) {
    goto LABEL_32;
  }
LABEL_17:
  if (v9 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v11 = *(void *)(v5 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      uint64_t v12 = *(id *)(v11 + 24);
      sub_10078D41C(v12, 0);
      swift_release();
    }
    while (v9 != v10);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_100F442A4(double a1, double a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = sub_1004C840C(0);
  id v10 = [self pathSourceForShapeType:0 naturalSize:v8 v9];
  id v11 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithString:v12];

  uint64_t v14 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
  sub_1005C6DF0((uint64_t)v20);
  sub_10051B3EC((uint64_t)v20, (uint64_t)v19, &qword_10168D670);
  id v15 = v10;
  id v16 = v13;
  sub_100F40DC0(0, 0, (uint64_t)v10, 0, *(uint64_t *)&a1, *(uint64_t *)&a2, 0, 0, 1, (void *)1, (void *)1, (void *)1, (void *)1, (char *)v13, v7, v19, 0, 0, 0);

  sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674610);
  type metadata accessor for CRLWPShapeItem();
  return swift_dynamicCastClassUnconditional();
}

id sub_100F4491C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v6 - 8, v7);
  double v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a2
    && (sub_1005498A4(a2 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v15),
        sub_1005057FC(&qword_101693DB0),
        type metadata accessor for CRLAssetBackedAssetStorage(),
        swift_dynamicCast()))
  {
    sub_100F472F0(v14 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    swift_release();
    uint64_t v10 = type metadata accessor for CRLAssetData();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = type metadata accessor for CRLAssetData();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  id v12 = sub_100F3E518(a1, (uint64_t)v9, a3);
  sub_100522F00((uint64_t)v9, (uint64_t *)&unk_10167D2B0);
  return v12;
}

unint64_t sub_100F44C54(unint64_t a1, void (*a2)(id), uint64_t a3)
{
  v26[1] = a3;
  char v27 = a2;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = (unint64_t)_swiftEmptyArrayStorage;
  double v9 = (objc_class *)type metadata accessor for CRLUUIDRemapHelper();
  uint64_t v10 = objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_objectUUIDMap] = _swiftEmptyDictionarySingleton;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap] = _swiftEmptyDictionarySingleton;
  v10[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs] = 1;
  v33.receiver = v10;
  v33.Class super_class = v9;
  [super init];
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v30 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board);
    unint64_t v28 = a1;
    uint64_t v29 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
    unint64_t v31 = a1 & 0xC000000000000001;
    uint64_t v12 = 4;
    while (1)
    {
      uint64_t v3 = v12 - 4;
      id v13 = v31 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v12);
      uint64_t v14 = v13;
      uint64_t v15 = v12 - 3;
      if (__OFADD__(v3, 1)) {
        break;
      }
      id v16 = *(void **)(*(void *)(v30 + v29) + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
      uint64_t v17 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
      id v18 = *(uint64_t (**)(void *, char *, void, id))((swift_isaMask & *v14) + 0x1F0);
      id v19 = v16;
      double v20 = (void *)v18(v16, v8, 0, v32);
      sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674520);

      id v21 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      ++v12;
      a1 = v28;
      if (v15 == v11) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  id v22 = v27;
  id v23 = v32;
  if (v27)
  {
    id v24 = v32;
    v22(v23);
  }
  return v34;
}

uint64_t sub_100F451E0()
{
  return type metadata accessor for CRLBoardItemFactory();
}

uint64_t type metadata accessor for CRLBoardItemFactory()
{
  uint64_t result = qword_1016A2780;
  if (!qword_1016A2780) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100F45234()
{
  uint64_t result = type metadata accessor for CRLBoardInsertStyleData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100F452D4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100F4530C(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)&a3[OBJC_IVAR____TtC8Freeform12CRLImageItem__imageAssetAsData] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform12CRLImageItem__thumbnailAssetAsData] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo] = 0;
  a3[OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial] = 2;
  a3[OBJC_IVAR____TtC8Freeform12CRLMediaItem_isLooping] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v4.receiver = a3;
  v4.Class super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  return [super init];
}

id sub_100F453CC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v128 = a3;
  uint64_t v123 = a1;
  uint64_t v5 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for UUID();
  uint64_t v127 = *(void *)(v125 - 8);
  __chkstk_darwin(v125 - 8, v9);
  uint64_t v11 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v124 = (uint64_t)&v113 - v14;
  __chkstk_darwin(v15, v16);
  uint64_t v126 = (char *)&v113 - v17;
  uint64_t v18 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
  id v19 = (void (*)(uint64_t, uint64_t, uint64_t))(a3 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_store);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  uint64_t v119 = v18;
  uint64_t v115 = v11;
  double v116 = v8;
  uint64_t v122 = v19;
  if (Strong)
  {
    id result = (id)swift_unknownObjectWeakLoadStrong();
    if (!result)
    {
      __break(1u);
      return result;
    }
    id v22 = result;
    id v23 = [result description];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;
  }
  else
  {
    unint64_t v26 = 0xE300000000000000;
    uint64_t v24 = 7104878;
  }
  uint64_t v120 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v113 = xmmword_10117D8C0;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v28 = (void *)sub_100528BE4();
  *(void *)(inited + 64) = v28;
  uint64_t v114 = v24;
  *(void *)(inited + 32) = v24;
  *(void *)(inited + 40) = v26;
  id v117 = (char *)v26;
  swift_bridgeObjectRetain();
  id v29 = [a2 store];
  id v30 = [v29 description];
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v28;
  id v121 = v28;
  *(void *)(inited + 72) = v31;
  *(void *)(inited + 80) = v33;
  id v34 = [a2 store];
  uint64_t v35 = swift_unknownObjectWeakLoadStrong();
  if (!v35)
  {

    goto LABEL_9;
  }
  uint64_t v36 = (void *)v35;
  type metadata accessor for CRLBoardDataStore(0);
  id v37 = v34;
  char v38 = static NSObject.== infix(_:_:)();

  if ((v38 & 1) == 0)
  {
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 234, (uint64_t)"Unexpected board data store. expected=%{public}@, actual=%{public}@", 67, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 234);
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = (char *)a2;
  uint64_t v40 = (char *)[a2 parentBoard];
  id v118 = v40;
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v42 = swift_initStackObject();
    *(_OWORD *)(v42 + 16) = v113;
    id v43 = v121;
    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = v43;
    uint64_t v44 = v117;
    *(void *)(v42 + 32) = v114;
    *(void *)(v42 + 40) = v44;
    uint64_t v45 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
    id v46 = *(id *)&v41[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
    id v117 = v41;
    id v47 = [v46 description];
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;

    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v43;
    *(void *)(v42 + 72) = v48;
    *(void *)(v42 + 80) = v50;
    double v51 = *(void **)&v41[v45];
    uint64_t v52 = swift_unknownObjectWeakLoadStrong();
    if (!v52
      || (double v53 = (void *)v52,
          type metadata accessor for CRLBoardDataStore(0),
          id v54 = v51,
          char v55 = static NSObject.== infix(_:_:)(),
          v54,
          v54,
          v53,
          (v55 & 1) == 0))
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 240, (uint64_t)"Unexpected board data store. expected=%{public}@, actual=%{public}@", 67, 2u, v42);
      sub_1005598CC(v42, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 240);
    }
    swift_bridgeObjectRelease();
    uint64_t v56 = v128;
    uint64_t v58 = v125;
    uint64_t v57 = (uint64_t)v126;
    uint64_t v39 = v117;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain();
    uint64_t v56 = v128;
    uint64_t v58 = v125;
    uint64_t v57 = (uint64_t)v126;
  }
  double v59 = (char *)(v127 + 16);
  uint64_t v60 = v123;
  uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 16);
  v122(v57, v123, v58);
  double v61 = (uint64_t *)(v56 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets);
  swift_beginAccess();
  uint64_t v62 = *v61;
  if (!*(void *)(*v61 + 16)) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v63 = sub_100955FC8(v57);
  if ((v64 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    id v117 = v59;
    uint64_t v69 = (uint64_t)v116;
    sub_100F472F0(v60, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    id v70 = [v39 store];
    id v71 = sub_100AE70F4(v69, v70);

    type metadata accessor for CRLAssetManager.AssetInfo();
    uint64_t v65 = swift_allocObject();
    double v72 = v39;
    double v73 = self;
    id v74 = v71;
    swift_unknownObjectRetain();
    id v75 = [v73 hashTableWithOptions:517];
    *(void *)(v65 + 24) = v75;
    id v76 = [self hashTableWithOptions:517];
    *(void *)(v65 + 32) = v76;
    *(void *)(v65 + 16) = v74;
    type metadata accessor for CRLBoard(0);
    uint64_t v77 = swift_dynamicCastClass();
    id v78 = v74;
    if (v77)
    {
      BOOL v79 = v75;
      uint64_t v80 = v77;
    }
    else
    {
      BOOL v79 = v76;
      uint64_t v80 = (uint64_t)v72;
    }
    [v79 addObject:v80];
    uint64_t v39 = v72;

    swift_unknownObjectRelease();
    uint64_t v81 = v124;
    uint64_t v58 = v125;
    uint64_t v57 = (uint64_t)v126;
    v122(v124, (uint64_t)v126, v125);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v129 = *v61;
    *double v61 = 0x8000000000000000;
    sub_100973174(v65, v81, isUniquelyReferenced_nonNull_native);
    *double v61 = v129;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v81, v58);
    swift_endAccess();
    if (qword_10166FBD8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    Swift::String v83 = (void *)static OS_os_log.assetManagement;
    uint64_t v84 = swift_initStackObject();
    *(_OWORD *)(v84 + 16) = xmmword_10117E810;
    id v85 = v83;
    uint64_t v86 = UUID.uuidString.getter();
    id v87 = v121;
    *(void *)(v84 + 56) = &type metadata for String;
    *(void *)(v84 + 64) = v87;
    *(void *)(v84 + 32) = v86;
    *(void *)(v84 + 40) = v88;
    uint64_t v89 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v85, (uint64_t)&_mh_execute_header, v89, (uint64_t)"CRLAssetManager asset(forAssetData:%@, owner:) create new", 57, 2, v84);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    goto LABEL_31;
  }
  uint64_t v65 = *(void *)(*(void *)(v62 + 56) + 8 * v63);
  swift_retain();
  swift_bridgeObjectRelease();
  type metadata accessor for CRLBoard(0);
  uint64_t v66 = swift_dynamicCastClass();
  if (v66)
  {
    uint64_t v67 = v66;
    double v68 = *(void **)(v65 + 24);
    swift_retain();
    [v68 addObject:v67];
  }
  else
  {
    id v90 = *(void **)(v65 + 32);
    swift_retain();
    [v90 addObject:v39];
  }
  if (qword_10166FBD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v91 = (void *)static OS_os_log.assetManagement;
  uint64_t v92 = swift_initStackObject();
  *(_OWORD *)(v92 + 16) = xmmword_10117E810;
  id v85 = v91;
  uint64_t v93 = UUID.uuidString.getter();
  id v94 = v121;
  *(void *)(v92 + 56) = &type metadata for String;
  *(void *)(v92 + 64) = v94;
  *(void *)(v92 + 32) = v93;
  *(void *)(v92 + 40) = v95;
  uint64_t v96 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v85, (uint64_t)&_mh_execute_header, v96, (uint64_t)"CRLAssetManager asset(forAssetData:%@, owner:) add owner to existing", 68, 2, v92);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  swift_release();
LABEL_31:

  uint64_t v97 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
  uint64_t v98 = v128;
  if ([*(id *)(v128 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners) objectForKeyedSubscript:v39])
  {
    id v99 = v115;
    v122((uint64_t)v115, v57, v58);
    swift_beginAccess();
    uint64_t v100 = v124;
    sub_100CB4BC8(v124, v99);
    BOOL v101 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
    v101(v100, v58);
    swift_endAccess();
    swift_unknownObjectRelease();

    swift_release();
    v101(v57, v58);
  }
  else
  {
    id v121 = *(id *)(v98 + v97);
    uint64_t v123 = v65;
    uint64_t v102 = v124;
    char v103 = (void (*)(unint64_t, uint64_t, uint64_t))v122;
    v122(v124, v57, v58);
    type metadata accessor for CRLAssetManager.OwnerInfo();
    uint64_t v104 = swift_allocObject();
    *(unsigned char *)(v104 + 24) = 0;
    sub_1005057FC(&qword_10167AD08);
    id v117 = v39;
    uint64_t v105 = v127;
    unint64_t v106 = (*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80);
    uint64_t v107 = swift_allocObject();
    *(_OWORD *)(v107 + 16) = xmmword_10117E810;
    v103(v107 + v106, v102, v58);
    id v108 = v121;
    uint64_t v109 = sub_100CDCB64(v107);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    id v110 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
    uint64_t v111 = v102;
    uint64_t v65 = v123;
    v110(v111, v58);
    *(void *)(v104 + 16) = v109;
    [v108 setObject:v104 forKeyedSubscript:v117];
    swift_unknownObjectRelease();

    swift_release();
    v110((uint64_t)v126, v58);
  }
  id v112 = *(id *)(v65 + 16);
  swift_release();
  sub_100AE5A38();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v119 + 16));
  return v112;
}

id sub_100F4600C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, id a5, void *a6)
{
  uint64_t v130 = a4;
  uint64_t v120 = a1;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v127 = (uint64_t)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v126 = (uint64_t)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v128 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v129 = (char *)&v115 - v21;
  uint64_t v135 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v135 - 8);
  __chkstk_darwin(v135, v23);
  uint64_t v125 = (char *)&v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v118, v25);
  uint64_t v132 = (uint64_t)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v134 = (uint64_t)&v115 - v29;
  uint64_t v30 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v30 - 8, v31);
  uint64_t v33 = (char *)&v115 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  id v37 = (char *)&v115 - v36;
  Class v123 = (Class)type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v123, v38);
  id v136 = (char *)&v115 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40, v41);
  uint64_t v138 = (uint64_t)&v115 - v42;
  uint64_t v43 = sub_1005057FC(&qword_10168C8A0);
  __chkstk_darwin(v43 - 8, v44);
  uint64_t v124 = (uint64_t)&v115 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v47);
  uint64_t v49 = (char *)&v115 - v48;
  uint64_t v131 = a3;
  id v137 = a6;
  uint64_t v133 = (uint64_t)&v115 - v48;
  if (a5)
  {
    a5 = a5;
    sub_100A04D58(a5, (uint64_t)v49);
    uint64_t v50 = type metadata accessor for CRLMaskInfoData();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
    id v51 = a5;
  }
  else
  {
    uint64_t v52 = type metadata accessor for CRLMaskInfoData();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v49, 1, 1, v52);
    id v51 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) init];
  }
  double v53 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v121 = a2;
  uint64_t v54 = v135;
  v53(v37, a2, v135);
  uint64_t v119 = v22;
  uint64_t v122 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v122(v37, 0, 1, v54);
  id v117 = a5;
  id v55 = v51;
  [v55 position];
  float v57 = v56;
  float v59 = v58;
  [v55 size];
  float v61 = v60;
  float v63 = v62;
  [v55 angle];
  float v65 = v64;
  unsigned __int8 v66 = [v55 widthValid];
  unsigned __int8 v67 = [v55 heightValid];
  unsigned __int8 v68 = [v55 horizontalFlip];
  unsigned __int8 v69 = [v55 verticalFlip];
  id v116 = v55;

  sub_100522E9C((uint64_t)v37, (uint64_t)v33, (uint64_t *)&unk_101674520);
  uint64_t v70 = (uint64_t)v33;
  uint64_t v71 = (uint64_t)v136;
  v122(v136, 1, 1, v54);
  Class v72 = v123;
  *(void *)(v71 + *((int *)v123 + 6)) = _swiftEmptyDictionarySingleton;
  sub_10068EA54(v70, v71);
  uint64_t v73 = v71 + *((int *)v72 + 5);
  *(float *)uint64_t v73 = v57;
  *(float *)(v73 + 4) = v59;
  *(float *)(v73 + 8) = v61;
  *(float *)(v73 + 12) = v63;
  *(float *)(v73 + 16) = v65;
  *(unsigned char *)(v73 + 20) = v66;
  *(unsigned char *)(v73 + 21) = v67;
  *(unsigned char *)(v73 + 22) = v68;
  *(unsigned char *)(v73 + 23) = v69;
  *(void *)(v73 + 24) = _swiftEmptyDictionarySingleton;
  sub_100F47288(v71, v138, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v37, (uint64_t *)&unk_101674520);
  id v74 = v137;
  id v75 = (char *)[v137 store];
  uint64_t v76 = *(void *)&v75[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v76 + 16));
  uint64_t v77 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  id v78 = *(void **)&v75[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v78)
  {
    id v79 = *(id *)&v75[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    Class v123 = (Class)type metadata accessor for CRLAssetManager();
    uint64_t v80 = (char *)objc_allocWithZone(v123);
    swift_unknownObjectWeakInit();
    uint64_t v81 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v82 = swift_allocObject();
    Swift::String v83 = v75;
    uint64_t v84 = v80;
    id v85 = (_DWORD *)swift_slowAlloc();
    *id v85 = 0;
    *(void *)(v82 + 16) = v85;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v80[v81] = v82;
    *(void *)&v84[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v86 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v84[v86] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v84[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign();

    v142.receiver = v84;
    id v74 = v137;
    v142.Class super_class = v123;
    [super init];

    uint64_t v88 = *(void **)&v75[v77];
    *(void *)&v75[v77] = v87;
    id v79 = v87;

    id v78 = 0;
  }
  uint64_t v89 = *(os_unfair_lock_s **)(v76 + 16);
  id v90 = v78;
  os_unfair_lock_unlock(v89);

  uint64_t v91 = v131;
  id v92 = sub_100F453CC(v131, v74, (uint64_t)v79);

  id v93 = sub_100A368BC((uint64_t)v92);
  uint64_t v94 = (uint64_t)v128;
  uint64_t v95 = (uint64_t)v129;
  if (v93)
  {
    uint64_t v96 = swift_allocObject();
    *(void *)(v96 + 16) = _swiftEmptyArrayStorage;
    uint64_t v97 = (id *)(v96 + 16);
    v143[4] = sub_10089DD4C;
    v143[5] = v96;
    v143[0] = _NSConcreteStackBlock;
    v143[1] = *(void *)"";
    v143[2] = sub_100AAF588;
    v143[3] = &unk_101534030;
    uint64_t v98 = _Block_copy(v143);
    swift_retain();
    swift_release();
    [v93 iteratePathElementsWithBlock:v98];

    _Block_release(v98);
    swift_beginAccess();
    id v93 = *v97;
    swift_bridgeObjectRetain();
    swift_release();
  }
  uint64_t v99 = (uint64_t)v136;
  sub_100F472F0(v138, (uint64_t)v136, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_10051A41C(v140);
  sub_10051B3EC((uint64_t)v140, (uint64_t)v144, (uint64_t *)&unk_101683E20);
  uint64_t v100 = (uint64_t)v125;
  UUID.init()();
  uint64_t v101 = v134;
  sub_100FC2584(v100, v99, 0, 0, 0, 0xE000000000000000, (uint64_t)v144, v134);
  uint64_t v102 = v126;
  sub_100F472F0(v91, v126, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v103 = v130;
  uint64_t v104 = v127;
  sub_100522E9C(v130, v127, (uint64_t *)&unk_10167D2B0);
  sub_10051A3F4((uint64_t)v141);
  sub_10051B3EC((uint64_t)v141, (uint64_t)v143, (uint64_t *)&unk_101685110);
  uint64_t v105 = v124;
  sub_100522E9C(v133, v124, &qword_10168C8A0);
  sub_100DED2A8(v102, v104, (uint64_t)v93, (uint64_t)v143, v105, v95);
  sub_100522E9C(v101, v132, (uint64_t *)&unk_101683E10);
  sub_100F472F0(v95, v94, type metadata accessor for CRLImageItemCRDTData);
  type metadata accessor for CRLImageItemData(0);
  uint64_t v106 = swift_allocObject();
  sub_100F472F0(v94, v106 + qword_10171C7A8, type metadata accessor for CRLImageItemCRDTData);
  id v107 = [self standardUserDefaults];
  LODWORD(v104) = [v107 BOOLForKey:@"CRLNewImageItemsHaveGoodEnoughFidelityVersionSetAboveCurrentDefault"];

  if (!v104) {
    goto LABEL_12;
  }
  uint64_t v108 = sub_1002094A4();
  uint64_t v109 = v108 + 1;
  id v110 = v137;
  if (v108 == -1)
  {
    __break(1u);
LABEL_12:
    uint64_t v109 = 0x2000400000000;
    id v110 = v137;
  }
  sub_100F47390(v94, type metadata accessor for CRLImageItemCRDTData);
  sub_10051B3EC(v132, v106 + *(void *)(*(void *)v106 + 632), (uint64_t *)&unk_101683E10);
  uint64_t v111 = sub_10068B398(0x1000000000000, v109, 0x1000000000000, 2);
  swift_beginAccess();
  char v139 = 1;
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.setter();
  swift_endAccess();
  id v112 = objc_allocWithZone((Class)type metadata accessor for CRLImageItem());
  swift_retain();
  id v113 = sub_100F4530C(v120, (uint64_t)v111, v112);

  swift_release();
  sub_100522F00(v103, (uint64_t *)&unk_10167D2B0);
  sub_100F47390(v91, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v121, v135);
  sub_100F47390(v95, type metadata accessor for CRLImageItemCRDTData);
  sub_100522F00(v134, (uint64_t *)&unk_101683E10);
  sub_100F47390(v138, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00(v133, &qword_10168C8A0);
  return v113;
}

void sub_100F46C58(uint64_t a1)
{
  if (a1 != 17 && (sub_100F47110(a1) && !sub_100F47148(a1) || !sub_100F4715C(a1))) {
    sub_1004C840C(a1);
  }
}

uint64_t sub_100F46CF4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10, v11);
  uint64_t v13 = &v20[-v12 - 8];
  sub_1005498A4(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v20);
  sub_1005057FC(&qword_101693DB0);
  type metadata accessor for CRLAssetBackedAssetStorage();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_100F472F0(v19 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    swift_release();
    sub_1005498A4(a2 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v20);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      sub_100F472F0(v19 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      swift_release();
      id v15 = sub_100F3E11C((uint64_t)v13, (uint64_t)v9, a3);
      sub_100F47390((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      sub_100F47390((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      uint64_t v16 = self;
      id v17 = v15;
      id v18 = [v16 defaultShadow];
      sub_10088B0DC(v18);

      return (uint64_t)v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100F46F18(uint64_t a1)
{
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v18 = *(_OWORD *)(a1 + 480);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 240);
  sub_10051A794(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(void *)(a1 + 496));
  return a1;
}

BOOL sub_100F47110(uint64_t a1)
{
  if (unint64_t)(a1 - 1) < 0x14 && ((0x8C001u >> (a1 - 1))) {
    return 1;
  }
  return a1 == 19 || (a1 & 0xFFFFFFFFFFFFFFEFLL) == 2;
}

BOOL sub_100F47148(uint64_t a1)
{
  return a1 == 19 || (a1 & 0xFFFFFFFFFFFFFFEFLL) == 2;
}

BOOL sub_100F4715C(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_100F47168(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100F47178()
{
  return swift_release();
}

uint64_t sub_100F47180()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100F471C8()
{
  sub_100F43C4C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(const char **)(v0 + 32));
}

uint64_t sub_100F471D4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 368);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_100F471EC(uint64_t a1)
{
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v3 = *(_OWORD *)(a1 + 240);
  long long v4 = *(_OWORD *)(a1 + 256);
  sub_10051A434(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    *(void *)(a1 + 368));
  return a1;
}

uint64_t sub_100F47288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100F472F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100F47358()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100F47390(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t (*sub_100F473F8(void *a1, uint64_t a2))()
{
  long long v4 = malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  long long v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_100F4E83C(a2, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
  v4[5] = sub_100F4A4A0(v4, (uint64_t)v6);
  return sub_100F474AC;
}

uint64_t (*sub_100F474B0(void *a1, uint64_t a2))()
{
  long long v4 = malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  long long v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_100F4E83C(a2, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
  v4[5] = sub_100F4A584(v4, (uint64_t)v6);
  return sub_100F474AC;
}

void sub_100F47564(void *a1)
{
  unint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  sub_100510028((uint64_t)v2);
  free(v2);

  free(v1);
}

uint64_t (*sub_100F475C0(void *a1, void *a2))()
{
  long long v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  v4[5] = sub_100F4A6E0(v4, a2);
  return sub_100F4762C;
}

void (*sub_100F47630(void *a1, char a2))(void *a1)
{
  long long v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_100F4A780(v4, a2 & 1);
  return sub_100568164;
}

uint64_t (*sub_100F47690(void *a1, void *a2))()
{
  long long v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  v4[5] = sub_100F4A874(v4, a2);
  return sub_100F4762C;
}

void (*sub_100F476FC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  long long v6 = malloc(*(void *)(v4 + 64));
  v2[6] = v6;
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_100F4A910(v2, (uint64_t)v6);
  return sub_100F477EC;
}

void sub_100F477EC(void *a1)
{
  unint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);

  free(v1);
}

uint64_t (*sub_100F47864(void *a1, void *a2))()
{
  uint64_t v4 = malloc(0x30uLL);
  *a1 = v4;
  v4[4] = a2;
  v4[5] = sub_100F4AAC8(v4, a2);
  return sub_100F4762C;
}

void sub_100F478D0(void *a1)
{
  unint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);

  free(v1);
}

uint64_t (*sub_100F47920())()
{
  return j__swift_endAccess;
}

id CRLWPTopicNumbers.__allocating_init(with:)()
{
  unint64_t v1 = (char *)objc_allocWithZone(v0);
  uint64_t v2 = OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_topicNumberData;
  uint64_t v3 = v1;
  *(void *)&v1[v2] = sub_100A3CDB8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_invalidCharIndex] = 0;
  type metadata accessor for CRLWPStorage();
  *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage] = swift_dynamicCastClassUnconditional();
  swift_unknownObjectRetain();

  v6.receiver = v3;
  v6.Class super_class = v0;
  id v4 = [super init];
  swift_unknownObjectRelease();
  return v4;
}

id CRLWPTopicNumbers.init(with:)()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_topicNumberData;
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_100A3CDB8((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_invalidCharIndex] = 0;
  type metadata accessor for CRLWPStorage();
  *(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage] = swift_dynamicCastClassUnconditional();
  swift_unknownObjectRetain();

  v5.receiver = v2;
  v5.Class super_class = (Class)type metadata accessor for CRLWPTopicNumbers();
  id v3 = [super init];
  swift_unknownObjectRelease();
  return v3;
}

uint64_t type metadata accessor for CRLWPTopicNumbers()
{
  return self;
}

Swift::Void __swiftcall CRLWPTopicNumbers.invalidate(from:)(Swift::Int from)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage) textRangeForParagraphAtIndex:[*(id *)(v1 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage) paragraphIndexAtCharIndex:from]];
  uint64_t v38 = v1;
  id v3 = (unint64_t **)(v1 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_topicNumberData);
  swift_beginAccess();
  uint64_t v35 = v3;
  id v4 = *v3;
  unint64_t v7 = (*v3)[8];
  uint64_t v6 = (uint64_t)(*v3 + 8);
  unint64_t v5 = v7;
  uint64_t v8 = 1 << *((unsigned char *)v4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  int64_t v36 = v11;
  id v37 = v4;
  while (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_18:
    uint64_t v18 = 8 * v14;
    uint64_t v19 = *(void *)(v4[7] + v18);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      unint64_t v21 = 0;
      uint64_t v22 = *(void **)(v4[6] + v18);
      uint64_t v23 = v19 + 32;
      uint64_t v24 = v20;
      do
      {
        if (__OFSUB__(v24, v21))
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        unint64_t v25 = v21 + (uint64_t)(v24 - v21) / 2;
        if (__OFADD__(v21, (uint64_t)(v24 - v21) / 2)) {
          goto LABEL_39;
        }
        if (v25 >= v20) {
          goto LABEL_40;
        }
        if (*(void *)(v23 + 24 * v25) < (uint64_t)v2) {
          unint64_t v21 = v25 + 1;
        }
        else {
          uint64_t v24 = v21 + (uint64_t)(v24 - v21) / 2;
        }
      }
      while (v21 != v24);
      if (v24 >= v20) {
        continue;
      }
      id v26 = v22;
      uint64_t v27 = sub_100F47920();
      uint64_t v29 = sub_100F47864(v39, v26);
      if (!*(void *)v28)
      {
LABEL_4:
        ((void (*)(void *, void))v29)(v39, 0);
        ((void (*)(char *, void))v27)(v40, 0);
        int64_t v11 = v36;
        id v4 = v37;

        continue;
      }
      int64_t v30 = *(void *)(*(void *)v28 + 16);
      if (v30 >= v24)
      {
        sub_100F4E6B4(v24, v30);
        goto LABEL_4;
      }
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
  }
  if (__OFADD__(v12++, 1))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v12 >= v11) {
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_17:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_18;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v11) {
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v11) {
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 < v11)
  {
    unint64_t v16 = *(void *)(v6 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v12 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_43;
        }
        if (v12 >= v11) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        ++v17;
        if (v16) {
          goto LABEL_17;
        }
      }
    }
    goto LABEL_16;
  }
LABEL_35:
  swift_release();
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_100F4C7C8(v31, v32);
  swift_bridgeObjectRelease();
  *uint64_t v35 = v33;
  swift_bridgeObjectRelease();
  id v34 = *(id *)(v38 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_invalidCharIndex);
  if ((uint64_t)v2 < (uint64_t)v34) {
    id v34 = v2;
  }
  *(void *)(v38 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_invalidCharIndex) = v34;
}

Swift::UInt __swiftcall CRLWPTopicNumbers.listNumber(for:)(Swift::Int a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage;
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage) paragraphIndexAtCharIndex:a1];
  if (v3 == (id)NSNotFound.getter()) {
    return 0;
  }
  uint64_t v4 = (uint64_t)[*(id *)(v1 + v2) paragraphLevelAtParIndex:v3];
  if (v4 > 8) {
    return 0;
  }
  unint64_t v5 = v4;
  id v6 = sub_100F487C0((uint64_t)v3);
  if (!v6) {
    return 0;
  }
  unint64_t v7 = v6;
  id v8 = [*(id *)(v1 + v2) textRangeForParagraphAtIndex:v3];
  sub_100F48954((uint64_t)v8);
  Swift::UInt result = sub_100F48324(v7, (uint64_t)v8);
  if (!v10)
  {

    return 0;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v5 < *(void *)(v10 + 16))
  {
    Swift::UInt v11 = *(void *)(v10 + 32 * v5 + 32);

    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

Swift::String __swiftcall CRLWPTopicNumbers.numberedListLabel(for:includeFormatting:)(Swift::Int a1, Swift::Bool includeFormatting)
{
  uint64_t v4 = OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage;
  id v5 = [*(id *)(v2 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage) paragraphIndexAtCharIndex:a1];
  if (v5 != (id)NSNotFound.getter())
  {
    uint64_t v6 = (uint64_t)[*(id *)(v2 + v4) paragraphLevelAtParIndex:v5];
    if (v6 <= 8)
    {
      uint64_t v7 = v6;
      id v8 = sub_100F487C0((uint64_t)v5);
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = [*(id *)(v2 + v4) textRangeForParagraphAtIndex:v5];
        sub_100F48954((uint64_t)v10);
        sub_100F48324(v9, (uint64_t)v10);
        if (v11)
        {
          if ((v7 & 0x8000000000000000) == 0)
          {
            uint64_t v28 = v9;
            if (*(void *)(v11 + 16) <= (unint64_t)v7) {
              goto LABEL_22;
            }
            uint64_t v12 = 0;
            unint64_t v13 = (unsigned char *)(v11 + 32 * v7 + 56);
            unint64_t v14 = (void *)0xE000000000000000;
            BOOL v15 = includeFormatting;
            uint64_t v16 = v7;
            while (v16 <= v7)
            {
              if (*((void *)v13 - 2) == 3)
              {
                unint64_t v17 = *((void *)v13 - 3);
                if (HIDWORD(v17)) {
                  goto LABEL_23;
                }
                char v18 = *v13;
                id v19 = [self crlwp_stringForValue:v17 withListNumberFormat:*((void *)v13 - 1) includeFormatting:v15];
                if (v19)
                {
                  uint64_t v20 = v19;
                  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v23 = v22;
                }
                else
                {
                  uint64_t v21 = 0;
                  unint64_t v23 = 0xE000000000000000;
                }
                swift_bridgeObjectRetain();
                v24._countAndFlagsBits = v12;
                v24._object = v14;
                String.append(_:)(v24);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v12 = v21;
                unint64_t v14 = (void *)v23;
                if (v18)
                {
                  --v16;
                  v13 -= 32;
                  if (v16 != -1) {
                    continue;
                  }
                }
              }

              swift_bridgeObjectRelease();
              goto LABEL_19;
            }
            __break(1u);
          }
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          uint64_t v25 = _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          goto LABEL_24;
        }
      }
    }
  }
  uint64_t v12 = 0;
  unint64_t v14 = (void *)0xE000000000000000;
LABEL_19:
  uint64_t v25 = v12;
  id v26 = v14;
LABEL_24:
  result._object = v26;
  result._countAndFlagsBits = v25;
  return result;
}

uint64_t sub_100F48324(void *a1, uint64_t a2)
{
  id v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_topicNumberData);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(*v5 + 16))
  {
    id v7 = a1;
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_100957828((uint64_t)v7);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v6 + 56) + 8 * v8);
      swift_bridgeObjectRetain();

      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v12 = *(void *)(v10 + 16);
      if (v12)
      {
        unint64_t v13 = 0;
        uint64_t v14 = v10 + 32;
        uint64_t v15 = *(void *)(v10 + 16);
        while (!__OFSUB__(v15, v13))
        {
          unint64_t v16 = v13 + (uint64_t)(v15 - v13) / 2;
          if (__OFADD__(v13, (uint64_t)(v15 - v13) / 2)) {
            goto LABEL_22;
          }
          if (v16 >= v12) {
            goto LABEL_23;
          }
          if (*(void *)(v14 + 24 * v16) < a2) {
            unint64_t v13 = v16 + 1;
          }
          else {
            uint64_t v15 = v13 + (uint64_t)(v15 - v13) / 2;
          }
          if (v13 == v15)
          {
            if (v15 >= (uint64_t)v12) {
              goto LABEL_17;
            }
            if ((v15 & 0x8000000000000000) == 0)
            {
              uint64_t v17 = *(void *)(v14 + 24 * v15);
              if (v17 > a2) {
                goto LABEL_17;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              return v17;
            }
LABEL_24:
            __break(1u);
            return result;
          }
        }
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
    }
    else
    {
    }
LABEL_17:
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100F48490(void *a1)
{
  id v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_topicNumberData);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  id v5 = a1;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100957828((uint64_t)v5);
  if ((v7 & 1) == 0)
  {

    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(*(void *)(v4 + 56) + 8 * v6);
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = *(void *)(v8 + 24 * v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100F4857C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_topicNumberData;
  swift_beginAccess();
  uint64_t v10 = *(void *)(*(void *)v9 + 16);
  id v11 = a4;
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_100957828((uint64_t)v11);
    if (v12)
    {

      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25[0] = *(void *)v9;
  *(void *)uint64_t v9 = 0x8000000000000000;
  sub_100979A48((uint64_t)_swiftEmptyArrayStorage, v11, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v9 = v25[0];

  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_6:
  id v14 = v11;
  uint64_t v15 = sub_100F47920();
  uint64_t v17 = sub_100F47864(v25, v14);
  char v18 = *v16;
  if (*v16)
  {
    id v19 = v16;
    swift_bridgeObjectRetain();
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    char *v19 = v18;
    if ((v20 & 1) == 0)
    {
      char v18 = sub_100F653B8(0, *((void *)v18 + 2) + 1, 1, v18);
      char *v19 = v18;
    }
    unint64_t v22 = *((void *)v18 + 2);
    unint64_t v21 = *((void *)v18 + 3);
    if (v22 >= v21 >> 1)
    {
      char v18 = sub_100F653B8((double *)(v21 > 1), v22 + 1, 1, v18);
      char *v19 = v18;
    }
    *((void *)v18 + 2) = v22 + 1;
    unint64_t v23 = &v18[3 * v22];
    *((void *)v23 + 4) = a1;
    *((void *)v23 + 5) = a2;
    *((void *)v23 + 6) = a3;
    ((void (*)(void *, void))v17)(v25, 0);

    return ((uint64_t (*)(unsigned char *, void))v15)(v26, 0);
  }
  else
  {
    ((void (*)(void *, void))v17)(v25, 0);

    return ((uint64_t (*)(unsigned char *, void))v15)(v26, 0);
  }
}

id sub_100F487C0(uint64_t a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage) listStyleAtParIndex:a1 effectiveRange:0];
  if (!v2) {
    return 0;
  }
  id v3 = v2;
  switch(*((unsigned char *)v2 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType))
  {
    case 1:
      if (qword_10166EFE8 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_10171A6A8;
      break;
    case 2:
      if (qword_10166EFF0 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_10171A6B0;
      break;
    case 3:
      if (qword_10166EFF8 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_10171A6B8;
      break;
    default:
      if (qword_10166EFE0 != -1) {
        swift_once();
      }
      uint64_t v4 = &qword_10171A6A0;
      break;
  }
  id v5 = (id)*v4;

  return v5;
}

void sub_100F48954(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_invalidCharIndex;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_invalidCharIndex);
  if (v3 > a1) {
    return;
  }
  uint64_t v4 = a1;
  uint64_t v5 = a1 + 1;
  if (__OFADD__(a1, 1)) {
    goto LABEL_119;
  }
  uint64_t v6 = v1;
  uint64_t v81 = OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage;
  id v7 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform17CRLWPTopicNumbers_storage);
  uint64_t v8 = &selRef_beginHandwritingModeIfNeeded;
  uint64_t v9 = (uint64_t)[v7 characterCount];
  if (v9 < 0)
  {
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  uint64_t v10 = v9;
  if (v9 >= v5) {
    uint64_t v11 = v5 & ~(v5 >> 63);
  }
  else {
    uint64_t v11 = v9;
  }
  if ((uint64_t)[v7 characterCount] < v11) {
    goto LABEL_135;
  }
  if (v10 >= v3) {
    uint64_t v12 = v3;
  }
  else {
    uint64_t v12 = v10;
  }
  if (v3 >= 0) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v84 = (void *)sub_10056A7DC(v7, v13, v11);
  uint64_t v15 = v14;
  uint64_t v17 = v16;

  uint64_t v83 = v15;
  uint64_t v18 = v81;
  if (v15 >= v17)
  {
    id v19 = &selRef_taggerStateOutsideCore;
    uint64_t v78 = v4;
    uint64_t v79 = v2;
    do
    {
      char v20 = (char *)[v84 charIndexForParagraphAtIndex:v17];
      if ((uint64_t)[v84 v8[464]] < (uint64_t)v20) {
        goto LABEL_111;
      }
      NSNotFound.getter();
      id v21 = [v84 paragraphIndexAtCharIndex:v20];
      unint64_t v22 = (char *)[v84 v19[98] v17];
      if (__OFADD__(v22, v23)) {
        goto LABEL_112;
      }
      if (__OFADD__(v17++, 1)) {
        goto LABEL_113;
      }
      if ((uint64_t)&v22[v23] < (uint64_t)v20) {
        goto LABEL_114;
      }
      id v25 = [*(id *)(v6 + v18) v19[98] v21];
      if ((uint64_t)v25 > v4) {
        break;
      }
      uint64_t v27 = (uint64_t)v25;
      uint64_t v28 = v26;
      id v29 = [*(id *)(v6 + v18) listStyleAtParIndex:v21 effectiveRange:0];
      if (v29)
      {
        int64_t v30 = v29;
        id v31 = [*(id *)(v6 + v18) listStyleAtParIndex:v21 effectiveRange:0];
        if (v31)
        {
          uint64_t v32 = v31;
          switch(*((unsigned char *)v31 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType))
          {
            case 1:
              uint64_t v33 = &qword_10171A6A8;
              if (qword_10166EFE8 != -1)
              {
                swift_once();
                uint64_t v33 = &qword_10171A6A8;
              }
              break;
            case 2:
              uint64_t v33 = &qword_10171A6B0;
              if (qword_10166EFF0 != -1)
              {
                swift_once();
                uint64_t v33 = &qword_10171A6B0;
              }
              break;
            case 3:
              uint64_t v33 = &qword_10171A6B8;
              if (qword_10166EFF8 != -1)
              {
                swift_once();
                uint64_t v33 = &qword_10171A6B8;
              }
              break;
            default:
              uint64_t v33 = &qword_10171A6A0;
              if (qword_10166EFE0 != -1)
              {
                swift_once();
                uint64_t v33 = &qword_10171A6A0;
              }
              break;
          }
          id v82 = (id)*v33;

          uint64_t v34 = (uint64_t)[*(id *)(v6 + v18) paragraphLevelAtParIndex:v21];
          uint64_t v35 = sub_1007521E8();
          if (v34 < 0) {
            goto LABEL_116;
          }
          if ((unint64_t)v34 >= *(void *)(v35 + 16)) {
            goto LABEL_117;
          }
          uint64_t v36 = v35 + 32;
          if (*(void *)(v35 + 32 + 8 * v34) != 3)
          {

            swift_bridgeObjectRelease();
LABEL_105:
            uint64_t v2 = v79;
            uint64_t v18 = v81;
            goto LABEL_106;
          }
          uint64_t v80 = v35;
          sub_100F48490(v82);
          if (v38)
          {
            uint64_t v39 = v37 + 1;
            if (__OFADD__(v37, 1)) {
              goto LABEL_121;
            }
            if (v39 < v34)
            {
              uint64_t v77 = v37;
              uint64_t v40 = v38;
              goto LABEL_45;
            }
            uint64_t v40 = v38;
            if (v34 >= v37)
            {
LABEL_77:
              uint64_t v58 = (uint64_t)[*(id *)(v6 + v81) listStartAtParIndex:v21];
              uint64_t v59 = NSNotFound.getter();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              if (v58 < 1 || v58 == v59)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  uint64_t v40 = sub_100F6891C((uint64_t)v40);
                }
                if (v34 >= *((void *)v40 + 2)) {
                  goto LABEL_122;
                }
                double v62 = v40[4 * v34 + 4];
                BOOL v63 = __CFADD__(*(void *)&v62, 1);
                *(void *)&double v64 = *(void *)&v62 + 1;
                if (v63) {
                  goto LABEL_124;
                }
                v40[4 * v34 + 4] = v64;
              }
              else
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  uint64_t v40 = sub_100F6891C((uint64_t)v40);
                }
                if (v34 >= *((void *)v40 + 2)) {
                  goto LABEL_123;
                }
                *(void *)&v40[4 * v34 + 4] = v58;
              }
              uint64_t v65 = sub_1007520A0();
              uint64_t v66 = sub_1007520C0();
              unint64_t v67 = *((void *)v40 + 2);
              if ((uint64_t)v67 < v34) {
                goto LABEL_118;
              }
              if (v34 != v67)
              {
                if (v34 < (uint64_t)v67)
                {
                  uint64_t v68 = *(void *)(v65 + 16);
                  if (v34 < v68 && v67 <= v68)
                  {
                    uint64_t v69 = *(void *)(v80 + 16);
                    if (v34 < v69 && v67 <= v69)
                    {
                      uint64_t v70 = *(void *)(v66 + 16);
                      if (v34 < v70 && v67 <= v70)
                      {
                        uint64_t v71 = &v40[4 * v34 + 7];
                        unint64_t v72 = v34;
                        while ((v72 & 0x8000000000000000) == 0)
                        {
                          if (v72 >= *((void *)v40 + 2)) {
                            goto LABEL_110;
                          }
                          *(v71 - 1) = *(double *)(v65 + 32 + 8 * v72);
                          *(v71 - 2) = *(double *)(v36 + 8 * v72);
                          *(unsigned char *)uint64_t v71 = *(unsigned char *)(v66 + 32 + v72);
                          v71 += 4;
                          if (v67 == ++v72) {
                            goto LABEL_104;
                          }
                        }
                        __break(1u);
LABEL_110:
                        __break(1u);
LABEL_111:
                        __break(1u);
LABEL_112:
                        __break(1u);
LABEL_113:
                        __break(1u);
LABEL_114:
                        __break(1u);
LABEL_115:
                        __break(1u);
LABEL_116:
                        __break(1u);
LABEL_117:
                        __break(1u);
LABEL_118:
                        __break(1u);
LABEL_119:
                        __break(1u);
                        goto LABEL_120;
                      }
LABEL_128:
                      __break(1u);
LABEL_129:
                      __break(1u);
LABEL_130:
                      __break(1u);
LABEL_131:
                      __break(1u);
LABEL_132:
                      __break(1u);
LABEL_133:
                      __break(1u);
LABEL_134:
                      __break(1u);
LABEL_135:
                      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(storage:range:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 31, (uint64_t)"Bad range when initializing CRLWPStorage.Paragraphs", 51, 2u, (uint64_t)_swiftEmptyArrayStorage);
                      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Bad range when initializing CRLWPStorage.Paragraphs");
                      sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(storage:range:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPParagraphIterator.swift", 88, 2, 31);
                      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v73, v74);
                      _assertionFailure(_:_:file:line:flags:)();
                      __break(1u);
                      JUMPOUT(0x100F49274);
                    }
LABEL_127:
                    __break(1u);
                    goto LABEL_128;
                  }
LABEL_126:
                  __break(1u);
                  goto LABEL_127;
                }
LABEL_125:
                __break(1u);
                goto LABEL_126;
              }
LABEL_104:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_100F4857C(v27, v34, (uint64_t)v40, v82);
              swift_bridgeObjectRelease();

              uint64_t v4 = v78;
              goto LABEL_105;
            }
LABEL_64:
            int64_t v50 = v37;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v40 = sub_100F6891C((uint64_t)v40);
            }
            uint64_t v51 = v34 + 1;
            unint64_t v52 = *((void *)v40 + 2);
            if (v34 + 1 >= v52) {
              goto LABEL_129;
            }
            v40[4 * v51 + 4] = 0.0;
            if (v51 != v50)
            {
              if (v51 >= v50) {
                goto LABEL_133;
              }
              if (v34 + 2 >= v52 || v50 >= (uint64_t)v52) {
                goto LABEL_134;
              }
              unint64_t v53 = v50 + ~v34;
              if (v53 < 2) {
                goto LABEL_75;
              }
              v51 += v53 & 0xFFFFFFFFFFFFFFFELL;
              uint64_t v54 = &v40[4 * v34 + 16];
              unint64_t v55 = v53 & 0xFFFFFFFFFFFFFFFELL;
              do
              {
                *(v54 - 4) = 0.0;
                *uint64_t v54 = 0.0;
                v54 += 8;
                v55 -= 2;
              }
              while (v55);
              if (v53 != (v53 & 0xFFFFFFFFFFFFFFFELL))
              {
LABEL_75:
                uint64_t v56 = 32 * v51 + 64;
                int64_t v57 = v50 - v51;
                do
                {
                  *(double *)((char *)v40 + v56) = 0.0;
                  v56 += 32;
                  --v57;
                }
                while (v57);
              }
            }
            goto LABEL_77;
          }
          uint64_t v77 = v37;
          uint64_t v41 = static Array._allocateBufferUninitialized(minimumCapacity:)();
          uint64_t v38 = 0;
          uint64_t v40 = (double *)v41;
          uint64_t v39 = 0;
          *(void *)(v41 + 16) = 9;
          *(void *)(v41 + 40) = 0;
          *(void *)(v41 + 48) = 0;
          *(void *)(v41 + 32) = 0;
          *(unsigned char *)(v41 + 56) = 0;
          *(void *)(v41 + 72) = 0;
          *(void *)(v41 + 80) = 0;
          *(void *)(v41 + 64) = 0;
          *(unsigned char *)(v41 + 88) = 0;
          *(void *)(v41 + 104) = 0;
          *(void *)(v41 + 112) = 0;
          *(void *)(v41 + 96) = 0;
          *(unsigned char *)(v41 + 120) = 0;
          *(void *)(v41 + 136) = 0;
          *(void *)(v41 + 144) = 0;
          *(void *)(v41 + 128) = 0;
          *(unsigned char *)(v41 + 152) = 0;
          *(void *)(v41 + 160) = 0;
          *(void *)(v41 + 168) = 0;
          *(unsigned char *)(v41 + 184) = 0;
          *(void *)(v41 + 176) = 0;
          *(void *)(v41 + 192) = 0;
          *(void *)(v41 + 200) = 0;
          *(unsigned char *)(v41 + 216) = 0;
          *(void *)(v41 + 208) = 0;
          *(void *)(v41 + 232) = 0;
          *(void *)(v41 + 240) = 0;
          *(void *)(v41 + 224) = 0;
          *(unsigned char *)(v41 + 248) = 0;
          *(void *)(v41 + 264) = 0;
          *(void *)(v41 + 272) = 0;
          *(void *)(v41 + 256) = 0;
          *(unsigned char *)(v41 + 280) = 0;
          *(void *)(v41 + 296) = 0;
          *(void *)(v41 + 304) = 0;
          *(void *)(v41 + 288) = 0;
          *(unsigned char *)(v41 + 312) = 0;
          if (!v34) {
            goto LABEL_77;
          }
LABEL_45:
          if (v34 == v39)
          {
            uint64_t v42 = v38;
            swift_bridgeObjectRetain();
            uint64_t v43 = v42;
            goto LABEL_62;
          }
          if (v34 <= v39) {
            goto LABEL_130;
          }
          if (v39 < 0) {
            goto LABEL_131;
          }
          unint64_t v76 = v34 - v39;
          unint64_t v44 = *((void *)v40 + 2);
          if (v39 >= v44 || v34 - 1 >= v44) {
            goto LABEL_132;
          }
          id v75 = v38;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v40 = sub_100F6891C((uint64_t)v40);
          }
          uint64_t v43 = v75;
          if (v76 < 2)
          {
            uint64_t v45 = v39;
            goto LABEL_60;
          }
          uint64_t v45 = v39 + (v76 & 0xFFFFFFFFFFFFFFFELL);
          uint64_t v46 = &v40[4 * v39 + 8];
          unint64_t v47 = v76 & 0xFFFFFFFFFFFFFFFELL;
          do
          {
            *((void *)v46 - 4) = 1;
            *(void *)uint64_t v46 = 1;
            v46 += 8;
            v47 -= 2;
          }
          while (v47);
          if (v76 != (v76 & 0xFFFFFFFFFFFFFFFELL))
          {
LABEL_60:
            uint64_t v48 = 32 * v45 + 32;
            uint64_t v49 = v34 - v45;
            do
            {
              *(void *)((char *)v40 + v48) = 1;
              v48 += 32;
              --v49;
            }
            while (v49);
          }
LABEL_62:
          if (!v43) {
            goto LABEL_77;
          }
          swift_bridgeObjectRelease();
          uint64_t v37 = v77;
          if (v34 >= v77) {
            goto LABEL_77;
          }
          goto LABEL_64;
        }
      }
LABEL_106:
      if (__OFADD__(v27, v28)) {
        goto LABEL_115;
      }
      *(void *)(v6 + v2) = v27 + v28;
      uint64_t v8 = &selRef_beginHandwritingModeIfNeeded;
      id v19 = &selRef_taggerStateOutsideCore;
    }
    while (v83 >= v17);
  }
}

void CRLWPTopicNumbers.init()()
{
}

id CRLWPTopicNumbers.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLWPTopicNumbers();
  return [super dealloc];
}

uint64_t sub_100F49364(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = a3;
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      uint64_t v8 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= a2) {
        goto LABEL_4;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v8 < v4) {
    goto LABEL_35;
  }
LABEL_4:
  uint64_t v8 = v4 - v5;
  if (__OFSUB__(v4, v5))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v7 = v6 >> 62;
  if (!(v6 >> 62))
  {
    uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v10 = v9 - v8;
    if (!__OFSUB__(v9, v8)) {
      goto LABEL_7;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v28 + v32;
    if (!__OFADD__(v28, v32)) {
      goto LABEL_9;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 - v8;
  if (__OFSUB__(v9, v8)) {
    goto LABEL_39;
  }
LABEL_7:
  uint64_t v32 = v10;
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_40;
  }
  uint64_t v11 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v10;
  if (__OFADD__(v11, v10)) {
    goto LABEL_42;
  }
LABEL_9:
  unint64_t v13 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v13;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    uint64_t v31 = v5;
    uint64_t v8 = v4;
    uint64_t v4 = v9;
    uint64_t v9 = v7;
    uint64_t v7 = v6;
    if (!(v13 >> 62))
    {
LABEL_14:
      swift_bridgeObjectRetain();
      *uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      uint64_t v15 = *v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v6 = v7;
      uint64_t v7 = v9;
      uint64_t v9 = v4;
      uint64_t v4 = v8;
      uint64_t v5 = v31;
      goto LABEL_15;
    }
LABEL_43:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v16 = v15 + 32;
  uint64_t v17 = v15 + 32 + 8 * v5;
  type metadata accessor for CRLBoardLibraryViewModelItemNode();
  swift_arrayDestroy();
  uint64_t v18 = v32;
  if (!v32) {
    goto LABEL_25;
  }
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v19 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v20 = v19 - v4;
    if (!__OFSUB__(v19, v4)) {
      goto LABEL_18;
    }
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v18 = v32;
  uint64_t v20 = v29 - v4;
  if (__OFSUB__(v29, v4)) {
    goto LABEL_46;
  }
LABEL_18:
  if (v20 < 0)
  {
LABEL_51:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  id v21 = (char *)(v17 + 8 * v9);
  unint64_t v22 = (char *)(v16 + 8 * v4);
  if (v21 != v22 || v21 >= &v22[8 * v20])
  {
    memmove(v21, v22, 8 * v20);
    uint64_t v18 = v32;
  }
  if ((unint64_t)*v3 >> 62)
  {
LABEL_47:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v24 = v30 + v32;
    if (!__OFADD__(v30, v32)) {
      goto LABEL_24;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v23 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v24 = v23 + v18;
  if (__OFADD__(v23, v18)) {
    goto LABEL_49;
  }
LABEL_24:
  *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
LABEL_25:
  if (v9 >= 1)
  {
    if (v7)
    {
      unint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = sub_1006B97C8(v25);
      swift_bridgeObjectRelease();
      sub_100F4A438((uint64_t)(v26 + 4), *((void *)v26 + 2), v9);
      swift_release();
      goto LABEL_30;
    }
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) == v9)
    {
      swift_arrayInitWithCopy();
      goto LABEL_30;
    }
    goto LABEL_50;
  }
LABEL_30:
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_100F49780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100F497A8(a1, a2, a3, &qword_10167ADE0);
}

uint64_t sub_100F49794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100F497A8(a1, a2, a3, &qword_1016838E0);
}

uint64_t sub_100F497A8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a4;
    uint64_t v9 = a3;
    uint64_t v6 = a2;
    uint64_t v8 = a1;
    if (!(*v5 >> 62))
    {
      if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 < v6) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v10 = v6 - v8;
  if (__OFSUB__(v6, v8))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v4 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25 + v4;
    if (!__OFADD__(v25, v4)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v29 = v7;
  if (*v5 >> 62) {
    goto LABEL_32;
  }
  uint64_t v11 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v4;
  if (__OFADD__(v11, v4)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v13 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v13;
  uint64_t v28 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v13 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v5 = v13;
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v16 = (void *)(v15 + 32 + 8 * v8);
  sub_10050BF48(0, v29);
  swift_arrayDestroy();
  if (v4)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v26 - v6;
      if (!__OFSUB__(v26, v6))
      {
LABEL_17:
        if (v18 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v16 + 1);
        uint64_t v20 = (char *)(v15 + 32 + 8 * v6);
        if (v16 + 1 != (void *)v20 || v19 >= &v20[8 * v18]) {
          memmove(v19, v20, 8 * v18);
        }
        if (!(v13 >> 62))
        {
          uint64_t v21 = *(void *)(v15 + 16);
          uint64_t v22 = v21 + v4;
          if (!__OFADD__(v21, v4))
          {
LABEL_23:
            *(void *)(v15 + 16) = v22;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v22 = v27 + v4;
        if (!__OFADD__(v27, v4)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v18 = v17 - v6;
      if (!__OFSUB__(v17, v6)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v16 = v28;

  return specialized Array._endMutation()();
}

uint64_t sub_100F49AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100F497A8(a1, a2, a3, (unint64_t *)&qword_101674470);
}

uint64_t sub_100F49AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100F497A8(a1, a2, a3, (unint64_t *)&qword_101672600);
}

uint64_t sub_100F49AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for CRLCollaboratorPresence();
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v14 = v3;

  return specialized Array._endMutation()();
}

uint64_t sub_100F49DC4(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_100F617D8(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v17 = *(void *)(v15 + 72);
  unint64_t v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_33;
  }
  if (v20 < 0)
  {
LABEL_35:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v21 = v18 + v17;
  unint64_t v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v24 = *(void *)(v5 + 16);
  BOOL v25 = __OFADD__(v24, v9);
  uint64_t v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1) {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  }
  return sub_100522F00(a3, &qword_101695E00);
}

uint64_t sub_100F49FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100F4A214(a1, a2, a3, (uint64_t (*)(void))sub_100F632EC, type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLBoardIdentifier, (uint64_t *)&unk_101676570);
}

uint64_t sub_100F4A018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100F497A8(a1, a2, a3, (unint64_t *)&qword_101674210);
}

char *sub_100F4A02C(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *((void *)*v3 + 2);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > *((void *)v5 + 3) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_100F648A0(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = v5 + 4;
  uint64_t v15 = &v5[5 * a1 + 4];
  sub_1005057FC(&qword_10168E348);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v17 = *((void *)v5 + 2);
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_26;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v15 + 5);
    uint64_t v20 = &v14[5 * a2];
    if (v15 + 5 != v20 || result >= (char *)&v20[5 * v19]) {
      uint64_t result = (char *)memmove(result, v20, 40 * v19);
    }
    uint64_t v21 = *((void *)v5 + 2);
    BOOL v18 = __OFADD__(v21, v9);
    uint64_t v22 = v21 + v9;
    if (!v18)
    {
      *((void *)v5 + 2) = v22;
LABEL_20:
      uint64_t v24 = *(void *)(a3 + 8);
      uint64_t v23 = *(void *)(a3 + 16);
      double *v15 = *(double *)a3;
      *((void *)v15 + 1) = v24;
      BOOL v25 = &v14[5 * a1];
      *((void *)v25 + 2) = v23;
      *(_OWORD *)(v25 + 3) = *(_OWORD *)(a3 + 24);
      *uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F4A1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100F4A214(a1, a2, a3, (uint64_t (*)(void))sub_100F6321C, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb, &qword_101692EF8);
}

uint64_t sub_100F4A214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t *a7)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = *v7;
  uint64_t v10 = *(void *)(*v7 + 16);
  if (v10 < a2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v12 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v13 = 1 - v12;
  if (__OFSUB__(1, v12))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (__OFADD__(v10, v13))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v7 = v9;
  if (!isUniquelyReferenced_nonNull_native || v10 + v13 > *(void *)(v9 + 24) >> 1)
  {
    uint64_t v9 = a4();
    uint64_t *v7 = v9;
  }
  uint64_t v17 = *(void *)(a5(0) - 8);
  unint64_t v18 = v9 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  uint64_t v19 = *(void *)(v17 + 72);
  uint64_t v20 = v18 + v19 * a1;
  swift_arrayDestroy();
  if (!v13) {
    goto LABEL_22;
  }
  uint64_t v21 = *(void *)(v9 + 16);
  uint64_t v22 = v21 - a2;
  if (__OFSUB__(v21, a2)) {
    goto LABEL_30;
  }
  if (v22 < 0)
  {
LABEL_32:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v23 = v20 + v19;
  unint64_t v24 = v18 + v19 * a2;
  if (v20 + v19 < v24 || v23 >= v24 + v22 * v19)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v23 != v24)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v26 = *(void *)(v9 + 16);
  BOOL v27 = __OFADD__(v26, v13);
  uint64_t v28 = v26 + v13;
  if (v27)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(void *)(v9 + 16) = v28;
LABEL_22:
  if (v19 >= 1) {
    sub_100F4E83C(a3, v20, a6);
  }
  return sub_100522F00(a3, a7);
}

uint64_t sub_100F4A438(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 == a3)
  {
    if (result)
    {
      type metadata accessor for CRLBoardLibraryViewModelItemNode();
      return swift_arrayInitWithCopy();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t (*sub_100F4A4A0(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  int64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100F4E83C(a2, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
  v4[9] = sub_100F4BA44(v4);
  v4[10] = sub_100F4ABD4(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_100F4A580;
}

uint64_t (*sub_100F4A584(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  int64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100F4E83C(a2, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
  v4[9] = sub_100F4BA44(v4);
  v4[10] = sub_100F4AD54(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_100F4A580;
}

void sub_100F4A664(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  objc_super v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();
  sub_100510028((uint64_t)v3);
  v2(v1, 0);
  free(v3);

  free(v1);
}

uint64_t (*sub_100F4A6E0(void *a1, void *a2))()
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v6 = a2;
  v4[9] = sub_100F4BA44(v4);
  v4[10] = sub_100F4AF98(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_100F4A77C;
}

void (*sub_100F4A780(void *a1, char a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_100F4BA44(v4);
  v4[9] = sub_100F4B22C((uint64_t)(v4 + 4), a2 & 1, isUniquelyReferenced_nonNull_native);
  return sub_100F4A814;
}

void sub_100F4A814(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  objc_super v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

uint64_t (*sub_100F4A874(void *a1, void *a2))()
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v6 = a2;
  v4[9] = sub_100F4BA44(v4);
  v4[10] = sub_100F4B498(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_100F4A77C;
}

void (*sub_100F4A910(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x68uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for UUID();
  v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  v4[9] = v6;
  uint64_t v8 = malloc(*(void *)(v6 + 64));
  v4[10] = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v7 + 16))(v8, a2, v5);
  v4[11] = sub_100F4BA74(v4);
  v4[12] = sub_100F4B5F0(v4 + 4, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  return sub_100F4AA30;
}

void sub_100F4AA30(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  objc_super v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);

  free(v1);
}

uint64_t (*sub_100F4AAC8(void *a1, void *a2))()
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v6 = a2;
  v4[9] = sub_100F4BA44(v4);
  v4[10] = sub_100F4B8A4(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_100F4A77C;
}

void sub_100F4AB64(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  objc_super v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();

  v2(v1, 0);

  free(v1);
}

void (*sub_100F4ABD4(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  uint64_t v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_1009563EC(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_100F4AD04;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_10097E5C4();
      goto LABEL_7;
    }
    sub_100963900(v14, a3 & 1);
    unint64_t v18 = sub_1009563EC(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for CRLBoardIdentifier(0);
  uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100F4AD04(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_100F4BAB0(*a1, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();

  free(v1);
}

void (*sub_100F4AD54(void *a1, uint64_t a2, char a3))(void **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  *uint64_t v8 = a2;
  v8[1] = v3;
  uint64_t v9 = sub_1005057FC(&qword_101691F20);
  char v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  uint64_t v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_1009563EC(a2);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = type metadata accessor for CRLBoardEntity();
        uint64_t v21 = *(void *)(v20 - 8);
        sub_100F4E8A4(v19 + *(void *)(v21 + 72) * v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_100F4AF78;
      }
LABEL_11:
      uint64_t v20 = type metadata accessor for CRLBoardEntity();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_10097F508();
      goto LABEL_7;
    }
    sub_100965310(v16, a3 & 1);
    unint64_t v23 = sub_1009563EC(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for CRLBoardIdentifier(0);
  uint64_t result = (void (*)(void **, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100F4AF78(void **a1, uint64_t a2)
{
}

void (*sub_100F4AF98(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  *uint64_t v8 = a2;
  v8[1] = v3;
  uint64_t v9 = sub_1005057FC(&qword_101674228);
  char v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  uint64_t v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_100956E24(a2);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = type metadata accessor for CRLThrottleInfo(0);
        uint64_t v21 = *(void *)(v20 - 8);
        sub_100F4E8A4(v19 + *(void *)(v21 + 72) * v13, (uint64_t)v10, type metadata accessor for CRLThrottleInfo);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_100F4B1CC;
      }
LABEL_11:
      uint64_t v20 = type metadata accessor for CRLThrottleInfo(0);
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_100981A9C();
      goto LABEL_7;
    }
    sub_10096A204(v16, a3 & 1);
    unint64_t v23 = sub_100956E24(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_10050BF48(0, (unint64_t *)&qword_101674210);
  uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100F4B1CC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  objc_super v2 = (void *)(*a1)[2];
  sub_100F4BED4((uint64_t)v2, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_100522F00((uint64_t)v2, &qword_101674228);
  free(v2);

  free(v1);
}

void (*sub_100F4B22C(uint64_t a1, char a2, char a3))(uint64_t a1)
{
  uint64_t v4 = v3;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 24) = a2;
  char v7 = a2 & 1;
  uint64_t v8 = sub_1005057FC(&qword_101685CA8);
  uint64_t v9 = malloc(*(void *)(*(void *)(v8 - 8) + 64));
  *(void *)(a1 + 8) = v9;
  uint64_t v10 = *v3;
  unint64_t v12 = sub_1009571B8(v7);
  *(unsigned char *)(a1 + 25) = v11 & 1;
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    char v16 = v11;
    uint64_t v17 = *(void *)(v10 + 24);
    if (v17 >= v15 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v12;
      if (v16)
      {
LABEL_8:
        uint64_t v18 = *(void *)(*v4 + 56);
        uint64_t v19 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
        uint64_t v20 = *(void *)(v19 - 8);
        sub_100F4E8A4(v18 + *(void *)(v20 + 72) * v12, (uint64_t)v9, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
        uint64_t v21 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v9, v21, 1, v19);
        return sub_100F4B43C;
      }
LABEL_11:
      uint64_t v19 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = 1;
      goto LABEL_12;
    }
    if (v17 >= v15 && (a3 & 1) == 0)
    {
      sub_100981AE4();
      goto LABEL_7;
    }
    sub_10096A24C(v15, a3 & 1);
    unint64_t v22 = sub_1009571B8(v7);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      *(void *)(a1 + 16) = v22;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100F4B43C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  sub_100F4C158((uint64_t)v1, *(unsigned char *)(a1 + 25), *(uint64_t **)a1, *(void *)(a1 + 16), *(unsigned char *)(a1 + 24) & 1);
  sub_100522F00((uint64_t)v1, &qword_101685CA8);

  free(v1);
}

void (*sub_100F4B498(void *a1, uint64_t a2, char a3))(void *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  uint64_t v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_100956E24(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_100F4B5D8;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_100981CD8();
      goto LABEL_7;
    }
    sub_10096A56C(v14, a3 & 1);
    unint64_t v18 = sub_100956E24(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_10050BF48(0, (unint64_t *)&qword_101674210);
  uint64_t result = (void (*)(void *, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100F4B5D8(void *a1, uint64_t a2)
{
}

void (*sub_100F4B5F0(void *a1, uint64_t a2, char a3))(void **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  *uint64_t v8 = a2;
  v8[1] = v3;
  uint64_t v9 = sub_1005057FC(&qword_1016741F8);
  char v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  uint64_t v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_100955FC8(a2);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
        uint64_t v21 = *(void *)(v20 - 8);
        sub_100F4E8A4(v19 + *(void *)(v21 + 72) * v13, (uint64_t)v10, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_100F4B814;
      }
LABEL_11:
      uint64_t v20 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_100982B8C();
      goto LABEL_7;
    }
    sub_10096BDC4(v16, a3 & 1);
    unint64_t v23 = sub_100955FC8(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for UUID();
  uint64_t result = (void (*)(void **, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100F4B814(void **a1, uint64_t a2)
{
}

void sub_100F4B834(void **a1, uint64_t a2, void (*a3)(void *, void, void, void, void), uint64_t *a4)
{
  uint64_t v5 = *a1;
  id v6 = (void *)(*a1)[2];
  a3(v6, *((unsigned __int8 *)*a1 + 32), (*a1)[1], (*a1)[3], **a1);
  sub_100522F00((uint64_t)v6, a4);
  free(v6);

  free(v5);
}

void (*sub_100F4B8A4(void *a1, uint64_t a2, char a3))(void *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  uint64_t v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_100957828(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_100F4B9D4;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_10098605C();
      goto LABEL_7;
    }
    sub_100971334(v14, a3 & 1);
    unint64_t v18 = sub_100957828(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for CRLWPListStyle();
  uint64_t result = (void (*)(void *, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_100F4B9D4(void *a1, uint64_t a2)
{
}

void sub_100F4B9EC(void *a1, uint64_t a2, void (*a3)(void, void, void, void, void))
{
  uint64_t v3 = (void *)*a1;
  a3(*a1, *(unsigned __int8 *)(*a1 + 32), *(void *)(*a1 + 16), *(void *)(*a1 + 24), *(void *)(*a1 + 8));
  swift_bridgeObjectRelease();

  free(v3);
}

uint64_t (*sub_100F4BA44(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_100F4E91C;
}

uint64_t (*sub_100F4BA74(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_100F4BAA4;
}

uint64_t sub_100F4BAA4(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_100F4BAB0(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10, v11);
  BOOL v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  if (v14)
  {
    char v15 = (void *)*a3;
    if (a2)
    {
      *(void *)(v15[7] + 8 * a4) = v14;
    }
    else
    {
      sub_100F4E83C(a5, (uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardIdentifier);
      sub_10097A884(a4, (uint64_t)v13, v14, v15);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_100589450(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_100F4BBF0(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v28 = a5;
  unint64_t v29 = a4;
  int v30 = a2;
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v27 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardEntity();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  unint64_t v23 = (char *)&v27 - v22;
  sub_100522E9C(a1, (uint64_t)v14, &qword_101691F20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    unint64_t result = sub_100522F00((uint64_t)v14, &qword_101691F20);
    if (v30)
    {
      int64_t v25 = v29;
      swift_arrayDestroy();
      return sub_100589ADC(v25, *a3);
    }
  }
  else
  {
    sub_100F4E8A4((uint64_t)v14, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    uint64_t v26 = (void *)*a3;
    if (v30)
    {
      return sub_100F4E8A4((uint64_t)v23, v26[7] + *(void *)(v16 + 72) * v29, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    }
    else
    {
      sub_100F4E83C(v28, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      sub_100F4E8A4((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      return sub_10097ABB4(v29, (uint64_t)v10, (uint64_t)v20, v26);
    }
  }
  return result;
}

void sub_100F4BED4(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v26 = (void *)a5;
  uint64_t v9 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLThrottleInfo(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v25 - v20;
  sub_100522E9C(a1, (uint64_t)v12, &qword_101674228);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100522F00((uint64_t)v12, &qword_101674228);
    if (a2)
    {
      sub_10050BF48(0, (unint64_t *)&qword_101674210);
      swift_arrayDestroy();
      sub_10058B274(a4, *a3);
    }
  }
  else
  {
    sub_100F4E8A4((uint64_t)v12, (uint64_t)v21, type metadata accessor for CRLThrottleInfo);
    uint64_t v22 = (void *)*a3;
    if (a2)
    {
      sub_100F4E8A4((uint64_t)v21, v22[7] + *(void *)(v14 + 72) * a4, type metadata accessor for CRLThrottleInfo);
    }
    else
    {
      sub_100F4E8A4((uint64_t)v21, (uint64_t)v17, type metadata accessor for CRLThrottleInfo);
      sub_10097B084(a4, (uint64_t)v26, (uint64_t)v17, v22);
      unint64_t v23 = v26;
      id v24 = v23;
    }
  }
}

unint64_t sub_100F4C158(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, int a5)
{
  int v26 = a5;
  uint64_t v9 = sub_1005057FC(&qword_101685CA8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = &v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18, v19);
  uint64_t v21 = &v25[-v20];
  sub_100522E9C(a1, (uint64_t)v12, &qword_101685CA8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_100522F00((uint64_t)v12, &qword_101685CA8);
    if (a2) {
      return sub_10058B28C(a4, *a3);
    }
  }
  else
  {
    sub_100F4E8A4((uint64_t)v12, (uint64_t)v21, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    unint64_t v23 = (void *)*a3;
    if (a2)
    {
      return sub_100F4E8A4((uint64_t)v21, v23[7] + *(void *)(v14 + 72) * a4, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    }
    else
    {
      char v24 = v26 & 1;
      sub_100F4E8A4((uint64_t)v21, (uint64_t)v17, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      return sub_10097B0B0(a4, v24, (uint64_t)v17, v23);
    }
  }
  return result;
}

uint64_t sub_100F4C380(uint64_t *a1, char a2, void *a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    uint64_t v8 = (void *)*a3;
    if (a2)
    {
      *(void *)(v8[7] + 8 * a4) = v7;
    }
    else
    {
      sub_10097B0DC(a4, (uint64_t)a5, v7, v8);
      id v10 = a5;
    }
  }
  else if (a2)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    swift_arrayDestroy();
    sub_100588C34(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

void sub_100F4C43C(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v26 = a5;
  unint64_t v28 = a4;
  int v29 = a2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016741F8);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  unint64_t v23 = (char *)&v26 - v22;
  sub_100522E9C(a1, (uint64_t)v14, &qword_1016741F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100522F00((uint64_t)v14, &qword_1016741F8);
    if (v29)
    {
      int64_t v24 = v28;
      swift_arrayDestroy();
      sub_10058B4B8(v24, *a3);
    }
  }
  else
  {
    sub_100F4E8A4((uint64_t)v14, (uint64_t)v23, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa);
    uint64_t v25 = (void *)*a3;
    if (v29)
    {
      sub_100F4E8A4((uint64_t)v23, v25[7] + *(void *)(v16 + 72) * v28, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v10, v26, v7);
      sub_100F4E8A4((uint64_t)v23, (uint64_t)v19, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa);
      sub_10097B2DC(v28, (uint64_t)v10, (uint64_t)v19, v25);
    }
  }
}

uint64_t sub_100F4C71C(uint64_t *a1, char a2, void *a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    uint64_t v8 = (void *)*a3;
    if (a2)
    {
      *(void *)(v8[7] + 8 * a4) = v7;
    }
    else
    {
      sub_10097B0DC(a4, (uint64_t)a5, v7, v8);
      id v10 = a5;
    }
  }
  else if (a2)
  {
    type metadata accessor for CRLWPListStyle();
    swift_arrayDestroy();
    sub_100588C34(a4, *a3);
  }

  return swift_bridgeObjectRetain();
}

unint64_t *sub_100F4C7C8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = (unint64_t *)isStackAllocationSafe;
  char v4 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_100F4C920((unint64_t *)((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, (uint64_t)v3);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v7;
    }
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v3 = sub_100F4C920((unint64_t *)v8, v5, (uint64_t)v3);
    swift_slowDealloc();
  }
  return v3;
}

unint64_t *sub_100F4C920(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_100946AD4(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_100946AD4(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_100946AD4(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(void *)(*(void *)(*(void *)(a3 + 56) + 8 * v12) + 16))
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_100946AD4(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_100946AD4(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_100946AD4(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100F4CA70(uint64_t a1, uint64_t a2)
{
  return sub_100F4CAA0(a1, a2, (void (*)(void))type metadata accessor for CRLBoardLibraryViewModelItemNode);
}

uint64_t sub_100F4CA88(uint64_t a1, uint64_t a2)
{
  return sub_100F4CAA0(a1, a2, (void (*)(void))type metadata accessor for CRLBoardItemDatabaseResult);
}

uint64_t sub_100F4CAA0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!((unint64_t)*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v3) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((unint64_t)*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      *uint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      uint64_t v13 = *v4 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = v13 + 32;
  int64_t v15 = (char *)(v13 + 32 + 8 * v5);
  v6(0);
  swift_arrayDestroy();
  if (v7)
  {
    if ((unint64_t)*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v17 = v24 - v3;
      if (!__OFSUB__(v24, v3))
      {
LABEL_17:
        if (v17 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v18 = (char *)(v14 + 8 * v3);
        if (v5 != v3 || v15 >= &v18[8 * v17]) {
          memmove(v15, v18, 8 * v17);
        }
        if (!((unint64_t)*v4 >> 62))
        {
          uint64_t v19 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v17 = v16 - v3;
      if (!__OFSUB__(v16, v3)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_100F4CDB4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100F62618(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = 16 * a1;
  uint64_t v13 = &v4[2 * a1 + 4];
  sub_1005057FC(&qword_1016A27D0);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v15 = *((void *)v4 + 2);
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = &v4[2 * a2 + 4];
    size_t v19 = 2 * v17;
    if (v12 != 16 * a2 || v13 >= &v18[v19]) {
      uint64_t result = (uint64_t)memmove(v13, v18, v19 * 8);
    }
    uint64_t v20 = *((void *)v4 + 2);
    BOOL v16 = __OFADD__(v20, v8);
    uint64_t v21 = v20 - v7;
    if (!v16)
    {
      *((void *)v4 + 2) = v21;
LABEL_20:
      void *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F4CF30(uint64_t a1, uint64_t a2)
{
  return sub_100F4CF60(a1, a2, (void (*)(void))type metadata accessor for CRLCollaborationParticipant);
}

uint64_t sub_100F4CF48(uint64_t a1, uint64_t a2)
{
  return sub_100F4CF60(a1, a2, (void (*)(void))type metadata accessor for CRLCollaboratorPresence);
}

uint64_t sub_100F4CF60(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v3) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v21 + v7;
    if (!__OFADD__(v21, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  v6(0);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v3;
      if (!__OFSUB__(v22, v3))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        BOOL v16 = (const void *)(v13 + 32 + 8 * v3);
        if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v16 + 8 * v15) {
          memmove((void *)(v13 + 32 + 8 * v5), v16, 8 * v15);
        }
        if (!(v11 >> 62))
        {
          uint64_t v17 = *(void *)(v13 + 16);
          uint64_t v18 = v17 + v7;
          if (!__OFADD__(v17, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v7;
        if (!__OFADD__(v23, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = v14 - v3;
      if (!__OFSUB__(v14, v3)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_100F4D248(uint64_t a1, uint64_t a2)
{
  return sub_100F4CF60(a1, a2, (void (*)(void))type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup);
}

uint64_t sub_100F4D260(uint64_t a1, uint64_t a2)
{
  return sub_100F4D48C(a1, a2, &qword_10167AEC0);
}

uint64_t sub_100F4D26C(uint64_t a1, uint64_t a2)
{
  return sub_100F4D48C(a1, a2, &qword_10167AEA8);
}

uint64_t sub_100F4D278(uint64_t a1, uint64_t a2)
{
  return sub_100F4D79C(a1, a2, (uint64_t (*)(void))sub_100F6321C, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
}

uint64_t sub_100F4D2A4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100F63730(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = *((void *)v4 + 2);
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    BOOL v16 = &v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= &v16[5 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    }
    uint64_t v17 = *((void *)v4 + 2);
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      *((void *)v4 + 2) = v18;
LABEL_20:
      void *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F4D41C(uint64_t a1, uint64_t a2)
{
  return sub_100F4D79C(a1, a2, (uint64_t (*)(void))sub_100F632EC, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100F4D448(uint64_t a1, uint64_t a2)
{
  return sub_100F4D9B4(a1, a2, (uint64_t (*)(void))sub_100F64858, &qword_10168E300);
}

uint64_t sub_100F4D468(uint64_t a1, uint64_t a2)
{
  return sub_100F4D48C(a1, a2, &qword_10167AD90);
}

uint64_t sub_100F4D474(uint64_t a1, uint64_t a2)
{
  return sub_100F4D48C(a1, a2, &qword_10167AD50);
}

uint64_t sub_100F4D480(uint64_t a1, uint64_t a2)
{
  return sub_100F4D48C(a1, a2, &qword_10167ADA8);
}

uint64_t sub_100F4D48C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v3) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v21 + v7;
    if (!__OFADD__(v21, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  sub_1005057FC(v6);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v3;
      if (!__OFSUB__(v22, v3))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        BOOL v16 = (const void *)(v13 + 32 + 8 * v3);
        if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v16 + 8 * v15) {
          memmove((void *)(v13 + 32 + 8 * v5), v16, 8 * v15);
        }
        if (!(v11 >> 62))
        {
          uint64_t v17 = *(void *)(v13 + 16);
          uint64_t v18 = v17 + v7;
          if (!__OFADD__(v17, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v7;
        if (!__OFADD__(v23, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = v14 - v3;
      if (!__OFSUB__(v14, v3)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_100F4D770(uint64_t a1, uint64_t a2)
{
  return sub_100F4D79C(a1, a2, (uint64_t (*)(void))sub_100F6273C, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_100F4D79C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  uint64_t v13 = *(void *)(a4(0) - 8);
  unint64_t v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_28;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 - v9;
    if (!v23)
    {
      *(void *)(v6 + 16) = v24;
LABEL_22:
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F4D994(uint64_t a1, uint64_t a2)
{
  return sub_100F4D9B4(a1, a2, (uint64_t (*)(void))sub_100F642B4, &qword_10167F0F0);
}

uint64_t sub_100F4D9B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  uint64_t v13 = *(void *)(sub_1005057FC(a4) - 8);
  unint64_t v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_28;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 - v9;
    if (!v23)
    {
      *(void *)(v6 + 16) = v24;
LABEL_22:
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F4DBA8(uint64_t a1, uint64_t a2)
{
  return sub_100F4DBBC(a1, a2, &qword_10167BED0);
}

uint64_t sub_100F4DBBC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15 < v3) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v11 = v16 + v27;
    if (!__OFADD__(v16, v27)) {
      goto LABEL_8;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v7 = *v4;
  uint64_t v27 = v5 - v3;
  uint64_t v28 = v5;
  if (*v4 >> 62) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 - v8;
  if (__OFADD__(v10, v9)) {
    goto LABEL_20;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v7;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
    {
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
        unint64_t v14 = v6;
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  unint64_t v14 = v6;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *uint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_24:
  unint64_t v17 = (char *)(v13 + 32 + 8 * v28);
  sub_10050BF48(0, v14);
  swift_arrayDestroy();
  uint64_t v18 = v27;
  if (v27)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v27;
      uint64_t v20 = v25 - v3;
      if (!__OFSUB__(v25, v3))
      {
LABEL_27:
        if (v20 < 0)
        {
LABEL_43:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v21 = (char *)(v13 + 32 + 8 * v3);
        if (v28 != v3 || v17 >= &v21[8 * v20])
        {
          memmove(v17, v21, 8 * v20);
          uint64_t v18 = v27;
        }
        if (!(v7 >> 62))
        {
          uint64_t v22 = *(void *)(v13 + 16);
          uint64_t v23 = v22 + v18;
          if (!__OFADD__(v22, v18))
          {
LABEL_33:
            *(void *)(v13 + 16) = v23;
            goto LABEL_34;
          }
          goto LABEL_42;
        }
LABEL_40:
        swift_bridgeObjectRetain();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v23 = v26 + v27;
        if (!__OFADD__(v26, v27)) {
          goto LABEL_33;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v19 = *(void *)(v13 + 16);
      uint64_t v20 = v19 - v3;
      if (!__OFSUB__(v19, v3)) {
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_40;
  }
LABEL_34:

  return specialized Array._endMutation()();
}

uint64_t sub_100F4DEE0(uint64_t a1, uint64_t a2)
{
  return sub_100F4DBBC(a1, a2, (unint64_t *)&qword_101674210);
}

char *sub_100F4DEF4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= v4[3] >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = (char *)sub_100F61A64(result, v11, 1, v4);
    uint64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = v4[2];
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)v4 + 2 * a1 + 32;
    uint64_t v15 = (char *)v4 + 2 * a2 + 32;
    if (a1 != a2 || result >= &v15[2 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 2 * v14);
    }
    uint64_t v16 = v4[2];
    BOOL v13 = __OFADD__(v16, v8);
    uint64_t v17 = v16 + v8;
    if (!v13)
    {
      v4[2] = v17;
LABEL_21:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100F4E050(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= v4[3] >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = (char *)sub_100F61954(result, v11, 1, v4);
    uint64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = v4[2];
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)v4 + 4 * a1 + 32;
    uint64_t v15 = (char *)v4 + 4 * a2 + 32;
    if (a1 != a2 || result >= &v15[4 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 4 * v14);
    }
    uint64_t v16 = v4[2];
    BOOL v13 = __OFADD__(v16, v8);
    uint64_t v17 = v16 + v8;
    if (!v13)
    {
      v4[2] = v17;
LABEL_21:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F4E1AC(uint64_t a1, uint64_t a2)
{
  return sub_100F4DBBC(a1, a2, &qword_1016787C0);
}

uint64_t sub_100F4E1C0(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  sub_1005057FC(&qword_10167AF48);
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

unint64_t sub_100F4E4A4(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v11 = v6 + v10;
  if (__OFADD__(v6, v10))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v26 = v9 - v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v11) {
      int64_t v13 = v11;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_100F635A4(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = *(void *)(type metadata accessor for CRLBoardItemPeerSyncUpdate(0) - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = *(void *)(v14 + 72);
  unint64_t v17 = v5 + v15 + v16 * a1;
  unint64_t result = swift_arrayDestroy();
  if (!v26) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_33;
  }
  if (v20 < 0)
  {
LABEL_35:
    unint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t result = v17 + v16 * v9;
  unint64_t v21 = v5 + v15 + v16 * a2;
  if (result < v21 || result >= v21 + v20 * v16)
  {
    unint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (result != v21)
  {
    unint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v26);
  uint64_t v25 = v23 + v26;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v9) {
    unint64_t result = swift_arrayInitWithCopy();
  }
  *uint64_t v3 = v5;
  return result;
}

uint64_t sub_100F4E6B4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (double *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_100F653B8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = *((void *)v4 + 2);
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = &v4[3 * a2 + 4];
    if (a1 != a2 || &v4[3 * a1 + 4] >= &v16[3 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[3 * a1 + 4], v16, 24 * v15);
    }
    uint64_t v17 = *((void *)v4 + 2);
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      *((void *)v4 + 2) = v18;
LABEL_20:
      void *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for CRLWPTopicNumberEntry()
{
  return &type metadata for CRLWPTopicNumberEntry;
}

uint64_t sub_100F4E83C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100F4E8A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for CRLWPTopicNumber()
{
  return &type metadata for CRLWPTopicNumber;
}

id sub_100F4E920()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLMiniFormatterShapeFillDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterShapeFillDataProvider()
{
  return self;
}

id sub_100F4EA5C()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLCanvasDotGridBackgroundView();
  [super dealloc];
}

uint64_t type metadata accessor for CRLCanvasDotGridBackgroundView()
{
  return self;
}

void *sub_100F4EAB4(double a1, double a2)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  type metadata accessor for CGPoint(0);
  *(void *)(v6 + 56) = v7;
  *(double *)(v6 + 32) = a1;
  *(double *)(v6 + 40) = a2;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v6;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v19 = v5;
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  uint64_t v10 = (void *)Strong;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  id v12 = v5;
  swift_bridgeObjectRetain();
  id v13 = [v10 layoutForInfo:v11];

  if (!v13)
  {
LABEL_11:
    swift_release();
LABEL_12:
    uint64_t v15 = 0;
    goto LABEL_13;
  }
  type metadata accessor for CRLWPLayout();
  BOOL v14 = (void *)swift_dynamicCastClass();
  uint64_t v15 = v14;
  if (!v14)
  {
    swift_release();

    goto LABEL_13;
  }
  if (([v14 layoutIsValid] & 1) == 0) {
    [v15 validate];
  }
  uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v16)
  {
    swift_release();

    goto LABEL_12;
  }
  uint64_t v17 = v16;
  [v16 convertBoundsToUnscaledPoint:a1, a2];
  id v18 = (id)qword_10171A478;
  sub_1006EAD90(v15, &v21);

  uint64_t v15 = v21;
  swift_release();

LABEL_13:
  swift_bridgeObjectRelease();
  return v15;
}

void sub_100F4ECFC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController);
  if (v1)
  {
    uint64_t v2 = *(void (**)(void))((swift_isaMask & *v1) + 0x188);
    uint64_t v3 = v1;
    v2();
  }
}

uint64_t sub_100F4EDAC(uint64_t a1, uint64_t a2)
{
  return sub_100F4EDDC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1006EAF68);
}

uint64_t sub_100F4EDC4(uint64_t a1, uint64_t a2)
{
  return sub_100F4EDDC(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1006EB2B0);
}

uint64_t sub_100F4EDDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v8 = Strong;
  id v9 = [Strong layoutForInfo:*(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)];

  if (!v9) {
    return 0;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v10 = (void *)swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;
    if (([v10 layoutIsValid] & 1) == 0) {
      [v11 validate];
    }
    uint64_t v12 = a3(a1, a2);
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

char *sub_100F4EECC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v8 = Strong;
  id v9 = [Strong layoutForInfo:*(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)];

  if (!v9) {
    return 0;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v10 = (void *)swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;
    if (([v10 layoutIsValid] & 1) == 0) {
      [v11 validate];
    }
    uint64_t v12 = sub_1006EB530(a1, a2, a3);
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

void sub_100F4EFBC()
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v1 = OBJC_IVAR____TtC8Freeform27CRLWPTextSelectionManager_i_loupeSession;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLWPTextSelectionManager_i_loupeSession);
  id v3 = (id)qword_10171A478;
  [v2 invalidate];
  id v4 = *(id *)(v0 + v1);
  *(void *)(v0 + v1) = 0;
}

double *sub_100F4F19C(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return _swiftEmptyArrayStorage;
  }
  id v4 = Strong;
  id v5 = [Strong layoutForInfo:*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)];

  uint64_t v6 = _swiftEmptyArrayStorage;
  if (!v5) {
    return v6;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v7 = (void *)swift_dynamicCastClass();
  if (!v7) {
    goto LABEL_29;
  }
  uint64_t v8 = v7;
  if (([v7 layoutIsValid] & 1) == 0) {
    [v8 validate];
  }
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (!v9) {
    goto LABEL_29;
  }
  uint64_t v10 = (void *)v9;
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117E810;
  *(void *)(v12 + 56) = type metadata accessor for CRLTextRange();
  *(void *)(v12 + 32) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v12;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_101177E70;
  *(void *)(v14 + 32) = a1;
  unint64_t v49 = v14;
  specialized Array._endMutation()();
  uint64_t v15 = (void *)qword_10171A478;
  id v16 = a1;
  id v17 = v11;
  swift_bridgeObjectRetain();
  id v18 = v15;
  swift_bridgeObjectRetain();
  sub_1006E976C((uint64_t)v8, v49, &v49);

  swift_bridgeObjectRelease_n();
  unint64_t v19 = v49;
  if (!(v49 >> 62))
  {
    uint64_t v20 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20) {
      goto LABEL_11;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    uint64_t v43 = _swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_27:
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10069FE48();
      swift_release();
      uint64_t v6 = v43;
LABEL_28:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_29:

      return v6;
    }
LABEL_33:
    sub_10069FE48();
    swift_bridgeObjectRetain();
    uint64_t v6 = (double *)_bridgeCocoaArray<A>(_:)();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_32;
  }
LABEL_11:
  id v47 = v5;
  unint64_t v49 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t result = (double *)specialized ContiguousArray.reserveCapacity(_:)();
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = 0;
    do
    {
      if ((v19 & 0xC000000000000001) != 0) {
        id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v25 = *(id *)(v19 + 8 * v22 + 32);
      }
      uint64_t v26 = v25;
      [v25 rect:v44, v45, v46];
      [v10 convertUnscaledToBoundsRect:];
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      uint64_t v34 = v33;
      id v35 = [v26 writingDirection];
      uint64_t v36 = (objc_class *)type metadata accessor for CRLTextSelectionRect();
      uint64_t v37 = (char *)objc_allocWithZone(v36);
      uint64_t v38 = v37;
      v37[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsStart] = 0;
      v37[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsEnd] = 0;
      uint64_t v39 = &v37[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__rect];
      *(void *)uint64_t v39 = v28;
      *((void *)v39 + 1) = v30;
      *((void *)v39 + 2) = v32;
      *((void *)v39 + 3) = v34;
      if (v35 == (id)1)
      {
        uint64_t v41 = v37;
        uint64_t v23 = 1;
      }
      else if (v35)
      {
        uint64_t v40 = v37;
        if (v35 != (id)-1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
          LOBYTE(v46) = 2;
          uint64_t v45 = 18;
          unint64_t v44 = "Unknown direction.";
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24);
        }
        uint64_t v23 = -1;
      }
      else
      {
        uint64_t v42 = v37;
        uint64_t v23 = 0;
      }
      ++v22;
      *(void *)&v38[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection] = v23;

      v48.receiver = v38;
      v48.Class super_class = v36;
      id v24 = [super init];
      [v24 setContainsStart:[v26 containsStart]];
      [v24 setContainsEnd:[v26 containsEnd]];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v20 != v22);
    uint64_t v43 = (double *)v49;
    swift_bridgeObjectRelease();
    id v5 = v47;
    if (!((unint64_t)v43 >> 62)) {
      goto LABEL_27;
    }
    goto LABEL_33;
  }
  __break(1u);
  return result;
}

double sub_100F4F7A4(void *a1)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E810;
  *(void *)(v4 + 56) = type metadata accessor for CRLTextPosition();
  *(void *)(v4 + 32) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v18 = v3;
    id v19 = a1;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  uint64_t v7 = (void *)Strong;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  id v9 = v3;
  id v10 = a1;
  swift_bridgeObjectRetain();
  id v11 = [v7 layoutForInfo:v8];

  if (!v11)
  {
LABEL_12:
    double x = CGRectInfinite.origin.x;
    swift_release();
    goto LABEL_13;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v12 = (void *)swift_dynamicCastClass();
  if (!v12) {
    goto LABEL_11;
  }
  id v13 = v12;
  if (([v12 layoutIsValid] & 1) == 0) {
    [v13 validate];
  }
  uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v14)
  {
LABEL_11:

    goto LABEL_12;
  }
  uint64_t v15 = v14;
  [v14 convertUnscaledToBoundsRect:sub_1006E95EC(v10)];
  double x = v16;
  swift_release();

LABEL_13:
  swift_bridgeObjectRelease();
  return x;
}

void *sub_100F4FB80(CGFloat a1, CGFloat a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v6 = (char *)Strong;
  uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v7) {
    goto LABEL_13;
  }
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (!result) {
    goto LABEL_13;
  }
  if (*(void *)(*(void *)&v6[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    id v9 = result;
    id v10 = [result layoutForInfo:];

    if (v10)
    {
      type metadata accessor for CRLWPLayout();
      if (!swift_dynamicCastClass()) {
        goto LABEL_17;
      }

      id v11 = sub_10069C510();
      if (v11)
      {
        id v10 = v11;
        if ([v11 isEmpty])
        {
          id v12 = [v10 start];
          double v13 = (*(double (**)(void))((swift_isaMask & *v2) + 0x1B8))();
          CGFloat v15 = v14;
          CGFloat v17 = v16;
          CGFloat v19 = v18;

          v26.origin.double x = v13;
          v26.origin.y = v15;
          v26.size.width = v17;
          v26.size.height = v19;
          double v20 = CGRectGetWidth(v26) + 5.0 + 5.0;
          if (v20 > *(double *)((char *)v2
                               + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth))
            double v21 = v20;
          else {
            double v21 = *(double *)((char *)v2
          }
                            + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth);
          v27.origin.double x = v13;
          v27.origin.y = v15;
          v27.size.width = v17;
          v27.size.height = v19;
          CGRectGetHeight(v27);
          double v22 = sub_100065738(v13, v15, v17, v19);
          v28.origin.double x = sub_10006402C(v22, v23, v21);
          v25.double x = a1;
          v25.y = a2;
          BOOL v24 = CGRectContainsPoint(v28, v25);
          goto LABEL_18;
        }
LABEL_17:
        BOOL v24 = 0;
LABEL_18:

        uint64_t v6 = v10;
        goto LABEL_14;
      }
    }
LABEL_13:
    BOOL v24 = 0;
LABEL_14:

    return (void *)v24;
  }
  __break(1u);
  return result;
}

void sub_100F4FED8(uint64_t a1, double a2, double a3)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = OBJC_IVAR____TtC8Freeform27CRLWPTextSelectionManager_i_loupeSession;
    if (!*(void *)(a1 + OBJC_IVAR____TtC8Freeform27CRLWPTextSelectionManager_i_loupeSession))
    {
      uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_selectionViewController);
      if (v8)
      {
        id v9 = *(void **)(v8 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView);
        if (v9)
        {
          id v15 = Strong;
          id v10 = v9;
          [v15 convertUnscaledToBoundsPoint:a2, a3];
          id v13 = [self beginLoupeSessionAtPoint:0 fromSelectionWidgetView:v10 inView:v11];
          double v14 = *(void **)(a1 + v7);
          *(void *)(a1 + v7) = v13;

          uint64_t Strong = v14;
        }
      }
    }
  }
}

void sub_100F500B0(void *a1, double a2, double a3)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = OBJC_IVAR____TtC8Freeform27CRLWPTextSelectionManager_i_loupeSession;
    id v25 = Strong;
    if (!*(void *)((char *)a1 + OBJC_IVAR____TtC8Freeform27CRLWPTextSelectionManager_i_loupeSession))
    {
      if (qword_10166EE60 != -1) {
        swift_once();
      }
      id v8 = (id)qword_10171A478;
      sub_100F4FED8((uint64_t)a1, a2, a3);

      uint64_t Strong = v25;
    }
    [Strong convertUnscaledToBoundsPoint:a2, a3, v25];
    double v10 = v9;
    double v12 = v11;
    id v13 = sub_100F4EAB4(v9, v11);
    if (v13)
    {
      double v14 = v13;
      (*(void (**)(void))((swift_isaMask & *a1) + 0x1B8))();
      CGFloat v19 = *(void **)((char *)a1 + v7);
      if (v19)
      {
        double v20 = v15;
        double v21 = v16;
        double v22 = v17;
        double v23 = v18;
        id v24 = v19;
        [v24 moveToPoint:1 withCaretRect:v10 trackingCaret:v12 v20, v21, v22, v23];
      }
    }
  }
}

void sub_100F50364()
{
}

id sub_100F50374()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLWPTextSelectionManager_i();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPTextSelectionManager_i()
{
  return self;
}

uint64_t sub_100F503DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  *(void *)(v10 + 536) = a4;
  *(void *)(v10 + 528) = a3;
  *(double *)(v10 + 520) = a10;
  *(double *)(v10 + 504) = a8;
  *(double *)(v10 + 512) = a9;
  *(double *)(v10 + 488) = a6;
  *(double *)(v10 + 496) = a7;
  *(double *)(v10 + 480) = a5;
  *(void *)(v10 + 464) = a1;
  *(void *)(v10 + 472) = a2;
  sub_1005057FC(&qword_101672E90);
  *(void *)(v10 + 544) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URL();
  *(void *)(v10 + 552) = v11;
  *(void *)(v10 + 560) = *(void *)(v11 - 8);
  *(void *)(v10 + 568) = swift_task_alloc();
  *(void *)(v10 + 576) = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  *(void *)(v10 + 584) = swift_task_alloc();
  *(void *)(v10 + 592) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v10 + 600) = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v10 + 608) = v13;
  *(void *)(v10 + 616) = v12;
  return _swift_task_switch(sub_100F5055C, v13, v12);
}

uint64_t sub_100F5055C()
{
  uint64_t v1 = *(void *)(v0 + 584);
  uint64_t v2 = *(void *)(v0 + 568);
  uint64_t v3 = *(void *)(v0 + 560);
  uint64_t v4 = *(void *)(v0 + 552);
  uint64_t v5 = *(void *)(v0 + 544);
  CGFloat v6 = *(double *)(v0 + 520);
  CGFloat v8 = *(double *)(v0 + 504);
  CGFloat v7 = *(double *)(v0 + 512);
  CGFloat v9 = *(double *)(v0 + 496);
  uint64_t v10 = *(void *)(v0 + 472);
  *(CGFloat *)(v0 + 392) = v9;
  *(CGFloat *)(v0 + 400) = v8;
  *(CGFloat *)(v0 + 408) = v7;
  *(CGFloat *)(v0 + 416) = v6;
  v67.origin.double x = v9;
  v67.origin.y = v8;
  v67.size.CGFloat width = v7;
  v67.size.CGFloat height = v6;
  CGRect v68 = CGRectIntegral(v67);
  CGFloat width = v68.size.width;
  CGFloat height = v68.size.height;
  v68.origin.double x = v9;
  v68.origin.y = v8;
  v68.size.CGFloat width = v7;
  v68.size.CGFloat height = v6;
  CGRect v69 = CGRectIntegral(v68);
  CGFloat v13 = v69.size.width;
  CGFloat v14 = v69.size.height;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128, __n128))(v3 + 16);
  v15(v2, v10, v4, (__n128)v69.origin, *(__n128 *)&v69.origin.y);
  ((void (*)(uint64_t, uint64_t, uint64_t))v15)(v1, v2, v4);
  ((void (*)(uint64_t, uint64_t, uint64_t))v15)(v5, v2, v4);
  double v16 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
  *(void *)(v0 + 624) = v16;
  *(void *)(v0 + 632) = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v16(v5, 0, 1, v4);
  uint64_t v17 = URL.bookmarkData(options:includingResourceValuesForKeys:relativeTo:)();
  uint64_t v18 = *(void *)(v0 + 584);
  uint64_t v19 = v17;
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v0 + 592);
  double v23 = *(int **)(v0 + 576);
  uint64_t v24 = *(void *)(v0 + 544);
  uint64_t v25 = *(void *)(v0 + 520);
  uint64_t v26 = *(void *)(v0 + 512);
  long long v64 = *(_OWORD *)(v0 + 496);
  uint64_t v27 = *(void *)(v0 + 480);
  simd_float4 v62 = matrix_identity_float4x4.columns[3];
  (*(void (**)(void, void))(*(void *)(v0 + 560) + 8))(*(void *)(v0 + 568), *(void *)(v0 + 552));
  sub_1005CCBB8(v24);
  CGRect v28 = (uint64_t *)(v18 + v23[5]);
  *CGRect v28 = v19;
  v28[1] = v21;
  uint64_t v29 = v18 + v23[6];
  *(_DWORD *)uint64_t v29 = 1103626240;
  *(simd_float4 *)(v29 + 16) = v62;
  *(CGFloat *)(v29 + 32) = width;
  *(CGFloat *)(v29 + 40) = height;
  *(CGFloat *)(v29 + 48) = v13;
  *(CGFloat *)(v29 + 56) = v14;
  *(void *)(v29 + 64) = v27;
  uint64_t v30 = v18 + v23[7];
  *(_OWORD *)uint64_t v30 = v64;
  *(void *)(v30 + 16) = v26;
  *(void *)(v30 + 24) = v25;
  sub_100F51484(v18, v22);
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v61 = *(void *)(v0 + 592);
  uint64_t v65 = *(void *)(v0 + 536);
  uint64_t v31 = *(void *)(v0 + 488);
  uint64_t v32 = *(void *)(v0 + 480);
  swift_beginAccess();
  uint64_t v33 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E800;
  id v35 = v33;
  uint64_t v36 = URL.lastPathComponent.getter();
  uint64_t v38 = v37;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v39 = sub_100528BE4();
  *(void *)(inited + 64) = v39;
  *(void *)(inited + 32) = v36;
  *(void *)(inited + 40) = v38;
  *(void *)(inited + 96) = &type metadata for CGFloat;
  unint64_t v40 = sub_1009DB5B4();
  *(void *)(inited + 104) = v40;
  *(void *)(inited + 72) = v32;
  *(void *)(inited + 136) = &type metadata for CGFloat;
  *(void *)(inited + 144) = v40;
  *(void *)(inited + 112) = v31;
  uint64_t v41 = CGRect.debugDescription.getter();
  *(void *)(inited + 176) = &type metadata for String;
  *(void *)(inited + 184) = v39;
  *(void *)(inited + 152) = v41;
  *(void *)(inited + 160) = v42;
  uint64_t v43 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v43, (uint64_t)"(Import) renderImportSnapshot(url: %@, contentsScale: %{public}.2f, canvasViewScale: %{public}.2f, naturalBounds: %{public}@)", 125, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  unint64_t v44 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t v45 = swift_initStackObject();
  *(_OWORD *)(v45 + 16) = xmmword_10117E810;
  id v46 = v44;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  sub_100997E64();
  v47._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = 0x69666E6F63202C3ELL;
  v48._object = (void *)0xEB00000000203A67;
  String.append(_:)(v48);
  uint64_t v49 = v61 + v23[6];
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v49;
  long long v50 = *(_OWORD *)(v49 + 16);
  long long v51 = *(_OWORD *)(v49 + 32);
  long long v52 = *(_OWORD *)(v49 + 48);
  *(void *)(v0 + 80) = *(void *)(v49 + 64);
  *(_OWORD *)(v0 + 48) = v51;
  *(_OWORD *)(v0 + 64) = v52;
  *(_OWORD *)(v0 + 32) = v50;
  v53._countAndFlagsBits = sub_100AD6110();
  String.append(_:)(v53);
  swift_bridgeObjectRelease();
  v54._countAndFlagsBits = 41;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  *(void *)(v45 + 56) = &type metadata for String;
  *(void *)(v45 + 64) = v39;
  *(void *)(v45 + 32) = 0xD000000000000013;
  *(void *)(v45 + 40) = 0x8000000101270040;
  uint64_t v55 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v46, (uint64_t)&_mh_execute_header, v55, (uint64_t)"(Import) request: %@", 20, 2, v45);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t ObjectType = swift_getObjectType();
  *(void *)(v0 + 640) = ObjectType;
  BOOL v63 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 + 16) + **(int **)(v65 + 16));
  int64_t v57 = (void *)swift_task_alloc();
  *(void *)(v0 + 648) = v57;
  *int64_t v57 = v0;
  v57[1] = sub_100F50C14;
  uint64_t v58 = *(void *)(v0 + 592);
  uint64_t v59 = *(void *)(v0 + 536);
  return v63(v58, ObjectType, v59);
}

uint64_t sub_100F50C14()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 656) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 616);
    uint64_t v4 = *(void *)(v2 + 608);
    return _swift_task_switch(sub_100F5133C, v4, v3);
  }
  else
  {
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, __n128))(*(void *)(*(void *)(v2 + 536) + 48)
                                                           + **(int **)(*(void *)(v2 + 536) + 48));
    float v5 = *(double *)(v2 + 480);
    CGFloat v6 = (void *)swift_task_alloc();
    *(void *)(v2 + 664) = v6;
    void *v6 = v2;
    v6[1] = sub_100F50E04;
    uint64_t v7 = *(void *)(v2 + 536);
    v8.n128_f32[0] = v5;
    uint64_t v9 = *(void *)(v2 + 640);
    return v11(v9, v7, v8);
  }
}

uint64_t sub_100F50E04(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 672) = a1;
  *(void *)(v4 + 680) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 616);
  uint64_t v6 = *(void *)(v3 + 608);
  if (v1) {
    uint64_t v7 = sub_100F513E0;
  }
  else {
    uint64_t v7 = sub_100F50F4C;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100F50F4C()
{
  uint64_t v1 = *(void *)(v0 + 672);
  swift_release();
  if (v1)
  {
    uint64_t v45 = *(CGImage **)(v0 + 672);
    uint64_t v2 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v0 + 624);
    double v3 = *(double *)(v0 + 392);
    double v4 = *(double *)(v0 + 400);
    double v5 = *(double *)(v0 + 408);
    double v6 = *(double *)(v0 + 416);
    uint64_t v46 = *(void *)(v0 + 592);
    uint64_t v7 = *(void *)(v0 + 552);
    double v8 = *(double *)(v0 + 488);
    uint64_t v9 = *(uint64_t **)(v0 + 464);
    uint64_t v10 = sub_10047EC98(v45);
    uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    uint64_t v14 = type metadata accessor for CRLDataAssetStorage();
    uint64_t v15 = (char *)swift_allocObject();
    type metadata accessor for CRLUnfairLock();
    uint64_t v16 = swift_allocObject();
    sub_100510D4C(v11, v13);
    uint64_t v17 = (_DWORD *)swift_slowAlloc();
    *uint64_t v17 = 0;
    *(void *)(v16 + 16) = v17;
    atomic_thread_fence(memory_order_acq_rel);
    *((void *)v15 + 6) = v16;
    uint64_t v18 = &v15[OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__assetUUID];
    uint64_t v19 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    *(void *)&v15[OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryDirectoryForAVAsset] = 0;
    v2(&v15[OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryURLForAVAsset], 1, 1, v7);
    *((void *)v15 + 2) = v11;
    *((void *)v15 + 3) = v13;
    *((void *)v15 + 4) = 0x702E74726F706D69;
    *((void *)v15 + 5) = 0xEA0000000000676ELL;
    *(void *)(v0 + 376) = v14;
    *(void *)(v0 + 384) = &off_1015160C0;
    *(void *)(v0 + 352) = v15;
    uint64_t v20 = (objc_class *)type metadata accessor for CRLAsset();
    id v21 = objc_allocWithZone(v20);
    sub_1005498A4(v0 + 352, (uint64_t)v21 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
    *(void *)(v0 + 448) = v21;
    *(void *)(v0 + 456) = v20;
    swift_retain();
    id v22 = [super init];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 352);
    swift_release();
    id v23 = [objc_allocWithZone((Class)CRLUSDZImageHitTestManager) initWith:v22 naturalBounds:v3 canvasViewScale:v4 v5 v6 v8];
    [v23 visibleBounds];
    double x = v48.origin.x;
    double y = v48.origin.y;
    double width = v48.size.width;
    double height = v48.size.height;
    v49.origin.double x = CGRectNull.origin.x;
    v49.origin.double y = CGRectNull.origin.y;
    v49.size.double width = CGRectNull.size.width;
    v49.size.double height = CGRectNull.size.height;
    BOOL v28 = CGRectEqualToRect(v48, v49);
    if (v28) {
      CGFloat v29 = v3;
    }
    else {
      CGFloat v29 = x;
    }
    if (v28) {
      CGFloat v30 = v4;
    }
    else {
      CGFloat v30 = y;
    }
    if (v28) {
      CGFloat v31 = v5;
    }
    else {
      CGFloat v31 = width;
    }
    if (v28) {
      CGFloat v32 = v6;
    }
    else {
      CGFloat v32 = height;
    }
    sub_100066B80(v29, v30, v31, v32);
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v40 = v39;

    sub_1007CF168(v46);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *uint64_t v9 = v11;
    v9[1] = v13;
    v9[2] = v34;
    v9[3] = v36;
    v9[4] = v38;
    v9[5] = v40;
    uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v42 = *(void *)(v0 + 592);
    sub_100776FC8();
    swift_allocError();
    *(void *)uint64_t v43 = 0xD00000000000001DLL;
    *(void *)(v43 + 8) = 0x80000001012991B0;
    *(unsigned char *)(v43 + 16) = 5;
    swift_willThrow();
    sub_1007CF168(v42);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v41();
}

uint64_t sub_100F5133C()
{
  uint64_t v1 = *(void *)(v0 + 592);
  swift_release();
  sub_1007CF168(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100F513E0()
{
  uint64_t v1 = *(void *)(v0 + 592);
  swift_release();
  sub_1007CF168(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100F51484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100F514E8(uint64_t a1, char a2, char a3)
{
  int v4 = a3 & 1;
  uint64_t v5 = *(void *)(v3 + 16);
  if (*(void *)(v5 + 16) && (unint64_t v8 = sub_100956E74(a3 & 1), (v9 & 1) != 0))
  {
    id v17 = *(id *)(*(void *)(v5 + 56) + 8 * v8);
    sub_1008B3A28(a1, a2);
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v10 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    uint64_t v12 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (v4) {
      uint64_t v13 = 0x5320646572616853;
    }
    else {
      uint64_t v13 = 0x2065746176697250;
    }
    if (v4) {
      unint64_t v14 = 0xEC00000065706F63;
    }
    else {
      unint64_t v14 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v14;
    id v15 = v10;
    uint64_t v16 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"No syncController for syncScope: <%{public}@>", 45, 2, v12);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_100F516C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 88) = a4;
  return _swift_task_switch(sub_100F516E8, 0, 0);
}

void sub_100F516E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = *(void *)(Strong + 16);
    uint64_t v21 = v2 + 64;
    uint64_t v3 = -1;
    uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
    if (-v4 < 64) {
      uint64_t v3 = ~(-1 << -(char)v4);
    }
    unint64_t v5 = v3 & *(void *)(v2 + 64);
    int64_t v22 = (unint64_t)(63 - v4) >> 6;
    uint64_t v23 = v2;
    swift_bridgeObjectRetain();
    int64_t v6 = 0;
    do
    {
      if (v5)
      {
        unint64_t v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        unint64_t v8 = v7 | (v6 << 6);
      }
      else
      {
        int64_t v17 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_27;
        }
        if (v17 >= v22)
        {
LABEL_22:
          swift_release();
          swift_release();
          goto LABEL_23;
        }
        unint64_t v18 = *(void *)(v21 + 8 * v17);
        ++v6;
        if (!v18)
        {
          int64_t v6 = v17 + 1;
          if (v17 + 1 >= v22) {
            goto LABEL_22;
          }
          unint64_t v18 = *(void *)(v21 + 8 * v6);
          if (!v18)
          {
            int64_t v6 = v17 + 2;
            if (v17 + 2 >= v22) {
              goto LABEL_22;
            }
            unint64_t v18 = *(void *)(v21 + 8 * v6);
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v22) {
                goto LABEL_22;
              }
              unint64_t v18 = *(void *)(v21 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v6 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_28;
                  }
                  if (v6 >= v22) {
                    goto LABEL_22;
                  }
                  unint64_t v18 = *(void *)(v21 + 8 * v6);
                  ++v19;
                  if (v18) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v6 = v19;
            }
          }
        }
LABEL_21:
        unint64_t v5 = (v18 - 1) & v18;
        unint64_t v8 = __clz(__rbit64(v18)) + (v6 << 6);
      }
      char v9 = *(char **)(*(void *)(v23 + 56) + 8 * v8);
      uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v9;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = sub_100F51A74;
      *(void *)(v12 + 24) = v11;
      v0[6] = sub_1006591F0;
      v0[7] = v12;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = *(void *)"";
      v0[4] = sub_1006D9628;
      v0[5] = &unk_1015341B8;
      uint64_t v13 = _Block_copy(v0 + 2);
      unint64_t v14 = v9;
      id v15 = v10;
      swift_retain();
      swift_release();
      dispatch_sync(v15, v13);

      _Block_release(v13);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
    }
    while ((isEscapingClosureAtFileLocation & 1) == 0);
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  else
  {
LABEL_23:
    uint64_t v20 = (void (*)(void))v0[1];
    v20();
  }
}

uint64_t type metadata accessor for CRLSyncHelper()
{
  return self;
}

uint64_t sub_100F51A3C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100F51A74()
{
  return sub_1008B395C(*(void *)(v0 + 16));
}

uint64_t sub_100F51A7C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F51A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100F51A9C()
{
  return swift_release();
}

double sub_100F51AA4(uint64_t a1, uint64_t a2)
{
  return sub_100F5EAD0(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLTweenLayerAnimation);
}

double sub_100F51ABC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2, v4);
  int64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for CRLCanvasLayerAnimationProvider();
  uint64_t v25 = v7;
  uint64_t v26 = &off_101517F00;
  unint64_t v8 = sub_1005767BC(v24);
  sub_100F6D3D4(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimationProvider);
  uint64_t v9 = v25;
  uint64_t v10 = (uint64_t)v26;
  uint64_t v11 = sub_10050F848(v24, v25);
  v23[3] = v9;
  v23[4] = v10;
  uint64_t v12 = sub_1005767BC(v23);
  double v13 = *(double *)((char *)v11 + *(int *)(v7 + 20));
  sub_100F6D3D4((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  uint64_t v14 = (uint64_t)&v6[*(int *)(v3 + 56)];
  uint64_t v15 = *(void *)(v14 + 24);
  uint64_t v16 = *(void *)(v14 + 32);
  sub_1005231B4(v14, v15);
  int64_t v17 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v16 + 32) + 24))(v22, v15);
  *unint64_t v18 = v13 + *v18;
  v17(v22, 0);
  sub_1005CFDAC((uint64_t)v6, (uint64_t)v12);
  *(uint64_t *)((char *)v12 + *(int *)(v7 + 20)) = 0;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  double v20 = v19;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v23);
  return v20;
}

double sub_100F51C8C(uint64_t a1, double a2)
{
  v11[3] = &type metadata for CRLLayerAnimationFlatGroup;
  v11[4] = &off_101524CF0;
  v11[0] = a1;
  *(double *)&v11[1] = a2;
  uint64_t v2 = sub_10050F848(v11, (uint64_t)&type metadata for CRLLayerAnimationFlatGroup);
  v10[3] = (uint64_t)&type metadata for CRLLayerAnimationFlatGroup;
  v10[4] = (uint64_t)&off_101524CF0;
  uint64_t v3 = sub_1005767BC(v10);
  uint64_t v4 = *v2;
  double v5 = *((double *)v2 + 1);
  swift_bridgeObjectRetain();
  int64_t v6 = sub_100B32B28(v4);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10085FF14((uint64_t)v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v3 = (uint64_t)v7;
  v3[1] = 0;
  double v8 = sub_100B32FB0();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v10);
  return v8;
}

double sub_100F51DA0(uint64_t a1, double a2)
{
  uint64_t v14 = &type metadata for CRLLayerAnimationSequence;
  uint64_t v15 = &off_1015133B0;
  v13[0] = a1;
  *(double *)&v13[1] = a2;
  double v2 = *((double *)sub_10050F848(v13, (uint64_t)&type metadata for CRLLayerAnimationSequence) + 1);
  swift_bridgeObjectRetain();
  double v3 = sub_100787ABC(v2);
  v16[3] = &type metadata for CRLLayerAnimationGroup;
  v16[4] = &off_10150F5C8;
  v16[0] = v4;
  *(double *)&v16[1] = v3;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
  double v5 = (double *)sub_10050F848(v16, (uint64_t)&type metadata for CRLLayerAnimationGroup);
  uint64_t v14 = &type metadata for CRLLayerAnimationGroup;
  uint64_t v15 = &off_10150F5C8;
  int64_t v6 = sub_1005767BC(v13);
  double v7 = v5[1];
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_100F5EC48(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100F6A384((uint64_t)v9, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t *v6 = (uint64_t)v10;
  v6[1] = 0;
  double v11 = sub_1006C9588();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
  return v11;
}

double sub_100F51EF8(uint64_t a1, double a2, double a3)
{
  int64_t v17 = &type metadata for CRLLayerAnimationCascade;
  unint64_t v18 = &off_101510940;
  *(double *)uint64_t v16 = a2;
  v16[1] = a1;
  *(double *)&v16[2] = a3;
  double v3 = (double *)sub_10050F848(v16, (uint64_t)&type metadata for CRLLayerAnimationCascade);
  double v4 = *v3;
  double v5 = v3[2];
  swift_bridgeObjectRetain();
  double v6 = sub_1006FA54C(v4, v5);
  v19[3] = &type metadata for CRLLayerAnimationGroup;
  v19[4] = &off_10150F5C8;
  v19[0] = v7;
  *(double *)&v19[1] = v6;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  uint64_t v8 = (double *)sub_10050F848(v19, (uint64_t)&type metadata for CRLLayerAnimationGroup);
  int64_t v17 = &type metadata for CRLLayerAnimationGroup;
  unint64_t v18 = &off_10150F5C8;
  uint64_t v9 = sub_1005767BC(v16);
  double v10 = v8[1];
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_100F5EC48(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  double v13 = sub_100F6A384((uint64_t)v12, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v9 = (uint64_t)v13;
  v9[1] = 0;
  double v14 = sub_1006C9588();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v19);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  return v14;
}

double sub_100F5205C(uint64_t a1, double a2)
{
  v11[3] = &type metadata for CRLLayerAnimationGroup;
  v11[4] = &off_10150F5C8;
  v11[0] = a1;
  *(double *)&v11[1] = a2;
  double v2 = (double *)sub_10050F848(v11, (uint64_t)&type metadata for CRLLayerAnimationGroup);
  v10[3] = (uint64_t)&type metadata for CRLLayerAnimationGroup;
  v10[4] = (uint64_t)&off_10150F5C8;
  double v3 = sub_1005767BC(v10);
  double v4 = v2[1];
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  double v6 = sub_100F5EC48(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100F6A384((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *double v3 = (uint64_t)v7;
  v3[1] = 0;
  double v8 = sub_1006C9588();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v10);
  return v8;
}

double *sub_100F52178()
{
  void (*v25)(long long *__return_ptr, uint64_t, _UNKNOWN **);
  double *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  id v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  _UNKNOWN **v41;
  uint64_t v42;
  _UNKNOWN **v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  _UNKNOWN **v48;
  void (*v49)(long long *, void);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  _UNKNOWN **v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  _UNKNOWN **v61;
  void (*v62)(long long *, void);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  _UNKNOWN **v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  _UNKNOWN **v74;
  uint64_t (*v75)(long long *, uint64_t, _UNKNOWN **);
  CAMediaTimingFillMode v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  const char *v104;
  char v105;
  double *v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  _UNKNOWN **v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  _UNKNOWN **v124;
  void (*v125)(long long *, void);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  _UNKNOWN **v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  _UNKNOWN **v137;
  void (*v138)(long long *, void);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(void, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  _UNKNOWN **v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  _UNKNOWN **v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  _UNKNOWN **v158;
  void (*v159)(long long *, void);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _UNKNOWN **v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  _UNKNOWN **v169;
  void (*v170)(long long *, void);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _UNKNOWN **v175;
  uint64_t v176;
  uint64_t v177;
  void *v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  _UNKNOWN **v183;
  void (*v184)(long long *, void);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _UNKNOWN **v189;
  uint64_t v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  _UNKNOWN **v194;
  void (*v195)(long long *, void);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _UNKNOWN **v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  NSString *v204;
  uint64_t v205;
  void (*v206)(long long *, void);
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(CAMediaTimingFillMode, uint64_t, uint64_t);
  CAMediaTimingFillMode v211;
  uint64_t v212;
  uint64_t v213;
  _UNKNOWN **v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  uint64_t v218;
  _UNKNOWN **v219;
  void (*v220)(long long *, void);
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(uint64_t, uint64_t, uint64_t);
  uint64_t v225;
  uint64_t v227;
  CAMediaTimingFillMode v228;
  CAMediaTimingFillMode v229;
  CAMediaTimingFillMode v230;
  CAMediaTimingFillMode v231;
  uint64_t v232;
  char *v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  double *v237;
  void v238[3];
  uint64_t v239;
  uint64_t v240;
  long long v241;
  uint64_t v242;
  uint64_t v243;
  long long v244;
  uint64_t v245;
  uint64_t v246;
  double *v247;
  long long v248;
  uint64_t v249;
  _UNKNOWN **v250;
  long long v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254[3];
  uint64_t v255;
  _UNKNOWN **v256;

  uint64_t v1 = type metadata accessor for CRLTweenLayerAnimation();
  __chkstk_darwin(v1, v2);
  double v4 = (char *)&v227 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v249 = v5;
  uint64_t v250 = &off_101507900;
  double v6 = sub_1005767BC((uint64_t *)&v248);
  sub_100F6D3D4(v0, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLTweenLayerAnimation);
  uint64_t v7 = v249;
  double v8 = v250;
  uint64_t v9 = sub_10050F848(&v248, v249);
  uint64_t v255 = v7;
  uint64_t v256 = v8;
  double v10 = sub_1005767BC(v254);
  sub_100F6D3D4((uint64_t)v9, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLTweenLayerAnimation);
  uint64_t v11 = (double *)((uint64_t (*)(uint64_t, _UNKNOWN **))v8[4])(v7, v8);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v248);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v254);
  uint64_t v236 = *((void *)v11 + 2);
  if (v236)
  {
    unint64_t v12 = 0;
    uint64_t v235 = 0;
    long long v229 = kCAFillModeRemoved;
    long long v228 = kCAFillModeForwards;
    float v231 = kCAFillModeBackwards;
    uint64_t v230 = kCAFillModeBoth;
    double v13 = (uint64_t *)&unk_10167BDB0;
    uint64_t v232 = v1;
    uint64_t v233 = v4;
    while (1)
    {
      if (v12 >= *((void *)v11 + 2))
      {
        __break(1u);
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      uint64_t v14 = (uint64_t)(v11 + 4);
      sub_1005498A4((uint64_t)&v11[5 * v12 + 4], (uint64_t)&v248);
      sub_1005057FC(v13);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_100F6BEE0((uint64_t)v4);
LABEL_4:
      if (++v12 == v236) {
        return v11;
      }
    }
    if (v12 >= *((void *)v11 + 2)) {
      goto LABEL_164;
    }
    uint64_t v237 = v11;
    sub_1005498A4((uint64_t)&v11[5 * v12 + 4], (uint64_t)v254);
    uint64_t v16 = v255;
    uint64_t v15 = v256;
    int64_t v17 = sub_10050F848(v254, v255);
    uint64_t v18 = *(void *)(v16 - 8);
    __n128 v19 = __chkstk_darwin(v17, v17);
    uint64_t v21 = (char *)&v227 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
    int64_t v22 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v15[8])(v16, v15);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
    if (!v22)
    {
      sub_1005498A4((uint64_t)v254, (uint64_t)&v248);
      uint64_t v11 = v237;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_100F68620((uint64_t)v11);
      }
      if (v12 < *((void *)v11 + 2)) {
        goto LABEL_161;
      }
      goto LABEL_166;
    }
    long long v234 = v12;
    uint64_t v23 = v255;
    uint64_t v24 = v256;
    sub_10050F848(v254, v255);
    uint64_t v25 = (void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v24[11];
    uint64_t v26 = v237;
    swift_bridgeObjectRetain();
    v25(&v251, v23, v24);
    uint64_t v27 = v252;
    BOOL v28 = v253;
    sub_10050F848(&v251, v252);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v28 + 56))(&v248, v27, v28);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v251);
    CGFloat v29 = sub_1009FCAC8();
    sub_10054BD5C((uint64_t)&v248);
    id v247 = _swiftEmptyArrayStorage;
    CGFloat v30 = *((void *)v26 + 2);
    swift_bridgeObjectRetain();
    CGFloat v31 = v22;
    if (!v30)
    {
LABEL_10:
      CGFloat v32 = v13;
      uint64_t v11 = v237;
      swift_bridgeObjectRelease();

      *(void *)&uint64_t v244 = v247;
      swift_retain();
      uint64_t v33 = v235;
      sub_100F68930((uint64_t *)&v244);
      if (v33) {
        goto LABEL_168;
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v34 = v244;
      uint64_t v35 = *(void *)(v244 + 16);
      unint64_t v12 = v234;
      uint64_t v235 = 0;
      if (v35)
      {
        sub_1005498A4(v244 + 32, (uint64_t)&v244);
        swift_bridgeObjectRetain();
        uint64_t v36 = v35 - 1;
        double v13 = v32;
        if (v35 != 1)
        {
          uint64_t v109 = v34 + 72;
          do
          {
            sub_1005498A4(v109, (uint64_t)&v241);
            uint64_t v111 = v242;
            id v110 = v243;
            sub_10050F848(&v241, v242);
            id v112 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v110 + 24) + 8) + 8))(v111);
            uint64_t v114 = v245;
            id v113 = v246;
            sub_10050F848(&v244, v245);
            if (v112 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v113 + 24) + 8) + 8))(v114))
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v241);
            }
            else
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
              sub_10053974C(&v241, (uint64_t)&v244);
            }
            v109 += 40;
            --v36;
          }
          while (v36);
        }
        swift_release();
        sub_10053974C(&v244, (uint64_t)&v251);
        sub_10053974C(&v251, (uint64_t)&v248);
        sub_100822DF0(v34, (uint64_t)&v244);
        swift_release();
        if (v245)
        {
          sub_10053974C(&v244, (uint64_t)&v251);
          sub_1005498A4((uint64_t)v254, (uint64_t)&v244);
          uint64_t v37 = v245;
          uint64_t v38 = v246;
          sub_10050F848(&v244, v245);
          uint64_t v39 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v38 + 128))(&v248, v37, v38);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
          double v4 = v233;
          uint64_t v11 = v237;
          if ((v39 & 1) == 0
            || (uint64_t v40 = v249,
                uint64_t v41 = v250,
                sub_10050F848(&v248, v249),
                (((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v41[16])(&v251, v40, v41) & 1) == 0))
          {
            sub_1005498A4((uint64_t)v254, (uint64_t)&v244);
            uint64_t v115 = v245;
            id v116 = v246;
            sub_10050F848(&v244, v245);
            id v117 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v116 + 128))(&v248, v115, v116);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
            if (v117)
            {
              uint64_t v118 = v255;
              uint64_t v119 = v256;
              sub_10050F848(v254, v255);
              ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v119[11])(&v244, v118, v119);
              uint64_t v120 = v245;
              uint64_t v121 = v246;
              sub_10050F848(&v244, v245);
              uint64_t v122 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v121 + 112))(v120, v121);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
              if (v122 == 2)
              {
                Class v123 = v255;
                uint64_t v124 = v256;
                sub_1005231B4((uint64_t)v254, v255);
                uint64_t v125 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v124[13])(&v244, v123, v124);
                uint64_t v127 = *(void *)(v126 + 24);
                uint64_t v128 = *(void *)(v126 + 32);
                sub_1005231B4(v126, v127);
                uint64_t v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 120);
                uint64_t v130 = v128;
                double v4 = v233;
                v129(1, v127, v130);
                v125(&v244, 0);
              }
              uint64_t v131 = v255;
              uint64_t v132 = v256;
              sub_10050F848(v254, v255);
              ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v132[11])(&v244, v131, v132);
              uint64_t v133 = v245;
              uint64_t v134 = v246;
              sub_10050F848(&v244, v245);
              uint64_t v135 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v134 + 136))(v133, v134);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
              if (v135 == 2)
              {
                id v136 = v255;
                id v137 = v256;
                sub_1005231B4((uint64_t)v254, v255);
                uint64_t v138 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v137[13])(&v244, v136, v137);
                float v140 = *(void *)(v139 + 24);
                char v141 = *(void *)(v139 + 32);
                sub_1005231B4(v139, v140);
                objc_super v142 = *(void (**)(void, uint64_t, uint64_t))(v141 + 144);
                double v143 = v141;
                double v4 = v233;
                v142(0, v140, v143);
                v138(&v244, 0);
              }
              uint64_t v144 = v255;
              uint64_t v145 = v256;
              sub_10050F848(v254, v255);
              ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v145[11])(&v244, v144, v145);
              unsigned __int8 v146 = v245;
              uint64_t v147 = v246;
              sub_10050F848(&v244, v245);
              uint64_t v148 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v147 + 88))(v146, v147);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);

              if (v148) {
                goto LABEL_156;
              }
              CKRecordID v73 = v255;
              Swift::String v74 = v256;
              sub_1005231B4((uint64_t)v254, v255);
              id v75 = (uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v74[13];
              unint64_t v76 = v231;
            }
            else
            {
              sub_1005498A4((uint64_t)v254, (uint64_t)&v244);
              unsigned __int8 v149 = v245;
              unsigned __int8 v150 = v246;
              sub_10050F848(&v244, v245);
              uint64_t v151 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v150 + 128))(&v251, v149, v150);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
              uint64_t v152 = v255;
              uint64_t v153 = v256;
              sub_10050F848(v254, v255);
              if (v151)
              {
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v153[11])(&v244, v152, v153);
                uint64_t v154 = v245;
                uint64_t v155 = v246;
                sub_10050F848(&v244, v245);
                char v156 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v155 + 112))(v154, v155);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
                if (v156 == 2)
                {
                  id v157 = v255;
                  id v158 = v256;
                  sub_1005231B4((uint64_t)v254, v255);
                  uint64_t v159 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v158[13])(&v244, v157, v158);
                  double v161 = *(void *)(v160 + 24);
                  id v162 = *(void *)(v160 + 32);
                  sub_1005231B4(v160, v161);
                  (*(void (**)(void, uint64_t, uint64_t))(v162 + 120))(0, v161, v162);
                  v159(&v244, 0);
                }
                uint64_t v163 = v255;
                uint64_t v164 = v256;
                sub_10050F848(v254, v255);
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v164[11])(&v244, v163, v164);
                id v165 = v245;
                uint64_t v166 = v246;
                sub_10050F848(&v244, v245);
                id v167 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v166 + 136))(v165, v166);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
                if (v167 == 2)
                {
                  uint64_t v168 = v255;
                  uint64_t v169 = v256;
                  sub_1005231B4((uint64_t)v254, v255);
                  unsigned __int8 v170 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v169[13])(&v244, v168, v169);
                  id v172 = *(void *)(v171 + 24);
                  uint64_t v173 = *(void *)(v171 + 32);
                  sub_1005231B4(v171, v172);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v173 + 144))(1, v172, v173);
                  v170(&v244, 0);
                }
                char v174 = v255;
                id v175 = v256;
                sub_10050F848(v254, v255);
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v175[11])(&v244, v174, v175);
                id v176 = v245;
                uint64_t v177 = v246;
                sub_10050F848(&v244, v245);
                unint64_t v178 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v177 + 88))(v176, v177);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);

                double v4 = v233;
                if (v178) {
                  goto LABEL_156;
                }
                CKRecordID v73 = v255;
                Swift::String v74 = v256;
                sub_1005231B4((uint64_t)v254, v255);
                id v75 = (uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v74[13];
                unint64_t v76 = v228;
              }
              else
              {
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v153[11])(&v244, v152, v153);
                double v179 = v245;
                uint64_t v180 = v246;
                sub_10050F848(&v244, v245);
                double v181 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v180 + 112))(v179, v180);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
                if (v181 == 2)
                {
                  id v182 = v255;
                  uint64_t v183 = v256;
                  sub_1005231B4((uint64_t)v254, v255);
                  double v184 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v183[13])(&v244, v182, v183);
                  id v186 = *(void *)(v185 + 24);
                  long long v187 = *(void *)(v185 + 32);
                  sub_1005231B4(v185, v186);
                  (*(void (**)(void, uint64_t, uint64_t))(v187 + 120))(0, v186, v187);
                  v184(&v244, 0);
                }
                uint64_t v188 = v255;
                uint64_t v189 = v256;
                sub_10050F848(v254, v255);
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v189[11])(&v244, v188, v189);
                id v190 = v245;
                uint64_t v191 = v246;
                sub_10050F848(&v244, v245);
                uint64_t v192 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v191 + 136))(v190, v191);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
                if (v192 == 2)
                {
                  Swift::Int v193 = v255;
                  uint64_t v194 = v256;
                  sub_1005231B4((uint64_t)v254, v255);
                  uint64_t v195 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v194[13])(&v244, v193, v194);
                  uint64_t v197 = *(void *)(v196 + 24);
                  uint64_t v198 = *(void *)(v196 + 32);
                  sub_1005231B4(v196, v197);
                  (*(void (**)(void, uint64_t, uint64_t))(v198 + 144))(0, v197, v198);
                  v195(&v244, 0);
                }
                uint64_t v199 = v255;
                uint64_t v200 = v256;
                sub_10050F848(v254, v255);
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v200[11])(&v244, v199, v200);
                id v201 = v245;
                id v202 = v246;
                sub_10050F848(&v244, v245);
                uint64_t v203 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v202 + 88))(v201, v202);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);

                double v4 = v233;
                if (v203) {
                  goto LABEL_156;
                }
                CKRecordID v73 = v255;
                Swift::String v74 = v256;
                sub_1005231B4((uint64_t)v254, v255);
                id v75 = (uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v74[13];
                unint64_t v76 = v229;
              }
            }
LABEL_155:
            id v204 = v76;
            uint64_t v205 = v75(&v244, v73, v74);
            uint64_t v11 = v237;
            uint64_t v206 = (void (*)(long long *, void))v205;
            id v208 = *(void *)(v207 + 24);
            uint64_t v209 = *(void *)(v207 + 32);
            sub_1005231B4(v207, v208);
            double v210 = *(void (**)(CAMediaTimingFillMode, uint64_t, uint64_t))(v209 + 96);
            double v211 = v76;
            double v13 = v32;
            id v212 = v209;
            double v4 = v233;
            v210(v211, v208, v212);
            v206(&v244, 0);
            goto LABEL_156;
          }
          uint64_t v42 = v255;
          uint64_t v43 = v256;
          sub_10050F848(v254, v255);
          ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v43[11])(&v244, v42, v43);
          unint64_t v44 = v245;
          uint64_t v45 = v246;
          sub_10050F848(&v244, v245);
          uint64_t v46 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v45 + 112))(v44, v45);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
          if (v46 == 2)
          {
            uint64_t v47 = v255;
            CGRect v48 = v256;
            sub_1005231B4((uint64_t)v254, v255);
            CGRect v49 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v48[13])(&v244, v47, v48);
            long long v51 = *(void *)(v50 + 24);
            long long v52 = *(void *)(v50 + 32);
            sub_1005231B4(v50, v51);
            Swift::String v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 120);
            Swift::String v54 = v52;
            double v4 = v233;
            v53(1, v51, v54);
            v49(&v244, 0);
          }
          uint64_t v55 = v255;
          uint64_t v56 = v256;
          sub_10050F848(v254, v255);
          ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v56[11])(&v244, v55, v56);
          int64_t v57 = v245;
          uint64_t v58 = v246;
          sub_10050F848(&v244, v245);
          uint64_t v59 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v58 + 136))(v57, v58);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
          if (v59 == 2)
          {
            double v60 = v255;
            uint64_t v61 = v256;
            sub_1005231B4((uint64_t)v254, v255);
            simd_float4 v62 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v61[13])(&v244, v60, v61);
            long long v64 = *(void *)(v63 + 24);
            uint64_t v65 = *(void *)(v63 + 32);
            sub_1005231B4(v63, v64);
            uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 144);
            CGRect v67 = v65;
            double v4 = v233;
            v66(1, v64, v67);
            v62(&v244, 0);
          }
          CGRect v68 = v255;
          CGRect v69 = v256;
          sub_10050F848(v254, v255);
          ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v69[11])(&v244, v68, v69);
          uint64_t v70 = v245;
          uint64_t v71 = v246;
          sub_10050F848(&v244, v245);
          unint64_t v72 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v71 + 88))(v70, v71);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);

          if (!v72)
          {
            CKRecordID v73 = v255;
            Swift::String v74 = v256;
            sub_1005231B4((uint64_t)v254, v255);
            id v75 = (uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v74[13];
            unint64_t v76 = v230;
            goto LABEL_155;
          }
LABEL_156:
          uint64_t v213 = v255;
          double v214 = v256;
          sub_10050F848(v254, v255);
          ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v214[11])(&v244, v213, v214);
          long long v215 = v245;
          long long v216 = v246;
          sub_10050F848(&v244, v245);
          long long v217 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v216 + 160))(v215, v216);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
          if (v217 == 2)
          {
            long long v218 = v255;
            long long v219 = v256;
            sub_1005231B4((uint64_t)v254, v255);
            long long v220 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v219[13])(&v244, v218, v219);
            long long v222 = *(void *)(v221 + 24);
            long long v223 = *(void *)(v221 + 32);
            sub_1005231B4(v221, v222);
            long long v224 = *(void (**)(uint64_t, uint64_t, uint64_t))(v223 + 168);
            long long v225 = v223;
            double v4 = v233;
            v224(1, v222, v225);
            v220(&v244, 0);
          }

          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v251);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v248);
          sub_1005498A4((uint64_t)v254, (uint64_t)&v248);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v11 = sub_100F68620((uint64_t)v11);
          }
          if (v12 < *((void *)v11 + 2))
          {
LABEL_161:
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v11[5 * v12 + 4]);
            sub_10053974C(&v248, (uint64_t)&v11[5 * v12 + 4]);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v254);
            goto LABEL_4;
          }
LABEL_167:
          __break(1u);
LABEL_168:
          swift_release();
          __break(1u);
          JUMPOUT(0x100F53D84);
        }

        sub_100522F00((uint64_t)&v244, &qword_10167E120);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v248);
        double v4 = v233;
        uint64_t v11 = v237;
      }
      else
      {
        swift_release();

        double v4 = v233;
        double v13 = v32;
      }
      sub_1005498A4((uint64_t)v254, (uint64_t)&v248);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_100F68620((uint64_t)v11);
      }
      if (v12 < *((void *)v11 + 2)) {
        goto LABEL_161;
      }
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    while (1)
    {
      sub_1005498A4(v14, (uint64_t)&v244);
      uint64_t v78 = v245;
      uint64_t v77 = v246;
      sub_10050F848(&v244, v245);
      uint64_t v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 64))(v78, v77);
      if (v79)
      {
        uint64_t v80 = (void *)v79;
        sub_10054CE40();
        uint64_t v81 = v31;
        id v82 = static NSObject.== infix(_:_:)();

        sub_1005498A4((uint64_t)&v244, (uint64_t)&v241);
        if (v82)
        {
          uint64_t v83 = v242;
          uint64_t v84 = v243;
          sub_10050F848(&v241, v242);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v84 + 88))(v238, v83, v84);
          id v85 = v239;
          uint64_t v86 = v240;
          sub_10050F848(v238, v239);
          id v87 = 0xE800000000000000;
          uint64_t v88 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v86 + 80))(v85, v86);
          uint64_t v89 = 0x73746E65746E6F63;
          switch(v88)
          {
            case 1:
              id v87 = 0xEC00000074636552;
              break;
            case 2:
              id v87 = 0xEE007265746E6543;
              break;
            case 3:
              id v87 = 0xE700000000000000;
              uint64_t v89 = 0x7974696361706FLL;
              break;
            case 4:
              uint64_t v89 = 0x6E65646469487369;
              break;
            case 5:
              uint64_t v89 = 0x426F54736B73616DLL;
              id v87 = 0xED000073646E756FLL;
              break;
            case 6:
              uint64_t v89 = 0x656C62756F447369;
              id v87 = 0xED00006465646953;
              break;
            case 7:
              id v92 = 0x72656E726F63;
              goto LABEL_44;
            case 8:
              uint64_t v89 = 0x6957726564726F62;
              id v87 = 0xEB00000000687464;
              break;
            case 9:
              uint64_t v91 = 0x726564726F62;
              goto LABEL_37;
            case 10:
              uint64_t v89 = 0x756F72676B636162;
              id v87 = 0xEF726F6C6F43646ELL;
              break;
            case 11:
              uint64_t v89 = 0x704F776F64616873;
              id v87 = 0xED00007974696361;
              break;
            case 12:
              id v92 = 0x776F64616873;
LABEL_44:
              uint64_t v89 = v92 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              id v87 = 0xEC00000073756964;
              break;
            case 13:
              uint64_t v89 = 0x664F776F64616873;
              id v87 = 0xEC00000074657366;
              break;
            case 14:
              uint64_t v91 = 0x776F64616873;
LABEL_37:
              uint64_t v89 = v91 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              id v87 = 0xEB00000000726F6CLL;
              break;
            case 15:
              uint64_t v89 = 0x6150776F64616873;
              id v87 = 0xEA00000000006874;
              break;
            case 16:
              id v87 = 0xE700000000000000;
              uint64_t v89 = 0x737265746C6966;
              break;
            case 17:
              id v90 = "compositingFilter";
              goto LABEL_54;
            case 18:
              id v90 = "backgroundFilters";
              goto LABEL_54;
            case 19:
              uint64_t v89 = 0x6152646C756F6873;
              id v87 = 0xEF657A6972657473;
              break;
            case 20:
              uint64_t v89 = 0xD000000000000012;
              id v93 = "rasterizationScale";
              goto LABEL_59;
            case 21:
              id v87 = 0xE600000000000000;
              uint64_t v89 = 0x73646E756F62;
              break;
            case 22:
              uint64_t v89 = 0x6E6F697469736F70;
              break;
            case 23:
              id v87 = 0xE90000000000006ELL;
              uint64_t v89 = 0x6F697469736F507ALL;
              break;
            case 24:
              uint64_t v89 = 0x6F50726F68636E61;
              id v87 = 0xEC0000005A746E69;
              break;
            case 25:
              uint64_t v89 = 0x6F50726F68636E61;
              id v87 = 0xEB00000000746E69;
              break;
            case 26:
              uint64_t v89 = 0x726F66736E617274;
              id v87 = 0xE90000000000006DLL;
              break;
            case 27:
              id v90 = "sublayerTransform";
LABEL_54:
              id v87 = (unint64_t)(v90 - 32) | 0x8000000000000000;
              uint64_t v89 = 0xD000000000000011;
              break;
            case 28:
              uint64_t v89 = 0xD000000000000010;
              id v93 = "dynamicTransform";
LABEL_59:
              id v87 = (unint64_t)(v93 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          uint64_t v94 = 0xE800000000000000;
          uint64_t v95 = 0x73746E65746E6F63;
          switch(v29)
          {
            case 1:
              uint64_t v96 = 1952671058;
              goto LABEL_89;
            case 2:
              uint64_t v94 = 0xEE007265746E6543;
              if (v89 != 0x73746E65746E6F63) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 3:
              uint64_t v94 = 0xE700000000000000;
              if (v89 != 0x7974696361706FLL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 4:
              if (v89 != 0x6E65646469487369) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 5:
              uint64_t v99 = 0x426F54736B73616DLL;
              uint64_t v100 = 0x73646E756FLL;
              goto LABEL_86;
            case 6:
              uint64_t v99 = 0x656C62756F447369;
              uint64_t v100 = 0x6465646953;
              goto LABEL_86;
            case 7:
              uint64_t v101 = 0x72656E726F63;
              goto LABEL_82;
            case 8:
              uint64_t v102 = 0x6957726564726F62;
              uint64_t v103 = 6845540;
              goto LABEL_95;
            case 9:
              uint64_t v98 = 0x726564726F62;
              goto LABEL_72;
            case 10:
              uint64_t v94 = 0xEF726F6C6F43646ELL;
              if (v89 != 0x756F72676B636162) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 11:
              uint64_t v99 = 0x704F776F64616873;
              uint64_t v100 = 0x7974696361;
LABEL_86:
              uint64_t v94 = v100 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
              if (v89 != v99) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 12:
              uint64_t v101 = 0x776F64616873;
LABEL_82:
              uint64_t v95 = v101 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              uint64_t v96 = 1937074532;
              goto LABEL_89;
            case 13:
              uint64_t v95 = 0x664F776F64616873;
              uint64_t v96 = 1952805734;
              goto LABEL_89;
            case 14:
              uint64_t v98 = 0x776F64616873;
LABEL_72:
              uint64_t v102 = v98 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              uint64_t v103 = 7499628;
              goto LABEL_95;
            case 15:
              uint64_t v94 = 0xEA00000000006874;
              if (v89 != 0x6150776F64616873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 16:
              uint64_t v94 = 0xE700000000000000;
              if (v89 != 0x737265746C6966) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 17:
              uint64_t v97 = "compositingFilter";
              goto LABEL_100;
            case 18:
              uint64_t v97 = "backgroundFilters";
              goto LABEL_100;
            case 19:
              uint64_t v94 = 0xEF657A6972657473;
              if (v89 != 0x6152646C756F6873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 20:
              uint64_t v95 = 0xD000000000000012;
              uint64_t v104 = "rasterizationScale";
              goto LABEL_109;
            case 21:
              uint64_t v94 = 0xE600000000000000;
              if (v89 != 0x73646E756F62) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 22:
              if (v89 != 0x6E6F697469736F70) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 23:
              uint64_t v94 = 0xE90000000000006ELL;
              if (v89 != 0x6F697469736F507ALL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 24:
              uint64_t v95 = 0x6F50726F68636E61;
              uint64_t v96 = 1517579881;
LABEL_89:
              uint64_t v94 = v96 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              if (v89 != v95) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 25:
              uint64_t v102 = 0x6F50726F68636E61;
              uint64_t v103 = 7630441;
LABEL_95:
              uint64_t v94 = v103 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              if (v89 != v102) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 26:
              uint64_t v94 = 0xE90000000000006DLL;
              if (v89 != 0x726F66736E617274) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 27:
              uint64_t v97 = "sublayerTransform";
LABEL_100:
              uint64_t v94 = (unint64_t)(v97 - 32) | 0x8000000000000000;
              if (v89 != 0xD000000000000011) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 28:
              uint64_t v95 = 0xD000000000000010;
              uint64_t v104 = "dynamicTransform";
LABEL_109:
              uint64_t v94 = (unint64_t)(v104 - 32) | 0x8000000000000000;
              goto LABEL_110;
            default:
LABEL_110:
              if (v89 != v95) {
                goto LABEL_114;
              }
LABEL_111:
              if (v87 == v94)
              {
                swift_bridgeObjectRelease_n();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v238);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v241);
              }
              else
              {
LABEL_114:
                uint64_t v105 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v238);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v241);
                if ((v105 & 1) == 0) {
                  goto LABEL_24;
                }
              }
              sub_10053974C(&v244, (uint64_t)&v241);
              uint64_t v106 = v247;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1006BB784(0, *((void *)v106 + 2) + 1, 1);
                uint64_t v106 = v247;
              }
              uint64_t v108 = *((void *)v106 + 2);
              id v107 = *((void *)v106 + 3);
              if (v108 >= v107 >> 1)
              {
                sub_1006BB784(v107 > 1, v108 + 1, 1);
                uint64_t v106 = v247;
              }
              *((void *)v106 + 2) = v108 + 1;
              sub_10053974C(&v241, (uint64_t)&v106[5 * v108 + 4]);
              break;
          }
          goto LABEL_25;
        }
      }
      else
      {
        sub_1005498A4((uint64_t)&v244, (uint64_t)&v241);
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v241);
LABEL_24:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v244);
LABEL_25:
      v14 += 40;
      if (!--v30) {
        goto LABEL_10;
      }
    }
  }
  return v11;
}

double *sub_100F53E6C(uint64_t (*a1)(void, __n128), uint64_t a2, uint64_t (*a3)(void))
{
  void (*v31)(long long *__return_ptr, uint64_t, uint64_t);
  double *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(long long *, void);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(long long *, void);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(long long *, uint64_t, uint64_t);
  CAMediaTimingFillMode v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  id v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  const char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  const char *v110;
  char v111;
  double *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  double v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(long long *, void);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(long long *, void);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(void, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(long long *, void);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(long long *, void);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(long long *, void);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(long long *, void);
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  void *v209;
  NSString *v210;
  uint64_t v211;
  void (*v212)(long long *, void);
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void (*v216)(CAMediaTimingFillMode, uint64_t, uint64_t);
  CAMediaTimingFillMode v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  uint64_t v225;
  void (*v226)(long long *, void);
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(uint64_t, uint64_t, uint64_t);
  uint64_t v231;
  uint64_t v233;
  CAMediaTimingFillMode v234;
  CAMediaTimingFillMode v235;
  CAMediaTimingFillMode v236;
  CAMediaTimingFillMode v237;
  uint64_t v238;
  char *v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  double *v243;
  void v244[3];
  uint64_t v245;
  uint64_t v246;
  long long v247;
  uint64_t v248;
  uint64_t v249;
  long long v250;
  uint64_t v251;
  uint64_t v252;
  double *v253;
  long long v254;
  uint64_t v255;
  uint64_t v256;
  long long v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260[3];
  uint64_t v261;
  uint64_t v262;

  uint64_t v7 = type metadata accessor for CRLTweenLayerAnimation();
  __n128 v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v233 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v255 = a1(0, v9);
  uint64_t v256 = a2;
  unint64_t v12 = sub_1005767BC((uint64_t *)&v254);
  sub_100F6D3D4(v3, (uint64_t)v12, a3);
  uint64_t v13 = v255;
  uint64_t v14 = v256;
  uint64_t v15 = sub_10050F848(&v254, v255);
  uint64_t v261 = v13;
  uint64_t v262 = v14;
  uint64_t v16 = sub_1005767BC(v260);
  sub_100F6D3D4((uint64_t)v15, (uint64_t)v16, a3);
  int64_t v17 = (double *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v254);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v260);
  uint64_t v242 = *((void *)v17 + 2);
  if (v242)
  {
    unint64_t v18 = 0;
    uint64_t v241 = 0;
    uint64_t v235 = kCAFillModeRemoved;
    long long v234 = kCAFillModeForwards;
    uint64_t v237 = kCAFillModeBackwards;
    uint64_t v236 = kCAFillModeBoth;
    __n128 v19 = (uint64_t *)&unk_10167BDB0;
    uint64_t v238 = v7;
    uint64_t v239 = v11;
    while (1)
    {
      if (v18 >= *((void *)v17 + 2))
      {
        __break(1u);
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      uint64_t v20 = (uint64_t)(v17 + 4);
      sub_1005498A4((uint64_t)&v17[5 * v18 + 4], (uint64_t)&v254);
      sub_1005057FC(v19);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_100F6BEE0((uint64_t)v11);
LABEL_4:
      if (++v18 == v242) {
        return v17;
      }
    }
    if (v18 >= *((void *)v17 + 2)) {
      goto LABEL_164;
    }
    v243 = v17;
    sub_1005498A4((uint64_t)&v17[5 * v18 + 4], (uint64_t)v260);
    uint64_t v22 = v261;
    uint64_t v21 = v262;
    uint64_t v23 = sub_10050F848(v260, v261);
    uint64_t v24 = *(void *)(v22 - 8);
    __n128 v25 = __chkstk_darwin(v23, v23);
    uint64_t v27 = (char *)&v233 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v24 + 16))(v27, v25);
    BOOL v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 64))(v22, v21);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v22);
    if (!v28)
    {
      sub_1005498A4((uint64_t)v260, (uint64_t)&v254);
      int64_t v17 = v243;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v17 = sub_100F68620((uint64_t)v17);
      }
      if (v18 < *((void *)v17 + 2)) {
        goto LABEL_161;
      }
      goto LABEL_166;
    }
    uint64_t v240 = v18;
    uint64_t v29 = v261;
    uint64_t v30 = v262;
    sub_10050F848(v260, v261);
    CGFloat v31 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v30 + 88);
    CGFloat v32 = v243;
    swift_bridgeObjectRetain();
    v31(&v257, v29, v30);
    uint64_t v33 = v258;
    uint64_t v34 = v259;
    sub_10050F848(&v257, v258);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v34 + 56))(&v254, v33, v34);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v257);
    uint64_t v35 = sub_1009FCAC8();
    sub_10054BD5C((uint64_t)&v254);
    char v253 = _swiftEmptyArrayStorage;
    uint64_t v36 = *((void *)v32 + 2);
    swift_bridgeObjectRetain();
    uint64_t v37 = v28;
    if (!v36)
    {
LABEL_10:
      uint64_t v38 = v19;
      int64_t v17 = v243;
      swift_bridgeObjectRelease();

      *(void *)&uint64_t v250 = v253;
      swift_retain();
      uint64_t v39 = v241;
      sub_100F68930((uint64_t *)&v250);
      if (v39) {
        goto LABEL_168;
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v40 = v250;
      uint64_t v41 = *(void *)(v250 + 16);
      unint64_t v18 = v240;
      uint64_t v241 = 0;
      if (v41)
      {
        sub_1005498A4(v250 + 32, (uint64_t)&v250);
        swift_bridgeObjectRetain();
        uint64_t v42 = v41 - 1;
        __n128 v19 = v38;
        if (v41 != 1)
        {
          uint64_t v115 = v40 + 72;
          do
          {
            sub_1005498A4(v115, (uint64_t)&v247);
            id v117 = v248;
            id v116 = v249;
            sub_10050F848(&v247, v248);
            uint64_t v118 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v116 + 24) + 8) + 8))(v117);
            uint64_t v120 = v251;
            uint64_t v119 = v252;
            sub_10050F848(&v250, v251);
            if (v118 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v119 + 24) + 8) + 8))(v120))
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v247);
            }
            else
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
              sub_10053974C(&v247, (uint64_t)&v250);
            }
            v115 += 40;
            --v42;
          }
          while (v42);
        }
        swift_release();
        sub_10053974C(&v250, (uint64_t)&v257);
        sub_10053974C(&v257, (uint64_t)&v254);
        sub_100822DF0(v40, (uint64_t)&v250);
        swift_release();
        if (v251)
        {
          sub_10053974C(&v250, (uint64_t)&v257);
          sub_1005498A4((uint64_t)v260, (uint64_t)&v250);
          uint64_t v43 = v251;
          unint64_t v44 = v252;
          sub_10050F848(&v250, v251);
          uint64_t v45 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v44 + 128))(&v254, v43, v44);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
          uint64_t v11 = v239;
          int64_t v17 = v243;
          if ((v45 & 1) == 0
            || (uint64_t v46 = v255,
                uint64_t v47 = v256,
                sub_10050F848(&v254, v255),
                ((*(uint64_t (**)(long long *, uint64_t, uint64_t))(v47 + 128))(&v257, v46, v47) & 1) == 0))
          {
            sub_1005498A4((uint64_t)v260, (uint64_t)&v250);
            uint64_t v121 = v251;
            uint64_t v122 = v252;
            sub_10050F848(&v250, v251);
            Class v123 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v122 + 128))(&v254, v121, v122);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
            if (v123)
            {
              uint64_t v124 = v261;
              uint64_t v125 = v262;
              sub_10050F848(v260, v261);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v125 + 88))(&v250, v124, v125);
              uint64_t v126 = v251;
              uint64_t v127 = v252;
              sub_10050F848(&v250, v251);
              uint64_t v128 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v127 + 112))(v126, v127);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
              if (v128 == 2)
              {
                uint64_t v129 = v261;
                uint64_t v130 = v262;
                sub_1005231B4((uint64_t)v260, v261);
                uint64_t v131 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v130 + 104))(&v250, v129, v130);
                uint64_t v133 = *(void *)(v132 + 24);
                uint64_t v134 = *(void *)(v132 + 32);
                sub_1005231B4(v132, v133);
                uint64_t v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 120);
                id v136 = v134;
                uint64_t v11 = v239;
                v135(1, v133, v136);
                v131(&v250, 0);
              }
              id v137 = v261;
              uint64_t v138 = v262;
              sub_10050F848(v260, v261);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v138 + 88))(&v250, v137, v138);
              char v139 = v251;
              float v140 = v252;
              sub_10050F848(&v250, v251);
              char v141 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v140 + 136))(v139, v140);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
              if (v141 == 2)
              {
                objc_super v142 = v261;
                double v143 = v262;
                sub_1005231B4((uint64_t)v260, v261);
                uint64_t v144 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v143 + 104))(&v250, v142, v143);
                unsigned __int8 v146 = *(void *)(v145 + 24);
                uint64_t v147 = *(void *)(v145 + 32);
                sub_1005231B4(v145, v146);
                uint64_t v148 = *(void (**)(void, uint64_t, uint64_t))(v147 + 144);
                unsigned __int8 v149 = v147;
                uint64_t v11 = v239;
                v148(0, v146, v149);
                v144(&v250, 0);
              }
              unsigned __int8 v150 = v261;
              uint64_t v151 = v262;
              sub_10050F848(v260, v261);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v151 + 88))(&v250, v150, v151);
              uint64_t v152 = v251;
              uint64_t v153 = v252;
              sub_10050F848(&v250, v251);
              uint64_t v154 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v153 + 88))(v152, v153);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);

              if (v154) {
                goto LABEL_156;
              }
              uint64_t v79 = v261;
              uint64_t v80 = v262;
              sub_1005231B4((uint64_t)v260, v261);
              uint64_t v81 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v80 + 104);
              id v82 = v237;
            }
            else
            {
              sub_1005498A4((uint64_t)v260, (uint64_t)&v250);
              uint64_t v155 = v251;
              char v156 = v252;
              sub_10050F848(&v250, v251);
              id v157 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v156 + 128))(&v257, v155, v156);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
              id v158 = v261;
              uint64_t v159 = v262;
              sub_10050F848(v260, v261);
              if (v157)
              {
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v159 + 88))(&v250, v158, v159);
                uint64_t v160 = v251;
                double v161 = v252;
                sub_10050F848(&v250, v251);
                id v162 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v161 + 112))(v160, v161);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
                if (v162 == 2)
                {
                  uint64_t v163 = v261;
                  uint64_t v164 = v262;
                  sub_1005231B4((uint64_t)v260, v261);
                  id v165 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v164 + 104))(&v250, v163, v164);
                  id v167 = *(void *)(v166 + 24);
                  uint64_t v168 = *(void *)(v166 + 32);
                  sub_1005231B4(v166, v167);
                  (*(void (**)(void, uint64_t, uint64_t))(v168 + 120))(0, v167, v168);
                  v165(&v250, 0);
                }
                uint64_t v169 = v261;
                unsigned __int8 v170 = v262;
                sub_10050F848(v260, v261);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v170 + 88))(&v250, v169, v170);
                uint64_t v171 = v251;
                id v172 = v252;
                sub_10050F848(&v250, v251);
                uint64_t v173 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v172 + 136))(v171, v172);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
                if (v173 == 2)
                {
                  char v174 = v261;
                  id v175 = v262;
                  sub_1005231B4((uint64_t)v260, v261);
                  id v176 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v175 + 104))(&v250, v174, v175);
                  unint64_t v178 = *(void *)(v177 + 24);
                  double v179 = *(void *)(v177 + 32);
                  sub_1005231B4(v177, v178);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 144))(1, v178, v179);
                  v176(&v250, 0);
                }
                uint64_t v180 = v261;
                double v181 = v262;
                sub_10050F848(v260, v261);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v181 + 88))(&v250, v180, v181);
                id v182 = v251;
                uint64_t v183 = v252;
                sub_10050F848(&v250, v251);
                double v184 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v183 + 88))(v182, v183);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);

                uint64_t v11 = v239;
                if (v184) {
                  goto LABEL_156;
                }
                uint64_t v79 = v261;
                uint64_t v80 = v262;
                sub_1005231B4((uint64_t)v260, v261);
                uint64_t v81 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v80 + 104);
                id v82 = v234;
              }
              else
              {
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v159 + 88))(&v250, v158, v159);
                uint64_t v185 = v251;
                id v186 = v252;
                sub_10050F848(&v250, v251);
                long long v187 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v186 + 112))(v185, v186);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
                if (v187 == 2)
                {
                  uint64_t v188 = v261;
                  uint64_t v189 = v262;
                  sub_1005231B4((uint64_t)v260, v261);
                  id v190 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v189 + 104))(&v250, v188, v189);
                  uint64_t v192 = *(void *)(v191 + 24);
                  Swift::Int v193 = *(void *)(v191 + 32);
                  sub_1005231B4(v191, v192);
                  (*(void (**)(void, uint64_t, uint64_t))(v193 + 120))(0, v192, v193);
                  v190(&v250, 0);
                }
                uint64_t v194 = v261;
                uint64_t v195 = v262;
                sub_10050F848(v260, v261);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v195 + 88))(&v250, v194, v195);
                uint64_t v196 = v251;
                uint64_t v197 = v252;
                sub_10050F848(&v250, v251);
                uint64_t v198 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v197 + 136))(v196, v197);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
                if (v198 == 2)
                {
                  uint64_t v199 = v261;
                  uint64_t v200 = v262;
                  sub_1005231B4((uint64_t)v260, v261);
                  id v201 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v200 + 104))(&v250, v199, v200);
                  uint64_t v203 = *(void *)(v202 + 24);
                  id v204 = *(void *)(v202 + 32);
                  sub_1005231B4(v202, v203);
                  (*(void (**)(void, uint64_t, uint64_t))(v204 + 144))(0, v203, v204);
                  v201(&v250, 0);
                }
                uint64_t v205 = v261;
                uint64_t v206 = v262;
                sub_10050F848(v260, v261);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v206 + 88))(&v250, v205, v206);
                id v207 = v251;
                id v208 = v252;
                sub_10050F848(&v250, v251);
                uint64_t v209 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v208 + 88))(v207, v208);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);

                uint64_t v11 = v239;
                if (v209) {
                  goto LABEL_156;
                }
                uint64_t v79 = v261;
                uint64_t v80 = v262;
                sub_1005231B4((uint64_t)v260, v261);
                uint64_t v81 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v80 + 104);
                id v82 = v235;
              }
            }
LABEL_155:
            double v210 = v82;
            double v211 = v81(&v250, v79, v80);
            int64_t v17 = v243;
            id v212 = (void (*)(long long *, void))v211;
            double v214 = *(void *)(v213 + 24);
            long long v215 = *(void *)(v213 + 32);
            sub_1005231B4(v213, v214);
            long long v216 = *(void (**)(CAMediaTimingFillMode, uint64_t, uint64_t))(v215 + 96);
            long long v217 = v82;
            __n128 v19 = v38;
            long long v218 = v215;
            uint64_t v11 = v239;
            v216(v217, v214, v218);
            v212(&v250, 0);
            goto LABEL_156;
          }
          CGRect v48 = v261;
          CGRect v49 = v262;
          sub_10050F848(v260, v261);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v49 + 88))(&v250, v48, v49);
          long long v50 = v251;
          long long v51 = v252;
          sub_10050F848(&v250, v251);
          long long v52 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v51 + 112))(v50, v51);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
          if (v52 == 2)
          {
            Swift::String v53 = v261;
            Swift::String v54 = v262;
            sub_1005231B4((uint64_t)v260, v261);
            uint64_t v55 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v54 + 104))(&v250, v53, v54);
            int64_t v57 = *(void *)(v56 + 24);
            uint64_t v58 = *(void *)(v56 + 32);
            sub_1005231B4(v56, v57);
            uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 120);
            double v60 = v58;
            uint64_t v11 = v239;
            v59(1, v57, v60);
            v55(&v250, 0);
          }
          uint64_t v61 = v261;
          simd_float4 v62 = v262;
          sub_10050F848(v260, v261);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v62 + 88))(&v250, v61, v62);
          BOOL v63 = v251;
          long long v64 = v252;
          sub_10050F848(&v250, v251);
          uint64_t v65 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v64 + 136))(v63, v64);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
          if (v65 == 2)
          {
            uint64_t v66 = v261;
            CGRect v67 = v262;
            sub_1005231B4((uint64_t)v260, v261);
            CGRect v68 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v67 + 104))(&v250, v66, v67);
            uint64_t v70 = *(void *)(v69 + 24);
            uint64_t v71 = *(void *)(v69 + 32);
            sub_1005231B4(v69, v70);
            unint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 144);
            CKRecordID v73 = v71;
            uint64_t v11 = v239;
            v72(1, v70, v73);
            v68(&v250, 0);
          }
          Swift::String v74 = v261;
          id v75 = v262;
          sub_10050F848(v260, v261);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v75 + 88))(&v250, v74, v75);
          unint64_t v76 = v251;
          uint64_t v77 = v252;
          sub_10050F848(&v250, v251);
          uint64_t v78 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v77 + 88))(v76, v77);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);

          if (!v78)
          {
            uint64_t v79 = v261;
            uint64_t v80 = v262;
            sub_1005231B4((uint64_t)v260, v261);
            uint64_t v81 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v80 + 104);
            id v82 = v236;
            goto LABEL_155;
          }
LABEL_156:
          long long v219 = v261;
          long long v220 = v262;
          sub_10050F848(v260, v261);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v220 + 88))(&v250, v219, v220);
          long long v221 = v251;
          long long v222 = v252;
          sub_10050F848(&v250, v251);
          long long v223 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v222 + 160))(v221, v222);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
          if (v223 == 2)
          {
            long long v224 = v261;
            long long v225 = v262;
            sub_1005231B4((uint64_t)v260, v261);
            long long v226 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v225 + 104))(&v250, v224, v225);
            long long v228 = *(void *)(v227 + 24);
            long long v229 = *(void *)(v227 + 32);
            sub_1005231B4(v227, v228);
            uint64_t v230 = *(void (**)(uint64_t, uint64_t, uint64_t))(v229 + 168);
            float v231 = v229;
            uint64_t v11 = v239;
            v230(1, v228, v231);
            v226(&v250, 0);
          }

          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v257);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v254);
          sub_1005498A4((uint64_t)v260, (uint64_t)&v254);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v17 = sub_100F68620((uint64_t)v17);
          }
          if (v18 < *((void *)v17 + 2))
          {
LABEL_161:
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v17[5 * v18 + 4]);
            sub_10053974C(&v254, (uint64_t)&v17[5 * v18 + 4]);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v260);
            goto LABEL_4;
          }
LABEL_167:
          __break(1u);
LABEL_168:
          swift_release();
          __break(1u);
          JUMPOUT(0x100F55A74);
        }

        sub_100522F00((uint64_t)&v250, &qword_10167E120);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v254);
        uint64_t v11 = v239;
        int64_t v17 = v243;
      }
      else
      {
        swift_release();

        uint64_t v11 = v239;
        __n128 v19 = v38;
      }
      sub_1005498A4((uint64_t)v260, (uint64_t)&v254);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v17 = sub_100F68620((uint64_t)v17);
      }
      if (v18 < *((void *)v17 + 2)) {
        goto LABEL_161;
      }
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    while (1)
    {
      sub_1005498A4(v20, (uint64_t)&v250);
      uint64_t v84 = v251;
      uint64_t v83 = v252;
      sub_10050F848(&v250, v251);
      id v85 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 64))(v84, v83);
      if (v85)
      {
        uint64_t v86 = (void *)v85;
        sub_10054CE40();
        id v87 = v37;
        uint64_t v88 = static NSObject.== infix(_:_:)();

        sub_1005498A4((uint64_t)&v250, (uint64_t)&v247);
        if (v88)
        {
          uint64_t v89 = v248;
          id v90 = v249;
          sub_10050F848(&v247, v248);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v90 + 88))(v244, v89, v90);
          uint64_t v91 = v245;
          id v92 = v246;
          sub_10050F848(v244, v245);
          id v93 = 0xE800000000000000;
          uint64_t v94 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v92 + 80))(v91, v92);
          uint64_t v95 = 0x73746E65746E6F63;
          switch(v94)
          {
            case 1:
              id v93 = 0xEC00000074636552;
              break;
            case 2:
              id v93 = 0xEE007265746E6543;
              break;
            case 3:
              id v93 = 0xE700000000000000;
              uint64_t v95 = 0x7974696361706FLL;
              break;
            case 4:
              uint64_t v95 = 0x6E65646469487369;
              break;
            case 5:
              uint64_t v95 = 0x426F54736B73616DLL;
              id v93 = 0xED000073646E756FLL;
              break;
            case 6:
              uint64_t v95 = 0x656C62756F447369;
              id v93 = 0xED00006465646953;
              break;
            case 7:
              uint64_t v98 = 0x72656E726F63;
              goto LABEL_44;
            case 8:
              uint64_t v95 = 0x6957726564726F62;
              id v93 = 0xEB00000000687464;
              break;
            case 9:
              uint64_t v97 = 0x726564726F62;
              goto LABEL_37;
            case 10:
              uint64_t v95 = 0x756F72676B636162;
              id v93 = 0xEF726F6C6F43646ELL;
              break;
            case 11:
              uint64_t v95 = 0x704F776F64616873;
              id v93 = 0xED00007974696361;
              break;
            case 12:
              uint64_t v98 = 0x776F64616873;
LABEL_44:
              uint64_t v95 = v98 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              id v93 = 0xEC00000073756964;
              break;
            case 13:
              uint64_t v95 = 0x664F776F64616873;
              id v93 = 0xEC00000074657366;
              break;
            case 14:
              uint64_t v97 = 0x776F64616873;
LABEL_37:
              uint64_t v95 = v97 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              id v93 = 0xEB00000000726F6CLL;
              break;
            case 15:
              uint64_t v95 = 0x6150776F64616873;
              id v93 = 0xEA00000000006874;
              break;
            case 16:
              id v93 = 0xE700000000000000;
              uint64_t v95 = 0x737265746C6966;
              break;
            case 17:
              uint64_t v96 = "compositingFilter";
              goto LABEL_54;
            case 18:
              uint64_t v96 = "backgroundFilters";
              goto LABEL_54;
            case 19:
              uint64_t v95 = 0x6152646C756F6873;
              id v93 = 0xEF657A6972657473;
              break;
            case 20:
              uint64_t v95 = 0xD000000000000012;
              uint64_t v99 = "rasterizationScale";
              goto LABEL_59;
            case 21:
              id v93 = 0xE600000000000000;
              uint64_t v95 = 0x73646E756F62;
              break;
            case 22:
              uint64_t v95 = 0x6E6F697469736F70;
              break;
            case 23:
              id v93 = 0xE90000000000006ELL;
              uint64_t v95 = 0x6F697469736F507ALL;
              break;
            case 24:
              uint64_t v95 = 0x6F50726F68636E61;
              id v93 = 0xEC0000005A746E69;
              break;
            case 25:
              uint64_t v95 = 0x6F50726F68636E61;
              id v93 = 0xEB00000000746E69;
              break;
            case 26:
              uint64_t v95 = 0x726F66736E617274;
              id v93 = 0xE90000000000006DLL;
              break;
            case 27:
              uint64_t v96 = "sublayerTransform";
LABEL_54:
              id v93 = (unint64_t)(v96 - 32) | 0x8000000000000000;
              uint64_t v95 = 0xD000000000000011;
              break;
            case 28:
              uint64_t v95 = 0xD000000000000010;
              uint64_t v99 = "dynamicTransform";
LABEL_59:
              id v93 = (unint64_t)(v99 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          uint64_t v100 = 0xE800000000000000;
          uint64_t v101 = 0x73746E65746E6F63;
          switch(v35)
          {
            case 1:
              uint64_t v102 = 1952671058;
              goto LABEL_89;
            case 2:
              uint64_t v100 = 0xEE007265746E6543;
              if (v95 != 0x73746E65746E6F63) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 3:
              uint64_t v100 = 0xE700000000000000;
              if (v95 != 0x7974696361706FLL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 4:
              if (v95 != 0x6E65646469487369) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 5:
              uint64_t v105 = 0x426F54736B73616DLL;
              uint64_t v106 = 0x73646E756FLL;
              goto LABEL_86;
            case 6:
              uint64_t v105 = 0x656C62756F447369;
              uint64_t v106 = 0x6465646953;
              goto LABEL_86;
            case 7:
              id v107 = 0x72656E726F63;
              goto LABEL_82;
            case 8:
              uint64_t v108 = 0x6957726564726F62;
              uint64_t v109 = 6845540;
              goto LABEL_95;
            case 9:
              uint64_t v104 = 0x726564726F62;
              goto LABEL_72;
            case 10:
              uint64_t v100 = 0xEF726F6C6F43646ELL;
              if (v95 != 0x756F72676B636162) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 11:
              uint64_t v105 = 0x704F776F64616873;
              uint64_t v106 = 0x7974696361;
LABEL_86:
              uint64_t v100 = v106 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
              if (v95 != v105) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 12:
              id v107 = 0x776F64616873;
LABEL_82:
              uint64_t v101 = v107 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              uint64_t v102 = 1937074532;
              goto LABEL_89;
            case 13:
              uint64_t v101 = 0x664F776F64616873;
              uint64_t v102 = 1952805734;
              goto LABEL_89;
            case 14:
              uint64_t v104 = 0x776F64616873;
LABEL_72:
              uint64_t v108 = v104 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              uint64_t v109 = 7499628;
              goto LABEL_95;
            case 15:
              uint64_t v100 = 0xEA00000000006874;
              if (v95 != 0x6150776F64616873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 16:
              uint64_t v100 = 0xE700000000000000;
              if (v95 != 0x737265746C6966) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 17:
              uint64_t v103 = "compositingFilter";
              goto LABEL_100;
            case 18:
              uint64_t v103 = "backgroundFilters";
              goto LABEL_100;
            case 19:
              uint64_t v100 = 0xEF657A6972657473;
              if (v95 != 0x6152646C756F6873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 20:
              uint64_t v101 = 0xD000000000000012;
              id v110 = "rasterizationScale";
              goto LABEL_109;
            case 21:
              uint64_t v100 = 0xE600000000000000;
              if (v95 != 0x73646E756F62) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 22:
              if (v95 != 0x6E6F697469736F70) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 23:
              uint64_t v100 = 0xE90000000000006ELL;
              if (v95 != 0x6F697469736F507ALL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 24:
              uint64_t v101 = 0x6F50726F68636E61;
              uint64_t v102 = 1517579881;
LABEL_89:
              uint64_t v100 = v102 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              if (v95 != v101) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 25:
              uint64_t v108 = 0x6F50726F68636E61;
              uint64_t v109 = 7630441;
LABEL_95:
              uint64_t v100 = v109 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              if (v95 != v108) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 26:
              uint64_t v100 = 0xE90000000000006DLL;
              if (v95 != 0x726F66736E617274) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 27:
              uint64_t v103 = "sublayerTransform";
LABEL_100:
              uint64_t v100 = (unint64_t)(v103 - 32) | 0x8000000000000000;
              if (v95 != 0xD000000000000011) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 28:
              uint64_t v101 = 0xD000000000000010;
              id v110 = "dynamicTransform";
LABEL_109:
              uint64_t v100 = (unint64_t)(v110 - 32) | 0x8000000000000000;
              goto LABEL_110;
            default:
LABEL_110:
              if (v95 != v101) {
                goto LABEL_114;
              }
LABEL_111:
              if (v93 == v100)
              {
                swift_bridgeObjectRelease_n();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v244);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v247);
              }
              else
              {
LABEL_114:
                uint64_t v111 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v244);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v247);
                if ((v111 & 1) == 0) {
                  goto LABEL_24;
                }
              }
              sub_10053974C(&v250, (uint64_t)&v247);
              id v112 = v253;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1006BB784(0, *((void *)v112 + 2) + 1, 1);
                id v112 = v253;
              }
              uint64_t v114 = *((void *)v112 + 2);
              id v113 = *((void *)v112 + 3);
              if (v114 >= v113 >> 1)
              {
                sub_1006BB784(v113 > 1, v114 + 1, 1);
                id v112 = v253;
              }
              *((void *)v112 + 2) = v114 + 1;
              sub_10053974C(&v247, (uint64_t)&v112[5 * v114 + 4]);
              break;
          }
          goto LABEL_25;
        }
      }
      else
      {
        sub_1005498A4((uint64_t)&v250, (uint64_t)&v247);
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v247);
LABEL_24:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
LABEL_25:
      v20 += 40;
      if (!--v36) {
        goto LABEL_10;
      }
    }
  }
  return v17;
}

double *sub_100F55B5C(uint64_t a1, double a2)
{
  return sub_100F593DC(a1, (uint64_t (*)(uint64_t, double))sub_100F5205C, a2);
}

double *sub_100F55B74(uint64_t a1, double a2, double a3)
{
  void (*v26)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  id v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(long long *, void);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(long long *, void);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(long long *, uint64_t, uint64_t);
  CAMediaTimingFillMode v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  char v101;
  double *v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(long long *, void);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(long long *, void);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(long long *, void);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(long long *, void);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(long long *, void);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(long long *, void);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;
  NSString *v197;
  void (*v198)(long long *, void);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  CAMediaTimingFillMode v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(long long *, void);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v215;
  CAMediaTimingFillMode v216;
  CAMediaTimingFillMode v217;
  CAMediaTimingFillMode v218;
  CAMediaTimingFillMode v219;
  char *v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  double *v224;
  uint64_t v225;
  void v226[3];
  uint64_t v227;
  uint64_t v228;
  long long v229;
  uint64_t v230;
  uint64_t v231;
  long long v232;
  uint64_t v233;
  uint64_t v234;
  double *v235;
  long long v236;
  uint64_t v237;
  uint64_t v238;
  long long v239;
  uint64_t v240;
  uint64_t v241;
  void v242[3];
  uint64_t v243;
  uint64_t v244;

  uint64_t v6 = type metadata accessor for CRLTweenLayerAnimation();
  __chkstk_darwin(v6, v7);
  __n128 v9 = (char *)&v215 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100F51EF8(a1, a2, a3);
  uint64_t v11 = (double *)v10;
  long long v225 = *(void *)(v10 + 16);
  if (v225)
  {
    unint64_t v12 = 0;
    long long v223 = 0;
    long long v217 = kCAFillModeRemoved;
    long long v216 = kCAFillModeForwards;
    long long v219 = kCAFillModeBackwards;
    long long v218 = kCAFillModeBoth;
    uint64_t v13 = (uint64_t *)&unk_10167BDB0;
    long long v220 = v9;
    long long v221 = v6;
    while (1)
    {
      if (v12 >= *((void *)v11 + 2))
      {
        __break(1u);
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      uint64_t v14 = (uint64_t)(v11 + 4);
      sub_1005498A4((uint64_t)&v11[5 * v12 + 4], (uint64_t)&v236);
      sub_1005057FC(v13);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_100F6BEE0((uint64_t)v9);
LABEL_4:
      if (++v12 == v225) {
        return v11;
      }
    }
    if (v12 >= *((void *)v11 + 2)) {
      goto LABEL_164;
    }
    sub_1005498A4((uint64_t)&v11[5 * v12 + 4], (uint64_t)v242);
    uint64_t v16 = v243;
    uint64_t v15 = v244;
    int64_t v17 = sub_10050F848(v242, v243);
    uint64_t v18 = *(void *)(v16 - 8);
    __n128 v19 = __chkstk_darwin(v17, v17);
    uint64_t v21 = (char *)&v215 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
    uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 64))(v16, v15);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
    if (!v22)
    {
      sub_1005498A4((uint64_t)v242, (uint64_t)&v236);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_100F68620((uint64_t)v11);
      }
      __n128 v9 = v220;
      if (v12 < *((void *)v11 + 2)) {
        goto LABEL_161;
      }
      goto LABEL_166;
    }
    long long v222 = v12;
    uint64_t v23 = v11;
    uint64_t v24 = v243;
    uint64_t v25 = v244;
    sub_10050F848(v242, v243);
    uint64_t v26 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v25 + 88);
    swift_bridgeObjectRetain();
    v26(&v239, v24, v25);
    uint64_t v27 = v240;
    BOOL v28 = v241;
    sub_10050F848(&v239, v240);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v28 + 56))(&v236, v27, v28);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v239);
    uint64_t v29 = sub_1009FCAC8();
    sub_10054BD5C((uint64_t)&v236);
    uint64_t v235 = _swiftEmptyArrayStorage;
    uint64_t v30 = *((void *)v23 + 2);
    long long v224 = v23;
    swift_bridgeObjectRetain();
    CGFloat v31 = v22;
    if (!v30)
    {
LABEL_10:
      CGFloat v32 = v13;
      uint64_t v11 = v224;
      swift_bridgeObjectRelease();

      *(void *)&uint64_t v232 = v235;
      swift_retain();
      uint64_t v33 = v223;
      sub_100F68930((uint64_t *)&v232);
      if (v33) {
        goto LABEL_168;
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v34 = v232;
      uint64_t v35 = *(void *)(v232 + 16);
      unint64_t v12 = v222;
      long long v223 = 0;
      if (v35)
      {
        sub_1005498A4(v232 + 32, (uint64_t)&v232);
        swift_bridgeObjectRetain();
        uint64_t v36 = v35 - 1;
        uint64_t v13 = v32;
        if (v35 != 1)
        {
          uint64_t v105 = v34 + 72;
          do
          {
            sub_1005498A4(v105, (uint64_t)&v229);
            id v107 = v230;
            uint64_t v106 = v231;
            sub_10050F848(&v229, v230);
            uint64_t v108 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v106 + 24) + 8) + 8))(v107);
            id v110 = v233;
            uint64_t v109 = v234;
            sub_10050F848(&v232, v233);
            if (v108 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v109 + 24) + 8) + 8))(v110))
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v229);
            }
            else
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
              sub_10053974C(&v229, (uint64_t)&v232);
            }
            v105 += 40;
            --v36;
          }
          while (v36);
        }
        swift_release();
        sub_10053974C(&v232, (uint64_t)&v239);
        sub_10053974C(&v239, (uint64_t)&v236);
        sub_100822DF0(v34, (uint64_t)&v232);
        swift_release();
        if (v233)
        {
          sub_10053974C(&v232, (uint64_t)&v239);
          sub_1005498A4((uint64_t)v242, (uint64_t)&v232);
          uint64_t v37 = v233;
          uint64_t v38 = v234;
          sub_10050F848(&v232, v233);
          uint64_t v39 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v38 + 128))(&v236, v37, v38);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
          if ((v39 & 1) == 0
            || (uint64_t v40 = v237,
                uint64_t v41 = v238,
                sub_10050F848(&v236, v237),
                ((*(uint64_t (**)(long long *, uint64_t, uint64_t))(v41 + 128))(&v239, v40, v41) & 1) == 0))
          {
            sub_1005498A4((uint64_t)v242, (uint64_t)&v232);
            uint64_t v111 = v233;
            id v112 = v234;
            sub_10050F848(&v232, v233);
            id v113 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v112 + 128))(&v236, v111, v112);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
            if (v113)
            {
              uint64_t v114 = v243;
              uint64_t v115 = v244;
              sub_10050F848(v242, v243);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v115 + 88))(&v232, v114, v115);
              id v116 = v233;
              id v117 = v234;
              sub_10050F848(&v232, v233);
              uint64_t v118 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v117 + 112))(v116, v117);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
              if (v118 == 2)
              {
                uint64_t v119 = v243;
                uint64_t v120 = v244;
                sub_1005231B4((uint64_t)v242, v243);
                uint64_t v121 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v120 + 104))(&v232, v119, v120);
                Class v123 = *(void *)(v122 + 24);
                uint64_t v124 = *(void *)(v122 + 32);
                sub_1005231B4(v122, v123);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 120))(1, v123, v124);
                v121(&v232, 0);
              }
              uint64_t v125 = v243;
              uint64_t v126 = v244;
              sub_10050F848(v242, v243);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v126 + 88))(&v232, v125, v126);
              uint64_t v127 = v233;
              uint64_t v128 = v234;
              sub_10050F848(&v232, v233);
              uint64_t v129 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v128 + 136))(v127, v128);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
              if (v129 == 2)
              {
                uint64_t v130 = v243;
                uint64_t v131 = v244;
                sub_1005231B4((uint64_t)v242, v243);
                uint64_t v132 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v131 + 104))(&v232, v130, v131);
                uint64_t v134 = *(void *)(v133 + 24);
                uint64_t v135 = *(void *)(v133 + 32);
                sub_1005231B4(v133, v134);
                (*(void (**)(void, uint64_t, uint64_t))(v135 + 144))(0, v134, v135);
                v132(&v232, 0);
              }
              id v136 = v243;
              id v137 = v244;
              sub_10050F848(v242, v243);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v137 + 88))(&v232, v136, v137);
              uint64_t v138 = v233;
              char v139 = v234;
              sub_10050F848(&v232, v233);
              float v140 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v139 + 88))(v138, v139);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);

              if (v140) {
                goto LABEL_156;
              }
              CGRect v69 = v243;
              uint64_t v70 = v244;
              sub_1005231B4((uint64_t)v242, v243);
              uint64_t v71 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v70 + 104);
              unint64_t v72 = v219;
            }
            else
            {
              sub_1005498A4((uint64_t)v242, (uint64_t)&v232);
              objc_super v142 = v233;
              double v143 = v234;
              sub_10050F848(&v232, v233);
              uint64_t v144 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v143 + 128))(&v239, v142, v143);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
              uint64_t v145 = v243;
              unsigned __int8 v146 = v244;
              sub_10050F848(v242, v243);
              if (v144)
              {
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v146 + 88))(&v232, v145, v146);
                uint64_t v147 = v233;
                uint64_t v148 = v234;
                sub_10050F848(&v232, v233);
                unsigned __int8 v149 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v148 + 112))(v147, v148);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
                if (v149 == 2)
                {
                  unsigned __int8 v150 = v243;
                  uint64_t v151 = v244;
                  sub_1005231B4((uint64_t)v242, v243);
                  uint64_t v152 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v151 + 104))(&v232, v150, v151);
                  uint64_t v154 = *(void *)(v153 + 24);
                  uint64_t v155 = *(void *)(v153 + 32);
                  sub_1005231B4(v153, v154);
                  (*(void (**)(void, uint64_t, uint64_t))(v155 + 120))(0, v154, v155);
                  v152(&v232, 0);
                }
                char v156 = v243;
                id v157 = v244;
                sub_10050F848(v242, v243);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v157 + 88))(&v232, v156, v157);
                id v158 = v233;
                uint64_t v159 = v234;
                sub_10050F848(&v232, v233);
                uint64_t v160 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v159 + 136))(v158, v159);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
                if (v160 == 2)
                {
                  double v161 = v243;
                  id v162 = v244;
                  sub_1005231B4((uint64_t)v242, v243);
                  uint64_t v163 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v162 + 104))(&v232, v161, v162);
                  id v165 = *(void *)(v164 + 24);
                  uint64_t v166 = *(void *)(v164 + 32);
                  sub_1005231B4(v164, v165);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 144))(1, v165, v166);
                  v163(&v232, 0);
                }
                id v167 = v243;
                uint64_t v168 = v244;
                sub_10050F848(v242, v243);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v168 + 88))(&v232, v167, v168);
                uint64_t v169 = v233;
                unsigned __int8 v170 = v234;
                sub_10050F848(&v232, v233);
                uint64_t v171 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v170 + 88))(v169, v170);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);

                if (v171) {
                  goto LABEL_156;
                }
                CGRect v69 = v243;
                uint64_t v70 = v244;
                sub_1005231B4((uint64_t)v242, v243);
                uint64_t v71 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v70 + 104);
                unint64_t v72 = v216;
              }
              else
              {
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v146 + 88))(&v232, v145, v146);
                id v172 = v233;
                uint64_t v173 = v234;
                sub_10050F848(&v232, v233);
                char v174 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v173 + 112))(v172, v173);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
                if (v174 == 2)
                {
                  id v175 = v243;
                  id v176 = v244;
                  sub_1005231B4((uint64_t)v242, v243);
                  uint64_t v177 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v176 + 104))(&v232, v175, v176);
                  double v179 = *(void *)(v178 + 24);
                  uint64_t v180 = *(void *)(v178 + 32);
                  sub_1005231B4(v178, v179);
                  (*(void (**)(void, uint64_t, uint64_t))(v180 + 120))(0, v179, v180);
                  v177(&v232, 0);
                }
                double v181 = v243;
                id v182 = v244;
                sub_10050F848(v242, v243);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v182 + 88))(&v232, v181, v182);
                uint64_t v183 = v233;
                double v184 = v234;
                sub_10050F848(&v232, v233);
                uint64_t v185 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v184 + 136))(v183, v184);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
                if (v185 == 2)
                {
                  id v186 = v243;
                  long long v187 = v244;
                  sub_1005231B4((uint64_t)v242, v243);
                  uint64_t v188 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v187 + 104))(&v232, v186, v187);
                  id v190 = *(void *)(v189 + 24);
                  uint64_t v191 = *(void *)(v189 + 32);
                  sub_1005231B4(v189, v190);
                  (*(void (**)(void, uint64_t, uint64_t))(v191 + 144))(0, v190, v191);
                  v188(&v232, 0);
                }
                uint64_t v192 = v243;
                Swift::Int v193 = v244;
                sub_10050F848(v242, v243);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v193 + 88))(&v232, v192, v193);
                uint64_t v194 = v233;
                uint64_t v195 = v234;
                sub_10050F848(&v232, v233);
                uint64_t v196 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v195 + 88))(v194, v195);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);

                if (v196) {
                  goto LABEL_156;
                }
                CGRect v69 = v243;
                uint64_t v70 = v244;
                sub_1005231B4((uint64_t)v242, v243);
                uint64_t v71 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v70 + 104);
                unint64_t v72 = v217;
              }
            }
LABEL_155:
            uint64_t v197 = v72;
            uint64_t v198 = (void (*)(long long *, void))v71(&v232, v69, v70);
            uint64_t v200 = *(void *)(v199 + 24);
            id v201 = *(void *)(v199 + 32);
            sub_1005231B4(v199, v200);
            id v202 = v72;
            uint64_t v13 = v32;
            (*(void (**)(CAMediaTimingFillMode, uint64_t, uint64_t))(v201 + 96))(v202, v200, v201);
            v198(&v232, 0);
            goto LABEL_156;
          }
          uint64_t v42 = v243;
          uint64_t v43 = v244;
          sub_10050F848(v242, v243);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v43 + 88))(&v232, v42, v43);
          unint64_t v44 = v233;
          uint64_t v45 = v234;
          sub_10050F848(&v232, v233);
          uint64_t v46 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v45 + 112))(v44, v45);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
          if (v46 == 2)
          {
            uint64_t v47 = v243;
            CGRect v48 = v244;
            sub_1005231B4((uint64_t)v242, v243);
            CGRect v49 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v48 + 104))(&v232, v47, v48);
            long long v51 = *(void *)(v50 + 24);
            long long v52 = *(void *)(v50 + 32);
            sub_1005231B4(v50, v51);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 120))(1, v51, v52);
            v49(&v232, 0);
          }
          Swift::String v53 = v243;
          Swift::String v54 = v244;
          sub_10050F848(v242, v243);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v54 + 88))(&v232, v53, v54);
          uint64_t v55 = v233;
          uint64_t v56 = v234;
          sub_10050F848(&v232, v233);
          int64_t v57 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v56 + 136))(v55, v56);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
          if (v57 == 2)
          {
            uint64_t v58 = v243;
            uint64_t v59 = v244;
            sub_1005231B4((uint64_t)v242, v243);
            double v60 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v59 + 104))(&v232, v58, v59);
            simd_float4 v62 = *(void *)(v61 + 24);
            BOOL v63 = *(void *)(v61 + 32);
            sub_1005231B4(v61, v62);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 144))(1, v62, v63);
            v60(&v232, 0);
          }
          long long v64 = v243;
          uint64_t v65 = v244;
          sub_10050F848(v242, v243);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v65 + 88))(&v232, v64, v65);
          uint64_t v66 = v233;
          CGRect v67 = v234;
          sub_10050F848(&v232, v233);
          CGRect v68 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v67 + 88))(v66, v67);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);

          if (!v68)
          {
            CGRect v69 = v243;
            uint64_t v70 = v244;
            sub_1005231B4((uint64_t)v242, v243);
            uint64_t v71 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v70 + 104);
            unint64_t v72 = v218;
            goto LABEL_155;
          }
LABEL_156:
          uint64_t v203 = v243;
          id v204 = v244;
          sub_10050F848(v242, v243);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v204 + 88))(&v232, v203, v204);
          uint64_t v205 = v233;
          uint64_t v206 = v234;
          sub_10050F848(&v232, v233);
          id v207 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v206 + 160))(v205, v206);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
          if (v207 == 2)
          {
            id v208 = v243;
            uint64_t v209 = v244;
            sub_1005231B4((uint64_t)v242, v243);
            double v210 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v209 + 104))(&v232, v208, v209);
            id v212 = *(void *)(v211 + 24);
            uint64_t v213 = *(void *)(v211 + 32);
            sub_1005231B4(v211, v212);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 168))(1, v212, v213);
            v210(&v232, 0);
          }

          __n128 v9 = v220;
          uint64_t v11 = v224;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v239);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v236);
          sub_1005498A4((uint64_t)v242, (uint64_t)&v236);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v11 = sub_100F68620((uint64_t)v11);
          }
          if (v12 < *((void *)v11 + 2))
          {
LABEL_161:
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v11[5 * v12 + 4]);
            sub_10053974C(&v236, (uint64_t)&v11[5 * v12 + 4]);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v242);
            goto LABEL_4;
          }
LABEL_167:
          __break(1u);
LABEL_168:
          swift_release();
          __break(1u);
          JUMPOUT(0x100F576CCLL);
        }

        sub_100522F00((uint64_t)&v232, &qword_10167E120);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v236);
        uint64_t v11 = v224;
      }
      else
      {
        swift_release();

        uint64_t v13 = v32;
      }
      sub_1005498A4((uint64_t)v242, (uint64_t)&v236);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      __n128 v9 = v220;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v11 = sub_100F68620((uint64_t)v11);
      }
      if (v12 < *((void *)v11 + 2)) {
        goto LABEL_161;
      }
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    while (1)
    {
      sub_1005498A4(v14, (uint64_t)&v232);
      Swift::String v74 = v233;
      CKRecordID v73 = v234;
      sub_10050F848(&v232, v233);
      id v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 64))(v74, v73);
      if (v75)
      {
        unint64_t v76 = (void *)v75;
        sub_10054CE40();
        uint64_t v77 = v31;
        uint64_t v78 = static NSObject.== infix(_:_:)();

        sub_1005498A4((uint64_t)&v232, (uint64_t)&v229);
        if (v78)
        {
          uint64_t v79 = v230;
          uint64_t v80 = v231;
          sub_10050F848(&v229, v230);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v80 + 88))(v226, v79, v80);
          uint64_t v81 = v227;
          id v82 = v228;
          sub_10050F848(v226, v227);
          uint64_t v83 = 0xE800000000000000;
          uint64_t v84 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v82 + 80))(v81, v82);
          id v85 = 0x73746E65746E6F63;
          switch(v84)
          {
            case 1:
              uint64_t v83 = 0xEC00000074636552;
              break;
            case 2:
              uint64_t v83 = 0xEE007265746E6543;
              break;
            case 3:
              uint64_t v83 = 0xE700000000000000;
              id v85 = 0x7974696361706FLL;
              break;
            case 4:
              id v85 = 0x6E65646469487369;
              break;
            case 5:
              id v85 = 0x426F54736B73616DLL;
              uint64_t v83 = 0xED000073646E756FLL;
              break;
            case 6:
              id v85 = 0x656C62756F447369;
              uint64_t v83 = 0xED00006465646953;
              break;
            case 7:
              uint64_t v88 = 0x72656E726F63;
              goto LABEL_44;
            case 8:
              id v85 = 0x6957726564726F62;
              uint64_t v83 = 0xEB00000000687464;
              break;
            case 9:
              id v87 = 0x726564726F62;
              goto LABEL_37;
            case 10:
              id v85 = 0x756F72676B636162;
              uint64_t v83 = 0xEF726F6C6F43646ELL;
              break;
            case 11:
              id v85 = 0x704F776F64616873;
              uint64_t v83 = 0xED00007974696361;
              break;
            case 12:
              uint64_t v88 = 0x776F64616873;
LABEL_44:
              id v85 = v88 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              uint64_t v83 = 0xEC00000073756964;
              break;
            case 13:
              id v85 = 0x664F776F64616873;
              uint64_t v83 = 0xEC00000074657366;
              break;
            case 14:
              id v87 = 0x776F64616873;
LABEL_37:
              id v85 = v87 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              uint64_t v83 = 0xEB00000000726F6CLL;
              break;
            case 15:
              id v85 = 0x6150776F64616873;
              uint64_t v83 = 0xEA00000000006874;
              break;
            case 16:
              uint64_t v83 = 0xE700000000000000;
              id v85 = 0x737265746C6966;
              break;
            case 17:
              uint64_t v86 = "compositingFilter";
              goto LABEL_54;
            case 18:
              uint64_t v86 = "backgroundFilters";
              goto LABEL_54;
            case 19:
              id v85 = 0x6152646C756F6873;
              uint64_t v83 = 0xEF657A6972657473;
              break;
            case 20:
              id v85 = 0xD000000000000012;
              uint64_t v89 = "rasterizationScale";
              goto LABEL_59;
            case 21:
              uint64_t v83 = 0xE600000000000000;
              id v85 = 0x73646E756F62;
              break;
            case 22:
              id v85 = 0x6E6F697469736F70;
              break;
            case 23:
              uint64_t v83 = 0xE90000000000006ELL;
              id v85 = 0x6F697469736F507ALL;
              break;
            case 24:
              id v85 = 0x6F50726F68636E61;
              uint64_t v83 = 0xEC0000005A746E69;
              break;
            case 25:
              id v85 = 0x6F50726F68636E61;
              uint64_t v83 = 0xEB00000000746E69;
              break;
            case 26:
              id v85 = 0x726F66736E617274;
              uint64_t v83 = 0xE90000000000006DLL;
              break;
            case 27:
              uint64_t v86 = "sublayerTransform";
LABEL_54:
              uint64_t v83 = (unint64_t)(v86 - 32) | 0x8000000000000000;
              id v85 = 0xD000000000000011;
              break;
            case 28:
              id v85 = 0xD000000000000010;
              uint64_t v89 = "dynamicTransform";
LABEL_59:
              uint64_t v83 = (unint64_t)(v89 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          id v90 = 0xE800000000000000;
          uint64_t v91 = 0x73746E65746E6F63;
          switch(v29)
          {
            case 1:
              id v92 = 1952671058;
              goto LABEL_89;
            case 2:
              id v90 = 0xEE007265746E6543;
              if (v85 != 0x73746E65746E6F63) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 3:
              id v90 = 0xE700000000000000;
              if (v85 != 0x7974696361706FLL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 4:
              if (v85 != 0x6E65646469487369) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 5:
              uint64_t v95 = 0x426F54736B73616DLL;
              uint64_t v96 = 0x73646E756FLL;
              goto LABEL_86;
            case 6:
              uint64_t v95 = 0x656C62756F447369;
              uint64_t v96 = 0x6465646953;
              goto LABEL_86;
            case 7:
              uint64_t v97 = 0x72656E726F63;
              goto LABEL_82;
            case 8:
              uint64_t v98 = 0x6957726564726F62;
              uint64_t v99 = 6845540;
              goto LABEL_95;
            case 9:
              uint64_t v94 = 0x726564726F62;
              goto LABEL_72;
            case 10:
              id v90 = 0xEF726F6C6F43646ELL;
              if (v85 != 0x756F72676B636162) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 11:
              uint64_t v95 = 0x704F776F64616873;
              uint64_t v96 = 0x7974696361;
LABEL_86:
              id v90 = v96 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
              if (v85 != v95) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 12:
              uint64_t v97 = 0x776F64616873;
LABEL_82:
              uint64_t v91 = v97 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              id v92 = 1937074532;
              goto LABEL_89;
            case 13:
              uint64_t v91 = 0x664F776F64616873;
              id v92 = 1952805734;
              goto LABEL_89;
            case 14:
              uint64_t v94 = 0x776F64616873;
LABEL_72:
              uint64_t v98 = v94 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              uint64_t v99 = 7499628;
              goto LABEL_95;
            case 15:
              id v90 = 0xEA00000000006874;
              if (v85 != 0x6150776F64616873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 16:
              id v90 = 0xE700000000000000;
              if (v85 != 0x737265746C6966) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 17:
              id v93 = "compositingFilter";
              goto LABEL_100;
            case 18:
              id v93 = "backgroundFilters";
              goto LABEL_100;
            case 19:
              id v90 = 0xEF657A6972657473;
              if (v85 != 0x6152646C756F6873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 20:
              uint64_t v91 = 0xD000000000000012;
              uint64_t v100 = "rasterizationScale";
              goto LABEL_109;
            case 21:
              id v90 = 0xE600000000000000;
              if (v85 != 0x73646E756F62) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 22:
              if (v85 != 0x6E6F697469736F70) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 23:
              id v90 = 0xE90000000000006ELL;
              if (v85 != 0x6F697469736F507ALL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 24:
              uint64_t v91 = 0x6F50726F68636E61;
              id v92 = 1517579881;
LABEL_89:
              id v90 = v92 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              if (v85 != v91) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 25:
              uint64_t v98 = 0x6F50726F68636E61;
              uint64_t v99 = 7630441;
LABEL_95:
              id v90 = v99 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              if (v85 != v98) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 26:
              id v90 = 0xE90000000000006DLL;
              if (v85 != 0x726F66736E617274) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 27:
              id v93 = "sublayerTransform";
LABEL_100:
              id v90 = (unint64_t)(v93 - 32) | 0x8000000000000000;
              if (v85 != 0xD000000000000011) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 28:
              uint64_t v91 = 0xD000000000000010;
              uint64_t v100 = "dynamicTransform";
LABEL_109:
              id v90 = (unint64_t)(v100 - 32) | 0x8000000000000000;
              goto LABEL_110;
            default:
LABEL_110:
              if (v85 != v91) {
                goto LABEL_114;
              }
LABEL_111:
              if (v83 == v90)
              {
                swift_bridgeObjectRelease_n();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v226);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v229);
              }
              else
              {
LABEL_114:
                uint64_t v101 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v226);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v229);
                if ((v101 & 1) == 0) {
                  goto LABEL_24;
                }
              }
              sub_10053974C(&v232, (uint64_t)&v229);
              uint64_t v102 = v235;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1006BB784(0, *((void *)v102 + 2) + 1, 1);
                uint64_t v102 = v235;
              }
              uint64_t v104 = *((void *)v102 + 2);
              uint64_t v103 = *((void *)v102 + 3);
              if (v104 >= v103 >> 1)
              {
                sub_1006BB784(v103 > 1, v104 + 1, 1);
                uint64_t v102 = v235;
              }
              *((void *)v102 + 2) = v104 + 1;
              sub_10053974C(&v229, (uint64_t)&v102[5 * v104 + 4]);
              break;
          }
          goto LABEL_25;
        }
      }
      else
      {
        sub_1005498A4((uint64_t)&v232, (uint64_t)&v229);
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v229);
LABEL_24:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
LABEL_25:
      v14 += 40;
      if (!--v30) {
        goto LABEL_10;
      }
    }
  }
  return v11;
}

uint64_t sub_100F577B4()
{
  void (*v19)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  id v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(long long *, void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(long long *, void);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(long long *, uint64_t, uint64_t);
  CAMediaTimingFillMode v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  const char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  char v94;
  double *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(long long *, void);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(long long *, void);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(long long *, void);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(long long *, void);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(long long *, void);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(long long *, void);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  NSString *v190;
  void (*v191)(long long *, void);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  CAMediaTimingFillMode v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  void (*v203)(long long *, void);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v208;
  CAMediaTimingFillMode v209;
  CAMediaTimingFillMode v210;
  CAMediaTimingFillMode v211;
  CAMediaTimingFillMode v212;
  char *v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void v219[3];
  uint64_t v220;
  uint64_t v221;
  long long v222;
  uint64_t v223;
  uint64_t v224;
  long long v225;
  uint64_t v226;
  uint64_t v227;
  double *v228;
  long long v229;
  uint64_t v230;
  uint64_t v231;
  long long v232;
  uint64_t v233;
  uint64_t v234;
  void v235[3];
  uint64_t v236;
  uint64_t v237;

  uint64_t v0 = type metadata accessor for CRLTweenLayerAnimation();
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (char *)&v208 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100B99120();
  long long v218 = *(void *)(v4 + 16);
  if (v218)
  {
    unint64_t v5 = 0;
    long long v216 = 0;
    double v210 = kCAFillModeRemoved;
    uint64_t v209 = kCAFillModeForwards;
    id v212 = kCAFillModeBackwards;
    double v211 = kCAFillModeBoth;
    uint64_t v6 = (uint64_t *)&unk_10167BDB0;
    uint64_t v213 = v3;
    double v214 = v0;
    while (1)
    {
      if (v5 >= *(void *)(v4 + 16))
      {
        __break(1u);
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      uint64_t v7 = v4 + 32;
      sub_1005498A4(v4 + 32 + 40 * v5, (uint64_t)&v229);
      sub_1005057FC(v6);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_100F6BEE0((uint64_t)v3);
LABEL_4:
      if (++v5 == v218) {
        return v4;
      }
    }
    if (v5 >= *(void *)(v4 + 16)) {
      goto LABEL_164;
    }
    sub_1005498A4(v4 + 32 + 40 * v5, (uint64_t)v235);
    uint64_t v9 = v236;
    uint64_t v8 = v237;
    uint64_t v10 = sub_10050F848(v235, v236);
    uint64_t v11 = *(void *)(v9 - 8);
    __n128 v12 = __chkstk_darwin(v10, v10);
    uint64_t v14 = (char *)&v208 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 64))(v9, v8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    if (!v15)
    {
      sub_1005498A4((uint64_t)v235, (uint64_t)&v229);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = (uint64_t)sub_100F68620(v4);
      }
      uint64_t v3 = v213;
      if (v5 < *(void *)(v4 + 16)) {
        goto LABEL_161;
      }
      goto LABEL_166;
    }
    long long v215 = v5;
    uint64_t v16 = v4;
    uint64_t v17 = v236;
    uint64_t v18 = v237;
    sub_10050F848(v235, v236);
    __n128 v19 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v18 + 88);
    swift_bridgeObjectRetain();
    v19(&v232, v17, v18);
    uint64_t v20 = v233;
    uint64_t v21 = v234;
    sub_10050F848(&v232, v233);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v21 + 56))(&v229, v20, v21);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
    uint64_t v22 = sub_1009FCAC8();
    sub_10054BD5C((uint64_t)&v229);
    long long v228 = _swiftEmptyArrayStorage;
    uint64_t v23 = *(void *)(v16 + 16);
    long long v217 = v16;
    swift_bridgeObjectRetain();
    uint64_t v24 = v15;
    if (!v23)
    {
LABEL_10:
      uint64_t v25 = v6;
      uint64_t v4 = v217;
      swift_bridgeObjectRelease();

      *(void *)&long long v225 = v228;
      swift_retain();
      uint64_t v26 = v216;
      sub_100F68930((uint64_t *)&v225);
      if (v26) {
        goto LABEL_168;
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v27 = v225;
      BOOL v28 = *(void *)(v225 + 16);
      unint64_t v5 = v215;
      long long v216 = 0;
      if (v28)
      {
        sub_1005498A4(v225 + 32, (uint64_t)&v225);
        swift_bridgeObjectRetain();
        uint64_t v29 = v28 - 1;
        uint64_t v6 = v25;
        if (v28 != 1)
        {
          uint64_t v98 = v27 + 72;
          do
          {
            sub_1005498A4(v98, (uint64_t)&v222);
            uint64_t v100 = v223;
            uint64_t v99 = v224;
            sub_10050F848(&v222, v223);
            uint64_t v101 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v99 + 24) + 8) + 8))(v100);
            uint64_t v103 = v226;
            uint64_t v102 = v227;
            sub_10050F848(&v225, v226);
            if (v101 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v102 + 24) + 8) + 8))(v103))
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v222);
            }
            else
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
              sub_10053974C(&v222, (uint64_t)&v225);
            }
            v98 += 40;
            --v29;
          }
          while (v29);
        }
        swift_release();
        sub_10053974C(&v225, (uint64_t)&v232);
        sub_10053974C(&v232, (uint64_t)&v229);
        sub_100822DF0(v27, (uint64_t)&v225);
        swift_release();
        if (v226)
        {
          sub_10053974C(&v225, (uint64_t)&v232);
          sub_1005498A4((uint64_t)v235, (uint64_t)&v225);
          uint64_t v30 = v226;
          CGFloat v31 = v227;
          sub_10050F848(&v225, v226);
          CGFloat v32 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v31 + 128))(&v229, v30, v31);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
          if ((v32 & 1) == 0
            || (uint64_t v33 = v230,
                uint64_t v34 = v231,
                sub_10050F848(&v229, v230),
                ((*(uint64_t (**)(long long *, uint64_t, uint64_t))(v34 + 128))(&v232, v33, v34) & 1) == 0))
          {
            sub_1005498A4((uint64_t)v235, (uint64_t)&v225);
            uint64_t v104 = v226;
            uint64_t v105 = v227;
            sub_10050F848(&v225, v226);
            uint64_t v106 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v105 + 128))(&v229, v104, v105);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
            if (v106)
            {
              id v107 = v236;
              uint64_t v108 = v237;
              sub_10050F848(v235, v236);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v108 + 88))(&v225, v107, v108);
              uint64_t v109 = v226;
              id v110 = v227;
              sub_10050F848(&v225, v226);
              uint64_t v111 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v110 + 112))(v109, v110);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
              if (v111 == 2)
              {
                id v112 = v236;
                id v113 = v237;
                sub_1005231B4((uint64_t)v235, v236);
                uint64_t v114 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v113 + 104))(&v225, v112, v113);
                id v116 = *(void *)(v115 + 24);
                id v117 = *(void *)(v115 + 32);
                sub_1005231B4(v115, v116);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 120))(1, v116, v117);
                v114(&v225, 0);
              }
              uint64_t v118 = v236;
              uint64_t v119 = v237;
              sub_10050F848(v235, v236);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v119 + 88))(&v225, v118, v119);
              uint64_t v120 = v226;
              uint64_t v121 = v227;
              sub_10050F848(&v225, v226);
              uint64_t v122 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v121 + 136))(v120, v121);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
              if (v122 == 2)
              {
                Class v123 = v236;
                uint64_t v124 = v237;
                sub_1005231B4((uint64_t)v235, v236);
                uint64_t v125 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v124 + 104))(&v225, v123, v124);
                uint64_t v127 = *(void *)(v126 + 24);
                uint64_t v128 = *(void *)(v126 + 32);
                sub_1005231B4(v126, v127);
                (*(void (**)(void, uint64_t, uint64_t))(v128 + 144))(0, v127, v128);
                v125(&v225, 0);
              }
              uint64_t v129 = v236;
              uint64_t v130 = v237;
              sub_10050F848(v235, v236);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v130 + 88))(&v225, v129, v130);
              uint64_t v131 = v226;
              uint64_t v132 = v227;
              sub_10050F848(&v225, v226);
              uint64_t v133 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v132 + 88))(v131, v132);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);

              if (v133) {
                goto LABEL_156;
              }
              simd_float4 v62 = v236;
              BOOL v63 = v237;
              sub_1005231B4((uint64_t)v235, v236);
              long long v64 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v63 + 104);
              uint64_t v65 = v212;
            }
            else
            {
              sub_1005498A4((uint64_t)v235, (uint64_t)&v225);
              uint64_t v135 = v226;
              id v136 = v227;
              sub_10050F848(&v225, v226);
              id v137 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v136 + 128))(&v232, v135, v136);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
              uint64_t v138 = v236;
              char v139 = v237;
              sub_10050F848(v235, v236);
              if (v137)
              {
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v139 + 88))(&v225, v138, v139);
                float v140 = v226;
                char v141 = v227;
                sub_10050F848(&v225, v226);
                objc_super v142 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v141 + 112))(v140, v141);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
                if (v142 == 2)
                {
                  double v143 = v236;
                  uint64_t v144 = v237;
                  sub_1005231B4((uint64_t)v235, v236);
                  uint64_t v145 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v144 + 104))(&v225, v143, v144);
                  uint64_t v147 = *(void *)(v146 + 24);
                  uint64_t v148 = *(void *)(v146 + 32);
                  sub_1005231B4(v146, v147);
                  (*(void (**)(void, uint64_t, uint64_t))(v148 + 120))(0, v147, v148);
                  v145(&v225, 0);
                }
                unsigned __int8 v149 = v236;
                unsigned __int8 v150 = v237;
                sub_10050F848(v235, v236);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v150 + 88))(&v225, v149, v150);
                uint64_t v151 = v226;
                uint64_t v152 = v227;
                sub_10050F848(&v225, v226);
                uint64_t v153 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v152 + 136))(v151, v152);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
                if (v153 == 2)
                {
                  uint64_t v154 = v236;
                  uint64_t v155 = v237;
                  sub_1005231B4((uint64_t)v235, v236);
                  char v156 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v155 + 104))(&v225, v154, v155);
                  id v158 = *(void *)(v157 + 24);
                  uint64_t v159 = *(void *)(v157 + 32);
                  sub_1005231B4(v157, v158);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v159 + 144))(1, v158, v159);
                  v156(&v225, 0);
                }
                uint64_t v160 = v236;
                double v161 = v237;
                sub_10050F848(v235, v236);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v161 + 88))(&v225, v160, v161);
                id v162 = v226;
                uint64_t v163 = v227;
                sub_10050F848(&v225, v226);
                uint64_t v164 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v163 + 88))(v162, v163);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);

                if (v164) {
                  goto LABEL_156;
                }
                simd_float4 v62 = v236;
                BOOL v63 = v237;
                sub_1005231B4((uint64_t)v235, v236);
                long long v64 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v63 + 104);
                uint64_t v65 = v209;
              }
              else
              {
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v139 + 88))(&v225, v138, v139);
                id v165 = v226;
                uint64_t v166 = v227;
                sub_10050F848(&v225, v226);
                id v167 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v166 + 112))(v165, v166);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
                if (v167 == 2)
                {
                  uint64_t v168 = v236;
                  uint64_t v169 = v237;
                  sub_1005231B4((uint64_t)v235, v236);
                  unsigned __int8 v170 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v169 + 104))(&v225, v168, v169);
                  id v172 = *(void *)(v171 + 24);
                  uint64_t v173 = *(void *)(v171 + 32);
                  sub_1005231B4(v171, v172);
                  (*(void (**)(void, uint64_t, uint64_t))(v173 + 120))(0, v172, v173);
                  v170(&v225, 0);
                }
                char v174 = v236;
                id v175 = v237;
                sub_10050F848(v235, v236);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v175 + 88))(&v225, v174, v175);
                id v176 = v226;
                uint64_t v177 = v227;
                sub_10050F848(&v225, v226);
                unint64_t v178 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v177 + 136))(v176, v177);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
                if (v178 == 2)
                {
                  double v179 = v236;
                  uint64_t v180 = v237;
                  sub_1005231B4((uint64_t)v235, v236);
                  double v181 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v180 + 104))(&v225, v179, v180);
                  uint64_t v183 = *(void *)(v182 + 24);
                  double v184 = *(void *)(v182 + 32);
                  sub_1005231B4(v182, v183);
                  (*(void (**)(void, uint64_t, uint64_t))(v184 + 144))(0, v183, v184);
                  v181(&v225, 0);
                }
                uint64_t v185 = v236;
                id v186 = v237;
                sub_10050F848(v235, v236);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v186 + 88))(&v225, v185, v186);
                long long v187 = v226;
                uint64_t v188 = v227;
                sub_10050F848(&v225, v226);
                uint64_t v189 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v188 + 88))(v187, v188);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);

                if (v189) {
                  goto LABEL_156;
                }
                simd_float4 v62 = v236;
                BOOL v63 = v237;
                sub_1005231B4((uint64_t)v235, v236);
                long long v64 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v63 + 104);
                uint64_t v65 = v210;
              }
            }
LABEL_155:
            id v190 = v65;
            uint64_t v191 = (void (*)(long long *, void))v64(&v225, v62, v63);
            Swift::Int v193 = *(void *)(v192 + 24);
            uint64_t v194 = *(void *)(v192 + 32);
            sub_1005231B4(v192, v193);
            uint64_t v195 = v65;
            uint64_t v6 = v25;
            (*(void (**)(CAMediaTimingFillMode, uint64_t, uint64_t))(v194 + 96))(v195, v193, v194);
            v191(&v225, 0);
            goto LABEL_156;
          }
          uint64_t v35 = v236;
          uint64_t v36 = v237;
          sub_10050F848(v235, v236);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v36 + 88))(&v225, v35, v36);
          uint64_t v37 = v226;
          uint64_t v38 = v227;
          sub_10050F848(&v225, v226);
          uint64_t v39 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v38 + 112))(v37, v38);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
          if (v39 == 2)
          {
            uint64_t v40 = v236;
            uint64_t v41 = v237;
            sub_1005231B4((uint64_t)v235, v236);
            uint64_t v42 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v41 + 104))(&v225, v40, v41);
            unint64_t v44 = *(void *)(v43 + 24);
            uint64_t v45 = *(void *)(v43 + 32);
            sub_1005231B4(v43, v44);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 120))(1, v44, v45);
            v42(&v225, 0);
          }
          uint64_t v46 = v236;
          uint64_t v47 = v237;
          sub_10050F848(v235, v236);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v47 + 88))(&v225, v46, v47);
          CGRect v48 = v226;
          CGRect v49 = v227;
          sub_10050F848(&v225, v226);
          long long v50 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v49 + 136))(v48, v49);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
          if (v50 == 2)
          {
            long long v51 = v236;
            long long v52 = v237;
            sub_1005231B4((uint64_t)v235, v236);
            Swift::String v53 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v52 + 104))(&v225, v51, v52);
            uint64_t v55 = *(void *)(v54 + 24);
            uint64_t v56 = *(void *)(v54 + 32);
            sub_1005231B4(v54, v55);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 144))(1, v55, v56);
            v53(&v225, 0);
          }
          int64_t v57 = v236;
          uint64_t v58 = v237;
          sub_10050F848(v235, v236);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v58 + 88))(&v225, v57, v58);
          uint64_t v59 = v226;
          double v60 = v227;
          sub_10050F848(&v225, v226);
          uint64_t v61 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v60 + 88))(v59, v60);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);

          if (!v61)
          {
            simd_float4 v62 = v236;
            BOOL v63 = v237;
            sub_1005231B4((uint64_t)v235, v236);
            long long v64 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v63 + 104);
            uint64_t v65 = v211;
            goto LABEL_155;
          }
LABEL_156:
          uint64_t v196 = v236;
          uint64_t v197 = v237;
          sub_10050F848(v235, v236);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v197 + 88))(&v225, v196, v197);
          uint64_t v198 = v226;
          uint64_t v199 = v227;
          sub_10050F848(&v225, v226);
          uint64_t v200 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v199 + 160))(v198, v199);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
          if (v200 == 2)
          {
            id v201 = v236;
            id v202 = v237;
            sub_1005231B4((uint64_t)v235, v236);
            uint64_t v203 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v202 + 104))(&v225, v201, v202);
            uint64_t v205 = *(void *)(v204 + 24);
            uint64_t v206 = *(void *)(v204 + 32);
            sub_1005231B4(v204, v205);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v206 + 168))(1, v205, v206);
            v203(&v225, 0);
          }

          uint64_t v3 = v213;
          uint64_t v4 = v217;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v232);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v229);
          sub_1005498A4((uint64_t)v235, (uint64_t)&v229);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v4 = (uint64_t)sub_100F68620(v4);
          }
          if (v5 < *(void *)(v4 + 16))
          {
LABEL_161:
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4 + 40 * v5 + 32);
            sub_10053974C(&v229, v4 + 40 * v5 + 32);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v235);
            goto LABEL_4;
          }
LABEL_167:
          __break(1u);
LABEL_168:
          swift_release();
          __break(1u);
          JUMPOUT(0x100F592F4);
        }

        sub_100522F00((uint64_t)&v225, &qword_10167E120);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v229);
        uint64_t v4 = v217;
      }
      else
      {
        swift_release();

        uint64_t v6 = v25;
      }
      sub_1005498A4((uint64_t)v235, (uint64_t)&v229);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v3 = v213;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v4 = (uint64_t)sub_100F68620(v4);
      }
      if (v5 < *(void *)(v4 + 16)) {
        goto LABEL_161;
      }
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    while (1)
    {
      sub_1005498A4(v7, (uint64_t)&v225);
      CGRect v67 = v226;
      uint64_t v66 = v227;
      sub_10050F848(&v225, v226);
      CGRect v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 64))(v67, v66);
      if (v68)
      {
        CGRect v69 = (void *)v68;
        sub_10054CE40();
        uint64_t v70 = v24;
        uint64_t v71 = static NSObject.== infix(_:_:)();

        sub_1005498A4((uint64_t)&v225, (uint64_t)&v222);
        if (v71)
        {
          unint64_t v72 = v223;
          CKRecordID v73 = v224;
          sub_10050F848(&v222, v223);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v73 + 88))(v219, v72, v73);
          Swift::String v74 = v220;
          id v75 = v221;
          sub_10050F848(v219, v220);
          unint64_t v76 = 0xE800000000000000;
          uint64_t v77 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v75 + 80))(v74, v75);
          uint64_t v78 = 0x73746E65746E6F63;
          switch(v77)
          {
            case 1:
              unint64_t v76 = 0xEC00000074636552;
              break;
            case 2:
              unint64_t v76 = 0xEE007265746E6543;
              break;
            case 3:
              unint64_t v76 = 0xE700000000000000;
              uint64_t v78 = 0x7974696361706FLL;
              break;
            case 4:
              uint64_t v78 = 0x6E65646469487369;
              break;
            case 5:
              uint64_t v78 = 0x426F54736B73616DLL;
              unint64_t v76 = 0xED000073646E756FLL;
              break;
            case 6:
              uint64_t v78 = 0x656C62756F447369;
              unint64_t v76 = 0xED00006465646953;
              break;
            case 7:
              uint64_t v81 = 0x72656E726F63;
              goto LABEL_44;
            case 8:
              uint64_t v78 = 0x6957726564726F62;
              unint64_t v76 = 0xEB00000000687464;
              break;
            case 9:
              uint64_t v80 = 0x726564726F62;
              goto LABEL_37;
            case 10:
              uint64_t v78 = 0x756F72676B636162;
              unint64_t v76 = 0xEF726F6C6F43646ELL;
              break;
            case 11:
              uint64_t v78 = 0x704F776F64616873;
              unint64_t v76 = 0xED00007974696361;
              break;
            case 12:
              uint64_t v81 = 0x776F64616873;
LABEL_44:
              uint64_t v78 = v81 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              unint64_t v76 = 0xEC00000073756964;
              break;
            case 13:
              uint64_t v78 = 0x664F776F64616873;
              unint64_t v76 = 0xEC00000074657366;
              break;
            case 14:
              uint64_t v80 = 0x776F64616873;
LABEL_37:
              uint64_t v78 = v80 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              unint64_t v76 = 0xEB00000000726F6CLL;
              break;
            case 15:
              uint64_t v78 = 0x6150776F64616873;
              unint64_t v76 = 0xEA00000000006874;
              break;
            case 16:
              unint64_t v76 = 0xE700000000000000;
              uint64_t v78 = 0x737265746C6966;
              break;
            case 17:
              uint64_t v79 = "compositingFilter";
              goto LABEL_54;
            case 18:
              uint64_t v79 = "backgroundFilters";
              goto LABEL_54;
            case 19:
              uint64_t v78 = 0x6152646C756F6873;
              unint64_t v76 = 0xEF657A6972657473;
              break;
            case 20:
              uint64_t v78 = 0xD000000000000012;
              id v82 = "rasterizationScale";
              goto LABEL_59;
            case 21:
              unint64_t v76 = 0xE600000000000000;
              uint64_t v78 = 0x73646E756F62;
              break;
            case 22:
              uint64_t v78 = 0x6E6F697469736F70;
              break;
            case 23:
              unint64_t v76 = 0xE90000000000006ELL;
              uint64_t v78 = 0x6F697469736F507ALL;
              break;
            case 24:
              uint64_t v78 = 0x6F50726F68636E61;
              unint64_t v76 = 0xEC0000005A746E69;
              break;
            case 25:
              uint64_t v78 = 0x6F50726F68636E61;
              unint64_t v76 = 0xEB00000000746E69;
              break;
            case 26:
              uint64_t v78 = 0x726F66736E617274;
              unint64_t v76 = 0xE90000000000006DLL;
              break;
            case 27:
              uint64_t v79 = "sublayerTransform";
LABEL_54:
              unint64_t v76 = (unint64_t)(v79 - 32) | 0x8000000000000000;
              uint64_t v78 = 0xD000000000000011;
              break;
            case 28:
              uint64_t v78 = 0xD000000000000010;
              id v82 = "dynamicTransform";
LABEL_59:
              unint64_t v76 = (unint64_t)(v82 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          uint64_t v83 = 0xE800000000000000;
          uint64_t v84 = 0x73746E65746E6F63;
          switch(v22)
          {
            case 1:
              id v85 = 1952671058;
              goto LABEL_89;
            case 2:
              uint64_t v83 = 0xEE007265746E6543;
              if (v78 != 0x73746E65746E6F63) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 3:
              uint64_t v83 = 0xE700000000000000;
              if (v78 != 0x7974696361706FLL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 4:
              if (v78 != 0x6E65646469487369) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 5:
              uint64_t v88 = 0x426F54736B73616DLL;
              uint64_t v89 = 0x73646E756FLL;
              goto LABEL_86;
            case 6:
              uint64_t v88 = 0x656C62756F447369;
              uint64_t v89 = 0x6465646953;
              goto LABEL_86;
            case 7:
              id v90 = 0x72656E726F63;
              goto LABEL_82;
            case 8:
              uint64_t v91 = 0x6957726564726F62;
              id v92 = 6845540;
              goto LABEL_95;
            case 9:
              id v87 = 0x726564726F62;
              goto LABEL_72;
            case 10:
              uint64_t v83 = 0xEF726F6C6F43646ELL;
              if (v78 != 0x756F72676B636162) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 11:
              uint64_t v88 = 0x704F776F64616873;
              uint64_t v89 = 0x7974696361;
LABEL_86:
              uint64_t v83 = v89 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
              if (v78 != v88) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 12:
              id v90 = 0x776F64616873;
LABEL_82:
              uint64_t v84 = v90 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              id v85 = 1937074532;
              goto LABEL_89;
            case 13:
              uint64_t v84 = 0x664F776F64616873;
              id v85 = 1952805734;
              goto LABEL_89;
            case 14:
              id v87 = 0x776F64616873;
LABEL_72:
              uint64_t v91 = v87 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              id v92 = 7499628;
              goto LABEL_95;
            case 15:
              uint64_t v83 = 0xEA00000000006874;
              if (v78 != 0x6150776F64616873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 16:
              uint64_t v83 = 0xE700000000000000;
              if (v78 != 0x737265746C6966) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 17:
              uint64_t v86 = "compositingFilter";
              goto LABEL_100;
            case 18:
              uint64_t v86 = "backgroundFilters";
              goto LABEL_100;
            case 19:
              uint64_t v83 = 0xEF657A6972657473;
              if (v78 != 0x6152646C756F6873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 20:
              uint64_t v84 = 0xD000000000000012;
              id v93 = "rasterizationScale";
              goto LABEL_109;
            case 21:
              uint64_t v83 = 0xE600000000000000;
              if (v78 != 0x73646E756F62) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 22:
              if (v78 != 0x6E6F697469736F70) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 23:
              uint64_t v83 = 0xE90000000000006ELL;
              if (v78 != 0x6F697469736F507ALL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 24:
              uint64_t v84 = 0x6F50726F68636E61;
              id v85 = 1517579881;
LABEL_89:
              uint64_t v83 = v85 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              if (v78 != v84) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 25:
              uint64_t v91 = 0x6F50726F68636E61;
              id v92 = 7630441;
LABEL_95:
              uint64_t v83 = v92 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              if (v78 != v91) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 26:
              uint64_t v83 = 0xE90000000000006DLL;
              if (v78 != 0x726F66736E617274) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 27:
              uint64_t v86 = "sublayerTransform";
LABEL_100:
              uint64_t v83 = (unint64_t)(v86 - 32) | 0x8000000000000000;
              if (v78 != 0xD000000000000011) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 28:
              uint64_t v84 = 0xD000000000000010;
              id v93 = "dynamicTransform";
LABEL_109:
              uint64_t v83 = (unint64_t)(v93 - 32) | 0x8000000000000000;
              goto LABEL_110;
            default:
LABEL_110:
              if (v78 != v84) {
                goto LABEL_114;
              }
LABEL_111:
              if (v76 == v83)
              {
                swift_bridgeObjectRelease_n();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v219);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v222);
              }
              else
              {
LABEL_114:
                uint64_t v94 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v219);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v222);
                if ((v94 & 1) == 0) {
                  goto LABEL_24;
                }
              }
              sub_10053974C(&v225, (uint64_t)&v222);
              uint64_t v95 = v228;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1006BB784(0, *((void *)v95 + 2) + 1, 1);
                uint64_t v95 = v228;
              }
              uint64_t v97 = *((void *)v95 + 2);
              uint64_t v96 = *((void *)v95 + 3);
              if (v97 >= v96 >> 1)
              {
                sub_1006BB784(v96 > 1, v97 + 1, 1);
                uint64_t v95 = v228;
              }
              *((void *)v95 + 2) = v97 + 1;
              sub_10053974C(&v222, (uint64_t)&v95[5 * v97 + 4]);
              break;
          }
          goto LABEL_25;
        }
      }
      else
      {
        sub_1005498A4((uint64_t)&v225, (uint64_t)&v222);
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v222);
LABEL_24:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v225);
LABEL_25:
      v7 += 40;
      if (!--v23) {
        goto LABEL_10;
      }
    }
  }
  return v4;
}

double *sub_100F593DC(uint64_t a1, uint64_t (*a2)(uint64_t, double), double a3)
{
  void (*v24)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(long long *, void);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(long long *, void);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(long long *, uint64_t, uint64_t);
  CAMediaTimingFillMode v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  const char *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  const char *v98;
  char v99;
  double *v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(long long *, void);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(long long *, void);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(long long *, void);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(long long *, void);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(long long *, void);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  uint64_t v185;
  void (*v186)(long long *, void);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  NSString *v195;
  void (*v196)(long long *, void);
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  CAMediaTimingFillMode v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  uint64_t v207;
  void (*v208)(long long *, void);
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v213;
  CAMediaTimingFillMode v214;
  CAMediaTimingFillMode v215;
  CAMediaTimingFillMode v216;
  CAMediaTimingFillMode v217;
  char *v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  double *v222;
  uint64_t v223;
  void v224[3];
  uint64_t v225;
  uint64_t v226;
  long long v227;
  uint64_t v228;
  uint64_t v229;
  long long v230;
  uint64_t v231;
  uint64_t v232;
  double *v233;
  long long v234;
  uint64_t v235;
  uint64_t v236;
  long long v237;
  uint64_t v238;
  uint64_t v239;
  void v240[3];
  uint64_t v241;
  uint64_t v242;

  uint64_t v6 = type metadata accessor for CRLTweenLayerAnimation();
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v213 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (double *)a2(a1, a3);
  long long v223 = *((void *)v10 + 2);
  if (v223)
  {
    unint64_t v11 = 0;
    long long v221 = 0;
    long long v215 = kCAFillModeRemoved;
    double v214 = kCAFillModeForwards;
    long long v217 = kCAFillModeBackwards;
    long long v216 = kCAFillModeBoth;
    __n128 v12 = (uint64_t *)&unk_10167BDB0;
    long long v218 = v9;
    long long v219 = v6;
    while (1)
    {
      if (v11 >= *((void *)v10 + 2))
      {
        __break(1u);
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      uint64_t v13 = (uint64_t)(v10 + 4);
      sub_1005498A4((uint64_t)&v10[5 * v11 + 4], (uint64_t)&v234);
      sub_1005057FC(v12);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_100F6BEE0((uint64_t)v9);
LABEL_4:
      if (++v11 == v223) {
        return v10;
      }
    }
    if (v11 >= *((void *)v10 + 2)) {
      goto LABEL_164;
    }
    sub_1005498A4((uint64_t)&v10[5 * v11 + 4], (uint64_t)v240);
    uint64_t v15 = v241;
    uint64_t v14 = v242;
    uint64_t v16 = sub_10050F848(v240, v241);
    uint64_t v17 = *(void *)(v15 - 8);
    __chkstk_darwin(v16, v16);
    __n128 v19 = (char *)&v213 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v19);
    uint64_t v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 64))(v15, v14);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
    if (!v20)
    {
      sub_1005498A4((uint64_t)v240, (uint64_t)&v234);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_100F68620((uint64_t)v10);
      }
      uint64_t v9 = v218;
      if (v11 < *((void *)v10 + 2)) {
        goto LABEL_161;
      }
      goto LABEL_166;
    }
    long long v220 = v11;
    uint64_t v21 = v10;
    uint64_t v22 = v241;
    uint64_t v23 = v242;
    sub_10050F848(v240, v241);
    uint64_t v24 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v23 + 88);
    swift_bridgeObjectRetain();
    v24(&v237, v22, v23);
    uint64_t v25 = v238;
    uint64_t v26 = v239;
    sub_10050F848(&v237, v238);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v26 + 56))(&v234, v25, v26);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v237);
    uint64_t v27 = sub_1009FCAC8();
    sub_10054BD5C((uint64_t)&v234);
    uint64_t v233 = _swiftEmptyArrayStorage;
    BOOL v28 = *((void *)v21 + 2);
    long long v222 = v21;
    swift_bridgeObjectRetain();
    uint64_t v29 = v20;
    if (!v28)
    {
LABEL_10:
      uint64_t v30 = v12;
      uint64_t v10 = v222;
      swift_bridgeObjectRelease();

      *(void *)&uint64_t v230 = v233;
      swift_retain();
      CGFloat v31 = v221;
      sub_100F68930((uint64_t *)&v230);
      if (v31) {
        goto LABEL_168;
      }
      swift_bridgeObjectRelease();
      swift_release();
      CGFloat v32 = v230;
      uint64_t v33 = *(void *)(v230 + 16);
      unint64_t v11 = v220;
      long long v221 = 0;
      if (v33)
      {
        sub_1005498A4(v230 + 32, (uint64_t)&v230);
        swift_bridgeObjectRetain();
        uint64_t v34 = v33 - 1;
        __n128 v12 = v30;
        if (v33 != 1)
        {
          uint64_t v103 = v32 + 72;
          do
          {
            sub_1005498A4(v103, (uint64_t)&v227);
            uint64_t v105 = v228;
            uint64_t v104 = v229;
            sub_10050F848(&v227, v228);
            uint64_t v106 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v104 + 24) + 8) + 8))(v105);
            uint64_t v108 = v231;
            id v107 = v232;
            sub_10050F848(&v230, v231);
            if (v106 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v107 + 24) + 8) + 8))(v108))
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v227);
            }
            else
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
              sub_10053974C(&v227, (uint64_t)&v230);
            }
            v103 += 40;
            --v34;
          }
          while (v34);
        }
        swift_release();
        sub_10053974C(&v230, (uint64_t)&v237);
        sub_10053974C(&v237, (uint64_t)&v234);
        sub_100822DF0(v32, (uint64_t)&v230);
        swift_release();
        if (v231)
        {
          sub_10053974C(&v230, (uint64_t)&v237);
          sub_1005498A4((uint64_t)v240, (uint64_t)&v230);
          uint64_t v35 = v231;
          uint64_t v36 = v232;
          sub_10050F848(&v230, v231);
          uint64_t v37 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v36 + 128))(&v234, v35, v36);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
          if ((v37 & 1) == 0
            || (uint64_t v38 = v235,
                uint64_t v39 = v236,
                sub_10050F848(&v234, v235),
                ((*(uint64_t (**)(long long *, uint64_t, uint64_t))(v39 + 128))(&v237, v38, v39) & 1) == 0))
          {
            sub_1005498A4((uint64_t)v240, (uint64_t)&v230);
            uint64_t v109 = v231;
            id v110 = v232;
            sub_10050F848(&v230, v231);
            uint64_t v111 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v110 + 128))(&v234, v109, v110);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
            if (v111)
            {
              id v112 = v241;
              id v113 = v242;
              sub_10050F848(v240, v241);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v113 + 88))(&v230, v112, v113);
              uint64_t v114 = v231;
              uint64_t v115 = v232;
              sub_10050F848(&v230, v231);
              id v116 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v115 + 112))(v114, v115);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
              if (v116 == 2)
              {
                id v117 = v241;
                uint64_t v118 = v242;
                sub_1005231B4((uint64_t)v240, v241);
                uint64_t v119 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v118 + 104))(&v230, v117, v118);
                uint64_t v121 = *(void *)(v120 + 24);
                uint64_t v122 = *(void *)(v120 + 32);
                sub_1005231B4(v120, v121);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 120))(1, v121, v122);
                v119(&v230, 0);
              }
              Class v123 = v241;
              uint64_t v124 = v242;
              sub_10050F848(v240, v241);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v124 + 88))(&v230, v123, v124);
              uint64_t v125 = v231;
              uint64_t v126 = v232;
              sub_10050F848(&v230, v231);
              uint64_t v127 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v126 + 136))(v125, v126);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
              if (v127 == 2)
              {
                uint64_t v128 = v241;
                uint64_t v129 = v242;
                sub_1005231B4((uint64_t)v240, v241);
                uint64_t v130 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v129 + 104))(&v230, v128, v129);
                uint64_t v132 = *(void *)(v131 + 24);
                uint64_t v133 = *(void *)(v131 + 32);
                sub_1005231B4(v131, v132);
                (*(void (**)(void, uint64_t, uint64_t))(v133 + 144))(0, v132, v133);
                v130(&v230, 0);
              }
              uint64_t v134 = v241;
              uint64_t v135 = v242;
              sub_10050F848(v240, v241);
              (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v135 + 88))(&v230, v134, v135);
              id v136 = v231;
              id v137 = v232;
              sub_10050F848(&v230, v231);
              uint64_t v138 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v137 + 88))(v136, v137);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);

              if (v138) {
                goto LABEL_156;
              }
              CGRect v67 = v241;
              CGRect v68 = v242;
              sub_1005231B4((uint64_t)v240, v241);
              CGRect v69 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v68 + 104);
              uint64_t v70 = v217;
            }
            else
            {
              sub_1005498A4((uint64_t)v240, (uint64_t)&v230);
              float v140 = v231;
              char v141 = v232;
              sub_10050F848(&v230, v231);
              objc_super v142 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v141 + 128))(&v237, v140, v141);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
              double v143 = v241;
              uint64_t v144 = v242;
              sub_10050F848(v240, v241);
              if (v142)
              {
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v144 + 88))(&v230, v143, v144);
                uint64_t v145 = v231;
                unsigned __int8 v146 = v232;
                sub_10050F848(&v230, v231);
                uint64_t v147 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v146 + 112))(v145, v146);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
                if (v147 == 2)
                {
                  uint64_t v148 = v241;
                  unsigned __int8 v149 = v242;
                  sub_1005231B4((uint64_t)v240, v241);
                  unsigned __int8 v150 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v149 + 104))(&v230, v148, v149);
                  uint64_t v152 = *(void *)(v151 + 24);
                  uint64_t v153 = *(void *)(v151 + 32);
                  sub_1005231B4(v151, v152);
                  (*(void (**)(void, uint64_t, uint64_t))(v153 + 120))(0, v152, v153);
                  v150(&v230, 0);
                }
                uint64_t v154 = v241;
                uint64_t v155 = v242;
                sub_10050F848(v240, v241);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v155 + 88))(&v230, v154, v155);
                char v156 = v231;
                id v157 = v232;
                sub_10050F848(&v230, v231);
                id v158 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v157 + 136))(v156, v157);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
                if (v158 == 2)
                {
                  uint64_t v159 = v241;
                  uint64_t v160 = v242;
                  sub_1005231B4((uint64_t)v240, v241);
                  double v161 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v160 + 104))(&v230, v159, v160);
                  uint64_t v163 = *(void *)(v162 + 24);
                  uint64_t v164 = *(void *)(v162 + 32);
                  sub_1005231B4(v162, v163);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 144))(1, v163, v164);
                  v161(&v230, 0);
                }
                id v165 = v241;
                uint64_t v166 = v242;
                sub_10050F848(v240, v241);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v166 + 88))(&v230, v165, v166);
                id v167 = v231;
                uint64_t v168 = v232;
                sub_10050F848(&v230, v231);
                uint64_t v169 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v168 + 88))(v167, v168);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);

                if (v169) {
                  goto LABEL_156;
                }
                CGRect v67 = v241;
                CGRect v68 = v242;
                sub_1005231B4((uint64_t)v240, v241);
                CGRect v69 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v68 + 104);
                uint64_t v70 = v214;
              }
              else
              {
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v144 + 88))(&v230, v143, v144);
                unsigned __int8 v170 = v231;
                uint64_t v171 = v232;
                sub_10050F848(&v230, v231);
                id v172 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v171 + 112))(v170, v171);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
                if (v172 == 2)
                {
                  uint64_t v173 = v241;
                  char v174 = v242;
                  sub_1005231B4((uint64_t)v240, v241);
                  id v175 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v174 + 104))(&v230, v173, v174);
                  uint64_t v177 = *(void *)(v176 + 24);
                  unint64_t v178 = *(void *)(v176 + 32);
                  sub_1005231B4(v176, v177);
                  (*(void (**)(void, uint64_t, uint64_t))(v178 + 120))(0, v177, v178);
                  v175(&v230, 0);
                }
                double v179 = v241;
                uint64_t v180 = v242;
                sub_10050F848(v240, v241);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v180 + 88))(&v230, v179, v180);
                double v181 = v231;
                id v182 = v232;
                sub_10050F848(&v230, v231);
                uint64_t v183 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v182 + 136))(v181, v182);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
                if (v183 == 2)
                {
                  double v184 = v241;
                  uint64_t v185 = v242;
                  sub_1005231B4((uint64_t)v240, v241);
                  id v186 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v185 + 104))(&v230, v184, v185);
                  uint64_t v188 = *(void *)(v187 + 24);
                  uint64_t v189 = *(void *)(v187 + 32);
                  sub_1005231B4(v187, v188);
                  (*(void (**)(void, uint64_t, uint64_t))(v189 + 144))(0, v188, v189);
                  v186(&v230, 0);
                }
                id v190 = v241;
                uint64_t v191 = v242;
                sub_10050F848(v240, v241);
                (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v191 + 88))(&v230, v190, v191);
                uint64_t v192 = v231;
                Swift::Int v193 = v232;
                sub_10050F848(&v230, v231);
                uint64_t v194 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v193 + 88))(v192, v193);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);

                if (v194) {
                  goto LABEL_156;
                }
                CGRect v67 = v241;
                CGRect v68 = v242;
                sub_1005231B4((uint64_t)v240, v241);
                CGRect v69 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v68 + 104);
                uint64_t v70 = v215;
              }
            }
LABEL_155:
            uint64_t v195 = v70;
            uint64_t v196 = (void (*)(long long *, void))v69(&v230, v67, v68);
            uint64_t v198 = *(void *)(v197 + 24);
            uint64_t v199 = *(void *)(v197 + 32);
            sub_1005231B4(v197, v198);
            uint64_t v200 = v70;
            __n128 v12 = v30;
            (*(void (**)(CAMediaTimingFillMode, uint64_t, uint64_t))(v199 + 96))(v200, v198, v199);
            v196(&v230, 0);
            goto LABEL_156;
          }
          uint64_t v40 = v241;
          uint64_t v41 = v242;
          sub_10050F848(v240, v241);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v41 + 88))(&v230, v40, v41);
          uint64_t v42 = v231;
          uint64_t v43 = v232;
          sub_10050F848(&v230, v231);
          unint64_t v44 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v43 + 112))(v42, v43);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
          if (v44 == 2)
          {
            uint64_t v45 = v241;
            uint64_t v46 = v242;
            sub_1005231B4((uint64_t)v240, v241);
            uint64_t v47 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v46 + 104))(&v230, v45, v46);
            CGRect v49 = *(void *)(v48 + 24);
            long long v50 = *(void *)(v48 + 32);
            sub_1005231B4(v48, v49);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 120))(1, v49, v50);
            v47(&v230, 0);
          }
          long long v51 = v241;
          long long v52 = v242;
          sub_10050F848(v240, v241);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v52 + 88))(&v230, v51, v52);
          Swift::String v53 = v231;
          Swift::String v54 = v232;
          sub_10050F848(&v230, v231);
          uint64_t v55 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v54 + 136))(v53, v54);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
          if (v55 == 2)
          {
            uint64_t v56 = v241;
            int64_t v57 = v242;
            sub_1005231B4((uint64_t)v240, v241);
            uint64_t v58 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v57 + 104))(&v230, v56, v57);
            double v60 = *(void *)(v59 + 24);
            uint64_t v61 = *(void *)(v59 + 32);
            sub_1005231B4(v59, v60);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 144))(1, v60, v61);
            v58(&v230, 0);
          }
          simd_float4 v62 = v241;
          BOOL v63 = v242;
          sub_10050F848(v240, v241);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v63 + 88))(&v230, v62, v63);
          long long v64 = v231;
          uint64_t v65 = v232;
          sub_10050F848(&v230, v231);
          uint64_t v66 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 88))(v64, v65);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);

          if (!v66)
          {
            CGRect v67 = v241;
            CGRect v68 = v242;
            sub_1005231B4((uint64_t)v240, v241);
            CGRect v69 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v68 + 104);
            uint64_t v70 = v216;
            goto LABEL_155;
          }
LABEL_156:
          id v201 = v241;
          id v202 = v242;
          sub_10050F848(v240, v241);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v202 + 88))(&v230, v201, v202);
          uint64_t v203 = v231;
          id v204 = v232;
          sub_10050F848(&v230, v231);
          uint64_t v205 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v204 + 160))(v203, v204);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
          if (v205 == 2)
          {
            uint64_t v206 = v241;
            id v207 = v242;
            sub_1005231B4((uint64_t)v240, v241);
            id v208 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t, uint64_t))(v207 + 104))(&v230, v206, v207);
            double v210 = *(void *)(v209 + 24);
            double v211 = *(void *)(v209 + 32);
            sub_1005231B4(v209, v210);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v211 + 168))(1, v210, v211);
            v208(&v230, 0);
          }

          uint64_t v9 = v218;
          uint64_t v10 = v222;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v237);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v234);
          sub_1005498A4((uint64_t)v240, (uint64_t)&v234);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_100F68620((uint64_t)v10);
          }
          if (v11 < *((void *)v10 + 2))
          {
LABEL_161:
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v10[5 * v11 + 4]);
            sub_10053974C(&v234, (uint64_t)&v10[5 * v11 + 4]);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v240);
            goto LABEL_4;
          }
LABEL_167:
          __break(1u);
LABEL_168:
          swift_release();
          __break(1u);
          JUMPOUT(0x100F5AF34);
        }

        sub_100522F00((uint64_t)&v230, &qword_10167E120);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v234);
        uint64_t v10 = v222;
      }
      else
      {
        swift_release();

        __n128 v12 = v30;
      }
      sub_1005498A4((uint64_t)v240, (uint64_t)&v234);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = v218;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v10 = sub_100F68620((uint64_t)v10);
      }
      if (v11 < *((void *)v10 + 2)) {
        goto LABEL_161;
      }
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    while (1)
    {
      sub_1005498A4(v13, (uint64_t)&v230);
      unint64_t v72 = v231;
      uint64_t v71 = v232;
      sub_10050F848(&v230, v231);
      CKRecordID v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 64))(v72, v71);
      if (v73)
      {
        Swift::String v74 = (void *)v73;
        sub_10054CE40();
        id v75 = v29;
        unint64_t v76 = static NSObject.== infix(_:_:)();

        sub_1005498A4((uint64_t)&v230, (uint64_t)&v227);
        if (v76)
        {
          uint64_t v77 = v228;
          uint64_t v78 = v229;
          sub_10050F848(&v227, v228);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v78 + 88))(v224, v77, v78);
          uint64_t v79 = v225;
          uint64_t v80 = v226;
          sub_10050F848(v224, v225);
          uint64_t v81 = 0xE800000000000000;
          id v82 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v80 + 80))(v79, v80);
          uint64_t v83 = 0x73746E65746E6F63;
          switch(v82)
          {
            case 1:
              uint64_t v81 = 0xEC00000074636552;
              break;
            case 2:
              uint64_t v81 = 0xEE007265746E6543;
              break;
            case 3:
              uint64_t v81 = 0xE700000000000000;
              uint64_t v83 = 0x7974696361706FLL;
              break;
            case 4:
              uint64_t v83 = 0x6E65646469487369;
              break;
            case 5:
              uint64_t v83 = 0x426F54736B73616DLL;
              uint64_t v81 = 0xED000073646E756FLL;
              break;
            case 6:
              uint64_t v83 = 0x656C62756F447369;
              uint64_t v81 = 0xED00006465646953;
              break;
            case 7:
              uint64_t v86 = 0x72656E726F63;
              goto LABEL_44;
            case 8:
              uint64_t v83 = 0x6957726564726F62;
              uint64_t v81 = 0xEB00000000687464;
              break;
            case 9:
              id v85 = 0x726564726F62;
              goto LABEL_37;
            case 10:
              uint64_t v83 = 0x756F72676B636162;
              uint64_t v81 = 0xEF726F6C6F43646ELL;
              break;
            case 11:
              uint64_t v83 = 0x704F776F64616873;
              uint64_t v81 = 0xED00007974696361;
              break;
            case 12:
              uint64_t v86 = 0x776F64616873;
LABEL_44:
              uint64_t v83 = v86 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              uint64_t v81 = 0xEC00000073756964;
              break;
            case 13:
              uint64_t v83 = 0x664F776F64616873;
              uint64_t v81 = 0xEC00000074657366;
              break;
            case 14:
              id v85 = 0x776F64616873;
LABEL_37:
              uint64_t v83 = v85 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              uint64_t v81 = 0xEB00000000726F6CLL;
              break;
            case 15:
              uint64_t v83 = 0x6150776F64616873;
              uint64_t v81 = 0xEA00000000006874;
              break;
            case 16:
              uint64_t v81 = 0xE700000000000000;
              uint64_t v83 = 0x737265746C6966;
              break;
            case 17:
              uint64_t v84 = "compositingFilter";
              goto LABEL_54;
            case 18:
              uint64_t v84 = "backgroundFilters";
              goto LABEL_54;
            case 19:
              uint64_t v83 = 0x6152646C756F6873;
              uint64_t v81 = 0xEF657A6972657473;
              break;
            case 20:
              uint64_t v83 = 0xD000000000000012;
              id v87 = "rasterizationScale";
              goto LABEL_59;
            case 21:
              uint64_t v81 = 0xE600000000000000;
              uint64_t v83 = 0x73646E756F62;
              break;
            case 22:
              uint64_t v83 = 0x6E6F697469736F70;
              break;
            case 23:
              uint64_t v81 = 0xE90000000000006ELL;
              uint64_t v83 = 0x6F697469736F507ALL;
              break;
            case 24:
              uint64_t v83 = 0x6F50726F68636E61;
              uint64_t v81 = 0xEC0000005A746E69;
              break;
            case 25:
              uint64_t v83 = 0x6F50726F68636E61;
              uint64_t v81 = 0xEB00000000746E69;
              break;
            case 26:
              uint64_t v83 = 0x726F66736E617274;
              uint64_t v81 = 0xE90000000000006DLL;
              break;
            case 27:
              uint64_t v84 = "sublayerTransform";
LABEL_54:
              uint64_t v81 = (unint64_t)(v84 - 32) | 0x8000000000000000;
              uint64_t v83 = 0xD000000000000011;
              break;
            case 28:
              uint64_t v83 = 0xD000000000000010;
              id v87 = "dynamicTransform";
LABEL_59:
              uint64_t v81 = (unint64_t)(v87 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          uint64_t v88 = 0xE800000000000000;
          uint64_t v89 = 0x73746E65746E6F63;
          switch(v27)
          {
            case 1:
              id v90 = 1952671058;
              goto LABEL_89;
            case 2:
              uint64_t v88 = 0xEE007265746E6543;
              if (v83 != 0x73746E65746E6F63) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 3:
              uint64_t v88 = 0xE700000000000000;
              if (v83 != 0x7974696361706FLL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 4:
              if (v83 != 0x6E65646469487369) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 5:
              id v93 = 0x426F54736B73616DLL;
              uint64_t v94 = 0x73646E756FLL;
              goto LABEL_86;
            case 6:
              id v93 = 0x656C62756F447369;
              uint64_t v94 = 0x6465646953;
              goto LABEL_86;
            case 7:
              uint64_t v95 = 0x72656E726F63;
              goto LABEL_82;
            case 8:
              uint64_t v96 = 0x6957726564726F62;
              uint64_t v97 = 6845540;
              goto LABEL_95;
            case 9:
              id v92 = 0x726564726F62;
              goto LABEL_72;
            case 10:
              uint64_t v88 = 0xEF726F6C6F43646ELL;
              if (v83 != 0x756F72676B636162) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 11:
              id v93 = 0x704F776F64616873;
              uint64_t v94 = 0x7974696361;
LABEL_86:
              uint64_t v88 = v94 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
              if (v83 != v93) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 12:
              uint64_t v95 = 0x776F64616873;
LABEL_82:
              uint64_t v89 = v95 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              id v90 = 1937074532;
              goto LABEL_89;
            case 13:
              uint64_t v89 = 0x664F776F64616873;
              id v90 = 1952805734;
              goto LABEL_89;
            case 14:
              id v92 = 0x776F64616873;
LABEL_72:
              uint64_t v96 = v92 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              uint64_t v97 = 7499628;
              goto LABEL_95;
            case 15:
              uint64_t v88 = 0xEA00000000006874;
              if (v83 != 0x6150776F64616873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 16:
              uint64_t v88 = 0xE700000000000000;
              if (v83 != 0x737265746C6966) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 17:
              uint64_t v91 = "compositingFilter";
              goto LABEL_100;
            case 18:
              uint64_t v91 = "backgroundFilters";
              goto LABEL_100;
            case 19:
              uint64_t v88 = 0xEF657A6972657473;
              if (v83 != 0x6152646C756F6873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 20:
              uint64_t v89 = 0xD000000000000012;
              uint64_t v98 = "rasterizationScale";
              goto LABEL_109;
            case 21:
              uint64_t v88 = 0xE600000000000000;
              if (v83 != 0x73646E756F62) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 22:
              if (v83 != 0x6E6F697469736F70) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 23:
              uint64_t v88 = 0xE90000000000006ELL;
              if (v83 != 0x6F697469736F507ALL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 24:
              uint64_t v89 = 0x6F50726F68636E61;
              id v90 = 1517579881;
LABEL_89:
              uint64_t v88 = v90 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              if (v83 != v89) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 25:
              uint64_t v96 = 0x6F50726F68636E61;
              uint64_t v97 = 7630441;
LABEL_95:
              uint64_t v88 = v97 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              if (v83 != v96) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 26:
              uint64_t v88 = 0xE90000000000006DLL;
              if (v83 != 0x726F66736E617274) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 27:
              uint64_t v91 = "sublayerTransform";
LABEL_100:
              uint64_t v88 = (unint64_t)(v91 - 32) | 0x8000000000000000;
              if (v83 != 0xD000000000000011) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 28:
              uint64_t v89 = 0xD000000000000010;
              uint64_t v98 = "dynamicTransform";
LABEL_109:
              uint64_t v88 = (unint64_t)(v98 - 32) | 0x8000000000000000;
              goto LABEL_110;
            default:
LABEL_110:
              if (v83 != v89) {
                goto LABEL_114;
              }
LABEL_111:
              if (v81 == v88)
              {
                swift_bridgeObjectRelease_n();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v224);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v227);
              }
              else
              {
LABEL_114:
                uint64_t v99 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v224);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v227);
                if ((v99 & 1) == 0) {
                  goto LABEL_24;
                }
              }
              sub_10053974C(&v230, (uint64_t)&v227);
              uint64_t v100 = v233;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1006BB784(0, *((void *)v100 + 2) + 1, 1);
                uint64_t v100 = v233;
              }
              uint64_t v102 = *((void *)v100 + 2);
              uint64_t v101 = *((void *)v100 + 3);
              if (v102 >= v101 >> 1)
              {
                sub_1006BB784(v101 > 1, v102 + 1, 1);
                uint64_t v100 = v233;
              }
              *((void *)v100 + 2) = v102 + 1;
              sub_10053974C(&v227, (uint64_t)&v100[5 * v102 + 4]);
              break;
          }
          goto LABEL_25;
        }
      }
      else
      {
        sub_1005498A4((uint64_t)&v230, (uint64_t)&v227);
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v227);
LABEL_24:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
LABEL_25:
      v13 += 40;
      if (!--v28) {
        goto LABEL_10;
      }
    }
  }
  return v10;
}

double *sub_100F5B01C(uint64_t a1, double a2)
{
  void (*v31)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **);
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  const char *v65;
  char v66;
  double *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  ValueMetadata *v76;
  _UNKNOWN **v77;
  ValueMetadata *v78;
  _UNKNOWN **v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  ValueMetadata *v83;
  _UNKNOWN **v84;
  void (*v85)(long long *, void);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  ValueMetadata *v89;
  _UNKNOWN **v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  ValueMetadata *v94;
  _UNKNOWN **v95;
  void (*v96)(long long *, void);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  ValueMetadata *v100;
  _UNKNOWN **v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  ValueMetadata *v105;
  _UNKNOWN **v106;
  uint64_t (*v107)(long long *, ValueMetadata *, _UNKNOWN **);
  CAMediaTimingFillMode v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  ValueMetadata *v118;
  _UNKNOWN **v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  ValueMetadata *v123;
  _UNKNOWN **v124;
  void (*v125)(long long *, void);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  ValueMetadata *v129;
  _UNKNOWN **v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  ValueMetadata *v134;
  _UNKNOWN **v135;
  void (*v136)(long long *, void);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  ValueMetadata *v140;
  _UNKNOWN **v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v146;
  uint64_t v147;
  char v148;
  ValueMetadata *v149;
  _UNKNOWN **v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  ValueMetadata *v154;
  _UNKNOWN **v155;
  void (*v156)(long long *, void);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  ValueMetadata *v160;
  _UNKNOWN **v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  ValueMetadata *v165;
  _UNKNOWN **v166;
  void (*v167)(long long *, void);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  ValueMetadata *v171;
  _UNKNOWN **v172;
  uint64_t v173;
  uint64_t v174;
  void *v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  ValueMetadata *v179;
  _UNKNOWN **v180;
  void (*v181)(long long *, void);
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  ValueMetadata *v185;
  _UNKNOWN **v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  ValueMetadata *v190;
  _UNKNOWN **v191;
  void (*v192)(long long *, void);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  ValueMetadata *v196;
  _UNKNOWN **v197;
  uint64_t v198;
  uint64_t v199;
  void *v200;
  NSString *v201;
  void (*v202)(long long *, void);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  ValueMetadata *v206;
  _UNKNOWN **v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  ValueMetadata *v211;
  _UNKNOWN **v212;
  void (*v213)(long long *, void);
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  CAMediaTimingFillMode v218;
  CAMediaTimingFillMode v219;
  CAMediaTimingFillMode v220;
  CAMediaTimingFillMode v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  double *v225;
  unint64_t v226;
  void v227[3];
  uint64_t v228;
  uint64_t v229;
  long long v230;
  uint64_t v231;
  uint64_t v232;
  long long v233;
  uint64_t v234;
  uint64_t v235;
  double *v236;
  long long v237;
  ValueMetadata *v238;
  _UNKNOWN **v239;
  long long v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243[3];
  ValueMetadata *v244;
  _UNKNOWN **v245;

  uint64_t v4 = type metadata accessor for CRLTweenLayerAnimation();
  __chkstk_darwin(v4, v5);
  long long v223 = (char *)&v218 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = &type metadata for CRLLayerAnimationFlatGroup;
  uint64_t v239 = &off_101524CF0;
  *(void *)&uint64_t v237 = a1;
  *((double *)&v237 + 1) = a2;
  uint64_t v7 = sub_10050F848(&v237, (uint64_t)&type metadata for CRLLayerAnimationFlatGroup);
  uint64_t v244 = &type metadata for CRLLayerAnimationFlatGroup;
  unsigned __int8 v245 = &off_101524CF0;
  uint64_t v8 = sub_1005767BC(v243);
  uint64_t v9 = *v7;
  double v10 = *((double *)v7 + 1);
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_100B32B28(v9);
  swift_bridgeObjectRetain();
  __n128 v12 = sub_10085FF14((uint64_t)v11, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v8 = (uint64_t)v12;
  v8[1] = 0;
  sub_100B32FB0();
  uint64_t v14 = v13;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v237);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v243);
  uint64_t v15 = *((void *)v14 + 2);
  if (v15)
  {
    unint64_t v16 = 0;
    long long v219 = kCAFillModeRemoved;
    long long v218 = kCAFillModeForwards;
    long long v221 = kCAFillModeBackwards;
    long long v220 = kCAFillModeBoth;
    uint64_t v17 = (uint64_t)v223;
    long long v222 = v4;
    while (1)
    {
      if (v16 >= *((void *)v14 + 2))
      {
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        swift_release();
        __break(1u);
        JUMPOUT(0x100F5CC2CLL);
      }
      uint64_t v18 = (uint64_t)(v14 + 4);
      sub_1005498A4((uint64_t)&v14[5 * v16 + 4], (uint64_t)&v237);
      sub_1005057FC((uint64_t *)&unk_10167BDB0);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_100F6BEE0(v17);
LABEL_4:
      if (++v16 == v15) {
        return v14;
      }
    }
    if (v16 >= *((void *)v14 + 2)) {
      goto LABEL_166;
    }
    long long v226 = v16;
    sub_1005498A4((uint64_t)&v14[5 * v16 + 4], (uint64_t)v243);
    uint64_t v20 = v244;
    __n128 v19 = v245;
    uint64_t v21 = sub_10050F848(v243, (uint64_t)v244);
    Description = (void (**)(char *, __n128))v20[-1].Description;
    __n128 v23 = __chkstk_darwin(v21, v21);
    uint64_t v25 = (char *)&v218 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    Description[2](v25, v23);
    uint64_t v26 = (void *)((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v19[8])(v20, v19);
    ((void (*)(char *, ValueMetadata *))Description[1])(v25, v20);
    if (!v26)
    {
      sub_1005498A4((uint64_t)v243, (uint64_t)&v237);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_100F68620((uint64_t)v14);
      }
      uint64_t v17 = (uint64_t)v223;
      unint64_t v16 = v226;
      if (v226 >= *((void *)v14 + 2)) {
        goto LABEL_168;
      }
      goto LABEL_163;
    }
    long long v224 = 0;
    uint64_t v27 = v15;
    BOOL v28 = v14;
    uint64_t v29 = v244;
    uint64_t v30 = v245;
    sub_10050F848(v243, (uint64_t)v244);
    CGFloat v31 = (void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v30[11];
    swift_bridgeObjectRetain();
    v31(&v240, v29, v30);
    CGFloat v32 = v241;
    uint64_t v33 = v242;
    sub_10050F848(&v240, v241);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v33 + 56))(&v237, v32, v33);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v240);
    uint64_t v34 = sub_1009FCAC8();
    sub_10054BD5C((uint64_t)&v237);
    uint64_t v236 = _swiftEmptyArrayStorage;
    uint64_t v35 = *((void *)v28 + 2);
    long long v225 = v28;
    swift_bridgeObjectRetain();
    uint64_t v36 = v26;
    uint64_t v15 = v27;
    if (v35)
    {
      uint64_t v37 = v224;
      while (1)
      {
        sub_1005498A4(v18, (uint64_t)&v233);
        uint64_t v39 = v234;
        uint64_t v38 = v235;
        sub_10050F848(&v233, v234);
        uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 64))(v39, v38);
        if (v40)
        {
          uint64_t v41 = (void *)v40;
          sub_10054CE40();
          uint64_t v42 = v36;
          uint64_t v43 = static NSObject.== infix(_:_:)();

          sub_1005498A4((uint64_t)&v233, (uint64_t)&v230);
          if (v43)
          {
            unint64_t v44 = v231;
            uint64_t v45 = v232;
            sub_10050F848(&v230, v231);
            (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v45 + 88))(v227, v44, v45);
            uint64_t v46 = v228;
            uint64_t v47 = v229;
            sub_10050F848(v227, v228);
            CGRect v48 = 0xE800000000000000;
            CGRect v49 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v47 + 80))(v46, v47);
            long long v50 = 0x73746E65746E6F63;
            switch(v49)
            {
              case 1:
                CGRect v48 = 0xEC00000074636552;
                break;
              case 2:
                CGRect v48 = 0xEE007265746E6543;
                break;
              case 3:
                CGRect v48 = 0xE700000000000000;
                long long v50 = 0x7974696361706FLL;
                break;
              case 4:
                long long v50 = 0x6E65646469487369;
                break;
              case 5:
                long long v50 = 0x426F54736B73616DLL;
                CGRect v48 = 0xED000073646E756FLL;
                break;
              case 6:
                long long v50 = 0x656C62756F447369;
                CGRect v48 = 0xED00006465646953;
                break;
              case 7:
                Swift::String v53 = 0x72656E726F63;
                goto LABEL_33;
              case 8:
                long long v50 = 0x6957726564726F62;
                CGRect v48 = 0xEB00000000687464;
                break;
              case 9:
                long long v52 = 0x726564726F62;
                goto LABEL_26;
              case 10:
                long long v50 = 0x756F72676B636162;
                CGRect v48 = 0xEF726F6C6F43646ELL;
                break;
              case 11:
                long long v50 = 0x704F776F64616873;
                CGRect v48 = 0xED00007974696361;
                break;
              case 12:
                Swift::String v53 = 0x776F64616873;
LABEL_33:
                long long v50 = v53 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
                CGRect v48 = 0xEC00000073756964;
                break;
              case 13:
                long long v50 = 0x664F776F64616873;
                CGRect v48 = 0xEC00000074657366;
                break;
              case 14:
                long long v52 = 0x776F64616873;
LABEL_26:
                long long v50 = v52 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
                CGRect v48 = 0xEB00000000726F6CLL;
                break;
              case 15:
                long long v50 = 0x6150776F64616873;
                CGRect v48 = 0xEA00000000006874;
                break;
              case 16:
                CGRect v48 = 0xE700000000000000;
                long long v50 = 0x737265746C6966;
                break;
              case 17:
                long long v51 = "compositingFilter";
                goto LABEL_43;
              case 18:
                long long v51 = "backgroundFilters";
                goto LABEL_43;
              case 19:
                long long v50 = 0x6152646C756F6873;
                CGRect v48 = 0xEF657A6972657473;
                break;
              case 20:
                long long v50 = 0xD000000000000012;
                Swift::String v54 = "rasterizationScale";
                goto LABEL_48;
              case 21:
                CGRect v48 = 0xE600000000000000;
                long long v50 = 0x73646E756F62;
                break;
              case 22:
                long long v50 = 0x6E6F697469736F70;
                break;
              case 23:
                CGRect v48 = 0xE90000000000006ELL;
                long long v50 = 0x6F697469736F507ALL;
                break;
              case 24:
                long long v50 = 0x6F50726F68636E61;
                CGRect v48 = 0xEC0000005A746E69;
                break;
              case 25:
                long long v50 = 0x6F50726F68636E61;
                CGRect v48 = 0xEB00000000746E69;
                break;
              case 26:
                long long v50 = 0x726F66736E617274;
                CGRect v48 = 0xE90000000000006DLL;
                break;
              case 27:
                long long v51 = "sublayerTransform";
LABEL_43:
                CGRect v48 = (unint64_t)(v51 - 32) | 0x8000000000000000;
                long long v50 = 0xD000000000000011;
                break;
              case 28:
                long long v50 = 0xD000000000000010;
                Swift::String v54 = "dynamicTransform";
LABEL_48:
                CGRect v48 = (unint64_t)(v54 - 32) | 0x8000000000000000;
                break;
              default:
                break;
            }
            uint64_t v55 = 0xE800000000000000;
            uint64_t v56 = 0x73746E65746E6F63;
            switch(v34)
            {
              case 1:
                int64_t v57 = 1952671058;
                goto LABEL_78;
              case 2:
                uint64_t v55 = 0xEE007265746E6543;
                if (v50 != 0x73746E65746E6F63) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 3:
                uint64_t v55 = 0xE700000000000000;
                if (v50 != 0x7974696361706FLL) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 4:
                if (v50 != 0x6E65646469487369) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 5:
                double v60 = 0x426F54736B73616DLL;
                uint64_t v61 = 0x73646E756FLL;
                goto LABEL_75;
              case 6:
                double v60 = 0x656C62756F447369;
                uint64_t v61 = 0x6465646953;
                goto LABEL_75;
              case 7:
                simd_float4 v62 = 0x72656E726F63;
                goto LABEL_71;
              case 8:
                BOOL v63 = 0x6957726564726F62;
                long long v64 = 6845540;
                goto LABEL_84;
              case 9:
                uint64_t v59 = 0x726564726F62;
                goto LABEL_61;
              case 10:
                uint64_t v55 = 0xEF726F6C6F43646ELL;
                if (v50 != 0x756F72676B636162) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 11:
                double v60 = 0x704F776F64616873;
                uint64_t v61 = 0x7974696361;
LABEL_75:
                uint64_t v55 = v61 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
                if (v50 != v60) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 12:
                simd_float4 v62 = 0x776F64616873;
LABEL_71:
                uint64_t v56 = v62 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
                int64_t v57 = 1937074532;
                goto LABEL_78;
              case 13:
                uint64_t v56 = 0x664F776F64616873;
                int64_t v57 = 1952805734;
                goto LABEL_78;
              case 14:
                uint64_t v59 = 0x776F64616873;
LABEL_61:
                BOOL v63 = v59 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
                long long v64 = 7499628;
                goto LABEL_84;
              case 15:
                uint64_t v55 = 0xEA00000000006874;
                if (v50 != 0x6150776F64616873) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 16:
                uint64_t v55 = 0xE700000000000000;
                if (v50 != 0x737265746C6966) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 17:
                uint64_t v58 = "compositingFilter";
                goto LABEL_89;
              case 18:
                uint64_t v58 = "backgroundFilters";
                goto LABEL_89;
              case 19:
                uint64_t v55 = 0xEF657A6972657473;
                if (v50 != 0x6152646C756F6873) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 20:
                uint64_t v56 = 0xD000000000000012;
                uint64_t v65 = "rasterizationScale";
                goto LABEL_98;
              case 21:
                uint64_t v55 = 0xE600000000000000;
                if (v50 != 0x73646E756F62) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 22:
                if (v50 != 0x6E6F697469736F70) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 23:
                uint64_t v55 = 0xE90000000000006ELL;
                if (v50 != 0x6F697469736F507ALL) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 24:
                uint64_t v56 = 0x6F50726F68636E61;
                int64_t v57 = 1517579881;
LABEL_78:
                uint64_t v55 = v57 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                if (v50 != v56) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 25:
                BOOL v63 = 0x6F50726F68636E61;
                long long v64 = 7630441;
LABEL_84:
                uint64_t v55 = v64 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
                if (v50 != v63) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 26:
                uint64_t v55 = 0xE90000000000006DLL;
                if (v50 != 0x726F66736E617274) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 27:
                uint64_t v58 = "sublayerTransform";
LABEL_89:
                uint64_t v55 = (unint64_t)(v58 - 32) | 0x8000000000000000;
                if (v50 != 0xD000000000000011) {
                  goto LABEL_103;
                }
                goto LABEL_100;
              case 28:
                uint64_t v56 = 0xD000000000000010;
                uint64_t v65 = "dynamicTransform";
LABEL_98:
                uint64_t v55 = (unint64_t)(v65 - 32) | 0x8000000000000000;
                goto LABEL_99;
              default:
LABEL_99:
                if (v50 != v56) {
                  goto LABEL_103;
                }
LABEL_100:
                if (v48 == v55)
                {
                  swift_bridgeObjectRelease_n();
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v227);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
                }
                else
                {
LABEL_103:
                  uint64_t v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v227);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
                  if ((v66 & 1) == 0) {
                    goto LABEL_13;
                  }
                }
                sub_10053974C(&v233, (uint64_t)&v230);
                CGRect v67 = v236;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1006BB784(0, *((void *)v67 + 2) + 1, 1);
                  CGRect v67 = v236;
                }
                CGRect v69 = *((void *)v67 + 2);
                CGRect v68 = *((void *)v67 + 3);
                if (v69 >= v68 >> 1)
                {
                  sub_1006BB784(v68 > 1, v69 + 1, 1);
                  CGRect v67 = v236;
                }
                *((void *)v67 + 2) = v69 + 1;
                sub_10053974C(&v230, (uint64_t)&v67[5 * v69 + 4]);
                break;
            }
            goto LABEL_14;
          }
        }
        else
        {
          sub_1005498A4((uint64_t)&v233, (uint64_t)&v230);
        }
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
LABEL_13:
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
LABEL_14:
        v18 += 40;
        if (!--v35) {
          goto LABEL_114;
        }
      }
    }
    uint64_t v37 = v224;
LABEL_114:
    uint64_t v14 = v225;
    swift_bridgeObjectRelease();

    *(void *)&uint64_t v233 = v236;
    swift_retain();
    sub_100F68930((uint64_t *)&v233);
    if (v37) {
      goto LABEL_170;
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v70 = v233;
    uint64_t v71 = *(void *)(v233 + 16);
    if (v71)
    {
      sub_1005498A4(v233 + 32, (uint64_t)&v233);
      swift_bridgeObjectRetain();
      unint64_t v72 = v71 - 1;
      if (v71 != 1)
      {
        uint64_t v109 = v70 + 72;
        do
        {
          sub_1005498A4(v109, (uint64_t)&v230);
          uint64_t v111 = v231;
          id v110 = v232;
          sub_10050F848(&v230, v231);
          id v112 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v110 + 24) + 8) + 8))(v111);
          uint64_t v114 = v234;
          id v113 = v235;
          sub_10050F848(&v233, v234);
          if (v112 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v113 + 24) + 8) + 8))(v114))
          {
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v230);
          }
          else
          {
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
            sub_10053974C(&v230, (uint64_t)&v233);
          }
          v109 += 40;
          --v72;
        }
        while (v72);
      }
      swift_release();
      sub_10053974C(&v233, (uint64_t)&v240);
      sub_10053974C(&v240, (uint64_t)&v237);
      sub_100822DF0(v70, (uint64_t)&v233);
      swift_release();
      if (v234)
      {
        sub_10053974C(&v233, (uint64_t)&v240);
        sub_1005498A4((uint64_t)v243, (uint64_t)&v233);
        CKRecordID v73 = v234;
        Swift::String v74 = v235;
        sub_10050F848(&v233, v234);
        id v75 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v74 + 128))(&v237, v73, v74);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
        if ((v75 & 1) != 0
          && (unint64_t v76 = v238,
              uint64_t v77 = v239,
              sub_10050F848(&v237, (uint64_t)v238),
              (((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v77[16])(&v240, v76, v77) & 1) != 0))
        {
          uint64_t v78 = v244;
          uint64_t v79 = v245;
          sub_10050F848(v243, (uint64_t)v244);
          ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v79[11])(&v233, v78, v79);
          uint64_t v80 = v234;
          uint64_t v81 = v235;
          sub_10050F848(&v233, v234);
          id v82 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v81 + 112))(v80, v81);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
          if (v82 == 2)
          {
            uint64_t v83 = v244;
            uint64_t v84 = v245;
            sub_1005231B4((uint64_t)v243, (uint64_t)v244);
            id v85 = (void (*)(long long *, void))((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v84[13])(&v233, v83, v84);
            id v87 = *(void *)(v86 + 24);
            uint64_t v88 = *(void *)(v86 + 32);
            sub_1005231B4(v86, v87);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 120))(1, v87, v88);
            v85(&v233, 0);
          }
          uint64_t v89 = v244;
          id v90 = v245;
          sub_10050F848(v243, (uint64_t)v244);
          ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v90[11])(&v233, v89, v90);
          uint64_t v91 = v234;
          id v92 = v235;
          sub_10050F848(&v233, v234);
          id v93 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v92 + 136))(v91, v92);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
          if (v93 == 2)
          {
            uint64_t v94 = v244;
            uint64_t v95 = v245;
            sub_1005231B4((uint64_t)v243, (uint64_t)v244);
            uint64_t v96 = (void (*)(long long *, void))((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v95[13])(&v233, v94, v95);
            uint64_t v98 = *(void *)(v97 + 24);
            uint64_t v99 = *(void *)(v97 + 32);
            sub_1005231B4(v97, v98);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 144))(1, v98, v99);
            v96(&v233, 0);
          }
          uint64_t v100 = v244;
          uint64_t v101 = v245;
          sub_10050F848(v243, (uint64_t)v244);
          ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v101[11])(&v233, v100, v101);
          uint64_t v102 = v234;
          uint64_t v103 = v235;
          sub_10050F848(&v233, v234);
          uint64_t v104 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v103 + 88))(v102, v103);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);

          if (!v104)
          {
            uint64_t v105 = v244;
            uint64_t v106 = v245;
            sub_1005231B4((uint64_t)v243, (uint64_t)v244);
            id v107 = (uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v106[13];
            uint64_t v108 = v220;
LABEL_157:
            id v201 = v108;
            id v202 = (void (*)(long long *, void))v107(&v233, v105, v106);
            id v204 = *(void *)(v203 + 24);
            uint64_t v205 = *(void *)(v203 + 32);
            sub_1005231B4(v203, v204);
            (*(void (**)(CAMediaTimingFillMode, uint64_t, uint64_t))(v205 + 96))(v108, v204, v205);
            v202(&v233, 0);
          }
        }
        else
        {
          sub_1005498A4((uint64_t)v243, (uint64_t)&v233);
          uint64_t v115 = v234;
          id v116 = v235;
          sub_10050F848(&v233, v234);
          id v117 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v116 + 128))(&v237, v115, v116);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
          if (v117)
          {
            uint64_t v118 = v244;
            uint64_t v119 = v245;
            sub_10050F848(v243, (uint64_t)v244);
            ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v119[11])(&v233, v118, v119);
            uint64_t v120 = v234;
            uint64_t v121 = v235;
            sub_10050F848(&v233, v234);
            uint64_t v122 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v121 + 112))(v120, v121);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
            if (v122 == 2)
            {
              Class v123 = v244;
              uint64_t v124 = v245;
              sub_1005231B4((uint64_t)v243, (uint64_t)v244);
              uint64_t v125 = (void (*)(long long *, void))((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v124[13])(&v233, v123, v124);
              uint64_t v127 = *(void *)(v126 + 24);
              uint64_t v128 = *(void *)(v126 + 32);
              sub_1005231B4(v126, v127);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 120))(1, v127, v128);
              v125(&v233, 0);
            }
            uint64_t v129 = v244;
            uint64_t v130 = v245;
            sub_10050F848(v243, (uint64_t)v244);
            ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v130[11])(&v233, v129, v130);
            uint64_t v131 = v234;
            uint64_t v132 = v235;
            sub_10050F848(&v233, v234);
            uint64_t v133 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v132 + 136))(v131, v132);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
            if (v133 == 2)
            {
              uint64_t v134 = v244;
              uint64_t v135 = v245;
              sub_1005231B4((uint64_t)v243, (uint64_t)v244);
              id v136 = (void (*)(long long *, void))((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v135[13])(&v233, v134, v135);
              uint64_t v138 = *(void *)(v137 + 24);
              char v139 = *(void *)(v137 + 32);
              sub_1005231B4(v137, v138);
              (*(void (**)(void, uint64_t, uint64_t))(v139 + 144))(0, v138, v139);
              v136(&v233, 0);
            }
            float v140 = v244;
            char v141 = v245;
            sub_10050F848(v243, (uint64_t)v244);
            ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v141[11])(&v233, v140, v141);
            objc_super v142 = v234;
            double v143 = v235;
            sub_10050F848(&v233, v234);
            uint64_t v144 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v143 + 88))(v142, v143);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);

            if (!v144)
            {
              uint64_t v105 = v244;
              uint64_t v106 = v245;
              sub_1005231B4((uint64_t)v243, (uint64_t)v244);
              id v107 = (uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v106[13];
              uint64_t v108 = v221;
              goto LABEL_157;
            }
          }
          else
          {
            sub_1005498A4((uint64_t)v243, (uint64_t)&v233);
            unsigned __int8 v146 = v234;
            uint64_t v147 = v235;
            sub_10050F848(&v233, v234);
            uint64_t v148 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v147 + 128))(&v240, v146, v147);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
            unsigned __int8 v149 = v244;
            unsigned __int8 v150 = v245;
            sub_10050F848(v243, (uint64_t)v244);
            if (v148)
            {
              ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v150[11])(&v233, v149, v150);
              uint64_t v151 = v234;
              uint64_t v152 = v235;
              sub_10050F848(&v233, v234);
              uint64_t v153 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v152 + 112))(v151, v152);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
              if (v153 == 2)
              {
                uint64_t v154 = v244;
                uint64_t v155 = v245;
                sub_1005231B4((uint64_t)v243, (uint64_t)v244);
                char v156 = (void (*)(long long *, void))((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v155[13])(&v233, v154, v155);
                id v158 = *(void *)(v157 + 24);
                uint64_t v159 = *(void *)(v157 + 32);
                sub_1005231B4(v157, v158);
                (*(void (**)(void, uint64_t, uint64_t))(v159 + 120))(0, v158, v159);
                v156(&v233, 0);
              }
              uint64_t v160 = v244;
              double v161 = v245;
              sub_10050F848(v243, (uint64_t)v244);
              ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v161[11])(&v233, v160, v161);
              id v162 = v234;
              uint64_t v163 = v235;
              sub_10050F848(&v233, v234);
              uint64_t v164 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v163 + 136))(v162, v163);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
              if (v164 == 2)
              {
                id v165 = v244;
                uint64_t v166 = v245;
                sub_1005231B4((uint64_t)v243, (uint64_t)v244);
                id v167 = (void (*)(long long *, void))((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v166[13])(&v233, v165, v166);
                uint64_t v169 = *(void *)(v168 + 24);
                unsigned __int8 v170 = *(void *)(v168 + 32);
                sub_1005231B4(v168, v169);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 144))(1, v169, v170);
                v167(&v233, 0);
              }
              uint64_t v171 = v244;
              id v172 = v245;
              sub_10050F848(v243, (uint64_t)v244);
              ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v172[11])(&v233, v171, v172);
              uint64_t v173 = v234;
              char v174 = v235;
              sub_10050F848(&v233, v234);
              id v175 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v174 + 88))(v173, v174);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);

              if (!v175)
              {
                uint64_t v105 = v244;
                uint64_t v106 = v245;
                sub_1005231B4((uint64_t)v243, (uint64_t)v244);
                id v107 = (uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v106[13];
                uint64_t v108 = v218;
                goto LABEL_157;
              }
            }
            else
            {
              ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v150[11])(&v233, v149, v150);
              id v176 = v234;
              uint64_t v177 = v235;
              sub_10050F848(&v233, v234);
              unint64_t v178 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v177 + 112))(v176, v177);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
              if (v178 == 2)
              {
                double v179 = v244;
                uint64_t v180 = v245;
                sub_1005231B4((uint64_t)v243, (uint64_t)v244);
                double v181 = (void (*)(long long *, void))((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v180[13])(&v233, v179, v180);
                uint64_t v183 = *(void *)(v182 + 24);
                double v184 = *(void *)(v182 + 32);
                sub_1005231B4(v182, v183);
                (*(void (**)(void, uint64_t, uint64_t))(v184 + 120))(0, v183, v184);
                v181(&v233, 0);
              }
              uint64_t v185 = v244;
              id v186 = v245;
              sub_10050F848(v243, (uint64_t)v244);
              ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v186[11])(&v233, v185, v186);
              long long v187 = v234;
              uint64_t v188 = v235;
              sub_10050F848(&v233, v234);
              uint64_t v189 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v188 + 136))(v187, v188);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
              if (v189 == 2)
              {
                id v190 = v244;
                uint64_t v191 = v245;
                sub_1005231B4((uint64_t)v243, (uint64_t)v244);
                uint64_t v192 = (void (*)(long long *, void))((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v191[13])(&v233, v190, v191);
                uint64_t v194 = *(void *)(v193 + 24);
                uint64_t v195 = *(void *)(v193 + 32);
                sub_1005231B4(v193, v194);
                (*(void (**)(void, uint64_t, uint64_t))(v195 + 144))(0, v194, v195);
                v192(&v233, 0);
              }
              uint64_t v196 = v244;
              uint64_t v197 = v245;
              sub_10050F848(v243, (uint64_t)v244);
              ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v197[11])(&v233, v196, v197);
              uint64_t v198 = v234;
              uint64_t v199 = v235;
              sub_10050F848(&v233, v234);
              uint64_t v200 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v199 + 88))(v198, v199);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);

              if (!v200)
              {
                uint64_t v105 = v244;
                uint64_t v106 = v245;
                sub_1005231B4((uint64_t)v243, (uint64_t)v244);
                id v107 = (uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v106[13];
                uint64_t v108 = v219;
                goto LABEL_157;
              }
            }
          }
        }
        uint64_t v206 = v244;
        id v207 = v245;
        sub_10050F848(v243, (uint64_t)v244);
        ((void (*)(long long *__return_ptr, ValueMetadata *, _UNKNOWN **))v207[11])(&v233, v206, v207);
        id v208 = v234;
        uint64_t v209 = v235;
        sub_10050F848(&v233, v234);
        double v210 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v209 + 160))(v208, v209);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v233);
        if (v210 == 2)
        {
          double v211 = v244;
          id v212 = v245;
          sub_1005231B4((uint64_t)v243, (uint64_t)v244);
          uint64_t v213 = (void (*)(long long *, void))((uint64_t (*)(long long *, ValueMetadata *, _UNKNOWN **))v212[13])(&v233, v211, v212);
          long long v215 = *(void *)(v214 + 24);
          long long v216 = *(void *)(v214 + 32);
          sub_1005231B4(v214, v215);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v216 + 168))(1, v215, v216);
          v213(&v233, 0);
        }

        uint64_t v17 = (uint64_t)v223;
        uint64_t v14 = v225;
        unint64_t v16 = v226;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v240);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v237);
        sub_1005498A4((uint64_t)v243, (uint64_t)&v237);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_100F68620((uint64_t)v14);
        }
        if (v16 >= *((void *)v14 + 2)) {
          goto LABEL_169;
        }
LABEL_163:
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v14[5 * v16 + 4]);
        sub_10053974C(&v237, (uint64_t)&v14[5 * v16 + 4]);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v243);
        goto LABEL_4;
      }

      sub_100522F00((uint64_t)&v233, &qword_10167E120);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v237);
      uint64_t v14 = v225;
    }
    else
    {
      swift_release();
    }
    sub_1005498A4((uint64_t)v243, (uint64_t)&v237);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = (uint64_t)v223;
    unint64_t v16 = v226;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v14 = sub_100F68620((uint64_t)v14);
    }
    if (v16 >= *((void *)v14 + 2)) {
      goto LABEL_167;
    }
    goto LABEL_163;
  }
  return v14;
}

double *sub_100F5CD14()
{
  void (*v37)(long long *__return_ptr, uint64_t, _UNKNOWN **);
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _UNKNOWN **v52;
  uint64_t v53;
  _UNKNOWN **v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  _UNKNOWN **v59;
  void (*v60)(long long *, void);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _UNKNOWN **v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  _UNKNOWN **v70;
  void (*v71)(long long *, void);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _UNKNOWN **v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  _UNKNOWN **v81;
  uint64_t (*v82)(long long *, uint64_t, _UNKNOWN **);
  CAMediaTimingFillMode v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  const char *v111;
  char v112;
  double *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  _UNKNOWN **v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  _UNKNOWN **v131;
  void (*v132)(long long *, void);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _UNKNOWN **v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  _UNKNOWN **v142;
  void (*v143)(long long *, void);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _UNKNOWN **v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  _UNKNOWN **v157;
  uint64_t v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  _UNKNOWN **v162;
  void (*v163)(long long *, void);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _UNKNOWN **v168;
  uint64_t v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  _UNKNOWN **v173;
  void (*v174)(long long *, void);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _UNKNOWN **v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  _UNKNOWN **v187;
  void (*v188)(long long *, void);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _UNKNOWN **v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  _UNKNOWN **v198;
  void (*v199)(long long *, void);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  _UNKNOWN **v204;
  uint64_t v205;
  uint64_t v206;
  void *v207;
  NSString *v208;
  void (*v209)(long long *, void);
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  CAMediaTimingFillMode v213;
  uint64_t v214;
  _UNKNOWN **v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  uint64_t v219;
  _UNKNOWN **v220;
  void (*v221)(long long *, void);
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v226;
  CAMediaTimingFillMode v227;
  CAMediaTimingFillMode v228;
  CAMediaTimingFillMode v229;
  CAMediaTimingFillMode v230;
  char *v231;
  unint64_t v232;
  uint64_t v233;
  double *v234;
  uint64_t v235;
  uint64_t v236;
  void v237[3];
  uint64_t v238;
  uint64_t v239;
  long long v240;
  uint64_t v241;
  uint64_t v242;
  long long v243;
  uint64_t v244;
  uint64_t v245;
  double *v246;
  long long v247;
  uint64_t v248;
  _UNKNOWN **v249;
  long long v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253[3];
  uint64_t v254;
  _UNKNOWN **v255;

  uint64_t v1 = v0;
  uint64_t v236 = type metadata accessor for CRLTweenLayerAnimation();
  __chkstk_darwin(v236, v2);
  float v231 = (char *)&v226 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v226 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLCanvasLayerAnimationProvider();
  uint64_t v248 = v9;
  id v249 = &off_101517F00;
  double v10 = sub_1005767BC((uint64_t *)&v247);
  sub_100F6D3D4(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimationProvider);
  uint64_t v11 = v248;
  __n128 v12 = v249;
  uint64_t v13 = sub_10050F848(&v247, v248);
  long long v254 = v11;
  uint64_t v255 = v12;
  uint64_t v14 = sub_1005767BC(v253);
  double v15 = *(double *)((char *)v13 + *(int *)(v9 + 20));
  sub_100F6D3D4((uint64_t)v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  uint64_t v16 = (uint64_t)&v8[*(int *)(v5 + 56)];
  uint64_t v18 = *(void *)(v16 + 24);
  uint64_t v17 = *(void *)(v16 + 32);
  sub_1005231B4(v16, v18);
  __n128 v19 = (void (*)(long long *, void))(*(uint64_t (**)(long long *, uint64_t))(*(void *)(v17 + 32)
                                                                                                + 24))(&v250, v18);
  *uint64_t v20 = v15 + *v20;
  v19(&v250, 0);
  sub_1005CFDAC((uint64_t)v8, (uint64_t)v14);
  *(uint64_t *)((char *)v14 + *(int *)(v9 + 20)) = 0;
  uint64_t v21 = (double *)((uint64_t (*)(uint64_t, _UNKNOWN **))v12[4])(v11, v12);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v247);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v253);
  uint64_t v235 = *((void *)v21 + 2);
  if (v235)
  {
    unint64_t v22 = 0;
    uint64_t v233 = 0;
    long long v228 = kCAFillModeRemoved;
    long long v227 = kCAFillModeForwards;
    uint64_t v230 = kCAFillModeBackwards;
    long long v229 = kCAFillModeBoth;
    __n128 v23 = (uint64_t *)&unk_10167BDB0;
    uint64_t v24 = (uint64_t)v231;
    while (1)
    {
      if (v22 >= *((void *)v21 + 2))
      {
        __break(1u);
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      uint64_t v25 = (uint64_t)(v21 + 4);
      sub_1005498A4((uint64_t)&v21[5 * v22 + 4], (uint64_t)&v247);
      sub_1005057FC(v23);
      if (!swift_dynamicCast()) {
        break;
      }
      sub_100F6BEE0(v24);
LABEL_4:
      if (++v22 == v235) {
        return v21;
      }
    }
    if (v22 >= *((void *)v21 + 2)) {
      goto LABEL_164;
    }
    sub_1005498A4((uint64_t)&v21[5 * v22 + 4], (uint64_t)v253);
    uint64_t v27 = v254;
    uint64_t v26 = v255;
    BOOL v28 = sub_10050F848(v253, v254);
    uint64_t v29 = *(void *)(v27 - 8);
    __n128 v30 = __chkstk_darwin(v28, v28);
    CGFloat v32 = (char *)&v226 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v29 + 16))(v32, v30);
    uint64_t v33 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v26[8])(v27, v26);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v27);
    if (!v33)
    {
      sub_1005498A4((uint64_t)v253, (uint64_t)&v247);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v21 = sub_100F68620((uint64_t)v21);
      }
      uint64_t v24 = (uint64_t)v231;
      if (v22 < *((void *)v21 + 2)) {
        goto LABEL_161;
      }
      goto LABEL_166;
    }
    uint64_t v232 = v22;
    uint64_t v34 = v21;
    uint64_t v35 = v254;
    uint64_t v36 = v255;
    sub_10050F848(v253, v254);
    uint64_t v37 = (void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v36[11];
    swift_bridgeObjectRetain();
    v37(&v250, v35, v36);
    uint64_t v38 = v251;
    uint64_t v39 = v252;
    sub_10050F848(&v250, v251);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v39 + 56))(&v247, v38, v39);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
    uint64_t v40 = sub_1009FCAC8();
    sub_10054BD5C((uint64_t)&v247);
    char v246 = _swiftEmptyArrayStorage;
    uint64_t v41 = *((void *)v34 + 2);
    long long v234 = v34;
    swift_bridgeObjectRetain();
    uint64_t v42 = v33;
    if (!v41)
    {
LABEL_10:
      uint64_t v43 = v23;
      uint64_t v21 = v234;
      swift_bridgeObjectRelease();

      *(void *)&v243 = v246;
      swift_retain();
      unint64_t v44 = v233;
      sub_100F68930((uint64_t *)&v243);
      if (v44) {
        goto LABEL_168;
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v45 = v243;
      uint64_t v46 = *(void *)(v243 + 16);
      unint64_t v22 = v232;
      uint64_t v233 = 0;
      if (v46)
      {
        sub_1005498A4(v243 + 32, (uint64_t)&v243);
        swift_bridgeObjectRetain();
        uint64_t v47 = v46 - 1;
        __n128 v23 = v43;
        if (v46 != 1)
        {
          id v116 = v45 + 72;
          do
          {
            sub_1005498A4(v116, (uint64_t)&v240);
            uint64_t v118 = v241;
            id v117 = v242;
            sub_10050F848(&v240, v241);
            uint64_t v119 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v117 + 24) + 8) + 8))(v118);
            uint64_t v121 = v244;
            uint64_t v120 = v245;
            sub_10050F848(&v243, v244);
            if (v119 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v120 + 24) + 8) + 8))(v121))
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v240);
            }
            else
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
              sub_10053974C(&v240, (uint64_t)&v243);
            }
            v116 += 40;
            --v47;
          }
          while (v47);
        }
        swift_release();
        sub_10053974C(&v243, (uint64_t)&v250);
        sub_10053974C(&v250, (uint64_t)&v247);
        sub_100822DF0(v45, (uint64_t)&v243);
        swift_release();
        if (v244)
        {
          sub_10053974C(&v243, (uint64_t)&v250);
          sub_1005498A4((uint64_t)v253, (uint64_t)&v243);
          CGRect v48 = v244;
          CGRect v49 = v245;
          sub_10050F848(&v243, v244);
          long long v50 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v49 + 128))(&v247, v48, v49);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
          if ((v50 & 1) == 0
            || (long long v51 = v248,
                long long v52 = v249,
                sub_10050F848(&v247, v248),
                (((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v52[16])(&v250, v51, v52) & 1) == 0))
          {
            sub_1005498A4((uint64_t)v253, (uint64_t)&v243);
            uint64_t v122 = v244;
            Class v123 = v245;
            sub_10050F848(&v243, v244);
            uint64_t v124 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v123 + 128))(&v247, v122, v123);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
            if (v124)
            {
              uint64_t v125 = v254;
              uint64_t v126 = v255;
              sub_10050F848(v253, v254);
              ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v126[11])(&v243, v125, v126);
              uint64_t v127 = v244;
              uint64_t v128 = v245;
              sub_10050F848(&v243, v244);
              uint64_t v129 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v128 + 112))(v127, v128);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
              if (v129 == 2)
              {
                uint64_t v130 = v254;
                uint64_t v131 = v255;
                sub_1005231B4((uint64_t)v253, v254);
                uint64_t v132 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v131[13])(&v243, v130, v131);
                uint64_t v134 = *(void *)(v133 + 24);
                uint64_t v135 = *(void *)(v133 + 32);
                sub_1005231B4(v133, v134);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 120))(1, v134, v135);
                v132(&v243, 0);
              }
              id v136 = v254;
              id v137 = v255;
              sub_10050F848(v253, v254);
              ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v137[11])(&v243, v136, v137);
              uint64_t v138 = v244;
              char v139 = v245;
              sub_10050F848(&v243, v244);
              float v140 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v139 + 136))(v138, v139);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
              if (v140 == 2)
              {
                char v141 = v254;
                objc_super v142 = v255;
                sub_1005231B4((uint64_t)v253, v254);
                double v143 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v142[13])(&v243, v141, v142);
                uint64_t v145 = *(void *)(v144 + 24);
                unsigned __int8 v146 = *(void *)(v144 + 32);
                sub_1005231B4(v144, v145);
                (*(void (**)(void, uint64_t, uint64_t))(v146 + 144))(0, v145, v146);
                v143(&v243, 0);
              }
              uint64_t v147 = v254;
              uint64_t v148 = v255;
              sub_10050F848(v253, v254);
              ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v148[11])(&v243, v147, v148);
              unsigned __int8 v149 = v244;
              unsigned __int8 v150 = v245;
              sub_10050F848(&v243, v244);
              uint64_t v151 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v150 + 88))(v149, v150);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);

              if (v151) {
                goto LABEL_156;
              }
              uint64_t v80 = v254;
              uint64_t v81 = v255;
              sub_1005231B4((uint64_t)v253, v254);
              id v82 = (uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v81[13];
              uint64_t v83 = v230;
            }
            else
            {
              sub_1005498A4((uint64_t)v253, (uint64_t)&v243);
              uint64_t v153 = v244;
              uint64_t v154 = v245;
              sub_10050F848(&v243, v244);
              uint64_t v155 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v154 + 128))(&v250, v153, v154);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
              char v156 = v254;
              id v157 = v255;
              sub_10050F848(v253, v254);
              if (v155)
              {
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v157[11])(&v243, v156, v157);
                id v158 = v244;
                uint64_t v159 = v245;
                sub_10050F848(&v243, v244);
                uint64_t v160 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v159 + 112))(v158, v159);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
                if (v160 == 2)
                {
                  double v161 = v254;
                  id v162 = v255;
                  sub_1005231B4((uint64_t)v253, v254);
                  uint64_t v163 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v162[13])(&v243, v161, v162);
                  id v165 = *(void *)(v164 + 24);
                  uint64_t v166 = *(void *)(v164 + 32);
                  sub_1005231B4(v164, v165);
                  (*(void (**)(void, uint64_t, uint64_t))(v166 + 120))(0, v165, v166);
                  v163(&v243, 0);
                }
                id v167 = v254;
                uint64_t v168 = v255;
                sub_10050F848(v253, v254);
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v168[11])(&v243, v167, v168);
                uint64_t v169 = v244;
                unsigned __int8 v170 = v245;
                sub_10050F848(&v243, v244);
                uint64_t v171 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v170 + 136))(v169, v170);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
                if (v171 == 2)
                {
                  id v172 = v254;
                  uint64_t v173 = v255;
                  sub_1005231B4((uint64_t)v253, v254);
                  char v174 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v173[13])(&v243, v172, v173);
                  id v176 = *(void *)(v175 + 24);
                  uint64_t v177 = *(void *)(v175 + 32);
                  sub_1005231B4(v175, v176);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v177 + 144))(1, v176, v177);
                  v174(&v243, 0);
                }
                unint64_t v178 = v254;
                double v179 = v255;
                sub_10050F848(v253, v254);
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v179[11])(&v243, v178, v179);
                uint64_t v180 = v244;
                double v181 = v245;
                sub_10050F848(&v243, v244);
                id v182 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v181 + 88))(v180, v181);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);

                if (v182) {
                  goto LABEL_156;
                }
                uint64_t v80 = v254;
                uint64_t v81 = v255;
                sub_1005231B4((uint64_t)v253, v254);
                id v82 = (uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v81[13];
                uint64_t v83 = v227;
              }
              else
              {
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v157[11])(&v243, v156, v157);
                uint64_t v183 = v244;
                double v184 = v245;
                sub_10050F848(&v243, v244);
                uint64_t v185 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v184 + 112))(v183, v184);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
                if (v185 == 2)
                {
                  id v186 = v254;
                  long long v187 = v255;
                  sub_1005231B4((uint64_t)v253, v254);
                  uint64_t v188 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v187[13])(&v243, v186, v187);
                  id v190 = *(void *)(v189 + 24);
                  uint64_t v191 = *(void *)(v189 + 32);
                  sub_1005231B4(v189, v190);
                  (*(void (**)(void, uint64_t, uint64_t))(v191 + 120))(0, v190, v191);
                  v188(&v243, 0);
                }
                uint64_t v192 = v254;
                Swift::Int v193 = v255;
                sub_10050F848(v253, v254);
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v193[11])(&v243, v192, v193);
                uint64_t v194 = v244;
                uint64_t v195 = v245;
                sub_10050F848(&v243, v244);
                uint64_t v196 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v195 + 136))(v194, v195);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
                if (v196 == 2)
                {
                  uint64_t v197 = v254;
                  uint64_t v198 = v255;
                  sub_1005231B4((uint64_t)v253, v254);
                  uint64_t v199 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v198[13])(&v243, v197, v198);
                  id v201 = *(void *)(v200 + 24);
                  id v202 = *(void *)(v200 + 32);
                  sub_1005231B4(v200, v201);
                  (*(void (**)(void, uint64_t, uint64_t))(v202 + 144))(0, v201, v202);
                  v199(&v243, 0);
                }
                uint64_t v203 = v254;
                id v204 = v255;
                sub_10050F848(v253, v254);
                ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v204[11])(&v243, v203, v204);
                uint64_t v205 = v244;
                uint64_t v206 = v245;
                sub_10050F848(&v243, v244);
                id v207 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v206 + 88))(v205, v206);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);

                if (v207) {
                  goto LABEL_156;
                }
                uint64_t v80 = v254;
                uint64_t v81 = v255;
                sub_1005231B4((uint64_t)v253, v254);
                id v82 = (uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v81[13];
                uint64_t v83 = v228;
              }
            }
LABEL_155:
            id v208 = v83;
            uint64_t v209 = (void (*)(long long *, void))v82(&v243, v80, v81);
            double v211 = *(void *)(v210 + 24);
            id v212 = *(void *)(v210 + 32);
            sub_1005231B4(v210, v211);
            uint64_t v213 = v83;
            __n128 v23 = v43;
            (*(void (**)(CAMediaTimingFillMode, uint64_t, uint64_t))(v212 + 96))(v213, v211, v212);
            v209(&v243, 0);
            goto LABEL_156;
          }
          Swift::String v53 = v254;
          Swift::String v54 = v255;
          sub_10050F848(v253, v254);
          ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v54[11])(&v243, v53, v54);
          uint64_t v55 = v244;
          uint64_t v56 = v245;
          sub_10050F848(&v243, v244);
          int64_t v57 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v56 + 112))(v55, v56);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
          if (v57 == 2)
          {
            uint64_t v58 = v254;
            uint64_t v59 = v255;
            sub_1005231B4((uint64_t)v253, v254);
            double v60 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v59[13])(&v243, v58, v59);
            simd_float4 v62 = *(void *)(v61 + 24);
            BOOL v63 = *(void *)(v61 + 32);
            sub_1005231B4(v61, v62);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 120))(1, v62, v63);
            v60(&v243, 0);
          }
          long long v64 = v254;
          uint64_t v65 = v255;
          sub_10050F848(v253, v254);
          ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v65[11])(&v243, v64, v65);
          uint64_t v66 = v244;
          CGRect v67 = v245;
          sub_10050F848(&v243, v244);
          CGRect v68 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v67 + 136))(v66, v67);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
          if (v68 == 2)
          {
            CGRect v69 = v254;
            uint64_t v70 = v255;
            sub_1005231B4((uint64_t)v253, v254);
            uint64_t v71 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v70[13])(&v243, v69, v70);
            CKRecordID v73 = *(void *)(v72 + 24);
            Swift::String v74 = *(void *)(v72 + 32);
            sub_1005231B4(v72, v73);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 144))(1, v73, v74);
            v71(&v243, 0);
          }
          id v75 = v254;
          unint64_t v76 = v255;
          sub_10050F848(v253, v254);
          ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v76[11])(&v243, v75, v76);
          uint64_t v77 = v244;
          uint64_t v78 = v245;
          sub_10050F848(&v243, v244);
          uint64_t v79 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v78 + 88))(v77, v78);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);

          if (!v79)
          {
            uint64_t v80 = v254;
            uint64_t v81 = v255;
            sub_1005231B4((uint64_t)v253, v254);
            id v82 = (uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v81[13];
            uint64_t v83 = v229;
            goto LABEL_155;
          }
LABEL_156:
          double v214 = v254;
          long long v215 = v255;
          sub_10050F848(v253, v254);
          ((void (*)(long long *__return_ptr, uint64_t, _UNKNOWN **))v215[11])(&v243, v214, v215);
          long long v216 = v244;
          long long v217 = v245;
          sub_10050F848(&v243, v244);
          long long v218 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v217 + 160))(v216, v217);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
          if (v218 == 2)
          {
            long long v219 = v254;
            long long v220 = v255;
            sub_1005231B4((uint64_t)v253, v254);
            long long v221 = (void (*)(long long *, void))((uint64_t (*)(long long *, uint64_t, _UNKNOWN **))v220[13])(&v243, v219, v220);
            long long v223 = *(void *)(v222 + 24);
            long long v224 = *(void *)(v222 + 32);
            sub_1005231B4(v222, v223);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v224 + 168))(1, v223, v224);
            v221(&v243, 0);
          }

          uint64_t v24 = (uint64_t)v231;
          uint64_t v21 = v234;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v250);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v247);
          sub_1005498A4((uint64_t)v253, (uint64_t)&v247);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v21 = sub_100F68620((uint64_t)v21);
          }
          if (v22 < *((void *)v21 + 2))
          {
LABEL_161:
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v21[5 * v22 + 4]);
            sub_10053974C(&v247, (uint64_t)&v21[5 * v22 + 4]);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v253);
            goto LABEL_4;
          }
LABEL_167:
          __break(1u);
LABEL_168:
          swift_release();
          __break(1u);
          JUMPOUT(0x100F5E9D0);
        }

        sub_100522F00((uint64_t)&v243, &qword_10167E120);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v247);
        uint64_t v21 = v234;
      }
      else
      {
        swift_release();

        __n128 v23 = v43;
      }
      sub_1005498A4((uint64_t)v253, (uint64_t)&v247);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = (uint64_t)v231;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v21 = sub_100F68620((uint64_t)v21);
      }
      if (v22 < *((void *)v21 + 2)) {
        goto LABEL_161;
      }
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    while (1)
    {
      sub_1005498A4(v25, (uint64_t)&v243);
      id v85 = v244;
      uint64_t v84 = v245;
      sub_10050F848(&v243, v244);
      uint64_t v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 64))(v85, v84);
      if (v86)
      {
        id v87 = (void *)v86;
        sub_10054CE40();
        uint64_t v88 = v42;
        uint64_t v89 = static NSObject.== infix(_:_:)();

        sub_1005498A4((uint64_t)&v243, (uint64_t)&v240);
        if (v89)
        {
          id v90 = v241;
          uint64_t v91 = v242;
          sub_10050F848(&v240, v241);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v91 + 88))(v237, v90, v91);
          id v92 = v238;
          id v93 = v239;
          sub_10050F848(v237, v238);
          uint64_t v94 = 0xE800000000000000;
          uint64_t v95 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v93 + 80))(v92, v93);
          uint64_t v96 = 0x73746E65746E6F63;
          switch(v95)
          {
            case 1:
              uint64_t v94 = 0xEC00000074636552;
              break;
            case 2:
              uint64_t v94 = 0xEE007265746E6543;
              break;
            case 3:
              uint64_t v94 = 0xE700000000000000;
              uint64_t v96 = 0x7974696361706FLL;
              break;
            case 4:
              uint64_t v96 = 0x6E65646469487369;
              break;
            case 5:
              uint64_t v96 = 0x426F54736B73616DLL;
              uint64_t v94 = 0xED000073646E756FLL;
              break;
            case 6:
              uint64_t v96 = 0x656C62756F447369;
              uint64_t v94 = 0xED00006465646953;
              break;
            case 7:
              uint64_t v99 = 0x72656E726F63;
              goto LABEL_44;
            case 8:
              uint64_t v96 = 0x6957726564726F62;
              uint64_t v94 = 0xEB00000000687464;
              break;
            case 9:
              uint64_t v98 = 0x726564726F62;
              goto LABEL_37;
            case 10:
              uint64_t v96 = 0x756F72676B636162;
              uint64_t v94 = 0xEF726F6C6F43646ELL;
              break;
            case 11:
              uint64_t v96 = 0x704F776F64616873;
              uint64_t v94 = 0xED00007974696361;
              break;
            case 12:
              uint64_t v99 = 0x776F64616873;
LABEL_44:
              uint64_t v96 = v99 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              uint64_t v94 = 0xEC00000073756964;
              break;
            case 13:
              uint64_t v96 = 0x664F776F64616873;
              uint64_t v94 = 0xEC00000074657366;
              break;
            case 14:
              uint64_t v98 = 0x776F64616873;
LABEL_37:
              uint64_t v96 = v98 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              uint64_t v94 = 0xEB00000000726F6CLL;
              break;
            case 15:
              uint64_t v96 = 0x6150776F64616873;
              uint64_t v94 = 0xEA00000000006874;
              break;
            case 16:
              uint64_t v94 = 0xE700000000000000;
              uint64_t v96 = 0x737265746C6966;
              break;
            case 17:
              uint64_t v97 = "compositingFilter";
              goto LABEL_54;
            case 18:
              uint64_t v97 = "backgroundFilters";
              goto LABEL_54;
            case 19:
              uint64_t v96 = 0x6152646C756F6873;
              uint64_t v94 = 0xEF657A6972657473;
              break;
            case 20:
              uint64_t v96 = 0xD000000000000012;
              uint64_t v100 = "rasterizationScale";
              goto LABEL_59;
            case 21:
              uint64_t v94 = 0xE600000000000000;
              uint64_t v96 = 0x73646E756F62;
              break;
            case 22:
              uint64_t v96 = 0x6E6F697469736F70;
              break;
            case 23:
              uint64_t v94 = 0xE90000000000006ELL;
              uint64_t v96 = 0x6F697469736F507ALL;
              break;
            case 24:
              uint64_t v96 = 0x6F50726F68636E61;
              uint64_t v94 = 0xEC0000005A746E69;
              break;
            case 25:
              uint64_t v96 = 0x6F50726F68636E61;
              uint64_t v94 = 0xEB00000000746E69;
              break;
            case 26:
              uint64_t v96 = 0x726F66736E617274;
              uint64_t v94 = 0xE90000000000006DLL;
              break;
            case 27:
              uint64_t v97 = "sublayerTransform";
LABEL_54:
              uint64_t v94 = (unint64_t)(v97 - 32) | 0x8000000000000000;
              uint64_t v96 = 0xD000000000000011;
              break;
            case 28:
              uint64_t v96 = 0xD000000000000010;
              uint64_t v100 = "dynamicTransform";
LABEL_59:
              uint64_t v94 = (unint64_t)(v100 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          uint64_t v101 = 0xE800000000000000;
          uint64_t v102 = 0x73746E65746E6F63;
          switch(v40)
          {
            case 1:
              uint64_t v103 = 1952671058;
              goto LABEL_89;
            case 2:
              uint64_t v101 = 0xEE007265746E6543;
              if (v96 != 0x73746E65746E6F63) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 3:
              uint64_t v101 = 0xE700000000000000;
              if (v96 != 0x7974696361706FLL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 4:
              if (v96 != 0x6E65646469487369) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 5:
              uint64_t v106 = 0x426F54736B73616DLL;
              id v107 = 0x73646E756FLL;
              goto LABEL_86;
            case 6:
              uint64_t v106 = 0x656C62756F447369;
              id v107 = 0x6465646953;
              goto LABEL_86;
            case 7:
              uint64_t v108 = 0x72656E726F63;
              goto LABEL_82;
            case 8:
              uint64_t v109 = 0x6957726564726F62;
              id v110 = 6845540;
              goto LABEL_95;
            case 9:
              uint64_t v105 = 0x726564726F62;
              goto LABEL_72;
            case 10:
              uint64_t v101 = 0xEF726F6C6F43646ELL;
              if (v96 != 0x756F72676B636162) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 11:
              uint64_t v106 = 0x704F776F64616873;
              id v107 = 0x7974696361;
LABEL_86:
              uint64_t v101 = v107 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
              if (v96 != v106) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 12:
              uint64_t v108 = 0x776F64616873;
LABEL_82:
              uint64_t v102 = v108 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
              uint64_t v103 = 1937074532;
              goto LABEL_89;
            case 13:
              uint64_t v102 = 0x664F776F64616873;
              uint64_t v103 = 1952805734;
              goto LABEL_89;
            case 14:
              uint64_t v105 = 0x776F64616873;
LABEL_72:
              uint64_t v109 = v105 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
              id v110 = 7499628;
              goto LABEL_95;
            case 15:
              uint64_t v101 = 0xEA00000000006874;
              if (v96 != 0x6150776F64616873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 16:
              uint64_t v101 = 0xE700000000000000;
              if (v96 != 0x737265746C6966) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 17:
              uint64_t v104 = "compositingFilter";
              goto LABEL_100;
            case 18:
              uint64_t v104 = "backgroundFilters";
              goto LABEL_100;
            case 19:
              uint64_t v101 = 0xEF657A6972657473;
              if (v96 != 0x6152646C756F6873) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 20:
              uint64_t v102 = 0xD000000000000012;
              uint64_t v111 = "rasterizationScale";
              goto LABEL_109;
            case 21:
              uint64_t v101 = 0xE600000000000000;
              if (v96 != 0x73646E756F62) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 22:
              if (v96 != 0x6E6F697469736F70) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 23:
              uint64_t v101 = 0xE90000000000006ELL;
              if (v96 != 0x6F697469736F507ALL) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 24:
              uint64_t v102 = 0x6F50726F68636E61;
              uint64_t v103 = 1517579881;
LABEL_89:
              uint64_t v101 = v103 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              if (v96 != v102) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 25:
              uint64_t v109 = 0x6F50726F68636E61;
              id v110 = 7630441;
LABEL_95:
              uint64_t v101 = v110 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              if (v96 != v109) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 26:
              uint64_t v101 = 0xE90000000000006DLL;
              if (v96 != 0x726F66736E617274) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 27:
              uint64_t v104 = "sublayerTransform";
LABEL_100:
              uint64_t v101 = (unint64_t)(v104 - 32) | 0x8000000000000000;
              if (v96 != 0xD000000000000011) {
                goto LABEL_114;
              }
              goto LABEL_111;
            case 28:
              uint64_t v102 = 0xD000000000000010;
              uint64_t v111 = "dynamicTransform";
LABEL_109:
              uint64_t v101 = (unint64_t)(v111 - 32) | 0x8000000000000000;
              goto LABEL_110;
            default:
LABEL_110:
              if (v96 != v102) {
                goto LABEL_114;
              }
LABEL_111:
              if (v94 == v101)
              {
                swift_bridgeObjectRelease_n();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v237);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v240);
              }
              else
              {
LABEL_114:
                id v112 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v237);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v240);
                if ((v112 & 1) == 0) {
                  goto LABEL_24;
                }
              }
              sub_10053974C(&v243, (uint64_t)&v240);
              id v113 = v246;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1006BB784(0, *((void *)v113 + 2) + 1, 1);
                id v113 = v246;
              }
              uint64_t v115 = *((void *)v113 + 2);
              uint64_t v114 = *((void *)v113 + 3);
              if (v115 >= v114 >> 1)
              {
                sub_1006BB784(v114 > 1, v115 + 1, 1);
                id v113 = v246;
              }
              *((void *)v113 + 2) = v115 + 1;
              sub_10053974C(&v240, (uint64_t)&v113[5 * v115 + 4]);
              break;
          }
          goto LABEL_25;
        }
      }
      else
      {
        sub_1005498A4((uint64_t)&v243, (uint64_t)&v240);
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v240);
LABEL_24:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v243);
LABEL_25:
      v25 += 40;
      if (!--v41) {
        goto LABEL_10;
      }
    }
  }
  return v21;
}

double sub_100F5EAB8(uint64_t a1, uint64_t a2)
{
  return sub_100F5EAD0(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
}

double sub_100F5EAD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v5 = sub_1005767BC(v14);
  sub_100F6D3D4(v3, (uint64_t)v5, a3);
  uint64_t v6 = v15;
  uint64_t v7 = v16;
  uint64_t v8 = sub_10050F848(v14, v15);
  uint64_t v13[3] = v6;
  v13[4] = v7;
  uint64_t v9 = sub_1005767BC(v13);
  sub_100F6D3D4((uint64_t)v8, (uint64_t)v9, a3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
  double v11 = v10;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v14);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
  return v11;
}

double *sub_100F5EBA0()
{
  return sub_100F53E6C((uint64_t (*)(void, __n128))type metadata accessor for CRLCanvasLayerAnimation, (uint64_t)&off_101509EB8, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
}

double sub_100F5EBE8(uint64_t a1, uint64_t a2)
{
  return sub_100F5EAD0(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
}

double *sub_100F5EC00()
{
  return sub_100F53E6C((uint64_t (*)(void, __n128))type metadata accessor for CRLBasicLayerAnimation, (uint64_t)&off_10150AF08, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
}

double *sub_100F5EC48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v15 = v1;
    do
    {
      sub_1005498A4(v2, (uint64_t)v20);
      sub_1005498A4((uint64_t)v20, (uint64_t)v19);
      sub_1005057FC(&qword_101674BC0);
      sub_1005057FC(&qword_1016A2928);
      if ((swift_dynamicCast() & 1) == 0)
      {
        long long v17 = 0u;
        long long v18 = 0u;
        long long v16 = 0u;
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
      if (*((void *)&v17 + 1))
      {
        sub_100B332A0(&v16, v19);
        sub_100B332A0(v19, &v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_100F63080(0, *((void *)v3 + 2) + 1, 1, v3, &qword_1016A2938, &qword_1016A2928);
        }
        unint64_t v5 = *((void *)v3 + 2);
        unint64_t v4 = *((void *)v3 + 3);
        if (v5 >= v4 >> 1) {
          uint64_t v3 = sub_100F63080((double *)(v4 > 1), v5 + 1, 1, v3, &qword_1016A2938, &qword_1016A2928);
        }
        *((void *)v3 + 2) = v5 + 1;
        sub_100B332A0(&v16, &v3[6 * v5 + 4]);
      }
      else
      {
        sub_100522F00((uint64_t)&v16, &qword_1016A2930);
      }
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    uint64_t v1 = v15;
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v6 = *((void *)v3 + 2);
  uint64_t v7 = v1 - v6;
  if (v1 != v6)
  {
    if (qword_10166FB20 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = (void *)static OS_os_log.crlLayerAnimation;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v7;
    unint64_t v10 = sub_100528BE4();
    unint64_t v11 = 0xEE00657265772073;
    if (v7 == 1) {
      unint64_t v11 = 0xEC00000073617720;
    }
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v10;
    *(void *)(inited + 72) = 0x72656469766F7270;
    *(void *)(inited + 80) = v11;
    id v12 = v8;
    uint64_t v13 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"timingModifiableChildProviders was called, but not all childProviders are timing-modifiable. Non-timing-modifiable providers should only be added after the provider has been fully processed(). %@ non-timing-modifiable %@ dropped on the floor.", 242, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  return v3;
}

double sub_100F5EF4C()
{
  return sub_100F5205C(*(void *)v0, *(double *)(v0 + 8));
}

double *sub_100F5EF58()
{
  return sub_100F593DC(*(void *)v0, (uint64_t (*)(uint64_t, double))sub_100F5205C, *(double *)(v0 + 8));
}

double sub_100F5EF8C()
{
  return sub_100F51EF8(*(void *)(v0 + 8), *(double *)v0, *(double *)(v0 + 16));
}

double *sub_100F5EF9C()
{
  return sub_100F55B74(*(void *)(v0 + 8), *(double *)v0, *(double *)(v0 + 16));
}

uint64_t sub_100F5EFAC(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v149 = a6;
  uint64_t v150 = a7;
  uint64_t v148 = a5;
  uint64_t v146 = a4;
  int v144 = a2;
  uint64_t v143 = a1;
  uint64_t v11 = sub_1005057FC(&qword_101672BB0);
  __n128 v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v147 = (char *)&v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a9 + 56))(a8, a9, v13);
  sub_100856388(v15, v16);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  *(void *)&long long v165 = _swiftEmptyArrayStorage;
  uint64_t v19 = *(void *)(v18 + 16);
  swift_bridgeObjectRetain();
  if (v19)
  {
    unint64_t v20 = 0;
    uint64_t v21 = v18 + 32;
    do
    {
      if (v20 >= *(void *)(v18 + 16))
      {
        __break(1u);
LABEL_153:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x100F6044CLL);
      }
      sub_1005498A4(v21, (uint64_t)&v155);
      uint64_t v23 = *((void *)&v156 + 1);
      uint64_t v22 = v157;
      sub_10050F848(&v155, *((uint64_t *)&v156 + 1));
      if ((*(uint64_t (**)(uint64_t))(*(void *)(v22 + 16) + 8))(v23))
      {
        sub_10053974C(&v155, (uint64_t)&v169);
        uint64_t v24 = v165;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB784(0, *(void *)(v24 + 16) + 1, 1);
          uint64_t v24 = v165;
        }
        unint64_t v26 = *(void *)(v24 + 16);
        unint64_t v25 = *(void *)(v24 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1006BB784(v25 > 1, v26 + 1, 1);
          uint64_t v24 = v165;
        }
        *(void *)(v24 + 16) = v26 + 1;
        sub_10053974C(&v169, v24 + 40 * v26 + 32);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v155);
      }
      ++v20;
      v21 += 40;
    }
    while (v19 != v20);
  }
  swift_bridgeObjectRelease();
  uint64_t v145 = v165;
  *(void *)&long long v165 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  if (v19)
  {
    uint64_t v154 = v19;
    uint64_t v27 = v18 + 32;
    uint64_t v151 = v18 + 32;
    for (unint64_t i = 0; i != v154; ++i)
    {
      if (i >= *(void *)(v18 + 16)) {
        goto LABEL_153;
      }
      sub_1005498A4(v27, (uint64_t)&v155);
      uint64_t v29 = *((void *)&v156 + 1);
      uint64_t v30 = v157;
      sub_10050F848(&v155, *((uint64_t *)&v156 + 1));
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v30 + 88))(&v169, v29, v30);
      uint64_t v31 = v170;
      uint64_t v32 = v171;
      sub_10050F848(&v169, v170);
      char v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 184))(v31, v32);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v169);
      if (v33)
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v155);
      }
      else
      {
        sub_10053974C(&v155, (uint64_t)&v169);
        uint64_t v34 = v165;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB784(0, *(void *)(v34 + 16) + 1, 1);
          uint64_t v34 = v165;
        }
        unint64_t v36 = *(void *)(v34 + 16);
        unint64_t v35 = *(void *)(v34 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_1006BB784(v35 > 1, v36 + 1, 1);
          uint64_t v34 = v165;
        }
        *(void *)(v34 + 16) = v36 + 1;
        sub_10053974C(&v169, v34 + 40 * v36 + 32);
      }
      v27 += 40;
    }
    swift_bridgeObjectRelease();
    uint64_t v37 = v165;
    if (a3)
    {
      uint64_t v142 = v165;
      swift_bridgeObjectRetain();
      uint64_t v38 = 0;
      uint64_t v39 = v154;
      uint64_t v40 = v151;
      uint64_t v152 = v18;
      while (1)
      {
        sub_1005498A4(v40 + 40 * v38, (uint64_t)&v169);
        uint64_t v54 = v170;
        uint64_t v55 = v171;
        sub_10050F848(&v169, v170);
        uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 64))(v54, v55);
        if (v56) {
          break;
        }
LABEL_28:
        ++v38;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v169);
        if (v38 == v39)
        {
          swift_bridgeObjectRelease();
          uint64_t v37 = v142;
          goto LABEL_150;
        }
      }
      int64_t v57 = (void *)v56;
      uint64_t v153 = v38;
      uint64_t v58 = v170;
      uint64_t v59 = v171;
      sub_10050F848(&v169, v170);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v59 + 88))(&v155, v58, v59);
      uint64_t v60 = *((void *)&v156 + 1);
      uint64_t v61 = v157;
      sub_10050F848(&v155, *((uint64_t *)&v156 + 1));
      char v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 80))(v60, v61);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v155);
      uint64_t v168 = _swiftEmptyArrayStorage;
      uint64_t v63 = *(void *)(v18 + 16);
      swift_bridgeObjectRetain();
      id v64 = v57;
      if (!v63)
      {
LABEL_31:
        uint64_t v18 = v152;
        swift_bridgeObjectRelease();

        *(void *)&long long v165 = v168;
        swift_retain();
        sub_100F68930((uint64_t *)&v165);
        swift_release();
        uint64_t v65 = v165;
        uint64_t v66 = *(void *)(v165 + 16);
        if (v66)
        {
          sub_1005498A4(v165 + 32, (uint64_t)&v165);
          swift_bridgeObjectRetain();
          uint64_t v67 = v66 - 1;
          if (v66 != 1)
          {
            uint64_t v118 = v65 + 72;
            do
            {
              sub_1005498A4(v118, (uint64_t)&v162);
              uint64_t v120 = v163;
              uint64_t v119 = v164;
              sub_10050F848(&v162, v163);
              double v121 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v119 + 24) + 8) + 8))(v120);
              uint64_t v123 = *((void *)&v166 + 1);
              uint64_t v122 = v167;
              sub_10050F848(&v165, *((uint64_t *)&v166 + 1));
              if (v121 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v122 + 24) + 8) + 8))(v123))
              {
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v162);
              }
              else
              {
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v165);
                sub_10053974C(&v162, (uint64_t)&v165);
              }
              v118 += 40;
              --v67;
            }
            while (v67);
          }
          swift_release();
          sub_10053974C(&v165, (uint64_t)&v155);
        }
        else
        {
          long long v155 = 0u;
          long long v156 = 0u;
          uint64_t v157 = 0;
        }
        swift_release();
        uint64_t v100 = *((void *)&v156 + 1);
        if (*((void *)&v156 + 1))
        {
          uint64_t v101 = v157;
          sub_10050F848(&v155, *((uint64_t *)&v156 + 1));
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v101 + 112))(&v165, v100, v101);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v155);
        }
        else
        {
          sub_100522F00((uint64_t)&v155, &qword_10167E120);
          long long v165 = 0u;
          long long v166 = 0u;
        }
        uint64_t v102 = self;
        [v102 begin];
        [v102 setDisableActions:1];
        uint64_t v103 = v170;
        uint64_t v104 = v171;
        sub_10050F848(&v169, v170);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v104 + 80))(&v155, v103, v104);
        uint64_t v105 = v158;
        sub_100522F00((uint64_t)&v155, (uint64_t *)&unk_101684000);
        if (v105)
        {
          uint64_t v106 = v170;
          uint64_t v107 = v171;
          sub_10050F848(&v169, v170);
          uint64_t v108 = v170;
          uint64_t v109 = v171;
          sub_10050F848(&v169, v170);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v109 + 80))(&v155, v108, v109);
          id v110 = (void *)(*(uint64_t (**)(long long *, uint64_t))(*(void *)(v107 + 8) + 16))(&v155, v106);
          sub_100522F00((uint64_t)&v155, (uint64_t *)&unk_101684000);
          sub_100557A70((uint64_t)&v165, (uint64_t)&v155);
          uint64_t v111 = *((void *)&v156 + 1);
          if (*((void *)&v156 + 1))
          {
            id v112 = sub_10050F848(&v155, *((uint64_t *)&v156 + 1));
            uint64_t v113 = *(void *)(v111 - 8);
            __n128 v114 = __chkstk_darwin(v112, v112);
            id v116 = (char *)&v141 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, __n128))(v113 + 16))(v116, v114);
            uint64_t v117 = _bridgeAnythingToObjectiveC<A>(_:)();
            (*(void (**)(char *, uint64_t))(v113 + 8))(v116, v111);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v155);
          }
          else
          {
            uint64_t v117 = 0;
          }
          [v110 setFromValue:v117];
          swift_unknownObjectRelease();
          sub_100557A70((uint64_t)&v165, (uint64_t)&v155);
          uint64_t v124 = *((void *)&v156 + 1);
          if (*((void *)&v156 + 1))
          {
            uint64_t v41 = sub_10050F848(&v155, *((uint64_t *)&v156 + 1));
            uint64_t v42 = *(void *)(v124 - 8);
            __n128 v43 = __chkstk_darwin(v41, v41);
            uint64_t v45 = (char *)&v141 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, __n128))(v42 + 16))(v45, v43);
            uint64_t v46 = _bridgeAnythingToObjectiveC<A>(_:)();
            (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v124);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v155);
          }
          else
          {
            uint64_t v46 = 0;
          }
          uint64_t v18 = v152;
          uint64_t v39 = v154;
          [v110 setToValue:v46];
          swift_unknownObjectRelease();
          [v110 setRemovedOnCompletion:0];
          uint64_t v47 = v170;
          uint64_t v48 = v171;
          sub_10050F848(&v169, v170);
          (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v48 + 88))(&v155, v47, v48);
          uint64_t v49 = *((void *)&v156 + 1);
          uint64_t v50 = v157;
          sub_10050F848(&v155, *((uint64_t *)&v156 + 1));
          uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 48))(v49, v50);
          sub_100F60598(v51, v52);
          swift_bridgeObjectRelease();
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v155);
          NSString v53 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v64 addAnimation:v110 forKey:v53];
        }
        [v102 commit];

        sub_100522F00((uint64_t)&v165, &qword_101672BF0);
        uint64_t v40 = v151;
        uint64_t v38 = v153;
        goto LABEL_28;
      }
      while (1)
      {
        sub_1005498A4(v40, (uint64_t)&v165);
        uint64_t v69 = *((void *)&v166 + 1);
        uint64_t v68 = v167;
        sub_10050F848(&v165, *((uint64_t *)&v166 + 1));
        uint64_t v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 64))(v69, v68);
        if (v70)
        {
          uint64_t v71 = (void *)v70;
          sub_10054CE40();
          id v72 = v64;
          char v73 = static NSObject.== infix(_:_:)();

          sub_1005498A4((uint64_t)&v165, (uint64_t)&v162);
          if (v73)
          {
            uint64_t v74 = v163;
            uint64_t v75 = v164;
            sub_10050F848(&v162, v163);
            (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v75 + 88))(v159, v74, v75);
            uint64_t v76 = v160;
            uint64_t v77 = v161;
            sub_10050F848(v159, v160);
            unint64_t v78 = 0xE800000000000000;
            uint64_t v79 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v77 + 80))(v76, v77);
            uint64_t v80 = 0x73746E65746E6F63;
            switch(v79)
            {
              case 1:
                unint64_t v78 = 0xEC00000074636552;
                break;
              case 2:
                unint64_t v78 = 0xEE007265746E6543;
                break;
              case 3:
                unint64_t v78 = 0xE700000000000000;
                uint64_t v80 = 0x7974696361706FLL;
                break;
              case 4:
                uint64_t v80 = 0x6E65646469487369;
                break;
              case 5:
                uint64_t v80 = 0x426F54736B73616DLL;
                unint64_t v78 = 0xED000073646E756FLL;
                break;
              case 6:
                uint64_t v80 = 0x656C62756F447369;
                unint64_t v78 = 0xED00006465646953;
                break;
              case 7:
                uint64_t v83 = 0x72656E726F63;
                goto LABEL_56;
              case 8:
                uint64_t v80 = 0x6957726564726F62;
                unint64_t v78 = 0xEB00000000687464;
                break;
              case 9:
                uint64_t v82 = 0x726564726F62;
                goto LABEL_49;
              case 10:
                uint64_t v80 = 0x756F72676B636162;
                unint64_t v78 = 0xEF726F6C6F43646ELL;
                break;
              case 11:
                uint64_t v80 = 0x704F776F64616873;
                unint64_t v78 = 0xED00007974696361;
                break;
              case 12:
                uint64_t v83 = 0x776F64616873;
LABEL_56:
                uint64_t v80 = v83 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
                unint64_t v78 = 0xEC00000073756964;
                break;
              case 13:
                uint64_t v80 = 0x664F776F64616873;
                unint64_t v78 = 0xEC00000074657366;
                break;
              case 14:
                uint64_t v82 = 0x776F64616873;
LABEL_49:
                uint64_t v80 = v82 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
                unint64_t v78 = 0xEB00000000726F6CLL;
                break;
              case 15:
                uint64_t v80 = 0x6150776F64616873;
                unint64_t v78 = 0xEA00000000006874;
                break;
              case 16:
                unint64_t v78 = 0xE700000000000000;
                uint64_t v80 = 0x737265746C6966;
                break;
              case 17:
                uint64_t v81 = "compositingFilter";
                goto LABEL_66;
              case 18:
                uint64_t v81 = "backgroundFilters";
                goto LABEL_66;
              case 19:
                uint64_t v80 = 0x6152646C756F6873;
                unint64_t v78 = 0xEF657A6972657473;
                break;
              case 20:
                uint64_t v80 = 0xD000000000000012;
                uint64_t v84 = "rasterizationScale";
                goto LABEL_71;
              case 21:
                unint64_t v78 = 0xE600000000000000;
                uint64_t v80 = 0x73646E756F62;
                break;
              case 22:
                uint64_t v80 = 0x6E6F697469736F70;
                break;
              case 23:
                unint64_t v78 = 0xE90000000000006ELL;
                uint64_t v80 = 0x6F697469736F507ALL;
                break;
              case 24:
                uint64_t v80 = 0x6F50726F68636E61;
                unint64_t v78 = 0xEC0000005A746E69;
                break;
              case 25:
                uint64_t v80 = 0x6F50726F68636E61;
                unint64_t v78 = 0xEB00000000746E69;
                break;
              case 26:
                uint64_t v80 = 0x726F66736E617274;
                unint64_t v78 = 0xE90000000000006DLL;
                break;
              case 27:
                uint64_t v81 = "sublayerTransform";
LABEL_66:
                unint64_t v78 = (unint64_t)(v81 - 32) | 0x8000000000000000;
                uint64_t v80 = 0xD000000000000011;
                break;
              case 28:
                uint64_t v80 = 0xD000000000000010;
                uint64_t v84 = "dynamicTransform";
LABEL_71:
                unint64_t v78 = (unint64_t)(v84 - 32) | 0x8000000000000000;
                break;
              default:
                break;
            }
            unint64_t v85 = 0xE800000000000000;
            uint64_t v86 = 0x73746E65746E6F63;
            switch(v62)
            {
              case 1:
                uint64_t v87 = 1952671058;
                goto LABEL_109;
              case 2:
                unint64_t v85 = 0xEE007265746E6543;
                if (v80 != 0x73746E65746E6F63) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 3:
                unint64_t v85 = 0xE700000000000000;
                if (v80 != 0x7974696361706FLL) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 4:
                if (v80 != 0x6E65646469487369) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 5:
                uint64_t v90 = 0x426F54736B73616DLL;
                uint64_t v91 = 0x73646E756FLL;
                goto LABEL_101;
              case 6:
                uint64_t v90 = 0x656C62756F447369;
                uint64_t v91 = 0x6465646953;
                goto LABEL_101;
              case 7:
                uint64_t v92 = 0x72656E726F63;
                goto LABEL_94;
              case 8:
                uint64_t v93 = 0x6957726564726F62;
                uint64_t v94 = 6845540;
                goto LABEL_104;
              case 9:
                uint64_t v89 = 0x726564726F62;
                goto LABEL_84;
              case 10:
                unint64_t v85 = 0xEF726F6C6F43646ELL;
                if (v80 != 0x756F72676B636162) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 11:
                uint64_t v90 = 0x704F776F64616873;
                uint64_t v91 = 0x7974696361;
LABEL_101:
                unint64_t v85 = v91 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
                if (v80 != v90) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 12:
                uint64_t v92 = 0x776F64616873;
LABEL_94:
                uint64_t v86 = v92 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
                uint64_t v87 = 1937074532;
                goto LABEL_109;
              case 13:
                uint64_t v86 = 0x664F776F64616873;
                uint64_t v87 = 1952805734;
                goto LABEL_109;
              case 14:
                uint64_t v89 = 0x776F64616873;
LABEL_84:
                uint64_t v93 = v89 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
                uint64_t v94 = 7499628;
                goto LABEL_104;
              case 15:
                unint64_t v85 = 0xEA00000000006874;
                if (v80 != 0x6150776F64616873) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 16:
                unint64_t v85 = 0xE700000000000000;
                if (v80 != 0x737265746C6966) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 17:
                uint64_t v88 = "compositingFilter";
                goto LABEL_112;
              case 18:
                uint64_t v88 = "backgroundFilters";
                goto LABEL_112;
              case 19:
                unint64_t v85 = 0xEF657A6972657473;
                if (v80 != 0x6152646C756F6873) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 20:
                uint64_t v86 = 0xD000000000000012;
                uint64_t v95 = "rasterizationScale";
                goto LABEL_121;
              case 21:
                unint64_t v85 = 0xE600000000000000;
                if (v80 != 0x73646E756F62) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 22:
                if (v80 != 0x6E6F697469736F70) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 23:
                unint64_t v85 = 0xE90000000000006ELL;
                if (v80 != 0x6F697469736F507ALL) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 24:
                uint64_t v86 = 0x6F50726F68636E61;
                uint64_t v87 = 1517579881;
LABEL_109:
                unint64_t v85 = v87 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
                if (v80 != v86) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 25:
                uint64_t v93 = 0x6F50726F68636E61;
                uint64_t v94 = 7630441;
LABEL_104:
                unint64_t v85 = v94 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
                if (v80 != v93) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 26:
                unint64_t v85 = 0xE90000000000006DLL;
                if (v80 != 0x726F66736E617274) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 27:
                uint64_t v88 = "sublayerTransform";
LABEL_112:
                unint64_t v85 = (unint64_t)(v88 - 32) | 0x8000000000000000;
                if (v80 != 0xD000000000000011) {
                  goto LABEL_126;
                }
                goto LABEL_123;
              case 28:
                uint64_t v86 = 0xD000000000000010;
                uint64_t v95 = "dynamicTransform";
LABEL_121:
                unint64_t v85 = (unint64_t)(v95 - 32) | 0x8000000000000000;
                goto LABEL_122;
              default:
LABEL_122:
                if (v80 != v86) {
                  goto LABEL_126;
                }
LABEL_123:
                if (v78 == v85)
                {
                  swift_bridgeObjectRelease_n();
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v159);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v162);
                }
                else
                {
LABEL_126:
                  char v96 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v159);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v162);
                  if ((v96 & 1) == 0) {
                    goto LABEL_36;
                  }
                }
                sub_10053974C(&v165, (uint64_t)&v162);
                uint64_t v97 = v168;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1006BB784(0, *((void *)v97 + 2) + 1, 1);
                  uint64_t v97 = v168;
                }
                unint64_t v99 = *((void *)v97 + 2);
                unint64_t v98 = *((void *)v97 + 3);
                if (v99 >= v98 >> 1)
                {
                  sub_1006BB784(v98 > 1, v99 + 1, 1);
                  uint64_t v97 = v168;
                }
                *((void *)v97 + 2) = v99 + 1;
                sub_10053974C(&v162, (uint64_t)&v97[5 * v99 + 4]);
                break;
            }
            goto LABEL_37;
          }
        }
        else
        {
          sub_1005498A4((uint64_t)&v165, (uint64_t)&v162);
        }
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v162);
LABEL_36:
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v165);
LABEL_37:
        v40 += 40;
        if (!--v63) {
          goto LABEL_31;
        }
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = v165;
    if (a3)
    {
LABEL_150:
      uint64_t v134 = type metadata accessor for TaskPriority();
      uint64_t v126 = (uint64_t)v147;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v147, 1, 1, v134);
      type metadata accessor for MainActor();
      uint64_t v135 = v146;
      uint64_t v136 = v148;
      sub_1005173A0(v146);
      uint64_t v138 = v149;
      uint64_t v137 = v150;
      sub_1005173A0(v149);
      uint64_t v139 = static MainActor.shared.getter();
      uint64_t v132 = swift_allocObject();
      *(void *)(v132 + 16) = v139;
      *(void *)(v132 + 24) = &protocol witness table for MainActor;
      *(void *)(v132 + 32) = v135;
      *(void *)(v132 + 40) = v136;
      *(void *)(v132 + 48) = v145;
      *(void *)(v132 + 56) = v37;
      *(void *)(v132 + 64) = v143;
      *(unsigned char *)(v132 + 72) = v144 & 1;
      *(void *)(v132 + 80) = v138;
      *(void *)(v132 + 88) = v137;
      *(void *)(v132 + 96) = v18;
      uint64_t v133 = &unk_101683FF8;
      goto LABEL_151;
    }
  }
  swift_release();
  uint64_t v125 = type metadata accessor for TaskPriority();
  uint64_t v126 = (uint64_t)v147;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v147, 1, 1, v125);
  type metadata accessor for MainActor();
  uint64_t v127 = v146;
  uint64_t v128 = v148;
  sub_1005173A0(v146);
  uint64_t v130 = v149;
  uint64_t v129 = v150;
  sub_1005173A0(v149);
  uint64_t v131 = static MainActor.shared.getter();
  uint64_t v132 = swift_allocObject();
  *(void *)(v132 + 16) = v131;
  *(void *)(v132 + 24) = &protocol witness table for MainActor;
  *(void *)(v132 + 32) = v127;
  *(void *)(v132 + 40) = v128;
  *(void *)(v132 + 48) = v37;
  *(void *)(v132 + 56) = v18;
  *(void *)(v132 + 64) = v130;
  *(void *)(v132 + 72) = v129;
  uint64_t v133 = &unk_101683FF0;
LABEL_151:
  sub_1005912D0(v126, (uint64_t)v133, v132);
  return swift_release();
}

double sub_100F60534()
{
  return sub_100F51DA0(*(void *)v0, *(double *)(v0 + 8));
}

double *sub_100F60540()
{
  return sub_100F593DC(*(void *)v0, (uint64_t (*)(uint64_t, double))sub_100F51DA0, *(double *)(v0 + 8));
}

double sub_100F6057C()
{
  return sub_100F51C8C(*(void *)v0, *(double *)(v0 + 8));
}

double *sub_100F60588()
{
  return sub_100F5B01C(*(void *)v0, *(double *)(v0 + 8));
}

uint64_t sub_100F60598(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v9 = v8;
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = v7;
    v10._object = v9;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v3 animationForKey:v11];

    if (!v12) {
      break;
    }
    if (__OFADD__(v6++, 1))
    {
      __break(1u);
      break;
    }
  }
  uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
  double v16 = v15;
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100F606DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v9[2] = type metadata accessor for MainActor();
  v9[3] = static MainActor.shared.getter();
  uint64_t v14 = (void *)swift_task_alloc();
  v9[4] = v14;
  *uint64_t v14 = v9;
  v14[1] = sub_10053DCA8;
  return sub_100F607EC(a4, a5, a6, a7, a8, v18 & 1, v19, a9);
}

uint64_t sub_100F607EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 680) = v13;
  *(void *)(v8 + 672) = a8;
  *(void *)(v8 + 664) = a7;
  *(unsigned char *)(v8 + 696) = a6;
  *(void *)(v8 + 656) = a5;
  *(void *)(v8 + 648) = a4;
  *(void *)(v8 + 640) = a3;
  *(void *)(v8 + 632) = a2;
  *(void *)(v8 + 624) = a1;
  type metadata accessor for MainActor();
  *(void *)(v8 + 688) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F608AC, v10, v9);
}

uint64_t sub_100F608AC()
{
  uint64_t v1 = v0[78];
  uint64_t v2 = swift_release();
  if (v1) {
    ((void (*)(uint64_t))v0[78])(v2);
  }
  if (*(void *)(v0[80] + 16))
  {
    if (qword_101670210 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_10171CC58;
    unint64_t v4 = *(void **)(qword_10171CC58 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink);
    if (v4)
    {
      id v5 = (id)qword_10171CC58;
      unsigned __int8 v6 = [v4 paused];
      id v7 = v5;
      if ((v6 & 1) == 0) {
        sub_100F817E8();
      }
    }
    else
    {
      id v8 = (id)qword_10171CC58;
    }
    sub_100F81488();
  }
  else
  {
    uint64_t v3 = 0;
  }
  sub_100822DF0(v0[81], (uint64_t)(v0 + 39));
  uint64_t v9 = v0[42];
  if (v9)
  {
    uint64_t v10 = v0[43];
    sub_10050F848(v0 + 39, v0[42]);
    double v11 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v10 + 24) + 8) + 40))(v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 39));
  }
  else
  {
    sub_100522F00((uint64_t)(v0 + 39), &qword_10167E120);
    double v11 = 0.0;
  }
  sub_100822DF0(v0[80], (uint64_t)(v0 + 19));
  uint64_t v12 = v0[22];
  if (v12)
  {
    uint64_t v13 = v0[23];
    sub_10050F848(v0 + 19, v0[22]);
    double v14 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v13 + 24) + 8) + 40))(v12);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 19));
  }
  else
  {
    sub_100522F00((uint64_t)(v0 + 19), &qword_10167E120);
    double v14 = 0.0;
  }
  char v15 = *((unsigned char *)v0 + 696);
  double v16 = CACurrentMediaTime();
  if (v15)
  {
    if (v16 > 0.0) {
      double v17 = v16;
    }
    else {
      double v17 = 0.0;
    }
  }
  else
  {
    double v17 = *((double *)v0 + 82);
    if (v16 > v17) {
      double v17 = v16;
    }
  }
  if (v3)
  {
    char v18 = (double *)v0[80];
    if (v11 > v14) {
      uint64_t v19 = 0;
    }
    else {
      uint64_t v19 = v0[83];
    }
    if (v11 > v14) {
      uint64_t v20 = 0;
    }
    else {
      uint64_t v20 = v0[84];
    }
    id v21 = v3;
    sub_100F81990(v18, v19, v20, v17, v14);
  }
  uint64_t v22 = self;
  [v22 begin];
  [v22 setAnimationDuration:v11];
  [v22 setDisableActions:1];
  if (v11 > v14)
  {
    uint64_t v23 = v0[84];
    uint64_t v24 = v0[83];
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v24;
    *(void *)(v25 + 24) = v23;
    v0[17] = sub_100E76E30;
    v0[18] = v25;
    v0[13] = _NSConcreteStackBlock;
    v0[14] = *(void *)"";
    v0[15] = sub_100679958;
    v0[16] = &unk_101534208;
    unint64_t v26 = _Block_copy(v0 + 13);
    sub_1005173A0(v24);
    swift_release();
    [v22 setCompletionBlock:v26];
    _Block_release(v26);
  }
  id v98 = v22;
  unint64_t v99 = v3;
  uint64_t v27 = v0[85];
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    uint64_t v29 = v0 + 29;
    uint64_t v30 = v0 + 64;
    id v109 = (id)(v27 + 32);
    swift_bridgeObjectRetain();
    uint64_t v31 = 0;
    uint64_t v106 = v28;
    while (1)
    {
      sub_1005498A4((uint64_t)v109 + 40 * v31, (uint64_t)(v0 + 24));
      uint64_t v33 = v0[27];
      uint64_t v34 = v0[28];
      sub_10050F848(v0 + 24, v33);
      (*(void (**)(uint64_t, uint64_t))(v34 + 88))(v33, v34);
      uint64_t v35 = v0[32];
      uint64_t v36 = v0[33];
      sub_10050F848(v29, v35);
      char v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 112))(v35, v36);
      if (v37 == 2)
      {
        uint64_t v32 = (uint64_t)v29;
      }
      else
      {
        char v38 = v37;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v29);
        if ((v38 & 1) == 0) {
          goto LABEL_38;
        }
        uint64_t v39 = v0[27];
        uint64_t v40 = v0[28];
        sub_10050F848(v0 + 24, v39);
        uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 64))(v39, v40);
        if (!v41) {
          goto LABEL_38;
        }
        uint64_t v42 = (void *)v41;
        uint64_t v43 = v0[27];
        uint64_t v44 = v0[28];
        sub_10050F848(v0 + 24, v43);
        (*(void (**)(uint64_t, uint64_t))(v44 + 88))(v43, v44);
        uint64_t v45 = v0[67];
        uint64_t v46 = v0[68];
        sub_10050F848(v30, v45);
        uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 48))(v45, v46);
        uint64_t v49 = v48;
        id v50 = [v42 animationKeys];
        if (v50)
        {
          uint64_t v51 = v50;
          uint64_t v52 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          uint64_t v52 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRetain();
        NSString v53 = sub_100F6BAFC(v52, v47, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v54 = *((void *)v53 + 2);
        if (v54)
        {
          swift_bridgeObjectRetain();
          uint64_t v55 = v53 + 5;
          do
          {
            swift_bridgeObjectRetain();
            NSString v56 = String._bridgeToObjectiveC()();
            [v42 removeAnimationForKey:v56];

            swift_bridgeObjectRelease();
            v55 += 2;
            --v54;
          }
          while (v54);
          swift_bridgeObjectRelease();
          uint64_t v29 = v0 + 29;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v30 = v0 + 64;
        uint64_t v28 = v106;
        uint64_t v32 = (uint64_t)(v0 + 64);
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v32);
LABEL_38:
      ++v31;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 24));
      if (v31 == v28)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v57 = v0[81];
  uint64_t v58 = *(void *)(v57 + 16);
  if (v58)
  {
    uint64_t v59 = v0 + 34;
    uint64_t v104 = v0 + 44;
    uint64_t v105 = (uint64_t)(v0 + 2);
    uint64_t v107 = v0 + 49;
    uint64_t v102 = v0 + 59;
    uint64_t v103 = (long long *)(v0 + 54);
    uint64_t v100 = v0 + 74;
    uint64_t v101 = v0 + 69;
    uint64_t v60 = v57 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1005498A4(v60, (uint64_t)v59);
      uint64_t v61 = v0[37];
      uint64_t v62 = v0[38];
      sub_10050F848(v59, v61);
      uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 64))(v61, v62);
      if (v63)
      {
        id v64 = (void *)v63;
        uint64_t v108 = v58;
        uint64_t v65 = v0[37];
        uint64_t v66 = v0[38];
        sub_10050F848(v59, v65);
        uint64_t v67 = v0[37];
        uint64_t v68 = v0[38];
        sub_10050F848(v59, v67);
        id v110 = v64;
        (*(void (**)(uint64_t, uint64_t))(v68 + 80))(v67, v68);
        uint64_t v69 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, double))(*(void *)(v66 + 8) + 8))(v105, v65, v17);
        uint64_t v70 = v64;
        sub_100522F00(v105, (uint64_t *)&unk_101684000);
        uint64_t v71 = v0[37];
        uint64_t v72 = v0[38];
        sub_10050F848(v59, v71);
        (*(void (**)(uint64_t, uint64_t))(v72 + 88))(v71, v72);
        uint64_t v73 = v0[47];
        uint64_t v74 = v0[48];
        sub_10050F848(v104, v73);
        uint64_t v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 48))(v73, v74);
        sub_100F60598(v75, v76);
        swift_bridgeObjectRelease();
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v104);
        NSString v77 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v70 addAnimation:v69 forKey:v77];

        uint64_t v78 = v0[37];
        uint64_t v79 = v0[38];
        sub_10050F848(v59, v78);
        (*(void (**)(uint64_t, uint64_t))(v79 + 88))(v78, v79);
        uint64_t v80 = v0[62];
        uint64_t v81 = v0[63];
        sub_10050F848(v102, v80);
        char v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 80))(v80, v81);
        sub_100822F30(v82, v70, (uint64_t)v103);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v102);
        if (v0[57])
        {
          sub_10053974C(v103, (uint64_t)v107);
          uint64_t v83 = v0[52];
          uint64_t v84 = v0[53];
          sub_10050F848(v107, v83);
          (*(void (**)(uint64_t, uint64_t))(v84 + 120))(v83, v84);
          uint64_t v85 = v0[77];
          if (v85)
          {
            uint64_t v86 = sub_10050F848(v100, v0[77]);
            uint64_t v87 = *(void *)(v85 - 8);
            uint64_t v88 = swift_task_alloc();
            (*(void (**)(uint64_t, void *, uint64_t))(v87 + 16))(v88, v86, v85);
            uint64_t v89 = _bridgeAnythingToObjectiveC<A>(_:)();
            (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v88, v85);
            swift_task_dealloc();
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v100);
          }
          else
          {
            uint64_t v89 = 0;
          }
          uint64_t v58 = v108;
          uint64_t v90 = v0[37];
          uint64_t v91 = v0[38];
          sub_10050F848(v59, v90);
          (*(void (**)(uint64_t, uint64_t))(v91 + 88))(v90, v91);
          uint64_t v92 = v0[72];
          uint64_t v93 = v0[73];
          sub_10050F848(v101, v92);
          char v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 80))(v92, v93);
          sub_1009FC740(v94);
          NSString v95 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v101);
          [v110 setValue:v89 forKey:v95];

          swift_unknownObjectRelease();
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v107);
        }
        else
        {

          sub_100522F00((uint64_t)v103, &qword_10167E120);
          uint64_t v58 = v108;
        }
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v59);
      v60 += 40;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
  }
  [v98 commit];

  char v96 = (uint64_t (*)(void))v0[1];
  return v96();
}

uint64_t sub_100F61390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v13;
  v8[4] = a6;
  v8[5] = a7;
  uint64_t v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for MainActor();
  v8[8] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F61438, v10, v9);
}

uint64_t sub_100F61438()
{
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  unsigned __int8 v6 = (void (*)(void))v0[2];
  swift_release();
  sub_100F614D0(v6, v5, v4, v3, v2, v1);
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

id sub_100F614D0(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1) {
    a1();
  }
  uint64_t v9 = self;
  [v9 begin];
  [v9 setDisableActions:1];
  uint64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    uint64_t v26 = a6;
    uint64_t v11 = a3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1005498A4(v11, (uint64_t)aBlock);
      double v14 = v33;
      char v15 = v34;
      sub_10050F848(aBlock, (uint64_t)v33);
      uint64_t v16 = (*((uint64_t (**)(void *, uint64_t (*)()))v15 + 8))(v14, v15);
      if (v16)
      {
        double v17 = (void *)v16;
        uint64_t v19 = v33;
        char v18 = v34;
        sub_10050F848(aBlock, (uint64_t)v33);
        (*((void (**)(void *__return_ptr, void *, uint64_t (*)()))v18 + 11))(v27, v19, v18);
        uint64_t v20 = v28;
        uint64_t v21 = v29;
        sub_10050F848(v27, v28);
        char v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 80))(v20, v21);
        sub_100822F30(v22, v17, (uint64_t)v30);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v27);
        if (v31)
        {
          sub_100522F00((uint64_t)v30, &qword_10167E120);
          uint64_t v12 = (uint64_t)v33;
          uint64_t v13 = (uint64_t)v34;
          sub_10050F848(aBlock, (uint64_t)v33);
          sub_100822BB0(v12, v13);
        }
        else
        {

          sub_100522F00((uint64_t)v30, &qword_10167E120);
        }
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
      v11 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    a6 = v26;
  }
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a5;
  *(void *)(v23 + 24) = a6;
  uint64_t v34 = sub_100E76E30;
  uint64_t v35 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  uint64_t v33 = &unk_101534258;
  uint64_t v24 = _Block_copy(aBlock);
  sub_1005173A0(a5);
  swift_release();
  [v9 setCompletionBlock:v24];
  _Block_release(v24);
  return [v9 commit];
}

double sub_100F61778(uint64_t a1, uint64_t a2)
{
  return sub_100F5EAD0(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

double *sub_100F61790()
{
  return sub_100F53E6C((uint64_t (*)(void, __n128))type metadata accessor for CRLSpringLayerAnimation, (uint64_t)&off_101534738, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100F617D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_10167AD08, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(void))&type metadata accessor for UUID);
}

double *sub_100F6180C(double *result, int64_t a2, char a3, unint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *(void *)(a4 + 16);
    if (v7 <= v8) {
      uint64_t v9 = *(void *)(a4 + 16);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2940);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if ((unint64_t)v10 < a4 || (unint64_t)v12 >= a4 + 32 + 24 * v8)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (double *)a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a4 + 16) = 0;
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6A198(0, v8, (unint64_t)v12, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100F61954(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC((uint64_t *)&unk_101693750);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = &_swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage + 4;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (void *)((char *)a4 + 4 * v8 + 32)) {
          memmove(v13, a4 + 4, 4 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100F6AF14(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100F61A64(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC((uint64_t *)&unk_10167AD18);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      v10[2] = v8;
      v10[3] = v12 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = &_swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage + 4;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (void *)((char *)a4 + 2 * v8 + 32)) {
          memmove(v13, a4 + 4, 2 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100F6AE28(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F61B70(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC((uint64_t *)&unk_101672610);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6A290(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100F61C80(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F61C98(a1, a2, a3, a4, &qword_1016A29F8);
}

void *sub_100F61C8C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F61C98(a1, a2, a3, a4, &qword_1016A2A00);
}

void *sub_100F61C98(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1005057FC(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size_2(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      double v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = &_swiftEmptyArrayStorage;
      double v14 = &_swiftEmptyArrayStorage + 4;
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100F6A758(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_100F61DA4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F61C98(a1, a2, a3, a4, &qword_1016A2A80);
}

void *sub_100F61DB0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F61C98(a1, a2, a3, a4, &qword_1016A2A10);
}

void *sub_100F61DBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2A20);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 112);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[14 * v8 + 4]) {
          memmove(v12, a4 + 4, 112 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = &_swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage + 4;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6B1F8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100F61EE8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F61C98(a1, a2, a3, a4, &qword_1016A2A28);
}

void *sub_100F61EF4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F61C98(a1, a2, a3, a4, &qword_1016A2A38);
}

void *sub_100F61F00(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2A48);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = &_swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage + 4;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6B110(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100F61FFC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2C98);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = &_swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage + 4;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100F6AA40(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100F6210C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F6453C(a1, a2, a3, a4, &qword_1016A2A58, (void (*)(void, int64_t, void *, void *))sub_100F6B000);
}

double *sub_100F6212C(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016791B8);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6A844(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F62254(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2C80);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6B8E8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F62364(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2C28, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
}

uint64_t sub_100F62398(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    char v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1005057FC(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  char v18 = (double *)swift_allocObject();
  size_t v19 = j__malloc_size_2(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  *((void *)v18 + 2) = v13;
  *((void *)v18 + 3) = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100F6D180(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

double *sub_100F62618(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A29B8);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6B308(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F62728(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F63C5C(a1, a2, a3, a4, &qword_1016A2B40, &qword_10167ADE8);
}

uint64_t sub_100F6273C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_10169B510, type metadata accessor for CRLBoardLibraryViewModel.Item, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

double *sub_100F62770(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F62F3C(a1, a2, a3, a4, &qword_10167C078, &qword_101674BC0);
}

uint64_t sub_100F62784(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016743E0, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
}

double *sub_100F627B8(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2918);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6A758(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F628C8(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2BE0);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6B7F0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F629F0(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F63360(a1, a2, a3, a4, &qword_10167AF30, (void (*)(void, int64_t, double *, double *))sub_100F6AA40);
}

void *sub_100F62A10(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F649E4(a1, a2, a3, a4, &qword_1016A2BD8, (void (*)(void, int64_t, void *, void *))sub_100F6B6F8);
}

double *sub_100F62A30(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F646DC(a1, a2, a3, a4, &qword_1016A2BD0);
}

uint64_t sub_100F62A44(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62A6C(a1, a2, a3, a4, &qword_101687AE8, (uint64_t *)&unk_10167BE70);
}

uint64_t sub_100F62A58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62A6C(a1, a2, a3, a4, &qword_1016A2BF0, (uint64_t *)&unk_10167BE90);
}

uint64_t sub_100F62A6C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1005057FC(a5);
  uint64_t v13 = *(void *)(sub_1005057FC(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (double *)swift_allocObject();
  size_t v17 = j__malloc_size_2(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  *((void *)v16 + 2) = v11;
  *((void *)v16 + 3) = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_1005057FC(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100F6CD48(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

double *sub_100F62CD8(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2AC0);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6B50C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F62E00(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2AB8);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6B414(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F62F28(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F62F3C(a1, a2, a3, a4, &qword_1016A2920, (uint64_t *)&unk_10167BDB0);
}

double *sub_100F62F3C(double *result, int64_t a2, char a3, double *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      uint64_t v12 = *((void *)a4 + 2);
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1005057FC(a5);
      uint64_t v13 = (double *)swift_allocObject();
      size_t v14 = j__malloc_size_2(v13);
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - 32) / 40);
      unint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      unint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6C140(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

double *sub_100F6306C(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F63080(a1, a2, a3, a4, &qword_1016A2960, &qword_101692F00);
}

double *sub_100F63080(double *result, int64_t a2, char a3, double *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      uint64_t v12 = *((void *)a4 + 2);
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1005057FC(a5);
      uint64_t v13 = (double *)swift_allocObject();
      size_t v14 = j__malloc_size_2(v13);
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - 32) / 48);
      unint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[6 * v11 + 4]) {
          memmove(v15, a4 + 4, 48 * v11);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      unint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6AD1C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F631B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_10167CFC0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

uint64_t sub_100F631E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_101673F18, (uint64_t (*)(void))&type metadata accessor for UICellAccessory, (uint64_t (*)(void))&type metadata accessor for UICellAccessory);
}

uint64_t sub_100F6321C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_10167AE40, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
}

uint64_t sub_100F63250(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_10167AF38, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
}

uint64_t sub_100F63284(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2980, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
}

uint64_t sub_100F632B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_101677078, type metadata accessor for CRLBoardPreviewImageCache.Item, type metadata accessor for CRLBoardPreviewImageCache.Item);
}

uint64_t sub_100F632EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_10167ADD0, type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLBoardIdentifier);
}

double *sub_100F63320(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F63360(a1, a2, a3, a4, &qword_101684108, (void (*)(void, int64_t, double *, double *))sub_100F6A650);
}

double *sub_100F63340(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F63360(a1, a2, a3, a4, &qword_1016A2B48, (void (*)(void, int64_t, double *, double *))sub_100F6C034);
}

double *sub_100F63360(double *result, int64_t a2, char a3, double *a4, uint64_t *a5, void (*a6)(void, int64_t, double *, double *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      int64_t v12 = *((void *)a4 + 2);
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      sub_1005057FC(a5);
      uint64_t v13 = (double *)swift_allocObject();
      int64_t v14 = j__malloc_size_2(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    a6(0, v11, v16, a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

double *sub_100F6347C(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_10169F038);
      int64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6AC24(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F635A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2B18, type metadata accessor for CRLBoardItemPeerSyncUpdate, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

double *sub_100F635D8(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F62F3C(a1, a2, a3, a4, &qword_1016A2B30, &qword_10169FE80);
}

uint64_t sub_100F635EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2AE8, type metadata accessor for CRLProto_Data, type metadata accessor for CRLProto_Data);
}

double *sub_100F63620(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_101685E90);
      int64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6C24C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F63730(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2C78);
      int64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6C340(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F63854(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F639D4(a1, a2, a3, a4, &qword_1016A2C68, &qword_1016A2C70);
}

uint64_t sub_100F63868(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2C60, (uint64_t (*)(void))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest, (uint64_t (*)(void))type metadata accessor for CRLBoardPreviewImageCacheAssetDownloadHelper.AssetDownloadRequest);
}

double *sub_100F6389C(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC((uint64_t *)&unk_10168D9A0);
      int64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6A758(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F639AC(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F62F3C(a1, a2, a3, a4, (uint64_t *)&unk_1016787E0, &qword_1016787A8);
}

double *sub_100F639C0(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F639D4(a1, a2, a3, a4, &qword_1016A2C48, &qword_101672BA0);
}

double *sub_100F639D4(double *result, int64_t a2, char a3, double *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      uint64_t v12 = *((void *)a4 + 2);
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1005057FC(a5);
      uint64_t v13 = (double *)swift_allocObject();
      int64_t v14 = j__malloc_size_2(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6C438(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

double *sub_100F63AF0(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2C38);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6AA40(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F63C00(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2B38, type metadata accessor for CRLBoardItemDeltaChange, type metadata accessor for CRLBoardItemDeltaChange);
}

double *sub_100F63C34(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F62F3C(a1, a2, a3, a4, &qword_1016A2600, (uint64_t *)&unk_10167BE40);
}

double *sub_100F63C48(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F63C5C(a1, a2, a3, a4, &qword_10167AFB8, &qword_10167BF10);
}

double *sub_100F63C5C(double *result, int64_t a2, char a3, double *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      uint64_t v12 = *((void *)a4 + 2);
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1005057FC(a5);
      uint64_t v13 = (double *)swift_allocObject();
      int64_t v14 = j__malloc_size_2(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6B9F4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

double *sub_100F63D78(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_10167AFB0);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6A954(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F63E88(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC((uint64_t *)&unk_10167BEF0);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6C540(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F63F98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2AD8, (uint64_t (*)(void))_s13ItemViewModelVMa, (uint64_t (*)(void))_s13ItemViewModelVMa);
}

uint64_t sub_100F63FCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_10168B1D8, (uint64_t (*)(void))_s15FilterViewModelVMa, (uint64_t (*)(void))_s15FilterViewModelVMa);
}

uint64_t sub_100F64000(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2BC0, type metadata accessor for CRLSELibraryViewModeItemNode, type metadata accessor for CRLSELibraryViewModeItemNode);
}

uint64_t sub_100F64034(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62A6C(a1, a2, a3, a4, &qword_10167CFC8, &qword_101677100);
}

uint64_t sub_100F64048(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2C90, (uint64_t (*)(void))type metadata accessor for CRLiOSBoardEntity, (uint64_t (*)(void))type metadata accessor for CRLiOSBoardEntity);
}

double *sub_100F6407C(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2C30);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6C638(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F6418C(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2C08);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6C72C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F642B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62A6C(a1, a2, a3, a4, &qword_1016A29D0, &qword_10167F0F0);
}

double *sub_100F642C8(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F639D4(a1, a2, a3, a4, &qword_1016A2C18, &qword_1016A2C20);
}

double *sub_100F642DC(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2B78);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (double *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6B110(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F643D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2B60, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

double *sub_100F6440C(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_101683898);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6AA40(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100F6451C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F6453C(a1, a2, a3, a4, &qword_1016A2CA8, (void (*)(void, int64_t, void *, void *))sub_100F6C83C);
}

void *sub_100F6453C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      sub_1005057FC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size_2(v13);
      long long v13[2] = v11;
      uint64_t v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[3 * v11 + 4]) {
          memmove(v15, a4 + 4, 24 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = &_swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage + 4;
      if (result) {
        goto LABEL_13;
      }
    }
    a6(0, v11, v15, a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F6466C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2AE0, (uint64_t (*)(void))&type metadata accessor for GridItem, (uint64_t (*)(void))&type metadata accessor for GridItem);
}

double *sub_100F646A0(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F639D4(a1, a2, a3, a4, &qword_1016A2BB0, (uint64_t *)&unk_10167BE80);
}

double *sub_100F646B4(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F62F3C(a1, a2, a3, a4, &qword_1016A2BF8, &qword_101699958);
}

double *sub_100F646C8(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F646DC(a1, a2, a3, a4, &qword_1016A2BE8);
}

double *sub_100F646DC(double *result, int64_t a2, char a3, double *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      uint64_t v10 = *((void *)a4 + 2);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1005057FC(a5);
      int64_t v11 = (double *)swift_allocObject();
      size_t v12 = j__malloc_size_2(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6B604(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F64810(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2B80, (uint64_t (*)(void))type metadata accessor for CRLSideStore.BoardLoadMarksColumn.Row, (uint64_t (*)(void))type metadata accessor for CRLSideStore.BoardLoadMarksColumn.Row);
}

uint64_t sub_100F64844(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62A6C(a1, a2, a3, a4, &qword_10168BF48, &qword_10168BF28);
}

uint64_t sub_100F64858(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62A6C(a1, a2, a3, a4, &qword_1016A2BA8, &qword_10168E300);
}

uint64_t sub_100F6486C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2BB8, (uint64_t (*)(void))&type metadata accessor for AttributedString, (uint64_t (*)(void))&type metadata accessor for AttributedString);
}

double *sub_100F648A0(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_10168E340);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      size_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6C92C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100F649C4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100F649E4(a1, a2, a3, a4, &qword_1016A2AB0, (void (*)(void, int64_t, void *, void *))sub_100F6CA3C);
}

void *sub_100F649E4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      sub_1005057FC(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size_2(v13);
      long long v13[2] = v11;
      uint64_t v13[3] = 2 * ((uint64_t)(v14 - 32) / 56);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[7 * v11 + 4]) {
          memmove(v15, a4 + 4, 56 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = &_swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage + 4;
      if (result) {
        goto LABEL_13;
      }
    }
    a6(0, v11, v15, a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F64B18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2AC8, type metadata accessor for CRLProto_Path.Element, type metadata accessor for CRLProto_Path.Element);
}

uint64_t sub_100F64B4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2B90, type metadata accessor for CRLSpotlightManager.ChangeType, type metadata accessor for CRLSpotlightManager.ChangeType);
}

uint64_t sub_100F64B80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2AD0, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
}

uint64_t sub_100F64BB4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2B70, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

double *sub_100F64BE8(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A29C0);
      int64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6CB2C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F64CF8(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2970);
      int64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6CC38(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F64E18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2C40, (uint64_t (*)(void))type metadata accessor for CRLAssetAddress, (uint64_t (*)(void))type metadata accessor for CRLAssetAddress);
}

uint64_t sub_100F64E4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A29A0, (uint64_t (*)(void))&type metadata accessor for PKStroke, (uint64_t (*)(void))&type metadata accessor for PKStroke);
}

double *sub_100F64E80(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F65144(a1, a2, a3, a4, &qword_10167ADD8);
}

uint64_t sub_100F64E94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62A6C(a1, a2, a3, a4, &qword_1016A2B58, &qword_10169B548);
}

uint64_t sub_100F64EA8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2B50, (uint64_t (*)(void))&type metadata accessor for Notification, (uint64_t (*)(void))&type metadata accessor for Notification);
}

double *sub_100F64EDC(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2A98);
      int64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6AB2C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F65008(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2B28);
      int64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6CF90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F65130(double *a1, int64_t a2, char a3, double *a4)
{
  return sub_100F65144(a1, a2, a3, a4, &qword_1016A2B20);
}

double *sub_100F65144(double *result, int64_t a2, char a3, double *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      uint64_t v10 = *((void *)a4 + 2);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1005057FC(a5);
      size_t v11 = (double *)swift_allocObject();
      int64_t v12 = j__malloc_size_2(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * (v13 >> 5);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      size_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
          memmove(v14, a4 + 4, 32 * v9);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6CEA0(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

double *sub_100F65260(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_10167ACE8);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6D088(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F65384(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F62398(a1, a2, a3, a4, &qword_1016A2B10, type metadata accessor for CRLSyncActivity, type metadata accessor for CRLSyncActivity);
}

double *sub_100F653B8(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2B00);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size_2(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100F6D2DC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F654E0(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016A2CA0);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6A954(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_100F655F0(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1005057FC(&qword_1016803B8);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size_2(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_100F6AA40(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F65700(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC((uint64_t *)&unk_101672610);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6586C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_10167AD08, (uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_100F6588C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_1016803B8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F659EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_10167AF30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F65B4C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_100F67BF0(a1, a2, a3, a4, &qword_1016A2A08);
}

uint64_t sub_100F65B58(char a1, int64_t a2, char a3, char *a4)
{
  return sub_100F65B88(a1, a2, a3, a4, &qword_1016A2A88);
}

uint64_t sub_100F65B64(char a1, int64_t a2, char a3, char *a4)
{
  return sub_100F65B88(a1, a2, a3, a4, &qword_1016A2A18);
}

uint64_t sub_100F65B70(char a1, int64_t a2, char a3, char *a4)
{
  return sub_100F65B88(a1, a2, a3, a4, &qword_1016A2A30);
}

uint64_t sub_100F65B7C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_100F65B88(a1, a2, a3, a4, &qword_1016A2A40);
}

uint64_t sub_100F65B88(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_1005057FC(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size_2(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }
  size_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F65CE4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_1016A2A50);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_2(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F65E34(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC((uint64_t *)&unk_101693750);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F65F94(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67FC4(a1, a2, a3, a4, &qword_1016A2B98, &qword_1016A2BA0);
}

uint64_t sub_100F65FA8(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67FC4(a1, a2, a3, a4, &qword_1016A2A90, &qword_101676C80);
}

uint64_t sub_100F65FBC(char a1, int64_t a2, char a3, double *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_101692EF0);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1005057FC(&qword_101674580);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F66148(char a1, int64_t a2, char a3, double *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_1016A2C88);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size_2(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0.0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1005057FC(&qword_101674828);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F662F0(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67FC4(a1, a2, a3, a4, &qword_1016A2968, (uint64_t *)&unk_101674480);
}

uint64_t sub_100F66304(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_10169B510, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_100F66324(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_1016A2BD8);
    uint64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size_2(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (char *)(v10 + 4);
  unint64_t v13 = (char *)(a4 + 32);
  size_t v14 = 56 * v8;
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F664A4(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67A54(a1, a2, a3, a4, &qword_1016A29E8, &qword_1016A29F0);
}

uint64_t sub_100F664B8(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (char *)(v10 + 4);
  size_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F66628(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F66770(a1, a2, a3, a4, &qword_1016A2920, (uint64_t *)&unk_10167BDB0);
}

uint64_t sub_100F6663C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2988, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
}

uint64_t sub_100F6665C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2990, type metadata accessor for CRLProto_ObjectInfo.AssetReference);
}

uint64_t sub_100F6667C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2998, type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t sub_100F6669C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2BC8, (uint64_t (*)(void))&type metadata accessor for ImagePlaygroundConcept);
}

uint64_t sub_100F666BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016743E0, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_100F666DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2B18, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

uint64_t sub_100F666FC(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_100F67430(a1, a2, a3, a4, &qword_1016A29F8);
}

uint64_t sub_100F66708(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67A54(a1, a2, a3, a4, &qword_1016A2C50, &qword_1016A2C58);
}

uint64_t sub_100F6671C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_10167ADD0, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100F6673C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2AE8, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100F6675C(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F66770(a1, a2, a3, a4, (uint64_t *)&unk_1016787E0, &qword_1016787A8);
}

uint64_t sub_100F66770(char a1, int64_t a2, char a3, double *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *((void *)a4 + 3);
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = *((void *)a4 + 2);
  if (v10 <= v11) {
    uint64_t v12 = *((void *)a4 + 2);
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_1005057FC(a5);
    unint64_t v13 = (double *)swift_allocObject();
    size_t v14 = j__malloc_size_2(v13);
    *((void *)v13 + 2) = v11;
    *((void *)v13 + 3) = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0.0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_1005057FC(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F66918(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_10167AFB0);
    int64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (char *)(v10 + 4);
  size_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F66A78(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67FC4(a1, a2, a3, a4, &qword_10167AFB8, &qword_10167BF10);
}

uint64_t sub_100F66A8C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2AD8, (uint64_t (*)(void))_s13ItemViewModelVMa);
}

uint64_t sub_100F66AAC(char a1, int64_t a2, char a3, double *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_101689848);
    int64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1005057FC(&qword_10167B270);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F66C38(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_1016A2A60);
    int64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (char *)(v10 + 4);
  unint64_t v14 = (char *)(a4 + 32);
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F66DA0(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_1016A2A68);
    int64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size_2(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  unint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F66F28(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_100F66F50(a1, a2, a3, a4, &qword_1016A2A70);
}

uint64_t sub_100F66F3C(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_100F66F50(a1, a2, a3, a4, &qword_1016A2A78);
}

uint64_t sub_100F66F50(char a1, int64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *(void *)(a4 + 24);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v8 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_1005057FC(a5);
    size_t v11 = (double *)swift_allocObject();
    int64_t v12 = j__malloc_size_2(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = _swiftEmptyArrayStorage;
  }
  unint64_t v14 = (char *)(v11 + 4);
  size_t v15 = (char *)(a4 + 32);
  if (a1)
  {
    if (v11 != (double *)a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F670C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_10167AF40, (uint64_t (*)(void))&type metadata accessor for IntentFile);
}

uint64_t sub_100F670E0(char a1, int64_t a2, char a3, double *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_101683890);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1005057FC(&qword_1016A2B88);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6726C(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67294(a1, a2, a3, a4, &qword_1016A29D8, &qword_1016A29E0);
}

uint64_t sub_100F67280(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67294(a1, a2, a3, a4, &qword_1016A2AF0, &qword_1016A2AF8);
}

uint64_t sub_100F67294(char a1, int64_t a2, char a3, double *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *((void *)a4 + 3);
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = *((void *)a4 + 2);
  if (v10 <= v11) {
    uint64_t v12 = *((void *)a4 + 2);
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_1005057FC(a5);
    unint64_t v13 = (double *)swift_allocObject();
    int64_t v14 = j__malloc_size_2(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 1;
    }
    *((void *)v13 + 2) = v11;
    *((void *)v13 + 3) = 2 * (v15 >> 5);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 32 * v11) {
      memmove(v13 + 4, a4 + 4, 32 * v11);
    }
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 32 * v11 || v16 >= v17 + 32 * v11)
  {
    sub_1005057FC(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F67424(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_100F67430(a1, a2, a3, a4, &qword_101682810);
}

uint64_t sub_100F67430(char a1, int64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *(void *)(a4 + 24);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *(void *)(a4 + 16);
  if (v8 <= v9) {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_1005057FC(a5);
    uint64_t v11 = (double *)swift_allocObject();
    int64_t v12 = j__malloc_size_2(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  int64_t v14 = (char *)(v11 + 4);
  uint64_t v15 = (char *)(a4 + 32);
  size_t v16 = 16 * v9;
  if (a1)
  {
    if (v11 != (double *)a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F67588(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_10167AE90);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  int64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F676F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2C00, (uint64_t (*)(void))&type metadata accessor for CKSyncEngine.PendingDatabaseChange);
}

uint64_t sub_100F67714(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2B80, (uint64_t (*)(void))type metadata accessor for CRLSideStore.BoardLoadMarksColumn.Row);
}

uint64_t sub_100F67734(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67A54(a1, a2, a3, a4, &qword_1016A2AA0, &qword_1016A2AA8);
}

uint64_t sub_100F67748(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A2B90, type metadata accessor for CRLSpotlightManager.ChangeType);
}

uint64_t sub_100F67768(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC((uint64_t *)&unk_10167AD18);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  int64_t v14 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F678C4(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_10167ADD8);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  int64_t v14 = (char *)(a4 + 32);
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != (double *)a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F67A2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F67D70(a1, a2, a3, a4, &qword_1016A2B68, (uint64_t *)&unk_101674740);
}

uint64_t sub_100F67A40(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67A54(a1, a2, a3, a4, &qword_1016A2BB0, (uint64_t *)&unk_10167BE80);
}

uint64_t sub_100F67A54(char a1, int64_t a2, char a3, double *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *((void *)a4 + 3);
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = *((void *)a4 + 2);
  if (v10 <= v11) {
    uint64_t v12 = *((void *)a4 + 2);
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_1005057FC(a5);
    uint64_t v13 = (double *)swift_allocObject();
    int64_t v14 = j__malloc_size_2(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    *((void *)v13 + 2) = v11;
    *((void *)v13 + 3) = 2 * (v15 >> 4);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11) {
      memmove(v13 + 4, a4 + 4, 16 * v11);
    }
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    sub_1005057FC(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F67BE4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_100F67BF0(a1, a2, a3, a4, &qword_1016A2B08);
}

uint64_t sub_100F67BF0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    sub_1005057FC(a5);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size_2(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v11 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F67D3C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_1016A29A0, (uint64_t (*)(void))&type metadata accessor for PKStroke);
}

uint64_t sub_100F67D5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F67D70(a1, a2, a3, a4, &qword_1016A2B58, &qword_10169B548);
}

uint64_t sub_100F67D70(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1005057FC(a5);
  uint64_t v13 = *(void *)(sub_1005057FC(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (double *)swift_allocObject();
  size_t v17 = j__malloc_size_2(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  *((void *)v16 + 2) = v11;
  *((void *)v16 + 3) = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_1005057FC(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = a4 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || (unint64_t)v21 >= v22 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = v22 + v23;
  if (v22 >= (unint64_t)v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F67FB0(char a1, int64_t a2, char a3, double *a4)
{
  return sub_100F67FC4(a1, a2, a3, a4, &qword_1016A29A8, &qword_1016A29B0);
}

uint64_t sub_100F67FC4(char a1, int64_t a2, char a3, double *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *((void *)a4 + 3);
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = *((void *)a4 + 2);
  if (v10 <= v11) {
    uint64_t v12 = *((void *)a4 + 2);
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_1005057FC(a5);
    uint64_t v13 = (double *)swift_allocObject();
    int64_t v14 = j__malloc_size_2(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    *((void *)v13 + 2) = v11;
    *((void *)v13 + 3) = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0.0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_1005057FC(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F68154(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100F68174(a1, a2, a3, a4, &qword_101677078, type metadata accessor for CRLBoardPreviewImageCache.Item);
}

uint64_t sub_100F68174(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1005057FC(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (double *)swift_allocObject();
  size_t v17 = j__malloc_size_2(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  *((void *)v16 + 2) = v11;
  *((void *)v16 + 3) = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = a4 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || (unint64_t)v21 >= v22 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = v22 + v23;
  if (v22 >= (unint64_t)v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F683BC(char a1, int64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_10167ACE8);
    int64_t v10 = (double *)swift_allocObject();
    size_t v11 = j__malloc_size_2(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = (char *)(v10 + 4);
  uint64_t v13 = (char *)(a4 + 32);
  if (a1)
  {
    if (v10 != (double *)a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *(void *)(a4 + 16) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F68544(unint64_t a1)
{
  return sub_100F62398(0, *(void *)(a1 + 16), 0, a1, &qword_1016A2C28, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
}

double *sub_100F6859C(uint64_t a1)
{
  return sub_100F628C8(0, *(void *)(a1 + 16), 0, (double *)a1);
}

double *sub_100F685B0(uint64_t a1)
{
  return sub_100F646DC(0, *(void *)(a1 + 16), 0, (double *)a1, &qword_1016A2BD0);
}

uint64_t sub_100F685E8(unint64_t a1)
{
  return sub_100F62A6C(0, *(void *)(a1 + 16), 0, a1, &qword_101687AE8, (uint64_t *)&unk_10167BE70);
}

double *sub_100F68620(uint64_t a1)
{
  return sub_100F62F3C(0, *(void *)(a1 + 16), 0, (double *)a1, &qword_1016A2920, (uint64_t *)&unk_10167BDB0);
}

uint64_t sub_100F68658(unint64_t a1)
{
  return sub_100F62398(0, *(void *)(a1 + 16), 0, a1, &qword_10167AD08, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(void))&type metadata accessor for UUID);
}

double *sub_100F686B0(uint64_t a1)
{
  return sub_100F63730(0, *(void *)(a1 + 16), 0, (double *)a1);
}

uint64_t sub_100F686C4(unint64_t a1)
{
  return sub_100F62398(0, *(void *)(a1 + 16), 0, a1, &qword_10167ADD0, type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100F6871C(unint64_t a1)
{
  return sub_100F62398(0, *(void *)(a1 + 16), 0, a1, &qword_1016A2AD8, (uint64_t (*)(void))_s13ItemViewModelVMa, (uint64_t (*)(void))_s13ItemViewModelVMa);
}

uint64_t sub_100F68774(unint64_t a1)
{
  return sub_100F62398(0, *(void *)(a1 + 16), 0, a1, &qword_10169B510, type metadata accessor for CRLBoardLibraryViewModel.Item, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

void *sub_100F687CC(void *a1)
{
  return sub_100F6453C(0, a1[2], 0, a1, &qword_1016A2CA8, (void (*)(void, int64_t, void *, void *))sub_100F6C83C);
}

uint64_t sub_100F68810(unint64_t a1)
{
  return sub_100F62398(0, *(void *)(a1 + 16), 0, a1, &qword_10167AE40, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
}

uint64_t sub_100F68868(unint64_t a1)
{
  return sub_100F62A6C(0, *(void *)(a1 + 16), 0, a1, &qword_1016A2BA8, &qword_10168E300);
}

uint64_t sub_100F688A0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

double *sub_100F6891C(uint64_t a1)
{
  return sub_100F654E0(0, *(void *)(a1 + 16), 0, (double *)a1);
}

Swift::Int sub_100F68930(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100F69F94(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100F6899C(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100F6899C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  Swift::Int v4 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_134;
    }
    if (v4) {
      return sub_100F6924C(0, v4, 1, v3);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_142;
  }
  Swift::Int v113 = result;
  if (v4 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    id v112 = _swiftEmptyArrayStorage;
    if (v4 != 1)
    {
      unint64_t v11 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_100:
      uint64_t v103 = v9;
      if (v11 >= 2)
      {
        uint64_t v104 = *v3;
        do
        {
          unint64_t v105 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_129;
          }
          if (!v104) {
            goto LABEL_141;
          }
          uint64_t v106 = v103;
          double v107 = v103[2 * v105 + 4];
          double v108 = v103[2 * v11 + 3];
          sub_100F693D8((char *)(v104 + 40 * *(void *)&v107), (char *)(v104 + 40 * *(void *)&v103[2 * v11 + 2]), v104 + 40 * *(void *)&v108, __dst);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v108 < *(uint64_t *)&v107) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v106 = sub_100F69F28((uint64_t)v106);
          }
          if (v105 >= *((void *)v106 + 2)) {
            goto LABEL_131;
          }
          id v109 = &v106[2 * v105 + 4];
          *id v109 = v107;
          v109[1] = v108;
          unint64_t v110 = *((void *)v106 + 2);
          if (v11 > v110) {
            goto LABEL_132;
          }
          memmove(&v106[2 * v11 + 2], &v106[2 * v11 + 4], 16 * (v110 - v11));
          uint64_t v103 = v106;
          *((void *)v106 + 2) = v110 - 1;
          unint64_t v11 = v110 - 1;
        }
        while (v110 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      v112[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v119 = v1;
  }
  else
  {
    uint64_t v119 = v1;
    uint64_t v7 = v6 >> 1;
    sub_1005057FC((uint64_t *)&unk_10167BDB0);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    id v112 = (double *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v12 = v10++;
    if (v10 < v4)
    {
      uint64_t v13 = *v3;
      sub_1005498A4(*v3 + 40 * v10, (uint64_t)&v123);
      sub_1005498A4(v13 + 40 * v12, (uint64_t)v120);
      uint64_t v15 = v124;
      uint64_t v14 = v125;
      sub_10050F848(&v123, v124);
      double v16 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v14 + 24) + 8) + 8))(v15);
      uint64_t v18 = v121;
      uint64_t v17 = v122;
      sub_10050F848(v120, v121);
      double v19 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v17 + 24) + 8) + 8))(v18);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v120);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v123);
      Swift::Int v10 = v12 + 2;
      uint64_t v114 = v13;
      if (v12 + 2 < v4)
      {
        uint64_t v20 = v13 + 40 * v12 + 40;
        while (1)
        {
          uint64_t v21 = v20 + 40;
          sub_1005498A4(v20 + 40, (uint64_t)&v123);
          sub_1005498A4(v20, (uint64_t)v120);
          uint64_t v23 = v124;
          uint64_t v22 = v125;
          sub_10050F848(&v123, v124);
          double v24 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v22 + 24) + 8) + 8))(v23);
          uint64_t v26 = v121;
          uint64_t v25 = v122;
          sub_10050F848(v120, v121);
          LODWORD(v25) = v24 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v25 + 24) + 8) + 8))(v26);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v120);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v123);
          if (v16 < v19 == v25) {
            break;
          }
          ++v10;
          uint64_t v20 = v21;
          if (v4 == v10)
          {
            Swift::Int v10 = v4;
            break;
          }
        }
      }
      if (v16 < v19)
      {
        if (v10 < v12) {
          goto LABEL_135;
        }
        if (v12 < v10)
        {
          Swift::Int v111 = v4;
          uint64_t v27 = 40 * v10 - 40;
          uint64_t v28 = 40 * v12;
          Swift::Int v29 = v12;
          Swift::Int v30 = v10;
          Swift::Int v115 = v29;
          do
          {
            if (v29 != --v30)
            {
              if (!v114) {
                goto LABEL_140;
              }
              uint64_t v31 = v114 + v28;
              sub_10053974C((long long *)(v114 + v28), (uint64_t)&v123);
              uint64_t v32 = *(void *)(v114 + v27 + 32);
              long long v33 = *(_OWORD *)(v114 + v27 + 16);
              *(_OWORD *)uint64_t v31 = *(_OWORD *)(v114 + v27);
              *(_OWORD *)(v31 + 16) = v33;
              *(void *)(v31 + 32) = v32;
              sub_10053974C(&v123, v114 + v27);
            }
            ++v29;
            v27 -= 40;
            v28 += 40;
          }
          while (v29 < v30);
          Swift::Int v12 = v115;
          Swift::Int v4 = v111;
        }
      }
    }
    if (v10 >= v4) {
      goto LABEL_49;
    }
    if (__OFSUB__(v10, v12)) {
      goto LABEL_133;
    }
    if (v10 - v12 >= v113) {
      goto LABEL_49;
    }
    if (__OFADD__(v12, v113)) {
      goto LABEL_136;
    }
    Swift::Int v34 = v12;
    Swift::Int v35 = v12 + v113 >= v4 ? v4 : v12 + v113;
    Swift::Int v116 = v34;
    if (v35 < v34) {
      break;
    }
    if (v10 != v35)
    {
      uint64_t v36 = 40 * v10 - 40;
      do
      {
        Swift::Int v37 = v116;
        uint64_t v38 = v36;
        do
        {
          uint64_t v39 = *v3 + v38;
          sub_1005498A4(v39 + 40, (uint64_t)&v123);
          sub_1005498A4(v39, (uint64_t)v120);
          uint64_t v41 = v124;
          uint64_t v40 = v125;
          sub_10050F848(&v123, v124);
          double v42 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v40 + 24) + 8) + 8))(v41);
          uint64_t v44 = v121;
          uint64_t v43 = v122;
          sub_10050F848(v120, v121);
          double v45 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v43 + 24) + 8) + 8))(v44);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v120);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v123);
          if (v42 >= v45) {
            break;
          }
          uint64_t v46 = *v3;
          if (!*v3) {
            goto LABEL_138;
          }
          uint64_t v47 = v46 + v38;
          sub_10053974C((long long *)(v46 + v38 + 40), (uint64_t)&v123);
          long long v48 = *(_OWORD *)(v47 + 16);
          *(_OWORD *)(v47 + 40) = *(_OWORD *)v47;
          *(_OWORD *)(v47 + 56) = v48;
          *(void *)(v47 + 72) = *(void *)(v47 + 32);
          sub_10053974C(&v123, v47);
          v38 -= 40;
          ++v37;
        }
        while (v10 != v37);
        ++v10;
        v36 += 40;
      }
      while (v10 != v35);
      Swift::Int v10 = v35;
    }
    Swift::Int v12 = v116;
LABEL_49:
    if (v10 < v12) {
      goto LABEL_128;
    }
    Swift::Int v49 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_100F697E0(0, *((void *)v9 + 2) + 1, 1, (uint64_t)v9);
    }
    unint64_t v51 = *((void *)v9 + 2);
    unint64_t v50 = *((void *)v9 + 3);
    unint64_t v11 = v51 + 1;
    if (v51 >= v50 >> 1) {
      uint64_t v9 = sub_100F697E0((double *)(v50 > 1), v51 + 1, 1, (uint64_t)v9);
    }
    *((void *)v9 + 2) = v11;
    uint64_t v52 = v9 + 4;
    NSString v53 = &v9[2 * v51 + 4];
    *(void *)NSString v53 = v49;
    *((void *)v53 + 1) = v10;
    if (v51)
    {
      Swift::Int v117 = v10;
      while (1)
      {
        unint64_t v54 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v59 = &v52[2 * v11];
          uint64_t v60 = *((void *)v59 - 8);
          uint64_t v61 = *((void *)v59 - 7);
          BOOL v65 = __OFSUB__(v61, v60);
          uint64_t v62 = v61 - v60;
          if (v65) {
            goto LABEL_117;
          }
          uint64_t v64 = *((void *)v59 - 6);
          uint64_t v63 = *((void *)v59 - 5);
          BOOL v65 = __OFSUB__(v63, v64);
          uint64_t v57 = v63 - v64;
          char v58 = v65;
          if (v65) {
            goto LABEL_118;
          }
          unint64_t v66 = v11 - 2;
          uint64_t v67 = &v52[2 * v11 - 4];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v65 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v65) {
            goto LABEL_120;
          }
          BOOL v65 = __OFADD__(v57, v70);
          uint64_t v71 = v57 + v70;
          if (v65) {
            goto LABEL_123;
          }
          if (v71 >= v62)
          {
            uint64_t v89 = &v52[2 * v54];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v65 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v65) {
              goto LABEL_127;
            }
            BOOL v82 = v57 < v92;
            goto LABEL_87;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v83 = *((void *)v9 + 4);
            uint64_t v84 = *((void *)v9 + 5);
            BOOL v65 = __OFSUB__(v84, v83);
            uint64_t v76 = v84 - v83;
            char v77 = v65;
            goto LABEL_81;
          }
          uint64_t v56 = *((void *)v9 + 4);
          uint64_t v55 = *((void *)v9 + 5);
          BOOL v65 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          char v58 = v65;
        }
        if (v58) {
          goto LABEL_119;
        }
        unint64_t v66 = v11 - 2;
        uint64_t v72 = &v52[2 * v11 - 4];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v75 = __OFSUB__(v73, v74);
        uint64_t v76 = v73 - v74;
        char v77 = v75;
        if (v75) {
          goto LABEL_122;
        }
        uint64_t v78 = &v52[2 * v54];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v65 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v65) {
          goto LABEL_125;
        }
        if (__OFADD__(v76, v81)) {
          goto LABEL_126;
        }
        if (v76 + v81 >= v57)
        {
          BOOL v82 = v57 < v81;
LABEL_87:
          if (v82) {
            unint64_t v54 = v66;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v77) {
          goto LABEL_121;
        }
        uint64_t v85 = &v52[2 * v54];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v65 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v65) {
          goto LABEL_124;
        }
        if (v88 < v76) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v93 = v54 - 1;
        if (v54 - 1 >= v11)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        char v94 = v3;
        uint64_t v95 = *v3;
        if (!*v3) {
          goto LABEL_139;
        }
        char v96 = v9;
        uint64_t v97 = &v52[2 * v93];
        uint64_t v98 = *(void *)v97;
        unint64_t v99 = v54;
        uint64_t v100 = &v52[2 * v54];
        double v101 = v100[1];
        sub_100F693D8((char *)(v95 + 40 * *(void *)v97), (char *)(v95 + 40 * *(void *)v100), v95 + 40 * *(void *)&v101, __dst);
        if (v119) {
          goto LABEL_97;
        }
        if (*(uint64_t *)&v101 < v98) {
          goto LABEL_114;
        }
        if (v99 > *((void *)v96 + 2)) {
          goto LABEL_115;
        }
        *(void *)uint64_t v97 = v98;
        v52[2 * v93 + 1] = v101;
        unint64_t v102 = *((void *)v96 + 2);
        if (v99 >= v102) {
          goto LABEL_116;
        }
        uint64_t v9 = v96;
        unint64_t v11 = v102 - 1;
        memmove(v100, v100 + 2, 16 * (v102 - 1 - v99));
        *((void *)v96 + 2) = v102 - 1;
        uint64_t v3 = v94;
        Swift::Int v10 = v117;
        if (v102 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v4 = v3[1];
    if (v10 >= v4)
    {
      uint64_t v2 = v119;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6924C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = result;
    uint64_t v8 = 40 * a3 - 40;
LABEL_5:
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t v11 = *a4 + v10;
      sub_1005498A4(v11 + 40, (uint64_t)&v24);
      sub_1005498A4(v11, (uint64_t)v21);
      uint64_t v13 = v25;
      uint64_t v12 = v26;
      sub_10050F848(&v24, v25);
      double v14 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v12 + 24) + 8) + 8))(v13);
      uint64_t v16 = v22;
      uint64_t v15 = v23;
      sub_10050F848(v21, v22);
      double v17 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v15 + 24) + 8) + 8))(v16);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v21);
      Swift::Int result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v24);
      if (v14 >= v17)
      {
LABEL_4:
        ++v5;
        v8 += 40;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v18 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v19 = v18 + v10;
      sub_10053974C((long long *)(v18 + v10 + 40), (uint64_t)&v24);
      long long v20 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)(v19 + 40) = *(_OWORD *)v19;
      *(_OWORD *)(v19 + 56) = v20;
      *(void *)(v19 + 72) = *(void *)(v19 + 32);
      Swift::Int result = sub_10053974C(&v24, v19);
      v10 -= 40;
      if (v5 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100F693D8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  Swift::Int v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  unint64_t v50 = __src;
  Swift::Int v49 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[40 * v11] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      uint64_t v26 = &v4[40 * v11];
      unint64_t v48 = (unint64_t)v26;
      unint64_t v50 = v6;
      if (__src < v6 && v10 >= 40)
      {
        unint64_t v27 = a3 - 40;
        while (1)
        {
          Swift::Int v30 = (char *)(v27 + 40);
          sub_1005498A4((uint64_t)(v26 - 40), (uint64_t)v45);
          uint64_t v31 = v6 - 40;
          sub_1005498A4((uint64_t)(v6 - 40), (uint64_t)v42);
          uint64_t v33 = v46;
          uint64_t v32 = v47;
          sub_10050F848(v45, v46);
          double v34 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v32 + 24) + 8) + 8))(v33);
          uint64_t v36 = v43;
          uint64_t v35 = v44;
          sub_10050F848(v42, v43);
          double v37 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v35 + 24) + 8) + 8))(v36);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v42);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v45);
          if (v34 >= v37)
          {
            uint64_t v38 = (char *)v48;
            uint64_t v26 = (char *)(v48 - 40);
            v48 -= 40;
            if (v30 < v38 || v27 >= (unint64_t)v38 || v30 != v38)
            {
              long long v39 = *(_OWORD *)v26;
              long long v40 = *((_OWORD *)v26 + 1);
              *(void *)(v27 + 32) = *((void *)v26 + 4);
              *(_OWORD *)unint64_t v27 = v39;
              *(_OWORD *)(v27 + 16) = v40;
            }
            uint64_t v31 = v6;
            if (v26 <= v4) {
              goto LABEL_40;
            }
          }
          else
          {
            if (v30 != v6 || v27 >= (unint64_t)v6)
            {
              long long v28 = *(_OWORD *)v31;
              long long v29 = *(_OWORD *)(v6 - 24);
              *(void *)(v27 + 32) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v27 = v28;
              *(_OWORD *)(v27 + 16) = v29;
            }
            v50 -= 40;
            uint64_t v26 = (char *)v48;
            if (v48 <= (unint64_t)v4) {
              goto LABEL_40;
            }
          }
          v27 -= 40;
          uint64_t v6 = v31;
          if (v31 <= __src) {
            goto LABEL_40;
          }
        }
      }
      goto LABEL_40;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    unint64_t v12 = (unint64_t)&v4[40 * v9];
    unint64_t v48 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        sub_1005498A4((uint64_t)v6, (uint64_t)v45);
        sub_1005498A4((uint64_t)v4, (uint64_t)v42);
        uint64_t v14 = v46;
        uint64_t v13 = v47;
        sub_10050F848(v45, v46);
        double v15 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v13 + 24) + 8) + 8))(v14);
        uint64_t v17 = v43;
        uint64_t v16 = v44;
        sub_10050F848(v42, v43);
        double v18 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v16 + 24) + 8) + 8))(v17);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v42);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v45);
        uint64_t v19 = v50;
        if (v15 >= v18)
        {
          uint64_t v23 = v49 + 40;
          if (v50 != v49 || v50 >= v23)
          {
            long long v24 = *(_OWORD *)v49;
            long long v25 = *((_OWORD *)v49 + 1);
            *((void *)v50 + 4) = *((void *)v49 + 4);
            _OWORD *v19 = v24;
            v19[1] = v25;
          }
          Swift::Int v49 = v23;
          unint64_t v20 = (unint64_t)v6;
        }
        else
        {
          unint64_t v20 = (unint64_t)(v6 + 40);
          if (v50 >= v6 && (unint64_t)v50 < v20 && v50 == v6)
          {
            uint64_t v19 = v6;
          }
          else
          {
            long long v21 = *(_OWORD *)v6;
            long long v22 = *((_OWORD *)v6 + 1);
            *((void *)v50 + 4) = *((void *)v6 + 4);
            _OWORD *v19 = v21;
            v19[1] = v22;
          }
        }
        unint64_t v50 = (char *)v19 + 40;
        Swift::Int v4 = v49;
        if ((unint64_t)v49 >= v12) {
          break;
        }
        uint64_t v6 = (char *)v20;
      }
      while (v20 < a3);
    }
LABEL_40:
    sub_100F699B0((void **)&v50, (const void **)&v49, &v48);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_100F697E0(double *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1005057FC(&qword_1016A2918);
    uint64_t v10 = (double *)swift_allocObject();
    int64_t v11 = j__malloc_size_2(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = (char *)(v10 + 4);
  uint64_t v14 = (char *)(a4 + 32);
  if (v5)
  {
    if (v10 != (double *)a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100F698DC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100F69C70(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for UUID);
}

char *sub_100F698F4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_100F699B0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

char *sub_100F69A7C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 3;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -4)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 2;
    if (result != v3 || result >= &v3[4 * v7])
    {
      return (char *)memmove(result, v3, 4 * v7);
    }
  }
  return result;
}

uint64_t sub_100F69B38(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100F69C70(a1, a2, a3, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
}

uint64_t sub_100F69B54(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100F69C70(a1, a2, a3, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_100F69B6C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100F69C70(a1, a2, a3, (uint64_t (*)(void))_s17CategoryViewModelVMa);
}

uint64_t sub_100F69B84(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100F69C70(a1, a2, a3, (uint64_t (*)(void))_s13ItemViewModelVMa);
}

char *sub_100F69B9C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_100F69C58(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100F69C70(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
}

uint64_t sub_100F69C70(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_100F69DB4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 63;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -64)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
    {
      return (char *)memmove(result, v3, v7 << 6);
    }
  }
  return result;
}

char *sub_100F69E70(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -32)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

double *sub_100F69F28(uint64_t a1)
{
  return sub_100F697E0(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100F69F3C(unint64_t a1)
{
  return sub_100F68174(0, *(void *)(a1 + 16), 0, a1, &qword_10167AD08, (uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_100F69F80(uint64_t a1)
{
  return sub_100F659EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100F69F94(uint64_t a1)
{
  return sub_100F66770(0, *(void *)(a1 + 16), 0, (double *)a1, &qword_1016A2920, (uint64_t *)&unk_10167BDB0);
}

uint64_t sub_100F69FCC(uint64_t a1)
{
  return sub_100F65E34(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100F69FE0(unint64_t a1)
{
  return sub_100F68174(0, *(void *)(a1 + 16), 0, a1, &qword_1016A2988, type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
}

uint64_t sub_100F6A024(unint64_t a1)
{
  return sub_100F68174(0, *(void *)(a1 + 16), 0, a1, &qword_10169B510, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_100F6A068(unint64_t a1)
{
  return sub_100F68174(0, *(void *)(a1 + 16), 0, a1, &qword_10167AE38, (uint64_t (*)(void))_s17CategoryViewModelVMa);
}

uint64_t sub_100F6A0AC(unint64_t a1)
{
  return sub_100F68174(0, *(void *)(a1 + 16), 0, a1, &qword_1016A2AD8, (uint64_t (*)(void))_s13ItemViewModelVMa);
}

uint64_t sub_100F6A0F0(uint64_t a1)
{
  return sub_100F66AAC(0, *(void *)(a1 + 16), 0, (double *)a1);
}

uint64_t sub_100F6A104(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100F6A118(unint64_t a1)
{
  return sub_100F68174(0, *(void *)(a1 + 16), 0, a1, &qword_10167AF38, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
}

uint64_t sub_100F6A15C(uint64_t a1)
{
  return sub_100F65700(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100F6A170(uint64_t a1)
{
  return sub_100F67588(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100F6A184(uint64_t a1)
{
  return sub_100F678C4(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100F6A198(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6A290(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_100F6A384(uint64_t a1, double a2)
{
  uint64_t result = _swiftEmptyArrayStorage;
  long long v28 = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = (void *)(a1 + 72);
    do
    {
      uint64_t v7 = *v6;
      long long v22 = *((_OWORD *)v6 - 1);
      uint64_t v8 = v22;
      sub_10050F848(v6 - 5, v22);
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, double))(v7 + 16);
      long long v24 = v22;
      uint64_t v25 = v7;
      sub_1005767BC((uint64_t *)&v23);
      v9(v8, v7, a2);
      long long v22 = v24;
      uint64_t v10 = v24;
      int64_t v11 = sub_10050F848(&v23, v24);
      long long v27 = v22;
      uint64_t v12 = sub_1005767BC((uint64_t *)&v26);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v12, v11, v10);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v23);
      if ((void)v27)
      {
        sub_10053974C(&v26, (uint64_t)&v23);
        sub_10053974C(&v23, (uint64_t)&v26);
        uint64_t v13 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v13 = sub_100F62F3C(0, *((void *)v13 + 2) + 1, 1, v13, &qword_10167C078, &qword_101674BC0);
          long long v28 = v13;
        }
        unint64_t v15 = *((void *)v13 + 2);
        unint64_t v14 = *((void *)v13 + 3);
        if (v15 >= v14 >> 1) {
          long long v28 = sub_100F62F3C((double *)(v14 > 1), v15 + 1, 1, v13, &qword_10167C078, &qword_101674BC0);
        }
        long long v16 = v27;
        uint64_t v17 = sub_1005231B4((uint64_t)&v26, v27);
        __chkstk_darwin(v17, v17);
        uint64_t v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v20 + 16))(v19);
        sub_100667930(v15, (uint64_t)v19, (uint64_t *)&v28, v16, *((uint64_t *)&v16 + 1));
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v26);
      }
      else
      {
        sub_100522F00((uint64_t)&v26, (uint64_t *)&unk_101683FE0);
      }
      v6 += 6;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v28;
  }
  return result;
}

uint64_t sub_100F6A650(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for ActivityType(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100F6A758(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6A844(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1005057FC((uint64_t *)&unk_10167BF00);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100F6A954(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100F6AA40(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6AB2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6AC24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6AD1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 48 * a1 + 32;
    unint64_t v7 = a3 + 48 * v5;
    if (v6 >= v7 || v6 + 48 * v5 <= a3)
    {
      sub_1005057FC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100F6AE28(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100F6AF14(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B000(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1005057FC((uint64_t *)&unk_101687BD0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100F6B110(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B1F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 112 * a1 + 32;
    unint64_t v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      sub_1005057FC(&qword_101686E98);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B308(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1005057FC(&qword_1016A27D0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B414(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B50C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B604(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B6F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B7F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B8E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1005057FC(&qword_101674820);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6B9F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_1005057FC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_100F6BAFC(double *result, uint64_t a2, void *a3)
{
  unint64_t v3 = *((void *)result + 2);
  if (v3)
  {
    unint64_t v6 = 0;
    unint64_t v7 = result + 5;
    uint64_t v8 = -(uint64_t)v3;
    uint64_t v18 = result + 5;
    unint64_t v19 = *((void *)result + 2);
    do
    {
      if (v6 <= v3) {
        unint64_t v9 = v3;
      }
      else {
        unint64_t v9 = v6;
      }
      uint64_t v10 = -(uint64_t)v9;
      for (unint64_t i = &v7[2 * v6++]; ; i += 2)
      {
        if (v10 + v6 == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v13 = *((void *)i - 1);
        uint64_t v12 = *(void *)i;
        swift_bridgeObjectRetain();
        v14._countAndFlagsBits = a2;
        v14._object = a3;
        if (String.hasPrefix(_:)(v14)) {
          break;
        }
        uint64_t result = (double *)swift_bridgeObjectRelease();
        ++v6;
        if (v8 + v6 == 1) {
          return _swiftEmptyArrayStorage;
        }
      }
      uint64_t result = (double *)swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (double *)sub_1006BB504(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
      }
      double v16 = _swiftEmptyArrayStorage[2];
      double v15 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v16 >= *(void *)&v15 >> 1) {
        uint64_t result = (double *)sub_1006BB504(*(void *)&v15 > 1uLL, *(void *)&v16 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[2 * *(void *)&v16];
      *((void *)v17 + 4) = v13;
      *((void *)v17 + 5) = v12;
      unint64_t v7 = v18;
      unint64_t v3 = v19;
    }
    while (v8 + v6);
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100F6BC54(uint64_t a1, void *a2, char a3)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    for (uint64_t i = a1 + 32; ; i += 40)
    {
      sub_1005498A4(i, (uint64_t)&v35);
      uint64_t v9 = v36;
      uint64_t v10 = v37;
      sub_10050F848(&v35, v36);
      uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 64))(v9, v10);
      if (!v11) {
        break;
      }
      uint64_t v12 = (void *)v11;
      sub_10054CE40();
      id v13 = a2;
      char v14 = static NSObject.== infix(_:_:)();

      sub_1005498A4((uint64_t)&v35, (uint64_t)&v32);
      if ((v14 & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v15 = v33;
      uint64_t v16 = v34;
      sub_10050F848(&v32, v33);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 88))(v29, v15, v16);
      uint64_t v17 = v30;
      uint64_t v18 = v31;
      sub_10050F848(v29, v30);
      char v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 80))(v17, v18);
      uint64_t v20 = sub_1009FC740(v19);
      uint64_t v22 = v21;
      if (v20 == sub_1009FC740(a3) && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v29);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v32);
LABEL_16:
        sub_10053974C(&v35, (uint64_t)&v32);
        long long v26 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB784(0, *((void *)v26 + 2) + 1, 1);
          long long v26 = v38;
        }
        unint64_t v28 = *((void *)v26 + 2);
        unint64_t v27 = *((void *)v26 + 3);
        if (v28 >= v27 >> 1)
        {
          sub_1006BB784(v27 > 1, v28 + 1, 1);
          long long v26 = v38;
        }
        *((void *)v26 + 2) = v28 + 1;
        sub_10053974C(&v32, (uint64_t)&v26[5 * v28 + 4]);
        goto LABEL_6;
      }
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v29);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v32);
      if (v25) {
        goto LABEL_16;
      }
LABEL_5:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v35);
LABEL_6:
      if (!--v5) {
        return v38;
      }
    }
    sub_1005498A4((uint64_t)&v35, (uint64_t)&v32);
LABEL_4:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v32);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_100F6BEE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLTweenLayerAnimation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100F6BF40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100F6BF50()
{
  return swift_release();
}

uint64_t sub_100F6BF5C()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100F6BFC4()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100F6C034(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1005057FC(&qword_1016791A8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6C140(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1005057FC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6C24C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6C340(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6C438(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_1005057FC(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6C540(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6C638(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6C72C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1005057FC(&qword_1016A2C10);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100F6C83C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6C92C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1005057FC(&qword_10168E348);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100F6CA3C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 56 * a1 + 32);
    size_t v6 = 56 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6CB2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1005057FC(&qword_1016A29C8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6CC38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1005057FC(&qword_1016A2978);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6CD48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_1005057FC(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6CEA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6CF90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6D088(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6D180(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6D2DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100F6D3D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_100F6D458()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_selectionStateSnapshots);
  if ([v1 count])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"snapshotSelectionState()", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLSelectionDispatcher.swift", 92, 2, 18, (uint64_t)"Expected selection state snapshots to be clear", 46, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v11) = 2;
    uint64_t v9 = "Expected selection state snapshots to be clear";
    uint64_t v10 = 46;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"snapshotSelectionState()", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLSelectionDispatcher.swift", 92, 2, 18);
  }
  [v1 removeAllObjects];
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_receivers), "allObjects"));
  sub_1005057FC(&qword_1016A2CE8);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_14;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      unint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      unint64_t v6 = *(void **)(v3 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    id v7 = [v6 selectionStateSnapshot];
    if (v7)
    {
      id v8 = v7;
      [v1 setObject:v8 forKey:v6];
    }
    swift_unknownObjectRelease();
  }
LABEL_14:

  swift_bridgeObjectRelease();
}

void sub_100F6D6E8(void *a1, char a2)
{
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_receivers), "allObjects"));
  sub_1005057FC(&qword_1016A2CE8);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_47:
LABEL_49:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_47;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v7 = 0;
    unint64_t v47 = v5;
    uint64_t v48 = OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_selectionStateSnapshots;
    uint64_t v50 = v6;
    unint64_t v51 = v5 & 0xC000000000000001;
    uint64_t v46 = a1;
    while (1)
    {
      if (v51)
      {
        id v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        id v8 = *(void **)(v5 + 8 * v7 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t v9 = (char *)[v8 selectionPathValidator];
      if (a2)
      {
        if (a2 == 1)
        {
          id v10 = [a1 persistableReverseSelectionPath];
          if (v10)
          {
            uint64_t v11 = v10;
            uint64_t Strong = swift_unknownObjectWeakLoadStrong();
            if (Strong)
            {
              unint64_t v13 = (void *)Strong;
              swift_beginAccess();
              type metadata accessor for UUID();
              swift_bridgeObjectRetain();
              Class isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              id v15 = [v13 resolveToSiblingsWithUuids:isa];

              type metadata accessor for CRLBoardItem(0);
              sub_10060A334();
              uint64_t v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

              id v17 = (id)sub_10060A798(v16, (uint64_t)v11);
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
              LOBYTE(v43) = 2;
              a1 = v46;
              unint64_t v5 = v47;
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29);
              id v31 = *(id *)&v9[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator];
              Class v32 = Set._bridgeToObjectiveC()().super.isa;
              id v17 = [v31 selectionPathForInfos:v32 Can't get selectionPath with a nil board 40 v43];
            }
            unint64_t v33 = (unint64_t)[a1 selectionFlags];
            id v34 = [a1 additionalReverseSelectionFlags];
            goto LABEL_34;
          }
        }
        else
        {
          id v25 = [a1 persistableForwardSelectionPath];
          if (v25)
          {
            uint64_t v11 = v25;
            uint64_t v26 = swift_unknownObjectWeakLoadStrong();
            if (v26)
            {
              unint64_t v27 = (void *)v26;
              swift_beginAccess();
              type metadata accessor for UUID();
              swift_bridgeObjectRetain();
              Class v28 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              id v29 = [v27 resolveToSiblingsWithUuids:v28];

              type metadata accessor for CRLBoardItem(0);
              sub_10060A334();
              uint64_t v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

              id v17 = (id)sub_10060A798(v30, (uint64_t)v11);
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
              LOBYTE(v45) = 2;
              a1 = v46;
              unint64_t v5 = v47;
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29);
              id v38 = *(id *)&v9[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator];
              Class v39 = Set._bridgeToObjectiveC()().super.isa;
              id v17 = [v38 selectionPathForInfos:v39];
            }
            unint64_t v33 = (unint64_t)[a1 selectionFlags];
            id v34 = [a1 additionalForwardSelectionFlags];
LABEL_34:
            unint64_t v40 = (unint64_t)v34;

            if (v33)
            {
              uint64_t v6 = v50;
              if ((v40 & ~v33) != 0) {
LABEL_38:
              }
                v33 |= v40;
            }
            else
            {
              uint64_t v6 = v50;
              if (v40) {
                goto LABEL_38;
              }
              unint64_t v33 = 0;
            }
LABEL_41:
            uint64_t v41 = (char *)v17;
            if ([v8 isPrimarySelectionPathReceiver])
            {
              [v8 dispatchSelectionPath:v41 withFlags:v33];

              swift_unknownObjectRelease();
            }
            else
            {
              id v42 = [*(id *)(v49 + v48) objectForKeyedSubscript:v8];
              [v8 validateSelectionStateUsing:v42];

              swift_unknownObjectRelease();
            }

            uint64_t v9 = v41;
            goto LABEL_6;
          }
        }
      }
      else
      {
        id v18 = [a1 persistableCommitSelectionPath];
        if (v18)
        {
          char v19 = v18;
          uint64_t v20 = swift_unknownObjectWeakLoadStrong();
          if (v20)
          {
            uint64_t v21 = (void *)v20;
            swift_beginAccess();
            type metadata accessor for UUID();
            swift_bridgeObjectRetain();
            Class v22 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v23 = [v21 resolveToSiblingsWithUuids:v22];

            type metadata accessor for CRLBoardItem(0);
            sub_10060A334();
            uint64_t v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

            id v17 = (id)sub_10060A798(v24, (uint64_t)v19);
            uint64_t v6 = v50;
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
            LOBYTE(v44) = 2;
            a1 = v46;
            unint64_t v5 = v47;
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29);
            id v35 = *(id *)&v9[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator];
            Class v36 = Set._bridgeToObjectiveC()().super.isa;
            id v17 = [v35 selectionPathForInfos:v36 "Can't get selectionPath with a nil board" 40 v44];
          }
        }
        else
        {
          id v17 = [a1 commitSelectionPath];
        }
        unint64_t v33 = (unint64_t)[a1 selectionFlags];
        unint64_t v37 = (unint64_t)[a1 additionalCommitSelectionFlags];
        if (v33)
        {
          if ((v37 & ~v33) == 0)
          {
            if (v17) {
              goto LABEL_41;
            }
            goto LABEL_5;
          }
LABEL_30:
          v33 |= v37;
          if (v17) {
            goto LABEL_41;
          }
          goto LABEL_5;
        }
        if (v37) {
          goto LABEL_30;
        }
        unint64_t v33 = 0;
        if (v17) {
          goto LABEL_41;
        }
      }
LABEL_5:
      swift_unknownObjectRelease();
LABEL_6:
      ++v7;

      if (v6 == v7) {
        goto LABEL_49;
      }
    }
  }
  __break(1u);
}

void sub_100F6DFD4()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_receivers), "allObjects"));
  sub_1005057FC(&qword_1016A2CE8);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = 0;
  unint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_selectionStateSnapshots);
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v6 = *(void **)(v2 + 8 * v4 + 32);
      swift_unknownObjectRetain();
    }
    ++v4;
    id v7 = [v5 objectForKeyedSubscript:v6];
    [v6 validateSelectionStateUsing:v7];
    swift_unknownObjectRelease();
  }
  while (v3 != v4);
LABEL_10:

  swift_bridgeObjectRelease();
}

id sub_100F6E23C()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLSelectionDispatcher();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLSelectionDispatcher()
{
  return self;
}

id sub_100F6E2E0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform23CRLCommandReorderScenes_actionString];
  uint64_t v4 = self;
  unint64_t v5 = v1;
  id v6 = [v4 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v6 localizedStringForKey:v7 value:v8 table:v9];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *uint64_t v3 = v11;
  v3[1] = v13;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform23CRLCommandReorderScenes_reorderedScenes] = a1;

  v15.receiver = v5;
  v15.Class super_class = (Class)type metadata accessor for CRLCommandReorderScenes();
  return [super init];
}

void sub_100F6E434(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_10103405C(a1, (uint64_t)&off_10152A280);
  if (!v4)
  {
    if (sub_100D0AF90(*(double **)(v3 + OBJC_IVAR____TtC8Freeform23CRLCommandReorderScenes_reorderedScenes)))
    {
      sub_101023724(a1, (uint64_t)&off_10152A280, a3);
    }
    else
    {
      if (qword_10166FAF8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v7 = (id)static OS_os_log.crlScenes;
      uint64_t v8 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Scene Reordering Failed.", 24, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
  }
}

uint64_t sub_100F6E58C()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100F6E5D0()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLCommandReorderScenes();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommandReorderScenes()
{
  return self;
}

uint64_t sub_100F6E678()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform23CRLCommandReorderScenes_actionString);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for CRLFileWriteAssetDownloadAlertViewController()
{
  uint64_t result = qword_1016A2D28;
  if (!qword_1016A2D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100F6E704()
{
  return swift_initClassMetadata2();
}

double *sub_100F6E744(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v43 = (char *)&v39 - v8;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v50 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v39 - v15;
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v48 = a1 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int64_t v49 = (unint64_t)(v22 + 63) >> 6;
  id v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v42 = v3;
  unint64_t v47 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v26 = a1;
  uint64_t result = (double *)swift_bridgeObjectRetain();
  int64_t v28 = 0;
  uint64_t v46 = _swiftEmptyArrayStorage;
  uint64_t v41 = v2;
  if (!v24) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v29 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  for (unint64_t i = v29 | (v28 << 6); ; unint64_t i = __clz(__rbit64(v32)) + (v28 << 6))
  {
    sub_100522E9C(*(void *)(v26 + 56) + *(void *)(v50 + 72) * i, (uint64_t)v20, (uint64_t *)&unk_101674520);
    sub_10051B3EC((uint64_t)v20, (uint64_t)v16, (uint64_t *)&unk_101674520);
    sub_100522E9C((uint64_t)v16, (uint64_t)v12, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101674520);
    if ((*v25)(v12, 1, v2) == 1)
    {
      uint64_t result = (double *)sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
      if (v24) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v45 = *v47;
      v45(v43, v12, v2);
      v45(v44, v43, v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v46 = (double *)sub_100F617D8(0, *((void *)v46 + 2) + 1, 1, (unint64_t)v46);
      }
      unint64_t v35 = *((void *)v46 + 2);
      unint64_t v34 = *((void *)v46 + 3);
      unint64_t v36 = v35 + 1;
      uint64_t v2 = v41;
      if (v35 >= v34 >> 1)
      {
        unint64_t v39 = *((void *)v46 + 2);
        unint64_t v40 = v35 + 1;
        id v38 = (double *)sub_100F617D8(v34 > 1, v35 + 1, 1, (unint64_t)v46);
        unint64_t v35 = v39;
        unint64_t v36 = v40;
        uint64_t v46 = v38;
      }
      unint64_t v37 = v46;
      *((void *)v46 + 2) = v36;
      uint64_t result = (double *)((uint64_t (*)(char *, char *, uint64_t))v45)((char *)v37+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v35, v44, v2);
      if (v24) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v31 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v31 >= v49) {
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v48 + 8 * v31);
    ++v28;
    if (!v32)
    {
      int64_t v28 = v31 + 1;
      if (v31 + 1 >= v49) {
        goto LABEL_29;
      }
      unint64_t v32 = *(void *)(v48 + 8 * v28);
      if (!v32)
      {
        int64_t v28 = v31 + 2;
        if (v31 + 2 >= v49) {
          goto LABEL_29;
        }
        unint64_t v32 = *(void *)(v48 + 8 * v28);
        if (!v32)
        {
          int64_t v28 = v31 + 3;
          if (v31 + 3 >= v49) {
            goto LABEL_29;
          }
          unint64_t v32 = *(void *)(v48 + 8 * v28);
          if (!v32) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v24 = (v32 - 1) & v32;
  }
  int64_t v33 = v31 + 4;
  if (v33 >= v49)
  {
LABEL_29:
    swift_release();
    return v46;
  }
  unint64_t v32 = *(void *)(v48 + 8 * v33);
  if (v32)
  {
    int64_t v28 = v33;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v28 >= v49) {
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v48 + 8 * v28);
    ++v33;
    if (v32) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100F6EBCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v31 = a1;
  uint64_t v3 = sub_1005057FC(&qword_1016A2E30);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016A2E38);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016A2E40);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v17 = sub_1005057FC(&qword_1016A2E48);
  sub_100F6EE68(v1, (uint64_t)&v6[*(int *)(v17 + 44)]);
  long long v32 = *(_OWORD *)v1;
  uint64_t v18 = *(void *)(v1 + 16);
  uint64_t v19 = *(void *)(v2 + 32);
  uint64_t v20 = *(void *)(v2 + 40);
  uint64_t v30 = *(void *)(v2 + 48);
  uint64_t v21 = *(void *)(v2 + 56);
  v29[0] = v20;
  v29[1] = v21;
  uint64_t v22 = (_OWORD *)swift_allocObject();
  long long v23 = *(_OWORD *)(v2 + 16);
  v22[1] = *(_OWORD *)v2;
  v22[2] = v23;
  long long v24 = *(_OWORD *)(v2 + 48);
  v22[3] = *(_OWORD *)(v2 + 32);
  v22[4] = v24;
  sub_100522E9C((uint64_t)v6, (uint64_t)v11, &qword_1016A2E30);
  id v25 = &v11[*(int *)(v8 + 44)];
  *(void *)id v25 = 0;
  *((void *)v25 + 1) = 0;
  *((void *)v25 + 2) = sub_100F711C4;
  *((void *)v25 + 3) = v22;
  sub_1009FA144((uint64_t)&v32);
  sub_1005173A0(v18);
  sub_1005173A0(v19);
  sub_1005173A0(v30);
  sub_100522F00((uint64_t)v6, &qword_1016A2E30);
  LOBYTE(v22) = static Edge.Set.all.getter();
  sub_100522E9C((uint64_t)v11, (uint64_t)v16, &qword_1016A2E38);
  uint64_t v26 = &v16[*(int *)(v13 + 44)];
  *uint64_t v26 = (char)v22;
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  v26[40] = 1;
  sub_100522F00((uint64_t)v11, &qword_1016A2E38);
  uint64_t v27 = v31;
  sub_100522E9C((uint64_t)v16, v31, &qword_1016A2E40);
  *(_WORD *)(v27 + *(int *)(sub_1005057FC(&qword_1016A2E50) + 36)) = 256;
  return sub_100522F00((uint64_t)v16, &qword_1016A2E40);
}

uint64_t sub_100F6EE68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v3 = sub_1005057FC(&qword_1016A2E58);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1005057FC(&qword_1016A2E60);
  __chkstk_darwin(v85, v7);
  uint64_t v91 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v84 = (uint64_t)&v71 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v90 = (uint64_t)&v71 - v14;
  uint64_t v15 = type metadata accessor for Divider();
  uint64_t v79 = *(void *)(v15 - 8);
  uint64_t v80 = v15;
  __chkstk_darwin(v15, v16);
  char v77 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1005057FC(&qword_1016A2E68);
  __chkstk_darwin(v75, v18);
  uint64_t v89 = (uint64_t)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v74 = (char *)&v71 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v92 = (uint64_t)&v71 - v25;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v26 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v28 = v27;
  char v30 = v29 & 1;
  static Font.headline.getter();
  uint64_t v31 = Text.font(_:)();
  uint64_t v86 = v32;
  uint64_t v87 = v31;
  int v76 = v33;
  uint64_t v88 = v34;
  swift_release();
  sub_1006A7D28(v26, v28, v30);
  swift_bridgeObjectRelease();
  LOBYTE(v26) = static Edge.Set.top.getter();
  char v35 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v26) {
    char v35 = Edge.Set.init(rawValue:)();
  }
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v36 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v38 = v37;
  char v40 = v39 & 1;
  static Font.body.getter();
  uint64_t v78 = Text.font(_:)();
  uint64_t v81 = v41;
  int v72 = v42;
  uint64_t v82 = v43;
  swift_release();
  sub_1006A7D28(v36, v38, v40);
  swift_bridgeObjectRelease();
  LOBYTE(v36) = static Edge.Set.top.getter();
  int v44 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v36) {
    int v44 = Edge.Set.init(rawValue:)();
  }
  uint64_t v45 = v77;
  Divider.init()();
  unsigned __int8 v46 = static Edge.Set.top.getter();
  unsigned __int8 v47 = static Edge.Set.leading.getter();
  char v48 = static Edge.Set.trailing.getter();
  char v49 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v46) {
    char v49 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v47) {
    char v49 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  char v50 = Edge.Set.init(rawValue:)();
  int v73 = v44;
  if (v50 != v48) {
    char v49 = Edge.Set.init(rawValue:)();
  }
  uint64_t v52 = v79;
  uint64_t v51 = v80;
  uint64_t v53 = (uint64_t)v74;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v74, v45, v80);
  uint64_t v54 = v53 + *(int *)(v75 + 36);
  *(unsigned char *)uint64_t v54 = v49;
  *(_OWORD *)(v54 + 8) = 0u;
  *(_OWORD *)(v54 + 24) = 0u;
  *(unsigned char *)(v54 + 40) = 1;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v51);
  sub_10051B3EC(v53, v92, &qword_1016A2E68);
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v55 = sub_1005057FC(&qword_1016A2E70);
  sub_100F6F644(v83, &v6[*(int *)(v55 + 44)]);
  LOBYTE(v53) = static Edge.Set.top.getter();
  char v56 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v53) {
    char v56 = Edge.Set.init(rawValue:)();
  }
  char v57 = v72 & 1;
  int v58 = v76 & 1;
  uint64_t v59 = v84;
  sub_100522E9C((uint64_t)v6, v84, &qword_1016A2E58);
  uint64_t v60 = v59 + *(int *)(v85 + 36);
  *(unsigned char *)uint64_t v60 = v56;
  *(_OWORD *)(v60 + 8) = 0u;
  *(_OWORD *)(v60 + 24) = 0u;
  *(unsigned char *)(v60 + 40) = 1;
  sub_100522F00((uint64_t)v6, &qword_1016A2E58);
  uint64_t v61 = v90;
  sub_10051B3EC(v59, v90, &qword_1016A2E60);
  LODWORD(v83) = v58;
  char v94 = v58;
  char v93 = v57;
  uint64_t v62 = v89;
  sub_100522E9C(v92, v89, &qword_1016A2E68);
  sub_100522E9C(v61, v91, &qword_1016A2E60);
  uint64_t v63 = v86;
  uint64_t v64 = v87;
  *(void *)a2 = v87;
  *(void *)(a2 + 8) = v63;
  *(unsigned char *)(a2 + 16) = v58;
  *(void *)(a2 + 24) = v88;
  *(unsigned char *)(a2 + 32) = v35;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(unsigned char *)(a2 + 72) = 1;
  uint64_t v65 = v78;
  uint64_t v66 = v81;
  uint64_t v67 = v82;
  *(void *)(a2 + 80) = v78;
  *(void *)(a2 + 88) = v66;
  *(unsigned char *)(a2 + 96) = v57;
  *(void *)(a2 + 104) = v67;
  *(unsigned char *)(a2 + 112) = v73;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(unsigned char *)(a2 + 152) = 1;
  uint64_t v68 = sub_1005057FC(&qword_1016A2E78);
  sub_100522E9C(v62, a2 + *(int *)(v68 + 64), &qword_1016A2E68);
  uint64_t v69 = v91;
  sub_100522E9C(v91, a2 + *(int *)(v68 + 80), &qword_1016A2E60);
  LOBYTE(v68) = v83;
  sub_10073F0E0(v64, v63, v83);
  swift_bridgeObjectRetain();
  sub_10073F0E0(v65, v66, v57);
  swift_bridgeObjectRetain();
  sub_10073F0E0(v64, v63, v68);
  swift_bridgeObjectRetain();
  sub_10073F0E0(v65, v66, v57);
  swift_bridgeObjectRetain();
  sub_100522F00(v90, &qword_1016A2E60);
  sub_100522F00(v92, &qword_1016A2E68);
  sub_1006A7D28(v65, v66, v57);
  swift_bridgeObjectRelease();
  sub_1006A7D28(v64, v63, v68);
  swift_bridgeObjectRelease();
  sub_100522F00(v69, &qword_1016A2E60);
  sub_100522F00(v89, &qword_1016A2E68);
  sub_1006A7D28(v65, v66, v93);
  swift_bridgeObjectRelease();
  sub_1006A7D28(v64, v63, v94);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100F6F644@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v58 = a2;
  uint64_t v56 = sub_1005057FC(&qword_1016A2E80) - 8;
  __chkstk_darwin(v56, v3);
  uint64_t v57 = (uint64_t)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v54 = (char *)v47 - v7;
  __chkstk_darwin(v8, v9);
  uint64_t v55 = (uint64_t)v47 - v10;
  uint64_t v50 = sub_1005057FC(&qword_10167A598);
  uint64_t v59 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v11);
  uint64_t v53 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v52 = (char *)v47 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v51 = (char *)v47 - v18;
  v47[2] = LocalizedStringKey.init(stringLiteral:)();
  v47[1] = v19;
  v47[0] = v20;
  v62[0] = *(_OWORD *)a1;
  uint64_t v21 = *(void *)(a1 + 16);
  void v47[3] = *(void *)(a1 + 24);
  uint64_t v48 = v21;
  uint64_t v49 = *(void *)(a1 + 32);
  uint64_t v22 = v49;
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v24 = (_OWORD *)swift_allocObject();
  long long v25 = *(_OWORD *)(a1 + 16);
  v24[1] = *(_OWORD *)a1;
  v24[2] = v25;
  long long v26 = *(_OWORD *)(a1 + 48);
  uint64_t v24[3] = *(_OWORD *)(a1 + 32);
  v24[4] = v26;
  sub_1009FA144((uint64_t)v62);
  sub_1005173A0(v21);
  sub_1005173A0(v22);
  sub_1005173A0(v23);
  Button<>.init(_:action:)();
  long long v60 = v62[0];
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.getter();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v27 = (_OWORD *)swift_allocObject();
  long long v28 = *(_OWORD *)(a1 + 16);
  v27[1] = *(_OWORD *)a1;
  v27[2] = v28;
  long long v29 = *(_OWORD *)(a1 + 48);
  void v27[3] = *(_OWORD *)(a1 + 32);
  v27[4] = v29;
  sub_1009FA144((uint64_t)v62);
  sub_1005173A0(v48);
  sub_1005173A0(v49);
  sub_1005173A0(v23);
  char v30 = v52;
  Button<>.init(_:action:)();
  long long v60 = v62[0];
  State.wrappedValue.getter();
  LOBYTE(a1) = v61;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = a1;
  uint64_t v33 = v59;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  uint64_t v35 = (uint64_t)v54;
  uint64_t v36 = v50;
  v34(v54, v30, v50);
  uint64_t v37 = (uint64_t *)(v35 + *(int *)(v56 + 44));
  *uint64_t v37 = KeyPath;
  v37[1] = (uint64_t)sub_100F71340;
  v37[2] = v32;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v59 = v33 + 8;
  v38(v30, v36);
  uint64_t v39 = v55;
  sub_10051B3EC(v35, v55, &qword_1016A2E80);
  char v40 = v53;
  uint64_t v41 = v51;
  v34(v53, v51, v36);
  uint64_t v42 = v57;
  sub_100522E9C(v39, v57, &qword_1016A2E80);
  uint64_t v43 = v58;
  void *v58 = 0;
  *((unsigned char *)v43 + 8) = 1;
  int v44 = (char *)v43;
  uint64_t v45 = sub_1005057FC(&qword_1016A2E88);
  v34(&v44[*(int *)(v45 + 48)], v40, v36);
  sub_100522E9C(v42, (uint64_t)&v44[*(int *)(v45 + 64)], &qword_1016A2E80);
  sub_100522F00(v39, &qword_1016A2E80);
  v38(v41, v36);
  sub_100522F00(v42, &qword_1016A2E80);
  return ((uint64_t (*)(char *, uint64_t))v38)(v40, v36);
}

uint64_t sub_100F6FB58(uint64_t a1)
{
  sub_1005057FC(&qword_101695310);
  uint64_t result = State.wrappedValue.setter();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  if (v3) {
    return v3(result);
  }
  return result;
}

uint64_t sub_100F6FBC0@<X0>(uint64_t a1@<X8>)
{
  return sub_100F6EBCC(a1);
}

uint64_t sub_100F6FBFC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  State.init(wrappedValue:)();
  return UIHostingController.init(coder:rootView:)();
}

void sub_100F6FC70(void *a1)
{
  v8.receiver = a1;
  v8.Class super_class = (Class)type metadata accessor for CRLFileWriteAssetDownloadAlertViewController();
  id v1 = v8.receiver;
  [super viewDidLoad];
  id v2 = [v1 view];
  if (v2)
  {
    id v3 = v2;
    [v2 intrinsicContentSize];
    double v5 = v4;
    double v7 = v6;

    [v1 setPreferredContentSize:v5, v7];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100F6FD20(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[7] = v5;
  v3[8] = v4;
  return _swift_task_switch(sub_100F6FDC0, v5, v4);
}

uint64_t sub_100F6FDC0()
{
  uint64_t v1 = v0[2];
  id v2 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  swift_retain();
  unint64_t v3 = sub_100A394EC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v4 = sub_100F6E744(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_100CDCB64((uint64_t)v4);
  swift_release();
  swift_bridgeObjectRelease();
  id v6 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v7 = sub_10084663C(1);

  sub_10057CB20(v7);
  type metadata accessor for CRLAssetDownloadHelper();
  uint64_t v8 = swift_allocObject();
  v0[9] = v8;
  swift_defaultActor_initialize();
  UUID.init()();
  *(void *)(v8 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper__assetUUIDsNeedingDownload) = 0;
  *(unsigned char *)(v8 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_isDownloading) = 0;
  *(unsigned char *)(v8 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_downloadWasCancelled) = 0;
  *(void *)(v8 + OBJC_IVAR____TtC8Freeform22CRLAssetDownloadHelper_assetUUIDsBeingDownloaded) = &_swiftEmptySetSingleton;
  *(void *)(v8 + 112) = v2;
  *(void *)(v8 + 120) = v5;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100F6FF78;
  return sub_1005233F4();
}

uint64_t sub_100F6FF78(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100F70090, v2, 0);
}

uint64_t sub_100F70090()
{
  v0[12] = *(void *)(v0[11] + 16);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  return _swift_task_switch(sub_100F700FC, v1, v2);
}

uint64_t sub_100F700FC()
{
  uint64_t v1 = v0[9];
  if (v0[12])
  {
    uint64_t v2 = v0[4];
    unint64_t v3 = (void *)v0[3];
    type metadata accessor for CRLFileWriteAssetDownloadAlertViewController.ParentWrapper();
    uint64_t v4 = swift_allocObject();
    v0[13] = v4;
    *(void *)(v4 + 16) = v3;
    id v5 = v3;
    uint64_t v6 = static MainActor.shared.getter();
    v0[14] = v6;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[15] = v7;
    v7[2] = v2;
    v7[3] = v1;
    v7[4] = v4;
    uint64_t v8 = (void *)swift_task_alloc();
    v0[16] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100F7028C;
    return withCheckedContinuation<A>(isolation:function:_:)(v8, v6, &protocol witness table for MainActor, 0xD000000000000021, 0x80000001012996B0, sub_100F71358, v7, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_100F7028C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100F703EC, v3, v2);
}

uint64_t sub_100F703EC()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100F70464(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a1;
  uint64_t v7 = sub_1005057FC(&qword_101682E08);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a2;
  swift_retain();
  swift_retain();
  id v12 = a2;
  uint64_t v13 = (void (*)(unsigned char *, void))dispatch thunk of UIHostingController.rootView.modify();
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v14 + 16) = sub_100F71368;
  *(void *)(v14 + 24) = v11;
  sub_1005174AC(v15);
  v13(v29, 0);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a3;
  uint64_t v16[3] = a4;
  v16[4] = v12;
  swift_retain();
  swift_retain();
  id v17 = v12;
  uint64_t v18 = (void (*)(unsigned char *, void))dispatch thunk of UIHostingController.rootView.modify();
  uint64_t v20 = *(void *)(v19 + 32);
  *(void *)(v19 + 32) = sub_100F713F0;
  *(void *)(v19 + 40) = v16;
  sub_1005174AC(v20);
  v18(v29, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v7);
  unint64_t v21 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v22 + v21, (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v23 = (void (*)(unsigned char *, void))dispatch thunk of UIHostingController.rootView.modify();
  uint64_t v25 = *(void *)(v24 + 48);
  *(void *)(v24 + 48) = sub_100867F18;
  *(void *)(v24 + 56) = v22;
  sub_1005174AC(v25);
  v23(v29, 0);
  return [*(id *)(a4 + 16) presentViewController:v17 animated:1 completion:0];
}

uint64_t sub_100F706E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for MainActor();
  void v5[5] = static MainActor.shared.getter();
  return _swift_task_switch(sub_100F70768, a4, 0);
}

uint64_t sub_100F70768()
{
  sub_100526738();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F707F8, v1, v0);
}

uint64_t sub_100F707F8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  [*(id *)(v1 + 16) dismissViewControllerAnimated:1 completion:0];
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100F70874(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  id v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  id v14 = a3;
  uint64_t v15 = static MainActor.shared.getter();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  uint64_t v16[3] = &protocol witness table for MainActor;
  v16[4] = a1;
  void v16[5] = a2;
  void v16[6] = v14;
  sub_1005912D0((uint64_t)v12, a5, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_100F709B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a5;
  v5[3] = type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  void v5[5] = v6;
  void *v6 = v5;
  v6[1] = sub_100F70A60;
  return sub_1005252A4();
}

uint64_t sub_100F70A60()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v2;
    uint64_t v4 = sub_100F71824;
  }
  else
  {
    uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v5;
    uint64_t v4 = sub_100F70BE4;
  }
  return _swift_task_switch(v4, v1, v3);
}

uint64_t sub_100F70BE4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  [*(id *)(v1 + 16) dismissViewControllerAnimated:1 completion:0];
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_100F70C60()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLFileWriteAssetDownloadAlertViewController();
  [super dealloc];
}

void sub_100F70C98()
{
}

void sub_100F70CC8()
{
}

uint64_t sub_100F70CF8()
{
  return type metadata accessor for CRLFileWriteAssetDownloadAlertViewController();
}

uint64_t type metadata accessor for CRLFileWriteAssetDownloadAlertViewController.ParentWrapper()
{
  return self;
}

uint64_t destroy for CRLFileWriteAssetDownloadAlertView(void *a1)
{
  uint64_t result = swift_release();
  if (a1[2]) {
    uint64_t result = swift_release();
  }
  if (a1[4]) {
    uint64_t result = swift_release();
  }
  if (a1[6])
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for CRLFileWriteAssetDownloadAlertView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 16);
  swift_retain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for CRLFileWriteAssetDownloadAlertView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v9;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v10;
      *(void *)(a1 + 56) = v12;
      swift_retain();
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CRLFileWriteAssetDownloadAlertView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v4;
      *(void *)(a1 + 24) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v10)
    {
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v10;
      *(void *)(a1 + 56) = v12;
      return a1;
    }
LABEL_21:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLFileWriteAssetDownloadAlertView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFileWriteAssetDownloadAlertView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFileWriteAssetDownloadAlertView()
{
  return &type metadata for CRLFileWriteAssetDownloadAlertView;
}

uint64_t sub_100F711A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100F711C4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 64);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_100F711FC()
{
  swift_release();
  if (v0[4]) {
    swift_release();
  }
  if (v0[6]) {
    swift_release();
  }
  if (v0[8]) {
    swift_release();
  }

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100F71264()
{
  return sub_100F6FB58(v0 + 16);
}

uint64_t sub_100F7126C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100F7129C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100F712CC()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_100F712F4()
{
  return EnvironmentValues.isEnabled.setter();
}

unsigned char *sub_100F7131C(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_100F71330()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_100F71340(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

id sub_100F71358(uint64_t a1)
{
  return sub_100F70464(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100F71368()
{
  return sub_100F70874(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), (uint64_t)&unk_1015344B8, (uint64_t)&unk_1016A2EA8);
}

uint64_t sub_100F713A8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100F713F0()
{
  return sub_100F70874(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), (uint64_t)&unk_101534490, (uint64_t)&unk_1016A2E98);
}

uint64_t sub_100F7142C()
{
  uint64_t v1 = sub_1005057FC(&qword_101682E08);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100F714C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528488;
  return sub_100F709B0(a1, v4, v5, v6, v7);
}

uint64_t sub_100F71590()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100F715E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100F706E8(a1, v4, v5, v6, v7);
}

uint64_t sub_100F716A8()
{
  return sub_100F7171C(&qword_1016A2EB0, &qword_1016A2E50, (void (*)(void))sub_100F716EC);
}

uint64_t sub_100F716EC()
{
  return sub_100F7171C(&qword_1016A2EB8, &qword_1016A2E40, (void (*)(void))sub_100F71798);
}

uint64_t sub_100F7171C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100F71798()
{
  return sub_100F7171C(&qword_1016A2EC0, &qword_1016A2E38, (void (*)(void))sub_100F717C8);
}

unint64_t sub_100F717C8()
{
  unint64_t result = qword_1016A2EC8;
  if (!qword_1016A2EC8)
  {
    sub_100522D34(&qword_1016A2E30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A2EC8);
  }
  return result;
}

uint64_t sub_100F71828(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = type metadata accessor for ShadowStyle();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100F7192C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for ShadowStyle();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_100F719A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for ShadowStyle();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_100F71A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for ShadowStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_100F71B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for ShadowStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_100F71BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ShadowStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100F71C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100F71C74);
}

uint64_t sub_100F71C74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for ShadowStyle();
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 32);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100F71D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100F71D44);
}

void *sub_100F71D44(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for ShadowStyle();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s13ThumbnailViewVMa()
{
  uint64_t result = qword_1016A2F28;
  if (!qword_1016A2F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100F71E38()
{
  uint64_t result = type metadata accessor for ShadowStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s8ItemViewVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8ItemViewVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8ItemViewVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8ItemViewVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s8ItemViewVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *_s8ItemViewVMa()
{
  return &_s8ItemViewVN;
}

uint64_t sub_100F720B8()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_100F720D4()
{
  __asm { FMOV            V0.2D, #8.0 }
  xmmword_10171CBD0 = (__int128)result;
  *(__n128 *)&qword_10171CBE0 = result;
  return result;
}

uint64_t sub_100F720E8()
{
  uint64_t result = static Font.headline.getter();
  qword_10171CBF0 = result;
  return result;
}

uint64_t sub_100F72108()
{
  uint64_t result = static Font.Weight.medium.getter();
  qword_10171CBF8 = v1;
  return result;
}

void sub_100F72128()
{
  qword_10171CC00 = 0x4030000000000000;
}

uint64_t sub_100F72138()
{
  uint64_t v0 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  int v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ShadowStyle();
  sub_100568B28(v5, qword_10171CC08);
  sub_100556B74(v5, (uint64_t)qword_10171CC08);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for Color.RGBColorSpace.sRGBLinear(_:), v0);
  Color.init(_:white:opacity:)();
  static ShadowStyle.drop(color:radius:x:y:)();
  return swift_release();
}

uint64_t sub_100F72264@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v79 = a3;
  LODWORD(v86) = a2;
  uint64_t v82 = sub_1005057FC(&qword_1016807C0);
  __chkstk_darwin(v82, v8);
  uint64_t v85 = (uint64_t *)((char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for Text.TruncationMode();
  uint64_t v83 = *(void *)(v10 - 8);
  uint64_t v84 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1005057FC(&qword_1016A2F78);
  __chkstk_darwin(v80, v14);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1005057FC(&qword_1016A2F80);
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin(v89, v17);
  uint64_t v81 = (uint64_t)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_1016A2F88);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v88 = (uint64_t)&v77 - v25;
  uint64_t v26 = _s13ThumbnailViewVMa();
  __chkstk_darwin(v26, v27);
  long long v29 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_101684950);
  __chkstk_darwin(v30, v31);
  uint64_t v91 = (uint64_t)&v77 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v90 = (uint64_t)&v77 - v35;
  uint64_t v36 = qword_1016701D8;
  swift_retain();
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_10171CC00;
  if (qword_1016701C0 != -1) {
    swift_once();
  }
  long long v38 = xmmword_10171CBD0;
  uint64_t v39 = qword_10171CBE0;
  uint64_t v40 = unk_10171CBE8;
  if (qword_1016701E0 != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for ShadowStyle();
  uint64_t v42 = sub_100556B74(v41, (uint64_t)qword_10171CC08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(&v29[*(int *)(v26 + 32)], v42, v41);
  *(void *)long long v29 = a1;
  v29[8] = v86 & 1;
  *((void *)v29 + 2) = v37;
  *(_OWORD *)(v29 + 24) = v38;
  *((void *)v29 + 5) = v39;
  *((void *)v29 + 6) = v40;
  uint64_t v43 = v91;
  sub_100F734F8((uint64_t)v29, v91, (uint64_t (*)(void))_s13ThumbnailViewVMa);
  uint64_t v44 = v43 + *(int *)(v30 + 36);
  *(void *)uint64_t v44 = 0x3FF5555555555555;
  *(_WORD *)(v44 + 8) = 0;
  sub_100F73560((uint64_t)v29, (uint64_t (*)(void))_s13ThumbnailViewVMa);
  sub_10051B3EC(v43, v90, &qword_101684950);
  if (a4)
  {
    uint64_t v78 = v22;
    uint64_t v86 = a5;
    uint64_t v92 = v79;
    uint64_t v93 = a4;
    sub_10052E310();
    swift_bridgeObjectRetain();
    uint64_t v45 = Text.init<A>(_:)();
    uint64_t v47 = v46;
    char v49 = v48;
    if (qword_1016701C8 != -1) {
      swift_once();
    }
    char v50 = v49 & 1;
    uint64_t v51 = Text.font(_:)();
    uint64_t v53 = v52;
    char v55 = v54;
    sub_1006A7D28(v45, v47, v50);
    swift_bridgeObjectRelease();
    if (qword_1016701D0 != -1) {
      swift_once();
    }
    char v56 = v55 & 1;
    uint64_t v57 = Text.fontWeight(_:)();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    char v63 = v62 & 1;
    sub_1006A7D28(v51, v53, v56);
    swift_bridgeObjectRelease();
    uint64_t v65 = v83;
    uint64_t v64 = v84;
    (*(void (**)(char *, void, uint64_t))(v83 + 104))(v13, enum case for Text.TruncationMode.tail(_:), v84);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v67 = v85;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))((char *)v85 + *(int *)(v82 + 28), v13, v64);
    *uint64_t v67 = KeyPath;
    sub_100522E9C((uint64_t)v67, (uint64_t)&v16[*(int *)(v80 + 36)], &qword_1016807C0);
    *(void *)uint64_t v16 = v57;
    *((void *)v16 + 1) = v59;
    v16[16] = v63;
    *((void *)v16 + 3) = v61;
    sub_10073F0E0(v57, v59, v63);
    swift_bridgeObjectRetain();
    sub_100522F00((uint64_t)v67, &qword_1016807C0);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v13, v64);
    sub_1006A7D28(v57, v59, v63);
    swift_bridgeObjectRelease();
    uint64_t v68 = v81;
    sub_100522E9C((uint64_t)v16, v81, &qword_1016A2F78);
    uint64_t v69 = v89;
    *(void *)(v68 + *(int *)(v89 + 36)) = 0xBFF0000000000000;
    sub_100522F00((uint64_t)v16, &qword_1016A2F78);
    uint64_t v70 = v68;
    uint64_t v71 = v88;
    sub_10051B3EC(v70, v88, &qword_1016A2F80);
    uint64_t v72 = 0;
    a5 = v86;
    uint64_t v22 = v78;
  }
  else
  {
    uint64_t v72 = 1;
    uint64_t v71 = v88;
    uint64_t v69 = v89;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v71, v72, 1, v69);
  uint64_t v74 = v90;
  uint64_t v73 = v91;
  sub_100522E9C(v90, v91, &qword_101684950);
  sub_100522E9C(v71, (uint64_t)v22, &qword_1016A2F88);
  sub_100522E9C(v73, a5, &qword_101684950);
  uint64_t v75 = sub_1005057FC(&qword_1016A2F90);
  sub_100522E9C((uint64_t)v22, a5 + *(int *)(v75 + 48), &qword_1016A2F88);
  sub_100522F00(v71, &qword_1016A2F88);
  sub_100522F00(v74, &qword_101684950);
  sub_100522F00((uint64_t)v22, &qword_1016A2F88);
  return sub_100522F00(v73, &qword_101684950);
}

uint64_t sub_100F72A7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  int v4 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v7 = sub_1005057FC(&qword_1016A2F70);
  return sub_100F72264(v3, v4, v6, v5, a1 + *(int *)(v7 + 44));
}

uint64_t sub_100F72AF0()
{
  uint64_t result = static Color.white.getter();
  qword_10171CC20 = result;
  return result;
}

uint64_t sub_100F72B10()
{
  uint64_t v0 = type metadata accessor for Color.RGBColorSpace();
  __n128 v2 = __chkstk_darwin(v0, v1);
  (*(void (**)(char *, void, __n128))(v4 + 104))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Color.RGBColorSpace.sRGB(_:), v2);
  uint64_t result = Color.init(_:white:opacity:)();
  qword_10171CC28 = result;
  return result;
}

uint64_t sub_100F72BE4()
{
  uint64_t result = static Color.accentColor.getter();
  qword_10171CC30 = result;
  return result;
}

void sub_100F72C04()
{
  qword_10171CC38 = 0x4014000000000000;
}

uint64_t sub_100F72C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v3 = type metadata accessor for Image.ResizingMode();
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v78 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_1016A2FA0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v86 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_1016A2FA8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_1016A2FB0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1005057FC(&qword_1016A2FB8);
  __chkstk_darwin(v84, v21);
  uint64_t v83 = (uint64_t)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_1005057FC(&qword_1016A2FC0);
  __chkstk_darwin(v85, v23);
  uint64_t v90 = (uint64_t)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v89 = (uint64_t)&v77 - v27;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v28 = a1;
    if (qword_1016701F8 != -1) {
      swift_once();
    }
    uint64_t v29 = qword_101670200;
    uint64_t v88 = qword_10171CC30;
    swift_retain();
    if (v29 != -1) {
      swift_once();
    }
    a1 = v28;
  }
  else
  {
    if (qword_1016701F0 != -1) {
      swift_once();
    }
    uint64_t v88 = qword_10171CC28;
    swift_retain();
  }
  uint64_t v30 = *(void *)(a1 + 16);
  uint64_t v31 = &v16[*(int *)(v13 + 20)];
  uint64_t v32 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v33 = type metadata accessor for RoundedCornerStyle();
  uint64_t v81 = v13;
  uint64_t v34 = v33;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104);
  unsigned int v82 = v32;
  v35(v31, v32, v33);
  *(void *)uint64_t v16 = v30;
  *((void *)v16 + 1) = v30;
  uint64_t v36 = a1 + *(int *)(_s13ThumbnailViewVMa() + 32);
  uint64_t v37 = type metadata accessor for ShadowStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v12, v36, v37);
  sub_100F734F8((uint64_t)v16, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  long long v38 = (void *)a1;
  sub_100522E9C((uint64_t)v12, (uint64_t)&v20[*(int *)(v17 + 52)], &qword_1016A2FA8);
  *(_WORD *)&v20[*(int *)(v17 + 56)] = 256;
  sub_100522F00((uint64_t)v12, &qword_1016A2FA8);
  sub_100F73560((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  if (qword_1016701E8 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_10171CC20;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = v83;
  sub_100522E9C((uint64_t)v20, v83, &qword_1016A2FB0);
  uint64_t v42 = (uint64_t *)(v41 + *(int *)(v84 + 36));
  *uint64_t v42 = KeyPath;
  v42[1] = v39;
  swift_retain();
  sub_100522F00((uint64_t)v20, &qword_1016A2FB0);
  uint64_t v43 = v38[2];
  v35(&v16[*(int *)(v81 + 20)], v82, v34);
  *(void *)uint64_t v16 = v43;
  *((void *)v16 + 1) = v43;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v44 = v86;
  sub_100F734F8((uint64_t)v16, v86, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v45 = v44 + *(int *)(sub_1005057FC(&qword_1016A2FC8) + 36);
  long long v46 = v92;
  *(_OWORD *)uint64_t v45 = v91;
  *(_OWORD *)(v45 + 16) = v46;
  *(void *)(v45 + 32) = v93;
  uint64_t v47 = sub_1005057FC(&qword_1016A2FD0);
  *(void *)(v44 + *(int *)(v47 + 52)) = v88;
  *(_WORD *)(v44 + *(int *)(v47 + 56)) = 256;
  swift_retain();
  uint64_t v48 = static Alignment.center.getter();
  uint64_t v50 = v49;
  uint64_t v51 = (uint64_t *)(v44 + *(int *)(sub_1005057FC(&qword_1016A2FD8) + 36));
  *uint64_t v51 = v48;
  v51[1] = v50;
  sub_100F73560((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v52 = static Alignment.center.getter();
  uint64_t v54 = v53;
  uint64_t v55 = v90;
  uint64_t v56 = v90 + *(int *)(v85 + 36);
  sub_100522E9C(v44, v56, &qword_1016A2FA0);
  uint64_t v57 = (uint64_t *)(v56 + *(int *)(sub_1005057FC(&qword_1016A2FE0) + 36));
  *uint64_t v57 = v52;
  v57[1] = v54;
  sub_100522E9C(v41, v55, &qword_1016A2FB8);
  sub_100522F00(v44, &qword_1016A2FA0);
  sub_100522F00(v41, &qword_1016A2FB8);
  sub_10051B3EC(v55, v89, &qword_1016A2FC0);
  if (*v38)
  {
    uint64_t v59 = v78;
    uint64_t v58 = v79;
    uint64_t v60 = v80;
    (*(void (**)(char *, void, uint64_t))(v79 + 104))(v78, enum case for Image.ResizingMode.stretch(_:), v80);
    uint64_t v86 = Image.resizable(capInsets:resizingMode:)();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
    uint64_t v61 = v38[3];
    uint64_t v85 = v38[4];
    uint64_t v62 = v38[5];
    uint64_t v63 = v38[6];
    LOBYTE(v60) = static Edge.Set.all.getter();
    uint64_t v64 = static Color.accentColor.getter();
    uint64_t v65 = swift_getKeyPath();
    uint64_t v66 = v60;
    uint64_t v67 = 1;
  }
  else
  {
    uint64_t v85 = 0;
    uint64_t v86 = 0;
    uint64_t v67 = 0;
    uint64_t v66 = 0;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    uint64_t v65 = 0;
    uint64_t v64 = 0;
  }
  uint64_t v68 = v90;
  sub_100522E9C(v89, v90, &qword_1016A2FC0);
  uint64_t v69 = v68;
  uint64_t v70 = v87;
  sub_100522E9C(v69, v87, &qword_1016A2FC0);
  uint64_t v71 = (uint64_t *)(v70 + *(int *)(sub_1005057FC(&qword_1016A2FE8) + 48));
  uint64_t v72 = v65;
  uint64_t v73 = v64;
  uint64_t v74 = v85;
  uint64_t v75 = v86;
  sub_100F735C8(v86);
  swift_release();
  *uint64_t v71 = v75;
  v71[1] = 0;
  v71[2] = v67;
  v71[3] = v66;
  v71[4] = v61;
  v71[5] = v74;
  v71[6] = v62;
  v71[7] = v63;
  v71[8] = 0;
  v71[9] = v72;
  v71[10] = v73;
  sub_100522F00(v89, &qword_1016A2FC0);
  sub_100F73614(v75);
  return sub_100522F00(v90, &qword_1016A2FC0);
}

uint64_t sub_100F73490@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.center.getter();
  a1[1] = v3;
  uint64_t v4 = sub_1005057FC(&qword_1016A2F98);
  return sub_100F72C14(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_100F734D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100F734F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100F73560(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100F735C8(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100F73614(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100F7365C()
{
  return sub_100523288(&qword_1016A2FF0, &qword_1016A2FF8);
}

uint64_t sub_100F73698()
{
  return sub_100523288(&qword_1016A3000, &qword_1016A3008);
}

uint64_t sub_100F736D4()
{
  uint64_t v0 = type metadata accessor for CharacterSet();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v40 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v39 - v6;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v39 - v10;
  id v12 = objc_allocWithZone((Class)NSString);
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithString:v13];

  id v15 = [v14 stringByDeletingPathExtension];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v18 = v17;

  uint64_t v41 = v16;
  unint64_t v42 = v18;
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_10052E310();
  uint64_t v19 = StringProtocol.components(separatedBy:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v1 + 8);
  v20(v11, v0);
  swift_bridgeObjectRelease();
  uint64_t v41 = v19;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_10056547C();
  uint64_t v21 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v43 = v21;
  unint64_t v44 = v23;
  swift_bridgeObjectRetain();
  static CharacterSet.urlFragmentAllowed.getter();
  CharacterSet.inverted.getter();
  v20(v11, v0);
  uint64_t v41 = v21;
  unint64_t v42 = v23;
  uint64_t v24 = StringProtocol.rangeOfCharacter(from:options:range:)();
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v27 = (id)static OS_os_log.crlDefault;
    uint64_t v28 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v28, (uint64_t)"Board title contains characters the require URLEncoding. Returning empty nil", 76, 2, (uint64_t)_swiftEmptyArrayStorage);

    v20(v7, v0);
    return 0;
  }
  uint64_t v41 = 46;
  unint64_t v42 = 0xE100000000000000;
  __chkstk_darwin(v24, v25);
  *(&v39 - 2) = (uint64_t)&v41;
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_100CD7A88(sub_100D3A6B8, (uint64_t)(&v39 - 4), v21, v23);
  char v31 = v30;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v31)
  {
LABEL_10:
    uint64_t v34 = v40;
    CharacterSet.init(charactersIn:)();
    uint64_t v41 = v43;
    unint64_t v42 = v44;
    uint64_t v35 = StringProtocol.trimmingCharacters(in:)();
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((v37 & 0x2000000000000000) != 0) {
      uint64_t v38 = HIBYTE(v37) & 0xF;
    }
    else {
      uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
    }
    v20(v34, v0);
    v20(v7, v0);
    if (v38) {
      return v35;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v33 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v33 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v33 >= v29 >> 14)
  {
    String.removeSubrange(_:)();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F73B74()
{
  return sub_100F763F4(&qword_1016A3010, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);
}

uint64_t type metadata accessor for CRLChangeSelectionColorIntent()
{
  uint64_t result = qword_1016A3088;
  if (!qword_1016A3088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100F73C08()
{
  return sub_100F763F4((unint64_t *)&unk_1016A3018, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);
}

uint64_t sub_100F73C50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100F73C6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100F73C88(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  v2[23] = type metadata accessor for CRLChangeSelectionColorIntent();
  v2[24] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v2[25] = v3;
  v2[26] = *(void *)(v3 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  type metadata accessor for CRLBoardEntity();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[36] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[37] = v5;
  v2[38] = v4;
  return _swift_task_switch(sub_100F73E58, v5, v4);
}

uint64_t sub_100F73E58()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[33];
  IntentParameter.wrappedValue.getter();
  sub_100F7632C(v1, v2, type metadata accessor for CRLBoardIdentifier);
  sub_100F76394(v1, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  AppDependency.wrappedValue.getter();
  v0[10] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[11] = &off_10152F800;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016A5BF8 + dword_1016A5BF8);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[39] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100F73F90;
  uint64_t v4 = v0[33];
  return v6(v4, (uint64_t)(v0 + 7));
}

uint64_t sub_100F73F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v3;
  v4[40] = a1;
  v4[41] = a2;
  v4[42] = v2;
  swift_task_dealloc();
  sub_100F76394(v4[33], type metadata accessor for CRLBoardIdentifier);
  if (v2)
  {
    uint64_t v5 = v4[37];
    uint64_t v6 = v4[38];
    uint64_t v7 = sub_100F75058;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v4 + 7));
    uint64_t v5 = v4[37];
    uint64_t v6 = v4[38];
    uint64_t v7 = sub_100F740EC;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100F740EC()
{
  uint64_t v110 = v0;
  uint64_t v1 = *(void **)(v0 + 320);
  swift_release();
  id v2 = [v1 selectionModelTranslator];
  if (!v2)
  {
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 216);
    uint64_t v101 = *(void *)(v0 + 200);
    uint64_t v104 = *(void *)(v0 + 192);
    uint64_t v13 = *(void *)(v0 + 176);
    uint64_t v98 = *(void *)(v0 + 184);
    id v14 = (void *)v0;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"perform()", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Intents/Board Items Selection Customization/CRLChangeSelectionColorIntent.swift", 144, 2, 51, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"perform()", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Intents/Board Items Selection Customization/CRLChangeSelectionColorIntent.swift", 144, 2, 51);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v13 + *(int *)(v98 + 28), v101);
    sub_100F7632C(v13, v104, (uint64_t (*)(void))type metadata accessor for CRLChangeSelectionColorIntent);
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = *(void *)(v0 + 272);
      uint64_t v18 = *(void *)(v0 + 256);
      uint64_t v99 = v14[26];
      uint64_t v102 = v14[25];
      uint64_t v105 = v14[27];
      uint64_t v93 = v14[24];
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      IntentParameter.wrappedValue.getter();
      sub_100F7632C(v17, v18, type metadata accessor for CRLBoardIdentifier);
      sub_100F76394(v17, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v108 = UUID.uuidString.getter();
      unint64_t v109 = v20;
      swift_bridgeObjectRetain();
      v21._countAndFlagsBits = 58;
      v21._object = (void *)0xE100000000000000;
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      unint64_t v22 = (uint64_t *)(v18 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
      uint64_t v24 = *v22;
      unint64_t v23 = (void *)v22[1];
      swift_bridgeObjectRetain();
      v25._countAndFlagsBits = v24;
      v25._object = v23;
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      sub_100F76394(v18, type metadata accessor for CRLBoardIdentifier);
      v14[19] = sub_100E04348(v108, v109, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100F76394(v93, (uint64_t (*)(void))type metadata accessor for CRLChangeSelectionColorIntent);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Missing selection model translator for %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v105, v102);
    }
    else
    {
      uint64_t v79 = *(void *)(v0 + 208);
      uint64_t v78 = v14[27];
      uint64_t v80 = v14[25];
      sub_100F76394(v14[24], (uint64_t (*)(void))type metadata accessor for CRLChangeSelectionColorIntent);

      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
    }
    uint64_t v81 = (void *)v14[40];
    unsigned int v82 = (void *)v14[41];
    type metadata accessor for _PrebuiltAppIntentError();
    sub_100F763F4((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
    swift_allocError();
    static _UnrecoverableError.actionNotAllowed.getter();
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v83 = (uint64_t (*)(void))v14[1];
    goto LABEL_73;
  }
  uint64_t v3 = v2;
  uint64_t v87 = v0 + 96;
  id v4 = [*(id *)(v0 + 328) selectionPath];
  id v5 = [v3 unlockedBoardItemsForSelectionPath:v4];
  type metadata accessor for CRLBoardItem(0);
  sub_100F763F4((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
  uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v88 = v4;
  uint64_t v89 = v3;
  if ((v6 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v7 = *(void *)(v0 + 16);
    uint64_t v92 = *(void *)(v0 + 24);
    uint64_t v8 = *(void *)(v0 + 32);
    uint64_t v9 = *(void *)(v0 + 40);
    unint64_t v10 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
    uint64_t v92 = v6 + 56;
    uint64_t v8 = ~v26;
    uint64_t v27 = -v26;
    if (v27 < 64) {
      uint64_t v28 = ~(-1 << v27);
    }
    else {
      uint64_t v28 = -1;
    }
    unint64_t v10 = v28 & *(void *)(v6 + 56);
    uint64_t v7 = v6;
  }
  uint64_t v29 = *(void *)(v0 + 208);
  uint64_t v103 = *(void *)(v0 + 184);
  int64_t v90 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v97 = (void (**)(uint64_t, uint64_t))(v29 + 8);
  uint64_t v100 = (void (**)(void, void, void))(v29 + 16);
  uint64_t v91 = v7;
  while (1)
  {
    if (v7 < 0)
    {
      uint64_t v33 = __CocoaSet.Iterator.next()();
      if (!v33) {
        goto LABEL_72;
      }
      *(void *)(v0 + 144) = v33;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v34 = *(void **)(v0 + 160);
      uint64_t v35 = (void *)swift_unknownObjectRelease();
      uint64_t v32 = v9;
      uint64_t v30 = v10;
      if (!v34) {
        goto LABEL_72;
      }
      goto LABEL_33;
    }
    if (v10)
    {
      uint64_t v30 = (v10 - 1) & v10;
      unint64_t v31 = __clz(__rbit64(v10)) | (v9 << 6);
      uint64_t v32 = v9;
      goto LABEL_32;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      JUMPOUT(0x100F75038);
    }
    if (v36 >= v90) {
      goto LABEL_72;
    }
    unint64_t v37 = *(void *)(v92 + 8 * v36);
    uint64_t v32 = v9 + 1;
    if (!v37)
    {
      uint64_t v32 = v9 + 2;
      if (v9 + 2 >= v90) {
        goto LABEL_72;
      }
      unint64_t v37 = *(void *)(v92 + 8 * v32);
      if (!v37)
      {
        uint64_t v32 = v9 + 3;
        if (v9 + 3 >= v90) {
          goto LABEL_72;
        }
        unint64_t v37 = *(void *)(v92 + 8 * v32);
        if (!v37)
        {
          uint64_t v32 = v9 + 4;
          if (v9 + 4 >= v90) {
            goto LABEL_72;
          }
          unint64_t v37 = *(void *)(v92 + 8 * v32);
          if (!v37) {
            break;
          }
        }
      }
    }
LABEL_31:
    uint64_t v30 = (v37 - 1) & v37;
    unint64_t v31 = __clz(__rbit64(v37)) + (v32 << 6);
LABEL_32:
    uint64_t v35 = *(id *)(*(void *)(v7 + 48) + 8 * v31);
    uint64_t v34 = v35;
    if (!v35) {
      goto LABEL_72;
    }
LABEL_33:
    uint64_t v39 = *(uint64_t (**)(void))((swift_isaMask & *v34) + 0xC8);
    uint64_t v40 = ((uint64_t (*)(void *))v39)(v35);
    unint64_t v106 = v30;
    if ((v41 & 1) == 0 || ((unint64_t)(v40 - 2) >= 8 ? (BOOL v42 = v40 == 0) : (BOOL v42 = 1), v42))
    {
      (*v100)(*(void *)(v0 + 224), *(void *)(v0 + 176) + *(int *)(v103 + 28), *(void *)(v0 + 200));
      uint64_t v43 = v34;
      unint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.debug.getter();
      BOOL v46 = os_log_type_enabled(v44, v45);
      uint64_t v47 = *(void *)(v0 + 224);
      uint64_t v48 = *(void *)(v0 + 200);
      if (v46)
      {
        uint64_t v95 = v32;
        uint64_t v49 = swift_slowAlloc();
        uint64_t v108 = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 136315138;
        *(void *)(v0 + 128) = v39();
        *(unsigned char *)(v0 + 136) = v50 & 1;
        uint64_t v51 = String.init<A>(describing:)();
        *(void *)(v49 + 4) = sub_100E04348(v51, v52, &v108);
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Unsupported board item %s", (uint8_t *)v49, 0xCu);
        swift_arrayDestroy();
        uint64_t v7 = v91;
        swift_slowDealloc();
        swift_slowDealloc();

        (*v97)(v47, v48);
        uint64_t v9 = v95;
      }
      else
      {

        (*v97)(v47, v48);
        uint64_t v9 = v32;
      }
      unint64_t v10 = v106;
    }
    else
    {
      uint64_t v53 = v32;
      if (v40 == 1)
      {
        type metadata accessor for CRLWPShapeItem();
        uint64_t v54 = swift_dynamicCastClass();
        if (!v54)
        {
          (*v100)(*(void *)(v0 + 248), *(void *)(v0 + 176) + *(int *)(v103 + 28), *(void *)(v0 + 200));
          uint64_t v64 = v34;
          uint64_t v65 = Logger.logObject.getter();
          os_log_type_t v66 = static os_log_type_t.error.getter();
          BOOL v67 = os_log_type_enabled(v65, v66);
          uint64_t v68 = *(void *)(v0 + 248);
          uint64_t v69 = *(void *)(v0 + 200);
          if (!v67) {
            goto LABEL_55;
          }
          uint64_t v96 = *(void *)(v0 + 248);
          uint64_t v70 = swift_slowAlloc();
          uint64_t v94 = v69;
          uint64_t v71 = (void *)swift_slowAlloc();
          uint64_t v108 = swift_slowAlloc();
          *(_DWORD *)uint64_t v70 = 138412546;
          *(void *)(v70 + 4) = v64;
          *uint64_t v71 = v34;
          *(_WORD *)(v70 + 12) = 2080;
          *(unsigned char *)(v0 + 138) = 0;
          goto LABEL_54;
        }
        uint64_t v55 = v54;
        uint64_t v56 = *(void **)(v0 + 328);
        uint64_t v57 = v34;
        sub_100F7643C(v55, v56);
LABEL_68:

LABEL_69:
        uint64_t v9 = v53;
        unint64_t v10 = v30;
      }
      else
      {
        type metadata accessor for CRLWPStickyNoteItem();
        if (swift_dynamicCastClass())
        {
          uint64_t v57 = v34;
          IntentParameter.wrappedValue.getter();
          char v58 = 5;
          switch(*(unsigned char *)(v0 + 139))
          {
            case 1:
              goto LABEL_62;
            case 2:
              char v58 = 6;
              goto LABEL_62;
            case 3:
              char v58 = 4;
              goto LABEL_62;
            case 4:
              char v58 = 2;
              goto LABEL_62;
            case 5:
              char v58 = 0;
              goto LABEL_62;
            case 6:
              char v58 = 1;
              goto LABEL_62;
            case 7:
              char v58 = 3;
LABEL_62:
              if (type metadata accessor for CRLWPStickyNoteEditor()) {
                uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
              }
              else {
                uint64_t ObjCClassFromMetadata = 0;
              }
              id v77 = [*(id *)(v0 + 328) mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
              if (swift_dynamicCastClass())
              {
                *(void *)(v0 + 120) = &type metadata for CRLStickyNotePreset;
                *(unsigned char *)(v0 + 96) = v58;
                swift_unknownObjectRetain();
                sub_100E1C624(v87);
                swift_unknownObjectRelease_n();
                sub_10052E2B0(v87);
              }
              else
              {
                swift_unknownObjectRelease();
              }
              break;
            default:
              (*v100)(*(void *)(v0 + 240), *(void *)(v0 + 176) + *(int *)(v103 + 28), *(void *)(v0 + 200));
              uint64_t v59 = Logger.logObject.getter();
              os_log_type_t v60 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v59, v60))
              {
                uint64_t v61 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v61 = 0;
                _os_log_impl((void *)&_mh_execute_header, v59, v60, "Unsupported color for Sticky Note", v61, 2u);
                swift_slowDealloc();
              }
              uint64_t v62 = *(void *)(v0 + 240);
              uint64_t v63 = *(void *)(v0 + 200);

              (*v97)(v62, v63);
              break;
          }
          goto LABEL_68;
        }
        (*v100)(*(void *)(v0 + 232), *(void *)(v0 + 176) + *(int *)(v103 + 28), *(void *)(v0 + 200));
        uint64_t v64 = v34;
        uint64_t v65 = Logger.logObject.getter();
        os_log_type_t v66 = static os_log_type_t.error.getter();
        BOOL v72 = os_log_type_enabled(v65, v66);
        uint64_t v68 = *(void *)(v0 + 232);
        uint64_t v69 = *(void *)(v0 + 200);
        if (!v72)
        {
LABEL_55:

          (*v97)(v68, v69);
          goto LABEL_69;
        }
        uint64_t v96 = *(void *)(v0 + 232);
        uint64_t v70 = swift_slowAlloc();
        uint64_t v94 = v69;
        uint64_t v73 = (void *)swift_slowAlloc();
        uint64_t v108 = swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = 138412546;
        *(void *)(v70 + 4) = v64;
        void *v73 = v34;
        *(_WORD *)(v70 + 12) = 2080;
        *(unsigned char *)(v0 + 137) = 1;
LABEL_54:
        uint64_t v74 = String.init<A>(describing:)();
        *(void *)(v70 + 14) = sub_100E04348(v74, v75, &v108);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "Wrong subclass %@ received for type: %s", (uint8_t *)v70, 0x16u);
        sub_1005057FC(&qword_101678028);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*v97)(v96, v94);
        uint64_t v9 = v53;
        unint64_t v10 = v30;
      }
    }
  }
  uint64_t v38 = v9 + 5;
  while (v90 != v38)
  {
    unint64_t v37 = *(void *)(v92 + 8 * v38++);
    if (v37)
    {
      uint64_t v32 = v38 - 1;
      goto LABEL_31;
    }
  }
LABEL_72:
  uint64_t v85 = *(void **)(v0 + 320);
  uint64_t v84 = *(void **)(v0 + 328);
  sub_10052E1EC();
  static IntentResult.result<>()();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v83 = *(uint64_t (**)(void))(v0 + 8);
LABEL_73:
  return v83();
}

uint64_t sub_100F75058()
{
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F75154()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171CC40);
  sub_100556B74(v9, (uint64_t)qword_10171CC40);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100F7534C()
{
  uint64_t v0 = sub_1005057FC(&qword_1016A30F0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_1016A30F8);
  __chkstk_darwin(v2, v3);
  type metadata accessor for CRLChangeSelectionColorIntent();
  sub_100F763F4(&qword_1016A3028, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._object = (void *)0x8000000101299890;
  v4._countAndFlagsBits = 0xD00000000000001FLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_1016A3100);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_1016A3108);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100F75570@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v1 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v75 = v1;
  uint64_t v76 = v2;
  __chkstk_darwin(v1, v3);
  uint64_t v73 = &v51[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v5 - 8, v6);
  BOOL v72 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v9);
  uint64_t v70 = &v51[-v10];
  uint64_t v11 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v71 = &v51[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v54 = &v51[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  Swift::String v21 = &v51[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v26 = type metadata accessor for LocalizedStringResource();
  uint64_t v67 = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  uint64_t v62 = &v51[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v69 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = *(void (**)(unsigned char *))(v18 + 104);
  uint64_t v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unsigned int v58 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v59 = v17;
  v30(v21);
  os_log_type_t v60 = (void (*)(unsigned char *, uint64_t, uint64_t))v30;
  uint64_t v61 = v18 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(unsigned char *, uint64_t, uint64_t))v30)(v21, v31, v17);
  uint64_t v32 = v54;
  uint64_t v33 = v21;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v34 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56);
  uint64_t v66 = v27 + 56;
  uint64_t v68 = v34;
  uint64_t v35 = v32;
  v34(v32, 0, 1, v26);
  uint64_t v36 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v71, 1, 1, v36);
  uint64_t v37 = type metadata accessor for IntentDialog();
  uint64_t v55 = v37;
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v56 = v39;
  uint64_t v57 = v38 + 56;
  uint64_t v40 = v70;
  v39(v70, 1, 1, v37);
  v39(v72, 1, 1, v37);
  uint64_t v64 = sub_1005057FC(&qword_101673B50);
  unint64_t v65 = 0x800000010123B260;
  unint64_t v77 = 0xD00000000000001FLL;
  unint64_t v78 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  uint64_t v63 = type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v79 = AppDependency.__allocating_init(key:manager:)();
  unsigned int v52 = enum case for InputConnectionBehavior.default(_:);
  char v41 = *(void (**)(void))(v76 + 104);
  v76 += 104;
  uint64_t v53 = (void (*)(unsigned char *, void, uint64_t))v41;
  v41(v73);
  sub_100568898();
  sub_100F763F4((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t *v74 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
  uint64_t v71 = (unsigned char *)sub_1005057FC(&qword_1016A30D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v42 = v58;
  uint64_t v43 = v59;
  unint64_t v44 = v60;
  v60(v33, v58, v59);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v44(v33, v42, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v68(v35, 0, 1, v67);
  LOBYTE(v79) = 8;
  uint64_t v45 = v55;
  BOOL v46 = v56;
  v56(v40, 1, 1, v55);
  v46(v72, 1, 1, v45);
  v53(v73, v52, v75);
  sub_100F762D8();
  uint64_t v47 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  uint64_t v48 = v74;
  v74[1] = v47;
  unint64_t v77 = 0xD00000000000001FLL;
  unint64_t v78 = v65;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  v48[2] = AppDependency.__allocating_init(key:manager:)();
  type metadata accessor for CRLChangeSelectionColorIntent();
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v49 = (id)static OS_os_log.appIntents;
  return Logger.init(_:)();
}

uint64_t sub_100F75F10@<X0>(uint64_t a1@<X8>)
{
  if (qword_101670208 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171CC40);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100F75FBC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_100F73C88(a1);
}

uint64_t sub_100F76058(uint64_t a1)
{
  uint64_t result = sub_100F763F4(&qword_1016A3028, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100F760B0(uint64_t a1)
{
  uint64_t v2 = sub_100F763F4(&qword_1016A3028, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionColorIntent);

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100F7611C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100F76130);
}

uint64_t sub_100F76130(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Logger();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100F761E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100F761F4);
}

void *sub_100F761F4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Logger();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100F7629C()
{
  return sub_100523288(&qword_1016A30C8, &qword_1016A30D0);
}

unint64_t sub_100F762D8()
{
  unint64_t result = qword_1016A30E0;
  if (!qword_1016A30E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1016A30E0);
  }
  return result;
}

uint64_t sub_100F7632C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100F76394(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100F763F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100F7643C(uint64_t a1, void *a2)
{
  if (type metadata accessor for CRLWPEditor()) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v5 = [a2 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  if (swift_dynamicCastClass())
  {
    IntentParameter.wrappedValue.getter();
    uint64_t v6 = (void *)sub_100FCB148(v24);
    uint64_t KeyPath = swift_getKeyPath();
    id v8 = v6;
    uint64_t v9 = sub_1008355F8();
    if (v9)
    {
      uint64_t v10 = v9;
      sub_101037680(KeyPath, v8, *(void *)&v9[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(void *)&v9[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
      swift_unknownObjectRelease();

      swift_release();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2941, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2941);
      swift_unknownObjectRelease();

      swift_release();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    if (sub_100BC1968()) {
      uint64_t v11 = swift_getObjCClassFromMetadata();
    }
    else {
      uint64_t v11 = 0;
    }
    [a2 mostSpecificCurrentEditorOfClass:v11];
    self;
    uint64_t v12 = (void *)swift_dynamicCastObjCClass();
    if (v12 && (uint64_t v13 = v12, [v12 isSingleBoardItemSelected]))
    {
      uint64_t v14 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      uint64_t v15 = *(uint64_t (**)(uint64_t))(**(void **)(a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                              + 288);
      uint64_t v16 = swift_retain();
      uint64_t v17 = (void *)v15(v16);
      swift_release();
      unsigned int v18 = [v17 widthValid];

      if (v18
        && (uint64_t v19 = *(uint64_t (**)(uint64_t))(**(void **)(a1 + v14) + 288),
            uint64_t v20 = swift_retain(),
            Swift::String v21 = (void *)v19(v20),
            swift_release(),
            unsigned __int8 v22 = [v21 heightValid],
            v21,
            (v22 & 1) != 0))
      {
        IntentParameter.wrappedValue.getter();
        id v23 = (id)sub_100FCB148(v25);
        [v13 setShapeFill:v23];
      }
      else
      {
        IntentParameter.wrappedValue.getter();
        id v23 = (id)sub_100FCB148(v26);
        sub_10092A20C(v13, v23);
      }

      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100F767D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100F76800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100F7682C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider);
  if (!sub_100A11ACC()) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, (unint64_t *)&qword_101686A40)) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v4 = [v2 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  id v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  unsigned __int8 v6 = [v5 canIntersectPaths];
  swift_unknownObjectRelease();
  if ((v6 & 1) == 0)
  {
LABEL_9:
    id v7 = [self mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v11 = sub_10051ECC0();
    swift_bridgeObjectRelease();
    [v11 setTag:1];
    id v12 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  sub_100F76C74();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_15:
  id v13 = sub_100F770D8();
  if (v13)
  {
    id v14 = v13;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  id v15 = sub_100F787D4();
  if (v15)
  {
    id v16 = v15;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  id v17 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithArrangedSubviews:isa];

  [v19 setAxis:1];
  if (qword_10166EB58 != -1) {
    swift_once();
  }
  [v19 setSpacing:*(double *)&qword_101719DD8];
  id v20 = [v19 viewWithTag:1];
  if (v20)
  {
    Swift::String v21 = v20;
    [v19 setCustomSpacing:v20 afterView:8.0];
  }
  return v19;
}

id sub_100F76C74()
{
  id v1 = v0;
  uint64_t v2 = sub_100F7949C((uint64_t)&off_1015023A8);

  if ((unint64_t)v2 >> 62)
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  }
  swift_bridgeObjectRelease();
  id v3 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithArrangedSubviews:isa];

  [v5 setAxis:0];
  [v5 setAlignment:0];
  [v5 setDistribution:2];
  [v5 setSpacing:1.0];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_101719DE0;
  id v7 = [v5 heightAnchor];
  id v8 = [v7 constraintGreaterThanOrEqualToConstant:v6];

  [v8 setActive:1];
  swift_bridgeObjectRelease();

  return v5;
}

void sub_100F76E94(int *a1@<X0>, void *a2@<X8>)
{
  swift_getObjectType();
  int v4 = *a1;
  id v5 = sub_100F78FDC(*a1);
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(_DWORD *)(v7 + 24) = v4;
  uint64_t v16 = v7;
  id v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v9 = sub_100F7924C(v4);
  uint64_t v11 = v10;
  id v12 = self;
  id v13 = [v12 labelColor:0, 0, 0, sub_100F79B0C, v16];
  id v14 = [v12 labelColor];
  id v15 = sub_10051E93C(v5, 0, 0, v8, 0, 0, v13, v14, 0, 0, 1, v9, v11, 0);

  swift_bridgeObjectRelease();
  *a2 = v15;
}

void sub_100F77058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    id v6 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider);

    sub_100A11DC0(a3);
  }
}

id sub_100F770D8()
{
  if (sub_100A11978())
  {
    sub_100F776B4();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  __int16 v0 = sub_100A11C20();
  if (v0)
  {
    if ((v0 & 0x100) != 0)
    {
      sub_100F77E94();
      goto LABEL_12;
    }
    id v11 = [self mainBundle];
    NSString v12 = String._bridgeToObjectiveC()();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v15;

    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v27 = v16;
    uint64_t v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = [self labelColor];
  }
  else
  {
    if ((v0 & 0x100) == 0) {
      goto LABEL_15;
    }
    id v1 = [self mainBundle];
    NSString v2 = String._bridgeToObjectiveC()();
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v26 = v8;
    uint64_t v9 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v10 = [self labelColor];
  }
  id v17 = v10;
  sub_10051F614(v5, v7, 0, (uint64_t)v17, 0, 1, v9, 0);
  swift_bridgeObjectRelease();

LABEL_12:
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_15:
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    id v18 = (id)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_17;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return v18;
  }
  id v18 = *(id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v18) {
    goto LABEL_23;
  }
LABEL_17:
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v19 = *(double *)&qword_101719DD0;
  id v20 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [v20 initWithArrangedSubviews:isa];

  [v18 setAxis:0];
  [v18 setAlignment:0];
  [v18 setDistribution:1];
  [v18 setSpacing:v19];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v22 = *(double *)&qword_101719DE0;
  id v23 = [v18 heightAnchor];
  id v24 = [v23 constraintGreaterThanOrEqualToConstant:v22];

  [v24 setActive:1];
  swift_bridgeObjectRelease();

  return v18;
}

id sub_100F776B4()
{
  swift_getObjectType();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_10117DF50;
  NSString v0 = String._bridgeToObjectiveC()();
  id v37 = self;
  id v1 = [v37 systemImageNamed:v0];

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  NSString v3 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v36 = self;
  id v4 = [v36 mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  id v11 = self;
  id v12 = [v11 labelColor];
  id v13 = [v11 labelColor];
  id v14 = sub_10051E93C(v1, 0, 0, v3, 0, 0, v12, v13, 0, 0, 1, v8, v10, 0);

  swift_bridgeObjectRelease();
  *(void *)(v38 + 32) = v14;
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v37 systemImageNamed:v15];

  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v19 = [v36 mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  id v26 = [v11 labelColor];
  id v27 = [v11 labelColor];
  uint64_t v28 = sub_10051E93C(v16, 0, 0, v18, 0, 0, v26, v27, 0, 0, 1, v23, v25, 0);

  swift_bridgeObjectRelease();
  *(void *)(v38 + 40) = v28;
  specialized Array._endMutation()();
  id v29 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v31 = [v29 initWithArrangedSubviews:isa];

  [v31 setAxis:0];
  [v31 setAlignment:0];
  [v31 setDistribution:2];
  [v31 setSpacing:1.0];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v32 = *(double *)&qword_101719DE0;
  id v33 = [v31 heightAnchor];
  id v34 = [v33 constraintGreaterThanOrEqualToConstant:v32];

  [v34 setActive:1];
  swift_bridgeObjectRelease();

  return v31;
}

uint64_t sub_100F77C98(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = (void *)result;
    uint64_t v9 = (char *)objc_retain(*(id *)(result
                                   + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider));

    uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    if (sub_10050BF48(0, a3)) {
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    }
    else {
      uint64_t ObjCClassFromMetadata = 0;
    }
    id v12 = [v10 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    self;
    id v13 = (void *)swift_dynamicCastObjCClass();
    if (v13) {
      [v13 *a5:v9];
    }

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100F77D98(uint64_t a1, uint64_t a2, SEL *a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    NSString v5 = (void *)result;
    NSString v6 = (char *)objc_retain(*(id *)(result
                                   + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider));

    id v7 = *(void **)&v6[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    if (sub_10050BF48(0, &qword_10168BFB8)) {
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    }
    else {
      uint64_t ObjCClassFromMetadata = 0;
    }
    id v9 = [v7 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (v10) {
      [v10 *a3:v6];
    }

    return swift_unknownObjectRelease();
  }
  return result;
}

void *sub_100F77E94()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  id v7 = [self labelColor];
  uint64_t v8 = sub_10051F614(v4, v6, 0, (uint64_t)v7, 0, 1, 0, 0);
  swift_bridgeObjectRelease();

  [v8 setShowsMenuAsPrimaryAction:1];
  Class isa = sub_100F77FF8().super.super.isa;
  [v8 setMenu:isa];

  return v8;
}

UIMenu sub_100F77FF8()
{
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  id v0 = self;
  id v1 = [v0 mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v7 = [v0 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v11 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, &qword_101673A80);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117DF50;
  *(void *)(v12 + 32) = v6;
  *(void *)(v12 + 40) = v11;
  UIMenuElementSize preferredElementSize = v12;
  specialized Array._endMutation()();
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v16.value.super.Class isa = 0;
  v16.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v16, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0);
}

id sub_100F782E8()
{
  id v1 = v0;
  NSString v2 = sub_100F798FC((uint64_t)&off_1015023E0);

  if ((unint64_t)v2 >> 62)
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  }
  swift_bridgeObjectRelease();
  id v3 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithArrangedSubviews:isa];

  [v5 setAxis:0];
  [v5 setAlignment:0];
  [v5 setDistribution:2];
  [v5 setSpacing:1.0];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_101719DE0;
  id v7 = [v5 heightAnchor];
  id v8 = [v7 constraintGreaterThanOrEqualToConstant:v6];

  [v8 setActive:1];
  swift_bridgeObjectRelease();

  return v5;
}

void sub_100F78508(uint64_t *a1@<X0>, void *a2@<X8>)
{
  swift_getObjectType();
  uint64_t v4 = *a1;
  id v5 = sub_100F79584(*a1);
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  uint64_t v16 = v7;
  id v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v9 = sub_100F79684();
  uint64_t v11 = v10;
  uint64_t v12 = self;
  id v13 = [v12 labelColor:0, 0, 0, sub_100F79A1C, v16];
  id v14 = [v12 labelColor];
  NSString v15 = sub_10051E93C(v5, 0, 0, v8, 0, 0, v13, v14, 0, 0, 1, v9, v11, 0);

  swift_bridgeObjectRelease();
  *a2 = v15;
}

void sub_100F786C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = (char *)objc_retain(*(id *)(Strong
                                   + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider));

    uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    if (sub_10050BF48(0, (unint64_t *)&qword_101686A40)) {
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    }
    else {
      uint64_t ObjCClassFromMetadata = 0;
    }
    id v9 = [v7 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (!v10) {
      swift_unknownObjectRelease();
    }
    [v10 performBooleanOperationOnPaths:a3];
  }
}

id sub_100F787D4()
{
  id v1 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLiOSMiniFormatterArrangeBuilder_arrangeDataProvider)
                + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, (unint64_t *)&qword_101686A40)) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v3 = [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    unsigned __int8 v5 = [v4 canIntersectPaths];
    swift_unknownObjectRelease();
    if (v5)
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      unint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_10117DF50;
      id v7 = [self mainBundle];
      NSString v8 = String._bridgeToObjectiveC()();
      NSString v9 = String._bridgeToObjectiveC()();
      id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v11 = sub_10051ECC0();
      swift_bridgeObjectRelease();
      *(void *)(v6 + 32) = v11;
      *(void *)(v6 + 40) = sub_100F782E8();
      specialized Array._endMutation()();
      if (v6 >> 62)
      {
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
        swift_bridgeObjectRetain();
        _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      }
      swift_bridgeObjectRelease();
      id v12 = objc_allocWithZone((Class)UIStackView);
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v14 = [v12 initWithArrangedSubviews:isa];

      [v14 setAxis:1];
      if (qword_10166EB58 != -1) {
        swift_once();
      }
      [v14 setSpacing:*(double *)&qword_101719DD8];
      return v14;
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  if (!sub_100A12148()) {
    return 0;
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_101177E70;
  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v34 = v23;
  uint64_t v24 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v25 = [self labelColor:0, 0, 0, sub_100F78FA8, v34];
  id v26 = sub_10051F614(v20, v22, 0, (uint64_t)v25, 0, 1, v24, 0);
  swift_bridgeObjectRelease();

  *(void *)(v15 + 32) = v26;
  specialized Array._endMutation()();
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v27 = *(double *)&qword_101719DD0;
  id v28 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class v29 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v28 initWithArrangedSubviews:v29];

  [v14 setAxis:0];
  [v14 setAlignment:0];
  [v14 setDistribution:0];
  [v14 setSpacing:v27];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v30 = *(double *)&qword_101719DE0;
  id v31 = [v14 heightAnchor];
  id v32 = [v31 constraintGreaterThanOrEqualToConstant:v30];

  [v32 setActive:1];
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_100F78E9C()
{
  BOOL v0 = sub_100A11ACC();
  BOOL v1 = sub_100A11978();
  __int16 v2 = sub_100A11C20();
  if ((v2 & 0x100) != 0) {
    return 0;
  }
  else {
    return ((v2 & 1) == 0) & ~(v0 | v1);
  }
}

void sub_100F78EF8()
{
}

id sub_100F78F08()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLiOSMiniFormatterArrangeBuilder();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterArrangeBuilder()
{
  return self;
}

uint64_t sub_100F78F70()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100F78FA8(uint64_t a1)
{
  return sub_100F77C98(a1, v1, &qword_10168AB80, (uint64_t)off_1014C0E10, (SEL *)&selRef_mergeDrawings_);
}

id sub_100F78FDC(int a1)
{
  switch(a1)
  {
    case 0:
      NSString v1 = String._bridgeToObjectiveC()();
      id v2 = [self systemImageNamed:v1];

      if (!v2)
      {
        __break(1u);
        goto LABEL_4;
      }
      break;
    case 1:
LABEL_4:
      NSString v3 = String._bridgeToObjectiveC()();
      id v2 = [self systemImageNamed:v3];

      if (!v2)
      {
        __break(1u);
        goto LABEL_6;
      }
      break;
    case 2:
LABEL_6:
      NSString v4 = String._bridgeToObjectiveC()();
      id v2 = [self systemImageNamed:v4];

      if (!v2)
      {
        __break(1u);
        goto LABEL_8;
      }
      break;
    case 3:
LABEL_8:
      NSString v5 = String._bridgeToObjectiveC()();
      id v2 = [self systemImageNamed:v5];

      if (!v2)
      {
        __break(1u);
        goto LABEL_10;
      }
      break;
    case 4:
LABEL_10:
      NSString v6 = String._bridgeToObjectiveC()();
      id v2 = [self systemImageNamed:v6];

      if (!v2)
      {
        __break(1u);
        goto LABEL_12;
      }
      break;
    case 5:
      NSString v7 = String._bridgeToObjectiveC()();
      id v2 = [self systemImageNamed:v7];

      if (!v2)
      {
        __break(1u);
        JUMPOUT(0x100F79234);
      }
      return result;
    default:
LABEL_12:
      id v2 = 0;
      break;
  }
  return v2;
}

uint64_t sub_100F7924C(int a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      id v2 = [self mainBundle];
      NSString v3 = String._bridgeToObjectiveC()();
      NSString v4 = String._bridgeToObjectiveC()();
      id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    default:
      uint64_t v1 = 0;
      break;
  }
  return v1;
}

double *sub_100F7949C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  id result = _swiftEmptyArrayStorage;
  if (v4)
  {
    id v10 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    NSString v6 = (int *)(a1 + 32);
    while (1)
    {
      int v7 = *v6++;
      int v8 = v7;
      sub_100F76E94(&v8, &v9);
      if (v2) {
        break;
      }
      uint64_t v2 = 0;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v4) {
        return v10;
      }
    }
    return (double *)swift_release();
  }
  return result;
}

id sub_100F79584(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      NSString v2 = String._bridgeToObjectiveC()();
      id v1 = [self imageNamed:v2];

      break;
    default:
      id v1 = 0;
      break;
  }
  return v1;
}

uint64_t sub_100F79684()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

double *sub_100F798FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  id result = _swiftEmptyArrayStorage;
  if (v4)
  {
    id v10 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    NSString v6 = (uint64_t *)(a1 + 32);
    while (1)
    {
      uint64_t v7 = *v6++;
      uint64_t v8 = v7;
      sub_100F78508(&v8, &v9);
      if (v2) {
        break;
      }
      uint64_t v2 = 0;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v4) {
        return v10;
      }
    }
    return (double *)swift_release();
  }
  return result;
}

uint64_t sub_100F799E4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100F79A1C(uint64_t a1)
{
  sub_100F786C8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100F79A24(uint64_t a1)
{
  return sub_100F77D98(a1, v1, (SEL *)&selRef_group_);
}

uint64_t sub_100F79A48(uint64_t a1)
{
  return sub_100F77D98(a1, v1, (SEL *)&selRef_ungroup_);
}

uint64_t sub_100F79A6C(uint64_t a1)
{
  return sub_100F77C98(a1, v1, &qword_10168BFB8, (uint64_t)off_1014C0D68, (SEL *)&selRef_distributeDrawablesHorizontally_);
}

uint64_t sub_100F79AA0(uint64_t a1)
{
  return sub_100F77C98(a1, v1, &qword_10168BFB8, (uint64_t)off_1014C0D68, (SEL *)&selRef_distributeDrawablesVertically_);
}

uint64_t sub_100F79AD4()
{
  swift_release();

  return _swift_deallocObject(v0, 28, 7);
}

void sub_100F79B0C(uint64_t a1)
{
  sub_100F77058(a1, *(void *)(v1 + 16), *(unsigned int *)(v1 + 24));
}

uint64_t sub_100F79B18(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = a2[4];
    uint64_t v7 = (_OWORD *)(a1 + 40);
    uint64_t v8 = a2 + 5;
    switch(*((unsigned char *)a2 + 296))
    {
      case 0:
        uint64_t v9 = a2[8];
        if (v9)
        {
          *(void *)(v4 + 64) = v9;
          (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
        }
        else
        {
          long long v48 = *(_OWORD *)(a2 + 7);
          _OWORD *v7 = *v8;
          *(_OWORD *)(v4 + 56) = v48;
        }
        id v49 = (_OWORD *)(v4 + 72);
        char v50 = a2 + 9;
        uint64_t v51 = a2[12];
        if (v51)
        {
          *(void *)(v4 + 96) = v51;
          (**(void (***)(_OWORD *, _OWORD *))(v51 - 8))(v49, v50);
        }
        else
        {
          long long v91 = *(_OWORD *)(a2 + 11);
          _OWORD *v49 = *v50;
          *(_OWORD *)(v4 + 88) = v91;
        }
        *(unsigned char *)(v4 + 296) = 0;
        break;
      case 1:
        uint64_t v11 = a2[8];
        if (v11)
        {
          *(void *)(v4 + 64) = v11;
          (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v7, v8);
        }
        else
        {
          long long v52 = *(_OWORD *)(a2 + 7);
          _OWORD *v7 = *v8;
          *(_OWORD *)(v4 + 56) = v52;
        }
        *(unsigned char *)(v4 + 296) = 1;
        break;
      case 0x12:
        id v12 = (void *)a2[5];
        id v13 = (void *)a2[6];
        *(void *)(v4 + 40) = v12;
        *(void *)(v4 + 48) = v13;
        char v14 = 18;
        goto LABEL_16;
      case 0x13:
        uint64_t v15 = *(void **)v8;
        *(void *)(v4 + 40) = *(void *)v8;
        char v16 = 19;
        goto LABEL_28;
      case 0x14:
        id v12 = (void *)a2[5];
        id v13 = (void *)a2[6];
        *(void *)(v4 + 40) = v12;
        *(void *)(v4 + 48) = v13;
        char v14 = 20;
        goto LABEL_16;
      case 0x15:
        uint64_t v15 = *(void **)v8;
        *(void *)(v4 + 40) = *(void *)v8;
        char v16 = 21;
        goto LABEL_28;
      case 0x1C:
        id v12 = (void *)a2[5];
        id v13 = (void *)a2[6];
        *(void *)(v4 + 40) = v12;
        *(void *)(v4 + 48) = v13;
        char v14 = 28;
        goto LABEL_16;
      case 0x1D:
        uint64_t v15 = *(void **)v8;
        *(void *)(v4 + 40) = *(void *)v8;
        char v16 = 29;
        goto LABEL_28;
      case 0x1E:
        id v12 = (void *)a2[5];
        id v13 = (void *)a2[6];
        *(void *)(v4 + 40) = v12;
        *(void *)(v4 + 48) = v13;
        char v14 = 30;
LABEL_16:
        *(unsigned char *)(v4 + 296) = v14;
        id v17 = v12;
        id v18 = v13;
        break;
      case 0x1F:
        uint64_t v15 = *(void **)v8;
        *(void *)(v4 + 40) = *(void *)v8;
        char v16 = 31;
        goto LABEL_28;
      case 0x20:
        uint64_t v19 = a2[6];
        *(void *)(v4 + 40) = a2[5];
        *(void *)(v4 + 48) = v19;
        char v20 = 32;
        goto LABEL_25;
      case 0x21:
        *(void *)(v4 + 40) = *(void *)v8;
        char v21 = 33;
        goto LABEL_48;
      case 0x22:
        uint64_t v22 = a2[8];
        if (v22)
        {
          *(void *)(v4 + 64) = v22;
          (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v7, v8);
        }
        else
        {
          long long v53 = *(_OWORD *)(a2 + 7);
          _OWORD *v7 = *v8;
          *(_OWORD *)(v4 + 56) = v53;
        }
        uint64_t v54 = (_OWORD *)(v4 + 72);
        uint64_t v55 = a2 + 9;
        uint64_t v56 = a2[12];
        if (v56)
        {
          *(void *)(v4 + 96) = v56;
          (**(void (***)(_OWORD *, _OWORD *))(v56 - 8))(v54, v55);
        }
        else
        {
          long long v92 = *(_OWORD *)(a2 + 11);
          *uint64_t v54 = *v55;
          *(_OWORD *)(v4 + 88) = v92;
        }
        *(unsigned char *)(v4 + 296) = 34;
        break;
      case 0x23:
        uint64_t v23 = a2[8];
        if (v23)
        {
          *(void *)(v4 + 64) = v23;
          (**(void (***)(_OWORD *, _OWORD *))(v23 - 8))(v7, v8);
        }
        else
        {
          long long v57 = *(_OWORD *)(a2 + 7);
          _OWORD *v7 = *v8;
          *(_OWORD *)(v4 + 56) = v57;
        }
        *(unsigned char *)(v4 + 296) = 35;
        break;
      case 0x24:
        uint64_t v24 = a2[6];
        *(void *)(v4 + 40) = a2[5];
        *(void *)(v4 + 48) = v24;
        char v20 = 36;
LABEL_25:
        *(unsigned char *)(v4 + 296) = v20;
        swift_bridgeObjectRetain();
        goto LABEL_49;
      case 0x25:
        *(void *)(v4 + 40) = *(void *)v8;
        char v21 = 37;
        goto LABEL_48;
      case 0x3A:
        *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 5);
        *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
        *(unsigned char *)(v4 + 72) = *((unsigned char *)a2 + 72);
        uint64_t v15 = (void *)a2[10];
        *(void *)(v4 + 80) = v15;
        *(unsigned char *)(v4 + 88) = *((unsigned char *)a2 + 88);
        char v16 = 58;
LABEL_28:
        *(unsigned char *)(v4 + 296) = v16;
        id v25 = v15;
        break;
      case 0x3F:
        long long v26 = *(_OWORD *)(a2 + 7);
        _OWORD *v7 = *v8;
        *(_OWORD *)(v4 + 56) = v26;
        *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(v4 + 88) = *(_OWORD *)(a2 + 11);
        double v27 = (void *)a2[13];
        id v28 = (void *)a2[14];
        *(void *)(v4 + 104) = v27;
        *(void *)(v4 + 112) = v28;
        Class v29 = (void *)a2[15];
        double v30 = (void *)a2[16];
        *(void *)(v4 + 120) = v29;
        *(void *)(v4 + 128) = v30;
        uint64_t v31 = a2[20];
        id v32 = v27;
        id v33 = v28;
        id v34 = v29;
        id v35 = v30;
        if (v31)
        {
          uint64_t v36 = a2[21];
          *(void *)(v4 + 160) = v31;
          *(void *)(v4 + 168) = v36;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))(v4 + 136, (uint64_t)(a2 + 17), v31);
        }
        else
        {
          long long v58 = *(_OWORD *)(a2 + 19);
          *(_OWORD *)(v4 + 136) = *(_OWORD *)(a2 + 17);
          *(_OWORD *)(v4 + 152) = v58;
          *(void *)(v4 + 168) = a2[21];
        }
        uint64_t v59 = a2[23];
        *(void *)(v4 + 176) = a2[22];
        *(void *)(v4 + 184) = v59;
        char v21 = 63;
        goto LABEL_48;
      case 0x40:
        long long v37 = *(_OWORD *)(a2 + 7);
        _OWORD *v7 = *v8;
        *(_OWORD *)(v4 + 56) = v37;
        uint64_t v38 = (void *)a2[9];
        uint64_t v39 = (void *)a2[10];
        *(void *)(v4 + 72) = v38;
        *(void *)(v4 + 80) = v39;
        uint64_t v40 = (void *)a2[11];
        char v41 = (void *)a2[12];
        *(void *)(v4 + 88) = v40;
        *(void *)(v4 + 96) = v41;
        uint64_t v42 = a2[16];
        id v43 = v38;
        id v44 = v39;
        id v45 = v40;
        id v46 = v41;
        if (v42)
        {
          uint64_t v47 = a2[17];
          *(void *)(v4 + 128) = v42;
          *(void *)(v4 + 136) = v47;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v42 - 8))(v4 + 104, (uint64_t)(a2 + 13), v42);
        }
        else
        {
          long long v60 = *(_OWORD *)(a2 + 15);
          *(_OWORD *)(v4 + 104) = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(v4 + 120) = v60;
          *(void *)(v4 + 136) = a2[17];
        }
        uint64_t v61 = a2[19];
        *(void *)(v4 + 144) = a2[18];
        *(void *)(v4 + 152) = v61;
        char v21 = 64;
LABEL_48:
        *(unsigned char *)(v4 + 296) = v21;
LABEL_49:
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy(v7, v8, 0x101uLL);
        break;
    }
    uint64_t v62 = (void *)a2[38];
    *(void *)(v4 + 304) = v62;
    *(_DWORD *)(v4 + 312) = *((_DWORD *)a2 + 78);
    uint64_t v63 = a3[5];
    uint64_t v64 = v4 + v63;
    uint64_t v65 = (uint64_t)a2 + v63;
    uint64_t v66 = type metadata accessor for UUID();
    uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16);
    id v68 = v62;
    v67(v64, v65, v66);
    swift_unknownObjectWeakCopyInit();
    uint64_t v69 = a3[7];
    uint64_t v70 = (char *)(v4 + v69);
    uint64_t v71 = (char *)a2 + v69;
    uint64_t v72 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v73 = *(void *)(v72 - 8);
    uint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
    uint64_t v93 = (void (*)(char *, char *, uint64_t))v67;
    if (v74(v71, 1, v72))
    {
      uint64_t v75 = sub_1005057FC(&qword_1016730B0);
      memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      v67((uint64_t)v70, (uint64_t)v71, v66);
      uint64_t v76 = *(int *)(v72 + 20);
      unint64_t v77 = &v70[v76];
      unint64_t v78 = &v71[v76];
      uint64_t v79 = *((void *)v78 + 1);
      *(void *)unint64_t v77 = *(void *)v78;
      *((void *)v77 + 1) = v79;
      uint64_t v80 = *(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56);
      swift_retain();
      v80(v70, 0, 1, v72);
    }
    uint64_t v81 = a3[8];
    unsigned int v82 = (char *)(v4 + v81);
    uint64_t v83 = (char *)a2 + v81;
    if (v74((char *)a2 + v81, 1, v72))
    {
      uint64_t v84 = sub_1005057FC(&qword_1016730B0);
      memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      v93(v82, v83, v66);
      uint64_t v85 = *(int *)(v72 + 20);
      uint64_t v86 = &v82[v85];
      uint64_t v87 = &v83[v85];
      uint64_t v88 = *((void *)v87 + 1);
      *(void *)uint64_t v86 = *(void *)v87;
      *((void *)v86 + 1) = v88;
      uint64_t v89 = *(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56);
      swift_retain();
      v89(v82, 0, 1, v72);
    }
  }
  return v4;
}

uint64_t sub_100F7A33C(uint64_t a1, int *a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 296);
  int v5 = (id *)(a1 + 40);
  switch(v4)
  {
    case 0:
    case 34:
      if (*(void *)(a1 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v5);
      }
      if (*(void *)(a1 + 96)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 72);
      }
      break;
    case 1:
    case 35:
      if (*(void *)(a1 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v5);
      }
      break;
    case 18:
    case 20:
    case 28:
    case 30:

      break;
    case 19:
    case 21:
    case 29:
    case 31:

      break;
    case 32:
    case 36:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 33:
    case 37:
      goto LABEL_17;
    case 58:

      break;
    case 63:

      if (*(void *)(a1 + 160)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 136);
      }
      goto LABEL_17;
    case 64:

      if (*(void *)(a1 + 128)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 104);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  swift_unknownObjectWeakDestroy();
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {
    v8(v9, v7);
    swift_release();
  }
  uint64_t v12 = a1 + a2[8];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v12, 1, v10);
  if (!result)
  {
    v8(v12, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_100F7A6D0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = (_OWORD *)(a1 + 40);
  uint64_t v7 = (_OWORD *)(a2 + 40);
  switch(*(unsigned char *)(a2 + 296))
  {
    case 0:
      uint64_t v8 = *(void *)(a2 + 64);
      if (v8)
      {
        *(void *)(a1 + 64) = v8;
        (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v7);
      }
      else
      {
        long long v46 = v7[1];
        _OWORD *v6 = *v7;
        v6[1] = v46;
      }
      uint64_t v47 = (_OWORD *)(a1 + 72);
      long long v48 = (_OWORD *)(a2 + 72);
      uint64_t v49 = *(void *)(a2 + 96);
      if (v49)
      {
        *(void *)(a1 + 96) = v49;
        (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v47, v48);
      }
      else
      {
        long long v89 = *(_OWORD *)(a2 + 88);
        *uint64_t v47 = *v48;
        *(_OWORD *)(a1 + 88) = v89;
      }
      *(unsigned char *)(a1 + 296) = 0;
      break;
    case 1:
      uint64_t v9 = *(void *)(a2 + 64);
      if (v9)
      {
        *(void *)(a1 + 64) = v9;
        (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v6, v7);
      }
      else
      {
        long long v50 = v7[1];
        _OWORD *v6 = *v7;
        v6[1] = v50;
      }
      *(unsigned char *)(a1 + 296) = 1;
      break;
    case 0x12:
      uint64_t v10 = *(void **)(a2 + 40);
      uint64_t v11 = *(void **)(a2 + 48);
      *(void *)(a1 + 40) = v10;
      *(void *)(a1 + 48) = v11;
      char v12 = 18;
      goto LABEL_14;
    case 0x13:
      id v13 = *(void **)v7;
      *(void *)(a1 + 40) = *(void *)v7;
      char v14 = 19;
      goto LABEL_26;
    case 0x14:
      uint64_t v10 = *(void **)(a2 + 40);
      uint64_t v11 = *(void **)(a2 + 48);
      *(void *)(a1 + 40) = v10;
      *(void *)(a1 + 48) = v11;
      char v12 = 20;
      goto LABEL_14;
    case 0x15:
      id v13 = *(void **)v7;
      *(void *)(a1 + 40) = *(void *)v7;
      char v14 = 21;
      goto LABEL_26;
    case 0x1C:
      uint64_t v10 = *(void **)(a2 + 40);
      uint64_t v11 = *(void **)(a2 + 48);
      *(void *)(a1 + 40) = v10;
      *(void *)(a1 + 48) = v11;
      char v12 = 28;
      goto LABEL_14;
    case 0x1D:
      id v13 = *(void **)v7;
      *(void *)(a1 + 40) = *(void *)v7;
      char v14 = 29;
      goto LABEL_26;
    case 0x1E:
      uint64_t v10 = *(void **)(a2 + 40);
      uint64_t v11 = *(void **)(a2 + 48);
      *(void *)(a1 + 40) = v10;
      *(void *)(a1 + 48) = v11;
      char v12 = 30;
LABEL_14:
      *(unsigned char *)(a1 + 296) = v12;
      id v15 = v10;
      id v16 = v11;
      break;
    case 0x1F:
      id v13 = *(void **)v7;
      *(void *)(a1 + 40) = *(void *)v7;
      char v14 = 31;
      goto LABEL_26;
    case 0x20:
      uint64_t v17 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v17;
      char v18 = 32;
      goto LABEL_23;
    case 0x21:
      *(void *)(a1 + 40) = *(void *)v7;
      char v19 = 33;
      goto LABEL_46;
    case 0x22:
      uint64_t v20 = *(void *)(a2 + 64);
      if (v20)
      {
        *(void *)(a1 + 64) = v20;
        (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v6, v7);
      }
      else
      {
        long long v51 = v7[1];
        _OWORD *v6 = *v7;
        v6[1] = v51;
      }
      long long v52 = (_OWORD *)(a1 + 72);
      long long v53 = (_OWORD *)(a2 + 72);
      uint64_t v54 = *(void *)(a2 + 96);
      if (v54)
      {
        *(void *)(a1 + 96) = v54;
        (**(void (***)(_OWORD *, _OWORD *))(v54 - 8))(v52, v53);
      }
      else
      {
        long long v90 = *(_OWORD *)(a2 + 88);
        *long long v52 = *v53;
        *(_OWORD *)(a1 + 88) = v90;
      }
      *(unsigned char *)(a1 + 296) = 34;
      break;
    case 0x23:
      uint64_t v21 = *(void *)(a2 + 64);
      if (v21)
      {
        *(void *)(a1 + 64) = v21;
        (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v6, v7);
      }
      else
      {
        long long v55 = v7[1];
        _OWORD *v6 = *v7;
        v6[1] = v55;
      }
      *(unsigned char *)(a1 + 296) = 35;
      break;
    case 0x24:
      uint64_t v22 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v22;
      char v18 = 36;
LABEL_23:
      *(unsigned char *)(a1 + 296) = v18;
      swift_bridgeObjectRetain();
      goto LABEL_47;
    case 0x25:
      *(void *)(a1 + 40) = *(void *)v7;
      char v19 = 37;
      goto LABEL_46;
    case 0x3A:
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      id v13 = *(void **)(a2 + 80);
      *(void *)(a1 + 80) = v13;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      char v14 = 58;
LABEL_26:
      *(unsigned char *)(a1 + 296) = v14;
      id v23 = v13;
      break;
    case 0x3F:
      long long v24 = v7[1];
      _OWORD *v6 = *v7;
      v6[1] = v24;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      id v25 = *(void **)(a2 + 104);
      long long v26 = *(void **)(a2 + 112);
      *(void *)(a1 + 104) = v25;
      *(void *)(a1 + 112) = v26;
      double v27 = *(void **)(a2 + 120);
      id v28 = *(void **)(a2 + 128);
      *(void *)(a1 + 120) = v27;
      *(void *)(a1 + 128) = v28;
      uint64_t v29 = *(void *)(a2 + 160);
      id v30 = v25;
      id v31 = v26;
      id v32 = v27;
      id v33 = v28;
      if (v29)
      {
        uint64_t v34 = *(void *)(a2 + 168);
        *(void *)(a1 + 160) = v29;
        *(void *)(a1 + 168) = v34;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8))(a1 + 136, a2 + 136, v29);
      }
      else
      {
        long long v56 = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 152) = v56;
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
      }
      uint64_t v57 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v57;
      char v19 = 63;
      goto LABEL_46;
    case 0x40:
      long long v35 = v7[1];
      _OWORD *v6 = *v7;
      v6[1] = v35;
      uint64_t v36 = *(void **)(a2 + 72);
      long long v37 = *(void **)(a2 + 80);
      *(void *)(a1 + 72) = v36;
      *(void *)(a1 + 80) = v37;
      uint64_t v38 = *(void **)(a2 + 88);
      uint64_t v39 = *(void **)(a2 + 96);
      *(void *)(a1 + 88) = v38;
      *(void *)(a1 + 96) = v39;
      uint64_t v40 = *(void *)(a2 + 128);
      id v41 = v36;
      id v42 = v37;
      id v43 = v38;
      id v44 = v39;
      if (v40)
      {
        uint64_t v45 = *(void *)(a2 + 136);
        *(void *)(a1 + 128) = v40;
        *(void *)(a1 + 136) = v45;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v40 - 8))(a1 + 104, a2 + 104, v40);
      }
      else
      {
        long long v58 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v58;
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
      }
      uint64_t v59 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v59;
      char v19 = 64;
LABEL_46:
      *(unsigned char *)(a1 + 296) = v19;
LABEL_47:
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(v6, v7, 0x101uLL);
      break;
  }
  long long v60 = *(void **)(a2 + 304);
  *(void *)(a1 + 304) = v60;
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  uint64_t v61 = a3[5];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = type metadata accessor for UUID();
  uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16);
  id v66 = v60;
  v65(v62, v63, v64);
  swift_unknownObjectWeakCopyInit();
  uint64_t v67 = a3[7];
  id v68 = (char *)(a1 + v67);
  uint64_t v69 = (char *)(a2 + v67);
  uint64_t v70 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
  long long v91 = (void (*)(char *, char *, uint64_t))v65;
  if (v72(v69, 1, v70))
  {
    uint64_t v73 = sub_1005057FC(&qword_1016730B0);
    memcpy(v68, v69, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    v65((uint64_t)v68, (uint64_t)v69, v64);
    uint64_t v74 = *(int *)(v70 + 20);
    uint64_t v75 = &v68[v74];
    uint64_t v76 = &v69[v74];
    uint64_t v77 = *((void *)v76 + 1);
    *(void *)uint64_t v75 = *(void *)v76;
    *((void *)v75 + 1) = v77;
    unint64_t v78 = *(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56);
    swift_retain();
    v78(v68, 0, 1, v70);
  }
  uint64_t v79 = a3[8];
  uint64_t v80 = (char *)(a1 + v79);
  uint64_t v81 = (char *)(a2 + v79);
  if (v72(v81, 1, v70))
  {
    uint64_t v82 = sub_1005057FC(&qword_1016730B0);
    memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    v91(v80, v81, v64);
    uint64_t v83 = *(int *)(v70 + 20);
    uint64_t v84 = &v80[v83];
    uint64_t v85 = &v81[v83];
    uint64_t v86 = *((void *)v85 + 1);
    *(void *)uint64_t v84 = *(void *)v85;
    *((void *)v84 + 1) = v86;
    uint64_t v87 = *(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56);
    swift_retain();
    v87(v80, 0, 1, v70);
  }
  return a1;
}

uint64_t sub_100F7AEA8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    uint64_t v6 = (_OWORD *)(a1 + 40);
    uint64_t v7 = (_OWORD *)(a2 + 40);
    sub_10054BD5C(a1 + 40);
    switch(*(unsigned char *)(a2 + 296))
    {
      case 0:
        uint64_t v8 = *(void *)(a2 + 64);
        if (v8)
        {
          *(void *)(a1 + 64) = v8;
          (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          long long v44 = *(_OWORD *)(a2 + 56);
          _OWORD *v6 = *v7;
          *(_OWORD *)(a1 + 56) = v44;
        }
        uint64_t v45 = (_OWORD *)(a1 + 72);
        long long v46 = (_OWORD *)(a2 + 72);
        uint64_t v47 = *(void *)(a2 + 96);
        if (v47)
        {
          *(void *)(a1 + 96) = v47;
          (**(void (***)(_OWORD *, _OWORD *))(v47 - 8))(v45, v46);
        }
        else
        {
          long long v98 = *(_OWORD *)(a2 + 88);
          *uint64_t v45 = *v46;
          *(_OWORD *)(a1 + 88) = v98;
        }
        *(unsigned char *)(a1 + 296) = 0;
        break;
      case 1:
        uint64_t v9 = *(void *)(a2 + 64);
        if (v9)
        {
          *(void *)(a1 + 64) = v9;
          (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          long long v48 = *(_OWORD *)(a2 + 56);
          _OWORD *v6 = *v7;
          *(_OWORD *)(a1 + 56) = v48;
        }
        *(unsigned char *)(a1 + 296) = 1;
        break;
      case 0x12:
        uint64_t v10 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v10;
        uint64_t v11 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v11;
        char v12 = 18;
        goto LABEL_15;
      case 0x13:
        id v13 = *(void **)v7;
        *(void *)(a1 + 40) = *(void *)v7;
        char v14 = 19;
        goto LABEL_27;
      case 0x14:
        uint64_t v10 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v10;
        uint64_t v11 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v11;
        char v12 = 20;
        goto LABEL_15;
      case 0x15:
        id v13 = *(void **)v7;
        *(void *)(a1 + 40) = *(void *)v7;
        char v14 = 21;
        goto LABEL_27;
      case 0x1C:
        uint64_t v10 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v10;
        uint64_t v11 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v11;
        char v12 = 28;
        goto LABEL_15;
      case 0x1D:
        id v13 = *(void **)v7;
        *(void *)(a1 + 40) = *(void *)v7;
        char v14 = 29;
        goto LABEL_27;
      case 0x1E:
        uint64_t v10 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v10;
        uint64_t v11 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v11;
        char v12 = 30;
LABEL_15:
        *(unsigned char *)(a1 + 296) = v12;
        id v15 = v10;
        id v16 = v11;
        break;
      case 0x1F:
        id v13 = *(void **)v7;
        *(void *)(a1 + 40) = *(void *)v7;
        char v14 = 31;
        goto LABEL_27;
      case 0x20:
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        char v17 = 32;
        goto LABEL_24;
      case 0x21:
        *(void *)(a1 + 40) = *(void *)v7;
        char v18 = 33;
        goto LABEL_47;
      case 0x22:
        uint64_t v19 = *(void *)(a2 + 64);
        if (v19)
        {
          *(void *)(a1 + 64) = v19;
          (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          long long v49 = *(_OWORD *)(a2 + 56);
          _OWORD *v6 = *v7;
          *(_OWORD *)(a1 + 56) = v49;
        }
        long long v50 = (_OWORD *)(a1 + 72);
        long long v51 = (_OWORD *)(a2 + 72);
        uint64_t v52 = *(void *)(a2 + 96);
        if (v52)
        {
          *(void *)(a1 + 96) = v52;
          (**(void (***)(_OWORD *, _OWORD *))(v52 - 8))(v50, v51);
        }
        else
        {
          long long v99 = *(_OWORD *)(a2 + 88);
          *long long v50 = *v51;
          *(_OWORD *)(a1 + 88) = v99;
        }
        *(unsigned char *)(a1 + 296) = 34;
        break;
      case 0x23:
        uint64_t v20 = *(void *)(a2 + 64);
        if (v20)
        {
          *(void *)(a1 + 64) = v20;
          (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          long long v53 = *(_OWORD *)(a2 + 56);
          _OWORD *v6 = *v7;
          *(_OWORD *)(a1 + 56) = v53;
        }
        *(unsigned char *)(a1 + 296) = 35;
        break;
      case 0x24:
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        char v17 = 36;
LABEL_24:
        *(unsigned char *)(a1 + 296) = v17;
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 0x25:
        *(void *)(a1 + 40) = *(void *)v7;
        char v18 = 37;
        goto LABEL_47;
      case 0x3A:
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        long long v21 = *(_OWORD *)(a2 + 56);
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = v21;
        id v13 = *(void **)(a2 + 80);
        *(void *)(a1 + 80) = v13;
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        char v14 = 58;
LABEL_27:
        *(unsigned char *)(a1 + 296) = v14;
        id v22 = v13;
        break;
      case 0x3F:
        long long v23 = *(_OWORD *)(a2 + 56);
        _OWORD *v6 = *v7;
        *(_OWORD *)(a1 + 56) = v23;
        long long v24 = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = v24;
        id v25 = *(void **)(a2 + 104);
        *(void *)(a1 + 104) = v25;
        long long v26 = *(void **)(a2 + 112);
        *(void *)(a1 + 112) = v26;
        double v27 = *(void **)(a2 + 120);
        *(void *)(a1 + 120) = v27;
        id v28 = *(void **)(a2 + 128);
        *(void *)(a1 + 128) = v28;
        uint64_t v29 = *(void *)(a2 + 160);
        id v30 = v25;
        id v31 = v26;
        id v32 = v27;
        id v33 = v28;
        if (v29)
        {
          *(void *)(a1 + 160) = v29;
          *(void *)(a1 + 168) = *(void *)(a2 + 168);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8))(a1 + 136, a2 + 136, v29);
        }
        else
        {
          long long v54 = *(_OWORD *)(a2 + 136);
          long long v55 = *(_OWORD *)(a2 + 152);
          *(void *)(a1 + 168) = *(void *)(a2 + 168);
          *(_OWORD *)(a1 + 136) = v54;
          *(_OWORD *)(a1 + 152) = v55;
        }
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        char v18 = 63;
        goto LABEL_47;
      case 0x40:
        long long v34 = *(_OWORD *)(a2 + 56);
        _OWORD *v6 = *v7;
        *(_OWORD *)(a1 + 56) = v34;
        long long v35 = *(void **)(a2 + 72);
        *(void *)(a1 + 72) = v35;
        uint64_t v36 = *(void **)(a2 + 80);
        *(void *)(a1 + 80) = v36;
        long long v37 = *(void **)(a2 + 88);
        *(void *)(a1 + 88) = v37;
        uint64_t v38 = *(void **)(a2 + 96);
        *(void *)(a1 + 96) = v38;
        uint64_t v39 = *(void *)(a2 + 128);
        id v40 = v35;
        id v41 = v36;
        id v42 = v37;
        id v43 = v38;
        if (v39)
        {
          *(void *)(a1 + 128) = v39;
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v39 - 8))(a1 + 104, a2 + 104, v39);
        }
        else
        {
          long long v56 = *(_OWORD *)(a2 + 104);
          long long v57 = *(_OWORD *)(a2 + 120);
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          *(_OWORD *)(a1 + 104) = v56;
          *(_OWORD *)(a1 + 120) = v57;
        }
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        char v18 = 64;
LABEL_47:
        *(unsigned char *)(a1 + 296) = v18;
LABEL_48:
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x101uLL);
        break;
    }
  }
  long long v58 = *(void **)(a1 + 304);
  uint64_t v59 = *(void **)(a2 + 304);
  *(void *)(a1 + 304) = v59;
  id v60 = v59;

  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
  *(unsigned char *)(a1 + 314) = *(unsigned char *)(a2 + 314);
  *(unsigned char *)(a1 + 315) = *(unsigned char *)(a2 + 315);
  uint64_t v61 = a3[5];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = type metadata accessor for UUID();
  uint64_t v102 = *(void *)(v64 - 8);
  uint64_t v103 = v64;
  uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v102 + 24);
  v100(v62, v63);
  swift_unknownObjectWeakCopyAssign();
  uint64_t v65 = a3[7];
  id v66 = (char *)(a1 + v65);
  uint64_t v67 = (char *)(a2 + v65);
  uint64_t v68 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v101 = *(void *)(v68 - 8);
  uint64_t v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v101 + 48);
  int v70 = v69(v66, 1, v68);
  int v71 = v69(v67, 1, v68);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v66, v67, v103);
      uint64_t v72 = *(int *)(v68 + 20);
      uint64_t v73 = &v66[v72];
      uint64_t v74 = &v67[v72];
      uint64_t v75 = *((void *)v74 + 1);
      *(void *)uint64_t v73 = *(void *)v74;
      *((void *)v73 + 1) = v75;
      uint64_t v76 = *(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56);
      swift_retain();
      v76(v66, 0, 1, v68);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v71)
  {
    sub_100F810DC((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_54:
    uint64_t v77 = sub_1005057FC(&qword_1016730B0);
    memcpy(v66, v67, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_55;
  }
  ((void (*)(char *, char *, uint64_t))v100)(v66, v67, v103);
  uint64_t v90 = *(int *)(v68 + 20);
  long long v91 = &v66[v90];
  long long v92 = &v67[v90];
  uint64_t v93 = *((void *)v92 + 1);
  *(void *)long long v91 = *(void *)v92;
  *((void *)v91 + 1) = v93;
  swift_retain();
  swift_release();
LABEL_55:
  uint64_t v78 = a3[8];
  uint64_t v79 = (char *)(a1 + v78);
  uint64_t v80 = (char *)(a2 + v78);
  int v81 = v69((char *)(a1 + v78), 1, v68);
  int v82 = v69(v80, 1, v68);
  if (!v81)
  {
    if (!v82)
    {
      ((void (*)(char *, char *, uint64_t))v100)(v79, v80, v103);
      uint64_t v94 = *(int *)(v68 + 20);
      uint64_t v95 = &v79[v94];
      uint64_t v96 = &v80[v94];
      uint64_t v97 = *((void *)v96 + 1);
      *(void *)uint64_t v95 = *(void *)v96;
      *((void *)v95 + 1) = v97;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_100F810DC((uint64_t)v79, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_60;
  }
  if (v82)
  {
LABEL_60:
    uint64_t v88 = sub_1005057FC(&qword_1016730B0);
    memcpy(v79, v80, *(void *)(*(void *)(v88 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v79, v80, v103);
  uint64_t v83 = *(int *)(v68 + 20);
  uint64_t v84 = &v79[v83];
  uint64_t v85 = &v80[v83];
  uint64_t v86 = *((void *)v85 + 1);
  *(void *)uint64_t v84 = *(void *)v85;
  *((void *)v84 + 1) = v86;
  uint64_t v87 = *(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56);
  swift_retain();
  v87(v79, 0, 1, v68);
  return a1;
}

char *sub_100F7B874(char *a1, char *a2, int *a3)
{
  memcpy(a1, a2, 0x13CuLL);
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  swift_unknownObjectWeakTakeInit();
  uint64_t v11 = a3[7];
  __dst = &a1[v11];
  char v12 = &a2[v11];
  uint64_t v13 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v14 = *(void *)(v13 - 8);
  id v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_1005057FC(&qword_1016730B0);
    memcpy(__dst, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(__dst, v12, v9);
    *(_OWORD *)&__dst[*(int *)(v13 + 20)] = *(_OWORD *)&v12[*(int *)(v13 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v17 = a3[8];
  char v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  if (v15(v19, 1, v13))
  {
    uint64_t v20 = sub_1005057FC(&qword_1016730B0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v10(v18, v19, v9);
    *(_OWORD *)&v18[*(int *)(v13 + 20)] = *(_OWORD *)&v19[*(int *)(v13 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_100F7BACC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    sub_10054BD5C(a1 + 40);
    memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x101uLL);
  }
  uint64_t v7 = *(void **)(a1 + 304);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);

  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(_WORD *)(a1 + 313) = *(_WORD *)(a2 + 313);
  *(unsigned char *)(a1 + 315) = *(unsigned char *)(a2 + 315);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  double v27 = *(void (**)(uint64_t, uint64_t))(v29 + 40);
  v27(v9, v10);
  swift_unknownObjectWeakTakeAssign();
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v28 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v17 = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v13, v14, v30);
      *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v13, 0, 1, v15);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v18)
  {
    sub_100F810DC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_8:
    uint64_t v19 = sub_1005057FC(&qword_1016730B0);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  ((void (*)(char *, char *, uint64_t))v27)(v13, v14, v30);
  *(_OWORD *)&v13[*(int *)(v15 + 20)] = *(_OWORD *)&v14[*(int *)(v15 + 20)];
  swift_release();
LABEL_9:
  uint64_t v20 = a3[8];
  long long v21 = (char *)(a1 + v20);
  id v22 = (char *)(a2 + v20);
  int v23 = v16((char *)(a1 + v20), 1, v15);
  int v24 = v16(v22, 1, v15);
  if (!v23)
  {
    if (!v24)
    {
      ((void (*)(char *, char *, uint64_t))v27)(v21, v22, v30);
      *(_OWORD *)&v21[*(int *)(v15 + 20)] = *(_OWORD *)&v22[*(int *)(v15 + 20)];
      swift_release();
      return a1;
    }
    sub_100F810DC((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_14;
  }
  if (v24)
  {
LABEL_14:
    uint64_t v25 = sub_1005057FC(&qword_1016730B0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v21, v22, v30);
  *(_OWORD *)&v21[*(int *)(v15 + 20)] = *(_OWORD *)&v22[*(int *)(v15 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v21, 0, 1, v15);
  return a1;
}

uint64_t sub_100F7BE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100F7BE88);
}

uint64_t sub_100F7BE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 304);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for UUID();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_1005057FC(&qword_1016730B0);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 28);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_100F7BFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100F7BFD8);
}

uint64_t sub_100F7BFD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 304) = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016730B0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLSpringLayerAnimation()
{
  uint64_t result = qword_1016A3198;
  if (!qword_1016A3198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100F7C154()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_10054C810();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100F7C230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v75 = *(void *)(v4 - 8);
  uint64_t v76 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v73 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016730B0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v74 = (uint64_t)&v70 - v13;
  uint64_t v78 = sub_1005057FC(&qword_1016A31F8);
  __chkstk_darwin(v78, v14);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v79 = (uint64_t)&v70 - v19;
  uint64_t v20 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v20, v21);
  int v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  double v27 = (char *)&v70 - v26;
  __chkstk_darwin(v28, v29);
  uint64_t v80 = (uint64_t)&v70 - v30;
  __chkstk_darwin(v31, v32);
  uint64_t v81 = (uint64_t)&v70 - v33;
  __chkstk_darwin(v34, v35);
  long long v37 = (char *)&v70 - v36;
  __chkstk_darwin(v38, v39);
  id v41 = (char *)&v70 - v40;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v77 = v20;
  uint64_t v43 = swift_unknownObjectWeakLoadStrong();
  long long v44 = (void *)v43;
  if (!Strong)
  {
    if (!v43)
    {
      int v71 = v10;
      uint64_t v72 = v16;
      sub_100F81074(a1, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
      sub_100F81074(a2, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
      goto LABEL_7;
    }
LABEL_12:

    sub_100F81074(a1, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F81074(a2, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
LABEL_13:
    sub_100F810DC((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F810DC((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    uint64_t v48 = v81;
    sub_100F81074(a1, v81, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    uint64_t v49 = v80;
    sub_100F81074(a2, v80, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    goto LABEL_14;
  }
  if (!v43)
  {
    long long v44 = Strong;
    goto LABEL_12;
  }
  int v71 = v10;
  uint64_t v72 = v16;
  sub_10054CE40();
  id v45 = Strong;
  char v46 = static NSObject.== infix(_:_:)();

  sub_100F81074(a1, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  sub_100F81074(a2, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  if ((v46 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  char v47 = sub_100F7F790((uint64_t)v37, (uint64_t)v41);
  sub_100F810DC((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  sub_100F810DC((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v48 = v81;
  sub_100F81074(a1, v81, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v49 = v80;
  sub_100F81074(a2, v80, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  if ((v47 & 1) == 0)
  {
LABEL_14:
    sub_100F810DC(v49, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F810DC(v48, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
LABEL_15:
    sub_100F81074(a1, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F81074(a2, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
LABEL_16:
    sub_100F810DC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F810DC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    goto LABEL_17;
  }
  uint64_t v50 = *(int *)(v77 + 28);
  uint64_t v51 = v49 + v50;
  uint64_t v52 = v79;
  uint64_t v53 = v79 + *(int *)(v78 + 48);
  sub_100522E9C(v48 + v50, v79, &qword_1016730B0);
  uint64_t v54 = v51;
  uint64_t v55 = v52;
  sub_100522E9C(v54, v53, &qword_1016730B0);
  uint64_t v56 = v76;
  long long v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  if (v57(v52, 1, v76) == 1)
  {
    sub_100F810DC(v80, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    uint64_t v55 = v79;
    sub_100F810DC(v81, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    if (v57(v53, 1, v56) == 1)
    {
      sub_100522F00(v55, &qword_1016730B0);
      sub_100F81074(a1, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
      sub_100F81074(a2, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
      goto LABEL_23;
    }
LABEL_21:
    sub_100522F00(v55, &qword_1016A31F8);
    goto LABEL_15;
  }
  uint64_t v60 = v74;
  sub_100522E9C(v52, v74, &qword_1016730B0);
  if (v57(v53, 1, v56) == 1)
  {
    sub_100F810DC(v80, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F810DC(v81, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F810DC(v60, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_21;
  }
  uint64_t v61 = v53;
  uint64_t v62 = v60;
  uint64_t v63 = v73;
  sub_100F7F560(v61, v73, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  LODWORD(v75) = static UUID.== infix(_:_:)();
  sub_100F810DC(v63, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_100F810DC(v80, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  sub_100F810DC(v81, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  sub_100F810DC(v62, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_100522F00(v79, &qword_1016730B0);
  sub_100F81074(a1, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  sub_100F81074(a2, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  if ((v75 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_23:
  uint64_t v64 = *(int *)(v77 + 32);
  uint64_t v65 = (uint64_t)&v23[v64];
  uint64_t v66 = (uint64_t)v72;
  uint64_t v67 = (uint64_t)&v72[*(int *)(v78 + 48)];
  sub_100522E9C((uint64_t)&v27[v64], (uint64_t)v72, &qword_1016730B0);
  sub_100522E9C(v65, v67, &qword_1016730B0);
  if (v57(v66, 1, v56) == 1)
  {
    sub_100F810DC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F810DC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    if (v57(v67, 1, v56) == 1)
    {
      sub_100522F00(v66, &qword_1016730B0);
      char v58 = 1;
      return v58 & 1;
    }
  }
  else
  {
    uint64_t v68 = (uint64_t)v71;
    sub_100522E9C(v66, (uint64_t)v71, &qword_1016730B0);
    if (v57(v67, 1, v56) != 1)
    {
      uint64_t v69 = v73;
      sub_100F7F560(v67, v73, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      char v58 = static UUID.== infix(_:_:)();
      sub_100F810DC(v69, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_100F810DC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
      sub_100F810DC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
      sub_100F810DC(v68, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_100522F00(v66, &qword_1016730B0);
      return v58 & 1;
    }
    sub_100F810DC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F810DC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    sub_100F810DC(v68, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  }
  sub_100522F00(v66, &qword_1016A31F8);
LABEL_17:
  char v58 = 0;
  return v58 & 1;
}

uint64_t sub_100F7CBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v80 = *(void *)(v77 - 8);
  __chkstk_darwin(v77, v4);
  uint64_t v75 = &v71[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005057FC(&qword_1016730B0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v71[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10, v11);
  uint64_t v76 = &v71[-v12];
  uint64_t v78 = sub_1005057FC(&qword_1016A31F8);
  __chkstk_darwin(v78, v13);
  uint64_t v15 = &v71[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16, v17);
  uint64_t v79 = &v71[-v18];
  uint64_t v19 = type metadata accessor for CRLCanvasLayerAnimation();
  __chkstk_darwin(v19, v20);
  uint64_t v22 = &v71[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23, v24);
  uint64_t v26 = &v71[-v25];
  __chkstk_darwin(v27, v28);
  uint64_t v83 = &v71[-v29];
  __chkstk_darwin(v30, v31);
  int v82 = &v71[-v32];
  __chkstk_darwin(v33, v34);
  uint64_t v36 = &v71[-v35];
  __chkstk_darwin(v37, v38);
  uint64_t v40 = &v71[-v39];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v81 = v19;
  uint64_t v42 = swift_unknownObjectWeakLoadStrong();
  uint64_t v43 = (void *)v42;
  if (!Strong)
  {
    if (!v42)
    {
      uint64_t v73 = v9;
      uint64_t v74 = v15;
      sub_100F81074(a1, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
      sub_100F81074(a2, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
      goto LABEL_7;
    }
LABEL_12:

    sub_100F81074(a1, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F81074(a2, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
LABEL_13:
    sub_100F810DC((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F810DC((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    uint64_t v49 = v82;
    sub_100F81074(a1, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    uint64_t v50 = v83;
    sub_100F81074(a2, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    goto LABEL_14;
  }
  if (!v42)
  {
    uint64_t v43 = Strong;
    goto LABEL_12;
  }
  uint64_t v73 = v9;
  uint64_t v74 = v15;
  sub_10054CE40();
  id v44 = Strong;
  char v45 = static NSObject.== infix(_:_:)();

  sub_100F81074(a1, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  sub_100F81074(a2, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  if ((v45 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v46 = v81;
  char v47 = &v40[*(int *)(v81 + 48)];
  uint64_t v48 = v47[3];
  sub_10050F848(v47, v48);
  LOBYTE(v48) = sub_1006FB2A8((uint64_t)&v36[*(int *)(v46 + 48)], v48);
  sub_100F810DC((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  sub_100F810DC((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  uint64_t v49 = v82;
  sub_100F81074(a1, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  uint64_t v50 = v83;
  sub_100F81074(a2, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  if ((v48 & 1) == 0)
  {
LABEL_14:
    sub_100F810DC((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F810DC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
LABEL_15:
    sub_100F81074(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F81074(a2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
LABEL_16:
    sub_100F810DC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F810DC((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    goto LABEL_17;
  }
  uint64_t v51 = *(int *)(v46 + 52);
  uint64_t v52 = &v50[v51];
  uint64_t v53 = v79;
  uint64_t v54 = (uint64_t)&v79[*(int *)(v78 + 48)];
  sub_100522E9C((uint64_t)&v49[v51], (uint64_t)v79, &qword_1016730B0);
  uint64_t v55 = (uint64_t)v52;
  uint64_t v56 = v53;
  sub_100522E9C(v55, v54, &qword_1016730B0);
  uint64_t v57 = v80 + 48;
  char v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  uint64_t v59 = v53;
  uint64_t v60 = v77;
  if (v58((uint64_t)v59, 1, v77) == 1)
  {
    sub_100F810DC((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    uint64_t v56 = v79;
    sub_100F810DC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    if (v58(v54, 1, v60) == 1)
    {
      uint64_t v80 = v57;
      sub_100522F00((uint64_t)v56, &qword_1016730B0);
      sub_100F81074(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
      sub_100F81074(a2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
      goto LABEL_23;
    }
LABEL_21:
    sub_100522F00((uint64_t)v56, &qword_1016A31F8);
    goto LABEL_15;
  }
  uint64_t v63 = v76;
  sub_100522E9C((uint64_t)v56, (uint64_t)v76, &qword_1016730B0);
  if (v58(v54, 1, v60) == 1)
  {
    sub_100F810DC((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F810DC((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F810DC((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_21;
  }
  uint64_t v80 = v57;
  uint64_t v64 = v75;
  sub_100F7F560(v54, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  int v72 = static UUID.== infix(_:_:)();
  sub_100F810DC((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_100F810DC((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  sub_100F810DC((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  sub_100F810DC((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_100522F00((uint64_t)v56, &qword_1016730B0);
  sub_100F81074(a1, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  sub_100F81074(a2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
  if ((v72 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_23:
  uint64_t v65 = *(int *)(v81 + 56);
  uint64_t v66 = (uint64_t)&v22[v65];
  uint64_t v67 = (uint64_t)v74;
  uint64_t v68 = (uint64_t)&v74[*(int *)(v78 + 48)];
  sub_100522E9C((uint64_t)&v26[v65], (uint64_t)v74, &qword_1016730B0);
  sub_100522E9C(v66, v68, &qword_1016730B0);
  if (v58(v67, 1, v60) == 1)
  {
    sub_100F810DC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F810DC((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    if (v58(v68, 1, v60) == 1)
    {
      sub_100522F00(v67, &qword_1016730B0);
      char v61 = 1;
      return v61 & 1;
    }
  }
  else
  {
    uint64_t v69 = (uint64_t)v73;
    sub_100522E9C(v67, (uint64_t)v73, &qword_1016730B0);
    if (v58(v68, 1, v60) != 1)
    {
      uint64_t v70 = v75;
      sub_100F7F560(v68, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      char v61 = static UUID.== infix(_:_:)();
      sub_100F810DC((uint64_t)v70, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_100F810DC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
      sub_100F810DC((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
      sub_100F810DC(v69, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_100522F00(v67, &qword_1016730B0);
      return v61 & 1;
    }
    sub_100F810DC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F810DC((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for CRLCanvasLayerAnimation);
    sub_100F810DC(v69, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  }
  sub_100522F00(v67, &qword_1016A31F8);
LABEL_17:
  char v61 = 0;
  return v61 & 1;
}

uint64_t sub_100F7D5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v75 = *(void *)(v4 - 8);
  uint64_t v76 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v73 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016730B0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v74 = (uint64_t)&v70 - v13;
  uint64_t v78 = sub_1005057FC(&qword_1016A31F8);
  __chkstk_darwin(v78, v14);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v79 = (uint64_t)&v70 - v19;
  uint64_t v20 = type metadata accessor for CRLBasicLayerAnimation();
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v70 - v26;
  __chkstk_darwin(v28, v29);
  uint64_t v80 = (uint64_t)&v70 - v30;
  __chkstk_darwin(v31, v32);
  uint64_t v81 = (uint64_t)&v70 - v33;
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v70 - v36;
  __chkstk_darwin(v38, v39);
  id v41 = (char *)&v70 - v40;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v77 = v20;
  uint64_t v43 = swift_unknownObjectWeakLoadStrong();
  id v44 = (void *)v43;
  if (!Strong)
  {
    if (!v43)
    {
      int v71 = v10;
      int v72 = v16;
      sub_100F81074(a1, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
      sub_100F81074(a2, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
      goto LABEL_7;
    }
LABEL_12:

    sub_100F81074(a1, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F81074(a2, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
LABEL_13:
    sub_100F810DC((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F810DC((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    uint64_t v48 = v81;
    sub_100F81074(a1, v81, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    uint64_t v49 = v80;
    sub_100F81074(a2, v80, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    goto LABEL_14;
  }
  if (!v43)
  {
    id v44 = Strong;
    goto LABEL_12;
  }
  int v71 = v10;
  int v72 = v16;
  sub_10054CE40();
  id v45 = Strong;
  char v46 = static NSObject.== infix(_:_:)();

  sub_100F81074(a1, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  sub_100F81074(a2, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  if ((v46 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  char v47 = sub_100F7F64C((uint64_t)v37, (uint64_t)v41);
  sub_100F810DC((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  sub_100F810DC((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  uint64_t v48 = v81;
  sub_100F81074(a1, v81, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  uint64_t v49 = v80;
  sub_100F81074(a2, v80, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  if ((v47 & 1) == 0)
  {
LABEL_14:
    sub_100F810DC(v49, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F810DC(v48, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
LABEL_15:
    sub_100F81074(a1, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F81074(a2, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
LABEL_16:
    sub_100F810DC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F810DC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    goto LABEL_17;
  }
  uint64_t v50 = *(int *)(v77 + 28);
  uint64_t v51 = v49 + v50;
  uint64_t v52 = v79;
  uint64_t v53 = v79 + *(int *)(v78 + 48);
  sub_100522E9C(v48 + v50, v79, &qword_1016730B0);
  uint64_t v54 = v51;
  uint64_t v55 = v52;
  sub_100522E9C(v54, v53, &qword_1016730B0);
  uint64_t v56 = v76;
  uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  if (v57(v52, 1, v76) == 1)
  {
    sub_100F810DC(v80, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    uint64_t v55 = v79;
    sub_100F810DC(v81, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    if (v57(v53, 1, v56) == 1)
    {
      sub_100522F00(v55, &qword_1016730B0);
      sub_100F81074(a1, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
      sub_100F81074(a2, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
      goto LABEL_23;
    }
LABEL_21:
    sub_100522F00(v55, &qword_1016A31F8);
    goto LABEL_15;
  }
  uint64_t v60 = v74;
  sub_100522E9C(v52, v74, &qword_1016730B0);
  if (v57(v53, 1, v56) == 1)
  {
    sub_100F810DC(v80, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F810DC(v81, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F810DC(v60, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_21;
  }
  uint64_t v61 = v53;
  uint64_t v62 = v60;
  uint64_t v63 = v73;
  sub_100F7F560(v61, v73, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  LODWORD(v75) = static UUID.== infix(_:_:)();
  sub_100F810DC(v63, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_100F810DC(v80, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  sub_100F810DC(v81, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  sub_100F810DC(v62, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  sub_100522F00(v79, &qword_1016730B0);
  sub_100F81074(a1, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  sub_100F81074(a2, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  if ((v75 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_23:
  uint64_t v64 = *(int *)(v77 + 32);
  uint64_t v65 = (uint64_t)&v23[v64];
  uint64_t v66 = (uint64_t)v72;
  uint64_t v67 = (uint64_t)&v72[*(int *)(v78 + 48)];
  sub_100522E9C((uint64_t)&v27[v64], (uint64_t)v72, &qword_1016730B0);
  sub_100522E9C(v65, v67, &qword_1016730B0);
  if (v57(v66, 1, v56) == 1)
  {
    sub_100F810DC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F810DC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    if (v57(v67, 1, v56) == 1)
    {
      sub_100522F00(v66, &qword_1016730B0);
      char v58 = 1;
      return v58 & 1;
    }
  }
  else
  {
    uint64_t v68 = (uint64_t)v71;
    sub_100522E9C(v66, (uint64_t)v71, &qword_1016730B0);
    if (v57(v67, 1, v56) != 1)
    {
      uint64_t v69 = v73;
      sub_100F7F560(v67, v73, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      char v58 = static UUID.== infix(_:_:)();
      sub_100F810DC(v69, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_100F810DC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
      sub_100F810DC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
      sub_100F810DC(v68, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
      sub_100522F00(v66, &qword_1016730B0);
      return v58 & 1;
    }
    sub_100F810DC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F810DC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    sub_100F810DC(v68, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
  }
  sub_100522F00(v66, &qword_1016A31F8);
LABEL_17:
  char v58 = 0;
  return v58 & 1;
}

uint64_t sub_100F7DF84(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1005498A4(a1, (uint64_t)v7);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    memcpy(__dst, __src, 0x13CuLL);
    return sub_100F7F05C((uint64_t)__dst, v2);
  }
  else
  {
    memset(__src, 0, 304);
    *(void *)&__src[19] = 1;
    DWORD2(__src[19]) = 0;
    sub_100522F00((uint64_t)__src, &qword_10167C0C8);
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(70);
    v5._object = (void *)0x8000000101299C40;
    v5._countAndFlagsBits = 0xD000000000000044;
    String.append(_:)(v5);
    type metadata accessor for CRLSpringLayerAnimation();
    _print_unlocked<A, B>(_:_:)();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

double sub_100F7E0F4()
{
  type metadata accessor for CRLSpringLayerAnimation();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_100823384(v0, (uint64_t)v10);
    sub_1009FD6EC(v2, v12);

    sub_1006FB684((uint64_t)v10);
    uint64_t v3 = v13;
    uint64_t v4 = v14;
    sub_10050F848(v12, v13);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v10, v3, v4);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    uint64_t v11 = 0;
  }
  double v5 = CACurrentMediaTime();
  id v6 = sub_100F7E504((uint64_t)v10, v5);
  sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101684000);
  [v6 duration];
  double v8 = v7;

  return v8;
}

uint64_t sub_100F7E210(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016A31F0);
  __chkstk_darwin(v3 - 8, v4);
  id v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for CRLSpringLayerAnimation();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1005498A4(a1, (uint64_t)v17);
  sub_1005057FC((uint64_t *)&unk_10167BDB0);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v6, 0, 1, v7);
    sub_100F7F560((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
    char v14 = sub_100F7C230((uint64_t)v11, v1);
    sub_100F810DC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  }
  else
  {
    v13(v6, 1, 1, v7);
    sub_100522F00((uint64_t)v6, &qword_1016A31F0);
    char v14 = 0;
  }
  return v14 & 1;
}

float sub_100F7E3E0(float a1)
{
  type metadata accessor for CRLSpringLayerAnimation();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_100823384(v1, (uint64_t)v13);
    sub_1009FD6EC(v4, v15);

    sub_1006FB684((uint64_t)v13);
    uint64_t v5 = v16;
    uint64_t v6 = v17;
    sub_10050F848(v15, v16);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v6 + 48))(v13, v5, v6);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    uint64_t v14 = 0;
  }
  double v7 = CACurrentMediaTime();
  id v8 = sub_100F7E504((uint64_t)v13, v7);
  sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101684000);
  *(float *)&double v9 = a1;
  [v8 solveForInput:v9];
  float v11 = v10;

  return v11;
}

id sub_100F7E504(uint64_t a1, double a2)
{
  sub_100522E9C(a1, (uint64_t)v16, (uint64_t *)&unk_101684000);
  sub_100522E9C((uint64_t)v16, (uint64_t)v11, (uint64_t *)&unk_101684000);
  uint64_t v4 = v12;
  sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101684000);
  if (!v4)
  {
    type metadata accessor for CRLSpringLayerAnimation();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = (void *)Strong;
      sub_100823384(v2, (uint64_t)v11);
      sub_1009FD6EC(v6, v13);

      sub_1006FB684((uint64_t)v11);
      uint64_t v7 = v14;
      uint64_t v8 = v15;
      sub_10050F848(v13, v14);
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v8 + 48))(v11, v7, v8);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
    }
    else
    {
      memset(v11, 0, sizeof(v11));
      uint64_t v12 = 0;
    }
    sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101684000);
    sub_10054CE80((uint64_t)v11, (uint64_t)v16);
  }
  id v9 = sub_100F7E660((uint64_t)v16, a2);
  sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101684000);
  return v9;
}

id sub_100F7E660(uint64_t a1, double a2)
{
  uint64_t v3 = (double *)v2;
  sub_100522E9C(a1, (uint64_t)v49, (uint64_t *)&unk_101684000);
  sub_100522E9C((uint64_t)v49, (uint64_t)&v42, (uint64_t *)&unk_101684000);
  uint64_t v5 = v47;
  sub_100522F00((uint64_t)&v42, (uint64_t *)&unk_101684000);
  if (!v5)
  {
    type metadata accessor for CRLSpringLayerAnimation();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v7 = (void *)Strong;
      sub_100823384(v2, (uint64_t)&v42);
      sub_1009FD6EC(v7, (uint64_t *)&v36);

      sub_1006FB684((uint64_t)&v42);
      uint64_t v8 = *((void *)&v37 + 1);
      uint64_t v9 = v38;
      sub_10050F848(&v36, *((uint64_t *)&v37 + 1));
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v9 + 48))(&v42, v8, v9);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v36);
    }
    else
    {
      long long v42 = 0u;
      long long v43 = 0u;
      long long v44 = 0u;
      long long v45 = 0u;
      long long v46 = 0u;
      uint64_t v47 = 0;
    }
    sub_100522F00((uint64_t)v49, (uint64_t *)&unk_101684000);
    sub_10054CE80((uint64_t)&v42, (uint64_t)v49);
  }
  sub_100823384(v2, (uint64_t)&v42);
  char v10 = sub_1009FCAC8();
  sub_1009FC740(v10);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self animationWithKeyPath:v11];

  sub_1006FB684((uint64_t)&v42);
  if (!v50)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"newCASpringAnimation(toRunAt:concretePropertyTransition:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Animations/CRLSpringLayerAnimation.swift", 120, 2, 115, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newCASpringAnimation(toRunAt:concretePropertyTransition:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Animations/CRLSpringLayerAnimation.swift", 120, 2, 115);
  }
  sub_100522E9C((uint64_t)v49, (uint64_t)&v36, (uint64_t *)&unk_101684000);
  if (v41)
  {
    long long v45 = v39;
    long long v46 = v40;
    uint64_t v47 = v41;
    long long v42 = v36;
    long long v43 = v37;
    long long v44 = v38;
    sub_100522E9C((uint64_t)&v42, (uint64_t)&v36, &qword_101672BF0);
    uint64_t v13 = *((void *)&v37 + 1);
    if (*((void *)&v37 + 1))
    {
      uint64_t v14 = sub_10050F848(&v36, *((uint64_t *)&v37 + 1));
      uint64_t v15 = *(void *)(v13 - 8);
      __chkstk_darwin(v14, v14);
      uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v15 + 16))(v17);
      id v18 = v12;
      uint64_t v19 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v13);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v36);
    }
    else
    {
      id v20 = v12;
      uint64_t v19 = 0;
    }
    [v12 setFromValue:v19];

    swift_unknownObjectRelease();
    sub_100522E9C((uint64_t)&v44, (uint64_t)&v36, &qword_101672BF0);
    uint64_t v21 = *((void *)&v37 + 1);
    if (*((void *)&v37 + 1))
    {
      uint64_t v22 = sub_10050F848(&v36, *((uint64_t *)&v37 + 1));
      uint64_t v23 = *(void *)(v21 - 8);
      __chkstk_darwin(v22, v22);
      uint64_t v25 = (char *)&v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v25);
      id v26 = v12;
      uint64_t v27 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v36);
    }
    else
    {
      id v28 = v12;
      uint64_t v27 = 0;
    }
    [v12 setToValue:v27];

    swift_unknownObjectRelease();
    sub_1005499B8((uint64_t)&v42);
  }
  else
  {
    sub_100522F00((uint64_t)&v36, (uint64_t *)&unk_101684000);
  }
  [v12 setDamping:*v3];
  [v12 setInitialVelocity:v3[1]];
  [v12 setMass:v3[2]];
  [v12 setStiffness:v3[3]];
  sub_100823384((uint64_t)v3, (uint64_t)&v42);
  uint64_t v29 = v48;
  if (v48)
  {
    id v30 = v12;
    id v31 = v29;
  }
  else
  {
    id v31 = [v12 fillMode];
  }
  id v32 = v29;
  sub_1006FB684((uint64_t)&v42);
  [v12 setFillMode:v31];

  id v33 = v12;
  [v33 settlingDuration];
  [v33 setDuration:];

  [v33 setBeginTime:v3[4] + a2];
  sub_100522F00((uint64_t)v49, (uint64_t *)&unk_101684000);
  return v33;
}

uint64_t sub_100F7EC54@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for CRLSpringLayerAnimation.Def;
  a1[4] = sub_100860DAC();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;

  return sub_100823384(v1, v3 + 16);
}

void (*sub_100F7ECB8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  v3[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v3[4] = sub_100860DAC();
  uint64_t v4 = swift_allocObject();
  *uint64_t v3 = v4;
  sub_100823384(v1, v4 + 16);
  return sub_100F7ED48;
}

void sub_100F7ED48(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    sub_1005498A4(*a1, (uint64_t)v2 + 40);
    sub_100F7DF84((uint64_t)v2 + 40);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_100F7DF84(*a1);
  }

  free(v2);
}

Swift::Int sub_100F7EDC8()
{
  return Hasher._finalize()();
}

uint64_t sub_100F7EE5C()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100F7EEDC()
{
  return Hasher._finalize()();
}

double sub_100F7EF6C()
{
  return *(double *)(v0 + 32);
}

void sub_100F7EF74(double a1)
{
  *(double *)(v1 + 32) = a1;
}

double (*sub_100F7EF7C(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 32);
  return sub_100F7EFA8;
}

double sub_100F7EFA8(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + 32) = *(void *)a1;
  return result;
}

uint64_t sub_100F7EFBC()
{
  return sub_100F7FD00(&qword_1016A31E0, (void (*)(uint64_t))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100F7F004(uint64_t a1)
{
  uint64_t result = sub_100F7FD00(&qword_1016A31E8, (void (*)(uint64_t))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(a1 + 48) = result;
  return result;
}

uint64_t sub_100F7F05C(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_100F7F094(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  char v6 = sub_1009FCAC8();
  sub_1009FC740(v6);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [self animationWithKeyPath:v7];

  sub_100522E9C(a1, (uint64_t)&v32, (uint64_t *)&unk_101684000);
  if (v37)
  {
    v39[1] = v35;
    v39[2] = v36;
    uint64_t v40 = v37;
    v38[0] = v32;
    v38[1] = v33;
    v39[0] = v34;
    sub_100522E9C((uint64_t)v38, (uint64_t)&v32, &qword_101672BF0);
    uint64_t v9 = *((void *)&v33 + 1);
    if (*((void *)&v33 + 1))
    {
      char v10 = sub_10050F848(&v32, *((uint64_t *)&v33 + 1));
      uint64_t v11 = *(void *)(v9 - 8);
      __chkstk_darwin(v10, v10);
      uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v11 + 16))(v13);
      id v14 = v8;
      uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v32);
    }
    else
    {
      id v16 = v8;
      uint64_t v15 = 0;
    }
    [v8 setFromValue:v15];

    swift_unknownObjectRelease();
    sub_100522E9C((uint64_t)v39, (uint64_t)&v32, &qword_101672BF0);
    uint64_t v17 = *((void *)&v33 + 1);
    if (*((void *)&v33 + 1))
    {
      id v18 = sub_10050F848(&v32, *((uint64_t *)&v33 + 1));
      uint64_t v19 = *(void *)(v17 - 8);
      __chkstk_darwin(v18, v18);
      uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v19 + 16))(v21);
      id v22 = v8;
      uint64_t v23 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v17);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v32);
    }
    else
    {
      id v24 = v8;
      uint64_t v23 = 0;
    }
    [v8 setToValue:v23];

    swift_unknownObjectRelease();
    sub_1005499B8((uint64_t)v38);
  }
  else
  {
    sub_100522F00((uint64_t)&v32, (uint64_t *)&unk_101684000);
  }
  [v8 setDamping:*(double *)v3];
  [v8 setInitialVelocity:*(double *)(v3 + 8)];
  [v8 setMass:*(double *)(v3 + 16)];
  [v8 setStiffness:*(double *)(v3 + 24)];
  uint64_t v25 = *(void **)(v3 + 304);
  if (v25)
  {
    id v26 = v8;
    id v27 = v25;
  }
  else
  {
    id v27 = [v8 fillMode];
  }
  id v28 = v25;
  [v8 setFillMode:v27];

  id v29 = v8;
  [v29 settlingDuration];
  [v29 setDuration:];

  [v29 setBeginTime:*(double *)(v3 + 32) + a2];
  return v29;
}

uint64_t sub_100F7F4B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1006006C8(v1 + 40, a1);
}

uint64_t sub_100F7F4C4(uint64_t a1)
{
  return sub_100601D34(a1, v1 + 40);
}

void *sub_100F7F4CC()
{
  uint64_t v1 = *(void **)(v0 + 304);
  id v2 = v1;
  return v1;
}

void sub_100F7F4F4(uint64_t a1)
{
  *(void *)(v1 + 304) = a1;
}

uint64_t sub_100F7F520()
{
  return *(unsigned __int8 *)(v0 + 312);
}

uint64_t sub_100F7F528(uint64_t result)
{
  *(unsigned char *)(v1 + 312) = result;
  return result;
}

uint64_t sub_100F7F530()
{
  return *(unsigned __int8 *)(v0 + 313);
}

uint64_t sub_100F7F538(uint64_t result)
{
  *(unsigned char *)(v1 + 313) = result;
  return result;
}

uint64_t sub_100F7F540()
{
  return *(unsigned __int8 *)(v0 + 314);
}

uint64_t sub_100F7F548(uint64_t result)
{
  *(unsigned char *)(v1 + 314) = result;
  return result;
}

uint64_t sub_100F7F550()
{
  return *(unsigned __int8 *)(v0 + 315);
}

uint64_t sub_100F7F558(uint64_t result)
{
  *(unsigned char *)(v1 + 315) = result;
  return result;
}

uint64_t sub_100F7F560(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_100F7F5C8()
{
  uint64_t v10 = 0;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v5 = 0u;
  double v0 = CACurrentMediaTime();
  id v1 = sub_100F7F094((uint64_t)&v5, v0);
  sub_100522F00((uint64_t)&v5, (uint64_t *)&unk_101684000);
  [v1 duration:v5, v6, v7, v8, v9, v10];
  double v3 = v2;

  return v3;
}

uint64_t sub_100F7F64C(uint64_t a1, uint64_t a2)
{
  v11[3] = &type metadata for CRLBasicLayerAnimation.Def;
  v11[4] = sub_10054CB94();
  v11[0] = swift_allocObject();
  sub_100549A68(a1, v11[0] + 16);
  sub_100549A68(a2, (uint64_t)v10);
  sub_1005498A4((uint64_t)v11, (uint64_t)v8);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (!swift_dynamicCast())
  {
    memset(v7, 0, 300);
    sub_100549AC4((uint64_t)v10);
    sub_100522F00((uint64_t)v7, (uint64_t *)&unk_10169AEF0);
    goto LABEL_5;
  }
  memcpy(__dst, v7, 0x12CuLL);
  char v4 = sub_1006007EC((uint64_t)v10, (uint64_t)__dst);
  sub_100549AC4((uint64_t)__dst);
  sub_100549AC4((uint64_t)v10);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    uint64_t v5 = 0;
    goto LABEL_6;
  }
  uint64_t v5 = 1;
LABEL_6:
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  return v5;
}

uint64_t sub_100F7F790(uint64_t a1, uint64_t a2)
{
  v11[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v11[4] = sub_100860DAC();
  v11[0] = swift_allocObject();
  sub_100823384(a1, v11[0] + 16);
  sub_100823384(a2, (uint64_t)v10);
  sub_1005498A4((uint64_t)v11, (uint64_t)v8);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (!swift_dynamicCast())
  {
    memset(v7, 0, 304);
    *(void *)&_OWORD v7[19] = 1;
    DWORD2(v7[19]) = 0;
    sub_1006FB684((uint64_t)v10);
    sub_100522F00((uint64_t)v7, &qword_10167C0C8);
    goto LABEL_5;
  }
  memcpy(__dst, v7, 0x13CuLL);
  char v4 = sub_100F7FB28((uint64_t)v10, (uint64_t)__dst);
  sub_1006FB684((uint64_t)__dst);
  sub_1006FB684((uint64_t)v10);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    uint64_t v5 = 0;
    goto LABEL_6;
  }
  uint64_t v5 = 1;
LABEL_6:
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  return v5;
}

uint64_t sub_100F7F8D8()
{
  id v1 = (id *)(v0 + 56);
  switch(*(unsigned char *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 176)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 152);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 120);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100F7FB28(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16)
    || *(double *)(a1 + 24) != *(double *)(a2 + 24)
    || *(double *)(a1 + 32) != *(double *)(a2 + 32)
    || (sub_1009FF590(a1 + 40, a2 + 40) & 1) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)(a2 + 304);
  if (!*(void *)(a1 + 304))
  {
    if (!v4) {
      goto LABEL_15;
    }
LABEL_27:
    char v10 = 0;
    return v10 & 1;
  }
  if (!v4) {
    goto LABEL_27;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v10 = 0;
    if ((v9 & 1) == 0) {
      return v10 & 1;
    }
  }
LABEL_15:
  int v11 = *(unsigned __int8 *)(a1 + 312);
  int v12 = *(unsigned __int8 *)(a2 + 312);
  if (v11 == 2)
  {
    if (v12 != 2) {
      goto LABEL_27;
    }
  }
  else
  {
    char v10 = 0;
    BOOL v13 = (v11 & 1) == 0;
    if (v12 == 2 || ((v13 ^ v12) & 1) == 0) {
      return v10 & 1;
    }
  }
  int v14 = *(unsigned __int8 *)(a1 + 313);
  int v15 = *(unsigned __int8 *)(a2 + 313);
  if (v14 == 2)
  {
    if (v15 != 2) {
      goto LABEL_27;
    }
  }
  else
  {
    char v10 = 0;
    BOOL v16 = (v14 & 1) == 0;
    if (v15 == 2 || ((v16 ^ v15) & 1) == 0) {
      return v10 & 1;
    }
  }
  int v17 = *(unsigned __int8 *)(a1 + 314);
  int v18 = *(unsigned __int8 *)(a2 + 314);
  if (v17 == 2)
  {
    if (v18 != 2) {
      goto LABEL_27;
    }
LABEL_31:
    char v10 = *(unsigned char *)(a1 + 315) ^ *(unsigned char *)(a2 + 315) ^ 1;
    return v10 & 1;
  }
  char v10 = 0;
  BOOL v20 = (v17 & 1) == 0;
  if (v18 != 2 && ((v20 ^ v18) & 1) != 0) {
    goto LABEL_31;
  }
  return v10 & 1;
}

uint64_t sub_100F7FD00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100F7FD48()
{
  id v1 = (id *)(v0 + 40);
  switch(*(unsigned char *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 96)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 72);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 160)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 136);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 128)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 104);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 316, 7);
}

void destroy for CRLSpringLayerAnimation.Def(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 296);
  double v3 = (id *)(a1 + 40);
  switch(v2)
  {
    case 0:
    case 34:
      if (*(void *)(a1 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v3);
      }
      if (*(void *)(a1 + 96)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 72);
      }
      break;
    case 1:
    case 35:
      if (*(void *)(a1 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v3);
      }
      break;
    case 18:
    case 20:
    case 28:
    case 30:

      break;
    case 19:
    case 21:
    case 29:
    case 31:

      break;
    case 32:
    case 36:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 33:
    case 37:
      goto LABEL_17;
    case 58:

      break;
    case 63:

      if (*(void *)(a1 + 160)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 136);
      }
      goto LABEL_17;
    case 64:

      if (*(void *)(a1 + 128)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 104);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v4 = *(void **)(a1 + 304);
}

uint64_t initializeWithCopy for CRLSpringLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = (_OWORD *)(a1 + 40);
  uint64_t v6 = (_OWORD *)(a2 + 40);
  switch(*(unsigned char *)(a2 + 296))
  {
    case 0:
      uint64_t v7 = *(void *)(a2 + 64);
      if (v7)
      {
        *(void *)(a1 + 64) = v7;
        (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
      }
      else
      {
        long long v45 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v45;
      }
      long long v46 = (_OWORD *)(a1 + 72);
      uint64_t v47 = (_OWORD *)(a2 + 72);
      uint64_t v48 = *(void *)(a2 + 96);
      if (v48)
      {
        *(void *)(a1 + 96) = v48;
        (**(void (***)(_OWORD *, _OWORD *))(v48 - 8))(v46, v47);
      }
      else
      {
        long long v62 = *(_OWORD *)(a2 + 88);
        *long long v46 = *v47;
        *(_OWORD *)(a1 + 88) = v62;
      }
      *(unsigned char *)(a1 + 296) = 0;
      break;
    case 1:
      uint64_t v8 = *(void *)(a2 + 64);
      if (v8)
      {
        *(void *)(a1 + 64) = v8;
        (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v5, v6);
      }
      else
      {
        long long v49 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v49;
      }
      *(unsigned char *)(a1 + 296) = 1;
      break;
    case 0x12:
      char v9 = *(void **)(a2 + 40);
      char v10 = *(void **)(a2 + 48);
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v10;
      char v11 = 18;
      goto LABEL_14;
    case 0x13:
      int v12 = *(void **)v6;
      *(void *)(a1 + 40) = *(void *)v6;
      char v13 = 19;
      goto LABEL_26;
    case 0x14:
      char v9 = *(void **)(a2 + 40);
      char v10 = *(void **)(a2 + 48);
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v10;
      char v11 = 20;
      goto LABEL_14;
    case 0x15:
      int v12 = *(void **)v6;
      *(void *)(a1 + 40) = *(void *)v6;
      char v13 = 21;
      goto LABEL_26;
    case 0x1C:
      char v9 = *(void **)(a2 + 40);
      char v10 = *(void **)(a2 + 48);
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v10;
      char v11 = 28;
      goto LABEL_14;
    case 0x1D:
      int v12 = *(void **)v6;
      *(void *)(a1 + 40) = *(void *)v6;
      char v13 = 29;
      goto LABEL_26;
    case 0x1E:
      char v9 = *(void **)(a2 + 40);
      char v10 = *(void **)(a2 + 48);
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v10;
      char v11 = 30;
LABEL_14:
      *(unsigned char *)(a1 + 296) = v11;
      id v14 = v9;
      id v15 = v10;
      break;
    case 0x1F:
      int v12 = *(void **)v6;
      *(void *)(a1 + 40) = *(void *)v6;
      char v13 = 31;
      goto LABEL_26;
    case 0x20:
      uint64_t v16 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v16;
      char v17 = 32;
      goto LABEL_23;
    case 0x21:
      *(void *)(a1 + 40) = *(void *)v6;
      char v18 = 33;
      goto LABEL_46;
    case 0x22:
      uint64_t v19 = *(void *)(a2 + 64);
      if (v19)
      {
        *(void *)(a1 + 64) = v19;
        (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v5, v6);
      }
      else
      {
        long long v50 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v50;
      }
      uint64_t v51 = (_OWORD *)(a1 + 72);
      uint64_t v52 = (_OWORD *)(a2 + 72);
      uint64_t v53 = *(void *)(a2 + 96);
      if (v53)
      {
        *(void *)(a1 + 96) = v53;
        (**(void (***)(_OWORD *, _OWORD *))(v53 - 8))(v51, v52);
      }
      else
      {
        long long v63 = *(_OWORD *)(a2 + 88);
        *uint64_t v51 = *v52;
        *(_OWORD *)(a1 + 88) = v63;
      }
      *(unsigned char *)(a1 + 296) = 34;
      break;
    case 0x23:
      uint64_t v20 = *(void *)(a2 + 64);
      if (v20)
      {
        *(void *)(a1 + 64) = v20;
        (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v5, v6);
      }
      else
      {
        long long v54 = v6[1];
        *uint64_t v5 = *v6;
        v5[1] = v54;
      }
      *(unsigned char *)(a1 + 296) = 35;
      break;
    case 0x24:
      uint64_t v21 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v21;
      char v17 = 36;
LABEL_23:
      *(unsigned char *)(a1 + 296) = v17;
      swift_bridgeObjectRetain();
      goto LABEL_47;
    case 0x25:
      *(void *)(a1 + 40) = *(void *)v6;
      char v18 = 37;
      goto LABEL_46;
    case 0x3A:
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      int v12 = *(void **)(a2 + 80);
      *(void *)(a1 + 80) = v12;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      char v13 = 58;
LABEL_26:
      *(unsigned char *)(a1 + 296) = v13;
      id v22 = v12;
      break;
    case 0x3F:
      long long v23 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v23;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      id v24 = *(void **)(a2 + 104);
      uint64_t v25 = *(void **)(a2 + 112);
      *(void *)(a1 + 104) = v24;
      *(void *)(a1 + 112) = v25;
      id v26 = *(void **)(a2 + 120);
      id v27 = *(void **)(a2 + 128);
      *(void *)(a1 + 120) = v26;
      *(void *)(a1 + 128) = v27;
      uint64_t v28 = *(void *)(a2 + 160);
      id v29 = v24;
      id v30 = v25;
      id v31 = v26;
      id v32 = v27;
      if (v28)
      {
        uint64_t v33 = *(void *)(a2 + 168);
        *(void *)(a1 + 160) = v28;
        *(void *)(a1 + 168) = v33;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v28 - 8))(a1 + 136, a2 + 136, v28);
      }
      else
      {
        long long v55 = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 152) = v55;
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
      }
      uint64_t v56 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v56;
      char v18 = 63;
      goto LABEL_46;
    case 0x40:
      long long v34 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v34;
      long long v35 = *(void **)(a2 + 72);
      long long v36 = *(void **)(a2 + 80);
      *(void *)(a1 + 72) = v35;
      *(void *)(a1 + 80) = v36;
      uint64_t v37 = *(void **)(a2 + 88);
      long long v38 = *(void **)(a2 + 96);
      *(void *)(a1 + 88) = v37;
      *(void *)(a1 + 96) = v38;
      uint64_t v39 = *(void *)(a2 + 128);
      id v40 = v35;
      id v41 = v36;
      id v42 = v37;
      id v43 = v38;
      if (v39)
      {
        uint64_t v44 = *(void *)(a2 + 136);
        *(void *)(a1 + 128) = v39;
        *(void *)(a1 + 136) = v44;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v39 - 8))(a1 + 104, a2 + 104, v39);
      }
      else
      {
        long long v57 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v57;
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
      }
      uint64_t v58 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v58;
      char v18 = 64;
LABEL_46:
      *(unsigned char *)(a1 + 296) = v18;
LABEL_47:
      swift_bridgeObjectRetain();
      break;
    default:
      memcpy(v5, v6, 0x101uLL);
      break;
  }
  uint64_t v59 = *(void **)(a2 + 304);
  *(void *)(a1 + 304) = v59;
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  id v60 = v59;
  return a1;
}

uint64_t assignWithCopy for CRLSpringLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    long long v4 = (_OWORD *)(a1 + 40);
    uint64_t v5 = (_OWORD *)(a2 + 40);
    sub_10054BD5C(a1 + 40);
    switch(*(unsigned char *)(a2 + 296))
    {
      case 0:
        uint64_t v6 = *(void *)(a2 + 64);
        if (v6)
        {
          *(void *)(a1 + 64) = v6;
          (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          long long v42 = *(_OWORD *)(a2 + 56);
          *long long v4 = *v5;
          *(_OWORD *)(a1 + 56) = v42;
        }
        id v43 = (_OWORD *)(a1 + 72);
        uint64_t v44 = (_OWORD *)(a2 + 72);
        uint64_t v45 = *(void *)(a2 + 96);
        if (v45)
        {
          *(void *)(a1 + 96) = v45;
          (**(void (***)(_OWORD *, _OWORD *))(v45 - 8))(v43, v44);
        }
        else
        {
          long long v60 = *(_OWORD *)(a2 + 88);
          *id v43 = *v44;
          *(_OWORD *)(a1 + 88) = v60;
        }
        *(unsigned char *)(a1 + 296) = 0;
        break;
      case 1:
        uint64_t v7 = *(void *)(a2 + 64);
        if (v7)
        {
          *(void *)(a1 + 64) = v7;
          (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          long long v46 = *(_OWORD *)(a2 + 56);
          *long long v4 = *v5;
          *(_OWORD *)(a1 + 56) = v46;
        }
        *(unsigned char *)(a1 + 296) = 1;
        break;
      case 0x12:
        uint64_t v8 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v8;
        char v9 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v9;
        char v10 = 18;
        goto LABEL_15;
      case 0x13:
        char v11 = *(void **)v5;
        *(void *)(a1 + 40) = *(void *)v5;
        char v12 = 19;
        goto LABEL_27;
      case 0x14:
        uint64_t v8 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v8;
        char v9 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v9;
        char v10 = 20;
        goto LABEL_15;
      case 0x15:
        char v11 = *(void **)v5;
        *(void *)(a1 + 40) = *(void *)v5;
        char v12 = 21;
        goto LABEL_27;
      case 0x1C:
        uint64_t v8 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v8;
        char v9 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v9;
        char v10 = 28;
        goto LABEL_15;
      case 0x1D:
        char v11 = *(void **)v5;
        *(void *)(a1 + 40) = *(void *)v5;
        char v12 = 29;
        goto LABEL_27;
      case 0x1E:
        uint64_t v8 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v8;
        char v9 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v9;
        char v10 = 30;
LABEL_15:
        *(unsigned char *)(a1 + 296) = v10;
        id v13 = v8;
        id v14 = v9;
        break;
      case 0x1F:
        char v11 = *(void **)v5;
        *(void *)(a1 + 40) = *(void *)v5;
        char v12 = 31;
        goto LABEL_27;
      case 0x20:
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        char v15 = 32;
        goto LABEL_24;
      case 0x21:
        *(void *)(a1 + 40) = *(void *)v5;
        char v16 = 33;
        goto LABEL_47;
      case 0x22:
        uint64_t v17 = *(void *)(a2 + 64);
        if (v17)
        {
          *(void *)(a1 + 64) = v17;
          (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          long long v47 = *(_OWORD *)(a2 + 56);
          *long long v4 = *v5;
          *(_OWORD *)(a1 + 56) = v47;
        }
        uint64_t v48 = (_OWORD *)(a1 + 72);
        long long v49 = (_OWORD *)(a2 + 72);
        uint64_t v50 = *(void *)(a2 + 96);
        if (v50)
        {
          *(void *)(a1 + 96) = v50;
          (**(void (***)(_OWORD *, _OWORD *))(v50 - 8))(v48, v49);
        }
        else
        {
          long long v61 = *(_OWORD *)(a2 + 88);
          *uint64_t v48 = *v49;
          *(_OWORD *)(a1 + 88) = v61;
        }
        *(unsigned char *)(a1 + 296) = 34;
        break;
      case 0x23:
        uint64_t v18 = *(void *)(a2 + 64);
        if (v18)
        {
          *(void *)(a1 + 64) = v18;
          (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1 + 40, a2 + 40);
        }
        else
        {
          long long v51 = *(_OWORD *)(a2 + 56);
          *long long v4 = *v5;
          *(_OWORD *)(a1 + 56) = v51;
        }
        *(unsigned char *)(a1 + 296) = 35;
        break;
      case 0x24:
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        char v15 = 36;
LABEL_24:
        *(unsigned char *)(a1 + 296) = v15;
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 0x25:
        *(void *)(a1 + 40) = *(void *)v5;
        char v16 = 37;
        goto LABEL_47;
      case 0x3A:
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        long long v19 = *(_OWORD *)(a2 + 56);
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = v19;
        char v11 = *(void **)(a2 + 80);
        *(void *)(a1 + 80) = v11;
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        char v12 = 58;
LABEL_27:
        *(unsigned char *)(a1 + 296) = v12;
        id v20 = v11;
        break;
      case 0x3F:
        long long v21 = *(_OWORD *)(a2 + 56);
        *long long v4 = *v5;
        *(_OWORD *)(a1 + 56) = v21;
        long long v22 = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = v22;
        long long v23 = *(void **)(a2 + 104);
        *(void *)(a1 + 104) = v23;
        id v24 = *(void **)(a2 + 112);
        *(void *)(a1 + 112) = v24;
        uint64_t v25 = *(void **)(a2 + 120);
        *(void *)(a1 + 120) = v25;
        id v26 = *(void **)(a2 + 128);
        *(void *)(a1 + 128) = v26;
        uint64_t v27 = *(void *)(a2 + 160);
        id v28 = v23;
        id v29 = v24;
        id v30 = v25;
        id v31 = v26;
        if (v27)
        {
          *(void *)(a1 + 160) = v27;
          *(void *)(a1 + 168) = *(void *)(a2 + 168);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v27 - 8))(a1 + 136, a2 + 136, v27);
        }
        else
        {
          long long v52 = *(_OWORD *)(a2 + 136);
          long long v53 = *(_OWORD *)(a2 + 152);
          *(void *)(a1 + 168) = *(void *)(a2 + 168);
          *(_OWORD *)(a1 + 136) = v52;
          *(_OWORD *)(a1 + 152) = v53;
        }
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        char v16 = 63;
        goto LABEL_47;
      case 0x40:
        long long v32 = *(_OWORD *)(a2 + 56);
        *long long v4 = *v5;
        *(_OWORD *)(a1 + 56) = v32;
        uint64_t v33 = *(void **)(a2 + 72);
        *(void *)(a1 + 72) = v33;
        long long v34 = *(void **)(a2 + 80);
        *(void *)(a1 + 80) = v34;
        long long v35 = *(void **)(a2 + 88);
        *(void *)(a1 + 88) = v35;
        long long v36 = *(void **)(a2 + 96);
        *(void *)(a1 + 96) = v36;
        uint64_t v37 = *(void *)(a2 + 128);
        id v38 = v33;
        id v39 = v34;
        id v40 = v35;
        id v41 = v36;
        if (v37)
        {
          *(void *)(a1 + 128) = v37;
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8))(a1 + 104, a2 + 104, v37);
        }
        else
        {
          long long v54 = *(_OWORD *)(a2 + 104);
          long long v55 = *(_OWORD *)(a2 + 120);
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          *(_OWORD *)(a1 + 104) = v54;
          *(_OWORD *)(a1 + 120) = v55;
        }
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        char v16 = 64;
LABEL_47:
        *(unsigned char *)(a1 + 296) = v16;
LABEL_48:
        swift_bridgeObjectRetain();
        break;
      default:
        memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x101uLL);
        break;
    }
  }
  uint64_t v56 = *(void **)(a1 + 304);
  long long v57 = *(void **)(a2 + 304);
  *(void *)(a1 + 304) = v57;
  id v58 = v57;

  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
  *(unsigned char *)(a1 + 314) = *(unsigned char *)(a2 + 314);
  *(unsigned char *)(a1 + 315) = *(unsigned char *)(a2 + 315);
  return a1;
}

void *initializeWithTake for CRLSpringLayerAnimation.Def(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x13CuLL);
}

uint64_t assignWithTake for CRLSpringLayerAnimation.Def(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    sub_10054BD5C(a1 + 40);
    memcpy((void *)(a1 + 40), (const void *)(a2 + 40), 0x101uLL);
  }
  uint64_t v5 = *(void **)(a1 + 304);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);

  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(_WORD *)(a1 + 313) = *(_WORD *)(a2 + 313);
  *(unsigned char *)(a1 + 315) = *(unsigned char *)(a2 + 315);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLSpringLayerAnimation.Def(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 316)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 304);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLSpringLayerAnimation.Def(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 312) = 0;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 316) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 316) = 0;
    }
    if (a2) {
      *(void *)(result + 304) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSpringLayerAnimation.Def()
{
  return &type metadata for CRLSpringLayerAnimation.Def;
}

unint64_t sub_100F80FF8(uint64_t a1)
{
  unint64_t result = sub_100F81020();
  *(void *)(a1 + 40) = result;
  return result;
}

unint64_t sub_100F81020()
{
  unint64_t result = qword_1016A3200[0];
  if (!qword_1016A3200[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1016A3200);
  }
  return result;
}

uint64_t sub_100F81074(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100F810DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100F8113C()
{
  uint64_t result = type metadata accessor for CheckedContinuation();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100F811EC()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for CheckedContinuation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100F812AC()
{
  sub_100F811EC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLCheckedContinuationOnce()
{
  return sub_100568E70();
}

uint64_t sub_100F8131C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CRLCheckedContinuationOnceWithTimeout()
{
  return sub_100568E70();
}

id sub_100F8136C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CRLLayerAnimationDisplayLink()) init];
  qword_10171CC58 = (uint64_t)result;
  return result;
}

uint64_t (*sub_100F813F8())()
{
  return j__swift_endAccess;
}

void sub_100F81488()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime + 8))
  {
    uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink);
    if (v1)
    {
      id v7 = v1;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"startDisplayLink()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationDisplayLink.swift", 114, 2, 94, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startDisplayLink()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationDisplayLink.swift", 114, 2, 94);
    }
    else
    {
      uint64_t v2 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v3 = objc_allocWithZone((Class)CRLDisplayLink);
      aBlock[4] = sub_100F83694;
      aBlock[5] = v2;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100F83468;
      void aBlock[3] = &unk_101534BC0;
      int v4 = _Block_copy(aBlock);
      swift_retain();
      id v5 = [v3 initWithHandler:v4];
      _Block_release(v4);
      swift_release();
      swift_release();
      id v6 = v5;
      sub_100F835AC(v5);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"startDisplayLink()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationDisplayLink.swift", 114, 2, 94, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startDisplayLink()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationDisplayLink.swift", 114, 2, 94);
  }
}

void sub_100F81714(double a1, double a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = Strong + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime + 8) == 1)
    {
      *(double *)uint64_t v6 = a1;
      *(unsigned char *)(v6 + 8) = 0;
    }
    sub_100F81DFC(a1, a2);
  }
}

void sub_100F817E8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime + 8) & 1) != 0
    || !*(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink))
  {
    char v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
    char v10 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
    if (v10)
    {
      uint64_t v11 = swift_retain();
      v10(v11);
      uint64_t v12 = *v9;
      *char v9 = 0;
      v9[1] = 0;
      sub_1005174AC(v12);
      sub_1005174AC((uint64_t)v10);
    }
  }
  else
  {
    *(void *)uint64_t v1 = 0;
    *(unsigned char *)(v1 + 8) = 1;
    uint64_t v2 = v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime;
    *(void *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 8) = 1;
    uint64_t v3 = v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_previousTickMediaTime;
    *(void *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 8) = 1;
    sub_100F835AC(0);
    sub_100F81C9C();
    int v4 = (void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations);
    swift_beginAccess();
    *int v4 = 0;
    swift_bridgeObjectRelease();
    id v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
    uint64_t v6 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
    if (v6)
    {
      uint64_t v7 = swift_retain();
      v6(v7);
      uint64_t v8 = *v5;
      *id v5 = 0;
      v5[1] = 0;
      sub_1005174AC(v8);
      sub_1005174AC((uint64_t)v6);
    }
  }
}

void sub_100F81990(double *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v6 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink);
  if (v6)
  {
    uint64_t v7 = v5;
    id v13 = v6;
    if (([v13 paused] & 1) == 0)
    {
      [v13 setPaused:1];
      sub_100F81C9C();
      uint64_t v14 = *((void *)a1 + 2);
      swift_bridgeObjectRetain();
      if (!v14)
      {
LABEL_9:
        long long v19 = (double **)(v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations);
        swift_beginAccess();
        char *v19 = a1;
        swift_bridgeObjectRelease();
        uint64_t v20 = v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_totalRunTime;
        *(double *)uint64_t v20 = a5;
        *(unsigned char *)(v20 + 8) = 0;
        long long v21 = (uint64_t *)(v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
        uint64_t v22 = *(void *)(v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler);
        *long long v21 = a2;
        v21[1] = a3;
        sub_1005173A0(a2);
        sub_1005174AC(v22);
        uint64_t v23 = v7 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime;
        *(double *)uint64_t v23 = a4;
        *(unsigned char *)(v23 + 8) = 0;
        [v13 setPaused:0];

        return;
      }
      uint64_t v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a1 = sub_100F68620((uint64_t)a1);
        }
        if (v16 >= *((void *)a1 + 2)) {
          break;
        }
        ++v16;
        uint64_t v18 = *(void *)&a1[v15 + 7];
        double v17 = a1[v15 + 8];
        sub_1005231B4((uint64_t)&a1[v15 + 4], v18);
        (*(void (**)(uint64_t))(*(void *)(*(void *)&v17 + 16) + 24))(v18);
        v15 += 5;
        if (v14 == v16) {
          goto LABEL_9;
        }
      }
      __break(1u);
    }
  }
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100F81BAC()
{
  sub_100F817E8();
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLLayerAnimationDisplayLink();
  return [super dealloc];
}

uint64_t sub_100F81C9C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *v1;
  if (*v1)
  {
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      unint64_t v5 = 0;
      for (uint64_t i = 32; ; i += 40)
      {
        sub_1005498A4(v3 + i, (uint64_t)v14);
        uint64_t v8 = v15;
        uint64_t v7 = v16;
        sub_1005231B4((uint64_t)v14, v15);
        (*(void (**)(uint64_t))(*(void *)(v7 + 16) + 32))(v8);
        char v10 = sub_100F813F8();
        uint64_t v11 = *v9;
        if (*v9)
        {
          uint64_t v12 = v9;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v12 = v11;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_100F68620(v11);
            uint64_t v11 = result;
            *uint64_t v12 = result;
          }
          if (v5 >= *(void *)(v11 + 16))
          {
            __break(1u);
            return result;
          }
          sub_10054BB2C((uint64_t *)(v11 + i), v14);
        }
        ((void (*)(uint64_t *, void))v10)(&v13, 0);
        ++v5;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v14);
        if (v4 == v5) {
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

void sub_100F81DFC(double a1, double a2)
{
  uint64_t v5 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  char v9 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016730B0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  double v17 = (char *)&v119 - v16;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v128 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  long long v21 = (char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v119 - v24;
  __chkstk_darwin(v26, v27);
  uint64_t v136 = (uint64_t)&v119 - v28;
  __chkstk_darwin(v29, v30);
  uint64_t v134 = (char *)&v119 - v31;
  long long v32 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink);
  if (!v32) {
    goto LABEL_64;
  }
  id v129 = v32;
  if ([v129 paused]) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime + 8) & 1) != 0
    || (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_totalRunTime + 8) & 1) != 0)
  {
    id v33 = v129;

    return;
  }
  uint64_t v125 = v13;
  uint64_t v126 = v5;
  double v34 = *(double *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime);
  double v35 = *(double *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_totalRunTime);
  long long v36 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations);
  swift_beginAccess();
  uint64_t v37 = *v36;
  if (!v37)
  {
LABEL_59:

    return;
  }
  uint64_t v135 = v25;
  uint64_t v124 = v21;
  uint64_t v133 = v18;
  uint64_t v120 = v17;
  uint64_t v121 = v9;
  id v38 = self;
  swift_bridgeObjectRetain();
  [v38 begin];
  id v122 = v38;
  [v38 setDisableActions:1];
  uint64_t v132 = *(void *)(v37 + 16);
  if (!v132)
  {
LABEL_57:
    swift_bridgeObjectRelease();
    [v122 commit];
    if (v34 + v35 < a1) {
      sub_100F817E8();
    }
    goto LABEL_59;
  }
  uint64_t v137 = (void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_animationStatusMap);
  swift_beginAccess();
  unint64_t v39 = 0;
  id v40 = (void (**)(uint64_t, uint64_t))(v128 + 8);
  uint64_t v127 = v128 + 16;
  long long v123 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v41 = 4;
  uint64_t v131 = v2;
  uint64_t v130 = v37;
  uint64_t v42 = (uint64_t)v134;
  while (1)
  {
    sub_1005498A4(v37 + v41 * 8, (uint64_t)v140);
    uint64_t v43 = *v137;
    uint64_t v44 = v141;
    uint64_t v45 = v142;
    sub_10050F848(v140, v141);
    long long v46 = *(void (**)(uint64_t, uint64_t))(v45 + 56);
    swift_bridgeObjectRetain();
    v46(v44, v45);
    if (*(void *)(v43 + 16))
    {
      sub_100955FC8(v42);
      char v48 = v47;
    }
    else
    {
      char v48 = 0;
    }
    uint64_t v49 = v133;
    uint64_t v50 = (uint64_t)v135;
    long long v51 = *v40;
    (*v40)(v42, v133);
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0)
    {
      uint64_t v52 = v141;
      uint64_t v53 = v142;
      sub_10050F848(v140, v141);
      uint64_t v54 = v136;
      (*(void (**)(uint64_t, uint64_t))(v53 + 56))(v52, v53);
      long long v55 = v137;
      swift_beginAccess();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v139 = (void *)*v55;
      long long v57 = v139;
      *long long v55 = 0x8000000000000000;
      unint64_t v59 = sub_100955FC8(v54);
      uint64_t v60 = v57[2];
      BOOL v61 = (v58 & 1) == 0;
      uint64_t v62 = v60 + v61;
      if (__OFADD__(v60, v61)) {
        goto LABEL_60;
      }
      char v63 = v58;
      if (v57[3] < v62)
      {
        sub_100971614(v62, isUniquelyReferenced_nonNull_native);
        unint64_t v64 = sub_100955FC8(v136);
        if ((v63 & 1) != (v65 & 1)) {
          goto LABEL_65;
        }
        unint64_t v59 = v64;
        uint64_t v66 = v139;
        if ((v63 & 1) == 0) {
          goto LABEL_26;
        }
LABEL_24:
        *(unsigned char *)(v66[7] + v59) = 0;
LABEL_28:
        *uint64_t v137 = v66;
        swift_bridgeObjectRelease();
        v51(v136, v49);
        swift_endAccess();
        uint64_t v50 = (uint64_t)v135;
        goto LABEL_29;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v66 = v139;
        if (v58) {
          goto LABEL_24;
        }
      }
      else
      {
        sub_10098620C();
        uint64_t v66 = v139;
        if (v63) {
          goto LABEL_24;
        }
      }
LABEL_26:
      v66[(v59 >> 6) + 8] |= 1 << v59;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v128 + 16))(v66[6] + *(void *)(v128 + 72) * v59, v136, v49);
      *(unsigned char *)(v66[7] + v59) = 0;
      uint64_t v67 = v66[2];
      BOOL v68 = __OFADD__(v67, 1);
      uint64_t v69 = v67 + 1;
      if (v68) {
        goto LABEL_61;
      }
      v66[2] = v69;
      goto LABEL_28;
    }
LABEL_29:
    uint64_t v70 = v141;
    uint64_t v71 = v142;
    sub_10050F848(v140, v141);
    (*(void (**)(uint64_t, uint64_t))(v71 + 56))(v70, v71);
    uint64_t v72 = *v137;
    if (!*(void *)(*v137 + 16)) {
      goto LABEL_37;
    }
    swift_bridgeObjectRetain();
    unint64_t v73 = sub_100955FC8(v50);
    if ((v74 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_37:
      v51(v50, v49);
      goto LABEL_38;
    }
    uint64_t v75 = v50;
    int v76 = *(unsigned __int8 *)(*(void *)(v72 + 56) + v73);
    swift_bridgeObjectRelease();
    v51(v75, v49);
    if (v76 != 2)
    {
      uint64_t v78 = v141;
      uint64_t v77 = v142;
      sub_10050F848(v140, v141);
      double v79 = v34 + (*(double (**)(uint64_t))(*(void *)(*(void *)(v77 + 24) + 8) + 8))(v78);
      uint64_t v81 = v141;
      uint64_t v80 = v142;
      sub_10050F848(v140, v141);
      float v82 = (a2 - v79)
          / (v34 + (*(double (**)(uint64_t))(*(void *)(*(void *)(v80 + 24) + 8) + 40))(v81) - v79);
      if (v82 > 0.0)
      {
        if (!v76)
        {
          uint64_t v84 = v141;
          uint64_t v83 = v142;
          sub_10050F848(v140, v141);
          uint64_t v85 = (uint64_t)v120;
          (*(void (**)(uint64_t))(*(void *)(v83 + 16) + 40))(v84);
          uint64_t v86 = v126;
          if ((*v123)(v85, 1, v126))
          {
            sub_100F834E8(v85);
          }
          else
          {
            uint64_t v92 = (uint64_t)v121;
            sub_100F83548(v85, (uint64_t)v121);
            sub_100F834E8(v85);
            uint64_t v93 = *(void (**)(uint64_t, double))(v92 + *(int *)(v86 + 20));
            swift_retain();
            uint64_t v94 = sub_100884D3C(v92);
            v93(v94, a2);
            swift_release();
          }
          uint64_t v95 = v141;
          uint64_t v96 = v142;
          sub_10050F848(v140, v141);
          uint64_t v97 = (uint64_t)v124;
          (*(void (**)(uint64_t, uint64_t))(v96 + 56))(v95, v96);
          long long v98 = v137;
          swift_beginAccess();
          char v99 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v139 = (void *)*v98;
          void *v98 = 0x8000000000000000;
          sub_100979A7C(1, v97, v99);
          void *v98 = v139;
          swift_bridgeObjectRelease();
          uint64_t v100 = v97;
          uint64_t v49 = v133;
          v51(v100, v133);
          swift_endAccess();
        }
        if (v82 < 1.0)
        {
          uint64_t v102 = v141;
          uint64_t v101 = v142;
          sub_1005231B4((uint64_t)v140, v141);
          (*(void (**)(uint64_t, double, double))(*(void *)(v101 + 16) + 16))(v102, v34, a2);
        }
      }
      if (v76 == 1 && v82 >= 1.0)
      {
        uint64_t v103 = v141;
        uint64_t v104 = v142;
        sub_10050F848(v140, v141);
        uint64_t v105 = (uint64_t)v124;
        (*(void (**)(uint64_t, uint64_t))(v104 + 56))(v103, v104);
        unint64_t v106 = v137;
        swift_beginAccess();
        char v107 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v139 = (void *)*v106;
        *unint64_t v106 = 0x8000000000000000;
        sub_100979A7C(2, v105, v107);
        *unint64_t v106 = v139;
        swift_bridgeObjectRelease();
        v51(v105, v49);
        swift_endAccess();
        uint64_t v109 = v141;
        uint64_t v108 = v142;
        sub_10050F848(v140, v141);
        uint64_t v110 = v109;
        uint64_t v111 = (uint64_t)v125;
        (*(void (**)(uint64_t))(*(void *)(v108 + 16) + 64))(v110);
        uint64_t v112 = v126;
        if ((*v123)(v111, 1, v126))
        {
          sub_100F834E8(v111);
        }
        else
        {
          uint64_t v113 = (uint64_t)v121;
          sub_100F83548(v111, (uint64_t)v121);
          sub_100F834E8(v111);
          uint64_t v114 = *(void (**)(uint64_t, double))(v113 + *(int *)(v112 + 20));
          swift_retain();
          uint64_t v115 = sub_100884D3C(v113);
          v114(v115, a2);
          swift_release();
        }
      }
      uint64_t v88 = sub_100F813F8();
      long long v89 = *v116;
      if (!*v116) {
        goto LABEL_12;
      }
      Swift::Int v117 = v116;
      char v118 = swift_isUniquelyReferenced_nonNull_native();
      *Swift::Int v117 = v89;
      if ((v118 & 1) == 0)
      {
        long long v89 = sub_100F68620((uint64_t)v89);
        *Swift::Int v117 = v89;
      }
      if (v39 >= *((void *)v89 + 2)) {
        goto LABEL_62;
      }
      goto LABEL_11;
    }
LABEL_38:
    uint64_t v88 = sub_100F813F8();
    long long v89 = *v87;
    if (!*v87) {
      goto LABEL_12;
    }
    uint64_t v90 = v87;
    char v91 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v90 = v89;
    if ((v91 & 1) == 0)
    {
      long long v89 = sub_100F68620((uint64_t)v89);
      *uint64_t v90 = v89;
    }
    if (v39 >= *((void *)v89 + 2)) {
      break;
    }
LABEL_11:
    sub_10054BB2C((uint64_t *)&v89[v41], v140);
LABEL_12:
    ((void (*)(char *, void))v88)(v138, 0);
    ++v39;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v140);
    v41 += 5;
    uint64_t v37 = v130;
    if (v132 == v39) {
      goto LABEL_57;
    }
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:

LABEL_64:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
LABEL_65:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

id sub_100F82A64()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLinkAnimations] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_totalRunTime];
  *(void *)uint64_t v1 = 0;
  v1[8] = 1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_startMediaTime];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  uint64_t v3 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_baseMediaTime];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_previousTickMediaTime];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  uint64_t v5 = &v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_completionHandler];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_animationStatusMap] = _swiftEmptyDictionarySingleton;
  v7.receiver = v0;
  v7.Class super_class = (Class)type metadata accessor for CRLLayerAnimationDisplayLink();
  return [super init];
}

uint64_t type metadata accessor for CRLLayerAnimationDisplayLink()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CRLLayerAnimationDisplayLink.AnimationStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100F82C3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerAnimationDisplayLink.AnimationStatus()
{
  return &type metadata for CRLLayerAnimationDisplayLink.AnimationStatus;
}

uint64_t *sub_100F82C74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *char v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_100F82D48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_100F82DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_100F82E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100F82EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_100F82F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100F82F78);
}

uint64_t sub_100F82F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100F83038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100F8304C);
}

uint64_t sub_100F8304C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLLayerAnimationDisplayLink.Handler()
{
  uint64_t result = qword_1016A33C8;
  if (!qword_1016A33C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100F83154()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100F831EC()
{
  return sub_100F83420(&qword_1016A3400, (void (*)(uint64_t))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
}

Swift::Int sub_100F83238()
{
  return Hasher._finalize()();
}

uint64_t sub_100F832C0()
{
  type metadata accessor for UUID();
  sub_100F83420((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);

  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100F83344()
{
  return Hasher._finalize()();
}

unint64_t sub_100F833CC()
{
  unint64_t result = qword_1016A3408;
  if (!qword_1016A3408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3408);
  }
  return result;
}

uint64_t sub_100F83420(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100F83468(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v7 = *(void (**)(double, double))(a1 + 32);
  swift_retain();
  id v8 = a2;
  v7(a3, a4);
  swift_release();
}

uint64_t sub_100F834E8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016730B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100F83548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100F835AC(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLLayerAnimationDisplayLink_displayLink);
  if (v4 && ([v4 setPaused:1], (int v5 = *(void **)(v1 + v3)) != 0))
  {
    [v5 invalidate];
    uint64_t v6 = *(void **)(v1 + v3);
  }
  else
  {
    uint64_t v6 = 0;
  }
  *(void *)(v1 + v3) = a1;
  id v7 = a1;

  id result = *(id *)(v1 + v3);
  if (result)
  {
    return [result setPaused:0];
  }
  return result;
}

uint64_t sub_100F8365C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100F83694(double a1, double a2)
{
}

uint64_t sub_100F8369C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100F836AC()
{
  return swift_release();
}

uint64_t sub_100F836B4(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = v1;
  return _swift_task_switch(sub_100F836D4, v1, 0);
}

uint64_t sub_100F836D4()
{
  Class v1 = sub_100D3EC2C(v0[10]);
  v0[12] = (uint64_t)v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v2;
  void *v2 = v0;
  v2[1] = sub_100F83778;
  return sub_10074A4D4((uint64_t)v1);
}

uint64_t sub_100F83778(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(void *)(v4 + 88);
    return _swift_task_switch(sub_100F838D0, v6, 0);
  }
  else
  {

    id v7 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v7(a1);
  }
}

uint64_t sub_100F838D0()
{
  uint64_t v1 = *(void *)(v0 + 112);

  *(void *)(v0 + 16) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 24);
    *(void *)(v0 + 40) = v2;
    sub_100F85D28((unint64_t *)&qword_101670DF8, type metadata accessor for CKError);
    _BridgedStoredNSError.code.getter();
    if (*(void *)(v0 + 32) == 26
      || (*(void *)(v0 + 56) = v2, _BridgedStoredNSError.code.getter(), *(void *)(v0 + 48) == 28))
    {

LABEL_5:
      swift_errorRelease();
      uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
      return v3(0);
    }
    *(void *)(v0 + 72) = v2;
    _BridgedStoredNSError.code.getter();

    if (*(void *)(v0 + 64) == 11) {
      goto LABEL_5;
    }
  }
  swift_willThrow();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100F83AB8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_100F83B7C, v2, 0);
}

uint64_t sub_100F83B7C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + 136);
  if (v2)
  {
    uint64_t v3 = v0[3];
    uint64_t v4 = *(void *)(v1 + 128);
    uint64_t v5 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v7 = *v5;
    unint64_t v6 = v5[1];
    BOOL v8 = *v5 == v4 && v2 == v6;
    if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v3 = v0[3], (v9 & 1) != 0))
    {
      uint64_t v10 = v0[7];
      uint64_t v11 = v0[2];
      (*(void (**)(uint64_t, uint64_t, void))(v0[6] + 16))(v10, v3, v0[5]);
      uint64_t v12 = v11;
      uint64_t v13 = v10;
      uint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
    }
    else
    {
      uint64_t v18 = v0[7];
      uint64_t v19 = v0[2];
      (*(void (**)(uint64_t, void, void))(v0[6] + 16))(v18, v0[3], v0[5]);
      swift_bridgeObjectRetain();
      uint64_t v12 = v19;
      uint64_t v13 = v18;
      uint64_t v14 = v7;
      unint64_t v15 = v6;
    }
    sub_100753370(v13, v14, v15, v12);
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  else
  {
    uint64_t v16 = (void *)swift_task_alloc();
    v0[8] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_100F83D2C;
    return sub_10074A904();
  }
}

uint64_t sub_100F83D2C(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = (void *)*v3;
  uint64_t v7 = (void *)*v3;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    BOOL v8 = (uint64_t (*)(void))v7[1];
    return v8();
  }
  else
  {
    uint64_t v10 = v6[4];
    v6[9] = a2;
    v6[10] = a1;
    return _swift_task_switch(sub_100F83E90, v10, 0);
  }
}

uint64_t sub_100F83E90()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[4];
  *(void *)(v2 + 128) = v0[10];
  *(void *)(v2 + 136) = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v3)
  {
    uint64_t v4 = v0[3];
    uint64_t v5 = *(void *)(v0[4] + 128);
    unint64_t v6 = (uint64_t *)(v4 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v8 = *v6;
    unint64_t v7 = v6[1];
    BOOL v9 = *v6 == v5 && v3 == v7;
    if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v4 = v0[3], (v10 & 1) != 0))
    {
      uint64_t v11 = v0[7];
      uint64_t v12 = v0[2];
      (*(void (**)(uint64_t, uint64_t, void))(v0[6] + 16))(v11, v4, v0[5]);
      uint64_t v13 = v12;
      uint64_t v14 = v11;
      uint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
    }
    else
    {
      uint64_t v18 = v0[7];
      uint64_t v19 = v0[2];
      (*(void (**)(uint64_t, void, void))(v0[6] + 16))(v18, v0[3], v0[5]);
      swift_bridgeObjectRetain();
      uint64_t v13 = v19;
      uint64_t v14 = v18;
      uint64_t v15 = v8;
      unint64_t v16 = v7;
    }
    sub_100753370(v14, v15, v16, v13);
    swift_task_dealloc();
    double v17 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_100F85CD4();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    double v17 = (uint64_t (*)(void))v0[1];
  }
  return v17();
}

uint64_t sub_100F8401C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for CRLBoardIdentifier(0);
  v3[5] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_100F8410C, v2, 0);
}

uint64_t sub_100F8410C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  if (*v2) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = v3 == 0xE000000000000000;
  }
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v19 = v0[7];
    uint64_t v18 = v0[8];
    uint64_t v21 = v0[5];
    uint64_t v20 = v0[6];
    uint64_t v22 = v0[2];
    sub_100540CFC(v0[3], v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v21, v20);
    swift_bridgeObjectRetain();
    sub_100753578(v18, v4, v3, v22);
    sub_100510028(v21);
    goto LABEL_12;
  }
  uint64_t v6 = v0[4];
  uint64_t v7 = *(void *)(v6 + 136);
  if (v7)
  {
    uint64_t v9 = v0[7];
    uint64_t v8 = v0[8];
    uint64_t v10 = v0[6];
    uint64_t v11 = v0[3];
    uint64_t v24 = v0[2];
    uint64_t v12 = *(void *)(v6 + 128);
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
    swift_bridgeObjectRetain_n();
    sub_100C37C60(v12, v7, v13, v15, (uint64_t)&_mh_execute_header, (uint64_t)"globallyScopedBoardIdentifier(boardIdentifier:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2u, 79);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v11, v10);
    sub_100753578(v8, v12, v7, v24);
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  unint64_t v16 = (void *)swift_task_alloc();
  v0[9] = v16;
  *unint64_t v16 = v0;
  v16[1] = sub_100F84380;
  return sub_10074A904();
}

uint64_t sub_100F84380(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  uint64_t v7 = (void *)*v3;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v7[1];
    return v8();
  }
  else
  {
    uint64_t v10 = v6[4];
    v6[10] = a2;
    v6[11] = a1;
    return _swift_task_switch(sub_100F844DC, v10, 0);
  }
}

uint64_t sub_100F844DC()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[4];
  *(void *)(v2 + 128) = v0[11];
  *(void *)(v2 + 136) = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v3)
  {
    uint64_t v5 = v0[7];
    uint64_t v4 = v0[8];
    uint64_t v6 = v0[6];
    uint64_t v7 = v0[3];
    uint64_t v14 = v0[2];
    uint64_t v8 = *(void *)(v0[4] + 128);
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
    swift_bridgeObjectRetain_n();
    sub_100C37C60(v8, v3, v9, v11, (uint64_t)&_mh_execute_header, (uint64_t)"globallyScopedBoardIdentifier(boardIdentifier:)", 47, 2u, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2u, 79);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
    sub_100753578(v4, v8, v3, v14);
  }
  else
  {
    sub_100F85CD4();
    swift_allocError();
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100F84698(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return _swift_task_switch(sub_100F846B8, v1, 0);
}

uint64_t sub_100F846B8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 136) + 112);
  *(void *)(v0 + 144) = v1;
  return _swift_task_switch(sub_100F846DC, v1, 0);
}

uint64_t sub_100F846DC()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = *(void **)(v0[18] + 112);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100F847E4;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10074AC54;
  v0[13] = &unk_101534BF8;
  v0[14] = v3;
  [v2 acceptShareMetadata:v1 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100F847E4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 152) = v2;
  uint64_t v3 = *(void *)(v1 + 144);
  if (v2) {
    uint64_t v4 = sub_100F84920;
  }
  else {
    uint64_t v4 = sub_100F84904;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100F84904()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 120));
}

uint64_t sub_100F84920()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F8498C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_100F849AC, v1, 0);
}

uint64_t sub_100F849AC()
{
  uint64_t v1 = v0[3];
  Class v2 = sub_100D3EC2C(v0[2]);
  v0[4] = (uint64_t)v2;
  v0[5] = *(void *)(v1 + 112);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100F84A54;
  return sub_10074A4D4((uint64_t)v2);
}

uint64_t sub_100F84A54(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 56) = a1;
  *(void *)(v4 + 64) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 24);
  if (v1) {
    uint64_t v6 = sub_100F8508C;
  }
  else {
    uint64_t v6 = sub_100F84B88;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100F84B88()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 56) currentUserParticipant];
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = [v2 role];

      if (v4 == (id)1)
      {
        uint64_t v5 = (void *)swift_task_alloc();
        *(void *)(v0 + 72) = v5;
        *uint64_t v5 = v0;
        v5[1] = sub_100F84D4C;
        uint64_t v6 = *(void *)(v0 + 32);
        return sub_10074A114(v6);
      }
    }
  }
  uint64_t v8 = *(void **)(v0 + 32);
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"unshareBoard(boardIdentifier:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2, 109, (uint64_t)"To unshare a board the current user must own the share. Use leaveSharedBoard() for participants.", 96, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"unshareBoard(boardIdentifier:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2, 109);

  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100F84D4C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    id v4 = sub_100F850F0;
  }
  else {
    id v4 = sub_100F84E78;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100F84E78()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 88) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F84F0C, v2, v1);
}

uint64_t sub_100F84F0C()
{
  swift_release();
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];

  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v6 = *(void *)(swift_dynamicCastClassUnconditional()
                 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
  swift_retain();
  uint64_t v3 = swift_unknownObjectRelease();
  if (!v6)
  {
LABEL_7:
    __break(1u);
    return _swift_task_switch(v3, v4, v5);
  }
  uint64_t v7 = *(void *)(v0 + 24);
  sub_100FD1418(*(void *)(v0 + 16));
  swift_release();
  uint64_t v3 = (uint64_t)sub_100F85020;
  uint64_t v4 = v7;
  uint64_t v5 = 0;
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100F85020()
{
  id v1 = *(void **)(v0 + 56);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100F8508C()
{
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100F850F0()
{
  id v1 = *(void **)(v0 + 56);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100F8515C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_100F85180, v2, 0);
}

uint64_t sub_100F85180()
{
  id v1 = [*(id *)(v0 + 24) currentUserParticipant];
  if (v1 && (v2 = v1, id v3 = [v1 role], v2, v3 == (id)1))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"leaveSharedBoard(boardIdentifier:share:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2, 121, (uint64_t)"Can not leave a share if the current user owns the share. Use unshareBoard() for owners.", 88, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"leaveSharedBoard(boardIdentifier:share:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardShareController.swift", 88, 2, 121);
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v6;
    void *v6 = v0;
    v6[1] = sub_100F85338;
    uint64_t v7 = *(void *)(v0 + 24);
    return sub_10074AD14(v7);
  }
}

uint64_t sub_100F85338()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 32);
    return _swift_task_switch(sub_100F8547C, v6, 0);
  }
}

uint64_t sub_100F8547C()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 48) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100F85510, v2, v1);
}

void sub_100F85510()
{
  swift_release();
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];

  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v3 = *(void *)(swift_dynamicCastClassUnconditional()
                 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
  swift_retain();
  swift_unknownObjectRelease();
  if (!v3)
  {
LABEL_7:
    __break(1u);
    return;
  }
  sub_100FD1418(*(void *)(v0 + 16));
  swift_release();
  uint64_t v4 = *(void (**)(void))(v0 + 8);
  v4();
}

uint64_t sub_100F85618()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLBoardShareController()
{
  return self;
}

uint64_t sub_100F85684()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100F856A4, v0, 0);
}

uint64_t sub_100F856A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v1 + 128) = 0;
  *(void *)(v1 + 136) = 0;
  swift_bridgeObjectRelease();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100F8570C(id a1)
{
  if (a1)
  {
    id v3 = [a1 containerID];

    if (!v3)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165, (uint64_t)"The containerID of a share should never be nil. This can prevent fast sync from starting.", 89, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v37) = 2;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165);
      [self logFullBacktrace:@"The containerID of a share should never be nil. This can prevent fast sync from starting." 89 v37];
    }
  }
  uint64_t v4 = *(void **)(v1 + 16);
  id v5 = v4;
  LOBYTE(v4) = sub_100B480FC(v4, a1);

  if (v4)
  {
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v6 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    uint64_t v8 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v9 = inited + 32;
    if (a1)
    {
      unint64_t v39 = sub_100538CB4();
      uint64_t v40 = sub_100F85D28((unint64_t *)&qword_101682FE0, (void (*)(uint64_t))sub_100538CB4);
      *(void *)&long long v38 = a1;
      sub_10053974C(&v38, v9);
    }
    else
    {
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(v8 + 32) = 7104878;
      *(void *)(v8 + 40) = 0xE300000000000000;
    }
    id v15 = v6;
    id v16 = a1;
    uint64_t v17 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Not saving share to board share state (no meaningful difference detected): %@", 77, 2, v8);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v10 = *(void **)(v1 + 16);
    if (v10)
    {
      id v11 = v10;
      id v12 = [v11 currentUserParticipant];
      if (v12)
      {
        id v13 = v12;
        id v14 = [v12 permission];

        id v11 = v13;
      }
      else
      {
        id v14 = [v11 publicPermission];
      }

      BOOL v18 = v14 == (id)3;
    }
    else
    {
      BOOL v18 = 1;
    }
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v19 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v20 = swift_initStackObject();
    uint64_t v21 = v20;
    *(_OWORD *)(v20 + 16) = xmmword_10117E810;
    uint64_t v22 = v20 + 32;
    if (a1)
    {
      unint64_t v39 = sub_100538CB4();
      uint64_t v40 = sub_100F85D28((unint64_t *)&qword_101682FE0, (void (*)(uint64_t))sub_100538CB4);
      *(void *)&long long v38 = a1;
      sub_10053974C(&v38, v22);
    }
    else
    {
      *(void *)(v20 + 56) = &type metadata for String;
      *(void *)(v20 + 64) = sub_100528BE4();
      *(void *)(v21 + 32) = 7104878;
      *(void *)(v21 + 40) = 0xE300000000000000;
    }
    id v23 = v19;
    id v24 = a1;
    uint64_t v25 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Saving updated share to board share state: %@", 45, 2, v21);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v26 = *(void **)(v1 + 16);
    *(void *)(v1 + 16) = a1;
    id v27 = v24;

    uint64_t v28 = *(void **)(v1 + 16);
    if (v28)
    {
      id v29 = v28;
      id v30 = [v29 currentUserParticipant];
      if (v30)
      {
        id v31 = v30;
        id v32 = [v30 permission];

        id v29 = v31;
      }
      else
      {
        id v32 = [v29 publicPermission];
      }

      BOOL v33 = v32 == (id)3;
    }
    else
    {
      BOOL v33 = 1;
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong shareStateUpdatedWithShare:v27];
      swift_unknownObjectRelease();
    }
    if (a1)
    {
      if (v33)
      {
        if (v18) {
          return;
        }
        double v35 = (void *)swift_unknownObjectWeakLoadStrong();
        if (!v35) {
          return;
        }
        [v35 currentUserGainedEditPermissions];
      }
      else
      {
        if (!v18) {
          return;
        }
        long long v36 = (void *)swift_unknownObjectWeakLoadStrong();
        if (!v36) {
          return;
        }
        [v36 currentUserLostEditPermissions];
      }
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100F85C70()
{
  sub_100523398(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLActiveBoardShareState()
{
  return self;
}

unint64_t sub_100F85CD4()
{
  unint64_t result = qword_1016A3678;
  if (!qword_1016A3678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3678);
  }
  return result;
}

uint64_t sub_100F85D28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardShareController.CRLBoardShareControllerErrors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100F85E0CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardShareController.CRLBoardShareControllerErrors()
{
  return &type metadata for CRLBoardShareController.CRLBoardShareControllerErrors;
}

unint64_t sub_100F85E48()
{
  unint64_t result = qword_1016A3680;
  if (!qword_1016A3680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3680);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTipConnectionLinesEntryPointCompact()
{
  return &type metadata for CRLTipConnectionLinesEntryPointCompact;
}

uint64_t sub_100F85EAC(uint64_t a1)
{
  return sub_100A12ACC(a1, qword_10171CC60);
}

uint64_t sub_100F85ED0(uint64_t a1)
{
  return sub_100F85F94(a1, qword_10171CC78);
}

uint64_t sub_100F85EFC(uint64_t a1)
{
  return sub_100F85F94(a1, qword_10171CC90);
}

uint64_t sub_100F85F20(uint64_t a1)
{
  return sub_100F85F94(a1, qword_10171CCA8);
}

uint64_t sub_100F85F44(uint64_t a1)
{
  return sub_100F85F94(a1, qword_10171CCC0);
}

uint64_t sub_100F85F68(uint64_t a1)
{
  return sub_100F85F94(a1, qword_10171CCD8);
}

uint64_t sub_100F85F94(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  sub_100568B28(v3, a2);
  sub_100556B74(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100F86038(uint64_t a1)
{
  return sub_100A12ACC(a1, qword_10171CCF0);
}

uint64_t sub_100F8605C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100F86064(1, a1);
}

uint64_t sub_100F86064@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A358);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005057FC(&qword_10167A360);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  id v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100523288(&qword_10167A368, &qword_10167A360);
  static PredicateExpressions.build_Arg<A>(_:)();
  v15[15] = a1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a2[3] = sub_1005057FC(&qword_10167A370);
  a2[4] = sub_1006A14B4();
  sub_1005767BC(a2);
  sub_100523288(&qword_10167A390, &qword_10167A358);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_100F862A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100F86064(0, a1);
}

uint64_t sub_100F862B0@<X0>(uint64_t *a1@<X8>)
{
  long long v38 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1, v2);
  double v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A2D8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10167A2E0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  id v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10167A2E8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  BOOL v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_1016896F0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v33 = v19;
  uint64_t v34 = v20;
  __chkstk_darwin(v19, v21);
  id v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100523288(&qword_10167A300, &qword_10167A2E0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_getKeyPath();
  sub_100523288(&qword_1016896F8, &qword_10167A2E8);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  uint64_t v41 = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = v37;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v37);
  uint64_t v27 = sub_1005057FC(&qword_101689700);
  uint64_t v28 = v38;
  v38[3] = v27;
  v28[4] = sub_100A142BC((unint64_t *)&qword_101689708, &qword_101689700, (void (*)(void))sub_10099C558);
  sub_1005767BC(v28);
  sub_100523288(&qword_101689718, &qword_1016896F0);
  sub_100523288(&qword_10167A350, &qword_10167A2D8);
  uint64_t v29 = v33;
  uint64_t v30 = v39;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v23, v29);
}

uint64_t sub_100F867BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1, v2);
  long long v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A2D8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v56 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.DonationTimeRange();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10167A2E0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167A2E8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10167A2F0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v44 = v22;
  uint64_t v45 = v23;
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_10167A2F8);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v48 = v27;
  uint64_t v49 = v28;
  __chkstk_darwin(v27, v29);
  uint64_t v43 = (char *)&v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100523288(&qword_10167A300, &qword_10167A2E0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  static Tips.DonationTimeRange.day.getter();
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  sub_1006A12E0();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  swift_getKeyPath();
  sub_100523288(&qword_10167A318, &qword_10167A2F0);
  uint64_t v32 = v43;
  uint64_t v31 = v44;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v31);
  uint64_t v57 = 1;
  uint64_t v33 = v50;
  static PredicateExpressions.build_Arg<A>(_:)();
  double v35 = v51;
  uint64_t v34 = v52;
  uint64_t v36 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v53);
  uint64_t v37 = sub_1005057FC(&qword_10167A320);
  long long v38 = v54;
  v54[3] = v37;
  v38[4] = sub_100A142BC((unint64_t *)&qword_10167A328, &qword_10167A320, (void (*)(void))sub_1006A141C);
  sub_1005767BC(v38);
  sub_100523288(&qword_10167A348, &qword_10167A2F8);
  sub_100523288(&qword_10167A350, &qword_10167A2D8);
  uint64_t v39 = v48;
  uint64_t v40 = v55;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v32, v39);
}

uint64_t sub_100F86E88()
{
  return sub_100F86FAC();
}

uint64_t sub_100F86EAC()
{
  return sub_100F870B8();
}

uint64_t sub_100F86EC4()
{
  return Image.init(_:bundle:)();
}

uint64_t sub_100F86EE8@<X0>(uint64_t *a1@<X8>)
{
  sub_1005C6EC4();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100F86F2C()
{
  unint64_t result = qword_1016A3688;
  if (!qword_1016A3688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3688);
  }
  return result;
}

unint64_t sub_100F86F80(uint64_t a1)
{
  unint64_t result = sub_1005C6EC4();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100F86FAC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  return Text.init<A>(_:)();
}

uint64_t sub_100F870B8()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  return Text.init<A>(_:)();
}

uint64_t sub_100F871A8()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  uint64_t v26 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v1);
  id v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10169FA10);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Tips.Rule();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101670220 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100556B74(v4, (uint64_t)qword_10171CC78);
  swift_beginAccess();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v15(v8, v14, v4);
  Tips.Rule.init<A>(_:_:)();
  v25[5] = static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v13, v9);
  if (qword_101670238 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100556B74(v4, (uint64_t)qword_10171CCC0);
  swift_beginAccess();
  v15(v8, v16, v4);
  Tips.Rule.init<A>(_:_:)();
  void v25[4] = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_101670228 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100556B74(v4, (uint64_t)qword_10171CC90);
  swift_beginAccess();
  v15(v8, v17, v4);
  Tips.Rule.init<A>(_:_:)();
  v25[3] = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_101670230 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100556B74(v4, (uint64_t)qword_10171CCA8);
  swift_beginAccess();
  v15(v8, v18, v4);
  Tips.Rule.init<A>(_:_:)();
  v25[2] = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_101670240 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100556B74(v4, (uint64_t)qword_10171CCD8);
  swift_beginAccess();
  v15(v8, v19, v4);
  Tips.Rule.init<A>(_:_:)();
  v25[1] = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_101670218 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100556B74(v0, (uint64_t)qword_10171CC60);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v21(v3, v20, v0);
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  Tips.Rule.init<A>(_:_:)();
  uint64_t v26 = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_101670248 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100556B74(v0, (uint64_t)qword_10171CCF0);
  v21(v3, v22, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

unint64_t sub_100F87A18(unint64_t a1)
{
  uint64_t v40 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v40, v3);
  uint64_t v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.upgrade;
  uint64_t v41 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v39 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v7 = v5;
  uint64_t v8 = sub_100209510(a1);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v43 = sub_100528BE4();
  *(void *)(inited + 64) = v43;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Registering version: %{public}@", 31, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  unint64_t result = sub_100F87FCC();
  unint64_t v14 = result;
  if (result > a1)
  {
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_10117D8C0;
    uint64_t v28 = sub_100209510(a1);
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    unint64_t v32 = v43;
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = v32;
    *(void *)(v27 + 32) = v29;
    *(void *)(v27 + 40) = v31;
    uint64_t v33 = sub_100209510(v14);
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;

    *(void *)(v27 + 96) = &type metadata for String;
    *(void *)(v27 + 104) = v32;
    *(void *)(v27 + 72) = v34;
    *(void *)(v27 + 80) = v36;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"registerVersion(_:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLDataStoreUpgradeController.swift", 101, 2, 57, (uint64_t)"Trying to register a new version (%{public}@) that's less than the current version (%{public}@)", 95, 2u, v27);
    sub_100586FD4(v27, (uint64_t)"Trying to register a new version (%{public}@) that's less than the current version (%{public}@)");
    sub_1005871AC(v27, (uint64_t)"registerVersion(_:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLDataStoreUpgradeController.swift", 101, 2, 57);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v37, v38);
    unint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (result < a1)
  {
    sub_100F880E0(*v1, result, a1);
    uint64_t v15 = (void *)static OS_os_log.upgrade;
    uint64_t v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = v39;
    id v17 = v15;
    uint64_t v18 = sub_100209510(a1);
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    unint64_t v22 = v43;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = v22;
    *(void *)(v16 + 32) = v19;
    *(void *)(v16 + 40) = v21;
    uint64_t v23 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Persisting new last seen version: %{public}@", 44, 2, v16);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v24 = (uint64_t)v42;
    uint64_t v25 = swift_storeEnumTagMultiPayload();
    __chkstk_darwin(v25, v26);
    OS_dispatch_queue.sync<A>(execute:)();
    return sub_100F883E0(v24);
  }
  return result;
}

uint64_t sub_100F87FCC()
{
  uint64_t v1 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v1, v1);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = *v0;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = v4;
  uint64_t v10 = v3;
  sub_1005057FC(&qword_101676CF0);
  OS_dispatch_queue.sync<A>(execute:)();
  if (v11[8]) {
    uint64_t v5 = &qword_101176F70;
  }
  else {
    uint64_t v5 = (uint64_t *)v11;
  }
  uint64_t v6 = *v5;
  sub_100F883E0((uint64_t)v3);
  return v6;
}

void sub_100F880E0(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (qword_10166FBB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.upgrade;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v7 = v5;
  uint64_t v8 = sub_100209510(a2);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v12 = sub_100528BE4();
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  uint64_t v13 = sub_100209510(a3);
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v12;
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 80) = v16;
  uint64_t v17 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Upgrading from version [%{public}@] to [%{public}@]", 51, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (a2 < 0x1000100000000) {
    sub_100C44B7C();
  }
  if (a2 < 0x2000400000001)
  {
    id v18 = (id)static OS_os_log.upgrade;
    uint64_t v19 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Running upgrade code for rdar://119152219", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

    __chkstk_darwin(v20, v21);
    OS_dispatch_queue.sync<A>(execute:)();
  }
  if (a2 < 0x3000000000001) {
    sub_100C4560C();
  }
}

void sub_100F883BC()
{
}

uint64_t sub_100F883E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100F8843C()
{
  sub_100C44FFC(*(void **)(v0 + 16));
}

uint64_t sub_100F88458@<X0>(uint64_t a1@<X8>)
{
  return sub_100C88174(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t destroy for CRLDataStoreUpgradeController(id *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
}

uint64_t initializeWithCopy for CRLDataStoreUpgradeController(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for CRLDataStoreUpgradeController(void **a1, void **a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 1);
  uint64_t v3 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  long long v6 = (uint64_t *)(a1 + 1);
  id v7 = v3;

  sub_10054BB2C(v6, v4);
  return a1;
}

uint64_t assignWithTake for CRLDataStoreUpgradeController(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for CRLDataStoreUpgradeController()
{
  return &type metadata for CRLDataStoreUpgradeController;
}

ValueMetadata *type metadata accessor for CRLDataStoreUpgrader()
{
  return &type metadata for CRLDataStoreUpgrader;
}

char *sub_100F88604(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v40 = a3;
  uint64_t v41 = a4;
  uint64_t v7 = type metadata accessor for CharacterSet();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = v4;
  uint64_t v38 = a2;
  long long v39 = v12;
  uint64_t v37 = a1;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v13 crl_stringByFixingBrokenSurrogatePairs];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  unint64_t v43 = v15;
  unint64_t v44 = v17;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespacesAndNewlines.getter();
  unint64_t v45 = sub_10052E310();
  unint64_t v18 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v11, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  while (1)
  {
    unint64_t v43 = v18;
    unint64_t v44 = v20;
    swift_bridgeObjectRetain();
    static CharacterSet.newlines.getter();
    unint64_t v22 = StringProtocol.rangeOfCharacter(from:options:range:)();
    unint64_t v24 = v23;
    char v26 = v25;
    v21(v11, v7);
    swift_bridgeObjectRelease();
    if (v26) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1006F72F0(v22, v24, 32, 0xE100000000000000, v18, v20);
    unint64_t v28 = v27;
    swift_bridgeObjectRelease_n();
    unint64_t v20 = v28;
  }
  uint64_t v29 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v29 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    swift_bridgeObjectRelease();
    id v30 = v39;
    uint64_t v31 = (unint64_t *)&v39[OBJC_IVAR____TtC8Freeform23CRLCommandSetBoardTitle_boardTitle];
    unint64_t *v31 = v18;
    v31[1] = v20;

    unint64_t v32 = (objc_class *)type metadata accessor for CRLCommandSetBoardTitle();
    v42.receiver = v30;
    v42.Class super_class = v32;
    uint64_t v33 = (char *)[v42 init];

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100651FA8();
    swift_allocError();
    uint64_t v34 = v38;
    *(void *)uint64_t v35 = v37;
    *(void *)(v35 + 8) = v34;
    *(unsigned char *)(v35 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v33 = v39;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for CRLCommandSetBoardTitle();
    swift_deallocPartialClassInstance();
  }
  return v33;
}

uint64_t sub_100F88920(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result = sub_10103405C(a1, (uint64_t)&off_10152A280);
  if (!v4)
  {
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform23CRLCommandSetBoardTitle_boardTitle);
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform23CRLCommandSetBoardTitle_boardTitle + 8);
    swift_bridgeObjectRetain();
    sub_100CFE010(v8, v9);
    swift_bridgeObjectRelease();
    return sub_101023724(a1, (uint64_t)&off_10152A280, a3);
  }
  return result;
}

uint64_t sub_100F889F8()
{
  return swift_bridgeObjectRelease();
}

id sub_100F88A0C()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLCommandSetBoardTitle();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommandSetBoardTitle()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLCodableImage()
{
  return &type metadata for CRLCodableImage;
}

uint64_t sub_100F88A88(void *a1, void *a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016A36D8);
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v7 = __chkstk_darwin(v4, v6).n128_u64[0];
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = [a2 UIImage:v7];
  uint64_t v11 = UIImagePNGRepresentation(v10);

  if (v11)
  {
    uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    sub_10050F848(a1, a1[3]);
    sub_100F8900C();
    dispatch thunk of Encoder.container<A>(keyedBy:)();
    v16[0] = v12;
    v16[1] = v14;
    sub_10060D344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    return sub_100510084(v12, v14);
  }
  else
  {
    sub_100F89060();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t sub_100F88C54()
{
  return 0x6567616D49676E70;
}

uint64_t sub_100F88C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6567616D49676E70 && a2 == 0xEC00000061746144)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100F88D24(uint64_t a1)
{
  unint64_t v2 = sub_100F8900C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100F88D60(uint64_t a1)
{
  unint64_t v2 = sub_100F8900C();

  return CodingKey.debugDescription.getter(a1, v2);
}

id sub_100F88D9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = sub_100F88DE4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100F88DC8(void *a1)
{
  return sub_100F88A88(a1, *v1);
}

id sub_100F88DE4(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016A36C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  char v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (id)a1[4];
  sub_10050F848(a1, a1[3]);
  sub_100F8900C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    sub_10060D184();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = v14[0];
    unint64_t v11 = v14[1];
    id v12 = objc_allocWithZone((Class)CRLImage);
    sub_100510D4C(v10, v11);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v8 = [v12 initWithData:isa];
    sub_100510084(v10, v11);

    if (v8)
    {
      sub_100510084(v10, v11);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
      return v8;
    }
    sub_100F89060();
    swift_allocError();
    swift_willThrow();
    sub_100510084(v10, v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v8;
}

unint64_t sub_100F8900C()
{
  unint64_t result = qword_1016A36C8;
  if (!qword_1016A36C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A36C8);
  }
  return result;
}

unint64_t sub_100F89060()
{
  unint64_t result = qword_1016A36D0;
  if (!qword_1016A36D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A36D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCodableImage.CRLCodableImageErrors()
{
  return &type metadata for CRLCodableImage.CRLCodableImageErrors;
}

unsigned char *_s8Freeform15CRLCodableImageV21CRLCodableImageErrorsOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100F89164);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCodableImage.CodingKeys()
{
  return &type metadata for CRLCodableImage.CodingKeys;
}

unint64_t sub_100F891A0()
{
  unint64_t result = qword_1016A36E0;
  if (!qword_1016A36E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A36E0);
  }
  return result;
}

unint64_t sub_100F891F8()
{
  unint64_t result = qword_1016A36E8;
  if (!qword_1016A36E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A36E8);
  }
  return result;
}

unint64_t sub_100F89250()
{
  unint64_t result = qword_1016A36F0;
  if (!qword_1016A36F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A36F0);
  }
  return result;
}

unint64_t sub_100F892A8()
{
  unint64_t result = qword_1016A36F8;
  if (!qword_1016A36F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A36F8);
  }
  return result;
}

double *sub_100F892FC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1006BB504(0, v1, 0);
    uint64_t v3 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = static String._fromSubstring(_:)();
      uint64_t v6 = v5;
      swift_bridgeObjectRelease();
      double v8 = _swiftEmptyArrayStorage[2];
      double v7 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v8 >= *(void *)&v7 >> 1) {
        sub_1006BB504(*(void *)&v7 > 1uLL, *(void *)&v8 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * *(void *)&v8];
      *((void *)v9 + 4) = v4;
      *((void *)v9 + 5) = v6;
      v3 += 32;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100F893FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v7 = *(os_unfair_lock_s **)(a3 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  if (*(void *)(a4 + 16) && (unint64_t v8 = sub_100955F50(a1, a2), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(a4 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  os_unfair_lock_unlock(v7);
  swift_release();
  return v10;
}

uint64_t sub_100F89498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(os_unfair_lock_s **)(a2 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_10095647C(a1), (v7 & 1) != 0))
  {
    unint64_t v8 = (id *)(*(void *)(a3 + 56) + 24 * v6);
    uint64_t v9 = (uint64_t)*v8;
    sub_100988278(*v8, v8[1], v8[2]);
  }
  else
  {
    uint64_t v9 = 1;
  }
  os_unfair_lock_unlock(v5);
  swift_release();
  return v9;
}

uint64_t sub_100F89548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void sub_100F89570(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  char v7 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  id v8 = a2;
  v7(a2, a3, a4);
}

uint64_t sub_100F89600(uint64_t a1, uint64_t a2)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v2 numberFromString:v5];

  if (!v6) {
    return 0;
  }
  [v6 doubleValue];
  uint64_t v8 = v7;

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = (void *)sub_100F8A7DC(KeyPath, v8 >= 0);
  swift_release();
  if (!v10) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_10167A3E8);
  sub_100F8A40C();
  sub_10052E310();
  uint64_t v11 = _NSRange.init<A, B>(_:in:)();
  uint64_t v13 = v12;
  v22[0] = 0;
  v22[1] = 0;
  char v23 = 1;
  NSString v14 = String._bridgeToObjectiveC()();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v22;
  uint64_t v15[3] = a1;
  v15[4] = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100F8FD10;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_100F8FCFC;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100F89570;
  void aBlock[3] = &unk_101535060;
  unint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v10 enumerateMatchesInString:v14 options:0 range:v11 usingBlock:v13, v17];

  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v20 = v22[0];
    swift_release();
    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_100F898D8(uint64_t a1, unint64_t a2)
{
  uint64_t v29 = 0;
  NSString v5 = String._bridgeToObjectiveC()();
  unsigned __int8 v6 = [v2 getValueFromString:v5 rangePtr:0 valuePtr:&v29];

  if ((v6 & 1) == 0) {
    return 0;
  }
  uint64_t v7 = v29;
  id v8 = v2;
  uint64_t v9 = sub_100F8D504(v8, v7 >= 0);
  uint64_t v11 = v10;
  uint64_t v13 = v12;

  if (!v9) {
    return 0;
  }
  id v14 = v9;
  id v15 = v11;
  id v16 = v13;
  sub_10057ADF4(v9, v11, v13);

  uint64_t v17 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v17 = a1;
  }
  uint64_t v18 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v18 = 11;
  }
  uint64_t v29 = 15;
  uint64_t v30 = v18 | (v17 << 16);
  uint64_t v35 = a1;
  unint64_t v36 = a2;
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_10167A3E8);
  sub_100F8A40C();
  sub_10052E310();
  uint64_t v19 = _NSRange.init<A, B>(_:in:)();
  uint64_t v21 = v20;
  uint64_t v35 = 0;
  unint64_t v36 = 0;
  char v37 = 1;
  NSString v22 = String._bridgeToObjectiveC()();
  char v23 = (void *)swift_allocObject();
  void v23[2] = &v35;
  v23[3] = a1;
  v23[4] = a2;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_100F8D960;
  *(void *)(v24 + 24) = v23;
  uint64_t v33 = sub_100F8D97C;
  uint64_t v34 = v24;
  uint64_t v29 = (uint64_t)_NSConcreteStackBlock;
  uint64_t v30 = *(void *)"";
  uint64_t v31 = sub_100F89570;
  unint64_t v32 = &unk_101534F70;
  char v25 = _Block_copy(&v29);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v14 enumerateMatchesInString:v22 options:0 range:v19 usingBlock:v25];

  _Block_release(v25);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  uint64_t v27 = v35;
  swift_release();
  return v27;
}

NSNumber sub_100F89BF0()
{
  sub_100752EE0();
  result.super.super.Class isa = NSNumber.init(floatLiteral:)(1.0e-100).super.super.isa;
  qword_1016A3700 = (uint64_t)result.super.super.isa;
  return result;
}

id sub_100F89C94()
{
  id v1 = [v0 zeroSymbol];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v5 = 0;
  }
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117DF40;
  id v7 = [v0 positiveFormat];
  if (!v7)
  {
    id result = (id)swift_bridgeObjectRelease();
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  id v8 = v7;
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v12 = sub_100528BE4();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  *(void *)(v6 + 96) = &type metadata for String;
  *(void *)(v6 + 104) = v12;
  if (!v5)
  {
    if (qword_101670250 != -1) {
      swift_once();
    }
    id v13 = [v0 stringForObjectValue:qword_1016A3700];
    if (v13)
    {
      id v14 = v13;
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v5 = v15;
    }
    else
    {
      uint64_t v3 = 0;
      unint64_t v5 = 0xE000000000000000;
    }
  }
  *(void *)(v6 + 72) = v3;
  *(void *)(v6 + 80) = v5;
  id result = [v0 negativeFormat];
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v17 = result;
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(v6 + 136) = &type metadata for String;
  *(void *)(v6 + 144) = v12;
  *(void *)(v6 + 112) = v18;
  *(void *)(v6 + 120) = v20;

  return (id)String.init(format:_:)();
}

void sub_100F89ED8()
{
  id v1 = v0;
  sub_10052E310();
  uint64_t v2 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_100F892FC(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = *((void *)v3 + 2);
  switch(v4)
  {
    case 3:
      swift_bridgeObjectRetain();
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setPositiveFormat:v11];

      if (*((void *)v3 + 2) < 3uLL)
      {
        __break(1u);
      }
      else
      {
        swift_bridgeObjectRetain();
        NSString v12 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v1 setNegativeFormat:v12];

        if (*((void *)v3 + 2) >= 2uLL)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          NSString v10 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v1 setZeroSymbol:v10];
LABEL_12:

          return;
        }
      }
      __break(1u);
LABEL_16:
      __break(1u);
      return;
    case 2:
      swift_bridgeObjectRetain();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setPositiveFormat:v13];

      if (*((void *)v3 + 2) >= 2uLL)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        NSString v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v1 setNegativeFormat:v10];
        goto LABEL_12;
      }
      goto LABEL_16;
    case 1:
      swift_bridgeObjectRetain();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setPositiveFormat:v5];

      uint64_t v6 = *((void *)v3 + 4);
      id v7 = (void *)*((void *)v3 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8._countAndFlagsBits = v6;
      v8._object = v7;
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setNegativeFormat:v9];

      [v1 setZeroSymbol:0];
      if (qword_101670250 != -1) {
        swift_once();
      }
      NSString v10 = [v1 stringForObjectValue:qword_1016A3700];
      [v1 setZeroSymbol:v10];
      goto LABEL_12;
  }
  swift_bridgeObjectRelease();
}

id sub_100F8A1FC()
{
  id v0 = objc_allocWithZone((Class)NSRegularExpression);
  id result = sub_100F8D008(0xD000000000000012, 0x800000010129A6C0, 0);
  qword_1016A3708 = (uint64_t)result;
  return result;
}

void sub_100F8A288(void *a1, uint64_t a2, unsigned char *a3, BOOL *a4, void *a5)
{
  if (a1)
  {
    id v8 = a1;
    id v9 = [v8 rangeAtIndex:1];
    [v8 rangeAtIndex:2];
    uint64_t v11 = v10;
    uint64_t v12 = NSNotFound.getter();

    *a4 = v9 != (id)v12;
    *a5 = v11;
  }
  *a3 = 1;
}

uint64_t sub_100F8A338(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);
  if (v10)
  {
    uint64_t v11 = NSNotFound.getter();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005057FC(&qword_10167A3E8);
    sub_100F8A40C();
    sub_10052E310();
    uint64_t v11 = _NSRange.init<A, B>(_:in:)();
  }
  return v11;
}

unint64_t sub_100F8A40C()
{
  unint64_t result = qword_10167A3F0;
  if (!qword_10167A3F0)
  {
    sub_100522D34(&qword_10167A3E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167A3F0);
  }
  return result;
}

uint64_t sub_100F8A468(uint64_t a1)
{
  if ([v1 copyFormatterPropertyForKey:a1])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10051B3EC((uint64_t)v5, (uint64_t)v6, &qword_101672BF0);
  if (!v7)
  {
    sub_100522F00((uint64_t)v6, &qword_101672BF0);
    return 2;
  }
  sub_100752EE0();
  if ((swift_dynamicCast() & 1) == 0) {
    return 2;
  }
  id v2 = [v4 BOOLValue];

  return (uint64_t)v2;
}

id sub_100F8A544(uint64_t a1)
{
  if ([v1 copyFormatterPropertyForKey:a1])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10051B3EC((uint64_t)v5, (uint64_t)v6, &qword_101672BF0);
  if (!v7)
  {
    sub_100522F00((uint64_t)v6, &qword_101672BF0);
    return 0;
  }
  sub_100752EE0();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v2 = [v4 integerValue];

  return v2;
}

uint64_t sub_100F8A628(uint64_t a1)
{
  if ([v1 copyFormatterPropertyForKey:a1])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_10051B3EC((uint64_t)v4, (uint64_t)v5, &qword_101672BF0);
  if (v6)
  {
    if (swift_dynamicCast()) {
      return v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100522F00((uint64_t)v5, &qword_101672BF0);
    return 0;
  }
}

void sub_100F8A6F0(uint64_t a1)
{
  if ([v1 copyFormatterPropertyForKey:a1])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_10051B3EC((uint64_t)v4, (uint64_t)v5, &qword_101672BF0);
  if (v6)
  {
    sub_100752EE0();
    if (swift_dynamicCast())
    {
      unint64_t v2 = (unint64_t)[v3 integerValue];

      if ((v2 & 0x8000000000000000) != 0) {
        __break(1u);
      }
    }
  }
  else
  {
    sub_100522F00((uint64_t)v5, &qword_101672BF0);
  }
}

uint64_t sub_100F8A7DC(uint64_t a1, char a2)
{
  id v4 = [v2 crl_numberFormatterForAnalysis];
  NSString v5 = sub_100F8D0E4(v4, a2);
  uint64_t v7 = v6;
  id v9 = v8;

  if (!v5) {
    return 0;
  }
  id v10 = v5;
  id v11 = v7;
  id v12 = v9;
  swift_getAtKeyPath();
  sub_10057ADF4(v5, v7, v9);

  return v14;
}

void sub_100F8A8B0(void *a1, uint64_t a2, unsigned char *a3, uint64_t a4)
{
  if (a1)
  {
    id v6 = a1;
    if ((uint64_t)[v6 numberOfRanges] < 1)
    {
    }
    else
    {
      [v6 rangeAtIndex:1];
      uint64_t v7 = Range<>.init(_:in:)();
      uint64_t v9 = v8;
      char v11 = v10;

      *(void *)a4 = v7;
      *(void *)(a4 + 8) = v9;
      *(unsigned char *)(a4 + 16) = v11 & 1;
    }
  }
  *a3 = 1;
}

uint64_t sub_100F8A958@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v31 - v17;
  Hasher.init()();
  Hasher._combine(_:)(1uLL);
  v31[1] = a2;
  if (a1)
  {
    id v19 = [v2 positiveFormat];
    if (v19)
    {
LABEL_3:
      uint64_t v20 = v19;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      goto LABEL_6;
    }
  }
  else
  {
    id v19 = [v2 negativeFormat];
    if (v19) {
      goto LABEL_3;
    }
  }
  *(void *)&long long v37 = [v2 numberStyle];
  dispatch thunk of CustomStringConvertible.description.getter();
LABEL_6:
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(a1 & 1);
  BOOL v21 = ([v2 alwaysShowsDecimalSeparator] & 1) != 0
     || (uint64_t)[v2 minimumFractionDigits] > 0;
  Swift::UInt8 v22 = (uint64_t)[v3 maximumFractionDigits] > 0 || v21;
  Hasher._combine(_:)(v22);
  id v23 = [v3 currencyCode];
  if (v23)
  {
    uint64_t v24 = v23;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  id v25 = [v3 currencySymbol];
  if (v25)
  {
    char v26 = v25;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  id v27 = [v3 locale];
  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_22;
  }
  unint64_t v28 = v27;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v29(v9, v14, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_22:
    static Locale.current.getter();
    sub_100522F00((uint64_t)v9, &qword_1016741B8);
    goto LABEL_23;
  }
  v29(v18, v9, v10);
LABEL_23:
  Locale.identifier.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v39 = v34;
  long long v40 = v35;
  uint64_t v41 = v36;
  long long v37 = v32;
  long long v38 = v33;
  v31[2] = Hasher.finalize()();
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100F8ADEC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  v27[1] = a2;
  uint64_t v5 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v27 - v11;
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init()();
  Hasher._combine(_:)(2uLL);
  id v18 = [v2 format];
  if (v18 || (id v18 = [v2 createStringWithValue:100.0]) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  String.hash(into:)();
  swift_bridgeObjectRelease();
  id v19 = [v2 currencyCode];
  if (v19)
  {
    uint64_t v20 = v19;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  id v21 = [v3 currencySymbol];
  if (v21)
  {
    Swift::UInt8 v22 = v21;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(a1 & 1);
  id v23 = [v3 locale];
  if (v23)
  {
    uint64_t v24 = v23;
    id v25 = [v23 locale];

    if (v25)
    {
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v8, 1, 1, v13);
    }
    sub_10051B3EC((uint64_t)v8, (uint64_t)v12, &qword_1016741B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v12, v13);
      goto LABEL_18;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  static Locale.current.getter();
  sub_100522F00((uint64_t)v12, &qword_1016741B8);
LABEL_18:
  Locale.identifier.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v35 = v30;
  long long v36 = v31;
  uint64_t v37 = v32;
  long long v33 = v28;
  long long v34 = v29;
  v27[2] = Hasher.finalize()();
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_100F8B238()
{
  char v1 = *((unsigned char *)v0 + 216);
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v2 = swift_allocObject();
  if (v1)
  {
    *(_OWORD *)(v2 + 16) = xmmword_10117D8C0;
    uint64_t v7 = *((void *)v0 + 23);
    uint64_t v6 = *((void *)v0 + 24);
    *(void *)(v2 + 56) = &type metadata for String;
    unint64_t v8 = sub_100528BE4();
    *(void *)(v2 + 64) = v8;
    *(void *)(v2 + 32) = v7;
    *(void *)(v2 + 40) = v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100F8C0EC();
    *(void *)(v2 + 96) = &type metadata for String;
    *(void *)(v2 + 104) = v8;
    *(void *)(v2 + 72) = v9;
    *(void *)(v2 + 80) = v10;
  }
  else
  {
    *(_OWORD *)(v2 + 16) = xmmword_10117E810;
    uint64_t v3 = sub_100F8C0EC();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_100528BE4();
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
  }
  uint64_t v11 = String.init(format:arguments:)();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v0 + 5);
  uint64_t v14 = *((void *)v0 + 6);
  if (!v15 && (unint64_t v16 = 0xE000000000000000, v14 == 0xE000000000000000)
    || (unint64_t v16 = 0xE000000000000000, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    uint64_t v17 = 0;
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10117E810;
    *(void *)(v18 + 56) = &type metadata for String;
    *(void *)(v18 + 64) = sub_100528BE4();
    *(void *)(v18 + 32) = v15;
    *(void *)(v18 + 40) = v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = String.init(format:arguments:)();
    unint64_t v16 = v19;
    swift_bridgeObjectRelease();
  }
  switch(*((void *)v0 + 4))
  {
    case 0:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_10117E800;
      *(void *)(v20 + 56) = &type metadata for String;
      unint64_t v21 = sub_100528BE4();
      long long v22 = v0[1];
      long long v29 = *v0;
      *(_OWORD *)(v20 + 72) = v29;
      *(void *)(v20 + 64) = v21;
      *(void *)(v20 + 32) = v17;
      *(void *)(v20 + 40) = v16;
      *(void *)(v20 + 96) = &type metadata for String;
      *(void *)(v20 + 104) = v21;
      goto LABEL_13;
    case 1:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_10117E800;
      long long v29 = *v0;
      *(void *)(v20 + 56) = &type metadata for String;
      unint64_t v21 = sub_100528BE4();
      long long v22 = v0[1];
      *(_OWORD *)(v20 + 32) = *v0;
      *(void *)(v20 + 96) = &type metadata for String;
      *(void *)(v20 + 104) = v21;
      *(void *)(v20 + 64) = v21;
      *(void *)(v20 + 72) = v17;
      *(void *)(v20 + 80) = v16;
LABEL_13:
      *(void *)(v20 + 136) = &type metadata for String;
      *(void *)(v20 + 144) = v21;
      *(void *)(v20 + 112) = v11;
      *(void *)(v20 + 120) = v13;
      goto LABEL_15;
    case 2:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_10117E800;
      long long v29 = *v0;
      *(void *)(v20 + 56) = &type metadata for String;
      unint64_t v21 = sub_100528BE4();
      long long v22 = v0[1];
      *(_OWORD *)(v20 + 32) = *v0;
      *(void *)(v20 + 96) = &type metadata for String;
      *(void *)(v20 + 104) = v21;
      *(void *)(v20 + 64) = v21;
      *(void *)(v20 + 72) = v11;
      *(void *)(v20 + 80) = v13;
      *(void *)(v20 + 136) = &type metadata for String;
      *(void *)(v20 + 144) = v21;
      *(void *)(v20 + 112) = v17;
      *(void *)(v20 + 120) = v16;
LABEL_15:
      long long v28 = v22;
      *(void *)(v20 + 176) = &type metadata for String;
      *(void *)(v20 + 184) = v21;
      *(_OWORD *)(v20 + 152) = v22;
      goto LABEL_17;
    case 3:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_10117E800;
      long long v29 = *v0;
      *(void *)(v24 + 56) = &type metadata for String;
      unint64_t v25 = sub_100528BE4();
      long long v26 = v0[1];
      *(_OWORD *)(v24 + 32) = *v0;
      *(void *)(v24 + 96) = &type metadata for String;
      *(void *)(v24 + 104) = v25;
      *(void *)(v24 + 64) = v25;
      *(void *)(v24 + 72) = v11;
      *(void *)(v24 + 80) = v13;
      long long v28 = v26;
      *(void *)(v24 + 136) = &type metadata for String;
      *(void *)(v24 + 144) = v25;
      *(_OWORD *)(v24 + 112) = v26;
      *(void *)(v24 + 176) = &type metadata for String;
      *(void *)(v24 + 184) = v25;
      *(void *)(v24 + 152) = v17;
      *(void *)(v24 + 160) = v16;
LABEL_17:
      sub_1007D42E0((uint64_t)&v29);
      sub_1007D42E0((uint64_t)&v28);
      uint64_t v23 = String.init(format:arguments:)();
      swift_bridgeObjectRelease();
      break;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = 0x64696C61766E697DLL;
      break;
  }
  return v23;
}

uint64_t sub_100F8B630()
{
  uint64_t v1 = sub_100F8C0EC();
  uint64_t v3 = v2;
  uint64_t v4 = sub_100F8C3D4();
  uint64_t v6 = v5;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10117D8C0;
  *(void *)(v7 + 56) = &type metadata for String;
  unint64_t v8 = sub_100528BE4();
  *(void *)(v7 + 32) = v1;
  *(void *)(v7 + 40) = v3;
  *(void *)(v7 + 96) = &type metadata for String;
  *(void *)(v7 + 104) = v8;
  *(void *)(v7 + 64) = v8;
  *(void *)(v7 + 72) = v4;
  *(void *)(v7 + 80) = v6;
  uint64_t v9 = String.init(format:arguments:)();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 216))
  {
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10117D8C0;
    uint64_t v15 = *(void *)(v0 + 184);
    uint64_t v14 = *(void *)(v0 + 192);
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = v8;
    *(void *)(v13 + 32) = v15;
    *(void *)(v13 + 40) = v14;
    *(void *)(v13 + 96) = &type metadata for String;
    *(void *)(v13 + 104) = v8;
    *(void *)(v13 + 72) = v9;
    *(void *)(v13 + 80) = v11;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10117E810;
    *(void *)(v12 + 56) = &type metadata for String;
    *(void *)(v12 + 64) = v8;
    *(void *)(v12 + 32) = v9;
    *(void *)(v12 + 40) = v11;
  }
  uint64_t v16 = String.init(format:arguments:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_100F8B7BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 == 0xE000000000000000;
  }
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10117E810;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_100528BE4();
    *(void *)(v10 + 32) = v8;
    *(void *)(v10 + 40) = v7;
    swift_bridgeObjectRetain();
    uint64_t v31 = String.init(format:arguments:)();
    unint64_t v32 = v11;
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v1[1];
  uint64_t v33 = *v1;
  uint64_t v34 = v12;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespaces.getter();
  sub_10052E310();
  uint64_t v13 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v17 = v1[3];
  uint64_t v33 = v1[2];
  uint64_t v34 = v17;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespaces.getter();
  uint64_t v18 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v20 = v19;
  v16(v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v21 = v1[4];
  if ((unint64_t)(v21 - 1) < 2)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10117DF40;
    *(void *)(v22 + 56) = &type metadata for String;
    unint64_t v23 = sub_100528BE4();
    *(void *)(v22 + 32) = v13;
    *(void *)(v22 + 40) = v15;
    *(void *)(v22 + 96) = &type metadata for String;
    *(void *)(v22 + 104) = v23;
    uint64_t v25 = v31;
    *(void *)(v22 + 64) = v23;
    *(void *)(v22 + 72) = v25;
    *(void *)(v22 + 80) = v32;
  }
  else
  {
    if (v21 == 3)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_10117DF40;
      *(void *)(v26 + 56) = &type metadata for String;
      unint64_t v27 = sub_100528BE4();
      *(void *)(v26 + 32) = v13;
      *(void *)(v26 + 40) = v15;
      *(void *)(v26 + 96) = &type metadata for String;
      *(void *)(v26 + 104) = v27;
      *(void *)(v26 + 64) = v27;
      *(void *)(v26 + 72) = v18;
      *(void *)(v26 + 80) = v20;
      *(void *)(v26 + 136) = &type metadata for String;
      *(void *)(v26 + 144) = v27;
      unint64_t v28 = v32;
      *(void *)(v26 + 112) = v31;
      *(void *)(v26 + 120) = v28;
      goto LABEL_15;
    }
    if (v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0x64696C61766E697DLL;
    }
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10117DF40;
    *(void *)(v22 + 56) = &type metadata for String;
    unint64_t v23 = sub_100528BE4();
    unint64_t v24 = v32;
    *(void *)(v22 + 32) = v31;
    *(void *)(v22 + 40) = v24;
    *(void *)(v22 + 96) = &type metadata for String;
    *(void *)(v22 + 104) = v23;
    *(void *)(v22 + 64) = v23;
    *(void *)(v22 + 72) = v13;
    *(void *)(v22 + 80) = v15;
  }
  *(void *)(v22 + 136) = &type metadata for String;
  *(void *)(v22 + 144) = v23;
  *(void *)(v22 + 112) = v18;
  *(void *)(v22 + 120) = v20;
LABEL_15:
  uint64_t v29 = String.init(format:arguments:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_100F8BB40(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  do
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        _StringObject.sharedUTF8.getter();
      }
      _decodeScalar(_:startingAt:)();
    }
    uint64_t v10 = v9;
    if (qword_101670268 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for CharacterSet();
    sub_100556B74(v11, (uint64_t)qword_1016A3720);
    if (CharacterSet.contains(_:)())
    {
      v6._countAndFlagsBits = static String._uncheckedFromUTF8(_:)();
      String.append(_:)(v6);
      swift_bridgeObjectRelease();
      uint64_t v7 = 92;
      unint64_t v8 = 0xE100000000000000;
    }
    else
    {
      uint64_t v7 = static String._uncheckedFromUTF8(_:)();
    }
    String.append(_:)(*(Swift::String *)&v7);
    v5 += v10;
    swift_bridgeObjectRelease();
  }
  while (v5 < v3);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100F8BE38(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (!a1 && a2 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
LABEL_28:
    swift_bridgeObjectRetain();
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0) {
      uint64_t v4 = HIBYTE(a2) & 0xF;
    }
    else {
      uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = 0;
      while (1)
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
          uint64_t v8 = v7;
          goto LABEL_18;
        }
        if ((a2 & 0x2000000000000000) == 0) {
          break;
        }
        v11[0] = v3;
        v11[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        if ((*((char *)v11 + v5) & 0x80000000) == 0) {
          goto LABEL_17;
        }
        switch(__clz(*((unsigned __int8 *)v11 + v5) ^ 0xFF))
        {
          case 0x1Au:
LABEL_24:
            uint64_t v8 = 2;
            break;
          case 0x1Bu:
LABEL_25:
            uint64_t v8 = 3;
            break;
          case 0x1Cu:
LABEL_26:
            uint64_t v8 = 4;
            break;
          default:
            goto LABEL_17;
        }
LABEL_18:
        if (qword_101670270 != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for CharacterSet();
        sub_100556B74(v9, (uint64_t)qword_1016A3738);
        if ((CharacterSet.contains(_:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
        v5 += v8;
        if (v5 >= v4)
        {
          swift_bridgeObjectRelease();
          return 29532;
        }
      }
      uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((v3 & 0x1000000000000000) == 0) {
        uint64_t v6 = _StringObject.sharedUTF8.getter();
      }
      if (*(char *)(v6 + v5) < 0)
      {
        switch(__clz(*(unsigned __int8 *)(v6 + v5) ^ 0xFF))
        {
          case 0x1Au:
            goto LABEL_24;
          case 0x1Bu:
            goto LABEL_25;
          case 0x1Cu:
            goto LABEL_26;
          default:
            break;
        }
      }
LABEL_17:
      uint64_t v8 = 1;
      goto LABEL_18;
    }
    return 29532;
  }
  return v3;
}

uint64_t sub_100F8C0EC()
{
  uint64_t v1 = sub_100F8C5A8(*(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 128);
  if ((*(unsigned char *)(v0 + 112) & 1) != 0 || v4 > 0 || v5 > 0)
  {
    uint64_t v6 = sub_100F8E4CC(v4, v5);
    uint64_t v8 = v7;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10117D8C0;
    uint64_t v10 = *(void *)(v0 + 200);
    uint64_t v11 = *(void *)(v0 + 208);
    *(void *)(v9 + 56) = &type metadata for String;
    unint64_t v12 = sub_100528BE4();
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v11;
    *(void *)(v9 + 96) = &type metadata for String;
    *(void *)(v9 + 104) = v12;
    *(void *)(v9 + 64) = v12;
    *(void *)(v9 + 72) = v6;
    *(void *)(v9 + 80) = v8;
    swift_bridgeObjectRetain();
    uint64_t v13 = String.init(format:arguments:)();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v15 = 0xE000000000000000;
  }
  uint64_t v16 = *(void *)(v0 + 136);
  uint64_t v17 = &unk_10117D000;
  if (v16 < 1)
  {
    uint64_t v28 = 0;
    unint64_t v30 = 0xE000000000000000;
  }
  else
  {
    char v35 = *(unsigned char *)(v0 + 144);
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10117DF40;
    uint64_t v19 = v13;
    unint64_t v20 = v15;
    uint64_t v21 = v1;
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v23 = *(void *)(v0 + 160);
    *(void *)(v18 + 56) = &type metadata for String;
    uint64_t v24 = v3;
    unint64_t v25 = sub_100528BE4();
    *(void *)(v18 + 64) = v25;
    *(void *)(v18 + 32) = v22;
    *(void *)(v18 + 40) = v23;
    uint64_t v13 = v19;
    uint64_t v1 = v21;
    unint64_t v15 = v20;
    uint64_t v17 = (_OWORD *)&unk_10117D000;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_100F8CDC0(v35);
    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v25;
    uint64_t v3 = v24;
    *(void *)(v18 + 72) = v26;
    *(void *)(v18 + 80) = v27;
    *(void *)(v18 + 136) = &type metadata for Int;
    *(void *)(v18 + 144) = &protocol witness table for Int;
    *(void *)(v18 + 112) = v16;
    uint64_t v28 = String.init(format:arguments:)();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
  }
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = v17[244];
  *(void *)(v31 + 56) = &type metadata for String;
  unint64_t v32 = sub_100528BE4();
  *(void *)(v31 + 32) = v1;
  *(void *)(v31 + 40) = v3;
  *(void *)(v31 + 96) = &type metadata for String;
  *(void *)(v31 + 104) = v32;
  *(void *)(v31 + 64) = v32;
  *(void *)(v31 + 72) = v13;
  *(void *)(v31 + 80) = v15;
  *(void *)(v31 + 136) = &type metadata for String;
  *(void *)(v31 + 144) = v32;
  *(void *)(v31 + 112) = v28;
  *(void *)(v31 + 120) = v30;
  uint64_t v33 = String.init(format:arguments:)();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_100F8C3D4()
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10117D8C0;
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  *(void *)(v1 + 56) = &type metadata for String;
  unint64_t v4 = sub_100528BE4();
  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 96) = &type metadata for Int;
  *(void *)(v1 + 104) = &protocol witness table for Int;
  *(void *)(v1 + 64) = v4;
  *(void *)(v1 + 72) = 0;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init(format:arguments:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
  *(void *)(v8 + 56) = &type metadata for Int;
  *(void *)(v8 + 64) = &protocol witness table for Int;
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 96) = &type metadata for Int;
  *(void *)(v8 + 104) = &protocol witness table for Int;
  *(void *)(v8 + 72) = 64;
  uint64_t v9 = String.init(format:arguments:)();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117E800;
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = v4;
  *(void *)(v12 + 32) = v5;
  *(void *)(v12 + 40) = v7;
  uint64_t v14 = v0[25];
  uint64_t v13 = v0[26];
  *(void *)(v12 + 96) = &type metadata for String;
  *(void *)(v12 + 104) = v4;
  *(void *)(v12 + 72) = v14;
  *(void *)(v12 + 80) = v13;
  *(void *)(v12 + 136) = &type metadata for String;
  *(void *)(v12 + 144) = v4;
  *(void *)(v12 + 112) = v14;
  *(void *)(v12 + 120) = v13;
  *(void *)(v12 + 176) = &type metadata for String;
  *(void *)(v12 + 184) = v4;
  *(void *)(v12 + 152) = v9;
  *(void *)(v12 + 160) = v11;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = String.init(format:arguments:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100F8C5A8(uint64_t result, uint64_t a2, int64_t a3, uint64_t a4, unint64_t a5)
{
  if ((result & 1) == 0)
  {
    if (a4 >= 1 && (a5 & 0x8000000000000000) == 0)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_10117D8C0;
      uint64_t v23 = *(void *)(v5 + 64);
      uint64_t v22 = *(void *)(v5 + 72);
      *(void *)(v21 + 56) = &type metadata for String;
      unint64_t v24 = sub_100528BE4();
      *(void *)(v21 + 32) = v23;
      *(void *)(v21 + 40) = v22;
      *(void *)(v21 + 96) = &type metadata for Int;
      *(void *)(v21 + 104) = &protocol witness table for Int;
      *(void *)(v21 + 64) = v24;
      *(void *)(v21 + 72) = a5;
      swift_bridgeObjectRetain();
      uint64_t v20 = String.init(format:arguments:)();
      goto LABEL_13;
    }
    goto LABEL_17;
  }
  if (a2 < 1 || a3 < 1) {
    goto LABEL_18;
  }
  uint64_t v9 = a4 - 1;
  if (a4 < 1 || (a5 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if ((unint64_t)a4 >= 2 && a4 >= a5)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    unint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_10117D8C0;
    BOOL v10 = __OFADD__(a2, v9);
    uint64_t v11 = a2 + v9;
    if (!v10)
    {
      uint64_t v12 = (void *)result;
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10117E810;
      *(void *)(v13 + 56) = &type metadata for Int;
      *(void *)(v13 + 64) = &protocol witness table for Int;
      *(void *)(v13 + 32) = v11;
      uint64_t v14 = String.init(format:arguments:)();
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      v12[7] = &type metadata for String;
      unint64_t v17 = sub_100528BE4();
      v12[8] = v17;
      v12[4] = v14;
      v12[5] = v16;
      uint64_t v18 = sub_100F8C808(a2, a3, a5);
      v12[12] = &type metadata for String;
      v12[13] = v17;
      v12[9] = v18;
      v12[10] = v19;
      uint64_t v20 = String.init(format:arguments:)();
LABEL_13:
      swift_bridgeObjectRelease();
      return v20;
    }
    goto LABEL_19;
  }

  return sub_100F8C808(a2, a3, a5);
}

uint64_t sub_100F8C808(uint64_t result, unint64_t a2, unint64_t a3)
{
  if (result < 1 || (uint64_t)a2 < 1 || (a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = result;
    if (a3 == result)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_10117D8C0;
      uint64_t v8 = sub_100F8CC40(a2, 0);
      uint64_t v10 = v9;
      *(void *)(v7 + 56) = &type metadata for String;
      unint64_t v11 = sub_100528BE4();
      *(void *)(v7 + 32) = v8;
      *(void *)(v7 + 40) = v10;
      *(void *)(v7 + 96) = &type metadata for Int;
      *(void *)(v7 + 104) = &protocol witness table for Int;
      *(void *)(v7 + 64) = v11;
      *(void *)(v7 + 72) = v6;
    }
    else
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      if (a3 >= v6)
      {
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_10117E810;
        *(void *)(v17 + 56) = &type metadata for Int;
        *(void *)(v17 + 64) = &protocol witness table for Int;
        *(void *)(v17 + 32) = v6;
        uint64_t v18 = String.init(format:arguments:)();
        objc_super v42 = v19;
        uint64_t v43 = v18;
        swift_bridgeObjectRelease();
        unint64_t v20 = (a3 - v6) & ~((uint64_t)(a3 - v6) >> 63);
        unint64_t v21 = v20 / a2;
        unint64_t v22 = v20 % a2;
        uint64_t v41 = sub_100F8CC40(a2, v20 / a2 + 1);
        uint64_t v24 = v23;
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_10117DF40;
        *(void *)(v25 + 56) = &type metadata for Int;
        *(void *)(v25 + 64) = &protocol witness table for Int;
        *(void *)(v25 + 32) = v22;
        *(void *)(v25 + 96) = &type metadata for Int;
        *(void *)(v25 + 104) = &protocol witness table for Int;
        *(void *)(v25 + 72) = a2;
        uint64_t v27 = *(void *)(v3 + 64);
        uint64_t v26 = *(void *)(v3 + 72);
        *(void *)(v25 + 136) = &type metadata for String;
        unint64_t v28 = sub_100528BE4();
        *(void *)(v25 + 144) = v28;
        *(void *)(v25 + 112) = v27;
        *(void *)(v25 + 120) = v26;
        swift_bridgeObjectRetain();
        uint64_t v40 = String.init(format:arguments:)();
        uint64_t v30 = v29;
        swift_bridgeObjectRelease();
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_10117DF40;
        *(void *)(v31 + 56) = &type metadata for Int;
        *(void *)(v31 + 64) = &protocol witness table for Int;
        *(void *)(v31 + 32) = a2;
        *(void *)(v31 + 96) = &type metadata for String;
        *(void *)(v31 + 104) = v28;
        *(void *)(v31 + 72) = v27;
        *(void *)(v31 + 80) = v26;
        *(void *)(v31 + 136) = &type metadata for Int;
        *(void *)(v31 + 144) = &protocol witness table for Int;
        *(void *)(v31 + 112) = v21;
        swift_bridgeObjectRetain();
        uint64_t v32 = String.init(format:arguments:)();
        uint64_t v34 = v33;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v35._countAndFlagsBits = v43;
        v35._object = v42;
        String.append(_:)(v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v36._countAndFlagsBits = v32;
        v36._object = v34;
        String.append(_:)(v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v37._countAndFlagsBits = v43;
        v37._object = v42;
        String.append(_:)(v37);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_10117D8C0;
        *(void *)(v38 + 56) = &type metadata for String;
        *(void *)(v38 + 64) = v28;
        *(void *)(v38 + 32) = v41;
        *(void *)(v38 + 40) = v24;
        *(void *)(v38 + 96) = &type metadata for String;
        *(void *)(v38 + 104) = v28;
        *(void *)(v38 + 72) = v40;
        *(void *)(v38 + 80) = v30;
      }
      else
      {
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_10117E800;
        uint64_t v13 = sub_100F8CC40(a2, 0);
        uint64_t v15 = v14;
        *(void *)(v12 + 56) = &type metadata for String;
        unint64_t v16 = sub_100528BE4();
        *(void *)(v12 + 32) = v13;
        *(void *)(v12 + 40) = v15;
        *(void *)(v12 + 96) = &type metadata for Int;
        *(void *)(v12 + 104) = &protocol witness table for Int;
        *(void *)(v12 + 64) = v16;
        *(void *)(v12 + 72) = v6;
        *(void *)(v12 + 136) = &type metadata for Int;
        *(void *)(v12 + 144) = &protocol witness table for Int;
        *(void *)(v12 + 112) = a3;
        *(void *)(v12 + 176) = &type metadata for Int;
        *(void *)(v12 + 184) = &protocol witness table for Int;
        *(void *)(v12 + 152) = v6;
      }
    }
    uint64_t v39 = String.init(format:arguments:)();
    swift_bridgeObjectRelease();
    return v39;
  }
  return result;
}

uint64_t sub_100F8CC40(uint64_t result, uint64_t a2)
{
  if (result < 1 || a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v5 = swift_allocObject();
    if (v4 == 1)
    {
      *(_OWORD *)(v5 + 16) = xmmword_10117D8C0;
      uint64_t v7 = *(void *)(v2 + 64);
      uint64_t v6 = *(void *)(v2 + 72);
      *(void *)(v5 + 56) = &type metadata for String;
      unint64_t v8 = sub_100528BE4();
      *(void *)(v5 + 32) = v7;
      *(void *)(v5 + 40) = v6;
      *(void *)(v5 + 96) = &type metadata for Int;
      *(void *)(v5 + 104) = &protocol witness table for Int;
      *(void *)(v5 + 64) = v8;
      *(void *)(v5 + 72) = a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v5 + 16) = xmmword_10118E4B0;
      *(void *)(v5 + 56) = &type metadata for Int;
      *(void *)(v5 + 64) = &protocol witness table for Int;
      *(void *)(v5 + 32) = v4;
      uint64_t v10 = *(void *)(v2 + 64);
      uint64_t v9 = *(void *)(v2 + 72);
      *(void *)(v5 + 96) = &type metadata for String;
      unint64_t v11 = sub_100528BE4();
      *(void *)(v5 + 72) = v10;
      *(void *)(v5 + 80) = v9;
      *(void *)(v5 + 136) = &type metadata for Int;
      *(void *)(v5 + 144) = &protocol witness table for Int;
      *(void *)(v5 + 104) = v11;
      *(void *)(v5 + 112) = v4;
      *(void *)(v5 + 176) = &type metadata for String;
      *(void *)(v5 + 184) = v11;
      *(void *)(v5 + 152) = v10;
      *(void *)(v5 + 160) = v9;
      *(void *)(v5 + 216) = &type metadata for Int;
      *(void *)(v5 + 224) = &protocol witness table for Int;
      *(void *)(v5 + 192) = a2;
      swift_bridgeObjectRetain_n();
    }
    uint64_t v12 = String.init(format:arguments:)();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_100F8CDC0(char a1)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  if (a1)
  {
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_10117D8C0;
    long long v12 = *(_OWORD *)(v1 + 184);
    *(void *)(v3 + 56) = &type metadata for String;
    unint64_t v4 = sub_100528BE4();
    *(void *)(v3 + 64) = v4;
    *(_OWORD *)(v3 + 32) = *(_OWORD *)(v1 + 184);
    long long v11 = *(_OWORD *)(v1 + 168);
    long long v5 = v11;
    *(void *)(v3 + 96) = &type metadata for String;
    *(void *)(v3 + 104) = v4;
    *(_OWORD *)(v3 + 72) = v5;
    sub_1007D42E0((uint64_t)&v12);
    sub_1007D42E0((uint64_t)&v11);
  }
  else
  {
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_10117E810;
    uint64_t v8 = *(void *)(v1 + 184);
    uint64_t v7 = *(void *)(v1 + 192);
    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 64) = sub_100528BE4();
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v7;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = String.init(format:arguments:)();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_100F8CEE4()
{
  unint64_t v0 = sub_100A3CEF0((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for CRLUnfairLock();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = (_DWORD *)swift_slowAlloc();
  _DWORD *v2 = 0;
  *(void *)(v1 + 16) = v2;
  atomic_thread_fence(memory_order_acq_rel);
  off_1016A3710 = (_UNKNOWN *)v1;
  qword_1016A3718 = v0;
}

uint64_t sub_100F8CF50()
{
  uint64_t v0 = type metadata accessor for CharacterSet();
  sub_100568B28(v0, qword_1016A3720);
  sub_100556B74(v0, (uint64_t)qword_1016A3720);
  return CharacterSet.init(charactersIn:)();
}

uint64_t sub_100F8CFBC()
{
  uint64_t v0 = type metadata accessor for CharacterSet();
  sub_100568B28(v0, qword_1016A3738);
  sub_100556B74(v0, (uint64_t)qword_1016A3738);
  return static CharacterSet.whitespaces.getter();
}

id sub_100F8D008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithPattern:v5 options:a3 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

void *sub_100F8D0E4(void *a1, char a2)
{
  id v3 = a1;
  sub_100F8A958(a2, (uint64_t)v39);
  if (qword_101670260 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v4 = (void *)sub_100F89498((uint64_t)v39, (uint64_t)off_1016A3710, qword_1016A3718);
  swift_endAccess();
  if (v4 == (void *)1)
  {
    id v5 = v3;
    sub_100F8D9BC(v5, a2 & 1, (uint64_t)v40);
    uint64_t v6 = sub_100F8B238();
    uint64_t v8 = v7;
    id v9 = objc_allocWithZone((Class)NSRegularExpression);
    unint64_t v4 = sub_100F8D008(v6, v8, 0);
    uint64_t v10 = sub_100F8B630();
    uint64_t v12 = v11;
    id v13 = objc_allocWithZone((Class)NSRegularExpression);
    id v15 = sub_100F8D008(v10, v12, 0);
    uint64_t v16 = sub_100F8B7BC();
    uint64_t v18 = v17;
    sub_100F8F118((uint64_t)v40);
    id v19 = objc_allocWithZone((Class)NSRegularExpression);
    id v20 = sub_100F8D008(v16, v18, 0);
    sub_10050BF84((uint64_t)v39, (uint64_t)v38);
    swift_beginAccess();
    sub_10050BF84((uint64_t)v38, (uint64_t)v37);
    lock = (os_unfair_lock_s *)*((void *)off_1016A3710 + 2);
    id v21 = v4;
    id v22 = v15;
    id v23 = v20;
    id v24 = v21;
    id v25 = v22;
    id v26 = v23;
    id v27 = v24;
    id v28 = v25;
    id v29 = v26;
    swift_retain();
    os_unfair_lock_lock(lock);
    sub_10050BF84((uint64_t)v37, (uint64_t)v36);
    id v30 = v27;
    id v31 = v28;
    id v32 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = qword_1016A3718;
    qword_1016A3718 = 0x8000000000000000;
    sub_100979C18(v4, v15, v20, (uint64_t)v36, isUniquelyReferenced_nonNull_native);
    qword_1016A3718 = v35;
    swift_bridgeObjectRelease();
    sub_10050BFE0((uint64_t)v36);
    os_unfair_lock_unlock(lock);
    swift_release();
    sub_10050BFE0((uint64_t)v37);

    sub_10050BFE0((uint64_t)v38);
    swift_endAccess();

    sub_10050BFE0((uint64_t)v39);
  }
  else
  {
    sub_10050BFE0((uint64_t)v39);
  }
  return v4;
}

void *sub_100F8D504(void *a1, char a2)
{
  id v3 = a1;
  sub_100F8ADEC(a2, (uint64_t)v39);
  if (qword_101670260 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v4 = (void *)sub_100F89498((uint64_t)v39, (uint64_t)off_1016A3710, qword_1016A3718);
  swift_endAccess();
  if (v4 == (void *)1)
  {
    id v5 = v3;
    sub_100F8E5F4(v5, a2 & 1, (uint64_t)v40);

    uint64_t v6 = sub_100F8B238();
    uint64_t v8 = v7;
    id v9 = objc_allocWithZone((Class)NSRegularExpression);
    unint64_t v4 = sub_100F8D008(v6, v8, 0);
    uint64_t v10 = sub_100F8B630();
    uint64_t v12 = v11;
    id v13 = objc_allocWithZone((Class)NSRegularExpression);
    id v15 = sub_100F8D008(v10, v12, 0);
    uint64_t v16 = sub_100F8B7BC();
    uint64_t v18 = v17;
    sub_100F8F118((uint64_t)v40);
    id v19 = objc_allocWithZone((Class)NSRegularExpression);
    id v20 = sub_100F8D008(v16, v18, 0);
    sub_10050BF84((uint64_t)v39, (uint64_t)v38);
    swift_beginAccess();
    sub_10050BF84((uint64_t)v38, (uint64_t)v37);
    lock = (os_unfair_lock_s *)*((void *)off_1016A3710 + 2);
    id v21 = v4;
    id v22 = v15;
    id v23 = v20;
    id v24 = v21;
    id v25 = v22;
    id v26 = v23;
    id v27 = v24;
    id v28 = v25;
    id v29 = v26;
    swift_retain();
    os_unfair_lock_lock(lock);
    sub_10050BF84((uint64_t)v37, (uint64_t)v36);
    id v30 = v27;
    id v31 = v28;
    id v32 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = qword_1016A3718;
    qword_1016A3718 = 0x8000000000000000;
    sub_100979C18(v4, v15, v20, (uint64_t)v36, isUniquelyReferenced_nonNull_native);
    qword_1016A3718 = v35;
    swift_bridgeObjectRelease();
    sub_10050BFE0((uint64_t)v36);
    os_unfair_lock_unlock(lock);
    swift_release();
    sub_10050BFE0((uint64_t)v37);

    sub_10050BFE0((uint64_t)v38);
    swift_endAccess();

    sub_10050BFE0((uint64_t)v39);
  }
  else
  {
    sub_10050BFE0((uint64_t)v39);
  }
  return v4;
}

uint64_t sub_100F8D928()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100F8D960(void *a1, uint64_t a2, unsigned char *a3)
{
  sub_100F8A8B0(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_100F8D96C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F8D97C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100F8D9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100F8D9B4()
{
  return swift_release();
}

void sub_100F8D9BC(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v133 = type metadata accessor for Locale();
  uint64_t v7 = *(void (***)(char *, char *, uint64_t))(v133 - 8);
  __chkstk_darwin(v133, v8);
  uint64_t v10 = (char *)v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = __chkstk_darwin(v15, v16).n128_u64[0];
  id v19 = (char *)v111 - v18;
  if (objc_msgSend(a1, "numberStyle", v17) == (id)5)
  {
    sub_100F8F1B0();
    swift_allocError();
    swift_willThrow();

    return;
  }
  int v134 = a2;
  uint64_t v112 = v14;
  if (a2) {
    id v20 = [a1 positiveSuffix];
  }
  else {
    id v20 = [a1 negativeSuffix];
  }
  id v21 = v20;
  if (v21)
  {
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    unint64_t v24 = 0xE000000000000000;
  }
  uint64_t v25 = sub_100F8BB40(v22, v24);
  uint64_t v131 = v26;
  swift_bridgeObjectRelease();
  id v130 = [a1 paddingPosition];
  unsigned __int8 v144 = [a1 usesGroupingSeparator];
  id v27 = [a1 groupingSeparator];
  if (v27)
  {
    id v28 = v27;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v128 = v30;
    uint64_t v129 = v29;
  }
  else
  {
    unint64_t v128 = 0xE000000000000000;
    uint64_t v129 = 0;
  }
  id v127 = [a1 groupingSize];
  if ((uint64_t)[a1 secondaryGroupingSize] <= 0) {
    id v31 = &selRef_groupingSize;
  }
  else {
    id v31 = &selRef_secondaryGroupingSize;
  }
  id v32 = [a1 *v31];
  id v33 = [a1 locale];
  if (!v33) {
    goto LABEL_57;
  }
  uint64_t v34 = v33;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v35 = v10;
  uint64_t v36 = v133;
  v7[4](v19, v35, v133);
  Swift::String v37 = v7[7];
  v111[1] = v7 + 7;
  v111[0] = v37;
  ((void (*)(char *, void, uint64_t, uint64_t))v37)(v19, 0, 1, v36);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v7[6])(v19, 1, v36) == 1)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v38 = sub_100861950();
  ((void (*)(char *, uint64_t))v7[1])(v19, v36);
  if (v38 <= 1) {
    uint64_t v38 = 1;
  }
  id v39 = [a1 minimumIntegerDigits];
  unsigned __int8 v143 = [a1 alwaysShowsDecimalSeparator];
  id v40 = [a1 minimumFractionDigits];
  id v126 = [a1 maximumFractionDigits];
  if (v134)
  {
    id v41 = [a1 positiveFormat];
    if (v41) {
      goto LABEL_23;
    }
    __break(1u);
  }
  id v41 = [a1 negativeFormat];
  if (!v41)
  {
LABEL_59:
    __break(1u);
    return;
  }
LABEL_23:
  id v120 = v40;
  id v121 = v39;
  uint64_t v122 = v38;
  id v123 = v32;
  uint64_t v124 = v25;
  uint64_t v125 = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v145[0] = 0;
  v135[0] = 0;
  swift_bridgeObjectRetain();
  uint64_t v42 = String.UTF16View.count.getter();
  swift_bridgeObjectRelease();
  if (qword_101670258 != -1) {
    swift_once();
  }
  uint64_t v43 = (void *)qword_1016A3708;
  NSString v44 = String._bridgeToObjectiveC()();
  id v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v145;
  *((void *)v19 + 3) = v135;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_100F8FD00;
  *(void *)(v45 + 24) = v19;
  float v140 = sub_100F8FCFC;
  uint64_t v141 = v45;
  aBlock = _NSConcreteStackBlock;
  unint64_t v137 = *(void *)"";
  uint64_t v138 = sub_100F89570;
  uint64_t v139 = &unk_1015350D8;
  uint64_t v7 = (void (**)(char *, char *, uint64_t))_Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v43 enumerateMatchesInString:v44 options:0 range:0 usingBlock:v42];

  _Block_release(v7);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_57:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v7[7])(v19, 1, 1, v133);
    goto LABEL_58;
  }
  char v47 = v145[0];
  uint64_t v48 = v135[0];
  swift_bridgeObjectRelease();
  swift_release();
  char v142 = v47;
  id v49 = [a1 exponentSymbol];
  if (v49)
  {
    uint64_t v50 = v49;
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v53 = v52;
  }
  else
  {
    uint64_t v51 = 0;
    unint64_t v53 = 0xE000000000000000;
  }
  char v54 = v134;
  uint64_t v55 = sub_100F8BB40(v51, v53);
  uint64_t v117 = v56;
  swift_bridgeObjectRelease();
  id v57 = [a1 plusSign];
  if (v57)
  {
    char v58 = v57;
    uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v61 = v60;
  }
  else
  {
    uint64_t v59 = 0;
    unint64_t v61 = 0xE000000000000000;
  }
  uint64_t v116 = sub_100F8BB40(v59, v61);
  uint64_t v115 = v62;
  swift_bridgeObjectRelease();
  id v63 = [a1 minusSign];
  uint64_t v119 = v48;
  if (v63)
  {
    unint64_t v64 = v63;
    uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v67 = v66;
  }
  else
  {
    uint64_t v65 = 0;
    unint64_t v67 = 0xE000000000000000;
  }
  uint64_t v132 = sub_100F8BB40(v65, v67);
  uint64_t v69 = v68;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v70 = [a1 decimalSeparator];
  if (v70)
  {
    uint64_t v71 = v70;
    uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v74 = v73;
  }
  else
  {
    uint64_t v72 = 0;
    unint64_t v74 = 0xE000000000000000;
  }
  uint64_t v114 = sub_100F8BB40(v72, v74);
  uint64_t v113 = v75;
  swift_bridgeObjectRelease();
  id v76 = [a1 paddingPosition];
  if (v54) {
    id v77 = [a1 positivePrefix];
  }
  else {
    id v77 = [a1 negativePrefix];
  }
  id v78 = v77;
  if (v78)
  {
    uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v81 = v80;
  }
  else
  {
    uint64_t v79 = 0;
    unint64_t v81 = 0xE000000000000000;
  }
  uint64_t v82 = sub_100F8BB40(v79, v81);
  unint64_t v84 = v83;
  swift_bridgeObjectRelease();
  uint64_t v118 = v55;
  if (v134) {
    goto LABEL_51;
  }
  if (v76 == (id)1) {
    goto LABEL_51;
  }
  aBlock = (void **)v82;
  unint64_t v137 = v84;
  v135[0] = v132;
  v135[1] = v69;
  uint64_t v85 = (uint64_t)v112;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v111[0])(v112, 1, 1, v133);
  sub_10052E310();
  swift_bridgeObjectRetain();
  StringProtocol.range<A>(of:options:range:locale:)();
  unint64_t v87 = v86;
  char v89 = v88;
  sub_100522F00(v85, &qword_1016741B8);
  swift_bridgeObjectRelease();
  if (v89) {
    goto LABEL_51;
  }
  uint64_t v90 = HIBYTE(v84) & 0xF;
  if ((v84 & 0x2000000000000000) == 0) {
    uint64_t v90 = v82 & 0xFFFFFFFFFFFFLL;
  }
  if (v87 >> 14 != 4 * v90)
  {
LABEL_51:
    swift_bridgeObjectRelease();
    char v92 = 0;
  }
  else
  {
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v82 = static String._fromSubstring(_:)();
    unint64_t v84 = v91;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v92 = 1;
  }
  id v93 = [a1 paddingCharacter];
  if (v93)
  {
    uint64_t v94 = v93;
    uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v97 = v96;
  }
  else
  {
    uint64_t v95 = 0;
    unint64_t v97 = 0xE000000000000000;
  }
  uint64_t v98 = sub_100F8BB40(v95, v97);
  unint64_t v100 = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = sub_100F8BE38(v98, v100);
  uint64_t v103 = v102;
  swift_bridgeObjectRelease();

  unsigned __int8 v104 = v144;
  unsigned __int8 v105 = v143;
  char v106 = v142;
  *(void *)a3 = v82;
  *(void *)(a3 + 8) = v84;
  *(void *)(a3 + 16) = v124;
  *(void *)(a3 + 24) = v131;
  *(void *)(a3 + 32) = v130;
  *(void *)(a3 + 40) = v101;
  *(void *)(a3 + 48) = v103;
  *(unsigned char *)(a3 + 56) = v104;
  *(_DWORD *)(a3 + 57) = aBlock;
  *(_DWORD *)(a3 + 60) = *(_DWORD *)((char *)&aBlock + 3);
  *(void *)(a3 + 64) = v129;
  *(void *)(a3 + 72) = v128;
  *(void *)(a3 + 80) = v127;
  *(void *)(a3 + 88) = v123;
  *(void *)(a3 + 96) = v122;
  *(void *)(a3 + 104) = v121;
  *(unsigned char *)(a3 + 112) = v105;
  *(_DWORD *)(a3 + 116) = *(_DWORD *)((char *)v135 + 3);
  *(_DWORD *)(a3 + 113) = v135[0];
  id v107 = v126;
  *(void *)(a3 + 120) = v120;
  *(void *)(a3 + 128) = v107;
  *(void *)(a3 + 136) = v119;
  *(unsigned char *)(a3 + 144) = v106;
  *(_DWORD *)(a3 + 148) = *(_DWORD *)&v145[3];
  *(_DWORD *)(a3 + 145) = *(_DWORD *)v145;
  uint64_t v108 = v117;
  *(void *)(a3 + 152) = v118;
  *(void *)(a3 + 160) = v108;
  uint64_t v109 = v115;
  *(void *)(a3 + 168) = v116;
  *(void *)(a3 + 176) = v109;
  *(void *)(a3 + 184) = v132;
  *(void *)(a3 + 192) = v69;
  uint64_t v110 = v113;
  *(void *)(a3 + 200) = v114;
  *(void *)(a3 + 208) = v110;
  *(unsigned char *)(a3 + 216) = v92;
}

uint64_t sub_100F8E4CC(uint64_t result, uint64_t a2)
{
  if ((a2 | result) < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = result;
    if (result < a2)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
      *(void *)(v4 + 56) = &type metadata for Int;
      *(void *)(v4 + 64) = &protocol witness table for Int;
      *(void *)(v4 + 32) = v3;
      *(void *)(v4 + 96) = &type metadata for Int;
      *(void *)(v4 + 104) = &protocol witness table for Int;
      *(void *)(v4 + 72) = a2;
LABEL_6:
      uint64_t v6 = String.init(format:arguments:)();
      swift_bridgeObjectRelease();
      return v6;
    }
    if (result >= 1)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_10117E810;
      *(void *)(v5 + 56) = &type metadata for Int;
      *(void *)(v5 + 64) = &protocol witness table for Int;
      *(void *)(v5 + 32) = v3;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

id sub_100F8E5F4@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v122 - v13;
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v148 = *(void *)(v15 - 8);
  uint64_t v149 = v15;
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v21 = __chkstk_darwin(v19, v20).n128_u64[0];
  uint64_t v147 = (char *)&v122 - v22;
  id v23 = [a1 format:v21];
  if (!v23) {
    goto LABEL_5;
  }
  unint64_t v24 = v23;
  uint64_t v124 = v10;
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v145 = v26;

  uint64_t v144 = v25;
  if (a2)
  {
    id result = (id)kCFNumberFormatterPositiveSuffix;
    if (!kCFNumberFormatterPositiveSuffix)
    {
      __break(1u);
LABEL_5:
      sub_100F8F1B0();
      swift_allocError();
      return (id)swift_willThrow();
    }
  }
  else
  {
    id result = (id)kCFNumberFormatterNegativeSuffix;
    if (!kCFNumberFormatterNegativeSuffix)
    {
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
  }
  uint64_t v28 = sub_100F8A628((uint64_t)result);
  if (v29)
  {
    unint64_t v30 = v29;
  }
  else
  {
    uint64_t v28 = 0;
    unint64_t v30 = 0xE000000000000000;
  }
  uint64_t v31 = sub_100F8BB40(v28, v30);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (!kCFNumberFormatterPaddingPosition) {
    goto LABEL_80;
  }
  sub_100F8A6F0((uint64_t)kCFNumberFormatterPaddingPosition);
  if (v35) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = v34;
  }
  uint64_t v146 = v36;
  unsigned __int8 v160 = [a1 useGroupingSeparator];
  if (!kCFNumberFormatterGroupingSeparator) {
    goto LABEL_81;
  }
  int v143 = a2;
  uint64_t v37 = sub_100F8A628((uint64_t)kCFNumberFormatterGroupingSeparator);
  if (v38) {
    uint64_t v39 = v37;
  }
  else {
    uint64_t v39 = 0;
  }
  unint64_t v40 = 0xE000000000000000;
  if (v38) {
    unint64_t v40 = v38;
  }
  unint64_t v141 = v40;
  uint64_t v142 = v39;
  if (!kCFNumberFormatterGroupingSize) {
    goto LABEL_82;
  }
  id v41 = sub_100F8A544((uint64_t)kCFNumberFormatterGroupingSize);
  if (v42) {
    id v43 = 0;
  }
  else {
    id v43 = v41;
  }
  if (!kCFNumberFormatterSecondaryGroupingSize) {
    goto LABEL_83;
  }
  uint64_t v139 = v33;
  uint64_t v140 = v3;
  id v44 = sub_100F8A544((uint64_t)kCFNumberFormatterSecondaryGroupingSize);
  if (v44) {
    BOOL v46 = 1;
  }
  else {
    BOOL v46 = (uint64_t)v43 <= 0;
  }
  if (v46) {
    id v47 = v44;
  }
  else {
    id v47 = v43;
  }
  id v138 = v43;
  if (v45) {
    id v47 = v43;
  }
  id v137 = v47;
  id v48 = [a1 locale];
  if (!v48)
  {
    id result = [self currentLocale];
    id v48 = result;
    if (!result) {
      goto LABEL_93;
    }
  }
  uint64_t v136 = v31;
  id v49 = [v48 locale];

  if (!v49) {
    goto LABEL_84;
  }
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v50 = v148;
  uint64_t v51 = v149;
  unint64_t v52 = *(void (**)(char *, char *, uint64_t))(v148 + 32);
  v52(v14, v18, v149);
  id v123 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
  v123(v14, 0, 1, v51);
  id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v14, 1, v51);
  if (result == 1)
  {
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  v52(v147, v14, v51);
  uint64_t v53 = sub_100861950();
  if (v53 <= 1) {
    uint64_t v54 = 1;
  }
  else {
    uint64_t v54 = v53;
  }
  id v55 = [a1 minIntegerDigits];
  id result = (id)kCFNumberFormatterAlwaysShowDecimalSeparator;
  if (!kCFNumberFormatterAlwaysShowDecimalSeparator) {
    goto LABEL_86;
  }
  uint64_t v122 = v50 + 56;
  id v134 = v55;
  uint64_t v135 = v54;
  char v159 = sub_100F8A468((uint64_t)kCFNumberFormatterAlwaysShowDecimalSeparator) & 1;
  id v133 = [a1 minFractionDigits];
  id v132 = [a1 maxFractionDigits];
  v161[0] = 0;
  v150[0] = 0;
  swift_bridgeObjectRetain();
  uint64_t v56 = String.UTF16View.count.getter();
  swift_bridgeObjectRelease();
  if (qword_101670258 != -1) {
    swift_once();
  }
  id v57 = (void *)qword_1016A3708;
  NSString v58 = String._bridgeToObjectiveC()();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = v161;
  *(void *)(v59 + 24) = v150;
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = sub_100F8F214;
  *((void *)v14 + 3) = v59;
  long long v155 = sub_100F8FCFC;
  long long v156 = v14;
  aBlock = _NSConcreteStackBlock;
  unint64_t v152 = *(void *)"";
  uint64_t v153 = sub_100F89570;
  uint64_t v154 = &unk_101534FE8;
  unint64_t v60 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v57 enumerateMatchesInString:v58 options:0 range:0 usingBlock:v56];

  _Block_release(v60);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v148 + 56))(v14, 1, 1, v149);
    goto LABEL_85;
  }
  char v62 = v161[0];
  uint64_t v63 = v150[0];
  swift_bridgeObjectRelease();
  swift_release();
  char v158 = v62;
  id v64 = [a1 exponentSymbol];
  if (v64)
  {
    uint64_t v65 = v64;
    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v68 = v67;
  }
  else
  {
    uint64_t v66 = 0;
    unint64_t v68 = 0xE000000000000000;
  }
  uint64_t v69 = sub_100F8BB40(v66, v68);
  uint64_t v71 = v70;
  swift_bridgeObjectRelease();
  id result = (id)kCFNumberFormatterPlusSign;
  if (!kCFNumberFormatterPlusSign) {
    goto LABEL_87;
  }
  uint64_t v131 = v71;
  uint64_t v144 = v69;
  uint64_t v72 = sub_100F8A628((uint64_t)kCFNumberFormatterPlusSign);
  if (v73)
  {
    unint64_t v74 = v73;
  }
  else
  {
    uint64_t v72 = 0;
    unint64_t v74 = 0xE000000000000000;
  }
  uint64_t v130 = sub_100F8BB40(v72, v74);
  uint64_t v129 = v75;
  swift_bridgeObjectRelease();
  id result = (id)kCFNumberFormatterMinusSign;
  if (!kCFNumberFormatterMinusSign) {
    goto LABEL_88;
  }
  uint64_t v76 = sub_100F8A628((uint64_t)kCFNumberFormatterMinusSign);
  if (v77)
  {
    unint64_t v78 = v77;
  }
  else
  {
    uint64_t v76 = 0;
    unint64_t v78 = 0xE000000000000000;
  }
  uint64_t v79 = sub_100F8BB40(v76, v78);
  uint64_t v81 = v80;
  id result = (id)swift_bridgeObjectRelease();
  if (!kCFNumberFormatterDecimalSeparator) {
    goto LABEL_89;
  }
  swift_bridgeObjectRetain();
  uint64_t v82 = sub_100F8A628((uint64_t)kCFNumberFormatterDecimalSeparator);
  if (v83)
  {
    unint64_t v84 = v83;
  }
  else
  {
    uint64_t v82 = 0;
    unint64_t v84 = 0xE000000000000000;
  }
  uint64_t v127 = sub_100F8BB40(v82, v84);
  uint64_t v126 = v85;
  swift_bridgeObjectRelease();
  char v86 = v143;
  uint64_t v128 = v63;
  if (v143)
  {
    id result = (id)kCFNumberFormatterPositivePrefix;
    if (kCFNumberFormatterPositivePrefix) {
      goto LABEL_63;
    }
    __break(1u);
  }
  id result = (id)kCFNumberFormatterNegativePrefix;
  if (!kCFNumberFormatterNegativePrefix)
  {
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
    return result;
  }
LABEL_63:
  uint64_t v87 = sub_100F8A628((uint64_t)result);
  if (v88)
  {
    unint64_t v89 = v88;
  }
  else
  {
    uint64_t v87 = 0;
    unint64_t v89 = 0xE000000000000000;
  }
  uint64_t v90 = sub_100F8BB40(v87, v89);
  unint64_t v92 = v91;
  swift_bridgeObjectRelease();
  uint64_t v125 = v79;
  uint64_t v145 = v81;
  if (v86) {
    goto LABEL_73;
  }
  if (v146 == 1) {
    goto LABEL_73;
  }
  aBlock = (void **)v90;
  unint64_t v152 = v92;
  v150[0] = v79;
  v150[1] = v81;
  uint64_t v93 = (uint64_t)v124;
  v123(v124, 1, 1, v149);
  sub_10052E310();
  swift_bridgeObjectRetain();
  StringProtocol.range<A>(of:options:range:locale:)();
  unint64_t v95 = v94;
  char v97 = v96;
  sub_100522F00(v93, &qword_1016741B8);
  swift_bridgeObjectRelease();
  if (v97) {
    goto LABEL_73;
  }
  uint64_t v98 = HIBYTE(v92) & 0xF;
  if ((v92 & 0x2000000000000000) == 0) {
    uint64_t v98 = v90 & 0xFFFFFFFFFFFFLL;
  }
  if (v95 >> 14 != 4 * v98)
  {
LABEL_73:
    swift_bridgeObjectRelease();
    char v100 = 0;
  }
  else
  {
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v90 = static String._fromSubstring(_:)();
    unint64_t v92 = v99;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v100 = 1;
  }
  char v157 = v100;
  id result = (id)kCFNumberFormatterPaddingCharacter;
  if (!kCFNumberFormatterPaddingCharacter) {
    goto LABEL_90;
  }
  uint64_t v101 = (int)v134;
  uint64_t v102 = (int)v133;
  uint64_t v103 = (int)v132;
  uint64_t v104 = sub_100F8A628((uint64_t)kCFNumberFormatterPaddingCharacter);
  if (v105)
  {
    unint64_t v106 = v105;
  }
  else
  {
    uint64_t v104 = 0;
    unint64_t v106 = 0xE000000000000000;
  }
  uint64_t v107 = sub_100F8BB40(v104, v106);
  unint64_t v109 = v108;
  swift_bridgeObjectRelease();
  uint64_t v110 = sub_100F8BE38(v107, v109);
  uint64_t v112 = v111;
  swift_bridgeObjectRelease();
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v147, v149);
  unsigned __int8 v113 = v160;
  char v114 = v159;
  char v115 = v158;
  char v116 = v157;
  *(void *)a3 = v90;
  *(void *)(a3 + 8) = v92;
  uint64_t v117 = v139;
  *(void *)(a3 + 16) = v136;
  *(void *)(a3 + 24) = v117;
  *(void *)(a3 + 32) = v146;
  *(void *)(a3 + 40) = v110;
  *(void *)(a3 + 48) = v112;
  *(unsigned char *)(a3 + 56) = v113;
  *(_DWORD *)(a3 + 57) = aBlock;
  *(_DWORD *)(a3 + 60) = *(_DWORD *)((char *)&aBlock + 3);
  *(void *)(a3 + 64) = v142;
  *(void *)(a3 + 72) = v141;
  *(void *)(a3 + 80) = v138;
  *(void *)(a3 + 88) = v137;
  *(void *)(a3 + 96) = v135;
  *(void *)(a3 + 104) = v101;
  *(unsigned char *)(a3 + 112) = v114;
  *(_DWORD *)(a3 + 116) = *(_DWORD *)((char *)v150 + 3);
  *(_DWORD *)(a3 + 113) = v150[0];
  *(void *)(a3 + 120) = v102;
  *(void *)(a3 + 128) = v103;
  *(void *)(a3 + 136) = v128;
  *(unsigned char *)(a3 + 144) = v115;
  *(_DWORD *)(a3 + 148) = *(_DWORD *)&v161[3];
  *(_DWORD *)(a3 + 145) = *(_DWORD *)v161;
  uint64_t v118 = v131;
  *(void *)(a3 + 152) = v144;
  *(void *)(a3 + 160) = v118;
  uint64_t v119 = v129;
  *(void *)(a3 + 168) = v130;
  *(void *)(a3 + 176) = v119;
  uint64_t v120 = v145;
  *(void *)(a3 + 184) = v125;
  *(void *)(a3 + 192) = v120;
  uint64_t v121 = v126;
  *(void *)(a3 + 200) = v127;
  *(void *)(a3 + 208) = v121;
  *(unsigned char *)(a3 + 216) = v116;
  return result;
}

uint64_t sub_100F8F118(uint64_t a1)
{
  return a1;
}

unint64_t sub_100F8F1B0()
{
  unint64_t result = qword_1016A3750;
  if (!qword_1016A3750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3750);
  }
  return result;
}

uint64_t sub_100F8F204()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100F8F214(void *a1, uint64_t a2, unsigned char *a3)
{
  sub_100F8A288(a1, a2, a3, *(BOOL **)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_100F8F21C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F8F22C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F8F23C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100F8F24C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *initializeBufferWithCopyOfBuffer for CRLNumericRegexGenerator.RegexSet(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for CRLNumericRegexGenerator.RegexSet(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for CRLNumericRegexGenerator.RegexSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for CRLNumericRegexGenerator.RegexSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator.RegexSet()
{
  return &type metadata for CRLNumericRegexGenerator.RegexSet;
}

unsigned char *storeEnumTagSinglePayload for CRLNumericRegexGenerator.RegexError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100F8F450);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator.RegexError()
{
  return &type metadata for CRLNumericRegexGenerator.RegexError;
}

uint64_t destroy for CRLNumericRegexGenerator()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLNumericRegexGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v7 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v7;
  uint64_t v8 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v8;
  uint64_t v9 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v9;
  uint64_t v10 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v10;
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLNumericRegexGenerator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  return a1;
}

__n128 initializeWithTake for CRLNumericRegexGenerator(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for CRLNumericRegexGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v8 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLNumericRegexGenerator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 217)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLNumericRegexGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 216) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 217) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 217) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator()
{
  return &type metadata for CRLNumericRegexGenerator;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator.Cache()
{
  return &type metadata for CRLNumericRegexGenerator.Cache;
}

void destroy for CRLNumericRegexGenerator.Cache.Entry(uint64_t a1)
{
  if (*(void *)a1 >= 0xFFFFFFFFuLL)
  {

    unint64_t v2 = *(void **)(a1 + 16);
  }
}

uint64_t _s8Freeform24CRLNumericRegexGeneratorV5CacheV5EntryOwCP_0(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    uint64_t v4 = *(void **)(a2 + 8);
    uint64_t v5 = *(void **)(a2 + 16);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    id v6 = v3;
    id v7 = v4;
    id v8 = v5;
  }
  return a1;
}

void **assignWithCopy for CRLNumericRegexGenerator.Cache.Entry(void **a1, long long *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      uint64_t v13 = (void *)*((void *)a2 + 1);
      a1[1] = v13;
      uint64_t v14 = (void *)*((void *)a2 + 2);
      a1[2] = v14;
      id v15 = v5;
      id v16 = v13;
      id v17 = v14;
      return a1;
    }
LABEL_7:
    long long v18 = *a2;
    a1[2] = (void *)*((void *)a2 + 2);
    *(_OWORD *)a1 = v18;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_7;
  }
  *a1 = v5;
  id v6 = v5;

  id v7 = (void *)*((void *)a2 + 1);
  id v8 = a1[1];
  a1[1] = v7;
  id v9 = v7;

  uint64_t v10 = (void *)*((void *)a2 + 2);
  uint64_t v11 = a1[2];
  a1[2] = v10;
  id v12 = v10;

  return a1;
}

void **assignWithTake for CRLNumericRegexGenerator.Cache.Entry(void **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = *(void **)(a2 + 16);
    return a1;
  }
  *a1 = *(void **)a2;

  uint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLNumericRegexGenerator.Cache.Entry(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLNumericRegexGenerator.Cache.Entry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

void *sub_100F8FC64(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CRLNumericRegexGenerator.Cache.Entry()
{
  return &type metadata for CRLNumericRegexGenerator.Cache.Entry;
}

unint64_t sub_100F8FC98()
{
  unint64_t result = qword_1016A3758;
  if (!qword_1016A3758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3758);
  }
  return result;
}

uint64_t sub_100F8FD18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_100F8FDC8()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels);
  uint64_t v3 = *(void *)(v2 + 16);
  double v4 = *(double *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_currentZoomValue);
  if (v3)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = v3;
    while (sub_100F90764(v4, *(double *)(v2 + 8 * v5 + 24)) || (uint64_t)v5 >= v3)
    {
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v6 = *(void *)(v0 + v1);
      if (v5 < *(void *)(v6 + 16))
      {
        double v4 = *(double *)(v6 + 8 * v5 + 32);
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_100F8FFFC(v4);
  }
}

void sub_100F8FEE4()
{
  double v1 = *(double *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_currentZoomValue);
  uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      BOOL v6 = sub_100F90738(v1, *(double *)(v3 + 8 * v5 + 32));
      if (v5)
      {
        if (v6) {
          break;
        }
      }
      if (v4 == ++v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(v0 + v2);
    if ((unint64_t)(v5 - 1) < *(void *)(v7 + 16))
    {
      double v1 = *(double *)(v7 + 8 * v5 + 24);
      goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_100F8FFFC(v1);
  }
}

void sub_100F8FFFC(double a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v51 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  BOOL v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v50 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v49 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  long long v18 = (char *)&v44 - v17;
  uint64_t v19 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_icc);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v21 = (void *)Strong;
    id v52 = v19;
    id v22 = [v52 layerHost];
    if (v22
      && (id v23 = [v22 canvasLayer], swift_unknownObjectRelease(), v23))
    {
      [self cancelPreviousPerformRequestsWithTarget:v21 selector:"canvasZoomTrackerDidEndViewScaleFeedback:" object:0];
      [v52 visibleUnscaledRect];
      double v28 = sub_100065738(v24, v25, v26, v27);
      double v30 = v29;
      [v23 contentInset];
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;
      double v38 = v37;
      id v57 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
      uint64_t v58 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v54 = *(void *)"";
      id v48 = v23;
      BOOL v46 = &v55;
      id v55 = sub_100F8FD18;
      uint64_t v56 = &unk_1015353F0;
      uint64_t v39 = _Block_copy(&aBlock);
      [v23 animateToViewScale:v39 contentCenter:a1 contentInset:v28 duration:v30 completionBlock:v32 v34 v36 v38 0.2];
      _Block_release(v39);
      [v21 canvasZoomTracker:0 willBeginViewScaleFeedbackWithZoomMethod:2];
      [v21 canvasZoomTracker:0 willUpdateViewScaleFeedbackWithScale:a1];
      sub_100656064();
      uint64_t v45 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v47 = v7;
      uint64_t v49 = *(void *)(v49 + 8);
      ((void (*)(char *, uint64_t))v49)(v14, v11);
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v21;
      id v57 = sub_100F90724;
      uint64_t v58 = v40;
      aBlock = _NSConcreteStackBlock;
      uint64_t v54 = *(void *)"";
      id v55 = sub_100679958;
      uint64_t v56 = &unk_101535440;
      id v41 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock = (void **)_swiftEmptyArrayStorage;
      sub_100522CDC();
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_10056B494();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      char v42 = (void *)v45;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();

      _Block_release(v41);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v47);
      ((void (*)(char *, uint64_t))v49)(v18, v11);
    }
    else
    {
      swift_unknownObjectRelease();
      id v43 = v52;
    }
  }
}

id sub_100F90620()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLiOSZoomHelper();
  [super dealloc];
}

uint64_t type metadata accessor for CRLiOSZoomHelper()
{
  return self;
}

uint64_t sub_100F906D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100F906E4()
{
  return swift_release();
}

uint64_t sub_100F906EC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100F90724()
{
  return [*(id *)(v0 + 16) canvasZoomTrackerDidEndViewScaleFeedback:0];
}

BOOL sub_100F90738(double a1, double a2)
{
  if (a1 < a2) {
    return 1;
  }
  if (vabdd_f64(a1, a2) < 0.01) {
    return 1;
  }
  return a1 == a2;
}

BOOL sub_100F90764(double a1, double a2)
{
  return a1 < a2 && vabdd_f64(a1, a2) >= 0.00999999978;
}

double *sub_100F90790(double a1, double a2, double a3)
{
  BOOL v6 = sub_100F655F0(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v8 = *((void *)v6 + 2);
  unint64_t v7 = *((void *)v6 + 3);
  if (v8 >= v7 >> 1) {
    BOOL v6 = sub_100F655F0((double *)(v7 > 1), v8 + 1, 1, v6);
  }
  *((void *)v6 + 2) = v8 + 1;
  v6[v8 + 4] = a1;
  if (qword_101670170 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10171CA38;
  uint64_t v10 = *(void *)(qword_10171CA38 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v10; ++i)
    {
      double v12 = *(double *)(v9 + 8 * i + 32) / a3;
      if (v12 > a1 && v12 < a2)
      {
        unint64_t v15 = *((void *)v6 + 2);
        unint64_t v14 = *((void *)v6 + 3);
        if (v15 >= v14 >> 1) {
          BOOL v6 = sub_100F655F0((double *)(v14 > 1), v15 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v15 + 1;
        v6[v15 + 4] = v12;
      }
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v17 = *((void *)v6 + 2);
  unint64_t v16 = *((void *)v6 + 3);
  if (v17 >= v16 >> 1) {
    BOOL v6 = sub_100F655F0((double *)(v16 > 1), v17 + 1, 1, v6);
  }
  *((void *)v6 + 2) = v17 + 1;
  v6[v17 + 4] = a2;
  return v6;
}

id sub_100F90928(void *a1)
{
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_icc] = a1;
  swift_unknownObjectWeakAssign();
  uint64_t v3 = v1;
  id v4 = a1;
  [v4 viewScale];
  *(void *)&v3[OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_currentZoomValue] = v5;
  id v6 = [v4 delegate];
  if (v6)
  {
    unint64_t v7 = v6;
    double v8 = 1.0;
    if ([v6 respondsToSelector:"zoomDetentScaleForInteractiveCanvasController:"])
    {
      [v7 zoomDetentScaleForInteractiveCanvasController:v4];
      double v8 = v9;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    double v8 = 1.0;
  }
  id v10 = [v4 layerHost];
  double v11 = 0.1;
  if (v10)
  {
    id v12 = [v10 canvasLayer];
    swift_unknownObjectRelease();
    if (v12)
    {
      [v12 minimumPinchViewScale];
      double v11 = v13;
    }
  }
  id v14 = [v4 layerHost];
  double v15 = 4.0;
  if (v14)
  {
    id v16 = [v14 canvasLayer];
    swift_unknownObjectRelease();
    if (v16)
    {
      [v16 maximumPinchViewScale];
      double v15 = v17;
    }
  }
  *(void *)&v3[OBJC_IVAR____TtC8Freeform16CRLiOSZoomHelper_zoomLevels] = sub_100F90790(v11, v15, v8);

  v19.receiver = v3;
  v19.Class super_class = (Class)type metadata accessor for CRLiOSZoomHelper();
  return [super init];
}

uint64_t destroy for CRLFillData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLFillData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  uint64_t v3 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v3;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLFillData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  uint64_t v5 = a2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
  *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
  *(void *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLFillData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLFillData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 96);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFillData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 96) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFillData()
{
  return &type metadata for CRLFillData;
}

uint64_t sub_100F90EC8()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100F90F28()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100F90F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100F92B14();
  unint64_t v7 = sub_100F92A68();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100F90FE8()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_100F91054()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_100F910B0(uint64_t a1)
{
  unint64_t v2 = sub_100F92B14();
  unint64_t v3 = sub_1008EE6D8();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

BOOL sub_100F91110(char *a1, char *a2)
{
  return qword_1011BEBD0[*a1] == qword_1011BEBD0[*a2];
}

Swift::Int sub_100F91134()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BEBD0[v1]);
  return Hasher._finalize()();
}

void sub_100F91184()
{
  Hasher._combine(_:)(qword_1011BEBD0[*v0]);
}

Swift::Int sub_100F911BC()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BEBD0[v1]);
  return Hasher._finalize()();
}

void sub_100F91208(void *a1@<X8>)
{
  *a1 = qword_1011BEBD0[*v1];
}

uint64_t sub_100F91220()
{
  unint64_t v1 = 0x726F6C6F63;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_100F91274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100F92170(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100F9129C()
{
  return qword_1011BEBD0[*v0];
}

void sub_100F912B4(void *a1@<X8>)
{
  *a1 = &off_101502B28;
}

uint64_t sub_100F912C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100F91CA8();
  unint64_t v5 = sub_100F91D00();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100F9131C(uint64_t a1)
{
  unint64_t v2 = sub_100F91D00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100F91358(uint64_t a1)
{
  unint64_t v2 = sub_100F91D00();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100F91394(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016A3818);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  double v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100F91D00();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100F926B8(v3, (uint64_t)v16);
  sub_100F926B8((uint64_t)v16, (uint64_t)v13);
  char v15 = 0;
  sub_1005057FC(&qword_101687C08);
  sub_100F92720(&qword_1016A3820);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    long long v10 = *(_OWORD *)(v3 + 64);
    long long v13[2] = *(_OWORD *)(v3 + 48);
    uint64_t v13[3] = v10;
    v13[4] = *(_OWORD *)(v3 + 80);
    uint64_t v14 = *(void *)(v3 + 96);
    long long v11 = *(_OWORD *)(v3 + 32);
    v13[0] = *(_OWORD *)(v3 + 16);
    v13[1] = v11;
    char v15 = 1;
    sub_1007B1FF8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&v13[0] = *(void *)(v3 + 104);
    char v15 = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100F915C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100F915C8(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100F915F4())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100F91614(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 64);
  v10[2] = *(_OWORD *)(a1 + 48);
  v10[3] = v2;
  v10[4] = *(_OWORD *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 96);
  long long v4 = *(_OWORD *)(a1 + 32);
  v10[0] = *(_OWORD *)(a1 + 16);
  v10[1] = v4;
  uint64_t v5 = *(void *)(a2 + 104);
  uint64_t v13 = *(void *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 64);
  v12[2] = *(_OWORD *)(a2 + 48);
  uint64_t v12[3] = v6;
  v12[4] = *(_OWORD *)(a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 32);
  v12[0] = *(_OWORD *)(a2 + 16);
  v12[1] = v7;
  sub_1008EE6D8();
  if (static CRExtensible.== infix(_:_:)() & 1) != 0 && (sub_1007B12DC((uint64_t)v10, (uint64_t)v12)) {
    char v8 = sub_100ED60AC(v3, v5);
  }
  else {
    char v8 = 0;
  }
  return v8 & 1;
}

Swift::Int sub_100F916F8()
{
  return Hasher._finalize()();
}

void sub_100F91794()
{
}

Swift::Int sub_100F91814()
{
  return Hasher._finalize()();
}

__n128 sub_100F918AC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100F922AC(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_100F91900(void *a1)
{
  return sub_100F91394(a1);
}

uint64_t sub_100F9194C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100F92788();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100F919A0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100F92788();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100F919F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10091312C();
  unint64_t v7 = sub_100F91E68();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100F91A64(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100F92788();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100F91AB0()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100F91B00()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100F91B48(uint64_t a1)
{
  unint64_t v2 = sub_100F91EC0();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100F91B98()
{
  unint64_t result = qword_1016A37A8;
  if (!qword_1016A37A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37A8);
  }
  return result;
}

unint64_t sub_100F91BF8()
{
  unint64_t result = qword_1016A37B0;
  if (!qword_1016A37B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37B0);
  }
  return result;
}

unint64_t sub_100F91C50()
{
  unint64_t result = qword_1016A37B8;
  if (!qword_1016A37B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37B8);
  }
  return result;
}

unint64_t sub_100F91CA8()
{
  unint64_t result = qword_1016A37C0;
  if (!qword_1016A37C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37C0);
  }
  return result;
}

unint64_t sub_100F91D00()
{
  unint64_t result = qword_1016A37C8;
  if (!qword_1016A37C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37C8);
  }
  return result;
}

unint64_t sub_100F91D58()
{
  unint64_t result = qword_1016A37D0;
  if (!qword_1016A37D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37D0);
  }
  return result;
}

unint64_t sub_100F91DB0()
{
  unint64_t result = qword_1016A37D8;
  if (!qword_1016A37D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37D8);
  }
  return result;
}

unint64_t sub_100F91E08()
{
  unint64_t result = qword_1016A37E0;
  if (!qword_1016A37E0)
  {
    sub_100522D34(&qword_1016A37E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37E0);
  }
  return result;
}

unint64_t sub_100F91E68()
{
  unint64_t result = qword_1016A37F0;
  if (!qword_1016A37F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37F0);
  }
  return result;
}

unint64_t sub_100F91EC0()
{
  unint64_t result = qword_1016A37F8;
  if (!qword_1016A37F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A37F8);
  }
  return result;
}

unint64_t sub_100F91F18()
{
  unint64_t result = qword_1016A3800;
  if (!qword_1016A3800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3800);
  }
  return result;
}

__n128 sub_100F91F6C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  self;
  unint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = [v4 color];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 47, (uint64_t)"Unsupported fill type for archiving. Falling back to archiving color fill.", 74, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    LOBYTE(v15) = 2;
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 47);
    id v6 = [a1 referenceColor:@"Unsupported fill type for archiving. Falling back to archiving color fill." 74 v15];
    if (v6) {
      goto LABEL_5;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 52, (uint64_t)"Missing fill reference color. Falling back to black color.", 58, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    LOBYTE(v16) = 2;
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 52);
    id v5 = [self blackColor:@"Missing fill reference color. Falling back to black color.":58:v16];
  }
  id v6 = v5;
LABEL_5:
  sub_1007B16EC(v6, (uint64_t)&v17);

  uint64_t v8 = v23;
  uint64_t v7 = v24;
  char v9 = v18;
  int v10 = v17;
  __n128 result = v19;
  long long v12 = v20;
  long long v13 = v21;
  long long v14 = v22;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 16) = v10;
  *(unsigned char *)(a2 + 20) = v9;
  *(__n128 *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 40) = v12;
  *(_OWORD *)(a2 + 56) = v13;
  *(_OWORD *)(a2 + 72) = v14;
  *(void *)(a2 + 88) = v8;
  *(void *)(a2 + 96) = v7;
  *(void *)(a2 + 104) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100F92170(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100F922AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016A3808);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  char v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100F91D00();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005057FC(&qword_101687C08);
    char v50 = 0;
    sub_100F92720(&qword_1016A3810);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = v38;
    int v11 = v39;
    char v50 = 1;
    sub_1007B1FA0();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    int v49 = v11;
    uint64_t v32 = v10;
    int v30 = BYTE4(v38);
    int v31 = v38;
    uint64_t v28 = v40;
    uint64_t v29 = v39;
    uint64_t v12 = v42;
    uint64_t v27 = v41;
    uint64_t v26 = v43;
    uint64_t v25 = v44;
    uint64_t v37 = v45;
    uint64_t v24 = v46;
    uint64_t v13 = v48;
    uint64_t v33 = v47;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v50 = 2;
    unint64_t v34 = sub_100557304();
    uint64_t v36 = v12;
    uint64_t v14 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = v13;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v15 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = v36;
    swift_bridgeObjectRetain();
    uint64_t v17 = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v18 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v32;
    *(unsigned char *)(a2 + 8) = v49;
    *(_DWORD *)(a2 + 16) = v31;
    *(unsigned char *)(a2 + 20) = v30;
    uint64_t v20 = v28;
    *(void *)(a2 + 24) = v29;
    *(void *)(a2 + 32) = v20;
    *(void *)(a2 + 40) = v27;
    *(void *)(a2 + 48) = v16;
    uint64_t v21 = v25;
    *(void *)(a2 + 56) = v26;
    *(void *)(a2 + 64) = v21;
    uint64_t v22 = v24;
    *(void *)(a2 + 72) = v17;
    *(void *)(a2 + 80) = v22;
    *(void *)(a2 + 88) = v14;
    *(void *)(a2 + 96) = v18;
    *(void *)(a2 + 104) = v15;
  }
  return result;
}

uint64_t sub_100F926B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101687C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100F92720(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_101687C08);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100F92788()
{
  unint64_t result = qword_1016A3828;
  if (!qword_1016A3828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3828);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLFillData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100F928A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFillData.CodingKeys()
{
  return &type metadata for CRLFillData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLFillData.FillType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100F9297CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFillData.FillType()
{
  return &type metadata for CRLFillData.FillType;
}

unint64_t sub_100F929B8()
{
  unint64_t result = qword_1016A3830;
  if (!qword_1016A3830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3830);
  }
  return result;
}

unint64_t sub_100F92A10()
{
  unint64_t result = qword_1016A3838;
  if (!qword_1016A3838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3838);
  }
  return result;
}

unint64_t sub_100F92A68()
{
  unint64_t result = qword_1016A3840;
  if (!qword_1016A3840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3840);
  }
  return result;
}

unint64_t sub_100F92AC0()
{
  unint64_t result = qword_1016A3848;
  if (!qword_1016A3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3848);
  }
  return result;
}

unint64_t sub_100F92B14()
{
  unint64_t result = qword_1016A3850;
  if (!qword_1016A3850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A3850);
  }
  return result;
}

void *sub_100F92B68(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v31 - v11;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)v31 - v19;
  uint64_t v21 = (uint64_t)v2 + *(void *)(v4 + 632);
  swift_beginAccess();
  if (a1)
  {
    v31[1] = v5;
    sub_100522E9C(v21, (uint64_t)v16, (uint64_t *)&unk_101683E10);
    sub_100523288((unint64_t *)&qword_1016737D8, (uint64_t *)&unk_101683E10);
    CRType.copy(renamingReferences:)();
    sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101683E10);
    uint64_t v22 = (uint64_t)v2 + qword_10171CD20;
    swift_beginAccess();
    sub_100F99114(v22, (uint64_t)v8, type metadata accessor for CRLUSDZItemCRDTData);
    sub_100F98244(&qword_10167D308, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100F98868((uint64_t)v8, type metadata accessor for CRLUSDZItemCRDTData);
  }
  else
  {
    sub_100522E9C(v21, (uint64_t)v20, (uint64_t *)&unk_101683E10);
    uint64_t v23 = (uint64_t)v2 + qword_10171CD20;
    swift_beginAccess();
    sub_100F99114(v23, (uint64_t)v12, type metadata accessor for CRLUSDZItemCRDTData);
  }
  uint64_t v24 = v2[4];
  uint64_t v25 = v2[5];
  uint64_t v28 = v2 + 2;
  uint64_t v26 = v2[2];
  uint64_t v27 = v28[1];
  uint64_t v29 = swift_allocObject();
  sub_100F991D0((uint64_t)v12, v29 + qword_10171CD20, type metadata accessor for CRLUSDZItemCRDTData);
  sub_10051B3EC((uint64_t)v20, v29 + *(void *)(*(void *)v29 + 632), (uint64_t *)&unk_101683E10);
  return sub_10068B398(v27, v24, v25, v26);
}

uint64_t sub_100F92ED8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v12[-v8];
  uint64_t v10 = a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap;
  swift_beginAccess();
  if (*(void *)(*(void *)v10 + 16))
  {
    swift_beginAccess();
    sub_1005057FC((uint64_t *)&unk_10167D2A0);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    sub_100F942F4((uint64_t)v9);
    sub_100F98868((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_beginAccess();
    sub_100F99114((uint64_t)v9, (uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
    CRRegister.wrappedValue.setter();
    sub_100F98868((uint64_t)v9, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_endAccess();
  }
  swift_beginAccess();
  sub_100F99CA4(a1);
  return swift_endAccess();
}

uint64_t sub_100F930BC()
{
  qword_10171CD08 = 97;
  unk_10171CD10 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171CD18 = result;
  return result;
}

uint64_t sub_100F930FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLAssetData();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101670198 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = sub_100556B74(v18, (uint64_t)qword_10171CB50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, v19, v18);
  uint64_t v20 = &v17[*(int *)(v13 + 20)];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0xE000000000000000;
  *(void *)&v17[*(int *)(v13 + 24)] = _swiftEmptyDictionarySingleton;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  simd_float4 v25 = matrix_identity_float4x4.columns[3];
  uint64_t v21 = type metadata accessor for CRLUSDZItemCRDTData(0);
  uint64_t v22 = v27;
  *(void *)(v27 + *(int *)(v21 + 20)) = _swiftEmptyDictionarySingleton;
  sub_100F99114((uint64_t)v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100522E9C((uint64_t)v12, (uint64_t)&v4[v1[5]], (uint64_t *)&unk_10167D2B0);
  *(simd_float4 *)&v4[v1[6]] = v25;
  uint64_t v23 = &v4[v1[7]];
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  *(void *)&v4[v1[8]] = _swiftEmptyDictionarySingleton;
  sub_100F98244((unint64_t *)&unk_10167D2C0, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
  CRRegister.init(_:)();
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10167D2B0);
  sub_100F98868((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v22, v8, v26);
}

uint64_t sub_100F93494()
{
  uint64_t v0 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  char v8 = sub_100F93490(v7, v3);
  sub_100F98868((uint64_t)v3, type metadata accessor for CRLUSDZAssetDataStruct);
  sub_100F98868((uint64_t)v7, type metadata accessor for CRLUSDZAssetDataStruct);
  return v8 & 1;
}

uint64_t sub_100F93598()
{
  if (qword_101670278 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10171CD08;
  swift_bridgeObjectRetain();
  swift_retain();
  return v0;
}

uint64_t sub_100F93618(uint64_t a1)
{
  uint64_t v2 = sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100F93688(uint64_t a1)
{
  uint64_t v2 = sub_100F98244(&qword_10167D308, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100F936F4()
{
  sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.actionUndoingDifference(from:)();
}

uint64_t sub_100F93778()
{
  sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.apply(_:)();
}

uint64_t sub_100F937F4()
{
  sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.hasDelta(from:)();
}

uint64_t sub_100F93870()
{
  sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.delta(_:from:)();
}

uint64_t sub_100F93904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100F93980()
{
  sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.merge(delta:)();
}

uint64_t sub_100F939FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100F93A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100F93B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100F93B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100F93C14()
{
  sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100F93C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100F93CFC()
{
  sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.merge(_:)();
}

uint64_t sub_100F93D78()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_100F93DF8()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100F93E88()
{
  return CRStruct_1.init(from:)();
}

uint64_t sub_100F93F08()
{
  return CRStruct_1.encode(to:)();
}

uint64_t sub_100F93F80(uint64_t a1)
{
  uint64_t v2 = sub_100F98244(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);

  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

BOOL sub_100F93FFC(char *a1, char *a2)
{
  return qword_1011BF298[*a1] == qword_1011BF298[*a2];
}

Swift::Int sub_100F94020()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BF298[v1]);
  return Hasher._finalize()();
}

void sub_100F94070()
{
  Hasher._combine(_:)(qword_1011BF298[*v0]);
}

Swift::Int sub_100F940A8()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BF298[v1]);
  return Hasher._finalize()();
}

void sub_100F940F4(void *a1@<X8>)
{
  *a1 = qword_1011BF298[*v1];
}

unint64_t sub_100F9410C()
{
  unint64_t result = 0x7465737361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7341726574736F70;
      break;
    case 2:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 3:
      unint64_t result = 0x676E69646E756F62;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100F941D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100F98E58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100F941FC()
{
  return qword_1011BF298[*v0];
}

void sub_100F94214(void *a1@<X8>)
{
  *a1 = &off_101503280;
}

uint64_t sub_100F94224(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100F98418();
  unint64_t v5 = sub_100F98470();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100F9427C(uint64_t a1)
{
  unint64_t v2 = sub_100F98470();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100F942B8(uint64_t a1)
{
  unint64_t v2 = sub_100F98470();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100F942F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v53 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  char v8 = (char *)&v48 - v7;
  __chkstk_darwin(v9, v10);
  *(void *)&long long v56 = (char *)&v48 - v11;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLAssetData();
  uint64_t v54 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v50 = (uint64_t)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v48 - v22;
  sub_100A68AF0(v1, (uint64_t)v16);
  int v49 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v49(v23, v16, v12);
  uint64_t v24 = *(int *)(v17 + 20);
  uint64_t v26 = *(void *)(v1 + v24);
  uint64_t v25 = *(void *)(v1 + v24 + 8);
  uint64_t v27 = *(void *)(v1 + *(int *)(v17 + 24));
  uint64_t v28 = &v23[v24];
  *(void *)uint64_t v28 = v26;
  *((void *)v28 + 1) = v25;
  uint64_t v29 = *(int *)(v17 + 24);
  id v55 = v23;
  *(void *)&v23[v29] = v27;
  int v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v51 = v13 + 8;
  uint64_t v52 = v12;
  v30(v16, v12);
  int v31 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
  uint64_t v32 = v31[5];
  uint64_t v57 = v1;
  uint64_t v33 = v54;
  sub_100522E9C(v1 + v32, (uint64_t)v8, (uint64_t *)&unk_10167D2B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v8, 1, v17) == 1)
  {
    sub_100522F00((uint64_t)v8, (uint64_t *)&unk_10167D2B0);
    uint64_t v34 = v56;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v33 + 56))(v56, 1, 1, v17);
  }
  else
  {
    uint64_t v35 = v30;
    uint64_t v36 = v50;
    sub_100F991D0((uint64_t)v8, v50, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100A68AF0(v36, (uint64_t)v16);
    uint64_t v38 = v52;
    uint64_t v37 = (uint64_t)v53;
    v49(v53, v16, v52);
    uint64_t v39 = *(int *)(v17 + 20);
    uint64_t v41 = *(void *)(v36 + v39);
    uint64_t v40 = *(void *)(v36 + v39 + 8);
    uint64_t v42 = *(void *)(v36 + *(int *)(v17 + 24));
    uint64_t v43 = (void *)(v37 + v39);
    *uint64_t v43 = v41;
    v43[1] = v40;
    *(void *)(v37 + *(int *)(v17 + 24)) = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35(v16, v38);
    sub_100F98868(v36, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v37, 0, 1, v17);
    uint64_t v34 = v56;
    sub_10051B3EC(v37, v56, (uint64_t *)&unk_10167D2B0);
  }
  uint64_t v44 = v58;
  long long v56 = *(_OWORD *)(v57 + v31[6]);
  uint64_t v45 = *(void *)(v57 + v31[8]);
  sub_100F991D0((uint64_t)v55, v58, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_10051B3EC(v34, v44 + v31[5], (uint64_t *)&unk_10167D2B0);
  *(_OWORD *)(v44 + v31[6]) = v56;
  uint64_t v46 = v44 + v31[7];
  *(void *)uint64_t v46 = 0;
  *(void *)(v46 + 8) = 0;
  *(unsigned char *)(v46 + 16) = 1;
  *(void *)(v44 + v31[8]) = v45;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100F9475C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016A3D40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100F98470();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v14) = 0;
  type metadata accessor for CRLAssetData();
  sub_100F98244(&qword_1016737B0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
    LOBYTE(v14) = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v14 = *(_OWORD *)(v3 + v10[6]);
    char v16 = 2;
    sub_100F9917C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v11 = (long long *)(v3 + v10[7]);
    char v12 = *((unsigned char *)v11 + 16);
    long long v14 = *v11;
    char v15 = v12;
    char v16 = 3;
    sub_10066D898();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    *(void *)&long long v14 = *(void *)(v3 + v10[8]);
    char v16 = 4;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100F94A0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v33 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v34 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1005057FC(&qword_1016A3D30);
  uint64_t v32 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v10);
  char v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
  __n128 v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(__n128))(v7 + 56);
  uint64_t v39 = &v17[*(int *)(v18 + 20)];
  v19(v15);
  uint64_t v20 = &v17[v13[7]];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  void v20[16] = 1;
  uint64_t v37 = v13[8];
  uint64_t v38 = a1;
  *(void *)&v17[v37] = _swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_100F98470();
  uint64_t v35 = v12;
  uint64_t v21 = v40;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v21)
  {
    uint64_t v24 = (uint64_t)v39;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v38);
    sub_100522F00(v24, (uint64_t *)&unk_10167D2B0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v32;
    uint64_t v23 = (uint64_t)v33;
    LOBYTE(v41) = 0;
    sub_100F98244(&qword_1016737A0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100F991D0(v34, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    LOBYTE(v41) = 1;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100557504(v23, (uint64_t)v39);
    char v43 = 2;
    sub_100F990C0();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(_OWORD *)&v17[v13[6]] = v41;
    char v43 = 3;
    sub_10066D844();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v25 = v42;
    *(_OWORD *)uint64_t v20 = v41;
    void v20[16] = v25;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v43 = 4;
    sub_100557304();
    uint64_t v26 = v36;
    uint64_t v27 = v35;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v26);
    uint64_t v28 = v41;
    uint64_t v29 = v37;
    swift_bridgeObjectRelease();
    *(void *)&v17[v29] = v28;
    sub_100F99114((uint64_t)v17, v31, type metadata accessor for CRLUSDZAssetDataStruct);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v38);
    return sub_100F98868((uint64_t)v17, type metadata accessor for CRLUSDZAssetDataStruct);
  }
}

uint64_t sub_100F94F28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100F94A0C(a1, a2);
}

uint64_t sub_100F94F40(void *a1)
{
  return sub_100F9475C(a1);
}

uint64_t sub_100F94F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100F98244(&qword_1016A3D50, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100F94FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100F98244(&qword_1016A3D50, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100F95060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100F98244((unint64_t *)&unk_10167D2C0, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
  uint64_t v7 = sub_100F98244(&qword_1016A3D58, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100F9512C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100F98244(&qword_1016A3D50, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}