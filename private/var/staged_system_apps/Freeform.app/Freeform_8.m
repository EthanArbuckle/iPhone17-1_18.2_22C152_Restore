uint64_t sub_10087D524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v0 = _s13ItemViewModelVMa();
  v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1005057FC(&qword_101696EB0);
  __chkstk_darwin(v5 - 8, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v15 - v11;
  _s11SwiftUIViewVMa(0);
  sub_1005057FC(&qword_101684758);
  State.wrappedValue.getter();
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48);
  if (v13(v12, 1, v0) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertButton", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Stencil Library/CRLStencilLibrary-SwiftUIView.swift", 121, 2, 329, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertButton", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Stencil Library/CRLStencilLibrary-SwiftUIView.swift", 121, 2, 329);
    return sub_100522F00((uint64_t)v12, &qword_101696EB0);
  }
  else
  {
    sub_100522F00((uint64_t)v12, &qword_101696EB0);
    State.wrappedValue.getter();
    if (v13(v8, 1, v0) == 1)
    {
      return sub_100522F00((uint64_t)v8, &qword_101696EB0);
    }
    else
    {
      sub_100881AF8((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(void))_s13ItemViewModelVMa);
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_100AF4124((uint64_t)v4);
        swift_unknownObjectRelease();
      }
      return sub_1008826E4((uint64_t)v4, (uint64_t (*)(void))_s13ItemViewModelVMa);
    }
  }
}

uint64_t sub_10087D7EC@<X0>(uint64_t a1@<X8>)
{
  return sub_10087D8D4(&qword_10166F378, a1);
}

uint64_t sub_10087D814()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    _s11SwiftUIViewVMa(0);
    sub_1005057FC(&qword_101684970);
    State.wrappedValue.getter();
    sub_100AF467C(v1, v2);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10087D8AC@<X0>(uint64_t a1@<X8>)
{
  return sub_10087D8D4(&qword_10166F390, a1);
}

uint64_t sub_10087D8D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

BOOL sub_10087D964()
{
  if (*(unsigned char *)(v0 + 8) != 1) {
    return 0;
  }
  _s11SwiftUIViewVMa(0);
  sub_1005057FC(&qword_101684970);
  State.wrappedValue.getter();
  swift_bridgeObjectRelease();
  uint64_t v1 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v1 = *(void *)v3 & 0xFFFFFFFFFFFFLL;
  }
  return v1 != 0;
}

unint64_t sub_10087D9FC()
{
  unint64_t result = qword_101684880;
  if (!qword_101684880)
  {
    sub_100522D34(&qword_101684870);
    sub_100523288(&qword_101684888, &qword_101684868);
    sub_100523288(&qword_101684890, &qword_101684850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684880);
  }
  return result;
}

uint64_t sub_10087DAC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1008797DC(*(void *)(v1 + 16), a1);
}

uint64_t sub_10087DAC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100879ADC(*(void *)(v1 + 16), a1);
}

uint64_t sub_10087DAE4()
{
  uint64_t result = static Font.caption.getter();
  qword_1016845B8 = result;
  return result;
}

uint64_t sub_10087DB04()
{
  uint64_t result = static Font.Weight.medium.getter();
  qword_1016845C0 = v1;
  return result;
}

uint64_t sub_10087DB24()
{
  uint64_t result = static Color.secondary.getter();
  qword_1016845C8 = result;
  return result;
}

double sub_10087DB44()
{
  double result = 0.0;
  xmmword_1016845D0 = xmmword_101193230;
  *(_OWORD *)&qword_1016845E0 = xmmword_101193240;
  return result;
}

uint64_t sub_10087DB64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_1016848E0);
  __chkstk_darwin(v4 - 8, v5);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v9);
  v11 = &v21[-v10];
  __chkstk_darwin(v12, v13);
  v15 = &v21[-v14];
  *(void *)v11 = static HorizontalAlignment.center.getter();
  *((void *)v11 + 1) = 0;
  v11[16] = 0;
  uint64_t v16 = sub_1005057FC(&qword_1016848E8);
  sub_10087DDF8(a1, (uint64_t)&v11[*(int *)(v16 + 44)]);
  sub_10051B3EC((uint64_t)v11, (uint64_t)v15, &qword_1016848E0);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    uint64_t v17 = static HorizontalAlignment.center.getter();
    sub_10087F750(a1, (uint64_t)&v37);
    LOBYTE(v23[0]) = 0;
    v22[0] = v38;
    v21[8] = v44;
    v21[0] = v46;
    v24[0] = v17;
    v24[1] = 0;
    char v25 = 0;
    uint64_t v26 = v37;
    char v27 = v38;
    uint64_t v28 = v39;
    uint64_t v29 = v40;
    long long v30 = v41;
    long long v31 = v42;
    uint64_t v32 = v43;
    char v33 = v44;
    uint64_t v34 = v45;
    char v35 = v46;
    long long v36 = v47;
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v24, v18);
  }
  else
  {
    sub_10087E810((uint64_t)v24);
  }
  sub_10051B3EC((uint64_t)v24, (uint64_t)&v37, &qword_1016848F0);
  sub_100522E9C((uint64_t)v15, (uint64_t)v7, &qword_1016848E0);
  sub_10051B3EC((uint64_t)&v37, (uint64_t)v22, &qword_1016848F0);
  sub_100522E9C((uint64_t)v7, a2, &qword_1016848E0);
  uint64_t v19 = a2 + *(int *)(sub_1005057FC(&qword_1016848F8) + 48);
  sub_10051B3EC((uint64_t)v22, (uint64_t)v23, &qword_1016848F0);
  sub_10051B3EC((uint64_t)v23, v19, &qword_1016848F0);
  sub_10087E87C(v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10087E82C);
  sub_100522F00((uint64_t)v15, &qword_1016848E0);
  sub_10051B3EC((uint64_t)v22, (uint64_t)v24, &qword_1016848F0);
  sub_10087E87C(v24, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10087E8E0);
  return sub_100522F00((uint64_t)v7, &qword_1016848E0);
}

uint64_t sub_10087DDF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v89 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v91 = *(void *)(v89 - 8);
  __chkstk_darwin(v89, v4);
  v90 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s11SwiftUIViewVMa(0);
  uint64_t v86 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v87 = v8;
  uint64_t v88 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1005057FC(&qword_101684988);
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96, v9);
  v92 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_1005057FC(&qword_101684990);
  uint64_t v94 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v11);
  v109 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  v93 = (char *)&v85 - v15;
  __chkstk_darwin(v16, v17);
  v108 = (char *)&v85 - v18;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v110 = 0;
  uint64_t KeyPath = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  uint64_t v113 = 0;
  uint64_t v98 = 0;
  BOOL v29 = *(unsigned char *)(a1 + 8) == 1;
  v99 = (void (*)(char *, char *, uint64_t))a1;
  if (v29)
  {
    if (qword_10166F388 != -1) {
      swift_once();
    }
    v114 = (uint64_t (*)(uint64_t))qword_101684528;
    v115 = (void *)unk_101684530;
    sub_10052E310();
    swift_bridgeObjectRetain();
    uint64_t v30 = Text.init<A>(_:)();
    uint64_t v32 = v31;
    char v34 = v33;
    if (qword_10166F3D8 != -1) {
      swift_once();
    }
    char v35 = v34 & 1;
    uint64_t v36 = Text.font(_:)();
    uint64_t v38 = v37;
    char v40 = v39;
    sub_1006A7D28(v30, v32, v35);
    swift_bridgeObjectRelease();
    if (qword_10166F3E0 != -1) {
      swift_once();
    }
    uint64_t v19 = Text.fontWeight(_:)();
    uint64_t v20 = v41;
    char v43 = v42;
    uint64_t v110 = v44;
    sub_1006A7D28(v36, v38, v40 & 1);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    a1 = (uint64_t)v99;
    if (qword_10166F3E8 != -1) {
      swift_once();
    }
    uint64_t v21 = v43 & 1;
    uint64_t v25 = qword_1016845C8;
    uint64_t v24 = swift_getKeyPath();
    uint64_t v45 = qword_10166F3F0;
    swift_retain();
    if (v45 != -1) {
      swift_once();
    }
    uint64_t v28 = *((void *)&xmmword_1016845D0 + 1);
    uint64_t v27 = xmmword_1016845D0;
    uint64_t v113 = qword_1016845E0;
    uint64_t v98 = unk_1016845E8;
    uint64_t v26 = static Edge.Set.all.getter();
    uint64_t v23 = 1;
  }
  uint64_t v106 = v20;
  uint64_t v100 = v26;
  uint64_t v101 = v23;
  uint64_t v103 = v27;
  uint64_t v107 = v19;
  uint64_t v46 = v88;
  sub_100881118(a1, v88, _s11SwiftUIViewVMa);
  unint64_t v47 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  uint64_t v48 = swift_allocObject();
  sub_100881AF8(v46, v48 + v47, _s11SwiftUIViewVMa);
  v114 = sub_1008816E0;
  v115 = (void *)v48;
  char v49 = *(unsigned char *)(a1 + 8);
  uint64_t v104 = v25;
  uint64_t v105 = KeyPath;
  uint64_t v111 = v24;
  uint64_t v112 = v21;
  uint64_t v102 = v28;
  if (v49)
  {
    if (qword_10166F380 != -1) {
      swift_once();
    }
    uint64_t v50 = qword_101684518;
    uint64_t v51 = swift_bridgeObjectRetain();
    uint64_t v118 = v50;
    uint64_t v119 = v51;
    v52 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.inline(_:);
  }
  else
  {
    if (qword_10166F370 != -1) {
      swift_once();
    }
    uint64_t v53 = qword_1016844F8;
    uint64_t v54 = swift_bridgeObjectRetain();
    uint64_t v118 = v53;
    uint64_t v119 = v54;
    v52 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.large(_:);
  }
  uint64_t v55 = v91;
  v56 = v90;
  uint64_t v57 = v89;
  (*(void (**)(char *, void, uint64_t))(v91 + 104))(v90, *v52, v89);
  uint64_t v58 = sub_1005057FC(&qword_101684998);
  uint64_t v59 = sub_100523288(&qword_1016849A0, &qword_101684998);
  unint64_t v60 = sub_10052E310();
  v61 = v92;
  View.navigationBarTitle<A>(_:displayMode:)();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  swift_bridgeObjectRelease();
  uint64_t v62 = swift_release();
  __chkstk_darwin(v62, v63);
  sub_1005057FC(&qword_1016849A8);
  v114 = (uint64_t (*)(uint64_t))v58;
  v115 = &type metadata for String;
  uint64_t v116 = v59;
  unint64_t v117 = v60;
  swift_getOpaqueTypeConformance2();
  uint64_t v64 = sub_100522D34(&qword_1016849B0);
  unint64_t v65 = sub_100881700();
  v114 = (uint64_t (*)(uint64_t))v64;
  v115 = (void *)v65;
  swift_getOpaqueTypeConformance2();
  v66 = v93;
  uint64_t v67 = v96;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v61, v67);
  uint64_t v68 = v94;
  v69 = v108;
  uint64_t v70 = v97;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v108, v66, v97);
  v99 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v71 = v109;
  v99(v109, v69, v70);
  uint64_t v72 = v106;
  *(void *)a2 = v107;
  *(void *)(a2 + 8) = v72;
  uint64_t v73 = v113;
  uint64_t v74 = v110;
  *(void *)(a2 + 16) = v112;
  *(void *)(a2 + 24) = v74;
  uint64_t v75 = v101;
  uint64_t v76 = v102;
  *(void *)(a2 + 32) = v105;
  *(void *)(a2 + 40) = v75;
  uint64_t v78 = v103;
  uint64_t v77 = v104;
  *(void *)(a2 + 48) = v111;
  *(void *)(a2 + 56) = v77;
  *(void *)(a2 + 64) = v100;
  *(void *)(a2 + 72) = v78;
  *(void *)(a2 + 80) = v76;
  *(void *)(a2 + 88) = v73;
  uint64_t v113 = v73;
  *(void *)(a2 + 96) = v98;
  *(unsigned char *)(a2 + 104) = 0;
  uint64_t v79 = sub_1005057FC(&qword_1016849E0);
  v99((char *)(a2 + *(int *)(v79 + 48)), v71, v70);
  uint64_t v81 = v106;
  uint64_t v80 = v107;
  uint64_t v82 = v110;
  sub_100881800(v107, v106, v112, v110);
  v83 = *(void (**)(char *, uint64_t))(v68 + 8);
  v83(v108, v70);
  v83(v109, v70);
  return sub_100881870(v80, v81, v112, v82);
}

double sub_10087E810(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_10087E82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_10087E87C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10087E8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10087E930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v50 = sub_1005057FC(&qword_1016849E8);
  __chkstk_darwin(v50, v3);
  char v49 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1005057FC(&qword_1016849D8);
  uint64_t v5 = *(void *)(v56 - 8);
  __chkstk_darwin(v56, v6);
  v52 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016849F0);
  uint64_t v53 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v51 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1005057FC(&qword_1016849F8);
  uint64_t v11 = *(void *)(v55 - 8);
  __chkstk_darwin(v55, v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v17 = sub_1005057FC(&qword_1016849C0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1005057FC(&qword_1016849B0);
  __chkstk_darwin(v54, v22);
  uint64_t v24 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v25 = static ToolbarItemPlacement.cancellationAction.getter();
    uint64_t v46 = (uint64_t)&v46;
    __chkstk_darwin(v25, v26);
    *(&v46 - 2) = a1;
    sub_1005057FC(&qword_101684A00);
    uint64_t v48 = v5;
    uint64_t v27 = sub_100522D34(&qword_10167A598);
    uint64_t v47 = v17;
    uint64_t v28 = v8;
    uint64_t v29 = v27;
    uint64_t v30 = sub_100523288(&qword_10167A5A0, &qword_10167A598);
    uint64_t v58 = v29;
    uint64_t v59 = v30;
    swift_getOpaqueTypeConformance2();
    uint64_t v31 = v51;
    ToolbarItemGroup.init(placement:content:)();
    uint64_t v32 = static ToolbarItemPlacement.confirmationAction.getter();
    __chkstk_darwin(v32, v33);
    *(&v46 - 2) = a1;
    sub_1005057FC(&qword_101684A08);
    sub_1008819A0();
    ToolbarItemGroup.init(placement:content:)();
    char v34 = &v49[*(int *)(v50 + 48)];
    uint64_t v35 = v53;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v49, v31, v28);
    uint64_t v36 = v34;
    uint64_t v37 = v47;
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v36, v21, v47);
    uint64_t v38 = v52;
    TupleToolbarContent.init(_:)();
    uint64_t v39 = sub_100523288(&qword_1016849C8, &qword_1016849C0);
    uint64_t v58 = v37;
    uint64_t v59 = v39;
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016849D0, &qword_1016849D8);
    uint64_t v40 = v56;
    static ToolbarContentBuilder.buildEither<A, B>(second:)();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v40);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v37);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v31, v28);
  }
  else
  {
    uint64_t v41 = static ToolbarItemPlacement.confirmationAction.getter();
    __chkstk_darwin(v41, v42);
    *(&v46 - 2) = a1;
    sub_1005057FC(&qword_101684A08);
    sub_1008819A0();
    ToolbarItemGroup.init(placement:content:)();
    uint64_t v43 = sub_100523288(&qword_1016849C8, &qword_1016849C0);
    static ToolbarContentBuilder.buildBlock<A>(_:)();
    uint64_t v58 = v17;
    uint64_t v59 = v43;
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016849D0, &qword_1016849D8);
    uint64_t v44 = v55;
    static ToolbarContentBuilder.buildEither<A, B>(first:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v44);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  }
  sub_100881700();
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return sub_100522F00((uint64_t)v24, &qword_1016849B0);
}

uint64_t sub_10087F084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v20 = type metadata accessor for KeyboardShortcut();
  uint64_t v3 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s11SwiftUIViewVMa(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8, v10);
  uint64_t v11 = sub_1005057FC(&qword_10167A598);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100881118(a1, (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), _s11SwiftUIViewVMa);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  sub_100881AF8((uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, _s11SwiftUIViewVMa);
  Button.init(action:label:)();
  static KeyboardShortcut.cancelAction.getter();
  sub_100523288(&qword_10167A5A0, &qword_10167A598);
  View.keyboardShortcut(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_10087F358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v29[1] = a1;
  uint64_t v33 = a2;
  uint64_t v3 = type metadata accessor for KeyboardShortcut();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s11SwiftUIViewVMa(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8, v10);
  uint64_t v11 = sub_1005057FC(&qword_10167A598);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_101684A00);
  uint64_t v16 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v17);
  uint64_t v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100881118(a1, (uint64_t)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), _s11SwiftUIViewVMa);
  unint64_t v20 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = swift_allocObject();
  sub_100881AF8((uint64_t)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, _s11SwiftUIViewVMa);
  Button.init(action:label:)();
  static KeyboardShortcut.defaultAction.getter();
  sub_100523288(&qword_10167A5A0, &qword_10167A598);
  View.keyboardShortcut(_:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  BOOL v22 = sub_10087D964();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = !v22;
  uint64_t v25 = v33;
  uint64_t v26 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v33, v19, v30);
  uint64_t v27 = (uint64_t *)(v25 + *(int *)(sub_1005057FC(&qword_101684A08) + 36));
  *uint64_t v27 = KeyPath;
  v27[1] = (uint64_t)sub_1008101FC;
  v27[2] = v24;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v26);
}

double sub_10087F750@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = _s11SwiftUIViewVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8, v7);
  uint64_t v9 = a1 + *(int *)(v8 + 60);
  uint64_t v10 = *(void *)(v9 + 16);
  long long v22 = *(_OWORD *)v9;
  uint64_t v23 = v10;
  sub_1005057FC(&qword_101684900);
  State.projectedValue.getter();
  long long v11 = v24;
  uint64_t v12 = v25;
  uint64_t v13 = v26;
  sub_100881118(a1, (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), _s11SwiftUIViewVMa);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  sub_100881AF8((uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, _s11SwiftUIViewVMa);
  uint64_t v16 = *(void *)(v9 + 16);
  long long v24 = *(_OWORD *)v9;
  uint64_t v25 = v16;
  State.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v17 = v24;
  char v18 = BYTE8(v24);
  uint64_t v19 = v25;
  char v20 = v26;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  *(_OWORD *)(a2 + 16) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = sub_10087FA20;
  *(void *)(a2 + 56) = v15;
  *(void *)(a2 + 64) = v17;
  *(unsigned char *)(a2 + 72) = v18;
  *(void *)(a2 + 80) = v19;
  *(unsigned char *)(a2 + 88) = v20;
  double result = *(double *)&v27;
  *(_OWORD *)(a2 + 96) = v27;
  return result;
}

__n128 sub_10087F94C()
{
  __asm { FMOV            V0.2D, #8.0 }
  xmmword_1016845F0 = (__int128)result;
  *(__n128 *)&qword_101684600 = result;
  return result;
}

__n128 sub_10087F960()
{
  __asm { FMOV            V0.2D, #2.0 }
  xmmword_101684610 = (__int128)result;
  *(__n128 *)&qword_101684620 = result;
  return result;
}

void sub_10087F974()
{
  qword_101684630 = 0x4008000000000000;
}

uint64_t sub_10087F984()
{
  uint64_t v0 = type metadata accessor for Material();
  sub_100568B28(v0, qword_101684638);
  sub_100556B74(v0, (uint64_t)qword_101684638);
  return static Material.thin.getter();
}

uint64_t sub_10087F9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_1005057FC(&qword_101684908);
  return sub_10087FA38(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10087FA20()
{
  return sub_100881568((uint64_t (*)(uint64_t))sub_10087F9D0);
}

uint64_t sub_10087FA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_101684910);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1005057FC(&qword_101684918);
  __chkstk_darwin(v53, v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101684920);
  __chkstk_darwin(v11 - 8, v12);
  unint64_t v14 = (uint64_t *)((char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_1005057FC(&qword_101684928);
  __chkstk_darwin(v54, v15);
  uint64_t v57 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  char v20 = (char *)&v44 - v19;
  id v21 = [self separatorColor];
  uint64_t v56 = Color.init(uiColor:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v22 = v58;
  uint64_t v23 = v59;
  uint64_t v24 = v60;
  uint64_t v55 = v61;
  uint64_t v25 = v62;
  uint64_t v52 = static Alignment.center.getter();
  uint64_t v51 = v26;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v50 = v63;
  int v49 = v64;
  uint64_t v48 = v65;
  int v47 = v66;
  uint64_t v46 = v67;
  uint64_t v45 = v68;
  *unint64_t v14 = static Alignment.center.getter();
  v14[1] = v27;
  uint64_t v28 = (uint64_t)v14 + *(int *)(sub_1005057FC(&qword_101684930) + 44);
  *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v29 = sub_1005057FC(&qword_101684938);
  sub_10087FF5C(a1, (uint64_t)&v7[*(int *)(v29 + 44)]);
  if (qword_10166F3F8 != -1) {
    swift_once();
  }
  long long v44 = xmmword_1016845F0;
  uint64_t v31 = qword_101684600;
  uint64_t v30 = unk_101684608;
  char v32 = static Edge.Set.all.getter();
  sub_100522E9C((uint64_t)v7, (uint64_t)v10, &qword_101684910);
  uint64_t v33 = &v10[*(int *)(v53 + 36)];
  *uint64_t v33 = v32;
  *(_OWORD *)(v33 + 8) = v44;
  *((void *)v33 + 3) = v31;
  *((void *)v33 + 4) = v30;
  v33[40] = 0;
  sub_100522F00((uint64_t)v7, &qword_101684910);
  sub_10051B3EC((uint64_t)v10, v28, &qword_101684918);
  if (qword_10166F410 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Material();
  uint64_t v35 = sub_100556B74(v34, (uint64_t)qword_101684638);
  char v36 = static Edge.Set.all.getter();
  uint64_t v37 = &v20[*(int *)(v54 + 36)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v37, v35, v34);
  v37[*(int *)(sub_1005057FC(&qword_101684940) + 36)] = v36;
  sub_10051B3EC((uint64_t)v14, (uint64_t)v20, &qword_101684920);
  uint64_t v38 = v57;
  sub_100522E9C((uint64_t)v20, v57, &qword_101684928);
  *(void *)a2 = v22;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = v24;
  uint64_t v39 = v56;
  *(void *)(a2 + 24) = v55;
  *(void *)(a2 + 32) = v25;
  *(void *)(a2 + 40) = v39;
  *(_WORD *)(a2 + 48) = 256;
  uint64_t v40 = v51;
  *(void *)(a2 + 56) = v52;
  *(void *)(a2 + 64) = v40;
  *(void *)(a2 + 72) = v50;
  *(unsigned char *)(a2 + 80) = v49;
  *(void *)(a2 + 88) = v48;
  *(unsigned char *)(a2 + 96) = v47;
  uint64_t v41 = v45;
  *(void *)(a2 + 104) = v46;
  *(void *)(a2 + 112) = v41;
  uint64_t v42 = sub_1005057FC(&qword_101684948);
  sub_100522E9C(v38, a2 + *(int *)(v42 + 48), &qword_101684928);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100522F00((uint64_t)v20, &qword_101684928);
  sub_100522F00(v38, &qword_101684928);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10087FF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v48 = _s11SwiftUIViewVMa(0);
  uint64_t v49 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v3);
  uint64_t v50 = v4;
  uint64_t v52 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s13ThumbnailViewVMa();
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101684950);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1005057FC(&qword_101684958);
  __chkstk_darwin(v47, v13);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v46 - v18;
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v46 - v22;
  uint64_t v51 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((void)v61) {
    uint64_t v24 = Image.init(uiImage:)();
  }
  else {
    uint64_t v24 = 0;
  }
  if (qword_10166F408 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_101684630;
  if (qword_10166F400 != -1) {
    swift_once();
  }
  long long v46 = xmmword_101684610;
  uint64_t v26 = qword_101684620;
  uint64_t v27 = unk_101684628;
  static Color.clear.getter();
  static ShadowStyle.drop(color:radius:x:y:)();
  swift_release();
  *(void *)uint64_t v8 = v24;
  v8[8] = 0;
  *((void *)v8 + 2) = v25;
  *(_OWORD *)(v8 + 24) = v46;
  *((void *)v8 + 5) = v26;
  *((void *)v8 + 6) = v27;
  sub_100881118((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))_s13ThumbnailViewVMa);
  uint64_t v28 = &v12[*(int *)(v9 + 36)];
  *(void *)uint64_t v28 = 0x3FFC71C71C71C71CLL;
  *((_WORD *)v28 + 4) = 0;
  sub_1008826E4((uint64_t)v8, (uint64_t (*)(void))_s13ThumbnailViewVMa);
  uint64_t v29 = v51;
  uint64_t v30 = (void *)(v51 + *(int *)(v48 + 48));
  uint64_t v32 = v30[1];
  uint64_t v33 = v30[2];
  *(void *)&long long v61 = *v30;
  uint64_t v31 = v61;
  *((void *)&v61 + 1) = v32;
  *(void *)&long long v62 = v33;
  sub_1005057FC(&qword_101684900);
  State.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100522E9C((uint64_t)v12, (uint64_t)v19, &qword_101684950);
  uint64_t v34 = &v19[*(int *)(v47 + 36)];
  long long v35 = v62;
  *(_OWORD *)uint64_t v34 = v61;
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v63;
  sub_100522F00((uint64_t)v12, &qword_101684950);
  sub_10051B3EC((uint64_t)v19, (uint64_t)v23, &qword_101684958);
  uint64_t v54 = v31;
  uint64_t v55 = v32;
  uint64_t v56 = v33;
  State.projectedValue.getter();
  uint64_t v36 = v57;
  uint64_t v37 = v58;
  uint64_t v38 = v59;
  uint64_t v39 = v60;
  uint64_t v40 = v52;
  sub_100881118(v29, v52, _s11SwiftUIViewVMa);
  unint64_t v41 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v42 = swift_allocObject();
  sub_100881AF8(v40, v42 + v41, _s11SwiftUIViewVMa);
  sub_100522E9C((uint64_t)v23, (uint64_t)v15, &qword_101684958);
  uint64_t v43 = v53;
  sub_100522E9C((uint64_t)v15, v53, &qword_101684958);
  long long v44 = (void *)(v43 + *(int *)(sub_1005057FC(&qword_101684960) + 48));
  *long long v44 = v36;
  v44[1] = v37;
  v44[2] = v38;
  v44[3] = v39;
  v44[4] = sub_100881550;
  v44[5] = v42;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100522F00((uint64_t)v23, &qword_101684958);
  swift_release();
  swift_release();
  swift_release();
  return sub_100522F00((uint64_t)v15, &qword_101684958);
}

uint64_t sub_1008804F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = type metadata accessor for RoundedBorderTextFieldStyle();
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101684968);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166F398 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_101684548;
  uint64_t v13 = unk_101684550;
  uint64_t v14 = (long long *)(a1 + *(int *)(_s11SwiftUIViewVMa(0) + 36));
  long long v15 = *v14;
  uint64_t v16 = *((void *)v14 + 2);
  long long v22 = v15;
  uint64_t v23 = v16;
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_101684970);
  State.projectedValue.getter();
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  sub_10052E310();
  TextField<>.init<A>(_:text:onEditingChanged:onCommit:)();
  RoundedBorderTextFieldStyle.init()();
  sub_100523288(&qword_101684978, &qword_101684968);
  sub_100881DC8(&qword_101684980, (void (*)(uint64_t))&type metadata accessor for RoundedBorderTextFieldStyle);
  uint64_t v17 = v21;
  View.textFieldStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1008807E0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  sub_100522D34(&qword_101684C88);
  type metadata accessor for ModifiedContent();
  uint64_t v36 = *(void *)(a1 + 24);
  uint64_t v5 = v36;
  uint64_t v37 = sub_100523288(&qword_101684C90, &qword_101684C88);
  uint64_t v29 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  swift_getWitnessTable();
  uint64_t v6 = type metadata accessor for ZStack();
  uint64_t v28 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v27 - v8;
  sub_100522D34(&qword_101684C98);
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v27 = (char *)&v27 - v17;
  uint64_t v31 = v4;
  uint64_t v32 = v5;
  uint64_t v33 = v2;
  static Alignment.center.getter();
  ZStack.init(alignment:content:)();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v4;
  *(void *)(v18 + 24) = v5;
  long long v19 = v2[1];
  long long v20 = v2[2];
  *(_OWORD *)(v18 + 32) = *v2;
  *(_OWORD *)(v18 + 48) = v19;
  *(_OWORD *)(v18 + 64) = v20;
  uint64_t v38 = *(void *)v2;
  sub_1007BA698((uint64_t)&v38);
  swift_retain();
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100883248();
  sub_100881DC8(&qword_101684CA8, type metadata accessor for CGSize);
  View.onPreferenceChange<A>(_:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v6);
  uint64_t v22 = sub_100523288(&qword_101684CB0, &qword_101684C98);
  uint64_t v34 = WitnessTable;
  uint64_t v35 = v22;
  swift_getWitnessTable();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v24 = v27;
  v23(v27, v14, v10);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25(v14, v10);
  v23(v30, v24, v10);
  return ((uint64_t (*)(char *, uint64_t))v25)(v24, v10);
}

uint64_t sub_100880BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v24 = *(void *)(a2 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522D34(&qword_101684C88);
  uint64_t v8 = type metadata accessor for ModifiedContent();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = (char *)&v23 - v16;
  (*(void (**)(__n128))(a1 + 32))(v15);
  uint64_t v29 = sub_100880E84;
  uint64_t v30 = 0;
  static Alignment.center.getter();
  sub_1005057FC(&qword_101684CC0);
  sub_100523288(&qword_101684CC8, &qword_101684CC0);
  uint64_t v18 = v25;
  View.background<A>(_:alignment:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, a2);
  uint64_t v19 = sub_100523288(&qword_101684C90, &qword_101684C88);
  uint64_t v27 = v18;
  uint64_t v28 = v19;
  swift_getWitnessTable();
  long long v20 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v20(v17, v12, v8);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v12, v8);
  v20(v26, v17, v8);
  return ((uint64_t (*)(char *, uint64_t))v21)(v17, v8);
}

uint64_t sub_100880E84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = static Color.clear.getter();
  uint64_t result = GeometryProxy.size.getter();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_100880EC4()
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_100880F30@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1008807E0(a1, a2);
}

void sub_100880F6C()
{
  xmmword_101684650 = 0uLL;
}

double sub_100880F7C@<D0>(_OWORD *a1@<X8>)
{
  if (qword_10166F418 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_101684650;
  *a1 = xmmword_101684650;
  return result;
}

void *sub_100880FDC(uint64_t a1, void *(*a2)(uint64_t *__return_ptr))
{
  return a2(&v3);
}

uint64_t sub_100881018@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10088109C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_100881118(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100881184()
{
  uint64_t v1 = (int *)_s11SwiftUIViewVMa(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();
  uint64_t v6 = v0 + v3 + v1[8];
  sub_1005057FC(&qword_101684750);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = v5 + v1[10];
  uint64_t v9 = (int *)_s13ItemViewModelVMa();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v9 - 1) + 48))(v8, 1, v9))
  {
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v23 = v4;
    uint64_t v11 = (v2 + 16) & ~v2;
    uint64_t v12 = v8 + v9[5];
    uint64_t v24 = v2;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    uint64_t v15 = v12;
    uint64_t v3 = v11;
    uint64_t v4 = v23;
    v14(v15, v13);
    uint64_t v16 = v13;
    uint64_t v2 = v24;
    v14(v8 + v9[6], v16);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1005057FC(&qword_101684758);
  swift_release();
  uint64_t v17 = v5 + v1[11];
  uint64_t v18 = type metadata accessor for NavigationSplitViewVisibility();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  sub_1005057FC(&qword_101684760);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v19 = v5 + v1[14];
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  sub_1005057FC(&qword_101684768);
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100881550()
{
  return sub_100881568((uint64_t (*)(uint64_t))sub_1008804F8);
}

uint64_t sub_100881568(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(_s11SwiftUIViewVMa(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1008815EC@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_100881600()
{
  return sub_100881664();
}

uint64_t sub_100881614@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_100881628()
{
  return sub_100881664();
}

uint64_t sub_10088163C@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_100881650()
{
  return sub_100881664();
}

uint64_t sub_100881664()
{
  return static Published.subscript.setter();
}

uint64_t sub_1008816E0(uint64_t a1)
{
  return sub_100881E9C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10087AD4C);
}

uint64_t sub_1008816F8@<X0>(uint64_t a1@<X8>)
{
  return sub_10087E930(*(void *)(v1 + 16), a1);
}

unint64_t sub_100881700()
{
  unint64_t result = qword_1016849B8;
  if (!qword_1016849B8)
  {
    sub_100522D34(&qword_1016849B0);
    sub_100522D34(&qword_1016849C0);
    sub_100523288(&qword_1016849C8, &qword_1016849C0);
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_1016849D0, &qword_1016849D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016849B8);
  }
  return result;
}

uint64_t sub_100881800(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10073F0E0(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100881870(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1006A7D28(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1008818E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10088190C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100881938()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100881960()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100881990@<X0>(uint64_t a1@<X8>)
{
  return sub_10087F084(*(void *)(v1 + 16), a1);
}

uint64_t sub_100881998@<X0>(uint64_t a1@<X8>)
{
  return sub_10087F358(*(void *)(v1 + 16), a1);
}

unint64_t sub_1008819A0()
{
  unint64_t result = qword_101684A10;
  if (!qword_101684A10)
  {
    sub_100522D34(&qword_101684A08);
    sub_100522D34(&qword_10167A598);
    sub_100523288(&qword_10167A5A0, &qword_10167A598);
    swift_getOpaqueTypeConformance2();
    sub_100523288(&qword_101682C18, &qword_101682C20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684A10);
  }
  return result;
}

uint64_t sub_100881AA0@<X0>(uint64_t a1@<X8>)
{
  return sub_10087D064(a1);
}

uint64_t sub_100881AC8()
{
  return sub_100881B7C((uint64_t (*)(uint64_t))sub_10087D524);
}

uint64_t sub_100881AE8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100881AF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100881B64()
{
  return sub_100881B7C((uint64_t (*)(uint64_t))sub_10087D814);
}

uint64_t sub_100881B7C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(_s11SwiftUIViewVMa(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100881BF0()
{
  return _swift_deallocObject(v0, 17, 7);
}

void *sub_100881C08()
{
  return sub_10087D004();
}

uint64_t sub_100881C5C@<X0>(uint64_t a1@<X8>)
{
  return sub_10087B0AC(*(void *)(v1 + 16), a1);
}

unint64_t sub_100881C64()
{
  unint64_t result = qword_101684A30;
  if (!qword_101684A30)
  {
    sub_100522D34(&qword_101684A28);
    sub_100881D04();
    sub_100523288(&qword_101684A58, &qword_101684A60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684A30);
  }
  return result;
}

unint64_t sub_100881D04()
{
  unint64_t result = qword_101684A38;
  if (!qword_101684A38)
  {
    sub_100522D34(&qword_101684A40);
    sub_100523288(&qword_101684A48, &qword_101684A50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684A38);
  }
  return result;
}

uint64_t sub_100881DA8()
{
  return sub_100881B7C((uint64_t (*)(uint64_t))sub_10087CEE8);
}

uint64_t sub_100881DC0@<X0>(char *a1@<X8>)
{
  return sub_10087B864(*(void *)(v1 + 16), a1);
}

uint64_t sub_100881DC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100881E10@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_100881E38()
{
  return sub_100881664();
}

uint64_t sub_100881E60(uint64_t a1)
{
  return sub_10087BD9C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100881E84(uint64_t a1)
{
  return sub_100881E9C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10087C450);
}

uint64_t sub_100881E9C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(_s11SwiftUIViewVMa(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_100881F30()
{
  unint64_t result = qword_101684AB8;
  if (!qword_101684AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684AB8);
  }
  return result;
}

uint64_t sub_100881F84()
{
  uint64_t v1 = (int *)_s11SwiftUIViewVMa(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = (int *)_s13ItemViewModelVMa();
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v32 = *(void *)(v6 + 64);
  uint64_t v8 = v0 + v3;
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();
  uint64_t v9 = v0 + v3 + v1[8];
  sub_1005057FC(&qword_101684750);
  uint64_t v33 = v7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = v8 + v1[10];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(v6 + 48))(v11, 1, v5))
  {
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    uint64_t v13 = v11 + v5[5];
    uint64_t v14 = type metadata accessor for Date();
    uint64_t v31 = v2;
    uint64_t v15 = v4;
    uint64_t v16 = v3;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    v17(v13, v14);
    v17(v11 + v5[6], v14);
    uint64_t v3 = v16;
    uint64_t v4 = v15;
    uint64_t v2 = v31;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1005057FC(&qword_101684758);
  swift_release();
  uint64_t v18 = v8 + v1[11];
  uint64_t v19 = type metadata accessor for NavigationSplitViewVisibility();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  sub_1005057FC(&qword_101684760);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v20 = v8 + v1[14];
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  uint64_t v23 = v2 | v33 | 7;
  uint64_t v24 = (v3 + v4 + v33) & ~v33;
  uint64_t v25 = v24 + v32;
  sub_1005057FC(&qword_101684768);
  swift_release();
  uint64_t v26 = v0 + v24;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0 + v24, v21);
  uint64_t v27 = v0 + v24 + v5[5];
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8);
  v29(v27, v28);
  v29(v26 + v5[6], v28);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v25, v23);
}

uint64_t sub_100882458()
{
  uint64_t v1 = *(void *)(_s11SwiftUIViewVMa(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(_s13ItemViewModelVMa() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_10087CCF0(v0 + v2, v5);
}

uint64_t sub_100882524()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10088255C@<X0>(char *a1@<X8>)
{
  return sub_10087A338(a1);
}

uint64_t sub_100882564()
{
  return sub_10087A990(*(void *)(v0 + 16));
}

uint64_t sub_10088256C()
{
  return sub_10087AB58(*(void *)(v0 + 16));
}

uint64_t sub_100882578@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_1008825A0()
{
  return sub_100881664();
}

uint64_t _s11SwiftUIViewV15SidebarListItemVMa(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101684C28);
}

uint64_t sub_1008825E8()
{
  return sub_10087A7D8();
}

unint64_t sub_1008825F0()
{
  unint64_t result = qword_101684B30;
  if (!qword_101684B30)
  {
    sub_100522D34(&qword_101684B10);
    sub_100881DC8(&qword_101684B28, (void (*)(uint64_t))_s11SwiftUIViewV15SidebarListItemVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684B30);
  }
  return result;
}

uint64_t sub_100882694@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_1008826BC()
{
  return sub_100881664();
}

uint64_t sub_1008826E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10088274C()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100882790(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1008827E8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100882870(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  long long v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_release();
  return a1;
}

uint64_t _s11SwiftUIViewV15ChildSizeReaderVMa()
{
  return sub_100568E70();
}

void *sub_1008828D8(void *a1, uint64_t *a2)
{
  uint64_t v4 = _s15FilterViewModelVMa();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = v20;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = v6[6];
    uint64_t v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v6[7];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_1008829EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  _s15FilterViewModelVMa();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100882A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)_s15FilterViewModelVMa();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  void *v7 = v10;
  v7[1] = v9;
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v5[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100882B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)_s15FilterViewModelVMa();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v5[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100882C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)_s15FilterViewModelVMa();
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  return a1;
}

uint64_t sub_100882CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)_s15FilterViewModelVMa();
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  void *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
  swift_release();
  return a1;
}

uint64_t sub_100882DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100882DB4);
}

uint64_t sub_100882DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s15FilterViewModelVMa();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100882E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100882E34);
}

uint64_t sub_100882E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s15FilterViewModelVMa();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100882EA4()
{
  uint64_t result = _s15FilterViewModelVMa();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s11SwiftUIViewV10BodyLayoutOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100882FFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11SwiftUIViewV10BodyLayoutOMa()
{
  return &_s11SwiftUIViewV10BodyLayoutON;
}

unint64_t sub_100883038()
{
  unint64_t result = qword_101684C60;
  if (!qword_101684C60)
  {
    sub_100522D34(&qword_101684C68);
    sub_10087D9FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684C60);
  }
  return result;
}

unint64_t sub_1008830B8()
{
  unint64_t result = qword_101684C70;
  if (!qword_101684C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684C70);
  }
  return result;
}

uint64_t sub_10088310C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100883150()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10088316C@<X0>(uint64_t a1@<X8>)
{
  return sub_10087A1BC(a1);
}

uint64_t sub_100883174@<X0>(uint64_t *a1@<X8>)
{
  return sub_10087A23C(*(void *)(v1 + 16), a1);
}

unint64_t sub_10088317C()
{
  unint64_t result = qword_101684C80;
  if (!qword_101684C80)
  {
    sub_100522D34(&qword_101684C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684C80);
  }
  return result;
}

uint64_t sub_1008831E8@<X0>(char *a1@<X8>)
{
  return sub_100880BBC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1008831F4()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10088323C()
{
  return sub_100880EC4();
}

unint64_t sub_100883248()
{
  unint64_t result = qword_101684CA0;
  if (!qword_101684CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684CA0);
  }
  return result;
}

ValueMetadata *_s11SwiftUIViewV17SizePreferenceKeyVMa()
{
  return &_s11SwiftUIViewV17SizePreferenceKeyVN;
}

uint64_t sub_1008832AC()
{
  return sub_100523288(&qword_101684CD0, &qword_101684CD8);
}

uint64_t sub_1008832E8()
{
  return swift_getWitnessTable();
}

double sub_100883420()
{
  uint64_t v1 = v0;
  sub_1005057FC((uint64_t *)&unk_101683FC0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117E810;
  uint64_t v3 = type metadata accessor for CRLCanvasLayerAnimation();
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = &off_101509EB8;
  unsigned int v4 = sub_1005767BC((uint64_t *)(v2 + 32));
  sub_1005CCCC4(v1, (uint64_t)v4);
  double v5 = sub_1006C9744(v2, 0.0);
  uint64_t v7 = v6;
  double v8 = v5;
  swift_setDeallocating();
  sub_1005057FC((uint64_t *)&unk_101683FE0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v110 = v7;
  double v111 = v8;
  uint64_t v9 = (void *)(v1 + *(int *)(v3 + 48));
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  sub_10050F848(v9, v10);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 184))(v10, v11)) {
    goto LABEL_18;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_15;
  }
  uint64_t v13 = (void *)Strong;
  uint64_t v14 = v9[3];
  uint64_t v15 = v9[4];
  sub_10050F848(v9, v14);
  (*(void (**)(CATransform3D *__return_ptr, uint64_t, uint64_t))(v15 + 56))(&v106, v14, v15);
  sub_1009FD6EC(v13, v88);

  sub_10054BD5C((uint64_t)&v106);
  uint64_t v16 = *(void *)&v89;
  uint64_t v17 = v90[0];
  sub_10050F848(v88, *(uint64_t *)&v89);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v17 + 48))(v99, v16, v17);
  if (v100 == 0.0)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v88);
    sub_100522F00((uint64_t)v99, (uint64_t *)&unk_101684000);
LABEL_15:
    long long v108 = 0u;
    long long v109 = 0u;
    goto LABEL_16;
  }
  sub_100557A70((uint64_t)v99, (uint64_t)&v108);
  sub_1005499B8((uint64_t)v99);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v88);
  if (!*((void *)&v109 + 1))
  {
LABEL_16:
    uint64_t v53 = &qword_101672BF0;
    uint64_t v54 = (CATransform3D *)&v108;
    goto LABEL_17;
  }
  type metadata accessor for CATransform3D(0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  CGFloat v18 = *(double *)v99;
  CGFloat v19 = *(double *)&v99[1];
  CGFloat v20 = *(double *)&v99[2];
  CGFloat v21 = *(double *)&v99[3];
  CGFloat v22 = *(double *)&v99[4];
  CGFloat v23 = *(double *)&v99[5];
  CGFloat v24 = *(double *)&v99[6];
  CGFloat v25 = *(double *)&v99[7];
  CGFloat v82 = *(double *)&v99[8];
  CGFloat v79 = v100;
  CGFloat v80 = *(double *)&v99[9];
  CGFloat v77 = v102;
  CGFloat v78 = v101;
  CGFloat v75 = v104;
  CGFloat v76 = v103;
  CGFloat v74 = v105;
  uint64_t v26 = swift_unknownObjectWeakLoadStrong();
  if (!v26) {
    goto LABEL_20;
  }
  uint64_t v27 = (void *)v26;
  uint64_t v28 = v9[3];
  uint64_t v29 = v9[4];
  sub_10050F848(v9, v28);
  (*(void (**)(CATransform3D *__return_ptr, uint64_t, uint64_t))(v29 + 56))(&v106, v28, v29);
  sub_1009FD6EC(v27, (uint64_t *)&v84);

  sub_10054BD5C((uint64_t)&v106);
  CGFloat d = v84.d;
  CGFloat tx = v84.tx;
  sub_10050F848(&v84, *(uint64_t *)&v84.d);
  (*(void (**)(uint64_t *__return_ptr, CGFloat, CGFloat))(*(void *)&tx + 48))(v88, COERCE_CGFLOAT(*(void *)&d), COERCE_CGFLOAT(*(void *)&tx));
  if (v91 == 0.0)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v84);
    sub_100522F00((uint64_t)v88, (uint64_t *)&unk_101684000);
LABEL_20:
    long long v97 = 0u;
    long long v98 = 0u;
    goto LABEL_21;
  }
  sub_100557A70((uint64_t)v90, (uint64_t)&v97);
  sub_1005499B8((uint64_t)v88);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v84);
  if (!*((void *)&v98 + 1))
  {
LABEL_21:
    uint64_t v53 = &qword_101672BF0;
    uint64_t v54 = (CATransform3D *)&v97;
    goto LABEL_17;
  }
  if (swift_dynamicCast())
  {
    CGFloat v72 = *(double *)&v88[1];
    CGFloat v73 = *(double *)v88;
    CGFloat v70 = v89;
    CGFloat v71 = *(double *)&v88[2];
    CGFloat v68 = *(double *)&v90[1];
    CGFloat v69 = *(double *)v90;
    CGFloat v66 = *(double *)&v90[3];
    CGFloat v67 = *(double *)&v90[2];
    CGFloat v64 = *(double *)&v90[5];
    CGFloat v65 = *(double *)&v90[4];
    CGFloat v62 = v92;
    CGFloat v63 = v91;
    CGFloat v60 = v94;
    CGFloat v61 = v93;
    CGFloat v58 = v96;
    CGFloat v59 = v95;
    id v32 = [*(id *)(v1 + 8) associatedBackgroundLayer];
    if (v32
      && (uint64_t v33 = v32,
          sub_100B98B5C(&v84, v9),
          v33,
          sub_1005057FC(&qword_101674BC0),
          sub_1005057FC((uint64_t *)&unk_10167BDB0),
          (swift_dynamicCast() & 1) != 0))
    {
      if (*(void *)&v106.m14)
      {
        sub_10053974C((long long *)&v106, (uint64_t)v85);
        v106.m11 = v18;
        v106.m12 = v19;
        v106.m13 = v20;
        v106.m14 = v21;
        v106.m21 = v22;
        v106.m22 = v23;
        v106.m23 = v24;
        v106.m24 = v25;
        v106.m31 = v82;
        v106.m32 = v80;
        v106.m33 = v79;
        v106.m34 = v78;
        v106.m41 = v77;
        v106.m42 = v76;
        v106.m43 = v75;
        v106.m44 = v74;
        CATransform3DGetAffineTransform(&v84, &v106);
        long long v81 = *(_OWORD *)&v84.c;
        long long v83 = *(_OWORD *)&v84.a;
        CGFloat v34 = v84.tx;
        CGFloat ty = v84.ty;
        v106.m11 = v73;
        v106.m12 = v72;
        v106.m13 = v71;
        v106.m14 = v70;
        v106.m21 = v69;
        v106.m22 = v68;
        v106.m23 = v67;
        v106.m24 = v66;
        v106.m31 = v65;
        v106.m32 = v64;
        v106.m33 = v63;
        v106.m34 = v62;
        v106.m41 = v61;
        v106.m42 = v60;
        v106.m43 = v59;
        v106.m44 = v58;
        CATransform3DGetAffineTransform(&v84, &v106);
        *(_OWORD *)&v106.m11 = v83;
        *(_OWORD *)&v106.m13 = v81;
        v106.m21 = v34;
        v106.m22 = ty;
        *(CGAffineTransform *)&v106.m23 = v84;
        char v107 = 56;
        uint64_t v36 = *(void *)&v86;
        uint64_t v37 = v87;
        sub_1005231B4((uint64_t)v85, *(uint64_t *)&v86);
        uint64_t v38 = (void (*)(CGAffineTransform *, void))(*(uint64_t (**)(CGAffineTransform *, uint64_t, uint64_t))(v37 + 104))(&v84, v36, v37);
        uint64_t v40 = *(void *)(v39 + 24);
        uint64_t v41 = *(void *)(v39 + 32);
        sub_1005231B4(v39, v40);
        (*(void (**)(CATransform3D *, uint64_t, uint64_t))(v41 + 64))(&v106, v40, v41);
        v38(&v84, 0);
        uint64_t v42 = *(void *)&v86;
        uint64_t v43 = v87;
        sub_1005231B4((uint64_t)v85, *(uint64_t *)&v86);
        long long v44 = (void (*)(CATransform3D *, void))(*(uint64_t (**)(CATransform3D *, uint64_t, uint64_t))(v43 + 104))(&v106, v42, v43);
        uint64_t v46 = *(void *)(v45 + 24);
        uint64_t v47 = *(void *)(v45 + 32);
        sub_1005231B4(v45, v46);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 192))(1, v46, v47);
        v44(&v106, 0);
        CGFloat v48 = v86;
        uint64_t v49 = v87;
        uint64_t v50 = sub_10050F848(v85, *(uint64_t *)&v86);
        v106.m14 = v48;
        CGFloat v51 = *(double *)(v49 + 24);
        v106.m21 = v51;
        uint64_t v52 = sub_1005767BC((uint64_t *)&v106);
        (*(void (**)(uint64_t *, void *, CGFloat))(*(void *)(*(void *)&v48 - 8) + 16))(v52, v50, COERCE_CGFLOAT(*(void *)&v48));
        sub_1006C959C((uint64_t)v52, &v110, *(uint64_t *)&v48, *(uint64_t *)&v51);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v106);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v85);
        goto LABEL_18;
      }
    }
    else
    {
      memset(&v106, 0, 40);
    }
    uint64_t v53 = &qword_10167E120;
    uint64_t v54 = &v106;
LABEL_17:
    sub_100522F00((uint64_t)v54, v53);
  }
LABEL_18:
  sub_1005057FC(&qword_10167C078);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_10117E810;
  uint64_t v56 = v110;
  double result = v111;
  *(void *)(v55 + 56) = &type metadata for CRLLayerAnimationGroup;
  *(void *)(v55 + 64) = &off_10150F5C8;
  *(void *)(v55 + 32) = v56;
  *(double *)(v55 + 40) = result;
  return result;
}

double *sub_100883C00()
{
  uint64_t v11 = _swiftEmptyArrayStorage;
  sub_100883420();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = v0 + 32;
    do
    {
      sub_1005498A4(v2, (uint64_t)v8);
      uint64_t v3 = v9;
      uint64_t v4 = v10;
      sub_10050F848(v8, v9);
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
      sub_1006E1FC0(v5);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v8);
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    uint64_t v6 = v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  type metadata accessor for CRLCanvasLayerAnimationProvider();
  return v6;
}

uint64_t sub_100883CEC()
{
  sub_100883420();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if (!v2)
  {
    long long v16 = 0u;
    long long v17 = 0u;
    uint64_t v18 = 0;
    swift_bridgeObjectRelease();
    return sub_100522F00((uint64_t)&v16, (uint64_t *)&unk_101683FE0);
  }
  uint64_t result = sub_1005498A4(v0 + 32, (uint64_t)&v13);
  if (v2 == 1)
  {
LABEL_3:
    sub_10053974C(&v13, (uint64_t)&v16);
    swift_bridgeObjectRelease();
    uint64_t v4 = *((void *)&v17 + 1);
    if (*((void *)&v17 + 1))
    {
      uint64_t v5 = v18;
      sub_10050F848(&v16, *((uint64_t *)&v17 + 1));
      (*(void (**)(uint64_t))(*(void *)(v5 + 8) + 40))(v4);
      return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v16);
    }
    return sub_100522F00((uint64_t)&v16, (uint64_t *)&unk_101683FE0);
  }
  uint64_t v6 = v1 + 72;
  unint64_t v7 = 1;
  while (v7 < *(void *)(v1 + 16))
  {
    sub_1005498A4(v6, (uint64_t)&v16);
    uint64_t v9 = v14;
    uint64_t v8 = v15;
    sub_10050F848(&v13, v14);
    double v10 = (*(double (**)(uint64_t))(*(void *)(v8 + 8) + 40))(v9);
    uint64_t v12 = *((void *)&v17 + 1);
    uint64_t v11 = v18;
    sub_10050F848(&v16, *((uint64_t *)&v17 + 1));
    if (v10 >= (*(double (**)(uint64_t))(*(void *)(v11 + 8) + 40))(v12))
    {
      uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v16);
    }
    else
    {
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v13);
      uint64_t result = sub_10053974C(&v16, (uint64_t)&v13);
    }
    ++v7;
    v6 += 40;
    if (v2 == v7) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

double sub_100883E9C(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_100883EA8(uint64_t result, double a2)
{
  *(double *)(v2 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for CRLCanvasLayerAnimationProvider()
{
  uint64_t result = qword_101684D38;
  if (!qword_101684D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_100883F04(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    unint64_t v7 = a2[1];
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = v7;
    *((void *)a1 + 2) = v8;
    uint64_t v9 = a2[3];
    *((void *)a1 + 3) = v9;
    double v10 = a2 + 4;
    uint64_t v11 = a2[7];
    uint64_t v12 = v5;
    long long v13 = v7;
    uint64_t v14 = v8;
    uint64_t v15 = v9;
    if (v11)
    {
      long long v16 = a2[8];
      *((void *)a1 + 7) = v11;
      *((void *)a1 + 8) = v16;
      (**((void (***)(uint64_t, char **, char *))v11 - 1))((uint64_t)(a1 + 32), v10, v11);
    }
    else
    {
      long long v17 = *((_OWORD *)v10 + 1);
      *((_OWORD *)a1 + 2) = *(_OWORD *)v10;
      *((_OWORD *)a1 + 3) = v17;
      *((void *)a1 + 8) = v10[4];
    }
    uint64_t v18 = a2[10];
    *((void *)a1 + 9) = a2[9];
    *((void *)a1 + 10) = v18;
    a1[88] = *((unsigned char *)a2 + 88);
    long long v19 = *((_OWORD *)a2 + 7);
    *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 7) = v19;
    a1[128] = *((unsigned char *)a2 + 128);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
    a1[168] = *((unsigned char *)a2 + 168);
    *((void *)a1 + 22) = a2[22];
    a1[184] = *((unsigned char *)a2 + 184);
    *((void *)a1 + 24) = a2[24];
    a1[200] = *((unsigned char *)a2 + 200);
    CGFloat v20 = (int *)type metadata accessor for CRLCanvasLayerAnimation();
    uint64_t v21 = v20[10];
    CGFloat v22 = &a1[v21];
    uint64_t v23 = (uint64_t)a2 + v21;
    uint64_t v24 = type metadata accessor for UUID();
    CGFloat v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    swift_unknownObjectWeakCopyInit();
    uint64_t v26 = v20[12];
    long long v27 = *(_OWORD *)((char *)a2 + v26 + 24);
    *(_OWORD *)&a1[v26 + 24] = v27;
    (**(void (***)(void))(v27 - 8))();
    uint64_t v28 = v20[13];
    uint64_t v29 = &a1[v28];
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v32 = *(void *)(v31 - 8);
    uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    uint64_t v49 = v32;
    if (v50(v30, 1, v31))
    {
      uint64_t v33 = sub_1005057FC(&qword_1016730B0);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v25(v29, (uint64_t)v30, v24);
      uint64_t v34 = *(int *)(v31 + 20);
      uint64_t v35 = &v29[v34];
      uint64_t v36 = &v30[v34];
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = v37;
      uint64_t v38 = *(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56);
      swift_retain();
      v38(v29, 0, 1, v31);
    }
    uint64_t v39 = v20[14];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = (char *)a2 + v39;
    if (v50((char *)a2 + v39, 1, v31))
    {
      uint64_t v42 = sub_1005057FC(&qword_1016730B0);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v25(v40, (uint64_t)v41, v24);
      uint64_t v43 = *(int *)(v31 + 20);
      long long v44 = &v40[v43];
      uint64_t v45 = &v41[v43];
      uint64_t v46 = *((void *)v45 + 1);
      *(void *)long long v44 = *(void *)v45;
      *((void *)v44 + 1) = v46;
      uint64_t v47 = *(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56);
      swift_retain();
      v47(v40, 0, 1, v31);
    }
    *(void *)&a1[*(int *)(a3 + 20)] = *(char **)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10088430C(uint64_t a1)
{
  if (*(void *)(a1 + 56)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t v3 = a1 + v2[10];
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  swift_unknownObjectWeakDestroy();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + v2[12]);
  uint64_t v6 = a1 + v2[13];
  uint64_t v7 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v5(v6, v4);
    swift_release();
  }
  uint64_t v9 = a1 + v2[14];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!result)
  {
    v5(v9, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1008844CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  uint64_t v9 = a1 + 32;
  uint64_t v10 = a2 + 32;
  uint64_t v11 = *(void *)(a2 + 56);
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  id v15 = v8;
  if (v11)
  {
    uint64_t v16 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v16;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(v9, v10, v11);
  }
  else
  {
    long long v17 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v17;
    *(void *)(v9 + 32) = *(void *)(v10 + 32);
  }
  uint64_t v18 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v18;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v19 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v19;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  CGFloat v20 = (int *)type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t v21 = v20[10];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for UUID();
  CGFloat v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  swift_unknownObjectWeakCopyInit();
  uint64_t v26 = v20[12];
  long long v27 = *(_OWORD *)(a2 + v26 + 24);
  *(_OWORD *)(a1 + v26 + 24) = v27;
  (**(void (***)(void))(v27 - 8))();
  uint64_t v28 = v20[13];
  uint64_t v29 = (char *)(a1 + v28);
  uint64_t v30 = (char *)(a2 + v28);
  uint64_t v31 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  uint64_t v49 = v32;
  if (v50(v30, 1, v31))
  {
    uint64_t v33 = sub_1005057FC(&qword_1016730B0);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    v25((uint64_t)v29, (uint64_t)v30, v24);
    uint64_t v34 = *(int *)(v31 + 20);
    uint64_t v35 = &v29[v34];
    uint64_t v36 = &v30[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    uint64_t v38 = *(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56);
    swift_retain();
    v38(v29, 0, 1, v31);
  }
  uint64_t v39 = v20[14];
  uint64_t v40 = (char *)(a1 + v39);
  uint64_t v41 = (char *)(a2 + v39);
  if (v50((char *)(a2 + v39), 1, v31))
  {
    uint64_t v42 = sub_1005057FC(&qword_1016730B0);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    v25((uint64_t)v40, (uint64_t)v41, v24);
    uint64_t v43 = *(int *)(v31 + 20);
    long long v44 = &v40[v43];
    uint64_t v45 = &v41[v43];
    uint64_t v46 = *((void *)v45 + 1);
    *(void *)long long v44 = *(void *)v45;
    *((void *)v44 + 1) = v46;
    uint64_t v47 = *(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56);
    swift_retain();
    v47(v40, 0, 1, v31);
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100884884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v7 = v5;

  uint64_t v8 = *(void **)(a2 + 8);
  uint64_t v9 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v8;
  id v10 = v8;

  uint64_t v11 = *(void **)(a2 + 16);
  id v12 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  id v13 = v11;

  id v14 = *(void **)(a2 + 24);
  id v15 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v14;
  id v16 = v14;

  uint64_t v17 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v17)
    {
      sub_10054BB2C((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
      goto LABEL_8;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
  }
  else if (v17)
  {
    *(void *)(a1 + 56) = v17;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 32, a2 + 32);
    goto LABEL_8;
  }
  long long v18 = *(_OWORD *)(a2 + 32);
  long long v19 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v18;
  *(_OWORD *)(a1 + 48) = v19;
LABEL_8:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v20 = *(_OWORD *)(a2 + 96);
  long long v21 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v20;
  *(_OWORD *)(a1 + 112) = v21;
  long long v22 = *(_OWORD *)(a2 + 136);
  long long v23 = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v23;
  *(_OWORD *)(a1 + 136) = v22;
  uint64_t v24 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v24;
  uint64_t v25 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v25;
  uint64_t v26 = (int *)type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t v27 = v26[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v66 = *(void *)(v30 - 8);
  uint64_t v67 = v30;
  CGFloat v64 = *(void (**)(uint64_t, uint64_t))(v66 + 24);
  v64(v28, v29);
  swift_unknownObjectWeakCopyAssign();
  sub_10054BB2C((uint64_t *)(a1 + v26[12]), (uint64_t *)(a2 + v26[12]));
  uint64_t v31 = v26[13];
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  uint64_t v34 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v65 = *(void *)(v34 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  int v36 = v35(v32, 1, v34);
  int v37 = v35(v33, 1, v34);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v32, v33, v67);
      uint64_t v38 = *(int *)(v34 + 20);
      uint64_t v39 = &v32[v38];
      uint64_t v40 = &v33[v38];
      uint64_t v41 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = v41;
      uint64_t v42 = *(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56);
      swift_retain();
      v42(v32, 0, 1, v34);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v37)
  {
    sub_100884D3C((uint64_t)v32);
LABEL_13:
    uint64_t v43 = sub_1005057FC(&qword_1016730B0);
    memcpy(v32, v33, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_14;
  }
  ((void (*)(char *, char *, uint64_t))v64)(v32, v33, v67);
  uint64_t v56 = *(int *)(v34 + 20);
  uint64_t v57 = &v32[v56];
  CGFloat v58 = &v33[v56];
  uint64_t v59 = *((void *)v58 + 1);
  *(void *)uint64_t v57 = *(void *)v58;
  *((void *)v57 + 1) = v59;
  swift_retain();
  swift_release();
LABEL_14:
  uint64_t v44 = v26[14];
  uint64_t v45 = (char *)(a1 + v44);
  uint64_t v46 = (char *)(a2 + v44);
  int v47 = v35((char *)(a1 + v44), 1, v34);
  int v48 = v35(v46, 1, v34);
  if (!v47)
  {
    if (!v48)
    {
      ((void (*)(char *, char *, uint64_t))v64)(v45, v46, v67);
      uint64_t v60 = *(int *)(v34 + 20);
      CGFloat v61 = &v45[v60];
      CGFloat v62 = &v46[v60];
      uint64_t v63 = *((void *)v62 + 1);
      *(void *)CGFloat v61 = *(void *)v62;
      *((void *)v61 + 1) = v63;
      swift_retain();
      swift_release();
      goto LABEL_20;
    }
    sub_100884D3C((uint64_t)v45);
    goto LABEL_19;
  }
  if (v48)
  {
LABEL_19:
    uint64_t v54 = sub_1005057FC(&qword_1016730B0);
    memcpy(v45, v46, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v45, v46, v67);
  uint64_t v49 = *(int *)(v34 + 20);
  uint64_t v50 = &v45[v49];
  CGFloat v51 = &v46[v49];
  uint64_t v52 = *((void *)v51 + 1);
  *(void *)uint64_t v50 = *(void *)v51;
  *((void *)v50 + 1) = v52;
  uint64_t v53 = *(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56);
  swift_retain();
  v53(v45, 0, 1, v34);
LABEL_20:
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100884D3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100884D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v9 = (int *)type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t v10 = v9[10];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  id v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  swift_unknownObjectWeakTakeInit();
  uint64_t v15 = v9[12];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  uint64_t v19 = v9[13];
  __dst = (char *)(a1 + v19);
  long long v20 = (char *)(a2 + v19);
  uint64_t v21 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v22 = *(void *)(v21 - 8);
  long long v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v23(v20, 1, v21))
  {
    uint64_t v24 = sub_1005057FC(&qword_1016730B0);
    memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v14((uint64_t)__dst, (uint64_t)v20, v13);
    *(_OWORD *)&__dst[*(int *)(v21 + 20)] = *(_OWORD *)&v20[*(int *)(v21 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  uint64_t v25 = v22;
  uint64_t v26 = v9[14];
  uint64_t v27 = (char *)(a1 + v26);
  uint64_t v28 = (char *)(a2 + v26);
  if (v23((char *)(a2 + v26), 1, v21))
  {
    uint64_t v29 = sub_1005057FC(&qword_1016730B0);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v14((uint64_t)v27, (uint64_t)v28, v13);
    *(_OWORD *)&v27[*(int *)(v21 + 20)] = *(_OWORD *)&v28[*(int *)(v21 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v21);
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100885094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  long long v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  long long v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  if (*(void *)(a1 + 56)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
  }
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v11;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v12 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v12;
  uint64_t v13 = (int *)type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t v14 = v13[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v39 = *(void *)(v17 - 8);
  uint64_t v40 = v17;
  int v37 = *(void (**)(uint64_t, uint64_t))(v39 + 40);
  v37(v15, v16);
  swift_unknownObjectWeakTakeAssign();
  uint64_t v18 = v13[12];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + v18);
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(void *)(v19 + 32) = *(void *)(v20 + 32);
  uint64_t v22 = v13[13];
  long long v23 = (char *)(a1 + v22);
  uint64_t v24 = (char *)(a2 + v22);
  uint64_t v25 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v38 = *(void *)(v25 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  int v27 = v26(v23, 1, v25);
  int v28 = v26(v24, 1, v25);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v23, v24, v40);
      *(_OWORD *)&v23[*(int *)(v25 + 20)] = *(_OWORD *)&v24[*(int *)(v25 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v23, 0, 1, v25);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v28)
  {
    sub_100884D3C((uint64_t)v23);
LABEL_8:
    uint64_t v29 = sub_1005057FC(&qword_1016730B0);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_9;
  }
  ((void (*)(char *, char *, uint64_t))v37)(v23, v24, v40);
  *(_OWORD *)&v23[*(int *)(v25 + 20)] = *(_OWORD *)&v24[*(int *)(v25 + 20)];
  swift_release();
LABEL_9:
  uint64_t v30 = v13[14];
  uint64_t v31 = (char *)(a1 + v30);
  uint64_t v32 = (char *)(a2 + v30);
  int v33 = v26((char *)(a1 + v30), 1, v25);
  int v34 = v26(v32, 1, v25);
  if (!v33)
  {
    if (!v34)
    {
      ((void (*)(char *, char *, uint64_t))v37)(v31, v32, v40);
      *(_OWORD *)&v31[*(int *)(v25 + 20)] = *(_OWORD *)&v32[*(int *)(v25 + 20)];
      swift_release();
      goto LABEL_15;
    }
    sub_100884D3C((uint64_t)v31);
    goto LABEL_14;
  }
  if (v34)
  {
LABEL_14:
    uint64_t v35 = sub_1005057FC(&qword_1016730B0);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v31, v32, v40);
  *(_OWORD *)&v31[*(int *)(v25 + 20)] = *(_OWORD *)&v32[*(int *)(v25 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v31, 0, 1, v25);
LABEL_15:
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1008854B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008854C8);
}

uint64_t sub_1008854C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLCanvasLayerAnimation();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100885534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100885548);
}

uint64_t sub_100885548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLCanvasLayerAnimation();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1008855B8()
{
  uint64_t result = type metadata accessor for CRLCanvasLayerAnimation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_100885650()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 24);
  return sub_1002094A4() >= v1;
}

BOOL sub_100885688()
{
  return ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF8))() & 1) == 0;
}

uint64_t sub_1008856D8()
{
  unint64_t v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  [v1 transform];
  long long v5 = v8;
  long long v6 = v7;
  long long v4 = v9;

  long long v7 = v6;
  long long v8 = v5;
  long long v9 = v4;
  int v2 = sub_10007F910((double *)&v7, 0.0001);
  if (v2)
  {
    if ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))()) {
      LOBYTE(v2) = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x290))();
    }
    else {
      LOBYTE(v2) = 1;
    }
  }
  return v2 & 1;
}

uint64_t sub_100885804()
{
  unint64_t v1 = *(void (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 256);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100885884()
{
  unint64_t v1 = *(void (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 264);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_100885904(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v45 = a1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v42 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v44 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v42 - v16;
  __n128 v20 = __chkstk_darwin(v18, v19);
  uint64_t v22 = (char *)&v42 - v21;
  if (!*(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(__n128))((swift_isaMask & *v1) + 0x2F0))(v20) & 1) != 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    uint64_t v35 = "_guardTransaction()";
    uint64_t v36 = 19;
    int v37 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift";
    uint64_t v38 = 91;
    uint64_t v39 = 76;
    goto LABEL_16;
  }
  uint64_t v43 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  long long v23 = *(void (**)(uint64_t))(**(void **)((char *)v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                       + 264);
  uint64_t v24 = swift_retain();
  v23(v24);
  swift_release();
  uint64_t v25 = (uint64_t)&v10[*(int *)(v7 + 48)];
  sub_100522E9C((uint64_t)v22, (uint64_t)v10, (uint64_t *)&unk_101674520);
  uint64_t v26 = v45;
  sub_100522E9C(v45, v25, (uint64_t *)&unk_101674520);
  int v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v27((uint64_t)v10, 1, v3) == 1)
  {
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674520);
    if (v27(v25, 1, v3) == 1) {
      return sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101674520);
    }
    goto LABEL_8;
  }
  sub_100522E9C((uint64_t)v10, (uint64_t)v17, (uint64_t *)&unk_101674520);
  if (v27(v25, 1, v3) == 1)
  {
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674520);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
LABEL_8:
    sub_100522F00((uint64_t)v10, (uint64_t *)&unk_10168A0C0);
LABEL_9:
    type metadata accessor for CRLRootContainerItem(0);
    if (!swift_dynamicCastClass())
    {
      uint64_t v29 = v44;
      uint64_t v30 = *(void *)((char *)v2 + v43);
      sub_100522E9C(v26, v44, (uint64_t *)&unk_101674520);
      uint64_t v31 = *(void (**)(uint64_t))(*(void *)v30 + 272);
      swift_retain();
      v31(v29);
      return swift_release();
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_setParentUUID(newValue:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 741, (uint64_t)"Root container items should never be reparented!", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Root container items should never be reparented!");
    uint64_t v35 = "_setParentUUID(newValue:)";
    uint64_t v36 = 25;
    int v37 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift";
    uint64_t v38 = 83;
    uint64_t v39 = 741;
LABEL_16:
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v35, v36, 2, (uint64_t)v37, v38, 2, v39);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v40, v41);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v32 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v42, v25, v3);
  sub_100895630((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
  int v34 = *(void (**)(char *, uint64_t))(v4 + 8);
  v34(v32, v3);
  sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674520);
  v34(v17, v3);
  uint64_t result = sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101674520);
  if ((v33 & 1) == 0) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_100885F34()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 408))();
}

uint64_t sub_100885F8C()
{
  return sub_100885FBC((uint64_t (*)(uint64_t, uint64_t))sub_10088BE6C);
}

uint64_t sub_100885FA4()
{
  return sub_100885FBC((uint64_t (*)(uint64_t, uint64_t))sub_10088C380);
}

uint64_t sub_100885FBC(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8))();
  uint64_t v4 = v3 & 1;

  return a1(v2, v4);
}

uint64_t sub_10088602C()
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 288);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  return v3;
}

void sub_1008860A0(void *a1)
{
  sub_10088AA40(a1);
}

uint64_t sub_1008860D8()
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 312);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

uint64_t sub_100886150()
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 336);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

uint64_t sub_1008861C8()
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 360);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_100886244(uint64_t a1, uint64_t a2)
{
  sub_10088B368(a1, a2);

  return swift_bridgeObjectRelease();
}

void sub_10088627C(void *a1)
{
  sub_10088B0DC(a1);
}

uint64_t sub_1008862B4()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v0;
  type metadata accessor for CRLBoardItem(0);
  id v5 = v0;
  sub_1005057FC(&qword_101678BC8);
  if (swift_dynamicCast())
  {
    sub_10053974C(v11, (uint64_t)v14);
    uint64_t v6 = v15;
    uint64_t v7 = v16;
    sub_10050F848(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    uint64_t v8 = type metadata accessor for CRLAssetData();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    {
      sub_100522F00((uint64_t)v4, (uint64_t *)&unk_10167D2B0);
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = *(void *)&v4[*(int *)(v8 + 20)];
      swift_bridgeObjectRetain();
      sub_100895D24((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v14);
  }
  else
  {
    uint64_t v12 = 0;
    memset(v11, 0, sizeof(v11));
    sub_100522F00((uint64_t)v11, &qword_101684FC0);
    return 0;
  }
  return v9;
}

uint64_t sub_100886470(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 440);
  swift_retain();
  uint64_t v4 = v3(a1);
  swift_release();
  return v4;
}

uint64_t sub_1008864EC()
{
  uint64_t v1 = v0;
  uint64_t v204 = type metadata accessor for CocoaError.Code();
  v232 = *(char **)(v204 - 8);
  __chkstk_darwin(v204, v2);
  v203 = (char *)&v187 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = sub_1005057FC((uint64_t *)&unk_101684F90);
  uint64_t v205 = *(void *)(v224 - 8);
  uint64_t v5 = __chkstk_darwin(v224, v4);
  v201 = (char *)&v187 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  v193 = (char *)&v187 - v8;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674170);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v191 = (uint64_t)&v187 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v187 - v15;
  uint64_t v18 = __chkstk_darwin(v14, v17);
  v207 = (char *)&v187 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v209 = (uint64_t)&v187 - v21;
  uint64_t v197 = sub_1005057FC(&qword_101684FA0);
  __chkstk_darwin(v197, v22);
  v196 = (char *)&v187 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v234 - 8);
  uint64_t v26 = __chkstk_darwin(v234, v25);
  v227 = (char *)&v187 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v28);
  v195 = (char *)&v187 - v29;
  uint64_t v30 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v30 - 8, v31);
  char v33 = (char *)&v187 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v221 = *(void *)(v34 - 8);
  __chkstk_darwin(v34 - 8, v35);
  v214 = (char *)&v187 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = type metadata accessor for UUID();
  uint64_t v190 = *(void *)(v218 - 8);
  uint64_t v38 = __chkstk_darwin(v218, v37);
  uint64_t v220 = (uint64_t)&v187 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v40);
  v235 = (char *)&v187 - v41;
  uint64_t v42 = sub_1005057FC(&qword_101684FA8);
  uint64_t v44 = __chkstk_darwin(v42 - 8, v43);
  v238 = (char *)&v187 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44, v46);
  uint64_t v236 = (uint64_t)&v187 - v47;
  int v48 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v49 = *(void *)&v48[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v49 + 16));
  uint64_t v50 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  CGFloat v51 = *(void **)&v48[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v51)
  {
    uint64_t v52 = *(char **)&v48[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v53 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v54 = v48;
    id v55 = sub_100EAFDE4((uint64_t)v54);

    uint64_t v56 = *(void **)&v48[v50];
    *(void *)&v48[v50] = v55;
    uint64_t v52 = (char *)v55;

    CGFloat v51 = 0;
  }
  uint64_t v57 = *(os_unfair_lock_s **)(v49 + 16);
  id v58 = v51;
  os_unfair_lock_unlock(v57);
  uint64_t v59 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v60 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                          + 568);
  uint64_t v61 = swift_retain();
  uint64_t v62 = v60(v61);
  swift_release();
  uint64_t v63 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + v59) + 576);
  uint64_t v64 = swift_retain();
  uint64_t v65 = v63(v64);
  swift_release();
  uint64_t v66 = sub_10089193C(v65, v62);
  uint64_t v219 = 0;
  uint64_t v67 = *(void *)(v66 + 64);
  uint64_t v194 = v66 + 64;
  uint64_t v222 = v66;
  v223 = v52;
  uint64_t v68 = 1 << *(unsigned char *)(v66 + 32);
  uint64_t v69 = -1;
  if (v68 < 64) {
    uint64_t v69 = ~(-1 << v68);
  }
  unint64_t v237 = v69 & v67;
  v192 = &v52[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetsDirectoryURL];
  v229 = (uint64_t *)&v52[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache];
  uint64_t v230 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock;
  uint64_t result = swift_beginAccess();
  int64_t v231 = 0;
  v225 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48);
  v213 = (void (**)(uint64_t, uint64_t, uint64_t))(v190 + 32);
  v233 = (char **)(v205 + 56);
  v228 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v205 + 48);
  v212 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v206 = (void (**)(char *, uint64_t))(v24 + 8);
  v202 = (void (**)(char *, uint64_t))(v232 + 8);
  v199 = (void (**)(uint64_t, char *, uint64_t))(v190 + 16);
  v198 = (void (**)(char *, char *, uint64_t))(v24 + 16);
  v216 = (void (**)(char *, uint64_t, uint64_t))(v24 + 32);
  v217 = (void (**)(uint64_t, uint64_t))(v190 + 8);
  v211 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  int64_t v208 = (unint64_t)(v68 + 63) >> 6;
  int64_t v188 = v208 - 1;
  long long v189 = xmmword_10117DF40;
  v200 = v16;
  uint64_t v71 = (uint64_t)v207;
  uint64_t v72 = (uint64_t)v214;
  uint64_t v73 = v218;
  uint64_t v74 = (uint64_t)v235;
  v210 = v33;
  while (v237)
  {
    unint64_t v75 = __clz(__rbit64(v237));
    v237 &= v237 - 1;
    unint64_t v76 = v75 | (v231 << 6);
    CGFloat v77 = v238;
LABEL_10:
    uint64_t v78 = *(void *)(v222 + 56);
    CGFloat v79 = (void *)(*(void *)(v222 + 48) + 16 * v76);
    uint64_t v80 = v79[1];
    *CGFloat v77 = *v79;
    v77[1] = v80;
    uint64_t v81 = v78 + *(void *)(v221 + 72) * v76;
    uint64_t v82 = sub_1005057FC((uint64_t *)&unk_101684FB0);
    uint64_t v83 = v81;
    CGFloat v77 = v238;
    sub_100522E9C(v83, (uint64_t)&v238[*(int *)(v82 + 48)], (uint64_t *)&unk_101674520);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v77, 0, 1, v82);
    swift_bridgeObjectRetain();
LABEL_34:
    uint64_t v89 = (uint64_t)v77;
    uint64_t v90 = v236;
    sub_10051B3EC(v89, v236, &qword_101684FA8);
    uint64_t v91 = sub_1005057FC((uint64_t *)&unk_101684FB0);
    int v226 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v90, 1, v91);
    if (v226 == 1) {
      goto LABEL_94;
    }
    uint64_t v92 = v236;
    swift_bridgeObjectRelease();
    sub_10051B3EC(v92 + *(int *)(v91 + 48), v72, (uint64_t *)&unk_101674520);
    if ((*v225)(v72, 1, v73) == 1)
    {
      uint64_t result = sub_100522F00(v72, (uint64_t *)&unk_101674520);
    }
    else
    {
      (*v213)(v74, v72, v73);
      double v93 = v223;
      uint64_t v94 = *(void *)&v223[v230];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v94 + 16));
      uint64_t v95 = *v229;
      if (*(void *)(*v229 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v96 = sub_100955FC8(v74);
        if (v97)
        {
          uint64_t v98 = v205;
          uint64_t v99 = v209;
          sub_100522E9C(*(void *)(v95 + 56) + *(void *)(v205 + 72) * v96, v209, (uint64_t *)&unk_101684F90);
          double v100 = *(char **)(v98 + 56);
          uint64_t v101 = v224;
          v232 = v100;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v100)(v99, 0, 1, v224);
          uint64_t v102 = v99;
          uint64_t v103 = v101;
        }
        else
        {
          uint64_t v104 = v209;
          uint64_t v103 = v224;
          v232 = *v233;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232)(v209, 1, 1, v224);
          uint64_t v102 = v104;
        }
        swift_bridgeObjectRelease();
        uint64_t v74 = (uint64_t)v235;
      }
      else
      {
        uint64_t v102 = v209;
        uint64_t v103 = v224;
        v232 = *v233;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232)(v209, 1, 1, v224);
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v94 + 16));
      double v105 = *v228;
      if ((*v228)(v102, 1, v103) == 1)
      {
        sub_100522F00(v102, (uint64_t *)&unk_101674170);
      }
      else
      {
        int v106 = *(_DWORD *)(v102 + *(int *)(v103 + 48));
        long long v108 = v196;
        uint64_t v107 = v197;
        uint64_t v109 = *(int *)(v197 + 48);
        uint64_t v110 = v102;
        double v111 = *v216;
        (*v216)(v196, v110, v234);
        *(_DWORD *)&v108[v109] = v106;
        uint64_t v112 = v234;
        int v113 = *(_DWORD *)&v108[*(int *)(v107 + 48)];
        v114 = v195;
        v111(v195, (uint64_t)v108, v234);
        if ((v113 & 2) != 0)
        {
          uint64_t v121 = v112;
          uint64_t v122 = (uint64_t)v210;
          uint64_t v74 = (uint64_t)v235;
          if ((v113 & 4) != 0)
          {
            uint64_t v123 = v121;
            v111(v210, (uint64_t)v114, v121);
            uint64_t v124 = 0;
          }
          else
          {
            uint64_t v123 = v121;
            (*v206)(v114, v121);
            uint64_t v124 = 1;
          }
          uint64_t v72 = (uint64_t)v214;
          v172 = v217;
          uint64_t v73 = v218;
          goto LABEL_93;
        }
        (*v206)(v114, v112);
        uint64_t v74 = (uint64_t)v235;
        double v93 = v223;
      }
      uint64_t v115 = *(void *)&v93[v230];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v115 + 16));
      uint64_t v116 = *v229;
      if (*(void *)(*v229 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v117 = sub_100955FC8(v74);
        if (v118)
        {
          sub_100522E9C(*(void *)(v116 + 56) + *(void *)(v205 + 72) * v117, v71, (uint64_t *)&unk_101684F90);
          uint64_t v119 = v71;
          uint64_t v120 = 0;
        }
        else
        {
          uint64_t v119 = v71;
          uint64_t v120 = 1;
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232)(v119, v120, 1, v103);
        swift_bridgeObjectRelease();
      }
      else
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232)(v71, 1, 1, v103);
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v115 + 16));
      unsigned int v125 = v105(v71, 1, v103);
      v215 = v105;
      if (v125 == 1)
      {
        sub_100522F00(v71, (uint64_t *)&unk_101674170);
        uint64_t v126 = sub_100EA739C();
        v127 = v202;
        if (v126)
        {
          uint64_t v129 = *(void *)(v126 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
          unint64_t v128 = *(void *)(v126 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
          swift_bridgeObjectRetain();
          UUID.uuidString.getter();
          if (v128)
          {
            uint64_t v130 = HIBYTE(v128) & 0xF;
            if ((v128 & 0x2000000000000000) == 0) {
              uint64_t v130 = v129 & 0xFFFFFFFFFFFFLL;
            }
            if (v130)
            {
              NSString v131 = String._bridgeToObjectiveC()();
              NSString v132 = String._bridgeToObjectiveC()();
              id v133 = [v131 stringByAppendingPathExtension:v132];

              if (v133)
              {
                swift_bridgeObjectRelease();
                static String._unconditionallyBridgeFromObjectiveC(_:)();
              }
            }
          }
          int v134 = 1;
          uint64_t v74 = (uint64_t)v235;
        }
        else
        {
          UUID.uuidString.getter();
          int v134 = 0;
        }
        v140 = v227;
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        uint64_t v141 = v74;
        v142 = v223;
        sub_100EA5F9C(v141, v140, v134);
        swift_release();
        double v93 = v142;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v135 = *(int *)(v103 + 48);
        v136 = *v216;
        v137 = v193;
        uint64_t v138 = v234;
        (*v216)(v193, v71, v234);
        int v134 = *(_DWORD *)(v71 + v135);
        uint64_t v139 = (uint64_t)v201;
        v136(v201, (uint64_t)v137, v138);
        v136(v227, v139, v138);
        v127 = v202;
      }
      v143 = v203;
      Swift::Bool v144 = URL.checkResourceIsReachable()();
      uint64_t v145 = v204;
      if (v146)
      {
        swift_errorRetain();
        static CocoaError.fileNoSuchFile.getter();
        sub_100895630((unint64_t *)&unk_101674190, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
        char v147 = static _ErrorCodeProtocol.~= infix(_:_:)();
        swift_errorRelease();
        v148 = *v127;
        (*v127)(v143, v145);
        if ((v147 & 1) == 0)
        {
          swift_errorRetain();
          static CocoaError.fileReadNoSuchFile.getter();
          char v149 = static _ErrorCodeProtocol.~= infix(_:_:)();
          swift_errorRelease();
          v148(v143, v145);
          if ((v149 & 1) == 0)
          {
            swift_willThrow();
            if (qword_10166FB70 != -1) {
              swift_once();
            }
            swift_beginAccess();
            v173 = (void *)static OS_os_log.boardStore;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            initeCGFloat d = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v189;
            id v175 = v173;
            uint64_t v176 = URL.path.getter();
            uint64_t v178 = v177;
            *(void *)(inited + 56) = &type metadata for String;
            unint64_t v179 = sub_100528BE4();
            *(void *)(inited + 64) = v179;
            *(void *)(inited + 32) = v176;
            *(void *)(inited + 40) = v178;
            swift_getErrorValue();
            uint64_t v180 = Error.publicDescription.getter(v241, v242);
            *(void *)(inited + 96) = &type metadata for String;
            *(void *)(inited + 104) = v179;
            *(void *)(inited + 72) = v180;
            *(void *)(inited + 80) = v181;
            swift_getErrorValue();
            uint64_t v182 = Error.fullDescription.getter(v240);
            *(void *)(inited + 136) = &type metadata for String;
            *(void *)(inited + 144) = v179;
            *(void *)(inited + 112) = v182;
            *(void *)(inited + 120) = v183;
            uint64_t v184 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v175, (uint64_t)&_mh_execute_header, v184, (uint64_t)"Failed to check if file exists. filePath=\"%@\", error=%{public}@ <%@>", 68, 2, inited);
            swift_errorRelease();
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            uint64_t v219 = 0;
            uint64_t v71 = (uint64_t)v207;
            uint64_t v122 = (uint64_t)v210;
            uint64_t v72 = (uint64_t)v214;
            v172 = v217;
            uint64_t v73 = v218;
LABEL_91:
            uint64_t v123 = v234;
            (*v206)(v227, v234);
            uint64_t v124 = 1;
            goto LABEL_92;
          }
        }
        swift_errorRelease();
        Swift::Bool v150 = 0;
        uint64_t v219 = 0;
        int v151 = 2;
        uint64_t v152 = v220;
        if (v134) {
LABEL_70:
        }
          v151 |= 1u;
      }
      else
      {
        uint64_t v219 = 0;
        if (v144) {
          int v151 = 6;
        }
        else {
          int v151 = 2;
        }
        uint64_t v152 = v220;
        Swift::Bool v150 = v144;
        if (v134) {
          goto LABEL_70;
        }
      }
      v153 = *(os_unfair_lock_s **)(*(void *)&v93[v230] + 16);
      os_unfair_lock_lock(v153);
      uint64_t v154 = v218;
      (*v199)(v152, v235, v218);
      uint64_t v155 = v224;
      uint64_t v156 = *(int *)(v224 + 48);
      uint64_t v157 = (uint64_t)v200;
      (*v198)(v200, v227, v234);
      *(_DWORD *)(v157 + v156) = v151;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v232)(v157, 0, 1, v155);
      v158 = v229;
      swift_beginAccess();
      if (v215(v157, 1, v155) == 1)
      {
        sub_100522F00(v157, (uint64_t *)&unk_101674170);
        swift_bridgeObjectRetain();
        unint64_t v159 = sub_100955FC8(v152);
        char v161 = v160;
        swift_bridgeObjectRelease();
        v162 = v217;
        if (v161)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v164 = *v158;
          uint64_t v239 = *v158;
          uint64_t *v158 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10097C6D8();
            uint64_t v164 = v239;
          }
          v165 = *(void (**)(uint64_t, uint64_t))(v190 + 8);
          uint64_t v73 = v218;
          v165(*(void *)(v164 + 48) + *(void *)(v190 + 72) * v159, v218);
          uint64_t v166 = v239;
          uint64_t v167 = v191;
          sub_10051B3EC(*(void *)(v239 + 56) + *(void *)(v205 + 72) * v159, v191, (uint64_t *)&unk_101684F90);
          sub_100588230(v159, v166);
          uint64_t *v158 = v166;
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v232)(v167, 0, 1, v224);
        }
        else
        {
          uint64_t v167 = v191;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v232)(v191, 1, 1, v155);
          v165 = *v162;
          uint64_t v73 = v218;
        }
        v165(v220, v73);
        sub_100522F00(v167, (uint64_t *)&unk_101674170);
        uint64_t v71 = (uint64_t)v207;
        uint64_t v122 = (uint64_t)v210;
        v172 = v217;
      }
      else
      {
        v168 = v158;
        uint64_t v169 = (uint64_t)v201;
        sub_10051B3EC(v157, (uint64_t)v201, (uint64_t *)&unk_101684F90);
        char v170 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v239 = *v168;
        uint64_t *v168 = 0x8000000000000000;
        sub_10097258C(v169, v220, v170);
        uint64_t *v168 = v239;
        uint64_t v171 = v220;
        swift_bridgeObjectRelease();
        v172 = v217;
        (*v217)(v171, v154);
        uint64_t v71 = (uint64_t)v207;
        uint64_t v122 = (uint64_t)v210;
        uint64_t v73 = v154;
      }
      swift_endAccess();
      os_unfair_lock_unlock(v153);
      uint64_t v72 = (uint64_t)v214;
      if (!v150) {
        goto LABEL_91;
      }
      uint64_t v123 = v234;
      (*v216)((char *)v122, (uint64_t)v227, v234);
      uint64_t v124 = 0;
LABEL_92:
      uint64_t v74 = (uint64_t)v235;
LABEL_93:
      (*v212)(v122, v124, 1, v123);
      (*v172)(v74, v73);
      int v185 = (*v211)(v122, 1, v123);
      uint64_t result = sub_100522F00(v122, &qword_101672E90);
      if (v185 == 1)
      {
LABEL_94:
        BOOL v186 = v226 != 1;

        swift_release();
        return v186;
      }
    }
  }
  int64_t v84 = v231 + 1;
  if (__OFADD__(v231, 1))
  {
    __break(1u);
    goto LABEL_96;
  }
  CGFloat v77 = v238;
  if (v84 >= v208) {
    goto LABEL_33;
  }
  unint64_t v85 = *(void *)(v194 + 8 * v84);
  if (v85)
  {
LABEL_14:
    unint64_t v237 = (v85 - 1) & v85;
    unint64_t v76 = __clz(__rbit64(v85)) + (v84 << 6);
    int64_t v231 = v84;
    goto LABEL_10;
  }
  int64_t v86 = v231 + 2;
  if (v231 + 2 >= v208)
  {
LABEL_32:
    int64_t v231 = v84;
    goto LABEL_33;
  }
  unint64_t v85 = *(void *)(v194 + 8 * v86);
  if (v85)
  {
LABEL_17:
    int64_t v84 = v86;
    goto LABEL_14;
  }
  int64_t v87 = v231 + 3;
  if (v231 + 3 >= v208) {
    goto LABEL_29;
  }
  unint64_t v85 = *(void *)(v194 + 8 * v87);
  if (v85)
  {
LABEL_20:
    int64_t v84 = v87;
    goto LABEL_14;
  }
  int64_t v86 = v231 + 4;
  if (v231 + 4 >= v208)
  {
    v231 += 3;
    goto LABEL_33;
  }
  unint64_t v85 = *(void *)(v194 + 8 * v86);
  if (v85) {
    goto LABEL_17;
  }
  int64_t v87 = v231 + 5;
  if (v231 + 5 >= v208)
  {
LABEL_29:
    int64_t v231 = v86;
LABEL_33:
    uint64_t v88 = sub_1005057FC((uint64_t *)&unk_101684FB0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v77, 1, 1, v88);
    unint64_t v237 = 0;
    goto LABEL_34;
  }
  unint64_t v85 = *(void *)(v194 + 8 * v87);
  if (v85) {
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v84 = v87 + 1;
    if (__OFADD__(v87, 1)) {
      break;
    }
    if (v84 >= v208)
    {
      int64_t v84 = v188;
      goto LABEL_32;
    }
    unint64_t v85 = *(void *)(v194 + 8 * v84);
    ++v87;
    if (v85) {
      goto LABEL_14;
    }
  }
LABEL_96:
  __break(1u);
  return result;
}

uint64_t sub_100887A58(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_10103405C(v3, (uint64_t)&off_101518040);
  if (!v4)
  {
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    uint64_t v10 = *(void (**)(void *))(*(void *)v9 + 432);
    swift_retain();
    v10(a1);
    (*(void (**)(void *))(*(void *)v9 + 424))(a1);
    sub_10068307C(a1[3], a1[4], a1[5], a1[2]);
    swift_release();
    return sub_101023724(v5, (uint64_t)&off_101518040, a3);
  }
  return result;
}

void sub_100887B70(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0xE0);
  uint64_t v5 = (void *)v4();
  [v5 mutableCopy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10050BF48(0, (unint64_t *)&qword_101677CC0);
  if (swift_dynamicCast())
  {
    double v6 = (*(double (**)(void))((swift_isaMask & *a1) + 0x208))();
    double v8 = v7;
    uint64_t v9 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0xE0);
    uint64_t v10 = (void *)v9();
    [v10 size];
    double v12 = v11;
    double v14 = v13;

    uint64_t v15 = (void *)v4();
    [v15 size];
    double v17 = v16;
    double v19 = v18;

    v28.double width = sub_10006729C(0, v12, v14, v17, v19);
    double width = v28.width;
    double height = v28.height;
    v29.double width = 0.0;
    v29.double height = 0.0;
    if (CGSizeEqualToSize(v28, v29))
    {
      uint64_t v22 = (void *)v9();
      [v22 size];
      double width = v23;
      double height = v24;
    }
    [v27 setSize:width, height];
    [v27 setCenter:v6, v8];
    uint64_t v25 = *(void (**)(void))((swift_isaMask & *v2) + 0xE8);
    id v26 = v27;
    v25();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 301, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 301);
  }
}

double sub_100887E7C()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xE0))();
  [v1 center];
  double v3 = v2;

  return v3;
}

uint64_t sub_100887EF8(uint64_t a1)
{
  if (!*(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v4, v5);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    type metadata accessor for CRLBoardItem(0);
    if (swift_dynamicCastClass())
    {
      swift_unknownObjectWeakAssign();
      return swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRetain();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"parentInfo", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 335, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"parentInfo", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 335);
      return swift_unknownObjectRelease_n();
    }
  }
  else
  {
    return swift_unknownObjectWeakAssign();
  }
  return result;
}

void sub_100888194(uint64_t a1, uint64_t a2)
{
  Swift::String v5 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101177E70;
  *(void *)(v6 + 32) = v2;
  specialized Array._endMutation()();
  id v7 = v2;
  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v7;
  v12[4] = sub_100895CA0;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_10051CE64;
  v12[3] = &unk_101518158;
  uint64_t v10 = _Block_copy(v12);
  id v11 = v7;
  swift_retain();
  swift_release();
  [v5 temporaryLayoutControllerForInfos:isa useInBlock:v10];
  _Block_release(v10);
}

__n128 sub_10088830C@<Q0>(_OWORD *a1@<X8>)
{
  double v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE0))();
  if [v3 widthValid] && (objc_msgSend(v3, "heightValid"))
  {
    [v3 fullTransform];
    long long v7 = v10;
    long long v8 = v9;
    __n128 v6 = v11;
  }
  else
  {
    CKRecordID v4 = (void *)swift_allocObject();
    v4[2] = 0x3FF0000000000000;
    v4[3] = 0;
    v4[4] = 0;
    v4[6] = 0;
    v4[7] = 0;
    v4[5] = 0x3FF0000000000000;
    swift_retain();
    sub_100888194((uint64_t)sub_100895C0C, (uint64_t)v4);
    swift_release();
    swift_beginAccess();
    long long v7 = *((_OWORD *)v4 + 2);
    long long v8 = *((_OWORD *)v4 + 1);
    __n128 v6 = *((__n128 *)v4 + 3);

    swift_release();
  }
  *a1 = v8;
  a1[1] = v7;
  __n128 result = v6;
  a1[2] = v6;
  return result;
}

void sub_100888470(CGFloat *a1@<X8>)
{
  double v3 = v1;
  double d = 1.0;
  CGFloat ty = 0.0;
  CGFloat tx = 0.0;
  CGFloat c = 0.0;
  CGFloat b = 0.0;
  double a = 1.0;
  while (1)
  {
    long long v10 = *(uint64_t (**)(void))((swift_isaMask & *v3) + 0xE0);
    __n128 v11 = v3;
    double v12 = (void *)v10();
    [v12 transform];
    long long v15 = *(_OWORD *)&t1.c;
    long long v16 = *(_OWORD *)&t1.a;
    long long v14 = *(_OWORD *)&t1.tx;

    t1.double a = a;
    t1.CGFloat b = b;
    t1.CGFloat c = c;
    t1.double d = d;
    t1.CGFloat tx = tx;
    t1.CGFloat ty = ty;
    *(_OWORD *)&t2.double a = v16;
    *(_OWORD *)&t2.CGFloat c = v15;
    *(_OWORD *)&t2.CGFloat tx = v14;
    CGAffineTransformConcat(&v17, &t1, &t2);
    double a = v17.a;
    CGFloat b = v17.b;
    CGFloat c = v17.c;
    double d = v17.d;
    CGFloat tx = v17.tx;
    CGFloat ty = v17.ty;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

    if (!Strong) {
      break;
    }

    type metadata accessor for CRLBoardItem(0);
    double v3 = (void *)swift_dynamicCastClass();
    if (!v3) {
      goto LABEL_6;
    }
  }
  uint64_t Strong = v11;
LABEL_6:

  *a1 = a;
  a1[1] = b;
  a1[2] = c;
  a1[3] = d;
  a1[4] = tx;
  a1[5] = ty;
}

void sub_1008885D8(CGFloat *a1@<X8>)
{
  double v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xE0))();
  [v3 fullTransform];
  CGFloat a = t1.a;
  CGFloat b = t1.b;
  CGFloat c = t1.c;
  CGFloat d = t1.d;
  CGFloat tx = t1.tx;
  CGFloat ty = t1.ty;

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    CGFloat v23 = t1.d;
    CGFloat v24 = t1.c;
    CGFloat v25 = t1.b;
    CGFloat v26 = t1.a;
    __n128 v11 = Strong;
    double v12 = v11;
    double v13 = 1.0;
    CGFloat v14 = 0.0;
    CGFloat v15 = 0.0;
    CGFloat v16 = 0.0;
    CGFloat v17 = 0.0;
    double v18 = 1.0;
    while (1)
    {
      double v19 = *(uint64_t (**)(void))((swift_isaMask & *v11) + 0xE0);
      uint64_t v20 = v11;
      uint64_t v21 = (void *)v19();
      [v21 transform];
      long long v28 = *(_OWORD *)&t1.c;
      long long v29 = *(_OWORD *)&t1.a;
      long long v27 = *(_OWORD *)&t1.tx;

      t1.CGFloat a = v18;
      t1.CGFloat b = v17;
      t1.CGFloat c = v16;
      t1.CGFloat d = v13;
      t1.CGFloat tx = v15;
      t1.CGFloat ty = v14;
      *(_OWORD *)&t2.CGFloat a = v29;
      *(_OWORD *)&t2.CGFloat c = v28;
      *(_OWORD *)&t2.CGFloat tx = v27;
      CGAffineTransformConcat(&v30, &t1, &t2);
      double v18 = v30.a;
      CGFloat v17 = v30.b;
      CGFloat v16 = v30.c;
      double v13 = v30.d;
      CGFloat v15 = v30.tx;
      CGFloat v14 = v30.ty;
      uint64_t v22 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v22) {
        break;
      }

      type metadata accessor for CRLBoardItem(0);
      __n128 v11 = (void *)swift_dynamicCastClass();
      if (!v11) {
        goto LABEL_7;
      }
    }
    uint64_t v22 = v20;
LABEL_7:

    t1.CGFloat a = v26;
    t1.CGFloat b = v25;
    t1.CGFloat c = v24;
    t1.CGFloat d = v23;
    t1.CGFloat tx = tx;
    t1.CGFloat ty = ty;
    t2.CGFloat a = v18;
    t2.CGFloat b = v17;
    t2.CGFloat c = v16;
    t2.CGFloat d = v13;
    t2.CGFloat tx = v15;
    t2.CGFloat ty = v14;
    CGAffineTransformConcat(&v30, &t1, &t2);
    CGFloat a = v30.a;
    CGFloat b = v30.b;
    CGFloat c = v30.c;
    CGFloat d = v30.d;
    CGFloat tx = v30.tx;
    CGFloat ty = v30.ty;
  }
  *a1 = a;
  a1[1] = b;
  a1[2] = c;
  a1[3] = d;
  a1[4] = tx;
  a1[5] = ty;
}

void *sub_100888804()
{
  __n128 result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *result) + 0x2E8))();

    return (void *)v2;
  }
  return result;
}

void *sub_100888880()
{
  __n128 result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    char v2 = (*(uint64_t (**)(void))((swift_isaMask & *result) + 0x2F0))();

    return (void *)(v2 & 1);
  }
  return result;
}

uint64_t sub_1008888FC()
{
  uint64_t v1 = v0;
  uint64_t v28 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v3);
  Swift::String v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLBoardItemBase(0);
  uint64_t v6 = swift_dynamicCastClass();
  if (v6)
  {
    uint64_t v7 = v6;
    long long v8 = *(uint64_t (**)(uint64_t, _UNKNOWN **))((swift_isaMask & *v0) + 0x3D0);
    swift_unknownObjectRetain();
    uint64_t v9 = v8(v7, &off_101518040);
    uint64_t v10 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    __n128 v11 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v0
                                                          + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                            + 544);
    swift_retain();
    uint64_t v12 = swift_retain();
    double v13 = (double *)v11(v12);
    swift_release();
    swift_release();
    unint64_t v14 = *(void *)(*(void *)((char *)v0 + v10) + 24);
    LODWORD(v14) = sub_1002094A4() < v14;
    unint64_t v15 = *(void *)(*(void *)(v7 + v10) + 24);
    if ((v14 ^ (sub_1002094A4() >= v15)))
    {
      if (!*((void *)v13 + 2))
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = v28;
LABEL_11:
        uint64_t v21 = *(void (**)(uint64_t))(**(void **)((char *)v1 + v10) + 256);
        uint64_t v22 = swift_retain();
        v21(v22);
        swift_release();
        type metadata accessor for CRLTransactableObservableDeltas(0);
        uint64_t v23 = swift_allocObject();
        (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v23 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_id, v5, v16);
        *(void *)(v23 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_invalidationKeys) = v9;
        CGFloat v24 = (uint64_t *)(v23 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_snapshot);
        *CGFloat v24 = v7;
        v24[1] = (uint64_t)&off_101518040;
        return v23;
      }
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v13 = sub_100F61B70(0, *((void *)v13 + 2) + 1, 1, v13);
      }
      unint64_t v18 = *((void *)v13 + 2);
      unint64_t v17 = *((void *)v13 + 3);
      if (v18 >= v17 >> 1) {
        double v13 = sub_100F61B70((double *)(v17 > 1), v18 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v18 + 1;
      double v19 = &v13[2 * v18];
      v19[4] = 5.3028249e180;
      v19[5] = -5.98008217e197;
    }
    uint64_t v16 = v28;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = v9;
    sub_100972448((uint64_t)v13, 0, isUniquelyReferenced_nonNull_native);
    uint64_t v9 = v29;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createObservableDeltas(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 812, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createObservableDeltas(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 812);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double *sub_100888D38()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v10 = *(void (**)(uint64_t))(**(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                       + 264);
  uint64_t v11 = swift_retain();
  v10(v11);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, (uint64_t *)&unk_101674520);
LABEL_16:
    uint64_t v28 = _swiftEmptyArrayStorage;
    goto LABEL_17;
  }
  uint64_t v12 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v9, v4, v5);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x2E8))(v12);
  if (!v13
    || (unint64_t v14 = (void *)v13,
        Class isa = UUID._bridgeToObjectiveC()().super.isa,
        id v16 = [v14 getBoardItemForUUID:isa],
        v14,
        isa,
        !v16))
  {
LABEL_15:
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
    goto LABEL_16;
  }
  type metadata accessor for CRLContainerItem(0);
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {

    goto LABEL_15;
  }
  uint64_t v18 = v17;
  unint64_t v19 = sub_100A45DBC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v20 = (objc_class *)type metadata accessor for CRLPropertyMap();
  uint64_t v21 = (char *)objc_allocWithZone(v20);
  *(void *)&v21[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v19;
  v37.receiver = v21;
  v37.super_class = v20;
  [super init];
  uint64_t v23 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
  CGFloat v24 = *(double **)(v18 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
  if (!v24)
  {
    sub_100846AB0();
    CGFloat v24 = *(double **)(v18 + v23);
  }
  if (v24) {
    CGFloat v25 = v24;
  }
  else {
    CGFloat v25 = _swiftEmptyArrayStorage;
  }
  v36[3] = sub_1005057FC(&qword_101683E60);
  v36[0] = v25;
  sub_100522E9C((uint64_t)v36, (uint64_t)v35, &qword_101672BF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10057D61C((uint64_t)v35, 4uLL);
  swift_endAccess();
  sub_100522F00((uint64_t)v36, &qword_101672BF0);
  id v26 = v16;
  id v27 = v22;
  uint64_t v28 = sub_100F62254(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v30 = *((void *)v28 + 2);
  unint64_t v29 = *((void *)v28 + 3);
  if (v30 >= v29 >> 1) {
    uint64_t v28 = sub_100F62254((double *)(v29 > 1), v30 + 1, 1, v28);
  }
  *((void *)v28 + 2) = v30 + 1;
  uint64_t v31 = &v28[2 * v30];
  *((void *)v31 + 4) = v18;
  *((void *)v31 + 5) = v27;

  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_17:
  uint64_t v32 = sub_10058FFF0((uint64_t)v28);
  swift_bridgeObjectRelease();
  return v32;
}

double *sub_100889144(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v11 - 8, v12);
  unint64_t v14 = (char *)v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v149 - 8);
  __chkstk_darwin(v149, v16);
  id v133 = (char *)v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  NSString v131 = (char *)v124 - v20;
  __chkstk_darwin(v21, v22);
  NSString v132 = (char *)v124 - v23;
  uint64_t v140 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v140, v24);
  uint64_t v139 = (char *)v124 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v26 - 8, v27);
  v137 = (char *)v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  v136 = (char *)v124 - v31;
  __chkstk_darwin(v32, v33);
  uint64_t v135 = (uint64_t)v124 - v34;
  __chkstk_darwin(v35, v36);
  uint64_t v145 = (uint64_t)v124 - v37;
  __chkstk_darwin(v38, v39);
  uint64_t v143 = (uint64_t)v124 - v40;
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v41) {
        goto LABEL_4;
      }
      uint64_t v43 = _swiftEmptyArrayStorage;
      goto LABEL_59;
    default:
      swift_bridgeObjectRelease();
LABEL_4:
      type metadata accessor for CRLBoardItemBase(0);
      uint64_t v42 = swift_dynamicCastClass();
      if (v42)
      {
        uint64_t v129 = v14;
        uint64_t v43 = _swiftEmptyArrayStorage;
        uint64_t v148 = *(void *)(a1 + 16);
        if (!v148)
        {
LABEL_59:
          uint64_t v122 = sub_10058FFF0((uint64_t)v43);
          swift_bridgeObjectRelease();
          return v122;
        }
        v127 = v10;
        uint64_t v128 = v6;
        uint64_t v146 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        uint64_t v44 = *(void **)(v42 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        char v147 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
        uint64_t v138 = (void (**)(char *, uint64_t, uint64_t))(v15 + 32);
        uint64_t v141 = (void (**)(uint64_t, uint64_t))(v15 + 8);
        uint64_t v126 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
        unsigned int v125 = (void (**)(char *, uint64_t))(v7 + 8);
        v124[1] = a3;
        swift_unknownObjectRetain();
        Swift::Bool v144 = v44;
        swift_retain();
        swift_bridgeObjectRetain();
        v124[2] = a1;
        uint64_t v45 = (void *)(a1 + 40);
        uint64_t v130 = _swiftEmptyArrayStorage;
        uint64_t v46 = v142;
        uint64_t v47 = (uint64_t)v139;
        uint64_t v48 = v145;
        while (1)
        {
          BOOL v49 = *(v45 - 1) == 0x6641746E65726170 && *v45 == 0xEE007974696E6966;
          if (!v49 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_10;
          }
          uint64_t v50 = (void (**)(void))(*v144 + 264);
          CGFloat v51 = *v50;
          uint64_t v52 = v143;
          (*v50)();
          id v53 = *(void (**)(uint64_t))(**(void **)((char *)v46 + v146) + 264);
          uint64_t v54 = swift_retain();
          v53(v54);
          swift_release();
          uint64_t v55 = v47 + *(int *)(v140 + 48);
          sub_100522E9C(v52, v47, (uint64_t *)&unk_101674520);
          sub_100522E9C(v48, v55, (uint64_t *)&unk_101674520);
          uint64_t v56 = *v147;
          if ((*v147)(v47, 1, v149) == 1) {
            break;
          }
          uint64_t v58 = v135;
          sub_100522E9C(v47, v135, (uint64_t *)&unk_101674520);
          if (v56(v55, 1, v149) == 1)
          {
            sub_100522F00(v145, (uint64_t *)&unk_101674520);
            sub_100522F00(v143, (uint64_t *)&unk_101674520);
            (*v141)(v58, v149);
            uint64_t v46 = v142;
LABEL_21:
            uint64_t v59 = sub_100522F00(v47, (uint64_t *)&unk_10168A0C0);
            goto LABEL_22;
          }
          uint64_t v101 = v132;
          uint64_t v102 = v56;
          uint64_t v103 = v149;
          (*v138)(v132, v55, v149);
          sub_100895630((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v104 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v105 = v58;
          int v106 = *v141;
          uint64_t v107 = v101;
          uint64_t v47 = (uint64_t)v139;
          (*v141)((uint64_t)v107, v103);
          sub_100522F00(v145, (uint64_t *)&unk_101674520);
          sub_100522F00(v143, (uint64_t *)&unk_101674520);
          v106(v105, v103);
          uint64_t v56 = v102;
          uint64_t v59 = sub_100522F00(v47, (uint64_t *)&unk_101674520);
          uint64_t v46 = v142;
          if (v104) {
            goto LABEL_9;
          }
LABEL_22:
          uint64_t v60 = (uint64_t)v136;
          ((void (*)(uint64_t))v51)(v59);
          if (v56(v60, 1, v149) == 1)
          {
            sub_100522F00(v60, (uint64_t *)&unk_101674520);
          }
          else
          {
            int v134 = v56;
            uint64_t v61 = v131;
            uint64_t v62 = ((uint64_t (*)(char *, uint64_t, uint64_t))*v138)(v131, v60, v149);
            uint64_t v63 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v46) + 0x2E8))(v62);
            if (v63)
            {
              uint64_t v64 = (void *)v63;
              Class isa = UUID._bridgeToObjectiveC()().super.isa;
              id v66 = [v64 getBoardItemForUUID:isa];

              if (v66)
              {
                type metadata accessor for CRLContainerItem(0);
                uint64_t v67 = swift_dynamicCastClass();
                if (v67)
                {
                  uint64_t v68 = v67;
                  uint64_t v69 = _swiftEmptyArrayStorage;
                  unint64_t v70 = sub_100A45DBC((uint64_t)_swiftEmptyArrayStorage);
                  uint64_t v71 = (objc_class *)type metadata accessor for CRLPropertyMap();
                  uint64_t v72 = (char *)objc_allocWithZone(v71);
                  *(void *)&v72[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v70;
                  v150.receiver = v72;
                  v150.super_class = v71;
                  id v73 = [super init];
                  uint64_t v74 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
                  unint64_t v75 = *(double **)(v68 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
                  if (!v75)
                  {
                    sub_100846AB0();
                    unint64_t v75 = *(double **)(v68 + v74);
                  }
                  if (v75) {
                    uint64_t v69 = v75;
                  }
                  uint64_t v153 = sub_1005057FC(&qword_101683E60);
                  uint64_t v152 = v69;
                  sub_100522E9C((uint64_t)&v152, (uint64_t)v151, &qword_101672BF0);
                  swift_beginAccess();
                  swift_bridgeObjectRetain();
                  sub_10057D61C((uint64_t)v151, 4uLL);
                  swift_endAccess();
                  sub_100522F00((uint64_t)&v152, &qword_101672BF0);
                  id v76 = v66;
                  id v66 = v73;
                  CGFloat v77 = v130;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    CGFloat v77 = sub_100F62254(0, *((void *)v77 + 2) + 1, 1, v77);
                  }
                  unint64_t v79 = *((void *)v77 + 2);
                  unint64_t v78 = *((void *)v77 + 3);
                  uint64_t v46 = v142;
                  if (v79 >= v78 >> 1) {
                    CGFloat v77 = sub_100F62254((double *)(v78 > 1), v79 + 1, 1, v77);
                  }
                  *((void *)v77 + 2) = v79 + 1;
                  uint64_t v130 = v77;
                  uint64_t v80 = &v77[2 * v79];
                  *((void *)v80 + 4) = v68;
                  *((void *)v80 + 5) = v66;
                }
              }
            }
            (*v141)((uint64_t)v61, v149);
            uint64_t v56 = v134;
          }
          uint64_t v81 = *(void (**)(uint64_t))(**(void **)((char *)v46 + v146) + 264);
          uint64_t v82 = swift_retain();
          uint64_t v83 = (uint64_t)v137;
          v81(v82);
          swift_release();
          if (v56(v83, 1, v149) == 1)
          {
            sub_100522F00(v83, (uint64_t *)&unk_101674520);
          }
          else
          {
            int64_t v84 = v133;
            uint64_t v85 = ((uint64_t (*)(char *, uint64_t, uint64_t))*v138)(v133, v83, v149);
            uint64_t v86 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v46) + 0x2E8))(v85);
            if (v86)
            {
              int64_t v87 = (void *)v86;
              Class v88 = UUID._bridgeToObjectiveC()().super.isa;
              id v89 = [v87 getBoardItemForUUID:v88];

              if (v89)
              {
                type metadata accessor for CRLContainerItem(0);
                uint64_t v90 = swift_dynamicCastClass();
                if (v90)
                {
                  uint64_t v91 = v90;
                  type metadata accessor for CRLContainerItemData(0);
                  uint64_t v92 = *(void *)swift_dynamicCastClassUnconditional();
                  uint64_t v93 = (uint64_t)v129;
                  (*(void (**)(void))(v92 + 680))();
                  uint64_t v94 = v127;
                  uint64_t v95 = v128;
                  (*v126)(v127, v93, v128);
                  sub_100895D24(v93, type metadata accessor for CRLContainerItemCRDTData);
                  unint64_t v96 = *(void (**)(uint64_t))(**(void **)((char *)v46 + v146) + 256);
                  uint64_t v97 = swift_retain();
                  uint64_t v98 = v132;
                  v96(v97);
                  swift_release();
                  char v99 = CROrderedSet.contains(_:)();
                  double v100 = *v141;
                  (*v141)((uint64_t)v98, v149);
                  (*v125)(v94, v95);
                  if (v99)
                  {
                    v100((uint64_t)v133, v149);

                    uint64_t v46 = v142;
                  }
                  else
                  {
                    long long v108 = _swiftEmptyArrayStorage;
                    unint64_t v109 = sub_100A45DBC((uint64_t)_swiftEmptyArrayStorage);
                    uint64_t v110 = (objc_class *)type metadata accessor for CRLPropertyMap();
                    double v111 = (char *)objc_allocWithZone(v110);
                    *(void *)&v111[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v109;
                    v154.receiver = v111;
                    v154.super_class = v110;
                    id v112 = [super init];
                    uint64_t v113 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
                    v114 = *(double **)(v91 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
                    uint64_t v115 = v133;
                    if (!v114)
                    {
                      sub_100846AB0();
                      v114 = *(double **)(v91 + v113);
                    }
                    if (v114) {
                      long long v108 = v114;
                    }
                    uint64_t v153 = sub_1005057FC(&qword_101683E60);
                    uint64_t v152 = v108;
                    sub_100522E9C((uint64_t)&v152, (uint64_t)v151, &qword_101672BF0);
                    swift_beginAccess();
                    swift_bridgeObjectRetain();
                    sub_10057D61C((uint64_t)v151, 4uLL);
                    swift_endAccess();
                    sub_100522F00((uint64_t)&v152, &qword_101672BF0);
                    id v116 = v89;
                    id v117 = v112;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v130 = sub_100F62254(0, *((void *)v130 + 2) + 1, 1, v130);
                    }
                    uint64_t v46 = v142;
                    unint64_t v119 = *((void *)v130 + 2);
                    unint64_t v118 = *((void *)v130 + 3);
                    if (v119 >= v118 >> 1) {
                      uint64_t v130 = sub_100F62254((double *)(v118 > 1), v119 + 1, 1, v130);
                    }
                    uint64_t v120 = v130;
                    *((void *)v130 + 2) = v119 + 1;
                    uint64_t v121 = &v120[2 * v119];
                    *((void *)v121 + 4) = v91;
                    *((void *)v121 + 5) = v117;

                    v100((uint64_t)v115, v149);
                  }
                  goto LABEL_8;
                }
              }
            }
            (*v141)((uint64_t)v84, v149);
          }
LABEL_8:
          uint64_t v47 = (uint64_t)v139;
LABEL_9:
          uint64_t v48 = v145;
LABEL_10:
          v45 += 2;
          if (!--v148)
          {
            swift_unknownObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v43 = v130;
            goto LABEL_59;
          }
        }
        sub_100522F00(v48, (uint64_t *)&unk_101674520);
        sub_100522F00(v52, (uint64_t *)&unk_101674520);
        unsigned int v57 = v56(v55, 1, v149);
        uint64_t v46 = v142;
        if (v57 == 1)
        {
          sub_100522F00(v47, (uint64_t *)&unk_101674520);
          goto LABEL_9;
        }
        goto LABEL_21;
      }
      return _swiftEmptyArrayStorage;
  }
}

double *sub_10088A1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v13 = *(void (**)(uint64_t))(**(void **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 264);
  uint64_t v14 = swift_retain();
  v13(v14);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674520);
LABEL_15:
    uint64_t v26 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v12, v7, v8);
  uint64_t ObjectType = swift_getObjectType();
  if (!(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(a2 + 16))(v12, ObjectType, a2))
  {
LABEL_14:
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
    goto LABEL_15;
  }
  type metadata accessor for CRLContainerItem(0);
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16)
  {
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  uint64_t v17 = v16;
  unint64_t v18 = sub_100A45DBC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v19 = (objc_class *)type metadata accessor for CRLPropertyMap();
  uint64_t v20 = (char *)objc_allocWithZone(v19);
  *(void *)&v20[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v18;
  v35.receiver = v20;
  v35.super_class = v19;
  id v21 = [super init];
  uint64_t v22 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
  uint64_t v23 = *(double **)(v17 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
  if (!v23)
  {
    sub_100846AB0();
    uint64_t v23 = *(double **)(v17 + v22);
  }
  if (v23) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  v34[3] = sub_1005057FC(&qword_101683E60);
  v34[0] = v24;
  sub_100522E9C((uint64_t)v34, (uint64_t)v33, &qword_101672BF0);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10057D61C((uint64_t)v33, 4uLL);
  swift_endAccess();
  sub_100522F00((uint64_t)v34, &qword_101672BF0);
  swift_unknownObjectRetain();
  id v25 = v21;
  uint64_t v26 = sub_100F62254(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v28 = *((void *)v26 + 2);
  unint64_t v27 = *((void *)v26 + 3);
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_100F62254((double *)(v27 > 1), v28 + 1, 1, v26);
  }
  *((void *)v26 + 2) = v28 + 1;
  uint64_t v29 = &v26[2 * v28];
  *((void *)v29 + 4) = v17;
  *((void *)v29 + 5) = v25;
  swift_unknownObjectRelease();

  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
LABEL_16:
  uint64_t v30 = sub_10058FFF0((uint64_t)v26);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_10088A5B4()
{
  swift_retain();
  sub_10068B460();

  return swift_release();
}

uint64_t sub_10088A5FC()
{
  return swift_retain();
}

double *sub_10088A634()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 360);
  uint64_t v3 = swift_retain();
  uint64_t v4 = v2(v3);
  unint64_t v6 = v5;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + v1) + 360);
    uint64_t v9 = swift_retain();
    uint64_t v10 = v8(v9);
    uint64_t v12 = v11;
    swift_release();
    uint64_t v13 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v15 = *((void *)v13 + 2);
    unint64_t v14 = *((void *)v13 + 3);
    if (v15 >= v14 >> 1) {
      uint64_t v13 = sub_100F61B70((double *)(v14 > 1), v15 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v15 + 1;
    uint64_t v16 = &v13[2 * v15];
    *((void *)v16 + 4) = v10;
    *((void *)v16 + 5) = v12;
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v17 = sub_1008862B4();
  if (v18)
  {
    uint64_t v19 = v17;
    unint64_t v20 = v18;
    uint64_t v21 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0) {
      uint64_t v21 = v17 & 0xFFFFFFFFFFFFLL;
    }
    if (v21)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_100F61B70(0, *((void *)v13 + 2) + 1, 1, v13);
      }
      unint64_t v23 = *((void *)v13 + 2);
      unint64_t v22 = *((void *)v13 + 3);
      if (v23 >= v22 >> 1) {
        uint64_t v13 = sub_100F61B70((double *)(v22 > 1), v23 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v23 + 1;
      uint64_t v24 = &v13[2 * v23];
      *((void *)v24 + 4) = v19;
      *((void *)v24 + 5) = v20;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v13;
}

uint64_t sub_10088A820(uint64_t a1)
{
  sub_100522E9C(a1, (uint64_t)v17, &qword_101672BF0);
  uint64_t v3 = v18;
  if (v18)
  {
    uint64_t v4 = sub_10050F848(v17, v18);
    uint64_t v5 = *(void *)(v3 - 8);
    __n128 v6 = __chkstk_darwin(v4, v4);
    uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
    uint64_t v9 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v17);
  }
  else
  {
    uint64_t v9 = 0;
  }
  unsigned int v10 = [v1 isEqual:v9];
  swift_unknownObjectRelease();
  if (!v10) {
    goto LABEL_9;
  }
  sub_100522E9C(a1, (uint64_t)v17, &qword_101672BF0);
  if (!v18)
  {
    sub_100522F00((uint64_t)v17, &qword_101672BF0);
    goto LABEL_9;
  }
  type metadata accessor for CRLBoardItemBase(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    char v14 = 0;
    return v14 & 1;
  }
  uint64_t v11 = (void *)v16[1];
  uint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 448);
  swift_retain();
  uint64_t v13 = swift_retain();
  char v14 = v12(v13);

  swift_release();
  swift_release();
  return v14 & 1;
}

void sub_10088AA40(void *a1)
{
  uint64_t v2 = v1;
  if (!*(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v10, v11);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v4 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v5 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v1
                                                         + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 288);
    uint64_t v6 = swift_retain();
    uint64_t v7 = (void *)v5(v6);
    swift_release();
    sub_10050BF48(0, (unint64_t *)&qword_101684F50);
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = *(void (**)(void *))(**(void **)((char *)v2 + v4) + 296);
      swift_retain();
      v9(a1);
      swift_release();
    }
  }
}

uint64_t sub_10088AC8C(char a1)
{
  uint64_t v2 = v1;
  if (!*(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v10, v11);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v4 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v5 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v1
                                                         + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 312);
    uint64_t v6 = swift_retain();
    LODWORD(v5) = v5(v6) & 1;
    uint64_t result = swift_release();
    uint64_t v8 = a1 & 1;
    if (v5 != v8)
    {
      uint64_t v9 = *(void (**)(uint64_t))(**(void **)((char *)v2 + v4) + 320);
      swift_retain();
      v9(v8);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10088AEB4(char a1)
{
  uint64_t v2 = v1;
  if (!*(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v10, v11);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v4 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v5 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v1
                                                         + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 336);
    uint64_t v6 = swift_retain();
    LODWORD(v5) = v5(v6) & 1;
    uint64_t result = swift_release();
    uint64_t v8 = a1 & 1;
    if (v5 != v8)
    {
      uint64_t v9 = *(void (**)(uint64_t))(**(void **)((char *)v2 + v4) + 344);
      swift_retain();
      v9(v8);
      return swift_release();
    }
  }
  return result;
}

void sub_10088B0DC(void *a1)
{
  uint64_t v2 = v1;
  if (!*(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F0))() & 1) != 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v13, v14);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v4 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v5 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v1
                                                       + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 384);
  uint64_t v6 = swift_retain();
  uint64_t v7 = (void *)v5(v6);
  swift_release();
  if (v7)
  {
    if (a1)
    {
      sub_10050BF48(0, (unint64_t *)&qword_101684F80);
      id v8 = a1;
      id v9 = v7;
      char v10 = static NSObject.== infix(_:_:)();

      if (v10) {
        return;
      }
    }
    else
    {
    }
  }
  else if (!a1)
  {
    return;
  }
  Swift::String v11 = *(void (**)(void *))(**(void **)((char *)v2 + v4) + 392);
  id v12 = a1;
  swift_retain();
  v11(a1);

  swift_release();
}

uint64_t sub_10088B368(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (!*(void *)((char *)v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && ((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x2F0))() & 1) != 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v16, v17);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v6 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v7 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v2
                                                         + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 360);
    uint64_t v8 = swift_retain();
    uint64_t v9 = v7(v8);
    uint64_t v11 = v10;
    swift_release();
    if (v9 == a1 && v11 == a2)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v15 = *(void (**)(uint64_t, uint64_t))(**(void **)((char *)v3 + v6) + 368);
        swift_retain();
        swift_bridgeObjectRetain();
        v15(a1, a2);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_10088B608(uint64_t a1)
{
  swift_getObjectType();

  return sub_100892118(a1, v1);
}

void *sub_10088B658()
{
  swift_getObjectType();

  return sub_100893BF8();
}

uint64_t sub_10088B69C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin(v9, v10);
  char v13 = (char *)&v28 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v28 - v12, a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id, v4, v11);
  uint64_t v28 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  Swift::String v14 = *(void (**)(uint64_t))(**(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 256);
  uint64_t v15 = swift_retain();
  v14(v15);
  swift_release();
  char v16 = static UUID.== infix(_:_:)();
  Swift::String v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v13, v4);
  if ((v16 & 1) == 0)
  {
    sub_100895BA8();
    swift_allocError();
    *uint64_t v24 = 3;
    return swift_willThrow();
  }
  uint64_t v18 = v34;
  uint64_t result = sub_10103405C(v2, (uint64_t)&off_101518040);
  if (v18) {
    return result;
  }
  unint64_t v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (*(void *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_100956360(0);
    if (v23)
    {
      sub_100522E9C(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&v29, &qword_101672BF0);
    }
    else
    {
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 1;
    }
    swift_bridgeObjectRelease();
    if (v32 != 1)
    {
      sub_10051B3EC((uint64_t)&v29, (uint64_t)v33, &qword_101672BF0);
      unint64_t v27 = *(void (**)(unsigned char *))(**(void **)(v2 + v28) + 552);
      swift_retain();
      v27(v33);
      swift_release();
      uint64_t v26 = (uint64_t *)v33;
      id v25 = &qword_101672BF0;
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 1;
  }
  id v25 = (uint64_t *)&unk_1016725E0;
  uint64_t v26 = &v29;
LABEL_12:
  sub_100522F00((uint64_t)v26, v25);
  return sub_101023724(v2, (uint64_t)&off_101518040, 2u);
}

uint64_t sub_10088B9E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  swift_getObjectType();

  return sub_100892474(a1, a2, a3, a4, v4);
}

uint64_t sub_10088BA58()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 568);
  uint64_t v3 = swift_retain();
  uint64_t v4 = v2(v3);
  uint64_t v5 = (*(uint64_t (**)(void))(*(void *)v1 + 576))();
  uint64_t v6 = sub_100C2F3F4(v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_100CDCB64((uint64_t)v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_100C2F3F4(v5);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_100CDCB64((uint64_t)v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_100ED8C0C(v9, v7);
  swift_release();
  return v10;
}

uint64_t sub_10088BB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v9 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v3
                                                                 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                   + 456);
  swift_retain();
  uint64_t v11 = v10(a1, a2);
  unint64_t v13 = v12;
  uint64_t result = swift_release();
  if (!v4)
  {
    uint64_t v39 = v11;
    uint64_t v38 = a3;
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)(v3 + v9) + 464);
    swift_retain();
    uint64_t v16 = v15(a1, a2 & 1);
    unint64_t v18 = v17;
    swift_release();
    sub_1005057FC(&qword_10167F3E0);
    initeCGFloat d = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(unsigned char *)(inited + 32) = 1;
    *(void *)(inited + 40) = v39;
    *(void *)(inited + 48) = v13;
    unint64_t v36 = v13;
    *(unsigned char *)(inited + 56) = 2;
    *(void *)(inited + 64) = v16;
    *(void *)(inited + 72) = v18;
    sub_100510D4C(v39, v13);
    sub_100510D4C(v16, v18);
    unint64_t v37 = sub_100A396E0(inited);
    uint64_t v20 = v16;
    uint64_t v21 = *(uint64_t (**)(uint64_t))(**(void **)(v5 + v9) + 568);
    uint64_t v22 = swift_retain();
    uint64_t v23 = v21(v22);
    swift_release();
    uint64_t v24 = *(uint64_t (**)(uint64_t))(**(void **)(v5 + v9) + 576);
    uint64_t v25 = swift_retain();
    uint64_t v26 = v24(v25);
    swift_release();
    uint64_t v27 = sub_10089193C(v26, v23);
    uint64_t v28 = *(void *)(v5 + v9);
    uint64_t v29 = (*(uint64_t (**)(void))(*(void *)v28 + 408))();
    if (v30) {
      uint64_t v31 = v29 + 2;
    }
    else {
      uint64_t v31 = v29;
    }
    unint64_t v32 = v18;
    uint64_t v33 = *(void *)(v28 + 16);
    long long v35 = *(_OWORD *)(v28 + 24);
    uint64_t v34 = *(void *)(v28 + 40);
    swift_retain();
    sub_100510084(v39, v36);
    sub_100510084(v20, v32);
    uint64_t result = swift_release();
    *(_OWORD *)uint64_t v38 = v35;
    *(void *)(v38 + 16) = v34;
    *(void *)(v38 + 24) = v33;
    *(void *)(v38 + 32) = v31;
    *(void *)(v38 + 40) = v37;
    *(void *)(v38 + 48) = v27;
    *(void *)(v38 + 56) = _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10088BE6C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_10088C380()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

void sub_10088C73C()
{
  qword_10171AD98 = (uint64_t)&off_101502D70;
}

unint64_t sub_10088C750(char a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x70756F7267;
      break;
    case 2:
      unint64_t result = 0x6570616873;
      break;
    case 3:
      unint64_t result = 0x697463656E6E6F63;
      break;
    case 4:
      unint64_t result = 0x6567616D69;
      break;
    case 5:
      unint64_t result = 0x6569766F6DLL;
      break;
    case 6:
      unint64_t result = 1701603686;
      break;
    case 7:
      unint64_t result = 7107189;
      break;
    case 8:
      unint64_t result = 2053403509;
      break;
    case 9:
      unint64_t result = 0x646E616865657266;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 11:
      unint64_t result = 0x6F4E796B63697473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10088C8BC(void *a1, uint64_t a2, int a3)
{
  uint64_t v88 = a2;
  int v87 = a3;
  uint64_t v4 = sub_1005057FC(&qword_101684EE0);
  uint64_t v83 = *(void *)(v4 - 8);
  uint64_t v84 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v82 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101684EE8);
  uint64_t v80 = *(void *)(v7 - 8);
  uint64_t v81 = v7;
  __chkstk_darwin(v7, v8);
  unint64_t v79 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101684EF0);
  uint64_t v77 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  __chkstk_darwin(v10, v11);
  id v76 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101684EF8);
  uint64_t v74 = *(void *)(v13 - 8);
  uint64_t v75 = v13;
  __chkstk_darwin(v13, v14);
  id v73 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101684F00);
  uint64_t v71 = *(void *)(v16 - 8);
  uint64_t v72 = v16;
  __chkstk_darwin(v16, v17);
  unint64_t v70 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1005057FC(&qword_101684F08);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v19);
  uint64_t v67 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1005057FC(&qword_101684F10);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v21);
  uint64_t v64 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1005057FC(&qword_101684F18);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v23);
  uint64_t v61 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1005057FC(&qword_101684F20);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60, v25);
  uint64_t v58 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1005057FC(&qword_101684F28);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57, v27);
  uint64_t v55 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1005057FC(&qword_101684F30);
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v29);
  uint64_t v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1005057FC(&qword_101684F38);
  uint64_t v85 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v33);
  long long v35 = (char *)&v53 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1005057FC(&qword_101684F40);
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v38);
  uint64_t v40 = (char *)&v53 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1008951BC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v87)
  {
    switch(v88)
    {
      case 1:
        v89[6] = 2;
        sub_100895504();
        uint64_t v45 = v55;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v56 + 8);
        uint64_t v43 = v45;
        uint64_t v44 = (uint64_t *)v89;
        goto LABEL_9;
      case 2:
        v89[7] = 3;
        sub_1008954B0();
        uint64_t v46 = v58;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v59 + 8);
        uint64_t v43 = v46;
        uint64_t v44 = (uint64_t *)v90;
        goto LABEL_9;
      case 3:
        v90[0] = 4;
        sub_10089545C();
        uint64_t v47 = v61;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v62 + 8);
        uint64_t v43 = v47;
        uint64_t v44 = &v91;
        goto LABEL_9;
      case 4:
        v90[1] = 5;
        sub_100895408();
        uint64_t v48 = v64;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v65 + 8);
        uint64_t v43 = v48;
        uint64_t v44 = &v92;
        goto LABEL_9;
      case 5:
        v90[2] = 6;
        sub_1008953B4();
        uint64_t v50 = v67;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v69);
        return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v40, v36);
      case 6:
        v90[3] = 7;
        sub_100895360();
        CGFloat v51 = v70;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v52 = v71;
        uint64_t v49 = v72;
        goto LABEL_16;
      case 7:
        v90[4] = 8;
        sub_10089530C();
        CGFloat v51 = v73;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v52 = v74;
        uint64_t v49 = v75;
        goto LABEL_16;
      case 8:
        v90[5] = 9;
        sub_1008952B8();
        CGFloat v51 = v76;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v52 = v77;
        uint64_t v49 = v78;
        goto LABEL_16;
      case 9:
        void v90[6] = 10;
        sub_100895264();
        CGFloat v51 = v79;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v52 = v80;
        uint64_t v49 = v81;
        goto LABEL_16;
      case 10:
        v90[7] = 11;
        sub_100895210();
        CGFloat v51 = v82;
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v52 = v83;
        uint64_t v49 = v84;
LABEL_16:
        uint64_t v42 = *(void (**)(char *, uint64_t))(v52 + 8);
        uint64_t v43 = v51;
        break;
      default:
        v89[5] = 1;
        sub_100895558();
        KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v53 + 8);
        uint64_t v43 = v31;
        uint64_t v44 = (uint64_t *)&v86;
LABEL_9:
        uint64_t v49 = *(v44 - 32);
        break;
    }
    v42(v43, v49);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v40, v36);
  }
  else
  {
    v89[4] = 0;
    sub_1008955AC();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v32);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v40, v36);
  }
}

unint64_t sub_10088D3C8()
{
  return sub_10088C750(*v0);
}

uint64_t sub_10088D3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100893D24(a1, a2);
  *a3 = result;
  return result;
}

void sub_10088D3F8(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_10088D404(uint64_t a1)
{
  unint64_t v2 = sub_1008951BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D440(uint64_t a1)
{
  unint64_t v2 = sub_1008951BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D47C(uint64_t a1)
{
  unint64_t v2 = sub_1008954B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D4B8(uint64_t a1)
{
  unint64_t v2 = sub_1008954B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D4F4(uint64_t a1)
{
  unint64_t v2 = sub_1008953B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D530(uint64_t a1)
{
  unint64_t v2 = sub_1008953B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D56C(uint64_t a1)
{
  unint64_t v2 = sub_1008952B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D5A8(uint64_t a1)
{
  unint64_t v2 = sub_1008952B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D5E4(uint64_t a1)
{
  unint64_t v2 = sub_100895264();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D620(uint64_t a1)
{
  unint64_t v2 = sub_100895264();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D65C(uint64_t a1)
{
  unint64_t v2 = sub_100895558();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D698(uint64_t a1)
{
  unint64_t v2 = sub_100895558();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D6D4(uint64_t a1)
{
  unint64_t v2 = sub_10089545C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D710(uint64_t a1)
{
  unint64_t v2 = sub_10089545C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D74C(uint64_t a1)
{
  unint64_t v2 = sub_100895408();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D788(uint64_t a1)
{
  unint64_t v2 = sub_100895408();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D7C4(uint64_t a1)
{
  unint64_t v2 = sub_100895504();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D800(uint64_t a1)
{
  unint64_t v2 = sub_100895504();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D83C(uint64_t a1)
{
  unint64_t v2 = sub_100895210();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D878(uint64_t a1)
{
  unint64_t v2 = sub_100895210();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088D8B4()
{
  return 0x6574736973726570;
}

uint64_t sub_10088D8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6574736973726570 && a2 == 0xEF6570795465636ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10088D994(uint64_t a1)
{
  unint64_t v2 = sub_1008955AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088D9D0(uint64_t a1)
{
  unint64_t v2 = sub_1008955AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088DA0C(uint64_t a1)
{
  unint64_t v2 = sub_100895360();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088DA48(uint64_t a1)
{
  unint64_t v2 = sub_100895360();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088DA84(uint64_t a1)
{
  unint64_t v2 = sub_10089530C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10088DAC0(uint64_t a1)
{
  unint64_t v2 = sub_10089530C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10088DAFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1008941FC(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_10088DB30(void *a1)
{
  return sub_10088C8BC(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

BOOL sub_10088DB50(uint64_t a1, uint64_t a2)
{
  return sub_100893AB4(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_10088DB6C@<X0>(void *a1@<X8>)
{
  if (qword_10166F420 != -1) {
    swift_once();
  }
  *a1 = qword_10171AD98;

  return swift_bridgeObjectRetain();
}

void sub_10088DC3C()
{
}

void sub_10088DF08()
{
}

void sub_10088DF6C()
{
}

void sub_10088DFD0()
{
}

id sub_10088E064(void *a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xC8))();
  a3(v4, v5 & 1);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v6;
}

void sub_10088E154()
{
}

void sub_10088E21C()
{
}

void sub_10088E2E4()
{
}

void sub_10088E3AC()
{
}

void sub_10088E4D8()
{
}

void sub_10088E5A0()
{
}

void sub_10088E668()
{
}

void sub_10088E730()
{
}

void sub_10088E85C()
{
}

void sub_10088ED78()
{
}

void sub_10088EF1C()
{
}

void sub_10088EF80()
{
}

void sub_10088F320(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  id v5 = [a1 layoutForInfo:a4];
  a2();
}

id sub_10088F73C(void *a1, double *a2)
{
  if (!a1)
  {
    double v7 = 1.0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v5 = 0;
    double v6 = 1.0;
    goto LABEL_5;
  }
  id result = [a1 pureGeometry];
  if (result)
  {
    uint64_t v4 = result;
    [result fullTransform];
    double v6 = v11;
    uint64_t v5 = v12;
    uint64_t v8 = v13;
    double v7 = v14;
    uint64_t v10 = v15;
    uint64_t v9 = v16;

LABEL_5:
    id result = (id)swift_beginAccess();
    a2[2] = v6;
    *((void *)a2 + 3) = v5;
    *((void *)a2 + 4) = v8;
    a2[5] = v7;
    *((void *)a2 + 6) = v10;
    *((void *)a2 + 7) = v9;
    return result;
  }
  __break(1u);
  return result;
}

double sub_10088F82C@<D0>(void *a1@<X0>, void (*a2)(_OWORD *__return_ptr)@<X2>, _OWORD *a3@<X8>)
{
  id v5 = a1;
  a2(v9);

  double result = *(double *)v9;
  long long v7 = v9[1];
  long long v8 = v9[2];
  *a3 = v9[0];
  a3[1] = v7;
  a3[2] = v8;
  return result;
}

void sub_10088FAEC()
{
}

void sub_10088FB50()
{
}

void sub_10088FBB4()
{
}

void sub_10088FC18()
{
}

void sub_10088FC7C()
{
}

void sub_10088FCE0()
{
}

void sub_10088FD44()
{
}

void sub_10088FDA8()
{
}

void sub_10088FE0C()
{
}

void sub_10088FED4()
{
}

void sub_10088FF9C()
{
}

void sub_100890000()
{
}

void sub_100890064()
{
}

void sub_10089012C()
{
}

void sub_100890190()
{
}

id sub_100890338()
{
  return sub_100891AE4(type metadata accessor for CRLBoardItem);
}

uint64_t sub_1008903A8()
{
  return type metadata accessor for CRLBoardItem(0);
}

uint64_t type metadata accessor for CRLBoardItem(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101684DA8);
}

void sub_1008903D0()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100890474()
{
  return swift_retain();
}

uint64_t sub_100890484(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext) = a1;
  return swift_release();
}

uint64_t sub_10089049C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x88))();
}

uint64_t sub_1008904D0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2F0))();
}

uint64_t sub_10089050C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x300))();
}

uint64_t sub_100890548()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x308))();
}

uint64_t sub_100890584()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x310))();
}

uint64_t sub_1008905C0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
}

uint64_t sub_100890610()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x320))();
}

uint64_t sub_10089064C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x328))();
}

uint64_t sub_100890688()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x330))();
}

uint64_t sub_1008906C4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x338))();
}

uint64_t sub_100890700()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x348))();
}

uint64_t sub_10089073C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x370))();
}

uint64_t sub_100890778()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x358))();
}

double sub_1008907B4@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))((swift_isaMask & *v1) + 0x360))(v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a1 = v7[0];
    a1[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a1[2] = v8;
    a1[3] = v6;
  }
  return result;
}

uint64_t sub_100890830()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x368))();
}

uint64_t sub_10089086C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x370))() & 1;
}

uint64_t sub_1008910C8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  long long v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  double v11 = (char *)&v27 - v10;
  sub_100522E9C(a1, (uint64_t)v29, &qword_101672BF0);
  if (!v30)
  {
    sub_100522F00((uint64_t)v29, &qword_101672BF0);
    goto LABEL_44;
  }
  type metadata accessor for CRLBoardItemBase(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_44:
    char v24 = 0;
    return v24 & 1;
  }
  uint64_t v12 = v28;
  if (v28 == v1)
  {

    char v24 = 1;
    return v24 & 1;
  }
  uint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  uint64_t v14 = (*(uint64_t (**)(void))(*(void *)v13 + 408))();
  char v16 = v15;
  uint64_t v17 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  unint64_t v18 = (*(uint64_t (**)(void))(**(void **)&v12[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 408))();
  if (v16)
  {
    switch(v14)
    {
      case 1:
        if ((v19 & 1) == 0 || v18 != 1) {
          goto LABEL_43;
        }
        goto LABEL_7;
      case 2:
        if ((v19 & 1) == 0 || v18 != 2) {
          goto LABEL_43;
        }
        goto LABEL_7;
      case 3:
        if ((v19 & 1) == 0 || v18 != 3) {
          goto LABEL_43;
        }
        goto LABEL_7;
      case 4:
        if ((v19 & 1) == 0 || v18 != 4) {
          goto LABEL_43;
        }
        goto LABEL_7;
      case 5:
        if ((v19 & 1) == 0 || v18 != 5) {
          goto LABEL_43;
        }
        goto LABEL_7;
      case 6:
        if ((v19 & 1) == 0 || v18 != 6) {
          goto LABEL_43;
        }
        goto LABEL_7;
      case 7:
        if ((v19 & 1) == 0 || v18 != 7) {
          goto LABEL_43;
        }
        goto LABEL_7;
      case 8:
        if ((v19 & 1) == 0 || v18 != 8) {
          goto LABEL_43;
        }
        goto LABEL_7;
      case 9:
        if ((v19 & 1) == 0 || v18 != 9) {
          goto LABEL_43;
        }
        goto LABEL_7;
      case 10:
        if ((v19 & 1) == 0 || v18 < 0xA) {
          goto LABEL_43;
        }
        goto LABEL_7;
      default:
        if ((v19 & 1) == 0 || v18) {
          goto LABEL_43;
        }
        goto LABEL_7;
    }
  }
  if ((v19 & 1) != 0 || v14 != v18)
  {
LABEL_43:

    goto LABEL_44;
  }
LABEL_7:
  uint64_t v20 = *(void (**)(uint64_t))(*(void *)v13 + 256);
  uint64_t v21 = swift_retain();
  v20(v21);
  swift_release();
  uint64_t v22 = *(void (**)(uint64_t))(**(void **)&v12[v17] + 256);
  uint64_t v23 = swift_retain();
  v22(v23);
  swift_release();
  char v24 = static UUID.== infix(_:_:)();

  uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
  v25(v7, v3);
  v25(v11, v3);
  return v24 & 1;
}

uint64_t sub_1008914BC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    id v7 = a1;
  }
  char v8 = a4(v10);

  sub_100522F00((uint64_t)v10, &qword_101672BF0);
  return v8 & 1;
}

Swift::Int sub_100891580()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = Hasher.init()();
  uint64_t v7 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  Swift::UInt v8 = (*(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                          + 408))(v6);
  if (v9) {
    v8 += 2;
  }
  Hasher._combine(_:)(v8);
  uint64_t v10 = *(void (**)(uint64_t))(**(void **)(v0 + v7) + 256);
  uint64_t v11 = swift_retain();
  v10(v11);
  swift_release();
  sub_100895630((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
  long long v20 = v15;
  long long v21 = v16;
  uint64_t v22 = v17;
  long long v18 = *(_OWORD *)&v13[8];
  long long v19 = v14;
  return Hasher.finalize()();
}

uint64_t sub_10089193C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_100891CF8(a1, (uint64_t)sub_100CD6060, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100891A8C()
{
  return swift_release();
}

id sub_100891ACC()
{
  return sub_100891AE4(type metadata accessor for CRLBoardItemBase);
}

id sub_100891AE4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  [super dealloc];
}

uint64_t sub_100891B70()
{
  return type metadata accessor for CRLBoardItemBase(0);
}

uint64_t type metadata accessor for CRLBoardItemBase(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101684DE8);
}

uint64_t sub_100891B98()
{
  return swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for CRLBoardItemType()
{
  return &type metadata for CRLBoardItemType;
}

unint64_t sub_100891C88()
{
  unint64_t result = qword_101684DF8;
  if (!qword_101684DF8)
  {
    sub_100522D34(&qword_101684E00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684DF8);
  }
  return result;
}

id sub_100891CE4()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
}

uint64_t sub_100891CF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v55 = (uint64_t)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v54 = (uint64_t)v53 - v16;
  __chkstk_darwin(v15, v17);
  long long v19 = (char *)v53 - v18;
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101684F70);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (void *)((char *)v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v25 = ~v24;
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v27 = -v24;
  uint64_t v56 = a1;
  uint64_t v57 = a1 + 64;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  uint64_t v58 = v25;
  uint64_t v59 = 0;
  uint64_t v60 = v28 & v26;
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  v53[1] = a1;
  swift_bridgeObjectRetain();
  v53[0] = a3;
  swift_retain();
  sub_100F27C3C((uint64_t)v23);
  uint64_t v29 = sub_1005057FC(&qword_10169A0F0);
  for (int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29);
        ;
        int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_10052E1EC();
      return swift_release();
    }
    uint64_t v36 = *v23;
    uint64_t v35 = v23[1];
    uint64_t v37 = (uint64_t)v19;
    sub_10051B3EC((uint64_t)v23 + *(int *)(v29 + 48), (uint64_t)v19, (uint64_t *)&unk_101674520);
    uint64_t v38 = *(void **)a5;
    unint64_t v40 = sub_100955F50(v36, v35);
    uint64_t v41 = v38[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      break;
    }
    char v44 = v39;
    if (v38[3] >= v43)
    {
      if (a4)
      {
        uint64_t v47 = *(void **)a5;
        if (v39) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_10097CD24();
        uint64_t v47 = *(void **)a5;
        if (v44) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1009609B8(v43, a4 & 1);
      unint64_t v45 = sub_100955F50(v36, v35);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_22;
      }
      unint64_t v40 = v45;
      uint64_t v47 = *(void **)a5;
      if (v44)
      {
LABEL_5:
        uint64_t v31 = v47[7];
        unint64_t v32 = *(void *)(v63 + 72) * v40;
        uint64_t v33 = v55;
        sub_100522E9C(v31 + v32, v55, (uint64_t *)&unk_101674520);
        uint64_t v34 = v54;
        sub_100522E9C(v33, v54, (uint64_t *)&unk_101674520);
        sub_100522F00(v33, (uint64_t *)&unk_101674520);
        long long v19 = (char *)v37;
        sub_100522F00(v37, (uint64_t *)&unk_101674520);
        swift_bridgeObjectRelease();
        sub_1006063BC(v34, *(void *)(*(void *)a5 + 56) + v32, (uint64_t *)&unk_101674520);
        goto LABEL_6;
      }
    }
    v47[(v40 >> 6) + 8] |= 1 << v40;
    uint64_t v48 = (uint64_t *)(v47[6] + 16 * v40);
    *uint64_t v48 = v36;
    v48[1] = v35;
    long long v19 = (char *)v37;
    sub_10051B3EC(v37, v47[7] + *(void *)(v63 + 72) * v40, (uint64_t *)&unk_101674520);
    uint64_t v49 = v47[2];
    BOOL v50 = __OFADD__(v49, 1);
    uint64_t v51 = v49 + 1;
    if (v50) {
      goto LABEL_21;
    }
    v47[2] = v51;
LABEL_6:
    sub_100F27C3C((uint64_t)v23);
    uint64_t v29 = sub_1005057FC(&qword_10169A0F0);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100892118(uint64_t a1, uint64_t a2)
{
  void (*v9)(long long *__return_ptr, uint64_t);
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  void *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t result;
  CKRecordID v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  long long v22;
  uint64_t v23;
  _OWORD v24[2];

  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLBoardItemBase(0);
  if (swift_dynamicCastClass())
  {
    uint64_t v8 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    char v9 = *(void (**)(long long *__return_ptr, uint64_t))(**(void **)(a2
                                                                              + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                                + 536);
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v10 = swift_retain();
    v9(&v22, v10);
    swift_release();
    swift_release();
    if (v23)
    {
      sub_100575CE8(&v22, v24);
      sub_100522D7C((uint64_t)v24, (uint64_t)&v22);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = _swiftEmptyDictionarySingleton;
      sub_1009720A8(&v22, 0, isUniquelyReferenced_nonNull_native);
      uint64_t v12 = v21;
      swift_bridgeObjectRelease();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
    }
    else
    {
      sub_100522F00((uint64_t)&v22, &qword_101672BF0);
      uint64_t v12 = _swiftEmptyDictionarySingleton;
    }
    uint64_t v13 = *(void (**)(uint64_t))(**(void **)(a2 + v8) + 256);
    uint64_t v14 = swift_retain();
    v13(v14);
    swift_release();
    uint64_t v15 = sub_100ED26C8((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    type metadata accessor for CRLTransactableUndoingMutations(0);
    uint64_t v16 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v16 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id, v7, v3);
    *(void *)(v16 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values) = v15;
    return v16;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 798, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 798);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v18, v19);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100892474(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  v174 = a5;
  uint64_t v175 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v175 - 8);
  __chkstk_darwin(v175, v10);
  uint64_t v157 = (char *)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v167, v12);
  uint64_t v166 = (uint64_t)&v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v168 = (uint64_t)&v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  __chkstk_darwin(v19, v20);
  uint64_t v163 = (uint64_t)&v150 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v170 = (uint64_t)&v150 - v24;
  uint64_t v162 = v25;
  switch(a3)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_4;
      }
      sub_1005057FC((uint64_t *)&unk_101672B40);
      initeCGFloat d = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v145 = CRLTransactablePropertyMapKeys.rawValue.getter(a3);
      uint64_t v147 = v146;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v145;
      *(void *)(inited + 40) = v147;
      *(void *)(inited + 96) = type metadata accessor for CRLBoardItemBase(0);
      *(void *)(inited + 104) = sub_100895630(&qword_101684F48, (void (*)(uint64_t))type metadata accessor for CRLBoardItemBase);
      uint64_t v148 = v174;
      *(void *)(inited + 72) = v174;
      id v149 = v148;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 898, (uint64_t)"Unhandled CRLTransactablePropertyMapKeys key %@ for transactable %@", 67, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 898);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      return swift_arrayDestroy();
    default:
      swift_bridgeObjectRelease();
LABEL_4:
      type metadata accessor for CRLBoardItemBase(0);
      uint64_t v156 = a4;
      uint64_t result = swift_dynamicCastClass();
      v165 = (void *)result;
      if (!result) {
        return result;
      }
      uint64_t v28 = *(void *)(a2 + 16);
      if (!v28) {
        return result;
      }
      uint64_t v29 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      uint64_t v30 = *(void *)((char *)v165 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      uint64_t v171 = (void *)(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
      uint64_t v169 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      unint64_t v159 = (void (**)(uint64_t, uint64_t))(v9 + 8);
      char v160 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
      swift_unknownObjectRetain();
      uint64_t v164 = v30;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v153 = a2;
      uint64_t v31 = (void *)(a2 + 40);
      objc_super v154 = "accessibilityDescription";
      unint64_t v155 = 0x80000001012443E0;
      int v151 = "servable deltas with wrong type";
      unint64_t v152 = 0x80000001012443C0;
      long long v150 = xmmword_10117E810;
      uint64_t v32 = v163;
      uint64_t v33 = v170;
      uint64_t v161 = v29;
      break;
  }
  do
  {
    uint64_t v36 = *(v31 - 1);
    uint64_t v35 = *v31;
    BOOL v37 = v36 == 0x6641746E65726170 && v35 == 0xEE007974696E6966;
    if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      v172 = v31;
      uint64_t v173 = v28;
      (*(void (**)(void))(*(void *)v164 + 264))();
      uint64_t v38 = *(void (**)(uint64_t))(**(void **)((char *)v174 + v29) + 264);
      uint64_t v39 = swift_retain();
      v38(v39);
      swift_release();
      uint64_t v40 = v166;
      uint64_t v41 = v166 + *(int *)(v167 + 48);
      sub_100522E9C(v33, v166, (uint64_t *)&unk_101674520);
      sub_100522E9C(v32, v41, (uint64_t *)&unk_101674520);
      BOOL v42 = *v169;
      if ((*v169)(v40, 1, v175) == 1)
      {
        sub_100522F00(v32, (uint64_t *)&unk_101674520);
        sub_100522F00(v33, (uint64_t *)&unk_101674520);
        if (v42(v41, 1, v175) == 1)
        {
          uint64_t v43 = sub_100522F00(v40, (uint64_t *)&unk_101674520);
          uint64_t v31 = v172;
LABEL_33:
          uint64_t v69 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v174) + 0xE0))(v43);
          unint64_t v70 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v165) + 0xE0))();
          uint64_t v71 = sub_10050BF48(0, (unint64_t *)&qword_101684F50);
          if (static NSObject.== infix(_:_:)())
          {

            uint64_t v33 = v170;
LABEL_35:
            uint64_t v34 = v173;
            goto LABEL_8;
          }
          if ([v69 isEqualExceptForPosition:v70])
          {
            *((void *)&v179 + 1) = v71;
            *(void *)&long long v178 = v69;
            uint64_t v72 = v171;
            swift_beginAccess();
            sub_100522E9C((uint64_t)&v178, (uint64_t)v177, &qword_101672BF0);
            id v73 = v69;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v176 = (void *)*v72;
            *uint64_t v72 = 0x8000000000000000;
            sub_100972310((uint64_t)v177, 6uLL, isUniquelyReferenced_nonNull_native);
            *uint64_t v72 = v176;
            swift_bridgeObjectRelease();
            swift_endAccess();
            sub_100522F00((uint64_t)&v178, &qword_101672BF0);

            uint64_t v33 = v170;
            uint64_t v34 = v173;
          }
          else
          {
            *((void *)&v179 + 1) = v71;
            *(void *)&long long v178 = v69;
            sub_100522E9C((uint64_t)&v178, (uint64_t)v177, &qword_101672BF0);
            swift_beginAccess();
            id v80 = v69;
            sub_10057D61C((uint64_t)v177, 7uLL);
            swift_endAccess();
            sub_100522F00((uint64_t)&v178, &qword_101672BF0);
            [v80 angle];
            double v82 = v81;
            [v70 angle];
            if (!sub_100895600(v82, v83))
            {
              *((void *)&v179 + 1) = v71;
              *(void *)&long long v178 = v80;
              sub_100522E9C((uint64_t)&v178, (uint64_t)v177, &qword_101672BF0);
              swift_beginAccess();
              id v80 = v80;
              sub_10057D61C((uint64_t)v177, 8uLL);
              swift_endAccess();
              sub_100522F00((uint64_t)&v178, &qword_101672BF0);
            }

            uint64_t v33 = v170;
            uint64_t v34 = v173;
            uint64_t v32 = v163;
          }
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v44 = v29;
        uint64_t v45 = v162;
        sub_100522E9C(v40, v162, (uint64_t *)&unk_101674520);
        if (v42(v41, 1, v175) != 1)
        {
          uint64_t v75 = v157;
          uint64_t v76 = v175;
          (*v160)(v157, v41, v175);
          sub_100895630((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
          int v158 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v77 = v40;
          uint64_t v78 = *v159;
          (*v159)((uint64_t)v75, v76);
          uint64_t v79 = v163;
          sub_100522F00(v163, (uint64_t *)&unk_101674520);
          sub_100522F00(v170, (uint64_t *)&unk_101674520);
          v78(v45, v76);
          uint64_t v32 = v79;
          uint64_t v29 = v161;
          uint64_t v43 = sub_100522F00(v77, (uint64_t *)&unk_101674520);
          uint64_t v31 = v172;
          if (v158) {
            goto LABEL_33;
          }
LABEL_20:
          char v46 = *(void (**)(uint64_t))(**(void **)((char *)v174 + v29) + 264);
          uint64_t v47 = swift_retain();
          uint64_t v48 = v168;
          v46(v47);
          swift_release();
          if (v42(v48, 1, v175) == 1)
          {
            sub_100522F00(v168, (uint64_t *)&unk_101674520);
            long long v178 = 0u;
            long long v179 = 0u;
          }
          else
          {
            uint64_t v65 = v175;
            *((void *)&v179 + 1) = v175;
            uint64_t v66 = sub_1005767BC((uint64_t *)&v178);
            (*v160)((char *)v66, v168, v65);
          }
          uint64_t v67 = v171;
          swift_beginAccess();
          sub_100522E9C((uint64_t)&v178, (uint64_t)v177, &qword_101672BF0);
          char v68 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v176 = (void *)*v67;
          *uint64_t v67 = 0x8000000000000000;
          sub_100972310((uint64_t)v177, 0, v68);
          *uint64_t v67 = v176;
          swift_bridgeObjectRelease();
          swift_endAccess();
          uint64_t v43 = sub_100522F00((uint64_t)&v178, &qword_101672BF0);
          goto LABEL_33;
        }
        uint64_t v32 = v163;
        sub_100522F00(v163, (uint64_t *)&unk_101674520);
        sub_100522F00(v33, (uint64_t *)&unk_101674520);
        (*v159)(v45, v175);
        uint64_t v29 = v44;
      }
      sub_100522F00(v40, (uint64_t *)&unk_10168A0C0);
      uint64_t v31 = v172;
      goto LABEL_20;
    }
    BOOL v49 = v36 == 0x64656B636F6CLL && v35 == 0xE600000000000000;
    if (v49 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v50 = v29;
      uint64_t v51 = v28;
      uint64_t v52 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v174 + v50) + 312);
      uint64_t v53 = swift_retain();
      LOBYTE(v52) = v52(v53);
      swift_release();
      *((void *)&v179 + 1) = &type metadata for Bool;
      LOBYTE(v178) = v52 & 1;
      uint64_t v54 = v171;
      swift_beginAccess();
      sub_100522E9C((uint64_t)&v178, (uint64_t)v177, &qword_101672BF0);
      char v55 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v176 = (void *)*v54;
      uint64_t v56 = v176;
      *uint64_t v54 = 0x8000000000000000;
      unint64_t v58 = sub_1009563E8(11);
      uint64_t v59 = v56[2];
      BOOL v60 = (v57 & 1) == 0;
      uint64_t v61 = v59 + v60;
      if (__OFADD__(v59, v60))
      {
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        type metadata accessor for CRLChangeProperty(0);
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        JUMPOUT(0x100893A8CLL);
      }
      char v62 = v57;
      if (v56[3] >= v61)
      {
        if ((v55 & 1) == 0) {
          sub_10097C320();
        }
      }
      else
      {
        sub_10095F04C(v61, v55);
        uint64_t v63 = sub_1009563E8(11);
        if ((v62 & 1) != (v64 & 1)) {
          goto LABEL_106;
        }
        unint64_t v58 = v63;
      }
      uint64_t v33 = v170;
      uint64_t v84 = v176;
      if (v62)
      {
        sub_1006063BC((uint64_t)v177, v176[7] + 32 * v58, &qword_101672BF0);
      }
      else
      {
        v176[(v58 >> 6) + 8] |= 1 << v58;
        *(void *)(v84[6] + 8 * v58) = 11;
        sub_10051B3EC((uint64_t)v177, v84[7] + 32 * v58, &qword_101672BF0);
        uint64_t v85 = v84[2];
        BOOL v86 = __OFADD__(v85, 1);
        uint64_t v87 = v85 + 1;
        if (v86) {
          goto LABEL_99;
        }
        v84[2] = v87;
      }
      *uint64_t v171 = v84;
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_100522F00((uint64_t)&v178, &qword_101672BF0);
      uint64_t v34 = v51;
      uint64_t v29 = v161;
    }
    else
    {
      if (v36 == 0xD000000000000011 && v35 == v155 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v88 = v29;
        uint64_t v89 = v28;
        uint64_t v90 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v174 + v88) + 336);
        uint64_t v91 = swift_retain();
        LOBYTE(v90) = v90(v91);
        swift_release();
        *((void *)&v179 + 1) = &type metadata for Bool;
        LOBYTE(v178) = v90 & 1;
        uint64_t v92 = v171;
        swift_beginAccess();
        sub_100522E9C((uint64_t)&v178, (uint64_t)v177, &qword_101672BF0);
        char v93 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v176 = (void *)*v92;
        uint64_t v94 = v176;
        void *v92 = 0x8000000000000000;
        unint64_t v96 = sub_1009563E8(12);
        uint64_t v97 = v94[2];
        BOOL v98 = (v95 & 1) == 0;
        uint64_t v99 = v97 + v98;
        if (__OFADD__(v97, v98)) {
          goto LABEL_100;
        }
        char v100 = v95;
        if (v94[3] >= v99)
        {
          if ((v93 & 1) == 0) {
            sub_10097C320();
          }
        }
        else
        {
          sub_10095F04C(v99, v93);
          uint64_t v101 = sub_1009563E8(12);
          if ((v100 & 1) != (v102 & 1)) {
            goto LABEL_106;
          }
          unint64_t v96 = v101;
        }
        uint64_t v33 = v170;
        uint64_t v103 = v176;
        if (v100) {
          goto LABEL_59;
        }
        v176[(v96 >> 6) + 8] |= 1 << v96;
        *(void *)(v103[6] + 8 * v96) = 12;
        sub_10051B3EC((uint64_t)v177, v103[7] + 32 * v96, &qword_101672BF0);
        uint64_t v105 = v103[2];
        BOOL v86 = __OFADD__(v105, 1);
        uint64_t v106 = v105 + 1;
        if (v86) {
          goto LABEL_101;
        }
LABEL_61:
        v103[2] = v106;
        uint64_t v34 = v89;
        char v104 = v171;
        goto LABEL_62;
      }
      if (v36 == 0xD000000000000018 && v35 == v152 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v107 = v29;
        uint64_t v89 = v28;
        long long v108 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v174 + v107) + 360);
        uint64_t v109 = swift_retain();
        uint64_t v110 = v108(v109);
        uint64_t v112 = v111;
        swift_release();
        *((void *)&v179 + 1) = &type metadata for String;
        *(void *)&long long v178 = v110;
        *((void *)&v178 + 1) = v112;
        uint64_t v113 = v171;
        swift_beginAccess();
        sub_100522E9C((uint64_t)&v178, (uint64_t)v177, &qword_101672BF0);
        char v114 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v176 = (void *)*v113;
        uint64_t v115 = v176;
        *uint64_t v113 = 0x8000000000000000;
        unint64_t v96 = sub_1009563E8(14);
        uint64_t v117 = v115[2];
        BOOL v118 = (v116 & 1) == 0;
        uint64_t v119 = v117 + v118;
        if (__OFADD__(v117, v118)) {
          goto LABEL_102;
        }
        char v120 = v116;
        if (v115[3] >= v119)
        {
          if ((v114 & 1) == 0) {
            sub_10097C320();
          }
        }
        else
        {
          sub_10095F04C(v119, v114);
          uint64_t v121 = sub_1009563E8(14);
          if ((v120 & 1) != (v122 & 1)) {
            goto LABEL_106;
          }
          unint64_t v96 = v121;
        }
        uint64_t v33 = v170;
        uint64_t v103 = v176;
        if ((v120 & 1) == 0)
        {
          v176[(v96 >> 6) + 8] |= 1 << v96;
          *(void *)(v103[6] + 8 * v96) = 14;
          sub_10051B3EC((uint64_t)v177, v103[7] + 32 * v96, &qword_101672BF0);
          uint64_t v123 = v103[2];
          BOOL v86 = __OFADD__(v123, 1);
          uint64_t v106 = v123 + 1;
          if (v86) {
            goto LABEL_103;
          }
          goto LABEL_61;
        }
LABEL_59:
        sub_1006063BC((uint64_t)v177, v103[7] + 32 * v96, &qword_101672BF0);
        uint64_t v34 = v89;
        char v104 = v171;
LABEL_62:
        *char v104 = v103;
        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_100522F00((uint64_t)&v178, &qword_101672BF0);
        uint64_t v29 = v161;
        goto LABEL_8;
      }
      uint64_t v173 = v28;
      if ((v36 != 0x776F64616873 || v35 != 0xE600000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        if (v36 == 0x6574726F70707573 && v35 == 0xE900000000000064
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          unint64_t v139 = *(void *)(*(void *)((char *)v174 + v29) + 24);
          unint64_t v140 = sub_1002094A4();
          *((void *)&v179 + 1) = &type metadata for Bool;
          LOBYTE(v178) = v140 >= v139;
          uint64_t v141 = v171;
          swift_beginAccess();
          sub_100522E9C((uint64_t)&v178, (uint64_t)v177, &qword_101672BF0);
          char v142 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v176 = (void *)*v141;
          *uint64_t v141 = 0x8000000000000000;
          sub_100972310((uint64_t)v177, 0xDuLL, v142);
          *uint64_t v141 = v176;
          swift_bridgeObjectRelease();
          swift_endAccess();
          sub_100522F00((uint64_t)&v178, &qword_101672BF0);
        }
        else
        {
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v143 = swift_initStackObject();
          *(_OWORD *)(v143 + 16) = v150;
          *(void *)(v143 + 56) = &type metadata for String;
          *(void *)(v143 + 64) = sub_100528BE4();
          *(void *)(v143 + 32) = v36;
          *(void *)(v143 + 40) = v35;
          swift_bridgeObjectRetain();
          sub_1005598CC(v143, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 894);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          uint64_t v33 = v170;
          swift_arrayDestroy();
        }
        goto LABEL_35;
      }
      *((void *)&v179 + 1) = &type metadata for Bool;
      LOBYTE(v178) = 1;
      uint64_t v124 = v171;
      swift_beginAccess();
      sub_100522E9C((uint64_t)&v178, (uint64_t)v177, &qword_101672BF0);
      char v125 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v176 = (void *)*v124;
      uint64_t v126 = v176;
      *uint64_t v124 = 0x8000000000000000;
      unint64_t v128 = sub_1009563E8(16);
      uint64_t v129 = v126[2];
      BOOL v130 = (v127 & 1) == 0;
      uint64_t v131 = v129 + v130;
      if (__OFADD__(v129, v130)) {
        goto LABEL_104;
      }
      char v132 = v127;
      if (v126[3] >= v131)
      {
        if ((v125 & 1) == 0) {
          sub_10097C320();
        }
      }
      else
      {
        sub_10095F04C(v131, v125);
        uint64_t v133 = sub_1009563E8(16);
        if ((v132 & 1) != (v134 & 1)) {
          goto LABEL_106;
        }
        unint64_t v128 = v133;
      }
      uint64_t v33 = v170;
      uint64_t v135 = v176;
      if (v132)
      {
        sub_1006063BC((uint64_t)v177, v176[7] + 32 * v128, &qword_101672BF0);
        uint64_t v34 = v173;
        v136 = v171;
      }
      else
      {
        v176[(v128 >> 6) + 8] |= 1 << v128;
        *(void *)(v135[6] + 8 * v128) = 16;
        sub_10051B3EC((uint64_t)v177, v135[7] + 32 * v128, &qword_101672BF0);
        uint64_t v137 = v135[2];
        BOOL v86 = __OFADD__(v137, 1);
        uint64_t v138 = v137 + 1;
        if (v86) {
          goto LABEL_105;
        }
        v135[2] = v138;
        uint64_t v34 = v173;
        v136 = v171;
      }
      void *v136 = v135;
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_100522F00((uint64_t)&v178, &qword_101672BF0);
    }
LABEL_8:
    v31 += 2;
    uint64_t v28 = v34 - 1;
  }
  while (v28);
  swift_unknownObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

BOOL sub_100893AB4(uint64_t a1, char a2, unint64_t a3, char a4)
{
  if (a2)
  {
    switch(a1)
    {
      case 1:
        if ((a4 & 1) == 0 || a3 != 1) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if ((a4 & 1) == 0 || a3 != 2) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if ((a4 & 1) == 0 || a3 != 3) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 4:
        if ((a4 & 1) == 0 || a3 != 4) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 5:
        if ((a4 & 1) == 0 || a3 != 5) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 6:
        if ((a4 & 1) == 0 || a3 != 6) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 7:
        if ((a4 & 1) == 0 || a3 != 7) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 8:
        if ((a4 & 1) == 0 || a3 != 8) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 9:
        if ((a4 & 1) == 0 || a3 != 9) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 10:
        if ((a4 & 1) == 0 || a3 <= 9) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if ((a4 & 1) == 0 || a3) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (a4 & 1) == 0 && a1 == a3;
  }
  return result;
}

void *sub_100893BF8()
{
  type metadata accessor for CRLBoardItemBase(0);
  if (swift_dynamicCastClass()) {
    return _swiftEmptyDictionarySingleton;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v1, v2);
  BOOL result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100893D24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70756F7267 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6570616873 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697463656E6E6F63 && a2 == 0xEE00656E694C6E6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6569766F6DLL && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1701603686 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 2053403509 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x646E616865657266 && a2 == 0xEF676E6977617244 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010125BE30 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6F4E796B63697473 && a2 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_1008941FC(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101684E08);
  uint64_t v81 = *(void *)(v2 - 8);
  uint64_t v82 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v88 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101684E10);
  uint64_t v79 = *(void *)(v5 - 8);
  uint64_t v80 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v92 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101684E18);
  uint64_t v77 = *(void *)(v8 - 8);
  uint64_t v78 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v87 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101684E20);
  uint64_t v75 = *(void *)(v11 - 8);
  uint64_t v76 = v11;
  __chkstk_darwin(v11, v12);
  BOOL v86 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1005057FC(&qword_101684E28);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74, v14);
  uint64_t v85 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1005057FC(&qword_101684E30);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72, v16);
  uint64_t v91 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1005057FC(&qword_101684E38);
  uint64_t v70 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v18);
  uint64_t v90 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1005057FC(&qword_101684E40);
  uint64_t v68 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v20);
  uint64_t v84 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1005057FC(&qword_101684E48);
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67, v22);
  double v83 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1005057FC(&qword_101684E50);
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v24);
  uint64_t v89 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1005057FC(&qword_101684E58);
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62, v26);
  uint64_t v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC(&qword_101684E60);
  uint64_t v60 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v57 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1005057FC(&qword_101684E68);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v35);
  BOOL v37 = (char *)&v57 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1[3];
  char v93 = a1;
  sub_10050F848(a1, v38);
  sub_1008951BC();
  uint64_t v39 = v94;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v39) {
    goto LABEL_17;
  }
  unint64_t v58 = v32;
  uint64_t v59 = v28;
  uint64_t v57 = v29;
  uint64_t v40 = v89;
  uint64_t v41 = v90;
  BOOL v42 = v91;
  uint64_t v43 = v92;
  uint64_t v94 = v34;
  uint64_t v44 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v44 + 16) != 1)
  {
    uint64_t v34 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v48 = v47;
    sub_1005057FC(&qword_1016771E0);
    *uint64_t v48 = &type metadata for CRLBoardItemType;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v48, enum case for DecodingError.typeMismatch(_:), v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
LABEL_17:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v93);
    return v34;
  }
  switch(*(unsigned char *)(v44 + 32))
  {
    case 1:
      char v96 = 1;
      sub_100895558();
      BOOL v49 = v59;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v49, v62);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 0;
      goto LABEL_17;
    case 2:
      char v97 = 2;
      sub_100895504();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v65);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 1;
      goto LABEL_17;
    case 3:
      char v98 = 3;
      sub_1008954B0();
      uint64_t v50 = v83;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v50, v67);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 2;
      goto LABEL_17;
    case 4:
      char v99 = 4;
      sub_10089545C();
      uint64_t v51 = v84;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v51, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 3;
      goto LABEL_17;
    case 5:
      char v100 = 5;
      sub_100895408();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v41, v69);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 4;
      goto LABEL_17;
    case 6:
      char v101 = 6;
      sub_1008953B4();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v72);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 5;
      goto LABEL_17;
    case 7:
      char v102 = 7;
      sub_100895360();
      uint64_t v52 = v85;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v52, v74);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 6;
      goto LABEL_17;
    case 8:
      char v103 = 8;
      sub_10089530C();
      uint64_t v53 = v86;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v53, v76);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 7;
      goto LABEL_17;
    case 9:
      char v104 = 9;
      sub_1008952B8();
      uint64_t v54 = v87;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v54, v78);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 8;
      goto LABEL_17;
    case 0xA:
      char v105 = 10;
      sub_100895264();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v80);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 9;
      goto LABEL_17;
    case 0xB:
      char v106 = 11;
      sub_100895210();
      char v55 = v88;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v55, v82);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      uint64_t v34 = 10;
      goto LABEL_17;
    default:
      char v95 = 0;
      sub_1008955AC();
      uint64_t v45 = v58;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v46 = v57;
      uint64_t v34 = KeyedDecodingContainer.decode(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v37, v33);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v93);
      break;
  }
  return v34;
}

unint64_t sub_1008951BC()
{
  unint64_t result = qword_101684E70;
  if (!qword_101684E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684E70);
  }
  return result;
}

unint64_t sub_100895210()
{
  unint64_t result = qword_101684E80;
  if (!qword_101684E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684E80);
  }
  return result;
}

unint64_t sub_100895264()
{
  unint64_t result = qword_101684E88;
  if (!qword_101684E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684E88);
  }
  return result;
}

unint64_t sub_1008952B8()
{
  unint64_t result = qword_101684E90;
  if (!qword_101684E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684E90);
  }
  return result;
}

unint64_t sub_10089530C()
{
  unint64_t result = qword_101684E98;
  if (!qword_101684E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684E98);
  }
  return result;
}

unint64_t sub_100895360()
{
  unint64_t result = qword_101684EA0;
  if (!qword_101684EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684EA0);
  }
  return result;
}

unint64_t sub_1008953B4()
{
  unint64_t result = qword_101684EA8;
  if (!qword_101684EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684EA8);
  }
  return result;
}

unint64_t sub_100895408()
{
  unint64_t result = qword_101684EB0;
  if (!qword_101684EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684EB0);
  }
  return result;
}

unint64_t sub_10089545C()
{
  unint64_t result = qword_101684EB8;
  if (!qword_101684EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684EB8);
  }
  return result;
}

unint64_t sub_1008954B0()
{
  unint64_t result = qword_101684EC0;
  if (!qword_101684EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684EC0);
  }
  return result;
}

unint64_t sub_100895504()
{
  unint64_t result = qword_101684EC8;
  if (!qword_101684EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684EC8);
  }
  return result;
}

unint64_t sub_100895558()
{
  unint64_t result = qword_101684ED0;
  if (!qword_101684ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684ED0);
  }
  return result;
}

unint64_t sub_1008955AC()
{
  unint64_t result = qword_101684ED8;
  if (!qword_101684ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684ED8);
  }
  return result;
}

BOOL sub_100895600(double a1, double a2)
{
  return a1 == a2 || vabdd_f64(a1, a2) < fabs(a2 * 0.000000999999997);
}

uint64_t sub_100895630(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100895678(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v44 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v47 = (uint64_t)&v40 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v40 - v21;
  __n128 v25 = __chkstk_darwin(v23, v24);
  uint64_t v27 = (char *)&v40 - v26;
  uint64_t v28 = *(void (**)(__n128))((swift_isaMask & *a1) + 0xB8);
  uint64_t v46 = a1;
  v28(v25);
  uint64_t v45 = a2;
  uint64_t v42 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v29 = *(void (**)(uint64_t))(**(void **)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 256);
  uint64_t v30 = swift_retain();
  v29(v30);
  swift_release();
  uint64_t v43 = *(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  v43(v22, 0, 1, v4);
  uint64_t v31 = (uint64_t)&v12[*(int *)(v9 + 56)];
  sub_100522E9C((uint64_t)v27, (uint64_t)v12, (uint64_t *)&unk_101674520);
  sub_100522E9C((uint64_t)v22, v31, (uint64_t *)&unk_101674520);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v32((uint64_t)v12, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674520);
    if (v32(v31, 1, v4) == 1) {
      return sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
    }
  }
  else
  {
    sub_100522E9C((uint64_t)v12, v47, (uint64_t *)&unk_101674520);
    if (v32(v31, 1, v4) != 1)
    {
      uint64_t v33 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v41, v31, v4);
      sub_100895630((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v34 = v47;
      char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
      v36(v33, v4);
      sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674520);
      sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674520);
      v36((char *)v34, v4);
      uint64_t result = sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
      if (v35) {
        return result;
      }
      goto LABEL_8;
    }
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674520);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v47, v4);
  }
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10168A0C0);
LABEL_8:
  uint64_t v38 = *(void (**)(uint64_t))(**(void **)(v45 + v42) + 256);
  uint64_t v39 = swift_retain();
  uint64_t v12 = v44;
  v38(v39);
  swift_release();
  v43(v12, 0, 1, v4);
  (*(void (**)(char *))((swift_isaMask & *v46) + 0xC0))(v12);
  return sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
}

unint64_t sub_100895BA8()
{
  unint64_t result = qword_101684F60;
  if (!qword_101684F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684F60);
  }
  return result;
}

uint64_t sub_100895BFC()
{
  return _swift_deallocObject(v0, 64, 7);
}

id sub_100895C0C(void *a1)
{
  return sub_10088F73C(a1, v1);
}

uint64_t sub_100895C14()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100895C4C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_100895C60()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100895CA0(void *a1)
{
  uint64_t v2 = *(void (**)(void))(v1 + 16);
  id v3 = [a1 layoutForInfo:*(void *)(v1 + 32)];
  v2();
}

uint64_t sub_100895D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100895D1C()
{
  return swift_release();
}

uint64_t sub_100895D24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardItemType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100895E50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.CodingKeys()
{
  return &type metadata for CRLBoardItemType.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardItemType.UnknownCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100895F24);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.UnknownCodingKeys()
{
  return &type metadata for CRLBoardItemType.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.GroupCodingKeys()
{
  return &type metadata for CRLBoardItemType.GroupCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.ShapeCodingKeys()
{
  return &type metadata for CRLBoardItemType.ShapeCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.ConnectionLineCodingKeys()
{
  return &type metadata for CRLBoardItemType.ConnectionLineCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.ImageCodingKeys()
{
  return &type metadata for CRLBoardItemType.ImageCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.MovieCodingKeys()
{
  return &type metadata for CRLBoardItemType.MovieCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.FileCodingKeys()
{
  return &type metadata for CRLBoardItemType.FileCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.UrlCodingKeys()
{
  return &type metadata for CRLBoardItemType.UrlCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.UsdzCodingKeys()
{
  return &type metadata for CRLBoardItemType.UsdzCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.FreehandDrawingCodingKeys()
{
  return &type metadata for CRLBoardItemType.FreehandDrawingCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.FreehandDrawingShapeCodingKeys()
{
  return &type metadata for CRLBoardItemType.FreehandDrawingShapeCodingKeys;
}

ValueMetadata *type metadata accessor for CRLBoardItemType.StickyNoteCodingKeys()
{
  return &type metadata for CRLBoardItemType.StickyNoteCodingKeys;
}

unint64_t sub_100896010()
{
  unint64_t result = qword_101684FC8;
  if (!qword_101684FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684FC8);
  }
  return result;
}

unint64_t sub_100896068()
{
  unint64_t result = qword_101684FD0;
  if (!qword_101684FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684FD0);
  }
  return result;
}

unint64_t sub_1008960C0()
{
  unint64_t result = qword_101684FD8;
  if (!qword_101684FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684FD8);
  }
  return result;
}

unint64_t sub_100896118()
{
  unint64_t result = qword_101684FE0;
  if (!qword_101684FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684FE0);
  }
  return result;
}

unint64_t sub_100896170()
{
  unint64_t result = qword_101684FE8;
  if (!qword_101684FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684FE8);
  }
  return result;
}

unint64_t sub_1008961C8()
{
  unint64_t result = qword_101684FF0;
  if (!qword_101684FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684FF0);
  }
  return result;
}

unint64_t sub_100896220()
{
  unint64_t result = qword_101684FF8;
  if (!qword_101684FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101684FF8);
  }
  return result;
}

unint64_t sub_100896278()
{
  unint64_t result = qword_101685000;
  if (!qword_101685000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685000);
  }
  return result;
}

unint64_t sub_1008962D0()
{
  unint64_t result = qword_101685008;
  if (!qword_101685008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685008);
  }
  return result;
}

unint64_t sub_100896328()
{
  unint64_t result = qword_101685010;
  if (!qword_101685010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685010);
  }
  return result;
}

unint64_t sub_100896380()
{
  unint64_t result = qword_101685018;
  if (!qword_101685018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685018);
  }
  return result;
}

unint64_t sub_1008963D8()
{
  unint64_t result = qword_101685020;
  if (!qword_101685020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685020);
  }
  return result;
}

unint64_t sub_100896430()
{
  unint64_t result = qword_101685028;
  if (!qword_101685028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685028);
  }
  return result;
}

unint64_t sub_100896488()
{
  unint64_t result = qword_101685030;
  if (!qword_101685030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685030);
  }
  return result;
}

unint64_t sub_1008964E0()
{
  unint64_t result = qword_101685038;
  if (!qword_101685038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685038);
  }
  return result;
}

unint64_t sub_100896538()
{
  unint64_t result = qword_101685040;
  if (!qword_101685040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685040);
  }
  return result;
}

unint64_t sub_100896590()
{
  unint64_t result = qword_101685048;
  if (!qword_101685048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685048);
  }
  return result;
}

unint64_t sub_1008965E8()
{
  unint64_t result = qword_101685050;
  if (!qword_101685050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685050);
  }
  return result;
}

unint64_t sub_100896640()
{
  unint64_t result = qword_101685058;
  if (!qword_101685058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685058);
  }
  return result;
}

unint64_t sub_100896698()
{
  unint64_t result = qword_101685060;
  if (!qword_101685060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685060);
  }
  return result;
}

unint64_t sub_1008966F0()
{
  unint64_t result = qword_101685068;
  if (!qword_101685068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685068);
  }
  return result;
}

unint64_t sub_100896748()
{
  unint64_t result = qword_101685070;
  if (!qword_101685070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685070);
  }
  return result;
}

unint64_t sub_1008967A0()
{
  unint64_t result = qword_101685078;
  if (!qword_101685078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685078);
  }
  return result;
}

unint64_t sub_1008967F8()
{
  unint64_t result = qword_101685080;
  if (!qword_101685080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685080);
  }
  return result;
}

unint64_t sub_100896850()
{
  unint64_t result = qword_101685088;
  if (!qword_101685088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685088);
  }
  return result;
}

unint64_t sub_1008968A8()
{
  unint64_t result = qword_101685090;
  if (!qword_101685090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685090);
  }
  return result;
}

unint64_t sub_100896900()
{
  unint64_t result = qword_101685098;
  if (!qword_101685098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685098);
  }
  return result;
}

unint64_t sub_100896958()
{
  unint64_t result = qword_1016850A0;
  if (!qword_1016850A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016850A0);
  }
  return result;
}

id sub_1008969B4()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10117DF50;
  *(void *)(v1 + 32) = sub_100896C38();
  *(void *)(v1 + 40) = sub_1008972B0();
  uint64_t v2 = specialized Array._endMutation()();
  unint64_t v3 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x268))(v2);
  sub_1006E0E0C(v3);
  id v4 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithArrangedSubviews:isa];

  [v6 setAxis:1];
  if (qword_10166EB58 != -1) {
    swift_once();
  }
  [v6 setSpacing:*(double *)&qword_101719DD8];
  return v6;
}

uint64_t sub_100896B44()
{
  uint64_t result = sub_100670900();
  if (!v1) {
    return 0;
  }
  return result;
}

id sub_100896B80()
{
  id v0 = sub_100670AA4();
  if (v1) {
    return 0;
  }
  unint64_t v2 = (unint64_t)v0;
  id v3 = [objc_allocWithZone((Class)NSByteCountFormatter) init];
  id result = [v3 setAllowedUnits:0xFFFFLL];
  if ((v2 & 0x8000000000000000) == 0)
  {
    id v5 = [v3 stringFromByteCount:v2];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v6;
  }
  __break(1u);
  return result;
}

id sub_100896C38()
{
  id v0 = sub_100896F14();
  if (v0)
  {
    char v1 = v0;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_10117DF50;
    *(void *)(v2 + 32) = sub_100896D80();
    *(void *)(v2 + 40) = v1;
    specialized Array._endMutation()();
    id v3 = objc_allocWithZone((Class)UIStackView);
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    id v4 = v1;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [v3 initWithArrangedSubviews:isa];

    [v6 setAxis:1];
    [v6 setSpacing:2.5];
    [v6 setAlignment:3];

    return v6;
  }
  else
  {
    return sub_100896D80();
  }
}

id sub_100896D80()
{
  id v1 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  (*(void (**)(void))((swift_isaMask & *v0) + 0x1F0))();
  id v2 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v1 setFont:v2];

  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v3];

  id v4 = [self labelColor];
  [v1 setTextColor:v4];

  [v1 setTextAlignment:1];
  [v1 setLineBreakMode:5];
  [v1 setAdjustsFontForContentSizeCategory:1];
  return v1;
}

id sub_100896F14()
{
  (*(void (**)(void))((swift_isaMask & *v0) + 0x1F8))();
  if (!v1) {
    return 0;
  }
  id v2 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v3 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v2 setFont:v3];

  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v4];

  id v5 = [self secondaryLabelColor];
  [v2 setTextColor:v5];

  [v2 setTextAlignment:1];
  [v2 setAdjustsFontForContentSizeCategory:1];
  return v2;
}

uint64_t sub_100897094()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_100897164()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

void sub_100897214()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    NSString v2 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider);

    (*(void (**)(void))((swift_isaMask & *v2) + 0xD8))();
  }
}

uint64_t sub_1008972B0()
{
  NSString v1 = v0;
  NSString v2 = (char *)v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = *((void *)v2 + 2);
    uint64_t ObjectType = swift_getObjectType();
    double v6 = (*(double (**)(uint64_t, uint64_t))(v4 + 104))(ObjectType, v4);
    swift_unknownObjectRelease();
  }
  else
  {
    double v6 = 0.0;
  }
  if (qword_10166EDF8 != -1) {
    swift_once();
  }
  if (v6 != *(double *)&qword_10171A280 || Strong == 0) {
    double v8 = 142.0;
  }
  else {
    double v8 = 122.0;
  }
  uint64_t v9 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x218))();
  uint64_t v11 = v10;
  uint64_t v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x220))();
  id v13 = [self labelColor];
  uint64_t v14 = sub_10051F614(v9, v11, 0, (uint64_t)v13, 0, 1, v12, 0);
  swift_bridgeObjectRelease();

  double height = UILayoutFittingCompressedSize.height;
  [v14 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width height];
  double v17 = v16;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_101177E70;
  *(void *)(v18 + 32) = v14;
  unint64_t v41 = v18;
  specialized Array._endMutation()();
  id v19 = v14;
  id v20 = sub_100897930();
  if (!v20) {
    goto LABEL_17;
  }
  uint64_t v21 = v20;
  [v20 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width height];
  double v23 = v22;
  id v24 = v21;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  if (v8 >= v17 && v8 >= v23)
  {
LABEL_17:
    if (qword_10166EB60 != -1) {
      swift_once();
    }
    double v25 = *(double *)&qword_101719DE0;
    if (qword_10166EB50 != -1) {
      swift_once();
    }
    double v26 = *(double *)&qword_101719DD0;
    id v27 = objc_allocWithZone((Class)UIStackView);
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v29 = [v27 initWithArrangedSubviews:isa];

    [v29 setAxis:0];
    [v29 setAlignment:0];
    [v29 setDistribution:0];
    [v29 setSpacing:v26];
    id v30 = [v29 heightAnchor];
    id v31 = [v30 constraintGreaterThanOrEqualToConstant:v25];

    [v31 setActive:1];
    swift_bridgeObjectRelease();

    return (uint64_t)v29;
  }
  id v32 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class v33 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v29 = [v32 initWithArrangedSubviews:v33];

  [v29 setAxis:1];
  if (qword_10166EB58 != -1) {
    swift_once();
  }
  [v29 setSpacing:*(double *)&qword_101719DD8];
  if (!(v41 >> 62))
  {
    uint64_t v34 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v34) {
      goto LABEL_26;
    }
LABEL_36:

    swift_bridgeObjectRelease_n();
    return (uint64_t)v29;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v34 = result;
  if (!result) {
    goto LABEL_36;
  }
LABEL_26:
  if (v34 >= 1)
  {
    uint64_t v36 = 0;
    do
    {
      if ((v41 & 0xC000000000000001) != 0) {
        id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v37 = *(id *)(v41 + 8 * v36 + 32);
      }
      uint64_t v38 = v37;
      id v39 = [v37 heightAnchor];
      if (qword_10166EB60 != -1) {
        swift_once();
      }
      ++v36;
      id v40 = [v39 constraintGreaterThanOrEqualToConstant:*(double *)&qword_101719DE0];

      [v40 setActive:1];
    }
    while (v34 != v36);
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

id sub_100897930()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x228))();
  id v3 = v2;
  if (v2)
  {
    uint64_t v4 = v1;
    id v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x230))();
    id v6 = [self labelColor];
    uint64_t v7 = sub_10051F614(v4, (uint64_t)v3, 0, (uint64_t)v6, 0, 1, v5, 0);

    swift_bridgeObjectRelease();
    double v8 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x238);
    id v3 = v7;
    [v3 setEnabled:v8() & 1];
  }
  return v3;
}

void *sub_100897AA0()
{
  unint64_t v0 = sub_1007FE0AC();
  if (v0) {
    sub_10057C1E4(v0);
  }
  unint64_t v1 = sub_1007FE0AC();
  if (v1) {
    sub_10057C1E4(v1);
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100897B28(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)v8);
  type metadata accessor for CRLMediaItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_1007FE0AC();
  if (!v4)
  {

LABEL_5:
    char v5 = sub_100520CB4(a1, a2);
    return v5 & 1;
  }
  char v5 = sub_1006E5050(v7, v4);

  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_100897BF8()
{
}

id sub_100897C08()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterMediaBuilder();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterMediaBuilder()
{
  return self;
}

uint64_t sub_100897C70()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100897CA8()
{
}

uint64_t sub_100897CB0(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a1, (uint64_t)v8);
  sub_1005057FC(&qword_101685128);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"copyStyleFrom(item:to:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 14, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"copyStyleFrom(item:to:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 14);
  }
  sub_10051B3EC((uint64_t)&v11, (uint64_t)&v9, (uint64_t *)&unk_101685130);
  if (!v10) {
    return sub_100522F00((uint64_t)&v9, (uint64_t *)&unk_101685130);
  }
  sub_10053974C(&v9, (uint64_t)&v11);
  uint64_t v4 = *((void *)&v12 + 1);
  uint64_t v5 = v13;
  id v6 = sub_10050F848(&v11, *((uint64_t *)&v12 + 1));
  sub_10089AA08((uint64_t)v6, a2, v2, v4, v5);
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v11);
}

uint64_t sub_100897EA8(uint64_t a1, uint64_t a2)
{
  uint64_t result = (uint64_t)[v2 boardItemStyleKindsOnPasteboard:a2];
  if (result < 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = result - 1;
  if ((unint64_t)(result - 1) > 5) {
    return 0;
  }
  uint64_t v6 = a1 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    sub_10050BF84(*(void *)(a1 + 48) + 40 * i, (uint64_t)v27);
    long long v21 = v27[0];
    long long v22 = v27[1];
    uint64_t v23 = v28;
    sub_1005057FC(&qword_101685128);
    if (!swift_dynamicCast())
    {
      uint64_t v20 = 0;
      memset(v19, 0, sizeof(v19));
      swift_release();
      sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101685130);
      return 0;
    }
    sub_10053974C(v19, (uint64_t)v24);
    uint64_t v17 = v25;
    uint64_t v18 = v26;
    sub_10050F848(v24, v25);
    if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v5, v17, v18) & 1) == 0)
    {
      swift_release();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
      return 0;
    }
    uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v10) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_28;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_28:
    swift_release();
    return 1;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v10) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

double *sub_10089817C(uint64_t a1, uint64_t a2)
{
  __chkstk_darwin(a1, a2);
  id v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v11 = __chkstk_darwin(v8, v10).n128_u64[0];
  uint64_t v171 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = [v3 newReadAssistantWithPasteboard:v5, v11];
  if (!v172)
  {
    int64_t v16 = _swiftEmptyArrayStorage;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 53, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 53);
    return v16;
  }
  uint64_t v13 = *(void **)&v172[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_pasteboardObject];
  if (v13)
  {
    int64_t v14 = v13;
    id v15 = [v3 delegate];
    int64_t v16 = _swiftEmptyArrayStorage;
    if (!v15)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 55, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 55);

      return v16;
    }
    uint64_t v168 = v8;
    uint64_t v17 = (char *)[v15 boardForPasteboardController:v3];
    swift_unknownObjectRelease();
    uint64_t v184 = _swiftEmptyArrayStorage;
    uint64_t v18 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
    uint64_t v19 = *(void *)&v14[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData]
        + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
    swift_beginAccess();
    sub_100522E9C(v19, (uint64_t)v185, &qword_10167F410);
    if (!*((void *)&v185[1] + 1))
    {

      sub_100522F00((uint64_t)v185, &qword_10167F410);
      return v16;
    }
    uint64_t v170 = v17;
    sub_10053974C(v185, (uint64_t)v183);
    id v20 = v170;
    switch(*(unsigned char *)(*(void *)&v14[v18] + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind))
    {
      case 2:
        id v167 = v14;
        uint64_t v36 = v7;
        if ((v7 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          __CocoaSet.makeIterator()();
          type metadata accessor for CRLStyledItem();
          sub_10089B5CC();
          Set.Iterator.init(_cocoa:)();
          uint64_t v36 = v174[0];
          uint64_t v166 = (char *)v174[1];
          uint64_t v37 = v174[2];
          uint64_t v38 = v174[3];
          unint64_t v39 = v174[4];
        }
        else
        {
          uint64_t v69 = -1 << *(unsigned char *)(v7 + 32);
          uint64_t v70 = *(void *)(v7 + 56);
          uint64_t v166 = (char *)(v7 + 56);
          uint64_t v71 = ~v69;
          uint64_t v72 = -v69;
          if (v72 < 64) {
            uint64_t v73 = ~(-1 << v72);
          }
          else {
            uint64_t v73 = -1;
          }
          unint64_t v39 = v73 & v70;
          swift_bridgeObjectRetain();
          uint64_t v37 = v71;
          uint64_t v38 = 0;
        }
        uint64_t v161 = v37;
        uint64_t v164 = v36 & 0x7FFFFFFFFFFFFFFFLL;
        int64_t v165 = (unint64_t)(v37 + 64) >> 6;
        uint64_t v162 = (void (**)(char *, uint64_t))(v9 + 8);
        uint64_t v163 = (char *)&type metadata for Swift.AnyObject + 8;
        uint64_t i = v36;
        if (v36 < 0) {
          goto LABEL_87;
        }
LABEL_69:
        uint64_t v74 = v171;
        if (v39)
        {
          uint64_t v75 = (v39 - 1) & v39;
          unint64_t v76 = __clz(__rbit64(v39)) | (v38 << 6);
          uint64_t v77 = v38;
        }
        else
        {
          int64_t v78 = v38 + 1;
          if (__OFADD__(v38, 1)) {
            goto LABEL_170;
          }
          if (v78 >= v165) {
            goto LABEL_166;
          }
          unint64_t v79 = *(void *)&v166[8 * v78];
          uint64_t v77 = v38 + 1;
          if (!v79)
          {
            uint64_t v77 = v38 + 2;
            if (v38 + 2 >= v165) {
              goto LABEL_166;
            }
            unint64_t v79 = *(void *)&v166[8 * v77];
            if (!v79)
            {
              uint64_t v77 = v38 + 3;
              if (v38 + 3 >= v165) {
                goto LABEL_166;
              }
              unint64_t v79 = *(void *)&v166[8 * v77];
              if (!v79)
              {
                uint64_t v77 = v38 + 4;
                if (v38 + 4 >= v165) {
                  goto LABEL_166;
                }
                unint64_t v79 = *(void *)&v166[8 * v77];
                if (!v79)
                {
                  uint64_t v80 = v38 + 5;
                  do
                  {
                    if (v165 == v80) {
                      goto LABEL_166;
                    }
                    unint64_t v79 = *(void *)&v166[8 * v80++];
                  }
                  while (!v79);
                  uint64_t v77 = v80 - 1;
                }
              }
            }
          }
          uint64_t v75 = (v79 - 1) & v79;
          unint64_t v76 = __clz(__rbit64(v79)) + (v77 << 6);
        }
        id v81 = *(id *)(*(void *)(v36 + 48) + 8 * v76);
        if (!v81) {
          goto LABEL_166;
        }
        while (1)
        {
          uint64_t v169 = (char *)v75;
          type metadata accessor for CRLImageItem();
          uint64_t v83 = swift_dynamicCastClass();
          if (!v83) {
            break;
          }
          uint64_t v84 = v83;
          sub_1005498A4((uint64_t)v183, (uint64_t)v175);
          id v85 = v81;
          sub_1005057FC((uint64_t *)&unk_101685100);
          if ((swift_dynamicCast() & 1) == 0)
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 104, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 104);

LABEL_68:
            uint64_t v38 = v77;
            unint64_t v39 = (unint64_t)v169;
            if ((v36 & 0x8000000000000000) == 0) {
              goto LABEL_69;
            }
            goto LABEL_87;
          }
          memcpy(v180, v185, 0x180uLL);
          BOOL v86 = *(void **)&v170[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
          memcpy(v178, v185, 0x178uLL);
          id v87 = v86;
          v181[0] = sub_100F3B830((uint64_t)v178);
          float v88 = *((float *)&v180[22] + 2);
          id v89 = v85;
          id v90 = sub_100A3252C(v88);
          id v91 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMask());
          uint64_t v92 = *(void (**)(uint64_t))(**(void **)(v84 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                               + 256);
          uint64_t v93 = swift_retain();
          v92(v93);
          swift_release();
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*v162)(v74, v168);
          [v91 initWithId:isa maskInfo:v90];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v181[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v181[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          unint64_t v95 = v181[0];
          sub_10089B624((uint64_t)v180);

          sub_1006E1FE0(v95);
          uint64_t v38 = v77;
          unint64_t v39 = (unint64_t)v169;
          uint64_t v36 = i;
          if ((i & 0x8000000000000000) == 0) {
            goto LABEL_69;
          }
LABEL_87:
          uint64_t v82 = __CocoaSet.Iterator.next()();
          uint64_t v74 = v171;
          if (v82)
          {
            *(void *)&v180[0] = v82;
            type metadata accessor for CRLStyledItem();
            swift_unknownObjectRetain();
            uint64_t v36 = i;
            swift_dynamicCast();
            id v81 = *(id *)&v185[0];
            swift_unknownObjectRelease();
            uint64_t v77 = v38;
            uint64_t v75 = v39;
            if (v81) {
              continue;
            }
          }
          goto LABEL_166;
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 103, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 103);

        goto LABEL_68;
      case 3:
        id v167 = v14;
        if ((v7 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          __CocoaSet.makeIterator()();
          type metadata accessor for CRLStyledItem();
          sub_10089B5CC();
          Set.Iterator.init(_cocoa:)();
          uint64_t v7 = v174[0];
          uint64_t v166 = (char *)v174[1];
          uint64_t v40 = v174[2];
          uint64_t v41 = v174[3];
          unint64_t v42 = v174[4];
        }
        else
        {
          uint64_t v96 = -1 << *(unsigned char *)(v7 + 32);
          uint64_t v97 = *(void *)(v7 + 56);
          uint64_t v166 = (char *)(v7 + 56);
          uint64_t v98 = ~v96;
          uint64_t v99 = -v96;
          if (v99 < 64) {
            uint64_t v100 = ~(-1 << v99);
          }
          else {
            uint64_t v100 = -1;
          }
          unint64_t v42 = v100 & v97;
          swift_bridgeObjectRetain();
          uint64_t v40 = v98;
          uint64_t v41 = 0;
        }
        uint64_t v161 = v40;
        uint64_t v164 = v7 & 0x7FFFFFFFFFFFFFFFLL;
        int64_t v165 = (unint64_t)(v40 + 64) >> 6;
        uint64_t v162 = (void (**)(char *, uint64_t))(v9 + 8);
        uint64_t v163 = (char *)&type metadata for Swift.AnyObject + 8;
        uint64_t i = v7;
        while (2)
        {
          if (v7 < 0)
          {
            uint64_t v104 = __CocoaSet.Iterator.next()();
            if (!v104) {
              goto LABEL_166;
            }
            *(void *)&v180[0] = v104;
            type metadata accessor for CRLStyledItem();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v105 = *(id *)&v185[0];
            swift_unknownObjectRelease();
            uint64_t v103 = v41;
            uint64_t v101 = v42;
            uint64_t v7 = i;
            goto LABEL_122;
          }
          if (v42)
          {
            uint64_t v101 = (v42 - 1) & v42;
            unint64_t v102 = __clz(__rbit64(v42)) | (v41 << 6);
            uint64_t v103 = v41;
LABEL_121:
            id v105 = *(id *)(*(void *)(v7 + 48) + 8 * v102);
LABEL_122:
            if (v105)
            {
              type metadata accessor for CRLMovieItem();
              uint64_t v109 = swift_dynamicCastClass();
              if (v109)
              {
                uint64_t v110 = v109;
                uint64_t v169 = (char *)v101;
                sub_1005498A4((uint64_t)v183, (uint64_t)v175);
                id v111 = v105;
                sub_1005057FC((uint64_t *)&unk_101685100);
                if (swift_dynamicCast())
                {
                  memcpy(v180, v185, 0x180uLL);
                  uint64_t v112 = *(void **)&v170[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
                  memcpy(v178, v185, 0x178uLL);
                  id v113 = v112;
                  v181[0] = sub_100F3B830((uint64_t)v178);
                  int v114 = DWORD2(v180[22]);
                  id v115 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMovieCornerRadius(0));
                  char v116 = *(void (**)(uint64_t))(**(void **)(v110
                                                                      + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                        + 256);
                  id v117 = v111;
                  uint64_t v118 = swift_retain();
                  uint64_t v119 = v171;
                  v116(v118);
                  swift_release();
                  Class v120 = UUID._bridgeToObjectiveC()().super.isa;
                  (*v162)(v119, v168);
                  LODWORD(v121) = v114;
                  [v115 initWithId:v120 cornerRadius:v121];

                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  if (*(void *)((v181[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v181[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                  unint64_t v122 = v181[0];
                  sub_10089B624((uint64_t)v180);

                  sub_1006E1FE0(v122);
                  uint64_t v41 = v103;
                  unint64_t v42 = (unint64_t)v169;
                  uint64_t v7 = i;
                }
                else
                {
                  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 111, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
                  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 111);

                  uint64_t v41 = v103;
                  unint64_t v42 = (unint64_t)v169;
                }
              }
              else
              {
                uint64_t v41 = v103;
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 110, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
                uint64_t v7 = i;
                sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 110);

                unint64_t v42 = v101;
              }
              continue;
            }
            goto LABEL_166;
          }
          break;
        }
        int64_t v106 = v41 + 1;
        if (__OFADD__(v41, 1)) {
          goto LABEL_171;
        }
        if (v106 >= v165) {
          goto LABEL_166;
        }
        unint64_t v107 = *(void *)&v166[8 * v106];
        uint64_t v103 = v41 + 1;
        if (v107) {
          goto LABEL_120;
        }
        uint64_t v103 = v41 + 2;
        if (v41 + 2 >= v165) {
          goto LABEL_166;
        }
        unint64_t v107 = *(void *)&v166[8 * v103];
        if (v107) {
          goto LABEL_120;
        }
        uint64_t v103 = v41 + 3;
        if (v41 + 3 >= v165) {
          goto LABEL_166;
        }
        unint64_t v107 = *(void *)&v166[8 * v103];
        if (v107) {
          goto LABEL_120;
        }
        uint64_t v103 = v41 + 4;
        if (v41 + 4 >= v165) {
          goto LABEL_166;
        }
        unint64_t v107 = *(void *)&v166[8 * v103];
        if (v107)
        {
LABEL_120:
          uint64_t v101 = (v107 - 1) & v107;
          unint64_t v102 = __clz(__rbit64(v107)) + (v103 << 6);
          goto LABEL_121;
        }
        uint64_t v108 = v41 + 5;
        while (v165 != v108)
        {
          unint64_t v107 = *(void *)&v166[8 * v108++];
          if (v107)
          {
            uint64_t v103 = v108 - 1;
            goto LABEL_120;
          }
        }
        goto LABEL_166;
      case 4:
        id v167 = v14;
        uint64_t v43 = v7;
        if ((v7 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          __CocoaSet.makeIterator()();
          type metadata accessor for CRLStyledItem();
          sub_10089B5CC();
          Set.Iterator.init(_cocoa:)();
          uint64_t v43 = v178[0];
          uint64_t v171 = (char *)v178[1];
          int64_t v44 = v178[2];
          uint64_t v45 = (char *)v178[3];
          unint64_t v46 = v178[4];
        }
        else
        {
          uint64_t v123 = -1 << *(unsigned char *)(v7 + 32);
          uint64_t v124 = *(void *)(v7 + 56);
          uint64_t v171 = (char *)(v7 + 56);
          uint64_t v125 = ~v123;
          uint64_t v126 = -v123;
          if (v126 < 64) {
            uint64_t v127 = ~(-1 << v126);
          }
          else {
            uint64_t v127 = -1;
          }
          unint64_t v46 = v127 & v124;
          swift_bridgeObjectRetain();
          int64_t v44 = v125;
          uint64_t v45 = 0;
        }
        int64_t v165 = v44;
        uint64_t v168 = v43 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v169 = (char *)((unint64_t)(v44 + 64) >> 6);
        uint64_t v166 = (char *)&type metadata for Swift.AnyObject + 8;
        uint64_t i = v43;
        while (2)
        {
          if (v43 < 0)
          {
            uint64_t v131 = __CocoaSet.Iterator.next()();
            if (!v131) {
              break;
            }
            v174[0] = v131;
            type metadata accessor for CRLStyledItem();
            swift_unknownObjectRetain();
            uint64_t v43 = i;
            swift_dynamicCast();
            id v132 = *(id *)&v180[0];
            swift_unknownObjectRelease();
            BOOL v130 = v45;
            uint64_t v128 = v46;
          }
          else
          {
            if (v46)
            {
              uint64_t v128 = (v46 - 1) & v46;
              unint64_t v129 = __clz(__rbit64(v46)) | ((void)v45 << 6);
              BOOL v130 = v45;
            }
            else
            {
              uint64_t v133 = (uint64_t)(v45 + 1);
              if (__OFADD__(v45, 1)) {
                goto LABEL_172;
              }
              if (v133 >= (uint64_t)v169) {
                break;
              }
              unint64_t v134 = *(void *)&v171[8 * v133];
              BOOL v130 = v45 + 1;
              if (!v134)
              {
                BOOL v130 = v45 + 2;
                if ((uint64_t)(v45 + 2) >= (uint64_t)v169) {
                  break;
                }
                unint64_t v134 = *(void *)&v171[8 * (void)v130];
                if (!v134)
                {
                  BOOL v130 = v45 + 3;
                  if ((uint64_t)(v45 + 3) >= (uint64_t)v169) {
                    break;
                  }
                  unint64_t v134 = *(void *)&v171[8 * (void)v130];
                  if (!v134)
                  {
                    BOOL v130 = v45 + 4;
                    if ((uint64_t)(v45 + 4) >= (uint64_t)v169) {
                      break;
                    }
                    unint64_t v134 = *(void *)&v171[8 * (void)v130];
                    if (!v134)
                    {
                      uint64_t v135 = v45 + 5;
                      do
                      {
                        if (v169 == v135) {
                          goto LABEL_166;
                        }
                        unint64_t v134 = *(void *)&v171[8 * (void)v135++];
                      }
                      while (!v134);
                      BOOL v130 = v135 - 1;
                    }
                  }
                }
              }
              uint64_t v128 = (v134 - 1) & v134;
              unint64_t v129 = __clz(__rbit64(v134)) + ((void)v130 << 6);
            }
            id v132 = *(id *)(*(void *)(v43 + 48) + 8 * v129);
          }
          if (v132)
          {
            type metadata accessor for CRLWPShapeItem();
            uint64_t v136 = swift_dynamicCastClass();
            if (!v136)
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 94, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 94);

              uint64_t v45 = v130;
              unint64_t v46 = v128;
              continue;
            }
            uint64_t v137 = (char *)v136;
            sub_1005498A4((uint64_t)v183, (uint64_t)v174);
            id v138 = v132;
            sub_1005057FC((uint64_t *)&unk_101685100);
            if ((swift_dynamicCast() & 1) == 0)
            {
              unint64_t v46 = v128;
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 95, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 95);

              uint64_t v45 = v130;
              uint64_t v43 = i;
              continue;
            }
            v185[12] = v180[12];
            v185[13] = v180[13];
            v185[14] = v180[14];
            v185[8] = v180[8];
            v185[9] = v180[9];
            v185[10] = v180[10];
            v185[11] = v180[11];
            v185[4] = v180[4];
            v185[5] = v180[5];
            v185[6] = v180[6];
            v185[7] = v180[7];
            v185[0] = v180[0];
            v185[1] = v180[1];
            v185[2] = v180[2];
            *(void *)&v185[15] = *(void *)&v180[15];
            v185[3] = v180[3];
            unint64_t v139 = *(void **)&v137[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
            if (v139)
            {
              id v140 = v139;
              id v141 = [v140 range];
              uint64_t v143 = v142;
              if (v141 != (id)NSNotFound.getter())
              {
                if (__OFADD__(v141, v143)) {
                  goto LABEL_173;
                }
                sub_1008F4D7C((uint64_t)v185, (uint64_t)v141, (uint64_t)v141 + v143, v137);
                unint64_t v145 = v144;
                sub_10089B210((uint64_t)v185);
                sub_1006E1FE0(v145);

LABEL_165:
                uint64_t v45 = v130;
                unint64_t v46 = v128;
                uint64_t v43 = i;
                continue;
              }
            }
            sub_10089B210((uint64_t)v185);
            goto LABEL_165;
          }
          break;
        }
LABEL_166:

LABEL_167:
        sub_10052E1EC();
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v183);
        return v184;
      case 6:
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v183);

        return v16;
      default:
        sub_1005498A4((uint64_t)v183, (uint64_t)v179);
        sub_1005057FC((uint64_t *)&unk_101685100);
        int v21 = swift_dynamicCast();
        id v167 = v14;
        if (v21)
        {
          memcpy(v174, v185, sizeof(v174));
          memcpy(v178, v185, sizeof(v178));
          SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v178, v22);
          uint64_t v171 = (char *)v174[74];
          uint64_t v23 = v174[67];
          uint64_t i = v174[68];
          uint64_t v159 = v174[72];
          uint64_t v156 = v174[73];
          uint64_t v168 = v174[60];
          uint64_t v169 = (char *)v174[69];
          uint64_t v164 = v174[61];
          int64_t v165 = v174[70];
          uint64_t v161 = v174[62];
          uint64_t v162 = (void (**)(char *, uint64_t))v174[71];
          uint64_t v155 = v174[64];
          int v154 = LOBYTE(v174[59]);
          uint64_t v166 = (char *)v174[29];
          uint64_t v163 = (char *)v174[30];
          uint64_t v160 = v174[31];
          uint64_t v157 = v174[32];
          uint64_t v158 = v174[63];
          uint64_t v152 = v174[65];
          uint64_t v153 = v174[33];
          uint64_t v150 = v174[66];
          uint64_t v151 = v174[34];
          uint64_t v24 = v174[37];
          uint64_t v148 = v174[36];
          uint64_t v149 = v174[35];
          uint64_t v25 = v174[38];
          uint64_t v26 = v174[39];
          uint64_t v27 = v174[40];
          uint64_t v28 = v174[41];
          uint64_t v29 = v174[42];
          sub_10089B968((uint64_t)v174);
          sub_10051B3EC((uint64_t)v178, (uint64_t)v180, &qword_101685120);
          sub_10051B3EC((uint64_t)v174, (uint64_t)v181, (uint64_t *)&unk_101685110);
          id v30 = &v174[43];
LABEL_15:
          sub_10051B3EC((uint64_t)v30, (uint64_t)v182, (uint64_t *)&unk_101683E20);
          sub_10051B3EC((uint64_t)v181, (uint64_t)v175, (uint64_t *)&unk_101685110);
          v175[29] = v166;
          v175[30] = v163;
          v175[31] = v160;
          v175[32] = v157;
          v175[33] = v153;
          v175[34] = v151;
          v175[35] = v149;
          v175[36] = v148;
          v175[37] = v24;
          v175[38] = v25;
          v175[39] = v26;
          v175[40] = v27;
          v175[41] = v28;
          v175[42] = v29;
          sub_10051B3EC((uint64_t)v182, (uint64_t)&v175[43], (uint64_t *)&unk_101683E20);
          LOBYTE(v175[59]) = v154;
          v175[60] = v168;
          v175[61] = v164;
          v175[62] = v161;
          v175[63] = v158;
          v175[64] = v155;
          v175[65] = v152;
          v175[66] = v150;
          v175[67] = v23;
          v175[68] = i;
          v175[69] = v169;
          v175[70] = v165;
          v175[71] = v162;
          v175[72] = v159;
          v175[73] = v156;
          v175[74] = v171;
          memcpy(v174, v175, 0x258uLL);
          uint64_t v32 = v7;
          if ((v7 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            __CocoaSet.makeIterator()();
            type metadata accessor for CRLStyledItem();
            sub_10089B5CC();
            Set.Iterator.init(_cocoa:)();
            uint64_t v32 = v176[0];
            uint64_t v171 = (char *)v176[1];
            uint64_t v33 = v176[2];
            uint64_t v34 = v176[3];
            unint64_t v35 = v176[4];
          }
          else
          {
            uint64_t v47 = -1 << *(unsigned char *)(v7 + 32);
            uint64_t v48 = *(void *)(v7 + 56);
            uint64_t v171 = (char *)(v7 + 56);
            uint64_t v33 = ~v47;
            uint64_t v49 = -v47;
            if (v49 < 64) {
              uint64_t v50 = ~(-1 << v49);
            }
            else {
              uint64_t v50 = -1;
            }
            unint64_t v35 = v50 & v48;
            swift_bridgeObjectRetain();
            uint64_t v34 = 0;
          }
          uint64_t v168 = v33;
          int64_t v51 = (unint64_t)(v33 + 64) >> 6;
          uint64_t v169 = (char *)&type metadata for Swift.AnyObject + 8;
          for (i = v32; ; uint64_t v32 = i)
          {
            if (v32 < 0)
            {
              uint64_t v59 = __CocoaSet.Iterator.next()();
              if (!v59) {
                goto LABEL_60;
              }
              v179[0] = v59;
              type metadata accessor for CRLStyledItem();
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v60 = (id)v178[0];
              swift_unknownObjectRelease();
              uint64_t v58 = v34;
              uint64_t v56 = v35;
            }
            else
            {
              if (v35)
              {
                uint64_t v56 = (v35 - 1) & v35;
                unint64_t v57 = __clz(__rbit64(v35)) | (v34 << 6);
                uint64_t v58 = v34;
              }
              else
              {
                int64_t v61 = v34 + 1;
                if (__OFADD__(v34, 1))
                {
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
                  JUMPOUT(0x100899FCCLL);
                }
                if (v61 >= v51) {
                  goto LABEL_60;
                }
                unint64_t v62 = *(void *)&v171[8 * v61];
                uint64_t v58 = v34 + 1;
                if (!v62)
                {
                  uint64_t v58 = v34 + 2;
                  if (v34 + 2 >= v51) {
                    goto LABEL_60;
                  }
                  unint64_t v62 = *(void *)&v171[8 * v58];
                  if (!v62)
                  {
                    uint64_t v58 = v34 + 3;
                    if (v34 + 3 >= v51) {
                      goto LABEL_60;
                    }
                    unint64_t v62 = *(void *)&v171[8 * v58];
                    if (!v62)
                    {
                      uint64_t v58 = v34 + 4;
                      if (v34 + 4 >= v51) {
                        goto LABEL_60;
                      }
                      unint64_t v62 = *(void *)&v171[8 * v58];
                      if (!v62)
                      {
                        uint64_t v63 = v34 + 5;
                        do
                        {
                          if (v51 == v63) {
                            goto LABEL_60;
                          }
                          unint64_t v62 = *(void *)&v171[8 * v63++];
                        }
                        while (!v62);
                        uint64_t v58 = v63 - 1;
                      }
                    }
                  }
                }
                uint64_t v56 = (v62 - 1) & v62;
                unint64_t v57 = __clz(__rbit64(v62)) + (v58 << 6);
              }
              id v60 = *(id *)(*(void *)(v32 + 48) + 8 * v57);
            }
            if (!v60)
            {
LABEL_60:

              sub_10089B748((uint64_t)v175);
              sub_10051B860(v180, sub_10051B450);
              goto LABEL_167;
            }
            type metadata accessor for CRLWPShapeItem();
            if (swift_dynamicCastClass())
            {
              sub_10051B3EC((uint64_t)v180, (uint64_t)v178, &qword_101685120);
              if (sub_10089B950((uint64_t)v178) == 1)
              {
                uint64_t v52 = *(void **)&v170[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
                id v53 = v60;
                id v54 = v52;
                unint64_t v55 = sub_100AA1074(v174);
              }
              else
              {
                memcpy(v185, v178, 0x370uLL);
                uint64_t v64 = *(void **)&v170[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
                id v53 = v60;
                sub_10051B860(v180, sub_10051BA5C);
                id v54 = v64;
                unint64_t v55 = sub_10099118C((char *)v185);
                sub_10051B860(v180, sub_10051B450);
              }

              sub_1006E1FE0(v55);
            }
            else
            {
              type metadata accessor for CRLShapeItem();
              if (swift_dynamicCastClass())
              {
                uint64_t v65 = *(void **)&v170[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
                id v66 = v60;
                id v67 = v65;
                unint64_t v68 = sub_100AA1074(v174);

                sub_1006E1FE0(v68);
              }
              else
              {
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 87, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
                sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 87);
              }
            }
            uint64_t v34 = v58;
            unint64_t v35 = v56;
          }
        }
        sub_10089B740(v178);
        sub_1005498A4((uint64_t)v183, (uint64_t)&v177);
        if (swift_dynamicCast())
        {
          sub_10051B3EC((uint64_t)v174, (uint64_t)v175, (uint64_t *)&unk_101685110);
          uint64_t v166 = (char *)v174[29];
          uint64_t v163 = (char *)v174[30];
          uint64_t v160 = v174[31];
          uint64_t v157 = v174[32];
          uint64_t v153 = v174[33];
          uint64_t v151 = v174[34];
          uint64_t v24 = v174[37];
          uint64_t v148 = v174[36];
          uint64_t v149 = v174[35];
          uint64_t v25 = v174[38];
          uint64_t v26 = v174[39];
          uint64_t v27 = v174[40];
          uint64_t v28 = v174[41];
          uint64_t v29 = v174[42];
          sub_10051B3EC((uint64_t)&v174[43], (uint64_t)v176, (uint64_t *)&unk_101683E20);
          int v154 = LOBYTE(v174[59]);
          uint64_t v158 = v174[63];
          uint64_t v155 = v174[64];
          uint64_t v152 = v174[65];
          uint64_t v150 = v174[66];
          uint64_t v23 = v174[67];
          uint64_t i = v174[68];
          uint64_t v168 = v174[60];
          uint64_t v169 = (char *)v174[69];
          uint64_t v164 = v174[61];
          int64_t v165 = v174[70];
          uint64_t v161 = v174[62];
          uint64_t v162 = (void (**)(char *, uint64_t))v174[71];
          uint64_t v159 = v174[72];
          uint64_t v156 = v174[73];
          uint64_t v171 = (char *)v174[74];
          sub_10051B3EC((uint64_t)v178, (uint64_t)v180, &qword_101685120);
          sub_10051B3EC((uint64_t)v175, (uint64_t)v181, (uint64_t *)&unk_101685110);
          id v30 = v176;
          goto LABEL_15;
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 74, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 74);
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 76, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 76);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v183);

        id v31 = v167;
        break;
    }
  }
  else
  {
    int64_t v16 = _swiftEmptyArrayStorage;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 54, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteStyle(to:from:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 54);
    id v31 = v172;
  }

  return v16;
}

double *sub_10089A0A0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (char *)[v4 newReadAssistantWithPasteboard:a4];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(char **)&v8[OBJC_IVAR____TtC8Freeform32CRLPasteboardObjectReadAssistant_pasteboardObject];
    if (v10)
    {
      uint64_t v33 = _swiftEmptyArrayStorage;
      uint64_t v11 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
      uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData]
          + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
      swift_beginAccess();
      sub_100522E9C(v12, (uint64_t)__src, &qword_10167F410);
      if (!*((void *)&__src[1] + 1))
      {

        sub_100522F00((uint64_t)__src, &qword_10167F410);
        return v33;
      }
      sub_10053974C(__src, (uint64_t)v32);
      switch(*(unsigned char *)(*(void *)&v10[v11] + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind))
      {
        case 2:
          int64_t v16 = v10;
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 143, (uint64_t)"Can not apply text style from an image", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v17 = 143;
          goto LABEL_18;
        case 3:
          int64_t v16 = v10;
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 145, (uint64_t)"Can not apply text style from a movie", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v17 = 145;
          goto LABEL_18;
        case 4:
          sub_1005498A4((uint64_t)v32, (uint64_t)v34);
          uint64_t v13 = v10;
          sub_1005057FC((uint64_t *)&unk_101685100);
          if (swift_dynamicCast())
          {
            __src[12] = __dst[12];
            __src[13] = __dst[13];
            __src[14] = __dst[14];
            *(void *)&__src[15] = *(void *)&__dst[15];
            __src[8] = __dst[8];
            __src[9] = __dst[9];
            __src[10] = __dst[10];
            __src[11] = __dst[11];
            __src[4] = __dst[4];
            __src[5] = __dst[5];
            __src[6] = __dst[6];
            __src[7] = __dst[7];
            __src[0] = __dst[0];
            __src[1] = __dst[1];
            __src[2] = __dst[2];
            __src[3] = __dst[3];
            if (NSNotFound.getter() == a2)
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v32);

              int64_t v14 = __src;
              goto LABEL_16;
            }
            uint64_t v26 = a2 + a3;
            if (!__OFADD__(a2, a3))
            {
              uint64_t v27 = *(void **)&a1[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
              if (v27)
              {
                id v21 = v27;
                sub_1008F4D7C((uint64_t)__src, a2, v26, a1);
                unint64_t v23 = v28;
                uint64_t v24 = __src;
LABEL_32:
                sub_10089B210((uint64_t)v24);

                sub_1006E1FE0(v23);
LABEL_19:
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v32);
                return v33;
              }
LABEL_36:
              __break(1u);
              JUMPOUT(0x10089A81CLL);
            }
            goto LABEL_34;
          }
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 138, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v18 = 138;
          break;
        case 5:
          int64_t v16 = v10;
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 147, (uint64_t)"Can not apply text style from a connection line", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v17 = 147;
LABEL_18:
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, v17);

          goto LABEL_19;
        case 6:
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v32);

          return v33;
        default:
          sub_1005498A4((uint64_t)v32, (uint64_t)v31);
          uint64_t v13 = v10;
          sub_1005057FC((uint64_t *)&unk_101685100);
          if (swift_dynamicCast())
          {
            memcpy(__dst, __src, sizeof(__dst));
            v34[12] = *(_OWORD *)((char *)&__dst[49] + 8);
            v34[13] = *(_OWORD *)((char *)&__dst[50] + 8);
            v34[14] = *(_OWORD *)((char *)&__dst[51] + 8);
            uint64_t v35 = *((void *)&__dst[52] + 1);
            v34[8] = *(_OWORD *)((char *)&__dst[45] + 8);
            v34[9] = *(_OWORD *)((char *)&__dst[46] + 8);
            v34[10] = *(_OWORD *)((char *)&__dst[47] + 8);
            v34[11] = *(_OWORD *)((char *)&__dst[48] + 8);
            void v34[4] = *(_OWORD *)((char *)&__dst[41] + 8);
            v34[5] = *(_OWORD *)((char *)&__dst[42] + 8);
            v34[6] = *(_OWORD *)((char *)&__dst[43] + 8);
            v34[7] = *(_OWORD *)((char *)&__dst[44] + 8);
            v34[0] = *(_OWORD *)((char *)&__dst[37] + 8);
            v34[1] = *(_OWORD *)((char *)&__dst[38] + 8);
            v34[2] = *(_OWORD *)((char *)&__dst[39] + 8);
            v34[3] = *(_OWORD *)((char *)&__dst[40] + 8);
            sub_1005DF3EC((uint64_t)&__dst[37] + 8);
            sub_10089B2D0((uint64_t)__dst);
            if (NSNotFound.getter() == a2)
            {
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v32);

              int64_t v14 = (_OWORD *)((char *)&__dst[37] + 8);
LABEL_16:
              sub_10089B210((uint64_t)v14);

              return v33;
            }
            uint64_t v19 = a2 + a3;
            if (!__OFADD__(a2, a3))
            {
              id v20 = *(void **)&a1[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
              if (v20)
              {
                id v21 = v20;
                sub_1008F4D7C((uint64_t)v34, a2, v19, a1);
                unint64_t v23 = v22;
                uint64_t v24 = (_OWORD *)((char *)&__dst[37] + 8);
                goto LABEL_32;
              }
              goto LABEL_35;
            }
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 132, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v18 = 132;
          break;
      }
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, v18);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v32);

      return v33;
    }
    id v15 = _swiftEmptyArrayStorage;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 123, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 123);
  }
  else
  {
    id v15 = _swiftEmptyArrayStorage;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 122, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandsToPasteTextStyle(to:in:from:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 122);
  }
  return v15;
}

uint64_t sub_10089AA08(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  __n128 v10 = __chkstk_darwin(a1, a1);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
  id v13 = [a3 newCopyAssistantWithPasteboard:a2];
  id v14 = [v13 pasteboardObject];
  if (v14)
  {
    id v15 = v14;
    sub_100785928((uint64_t)v12, (uint64_t)v14, a4, a5);
    id v16 = [objc_allocWithZone((Class)CRLContentDescriptionTranslator) init];
    uint64_t v17 = sub_1009DB804((uint64_t)v12, v16, a4, a5);
    id v18 = v13;
    sub_100ED2BB8((uint64_t)v17);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 setContentDescription:isa];

    [v18 copyToPasteboard];
    id v13 = v16;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"copyStyleFrom(styledItem:to:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 20, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"copyStyleFrom(styledItem:to:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardController.swift", 90, 2, 20);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a4);
}

double *sub_10089AC9C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, BOOL *a5)
{
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [objc_allocWithZone((Class)CRLBoardItemProviderFactory) initWithBoardItemFactory:a1];
  if (*(void *)(a3 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems)) {
    unint64_t v14 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
  }
  else {
    unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (!(v14 >> 62))
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15 >= 1) {
      goto LABEL_6;
    }
LABEL_11:
    int v33 = a2;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
        + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
    swift_beginAccess();
    sub_100522E9C(v22, (uint64_t)v12, (uint64_t *)&unk_101674610);
    uint64_t v23 = type metadata accessor for CRLWPStorageCRDTData(0);
    int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v12, 1, v23);
    sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674610);
    uint64_t v21 = 0;
    if (v24 == 1) {
      goto LABEL_18;
    }
    uint64_t v25 = sub_10078250C(a1);
    if (v25)
    {
      uint64_t v26 = (char *)v25;
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t result = (double *)swift_allocObject();
      *((_OWORD *)result + 1) = xmmword_101177E70;
      unint64_t v28 = *(void **)&v26[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage];
      if (!v28)
      {
        __break(1u);
        return result;
      }
      *((void *)result + 4) = v28;
      uint64_t v34 = result;
      specialized Array._endMutation()();
      type metadata accessor for CRLWPStorage();
      id v29 = v28;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v31 = [v13 providersForBoardItemsFromTextStorages:isa, v33 & 1, 0.0, 0.0];

      if (v31)
      {
        sub_1005057FC(&qword_1016850E8);
        uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        goto LABEL_18;
      }
    }
LABEL_17:
    uint64_t v21 = 0;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15 < 1) {
    goto LABEL_11;
  }
LABEL_6:
  id v16 = self;
  type metadata accessor for CRLBoardItem(0);
  Class v17 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1005057FC(&qword_1016850E0);
  Class v18 = Array._bridgeToObjectiveC()().super.isa;
  Class v19 = (Class)[v16 ingestibleBoardItemAndDescriptionWithBoardItems:v17 descriptions:v18];

  if (!v19)
  {
    sub_10089B1D0();
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class v19 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  id v20 = [v13 styleMappingProvidersForPasteboardBoardItems:v19];

  if (!v20) {
    goto LABEL_17;
  }
  sub_1005057FC(&qword_1016850E8);
  uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_18:
  if (a5) {
    *a5 = v15 > 0;
  }

  if (v21) {
    return (double *)v21;
  }
  else {
    return _swiftEmptyArrayStorage;
  }
}

uint64_t sub_10089B07C(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_19:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      swift_getObjectType();
      uint64_t v7 = swift_conformsToProtocol2();
      if (v7) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      if (v7) {
        uint64_t v9 = v6;
      }
      else {
        uint64_t v9 = 0;
      }
      if (v9)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v8 + 32))(ObjectType, v8);
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_10089B1D0()
{
  unint64_t result = qword_1016850F0;
  if (!qword_1016850F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1016850F0);
  }
  return result;
}

uint64_t sub_10089B210(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  uint64_t v7 = *(void *)(a1 + 120);
  long long v10 = *(_OWORD *)(a1 + 144);
  long long v11 = *(_OWORD *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 160);
  sub_10051AC88(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_10051ABBC(v13, v12, v2, v3, v4, v5, v6, v7, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10089B2D0(uint64_t a1)
{
  uint64_t v30 = *(void *)(a1 + 240);
  uint64_t v31 = *(void *)(a1 + 232);
  uint64_t v28 = *(void *)(a1 + 256);
  uint64_t v29 = *(void *)(a1 + 248);
  uint64_t v26 = *(void *)(a1 + 272);
  uint64_t v27 = *(void *)(a1 + 264);
  uint64_t v24 = *(void *)(a1 + 288);
  uint64_t v25 = *(void *)(a1 + 280);
  long long v19 = *(_OWORD *)(a1 + 296);
  long long v17 = *(_OWORD *)(a1 + 312);
  uint64_t v16 = *(void *)(a1 + 328);
  uint64_t v45 = *(void *)(a1 + 352);
  uint64_t v46 = *(void *)(a1 + 344);
  uint64_t v43 = *(void *)(a1 + 368);
  uint64_t v44 = *(void *)(a1 + 360);
  uint64_t v41 = *(void *)(a1 + 384);
  uint64_t v42 = *(void *)(a1 + 376);
  uint64_t v39 = *(void *)(a1 + 400);
  uint64_t v40 = *(void *)(a1 + 392);
  long long v23 = *(_OWORD *)(a1 + 408);
  long long v21 = *(_OWORD *)(a1 + 424);
  long long v48 = *(_OWORD *)(a1 + 744);
  long long v49 = *(_OWORD *)(a1 + 728);
  uint64_t v3 = *(void *)(a1 + 480);
  uint64_t v2 = *(void *)(a1 + 488);
  uint64_t v5 = *(void *)(a1 + 496);
  uint64_t v4 = *(void *)(a1 + 504);
  uint64_t v6 = *(void *)(a1 + 512);
  uint64_t v7 = *(void *)(a1 + 520);
  uint64_t v8 = *(void *)(a1 + 536);
  uint64_t v9 = *(void *)(a1 + 544);
  uint64_t v11 = *(void *)(a1 + 552);
  uint64_t v12 = *(void *)(a1 + 560);
  uint64_t v13 = *(void *)(a1 + 568);
  uint64_t v14 = *(void *)(a1 + 576);
  uint64_t v18 = *(void *)(a1 + 600);
  unint64_t v20 = *(void *)(a1 + 608);
  uint64_t v32 = *(void *)(a1 + 664);
  uint64_t v33 = *(void *)(a1 + 672);
  uint64_t v34 = *(void *)(a1 + 680);
  uint64_t v35 = *(void *)(a1 + 688);
  uint64_t v36 = *(void *)(a1 + 696);
  uint64_t v37 = *(void *)(a1 + 704);
  uint64_t v38 = *(void *)(a1 + 712);
  uint64_t v47 = *(void *)(a1 + 720);
  uint64_t v22 = *(void *)(a1 + 760);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 616);
  sub_100519F40(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051ABBC(v31, v30, v29, v28, v27, v26, v25, v24, v19, *((uint64_t *)&v19 + 1), v17, *((uint64_t *)&v17 + 1), v16);
  sub_10051A0B8(v46, v45, v44, v43, v42, v41, v40, v39, v23, *((uint64_t *)&v23 + 1), v21);
  sub_10051AC38(v3, v2, v5, v4, v6, v7);
  sub_10051AC38(v8, v9, v11, v12, v13, v14);
  swift_bridgeObjectRelease();
  sub_10051AC88(v18, v20, v15);
  sub_10051ABBC(v32, v33, v34, v35, v36, v37, v38, v47, v49, *((uint64_t *)&v49 + 1), v48, *((uint64_t *)&v48 + 1), v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_10089B5CC()
{
  unint64_t result = qword_10167BEC0;
  if (!qword_10167BEC0)
  {
    type metadata accessor for CRLStyledItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BEC0);
  }
  return result;
}

uint64_t sub_10089B624(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 248);
  uint64_t v11 = *(void *)(a1 + 240);
  uint64_t v12 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 256);
  uint64_t v4 = *(void *)(a1 + 264);
  uint64_t v5 = *(void *)(a1 + 272);
  uint64_t v6 = *(void *)(a1 + 280);
  uint64_t v7 = *(void *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 312);
  long long v10 = *(_OWORD *)(a1 + 296);
  sub_100519F40(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051A0B8(v12, v11, v2, v3, v4, v5, v6, v7, v10, *((uint64_t *)&v10 + 1), v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_10089B740(void *a1)
{
}

uint64_t sub_10089B748(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 240);
  uint64_t v14 = *(void *)(a1 + 256);
  uint64_t v15 = *(void *)(a1 + 248);
  uint64_t v4 = *(void *)(a1 + 272);
  uint64_t v13 = *(void *)(a1 + 264);
  uint64_t v5 = *(void *)(a1 + 280);
  uint64_t v6 = *(void *)(a1 + 288);
  long long v10 = *(_OWORD *)(a1 + 296);
  long long v9 = *(_OWORD *)(a1 + 312);
  uint64_t v7 = *(void *)(a1 + 328);
  uint64_t v28 = *(void *)(a1 + 352);
  uint64_t v29 = *(void *)(a1 + 344);
  uint64_t v26 = *(void *)(a1 + 368);
  uint64_t v27 = *(void *)(a1 + 360);
  uint64_t v24 = *(void *)(a1 + 384);
  uint64_t v25 = *(void *)(a1 + 376);
  uint64_t v22 = *(void *)(a1 + 400);
  uint64_t v23 = *(void *)(a1 + 392);
  long long v11 = *(_OWORD *)(a1 + 424);
  long long v12 = *(_OWORD *)(a1 + 408);
  uint64_t v20 = *(void *)(a1 + 488);
  uint64_t v21 = *(void *)(a1 + 480);
  uint64_t v18 = *(void *)(a1 + 504);
  uint64_t v19 = *(void *)(a1 + 496);
  uint64_t v17 = *(void *)(a1 + 512);
  uint64_t v16 = *(void *)(a1 + 520);
  uint64_t v34 = *(void *)(a1 + 544);
  uint64_t v35 = *(void *)(a1 + 536);
  uint64_t v32 = *(void *)(a1 + 560);
  uint64_t v33 = *(void *)(a1 + 552);
  uint64_t v30 = *(void *)(a1 + 576);
  uint64_t v31 = *(void *)(a1 + 568);
  sub_100519F40(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051ABBC(v2, v3, v15, v14, v13, v4, v5, v6, v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v7);
  sub_10051A0B8(v29, v28, v27, v26, v25, v24, v23, v22, v12, *((uint64_t *)&v12 + 1), v11);
  sub_10051AC38(v21, v20, v19, v18, v17, v16);
  sub_10051AC38(v35, v34, v33, v32, v31, v30);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10089B950(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 592);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_10089B968(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 240);
  uint64_t v14 = *(void *)(a1 + 256);
  uint64_t v15 = *(void *)(a1 + 248);
  uint64_t v4 = *(void *)(a1 + 272);
  uint64_t v13 = *(void *)(a1 + 264);
  uint64_t v5 = *(void *)(a1 + 280);
  uint64_t v6 = *(void *)(a1 + 288);
  long long v10 = *(_OWORD *)(a1 + 296);
  long long v9 = *(_OWORD *)(a1 + 312);
  uint64_t v7 = *(void *)(a1 + 328);
  uint64_t v28 = *(void *)(a1 + 352);
  uint64_t v29 = *(void *)(a1 + 344);
  uint64_t v26 = *(void *)(a1 + 368);
  uint64_t v27 = *(void *)(a1 + 360);
  uint64_t v24 = *(void *)(a1 + 384);
  uint64_t v25 = *(void *)(a1 + 376);
  uint64_t v22 = *(void *)(a1 + 400);
  uint64_t v23 = *(void *)(a1 + 392);
  long long v11 = *(_OWORD *)(a1 + 424);
  long long v12 = *(_OWORD *)(a1 + 408);
  uint64_t v20 = *(void *)(a1 + 488);
  uint64_t v21 = *(void *)(a1 + 480);
  uint64_t v18 = *(void *)(a1 + 504);
  uint64_t v19 = *(void *)(a1 + 496);
  uint64_t v17 = *(void *)(a1 + 512);
  uint64_t v16 = *(void *)(a1 + 520);
  uint64_t v34 = *(void *)(a1 + 544);
  uint64_t v35 = *(void *)(a1 + 536);
  uint64_t v32 = *(void *)(a1 + 560);
  uint64_t v33 = *(void *)(a1 + 552);
  uint64_t v30 = *(void *)(a1 + 576);
  uint64_t v31 = *(void *)(a1 + 568);
  sub_10051A1EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051B2E8(v2, v3, v15, v14, v13, v4, v5, v6, v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v7);
  sub_10051A364(v29, v28, v27, v26, v25, v24, v23, v22, v12, *((uint64_t *)&v12 + 1), v11);
  sub_10051B364(v21, v20, v19, v18, v17, v16);
  sub_10051B364(v35, v34, v33, v32, v31, v30);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CRLLineEndData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLLineEndData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 20) = *(void *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLLineEndData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLLineEndData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 20) = *(void *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLineEndData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLineEndData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLineEndData()
{
  return &type metadata for CRLLineEndData;
}

uint64_t *sub_10089BDE8@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_10089BE00()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10089BE60()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_10089BEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10089E0D4();
  unint64_t v7 = sub_10089E028();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10089BF20()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_10089BF8C()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_10089BFE8(uint64_t a1)
{
  unint64_t v2 = sub_10089E0D4();
  unint64_t v3 = sub_10089CFB4();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

BOOL sub_10089C048(char *a1, char *a2)
{
  return qword_101194928[*a1] == qword_101194928[*a2];
}

Swift::Int sub_10089C06C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_101194928[v1]);
  return Hasher._finalize()();
}

void sub_10089C0BC()
{
  Hasher._combine(_:)(qword_101194928[*v0]);
}

Swift::Int sub_10089C0F4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_101194928[v1]);
  return Hasher._finalize()();
}

uint64_t sub_10089C140@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10089D428(*a1);
  *a2 = result;
  return result;
}

void sub_10089C16C(void *a1@<X8>)
{
  *a1 = qword_101194928[*v1];
}

unint64_t sub_10089C184()
{
  unint64_t result = 1752457584;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E696F4A656E696CLL;
      break;
    case 2:
      unint64_t result = 0x746E696F50646E65;
      break;
    case 3:
      unint64_t result = 0x64656C6C69467369;
      break;
    case 4:
      unint64_t result = 0x696669746E656469;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10089C24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10089D450(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10089C274()
{
  return qword_101194928[*v0];
}

uint64_t sub_10089C28C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10089D428(a1);
  *a2 = result;
  return result;
}

void sub_10089C2B4(void *a1@<X8>)
{
  *a1 = &off_101502D20;
}

uint64_t sub_10089C2C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10089CC60();
  unint64_t v5 = sub_10089CCB8();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_10089C31C(uint64_t a1)
{
  unint64_t v2 = sub_10089CCB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10089C358(uint64_t a1)
{
  unint64_t v2 = sub_10089CCB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10089C398(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016851E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10089CCB8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v15, &qword_1016851E8);
  sub_10051B3EC((uint64_t)v15, (uint64_t)&v12, &qword_1016851E8);
  char v13 = 0;
  sub_10089DB5C();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    sub_10051B3EC(v3 + 8, (uint64_t)v14, &qword_1016851B0);
    sub_10051B3EC((uint64_t)v14, (uint64_t)&v12, &qword_1016851B0);
    char v13 = 1;
    sub_1005057FC(&qword_1016851B0);
    sub_10089DBB0(&qword_1016851F8);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + 20);
    char v13 = 2;
    sub_10089DC18();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + 48);
    char v13 = 5;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_10089C668()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10089C670(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_10089C69C())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_10089C6BC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_10089C394(v5, v7) & 1;
}

double sub_10089C718@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10089D6CC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_10089C768(void *a1)
{
  return sub_10089C398(a1);
}

uint64_t sub_10089C7AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10089DC6C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10089C800(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10089DC6C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_10089C854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10089CAA8();
  unint64_t v7 = sub_10089DCC0();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10089C8C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10089DC6C();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_10089C910()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_10089C960()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_10089C9A8(uint64_t a1)
{
  unint64_t v2 = sub_10089CE20();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_10089C9F8()
{
  unint64_t result = qword_101685140;
  if (!qword_101685140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685140);
  }
  return result;
}

unint64_t sub_10089CA50()
{
  unint64_t result = qword_101685148;
  if (!qword_101685148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685148);
  }
  return result;
}

unint64_t sub_10089CAA8()
{
  unint64_t result = qword_101685150;
  if (!qword_101685150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685150);
  }
  return result;
}

unint64_t sub_10089CB00()
{
  unint64_t result = qword_101685158;
  if (!qword_101685158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685158);
  }
  return result;
}

unint64_t sub_10089CB58()
{
  unint64_t result = qword_101685160;
  if (!qword_101685160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685160);
  }
  return result;
}

unint64_t sub_10089CBB0()
{
  unint64_t result = qword_101685168;
  if (!qword_101685168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685168);
  }
  return result;
}

unint64_t sub_10089CC08()
{
  unint64_t result = qword_101685170;
  if (!qword_101685170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685170);
  }
  return result;
}

unint64_t sub_10089CC60()
{
  unint64_t result = qword_101685178;
  if (!qword_101685178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685178);
  }
  return result;
}

unint64_t sub_10089CCB8()
{
  unint64_t result = qword_101685180;
  if (!qword_101685180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685180);
  }
  return result;
}

unint64_t sub_10089CD10()
{
  unint64_t result = qword_101685188;
  if (!qword_101685188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685188);
  }
  return result;
}

unint64_t sub_10089CD68()
{
  unint64_t result = qword_101685190;
  if (!qword_101685190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685190);
  }
  return result;
}

unint64_t sub_10089CDC0()
{
  unint64_t result = qword_101685198;
  if (!qword_101685198)
  {
    sub_100522D34(&qword_1016851A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685198);
  }
  return result;
}

unint64_t sub_10089CE20()
{
  unint64_t result = qword_1016851A8;
  if (!qword_1016851A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016851A8);
  }
  return result;
}

uint64_t sub_10089CE74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)a2;
  if (v4)
  {
    if (!v5 || !sub_1005BA910(v4, v5)) {
      goto LABEL_10;
    }
  }
  else if (v5)
  {
LABEL_10:
    char v6 = 0;
    return v6 & 1;
  }
  sub_10051B3EC(a1 + 8, (uint64_t)v12, &qword_1016851B0);
  sub_10051B3EC((uint64_t)v12, (uint64_t)v10, &qword_1016851B0);
  sub_10051B3EC(a2 + 8, (uint64_t)v11, &qword_1016851B0);
  sub_10051B3EC((uint64_t)v11, (uint64_t)&v9, &qword_1016851B0);
  sub_10089CFB4();
  if ((static CRExtensible.== infix(_:_:)() & 1) == 0
    || *(float *)(a1 + 20) != *(float *)(a2 + 20)
    || *(float *)(a1 + 24) != *(float *)(a2 + 24)
    || ((*(unsigned __int8 *)(a1 + 28) ^ *(unsigned __int8 *)(a2 + 28)) & 1) != 0)
  {
    goto LABEL_10;
  }
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v8 & 1) != 0))
  {
    char v6 = sub_100ED60AC(*(void *)(a1 + 48), *(void *)(a2 + 48));
  }
  return v6 & 1;
}

unint64_t sub_10089CFB4()
{
  unint64_t result = qword_1016851B8;
  if (!qword_1016851B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016851B8);
  }
  return result;
}

id sub_10089D008(uint64_t a1)
{
  sub_10051B3EC(a1 + 8, (uint64_t)v12, &qword_1016851B0);
  sub_10051B3EC((uint64_t)v12, (uint64_t)v13, &qword_1016851B0);
  if (v13[8])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLLineEndData.swift", 84, 2, 85, (uint64_t)"Tried to decode unknown line end line join value. Falling back to unarchiving miter.", 84, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLLineEndData.swift", 84, 2, 85);
    uint64_t v2 = 0;
    id v3 = *(id *)a1;
    if (!*(void *)a1) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v2 = v13[0];
  id v3 = *(id *)a1;
  if (*(void *)a1)
  {
LABEL_5:
    sub_1007BEE30();
    uint64_t v4 = swift_bridgeObjectRetain();
    id v3 = sub_100ABF740(v4);
  }
LABEL_6:
  id v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double v6 = *(float *)(a1 + 20);
  double v7 = *(float *)(a1 + 24);
  uint64_t v8 = *(unsigned __int8 *)(a1 + 28);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v5 initWithBezierPath:v3 wrapPath:0 endPoint:v8 isFilled:v9 identifier:v2 lineJoin:v7];

  return v10;
}

void sub_10089D1B0(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 path];
  if (v4)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = &_swiftEmptyArrayStorage;
    double v6 = (id *)(v5 + 16);
    aBlock[4] = sub_10089DD4C;
    aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100AAF588;
    aBlock[3] = &unk_1015184E0;
    double v7 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v4 iteratePathElementsWithBlock:v7];

    _Block_release(v7);
    swift_beginAccess();
    id v4 = *v6;
    swift_bridgeObjectRetain();
    swift_release();
  }
  unsigned int v8 = [a1 lineJoin];
  if (v8 >= 3)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLLineEndData.swift", 84, 2, 62, (uint64_t)"Unknown line end line type. Falling back to archiving miter.", 60, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    LOBYTE(v21) = 2;
    uint64_t v19 = "Unknown line end line type. Falling back to archiving miter.";
    uint64_t v20 = 60;
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLLineEndData.swift", 84, 2, 62);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = v8;
  }
  [a1 endPoint:v19, v20, v21];
  float v11 = v10;
  float v13 = v12;
  unsigned __int8 v14 = [a1 isFilled];
  id v15 = [a1 identifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v9;
  *(unsigned char *)(a2 + 16) = 0;
  *(float *)(a2 + 20) = v11;
  *(float *)(a2 + 24) = v13;
  *(unsigned char *)(a2 + 28) = v14;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v18;
  *(void *)(a2 + 48) = &_swiftEmptyDictionarySingleton;
}

uint64_t sub_10089D428(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 6) {
    return 6;
  }
  else {
    return (0x40302010005uLL >> (8 * (a1 + 1)));
  }
}

uint64_t sub_10089D450(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1752457584 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E696F4A656E696CLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E696F50646E65 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656C6C69467369 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10089D6CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016851C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10089CCB8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = 0;
    sub_10089DAB4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v10 = v24;
    sub_1005057FC(&qword_1016851B0);
    char v26 = 1;
    sub_10089DBB0(&qword_1016851D0);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v23 = v24;
    int v11 = v25;
    char v26 = 2;
    sub_10089DB08();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    int v22 = v11;
    uint64_t v12 = v24;
    LOBYTE(v24) = 3;
    int v21 = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v24) = 4;
    uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v15 = v14;
    uint64_t v20 = v13;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v26 = 5;
    sub_100557304();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v21 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v16 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v18 = v23;
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v18;
    *(unsigned char *)(a2 + 16) = v22;
    *(void *)(a2 + 20) = v12;
    *(unsigned char *)(a2 + 28) = v21;
    *(void *)(a2 + 32) = v20;
    *(void *)(a2 + 40) = v15;
    *(void *)(a2 + 48) = v16;
  }
  return result;
}

unint64_t sub_10089DAB4()
{
  unint64_t result = qword_1016851C8;
  if (!qword_1016851C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016851C8);
  }
  return result;
}

unint64_t sub_10089DB08()
{
  unint64_t result = qword_1016851D8;
  if (!qword_1016851D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016851D8);
  }
  return result;
}

unint64_t sub_10089DB5C()
{
  unint64_t result = qword_1016851F0;
  if (!qword_1016851F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016851F0);
  }
  return result;
}

uint64_t sub_10089DBB0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_1016851B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10089DC18()
{
  unint64_t result = qword_101685200;
  if (!qword_101685200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685200);
  }
  return result;
}

unint64_t sub_10089DC6C()
{
  unint64_t result = qword_101685208;
  if (!qword_101685208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685208);
  }
  return result;
}

unint64_t sub_10089DCC0()
{
  unint64_t result = qword_101685210;
  if (!qword_101685210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685210);
  }
  return result;
}

uint64_t sub_10089DD14()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10089DD4C(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  sub_100ABF998(a1, v7, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10089DD54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10089DD64()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for CRLLineEndData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10089DE38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLineEndData.CodingKeys()
{
  return &type metadata for CRLLineEndData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLLineEndData.JoinType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10089DF3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLineEndData.JoinType()
{
  return &type metadata for CRLLineEndData.JoinType;
}

unint64_t sub_10089DF78()
{
  unint64_t result = qword_101685218;
  if (!qword_101685218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685218);
  }
  return result;
}

unint64_t sub_10089DFD0()
{
  unint64_t result = qword_101685220;
  if (!qword_101685220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685220);
  }
  return result;
}

unint64_t sub_10089E028()
{
  unint64_t result = qword_101685228;
  if (!qword_101685228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685228);
  }
  return result;
}

unint64_t sub_10089E080()
{
  unint64_t result = qword_101685230;
  if (!qword_101685230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685230);
  }
  return result;
}

unint64_t sub_10089E0D4()
{
  unint64_t result = qword_101685238;
  if (!qword_101685238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685238);
  }
  return result;
}

uint64_t sub_10089E128(uint64_t a1)
{
  uint64_t v23 = type metadata accessor for CRLDisjointPosition.Element();
  uint64_t v2 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v3);
  uint64_t v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v27 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1006BB504(0, v6, 0);
    uint64_t v8 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v22 = a1;
    uint64_t v9 = a1 + ((v8 + 32) & ~v8);
    uint64_t v10 = *(void *)(v2 + 72);
    do
    {
      sub_1008A04C0(v9, (uint64_t)v5);
      uint64_t v25 = 40;
      unint64_t v26 = 0xE100000000000000;
      uint64_t v24 = *v5;
      v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      v12._countAndFlagsBits = 8236;
      v12._object = (void *)0xE200000000000000;
      String.append(_:)(v12);
      type metadata accessor for UUID();
      sub_1008A0478(&qword_101677460, (void (*)(uint64_t))&type metadata accessor for UUID);
      v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v13);
      swift_bridgeObjectRelease();
      v14._countAndFlagsBits = 41;
      v14._object = (void *)0xE100000000000000;
      String.append(_:)(v14);
      uint64_t v15 = v25;
      unint64_t v16 = v26;
      sub_1008A0524((uint64_t)v5);
      uint64_t v7 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB504(0, *((void *)v7 + 2) + 1, 1);
        uint64_t v7 = v27;
      }
      unint64_t v18 = *((void *)v7 + 2);
      unint64_t v17 = *((void *)v7 + 3);
      if (v18 >= v17 >> 1)
      {
        sub_1006BB504(v17 > 1, v18 + 1, 1);
        uint64_t v7 = v27;
      }
      *((void *)v7 + 2) = v18 + 1;
      uint64_t v19 = &v7[2 * v18];
      *((void *)v19 + 4) = v15;
      *((void *)v19 + 5) = v16;
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = (uint64_t)v7;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
  uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_10089E3FC()
{
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 8236;
  v1._object = (void *)0xE200000000000000;
  String.append(_:)(v1);
  type metadata accessor for CRLDisjointPosition.Element();
  type metadata accessor for UUID();
  sub_1008A0478(&qword_101677460, (void (*)(uint64_t))&type metadata accessor for UUID);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 40;
}

uint64_t sub_10089E500(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016853A0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_1008A03C0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for CRLDisjointPosition.Element();
    v9[14] = 1;
    type metadata accessor for UUID();
    sub_1008A0478(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_10089E6B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v28 = type metadata accessor for UUID();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC(&qword_101685390);
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLDisjointPosition.Element();
  __chkstk_darwin(v10, v11);
  Swift::String v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10050F848(a1, a1[3]);
  sub_1008A03C0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    uint64_t v24 = v10;
    uint64_t v14 = v27;
    uint64_t v15 = v28;
    unint64_t v16 = v6;
    char v31 = 0;
    uint64_t v17 = v29;
    uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v23 = v13;
    *Swift::String v13 = v18;
    char v30 = 1;
    sub_1008A0478(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v17);
    uint64_t v19 = v25;
    uint64_t v20 = (uint64_t)v23;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)v23 + *(int *)(v24 + 20), v16, v15);
    sub_1008A0414(v20, v19);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

uint64_t sub_10089E9B0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016852C8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10089F4C0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[1] = a2;
  sub_1005057FC(&qword_1016852B0);
  sub_10089FC30(&qword_1016852D0, &qword_1016852D8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_10089EB38()
{
  if (*v0) {
    return 0x797469746E656469;
  }
  else {
    return 0x7865646E69;
  }
}

uint64_t sub_10089EB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10089F948(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10089EB98(uint64_t a1)
{
  unint64_t v2 = sub_1008A03C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10089EBD4(uint64_t a1)
{
  unint64_t v2 = sub_1008A03C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10089EC10(void *a1, void *a2)
{
  if (*a1 == *a2) {
    return static UUID.< infix(_:_:)();
  }
  else {
    return *a1 < *a2;
  }
}

BOOL sub_10089EC38(void *a1, void *a2)
{
  if (*a2 == *a1) {
    char v2 = static UUID.< infix(_:_:)();
  }
  else {
    char v2 = *a2 < *a1;
  }
  return (v2 & 1) == 0;
}

BOOL sub_10089EC80(void *a1, void *a2)
{
  if (*a1 == *a2) {
    char v2 = static UUID.< infix(_:_:)();
  }
  else {
    char v2 = *a1 < *a2;
  }
  return (v2 & 1) == 0;
}

uint64_t sub_10089ECC4(void *a1, void *a2)
{
  if (*a2 == *a1) {
    return static UUID.< infix(_:_:)();
  }
  else {
    return *a2 < *a1;
  }
}

uint64_t sub_10089ECF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10089E6B8(a1, a2);
}

uint64_t sub_10089ED08(void *a1)
{
  return sub_10089E500(a1);
}

uint64_t sub_10089ED24(uint64_t a1, uint64_t a2)
{
  __chkstk_darwin(a1, a2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v10 = *v9;
  uint64_t v12 = *v11;
  sub_1008A04C0((uint64_t)v9, (uint64_t)&v15 - v7);
  sub_1008A04C0(a2, (uint64_t)v4);
  if (v10 == v12) {
    char v13 = static UUID.== infix(_:_:)();
  }
  else {
    char v13 = 0;
  }
  sub_1008A0524((uint64_t)v4);
  sub_1008A0524((uint64_t)v8);
  return v13 & 1;
}

uint64_t sub_10089EE10(uint64_t *a1, uint64_t *a2)
{
  return sub_10089F600(*a1, *a2);
}

BOOL sub_10089EE1C(uint64_t *a1, uint64_t *a2)
{
  return (sub_10089F600(*a2, *a1) & 1) == 0;
}

BOOL sub_10089EE48(uint64_t *a1, uint64_t *a2)
{
  return (sub_10089F600(*a1, *a2) & 1) == 0;
}

uint64_t sub_10089EE70(uint64_t *a1, uint64_t *a2)
{
  return sub_10089F600(*a2, *a1);
}

uint64_t sub_10089EE80()
{
  return sub_10089E128(*v0);
}

void *sub_10089EE88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10089FA34(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10089EEB4(void *a1)
{
  return sub_10089E9B0(a1, *v1);
}

uint64_t sub_10089EED0(uint64_t *a1, uint64_t *a2)
{
  return sub_1005BC19C(*a1, *a2);
}

void *sub_10089EEDC@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_10089EEF0()
{
  return 0x73746E656D656C65;
}

uint64_t sub_10089EF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73746E656D656C65 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10089EFA0()
{
  return 0;
}

uint64_t sub_10089EFAC@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

void sub_10089EFBC(void *a1@<X8>)
{
  *a1 = &off_101503058;
}

uint64_t sub_10089EFCC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10089F468();
  unint64_t v5 = sub_10089F4C0();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_10089F024(uint64_t a1)
{
  unint64_t v2 = sub_10089F4C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10089F060(uint64_t a1)
{
  unint64_t v2 = sub_10089F4C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10089F09C@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10089F0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10089F2B0();
  unint64_t v7 = sub_10089FCC4();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_10089F118()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_10089F168()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_10089F1B0(uint64_t a1)
{
  unint64_t v2 = sub_10089FD18();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_10089F200()
{
  unint64_t result = qword_101685240;
  if (!qword_101685240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685240);
  }
  return result;
}

unint64_t sub_10089F258()
{
  unint64_t result = qword_101685248;
  if (!qword_101685248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685248);
  }
  return result;
}

unint64_t sub_10089F2B0()
{
  unint64_t result = qword_101685250;
  if (!qword_101685250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685250);
  }
  return result;
}

unint64_t sub_10089F308()
{
  unint64_t result = qword_101685258;
  if (!qword_101685258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685258);
  }
  return result;
}

unint64_t sub_10089F360()
{
  unint64_t result = qword_101685260;
  if (!qword_101685260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685260);
  }
  return result;
}

unint64_t sub_10089F3B8()
{
  unint64_t result = qword_101685268;
  if (!qword_101685268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685268);
  }
  return result;
}

unint64_t sub_10089F410()
{
  unint64_t result = qword_101685270;
  if (!qword_101685270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685270);
  }
  return result;
}

unint64_t sub_10089F468()
{
  unint64_t result = qword_101685278;
  if (!qword_101685278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685278);
  }
  return result;
}

unint64_t sub_10089F4C0()
{
  unint64_t result = qword_101685280;
  if (!qword_101685280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685280);
  }
  return result;
}

unint64_t sub_10089F518()
{
  unint64_t result = qword_101685288;
  if (!qword_101685288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685288);
  }
  return result;
}

unint64_t sub_10089F570()
{
  unint64_t result = qword_101685290;
  if (!qword_101685290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685290);
  }
  return result;
}

uint64_t sub_10089F5C4()
{
  return sub_100523288(&qword_101685298, &qword_1016852A0);
}

uint64_t sub_10089F600(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = type metadata accessor for CRLDisjointPosition.Element();
  uint64_t v4 = *(void *)(v38 - 8);
  __chkstk_darwin(v38, v5);
  unint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v37 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (uint64_t *)((char *)&v37 - v14);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (uint64_t *)((char *)&v37 - v18);
  __chkstk_darwin(v20, v21);
  uint64_t v42 = (uint64_t)&v37 - v22;
  uint64_t v39 = sub_1005057FC(&qword_1016853A8);
  __chkstk_darwin(v39, v23);
  uint64_t v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v26 = *(void *)(a1 + 16);
  uint64_t v41 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v40 = v26;
  if (v26)
  {
    unint64_t v27 = 0;
    unint64_t v28 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v37 = *(void *)(v4 + 72);
    while (1)
    {
      uint64_t result = sub_1008A04C0(v41 + v28, v42);
      unint64_t v30 = *(void *)(a2 + 16);
      if (v27 == v30)
      {
        sub_1008A0524(v42);
        goto LABEL_10;
      }
      if (v27 >= v30)
      {
        __break(1u);
        return result;
      }
      uint64_t v31 = a2;
      uint64_t v32 = (uint64_t)&v25[*(int *)(v39 + 48)];
      sub_1008A0414(v42, (uint64_t)v25);
      sub_1008A04C0(a2 + v28, v32);
      sub_1008A0414((uint64_t)v25, (uint64_t)v19);
      sub_1008A0414(v32, (uint64_t)v15);
      uint64_t v33 = *v19;
      uint64_t v34 = *v15;
      sub_1008A04C0((uint64_t)v19, (uint64_t)v11);
      sub_1008A04C0((uint64_t)v15, (uint64_t)v7);
      if (v33 != v34) {
        break;
      }
      char v35 = static UUID.== infix(_:_:)();
      sub_1008A0524((uint64_t)v7);
      sub_1008A0524((uint64_t)v11);
      if ((v35 & 1) == 0) {
        goto LABEL_12;
      }
      ++v27;
      sub_1008A0524((uint64_t)v15);
      sub_1008A0524((uint64_t)v19);
      v28 += v37;
      a2 = v31;
      if (v40 == v27) {
        goto LABEL_10;
      }
    }
    sub_1008A0524((uint64_t)v7);
    sub_1008A0524((uint64_t)v11);
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*v19 == *v15) {
      char v36 = static UUID.< infix(_:_:)();
    }
    else {
      char v36 = *v19 < *v15;
    }
    sub_1008A0524((uint64_t)v15);
    sub_1008A0524((uint64_t)v19);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v36 = v40 < *(void *)(a2 + 16);
  }
  return v36 & 1;
}

uint64_t sub_10089F948(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469746E656469 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_10089FA34(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016852A8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  unint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10050F848(a1, a1[3]);
  sub_10089F4C0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1005057FC(&qword_1016852B0);
    sub_10089FC30(&qword_1016852B8, &qword_1016852C0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v8 = (void *)v10[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  return v8;
}

uint64_t type metadata accessor for CRLDisjointPosition.Element()
{
  uint64_t result = qword_101685348;
  if (!qword_101685348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10089FC30(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_1016852B0);
    sub_1008A0478(a2, (void (*)(uint64_t))type metadata accessor for CRLDisjointPosition.Element);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10089FCC4()
{
  unint64_t result = qword_1016852E0;
  if (!qword_1016852E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016852E0);
  }
  return result;
}

unint64_t sub_10089FD18()
{
  unint64_t result = qword_1016852E8;
  if (!qword_1016852E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016852E8);
  }
  return result;
}

uint64_t *sub_10089FD6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    unint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_10089FE38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for UUID();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_10089FEA0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_10089FF1C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_10089FF98(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1008A0014(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1008A0090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008A00A4);
}

uint64_t sub_1008A00A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_1008A0114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008A0128);
}

uint64_t sub_1008A0128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_1008A019C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLDisjointPosition.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1008A02D4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLDisjointPosition.CodingKeys()
{
  return &type metadata for CRLDisjointPosition.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLDisjointPosition()
{
  return &type metadata for CRLDisjointPosition;
}

unint64_t sub_1008A0324()
{
  unint64_t result = qword_101685380;
  if (!qword_101685380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685380);
  }
  return result;
}

uint64_t sub_1008A0378()
{
  return sub_1008A0478(&qword_101685388, (void (*)(uint64_t))type metadata accessor for CRLDisjointPosition.Element);
}

unint64_t sub_1008A03C0()
{
  unint64_t result = qword_101685398;
  if (!qword_101685398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685398);
  }
  return result;
}

uint64_t sub_1008A0414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLDisjointPosition.Element();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008A0478(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008A04C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLDisjointPosition.Element();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008A0524(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLDisjointPosition.Element();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLDisjointPosition.Element.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008A064CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLDisjointPosition.Element.CodingKeys()
{
  return &type metadata for CRLDisjointPosition.Element.CodingKeys;
}

unint64_t sub_1008A0688()
{
  unint64_t result = qword_1016853B0;
  if (!qword_1016853B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016853B0);
  }
  return result;
}

unint64_t sub_1008A06E0()
{
  unint64_t result = qword_1016853B8;
  if (!qword_1016853B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016853B8);
  }
  return result;
}

unint64_t sub_1008A0738()
{
  unint64_t result = qword_1016853C0;
  if (!qword_1016853C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016853C0);
  }
  return result;
}

uint64_t sub_1008A0C0C()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1008A0C98;
  return sub_1008A1298();
}

uint64_t sub_1008A0C98()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1008A0DCC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1008A0DCC()
{
  uint64_t v1 = v0[13];
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[11] = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v3 = String.init<A>(describing:)();
  uint64_t v5 = v4;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"importBoardItem()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 55, (uint64_t)"Unable to create CRLFileItem: %@", 32, 2u, inited);
  sub_1005598CC(inited, (uint64_t)"importBoardItem()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 55);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  unsigned int v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1008A10A8(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1008A1150;
  return sub_1008A0C0C();
}

uint64_t sub_1008A1150()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 24);
  uint64_t v3 = *(void **)(*v0 + 16);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  if (v2)
  {
    uint64_t v5 = *(void (***)(void))(v1 + 24);
    v5[2](v5);
    _Block_release(v5);
  }
  uint64_t v6 = *(uint64_t (**)(void))(v4 + 8);
  return v6();
}

uint64_t sub_1008A1298()
{
  *(void *)(v1 + 40) = v0;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v1 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_1008A132C, 0, 0);
}

uint64_t sub_1008A132C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_importBoardItemTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_importBoardItemTask))
  {
    swift_retain();
    isCancelleCGFloat d = swift_task_isCancelled();
    swift_release();
    if (isCancelled)
    {
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_importBoardItem()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 64);
    }
    if (*(void *)(v1 + v2))
    {
      swift_retain();
      sub_1005057FC(&qword_101672BD0);
      Task.cancel()();
      swift_release();
    }
  }
  uint64_t v4 = v0[6];
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  _OWORD v7[3] = 0;
  v7[4] = v6;
  uint64_t v8 = sub_10061F26C(v4, (uint64_t)&unk_1016854A0, (uint64_t)v7);
  sub_100522F00(v4, &qword_101672BB0);
  *(void *)(v1 + v2) = v8;
  swift_release();
  uint64_t v9 = *(void *)(v1 + v2);
  v0[7] = v9;
  if (v9)
  {
    swift_retain();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[8] = v10;
    uint64_t v11 = sub_1005057FC(&qword_101672BD0);
    v0[9] = v11;
    *uint64_t v10 = v0;
    v10[1] = sub_1008A162C;
    return Task.result.getter(v0 + 2, v9, (char *)&type metadata for () + 8, v11, &protocol self-conformance witness table for Error);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1008A162C()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1008A1744, 0, 0);
}

uint64_t sub_1008A1744()
{
  if (*(unsigned char *)(v0 + 24))
  {
    *(void *)(v0 + 32) = *(void *)(v0 + 16);
    swift_willThrowTypedImpl();
  }
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008A17E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  sub_1005057FC(&qword_101672E90);
  v4[6] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return _swift_task_switch(sub_1008A190C, 0, 0);
}

uint64_t sub_1008A190C()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  v0[14] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = [Strong delegate];
    if (v3)
    {
      uint64_t v4 = v3;
      if ([v3 respondsToSelector:"boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:"])[v4 boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:v2]; {
      swift_unknownObjectRelease();
      }
    }
    id v5 = *(id *)&v2[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress];
    [v5 maxValue];
    [v5 setValue:v6 * 0.01];

    id v7 = [v2 URL];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = v0[11];
      uint64_t v10 = v0[7];
      uint64_t v11 = v0[8];
      uint64_t v12 = v0[6];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
      v0[15] = v13;
      v0[16] = (v11 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v13(v12, v9, v10);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) != 1)
      {
        v13(v0[12], v0[6], v0[7]);
        uint64_t v14 = (void *)swift_task_alloc();
        v0[18] = v14;
        *uint64_t v14 = v0;
        v14[1] = sub_1008A1D84;
        uint64_t v15 = v0[12];
        uint64_t v16 = v0[10];
        return sub_1008A26E4(v16, v15);
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[6], 1, 1, v0[7]);
    }
    sub_100522F00(v0[6], &qword_101672E90);
    id v19 = [v2 preinsertionAsset];
    v0[17] = v19;
    if (v19)
    {
      uint64_t v20 = (void *)swift_task_alloc();
      v0[20] = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_1008A201C;
      uint64_t v21 = v0[9];
      return sub_1008A2C60(v21);
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_importBoardItem()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 81, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_importBoardItem()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 81);
    sub_1008A8078();
    swift_allocError();
    *uint64_t v22 = 1;
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
  }
  return v18();
}

uint64_t sub_1008A1D84()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008A2490;
  }
  else {
    uint64_t v2 = sub_1008A1E98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008A1E98()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  (*(void (**)(void, uint64_t))(v0[8] + 8))(v0[12], v4);
  v1(v2, v3, v4);
  uint64_t v5 = v0[19];
  static Task<>.checkCancellation()();
  if (v5)
  {
    double v6 = (void *)v0[14];
    (*(void (**)(void, void))(v0[8] + 8))(v0[13], v0[7]);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v0[22] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1008A22B0;
    uint64_t v10 = v0[13];
    return sub_1008A42DC(v10);
  }
}

uint64_t sub_1008A201C()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008A2560;
  }
  else {
    uint64_t v2 = sub_1008A2130;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008A2130()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 56);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v4);
  uint64_t v5 = *(void *)(v0 + 168);
  static Task<>.checkCancellation()();
  if (v5)
  {
    double v6 = *(void **)(v0 + 112);
    (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 56));

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1008A22B0;
    uint64_t v10 = *(void *)(v0 + 104);
    return sub_1008A42DC(v10);
  }
}

uint64_t sub_1008A22B0()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008A2618;
  }
  else {
    uint64_t v2 = sub_1008A23C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008A23C4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1008A2490()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1008A2560()
{
  uint64_t v1 = *(void **)(v0 + 112);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008A2618()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1008A26E4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for URL();
  v3[5] = v4;
  unsigned char v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_1008A27A8, 0, 0);
}

uint64_t sub_1008A27A8()
{
  if (URL.isFileURL.getter())
  {
    (*(void (**)(void, void, void))(v0[6] + 16))(v0[2], v0[3], v0[5]);
    id v1 = [self defaultManager];
    char v2 = sub_100B9ECC4();

    if (v2)
    {
      uint64_t v3 = (void *)swift_task_alloc();
      v0[8] = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_1008A29DC;
      uint64_t v4 = v0[7];
      uint64_t v5 = v0[3];
      return sub_1008A3710(v4, v5);
    }
    static Task<>.checkCancellation()();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 99, (uint64_t)"Expected a file URL.", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 99);
    sub_1008A8078();
    swift_allocError();
    unsigned char *v7 = 0;
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1008A29DC()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_1008A2BE4;
  }
  else {
    char v2 = sub_1008A2AF0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008A2AF0()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[2];
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  uint64_t v5 = v0[9];
  static Task<>.checkCancellation()();
  if (v5) {
    (*(void (**)(void, void))(v0[6] + 8))(v0[2], v0[5]);
  }
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1008A2BE4()
{
  (*(void (**)(void, void))(v0[6] + 8))(v0[2], v0[5]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008A2C60(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  sub_1005057FC(&qword_101672E90);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10167D2B0);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLAssetData();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008A2DA0, 0, 0);
}

uint64_t sub_1008A2DA0()
{
  id v1 = [*(id *)(v0 + 72) preinsertionAsset];
  *(void *)(v0 + 136) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1008A2F8C;
    return sub_100B4EA78();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 117, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 117);
    sub_1008A8078();
    swift_allocError();
    *uint64_t v4 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1008A2F8C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1008A366C;
  }
  else {
    uint64_t v4 = sub_1008A30A0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1008A30A0()
{
  sub_1005498A4(*(void *)(v0 + 152) + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, v0 + 16);
  sub_1005057FC(&qword_101693DB0);
  type metadata accessor for CRLAssetBackedAssetStorage();
  int v1 = swift_dynamicCast();
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  if (v1)
  {
    sub_10077F98C(*(void *)(v0 + 56) + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, *(void *)(v0 + 96));
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v3 + 56))(*(void *)(v0 + 96), 1, 1, *(void *)(v0 + 112));
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 122, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 122);
  }
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 104);
  sub_10051B3EC(*(void *)(v0 + 96), v7, (uint64_t *)&unk_10167D2B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    uint64_t v8 = *(void **)(v0 + 152);
    uint64_t v9 = *(void **)(v0 + 136);
    sub_100522F00(*(void *)(v0 + 104), (uint64_t *)&unk_10167D2B0);
    sub_1008A8078();
    swift_allocError();
    *uint64_t v10 = 1;
    swift_willThrow();

LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)(v0 + 160);
  sub_1008A7A50(*(void *)(v0 + 104), *(void *)(v0 + 128));
  static Task<>.checkCancellation()();
  if (v11)
  {
    uint64_t v12 = *(void **)(v0 + 152);
    uint64_t v13 = *(void **)(v0 + 136);
    sub_1008A79F0(*(void *)(v0 + 128), (uint64_t (*)(void))type metadata accessor for CRLAssetData);

    goto LABEL_15;
  }
  uint64_t v14 = (char *)[*(id *)(v0 + 72) boardItemFactory];
  uint64_t v15 = (char *)objc_retain(*(id *)(*(void *)&v14[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board]
                                  + OBJC_IVAR____TtC8Freeform8CRLBoard_store));

  uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v16 + 16));
  uint64_t v17 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v18 = *(void **)&v15[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v18)
  {
    id v19 = *(id *)&v15[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v20 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v21 = v15;
    id v22 = sub_100EAFDE4((uint64_t)v21);

    uint64_t v23 = *(void **)&v15[v17];
    *(void *)&v15[v17] = v22;
    id v19 = v22;

    uint64_t v18 = 0;
  }
  uint64_t v24 = *(void *)(v0 + 128);
  uint64_t v25 = *(char **)(v0 + 80);
  unint64_t v26 = *(os_unfair_lock_s **)(v16 + 16);
  id v27 = v18;
  os_unfair_lock_unlock(v26);
  sub_100EA7CA0(v24, 0, 3, 0, 0, v25);

  uint64_t v28 = type metadata accessor for URL();
  uint64_t v29 = *(void *)(v28 - 8);
  unint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v25, 1, v28) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 128, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"urlToImport(from:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLFileItemImporter.swift", 86, 2, 128);
  }
  uint64_t v31 = *(void *)(v0 + 88);
  sub_10051B3EC(*(void *)(v0 + 80), v31, &qword_101672E90);
  unsigned int v32 = v30((char *)v31, 1, v28);
  uint64_t v33 = *(void **)(v0 + 152);
  uint64_t v34 = *(void *)(v0 + 128);
  char v35 = *(void **)(v0 + 136);
  if (v32 == 1)
  {
    sub_100522F00(*(void *)(v0 + 88), &qword_101672E90);
    sub_1008A8078();
    swift_allocError();
    *char v36 = 1;
    swift_willThrow();

    sub_1008A79F0(v34, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_15;
  }
  uint64_t v39 = *(void *)(v0 + 88);
  uint64_t v40 = *(void *)(v0 + 64);
  sub_1008A79F0(v34, (uint64_t (*)(void))type metadata accessor for CRLAssetData);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v40, v39, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
LABEL_16:
  return v37();
}

uint64_t sub_1008A366C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008A3710(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for URL();
  unsigned char v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_1008A37D4, 0, 0);
}

uint64_t sub_1008A37D4()
{
  id v1 = [self defaultManager];
  char v2 = sub_100B9ECC4();

  if (v2)
  {
    uint64_t v4 = v0[4];
    uint64_t v3 = v0[5];
    id v5 = [objc_allocWithZone((Class)NSFileCoordinator) init];
    uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator;
    v0[9] = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator;
    uint64_t v7 = *(void **)(v3 + v6);
    *(void *)(v3 + v6) = v5;

    v0[2] = 0;
    uint64_t v8 = swift_allocObject();
    v0[10] = v8;
    swift_unknownObjectWeakInit();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[11] = v9;
    v9[2] = v8;
    _OWORD v9[3] = v4;
    v9[4] = v0 + 2;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[12] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1008A39DC;
    uint64_t v11 = v0[8];
    uint64_t v12 = v0[6];
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v11, 0, 0, 0xD000000000000023, 0x800000010125C260, sub_1008A8158, v9, v12);
  }
  else
  {
    sub_1008A80CC();
    swift_allocError();
    *uint64_t v13 = 0;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_1008A39DC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_1008A3BAC;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    char v2 = sub_1008A3B00;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008A3B00()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = *(void **)(v5 + v1);
  *(void *)(v5 + v1) = 0;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v6, v2, v3);
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1008A3BAC()
{
  swift_release();
  swift_task_dealloc();

  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008A3C28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1005057FC(&qword_101685490);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6, v9);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = (id)Strong;
    uint64_t v12 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator);
    if (v12)
    {
      id v13 = v12;
      URL._bridgeToObjectiveC()(v14);
      uint64_t v16 = v15;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
      unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v11;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_1008A8234;
      *(void *)(v19 + 24) = v18;
      aBlock[4] = sub_1008A82BC;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_1006F3260;
      aBlock[3] = &unk_101518838;
      id v20 = _Block_copy(aBlock);
      id v11 = v11;
      swift_retain();
      swift_release();
      aBlock[0] = *a4;
      [v13 coordinateReadingItemAtURL:v16 options:8 error:aBlock byAccessor:v20];
      _Block_release(v20);

      uint64_t v21 = (void *)aBlock[0];
      id v22 = (void *)*a4;
      *a4 = aBlock[0];
      id v23 = v21;

      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      uint64_t result = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return result;
      }
      __break(1u);
    }
  }
  sub_1008A80CC();
  uint64_t v26 = swift_allocError();
  *id v27 = 1;
  aBlock[0] = v26;
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_1008A3F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  char v36 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v36 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v36 - v15;
  id v17 = [self defaultManager];
  id v18 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  id v39 = 0;
  id v19 = [v18 initWithError:&v39];
  uint64_t v37 = a1;
  if (v19)
  {
    id v20 = v39;
    [v19 setAssociatedLifetimeObject:a2];
    URL.lastPathComponent.getter();
    id v21 = [v19 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    URL._bridgeToObjectiveC()(v22);
    uint64_t v24 = v23;
    URL._bridgeToObjectiveC()(v25);
    id v27 = v26;
    id v39 = 0;
    uint64_t v28 = v17;
    LOBYTE(v21) = [v17 copyItemAtURL:v24 toURL:v26 error:&v39];

    if (v21)
    {
      id v29 = v39;

      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v16, v5);
      goto LABEL_9;
    }
    id v32 = v39;
    uint64_t v31 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  else
  {
    uint64_t v28 = v17;
    id v30 = v39;
    uint64_t v31 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
  }
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v34 = v36;
  v33(v36, v37, v5);
  if (v19) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v34, v5);
  id v39 = v31;
  sub_1005057FC(&qword_101685490);
  CheckedContinuation.resume(throwing:)();
  v33(v12, (uint64_t)v16, v5);
LABEL_9:
  sub_1005057FC(&qword_101685490);
  CheckedContinuation.resume(returning:)();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v16, v5);
}

uint64_t sub_1008A42DC(uint64_t a1)
{
  v2[183] = v1;
  v2[177] = a1;
  uint64_t v3 = type metadata accessor for CRLAssetData();
  v2[189] = v3;
  v2[195] = *(void *)(v3 - 8);
  v2[201] = swift_task_alloc();
  v2[207] = swift_task_alloc();
  v2[213] = swift_task_alloc();
  v2[219] = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  v2[225] = swift_task_alloc();
  v2[231] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v2[237] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[243] = v5;
  v2[249] = *(void *)(v5 + 64);
  v2[255] = swift_task_alloc();
  v2[261] = swift_task_alloc();
  return _swift_task_switch(sub_1008A4474, 0, 0);
}

uint64_t sub_1008A4474()
{
  uint64_t v1 = v0[261];
  uint64_t v2 = v0[243];
  uint64_t v3 = v0[237];
  uint64_t v4 = (void *)v0[183];
  uint64_t v5 = v0[177];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[267] = v6;
  v0[268] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v3);
  uint64_t v7 = (char *)[v4 preinsertionAsset];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename + 8];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v9 = 0;
  }
  v0[270] = v9;
  v0[269] = v10;
  v0[271] = type metadata accessor for MainActor();
  v0[272] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1008A4598, v12, v11);
}

uint64_t sub_1008A4598()
{
  uint64_t v1 = v0[270];
  uint64_t v2 = v0[269];
  uint64_t v3 = (char *)v0[261];
  swift_release();
  v0[273] = sub_100E0D48C(v3, v2, v1);
  v0[274] = 0;
  return _swift_task_switch(sub_1008A4644, 0, 0);
}

uint64_t sub_1008A4644()
{
  uint64_t v1 = *(void **)(v0 + 2184);
  uint64_t v2 = (char *)[*(id *)(v0 + 1464) boardItemFactory];
  id v3 = *(id *)&v2[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];

  type metadata accessor for CRLBoardItemImporterHelper();
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 2200) = v4;
  *(void *)(v4 + 16) = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 2208) = v5;
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v1;
  swift_retain();
  id v6 = v1;
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 2216) = v7;
  void *v7 = v0;
  v7[1] = sub_1008A47C4;
  return sub_100E0C410(250.0, 150.0, 150.0);
}

uint64_t sub_1008A47C4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  *(unsigned char *)(v4 + 1360) = a3;
  *(void *)(v4 + 1352) = a2;
  *(void *)(v4 + 1344) = a1;
  *(void *)(v4 + 1336) = v3;
  *(unsigned char *)(v4 + 2400) = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_1008A48D4, 0, 0);
}

uint64_t sub_1008A48D4()
{
  if (*(unsigned char *)(v0 + 2400))
  {
    *(void *)(v0 + 2224) = static MainActor.shared.getter();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 2232) = v5;
    *(void *)(v0 + 2240) = v4;
    return _swift_task_switch(sub_1008A4C5C, v5, v4);
  }
  else
  {
    id v1 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithSize:*(double *)(v0 + 1344) *(double *)(v0 + 1352)];
    uint64_t v2 = *(void *)(v0 + 2192);
    *(void *)(v0 + 2304) = v1;
    static Task<>.checkCancellation()();
    *(void *)(v0 + 2312) = v2;
    if (v2)
    {

      uint64_t v3 = *(void *)(v0 + 1848);
      return _swift_asyncLet_finish(v0 + 16, v3, sub_1008A5C74, v0 + 1296);
    }
    else
    {
      uint64_t v6 = *(void *)(v0 + 2200);
      uint64_t v7 = *(void *)(v0 + 2040);
      uint64_t v8 = *(void *)(v0 + 1992);
      uint64_t v9 = *(void *)(v0 + 1944);
      uint64_t v10 = *(void *)(v0 + 1896);
      uint64_t v11 = *(void **)(v0 + 1464);
      (*(void (**)(uint64_t, void, uint64_t))(v0 + 2136))(v7, *(void *)(v0 + 1416), v10);
      unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      unint64_t v13 = (v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v14 = swift_allocObject();
      *(void *)(v0 + 2320) = v14;
      *(void *)(v14 + 16) = v6;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v14 + v12, v7, v10);
      *(void *)(v14 + v13) = v11;
      swift_retain();
      uint64_t v15 = v11;
      swift_retain();
      swift_asyncLet_begin();
      uint64_t v16 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
      *(void *)(v0 + 2328) = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
      [*(id *)&v15[v16] maxValue];
      *(double *)(v0 + 2336) = v17;
      [*(id *)&v15[v16] setValue:v17 * 0.2];
      uint64_t v18 = *(void *)(v0 + 1848);
      return _swift_asyncLet_get_throwing(v0 + 16, v18, sub_1008A529C, v0 + 1424);
    }
  }
}

uint64_t sub_1008A4B98()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008A4C5C()
{
  id v1 = objc_allocWithZone((Class)QLThumbnailGenerationRequest);
  URL._bridgeToObjectiveC()(v2);
  uint64_t v4 = v3;
  id v5 = [v1 initWithFileAtURL:v3 size:4 scale:250.0 scale:250.0 representationTypes:1.0];
  v0[281] = v5;

  [v5 setIconMode:0];
  uint64_t v6 = swift_task_alloc();
  v0[282] = v6;
  *(void *)(v6 + 16) = v5;
  uint64_t v7 = swift_task_alloc();
  v0[283] = v7;
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = static MainActor.shared.getter();
  v0[284] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[285] = v9;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10169DC30);
  *uint64_t v9 = v0;
  v9[1] = sub_1008A4E0C;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v0 + 171, &unk_101685468, v6, sub_1007FDBF4, v7, v8, &protocol witness table for MainActor, v10);
}

uint64_t sub_1008A4E0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2288) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 2240);
  uint64_t v4 = *(void *)(v2 + 2232);
  return _swift_task_switch(sub_1008A4F90, v4, v3);
}

uint64_t sub_1008A4F90()
{
  id v1 = (void *)v0[281];
  swift_release();

  v0[287] = v0[171];
  return _swift_task_switch(sub_1008A5008, 0, 0);
}

uint64_t sub_1008A5008()
{
  id v1 = *(void **)(v0 + 2296);
  if (v1)
  {
    [*(id *)(v0 + 2296) size];
    id v4 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithSize:v2, v3];
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithSize:250.0, 150.0];
  }
  uint64_t v5 = *(void *)(v0 + 2288);
  *(void *)(v0 + 2304) = v4;
  static Task<>.checkCancellation()();
  *(void *)(v0 + 2312) = v5;
  if (v5)
  {

    uint64_t v6 = *(void *)(v0 + 1848);
    return _swift_asyncLet_finish(v0 + 16, v6, sub_1008A5C74, v0 + 1296);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 2200);
    uint64_t v8 = *(void *)(v0 + 2040);
    uint64_t v9 = *(void *)(v0 + 1992);
    uint64_t v10 = *(void *)(v0 + 1944);
    uint64_t v11 = *(void *)(v0 + 1896);
    uint64_t v12 = *(void **)(v0 + 1464);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 2136))(v8, *(void *)(v0 + 1416), v11);
    unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v14 = (v9 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v15 = swift_allocObject();
    *(void *)(v0 + 2320) = v15;
    *(void *)(v15 + 16) = v7;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v15 + v13, v8, v11);
    *(void *)(v15 + v14) = v12;
    swift_retain();
    uint64_t v16 = v12;
    swift_retain();
    swift_asyncLet_begin();
    uint64_t v17 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
    *(void *)(v0 + 2328) = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
    [*(id *)&v16[v17] maxValue];
    *(double *)(v0 + 2336) = v18;
    [*(id *)&v16[v17] setValue:v18 * 0.2];
    uint64_t v19 = *(void *)(v0 + 1848);
    return _swift_asyncLet_get_throwing(v0 + 16, v19, sub_1008A529C, v0 + 1424);
  }
}

uint64_t sub_1008A529C()
{
  *(void *)(v1 + 2344) = v0;
  if (v0) {
    double v2 = sub_1008A5D74;
  }
  else {
    double v2 = sub_1008A52D0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008A52D0()
{
  uint64_t v1 = *(void *)(v0 + 1800);
  uint64_t v2 = *(void *)(v0 + 1560);
  uint64_t v3 = *(void *)(v0 + 1512);
  sub_1008A8010(*(void *)(v0 + 1848), v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    sub_100522F00(*(void *)(v0 + 1800), (uint64_t *)&unk_10167D2B0);
LABEL_7:
    uint64_t v7 = v0 + 1568;
    sub_1008A8078();
    *(void *)(v0 + 2392) = swift_allocError();
    *uint64_t v10 = 1;
    swift_willThrow();
    uint64_t v9 = sub_1008A5AC4;
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(v0 + 2304);
  sub_1008A7A50(*(void *)(v0 + 1800), *(void *)(v0 + 1656));
  if (!v4)
  {
    sub_1008A79F0(*(void *)(v0 + 1656), (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(v0 + 2344);
  id v6 = *(id *)(v0 + 2304);
  static Task<>.checkCancellation()();
  *(void *)(v0 + 2352) = v5;
  if (v5)
  {
    uint64_t v7 = v0 + 1664;
    uint64_t v8 = *(void **)(v0 + 2304);
    sub_1008A79F0(*(void *)(v0 + 1656), (uint64_t (*)(void))type metadata accessor for CRLAssetData);

    uint64_t v9 = sub_1008A5F44;
LABEL_8:
    uint64_t v11 = *(void *)(v0 + 1704);
    return _swift_asyncLet_finish(v0 + 656, v11, v9, v7);
  }
  *(void *)(v0 + 2360) = [*(id *)(v0 + 1464) boardItemFactory];
  uint64_t v12 = *(void *)(v0 + 1704);
  return _swift_asyncLet_get_throwing(v0 + 656, v12, sub_1008A54B0, v0 + 1376);
}

uint64_t sub_1008A54B0()
{
  *(void *)(v1 + 2368) = v0;
  if (v0)
  {

    uint64_t v2 = sub_1008A60F4;
  }
  else
  {
    uint64_t v2 = sub_1008A5530;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008A5530()
{
  uint64_t v1 = *(void *)(v0 + 2368);
  uint64_t v2 = *(void **)(v0 + 2360);
  uint64_t v3 = *(void **)(v0 + 2304);
  uint64_t v4 = *(void *)(v0 + 1656);
  uint64_t v5 = *(void *)(v0 + 1608);
  uint64_t v6 = *(void *)(v0 + 1464);
  sub_10077F98C(*(void *)(v0 + 1704), v5);
  id v7 = sub_100F3E11C(v5, v4, v3);

  sub_1008A79F0(v5, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v8 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem;
  uint64_t v9 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem);
  *(void *)(v6 + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem) = v7;

  static Task<>.checkCancellation()();
  *(void *)(v0 + 2376) = v1;
  if (v1)
  {
    uint64_t v10 = v0 + 1904;
    uint64_t v11 = *(void **)(v0 + 2304);
    sub_1008A79F0(*(void *)(v0 + 1656), (uint64_t (*)(void))type metadata accessor for CRLAssetData);

    uint64_t v12 = sub_1008A6340;
LABEL_3:
    unint64_t v13 = v12;
    uint64_t v14 = *(void *)(v0 + 1704);
    uint64_t v15 = v0 + 656;
    uint64_t v16 = v10;
    goto LABEL_6;
  }
  [*(id *)(*(void *)(v0 + 1464) + *(void *)(v0 + 2328)) setValue:*(double *)(v0 + 2336) * 0.9];
  if (!*(void *)(v6 + v8))
  {
    uint64_t v10 = v0 + 2000;
    uint64_t v19 = *(void **)(v0 + 2304);
    uint64_t v20 = *(void *)(v0 + 1656);
    sub_1008A8078();
    *(void *)(v0 + 2384) = swift_allocError();
    *uint64_t v21 = 1;
    swift_willThrow();

    sub_1008A79F0(v20, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v12 = sub_1008A5914;
    goto LABEL_3;
  }
  uint64_t v17 = *(void **)(v0 + 2304);
  uint64_t v18 = *(void *)(v0 + 1656);
  [*(id *)(*(void *)(v0 + 1464) + *(void *)(v0 + 2328)) setValue:*(double *)(v0 + 2336)];
  sub_1008A6E90();

  sub_1008A79F0(v18, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  unint64_t v13 = sub_1008A5754;
  uint64_t v14 = *(void *)(v0 + 1704);
  uint64_t v15 = v0 + 656;
  uint64_t v16 = v0 + 2096;
LABEL_6:
  return _swift_asyncLet_finish(v15, v14, v13, v16);
}

uint64_t sub_1008A5754()
{
  return _swift_task_switch(sub_1008A5770, 0, 0);
}

uint64_t sub_1008A5770()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1848);
  return _swift_asyncLet_finish(v0 + 16, v1, sub_1008A57F8, v0 + 1760);
}

uint64_t sub_1008A57F8()
{
  return _swift_task_switch(sub_1008A5814, 0, 0);
}

uint64_t sub_1008A5814()
{
  uint64_t v1 = *(void **)(v0 + 2184);
  swift_release();

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008A5914()
{
  return _swift_task_switch(sub_1008A5930, 0, 0);
}

uint64_t sub_1008A5930()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1848);
  return _swift_asyncLet_finish(v0 + 16, v1, sub_1008A59B8, v0 + 2048);
}

uint64_t sub_1008A59B8()
{
  return _swift_task_switch(sub_1008A59D4, 0, 0);
}

uint64_t sub_1008A59D4()
{
  uint64_t v1 = *(void **)(v0 + 2184);
  swift_release();

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008A5AC4()
{
  return _swift_task_switch(sub_1008A5AE0, 0, 0);
}

uint64_t sub_1008A5AE0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1848);
  return _swift_asyncLet_finish(v0 + 16, v1, sub_1008A5B68, v0 + 1616);
}

uint64_t sub_1008A5B68()
{
  return _swift_task_switch(sub_1008A5B84, 0, 0);
}

uint64_t sub_1008A5B84()
{
  uint64_t v1 = *(void **)(v0 + 2184);
  swift_release();

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008A5C74()
{
  return _swift_task_switch(sub_1008A5C90, 0, 0);
}

uint64_t sub_1008A5C90()
{
  uint64_t v1 = *(void **)(v0 + 2184);
  swift_release();

  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008A5D74()
{
  return _swift_asyncLet_finish(v0 + 656, *(void *)(v0 + 1704), sub_1008A5D94, v0 + 1472);
}

uint64_t sub_1008A5D94()
{
  return _swift_task_switch(sub_1008A5DB0, 0, 0);
}

uint64_t sub_1008A5DB0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1848);
  return _swift_asyncLet_finish(v0 + 16, v1, sub_1008A5E38, v0 + 1520);
}

uint64_t sub_1008A5E38()
{
  return _swift_task_switch(sub_1008A5E54, 0, 0);
}

uint64_t sub_1008A5E54()
{
  uint64_t v1 = *(void **)(v0 + 2184);
  swift_release();

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008A5F44()
{
  return _swift_task_switch(sub_1008A5F60, 0, 0);
}

uint64_t sub_1008A5F60()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1848);
  return _swift_asyncLet_finish(v0 + 16, v1, sub_1008A5FE8, v0 + 1712);
}

uint64_t sub_1008A5FE8()
{
  return _swift_task_switch(sub_1008A6004, 0, 0);
}

uint64_t sub_1008A6004()
{
  uint64_t v1 = *(void **)(v0 + 2184);
  swift_release();

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008A60F4()
{
  uint64_t v1 = *(void *)(v0 + 1656);

  sub_1008A79F0(v1, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v2 = *(void *)(v0 + 1704);
  return _swift_asyncLet_finish(v0 + 656, v2, sub_1008A6190, v0 + 1808);
}

uint64_t sub_1008A6190()
{
  return _swift_task_switch(sub_1008A61AC, 0, 0);
}

uint64_t sub_1008A61AC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1848);
  return _swift_asyncLet_finish(v0 + 16, v1, sub_1008A6234, v0 + 1856);
}

uint64_t sub_1008A6234()
{
  return _swift_task_switch(sub_1008A6250, 0, 0);
}

uint64_t sub_1008A6250()
{
  uint64_t v1 = *(void **)(v0 + 2184);
  swift_release();

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008A6340()
{
  return _swift_task_switch(sub_1008A635C, 0, 0);
}

uint64_t sub_1008A635C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1848);
  return _swift_asyncLet_finish(v0 + 16, v1, sub_1008A63E4, v0 + 1952);
}

uint64_t sub_1008A63E4()
{
  return _swift_task_switch(sub_1008A6400, 0, 0);
}

uint64_t sub_1008A6400()
{
  uint64_t v1 = *(void **)(v0 + 2184);
  swift_release();

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008A64F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for CRLAssetData();
  v3[5] = v4;
  unsigned char v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_1008A65B4, 0, 0);
}

uint64_t sub_1008A65B4()
{
  static Task<>.checkCancellation()();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008A6698;
  return sub_100E0B158();
}

uint64_t sub_1008A6698(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1008A6AE4;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_1008A67C0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1008A67C0()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = (void *)v0[10];
  v0[11] = v1;
  static Task<>.checkCancellation()();
  if (v2)
  {

    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v0[12] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1008A68B8;
    uint64_t v6 = v0[7];
    return sub_100DC9DEC(v6, (uint64_t)v1);
  }
}

uint64_t sub_1008A68B8()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008A6A78;
  }
  else {
    uint64_t v2 = sub_1008A69CC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008A69CC()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 16);

  sub_1008A7A50(v1, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1008A6A78()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008A6AE4()
{
  id v1 = sub_100D53FA4();
  swift_errorRelease();
  v0[11] = v1;
  static Task<>.checkCancellation()();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1008A68B8;
  uint64_t v3 = v0[7];
  return sub_100DC9DEC(v3, (uint64_t)v1);
}

uint64_t sub_1008A6C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_1008A6C34, 0, 0);
}

uint64_t sub_1008A6C34()
{
  id v1 = [*(id *)(v0 + 40) preinsertionAsset];
  *(void *)(v0 + 48) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1008A6CF0;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 16);
  return sub_100DC96CC(v4, v3, (uint64_t)v1);
}

uint64_t sub_1008A6CF0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1008A6E2C, 0, 0);
  }
  else
  {

    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1008A6E2C()
{
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1008A6E90()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v10 - 8, v11);
  unint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v69 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v69 - v20;
  uint64_t v22 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v22 - 8, v23);
  id v81 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v69 - v27;
  id v29 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem);
  if (v29)
  {
    type metadata accessor for CRLFileItem();
    uint64_t v30 = swift_dynamicCastClass();
    if (v30)
    {
      uint64_t v31 = v30;
      unint64_t v79 = v17;
      uint64_t v80 = v2;
      uint64_t v73 = v5;
      int64_t v78 = (unsigned int (*)(void, void, void))v1;
      uint64_t v76 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      swift_beginAccess();
      swift_retain();
      id v77 = v29;
      uint64_t v74 = sub_1005057FC(&qword_101685450);
      CRRegister.wrappedValue.getter();
      swift_endAccess();
      swift_release();
      sub_10077F98C((uint64_t)v9, (uint64_t)v21);
      sub_1008A79F0((uint64_t)v9, type metadata accessor for CRLFileItemAtomicDataStruct);
      uint64_t v32 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store;
      uint64_t v33 = *(char **)(v31 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
      uint64_t v34 = *(void *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v34 + 16));
      uint64_t v35 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      char v36 = *(void **)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      uint64_t v75 = v32;
      if (v36)
      {
        id v37 = v36;
      }
      else
      {
        id v38 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
        id v39 = v33;
        id v40 = sub_100EAFDE4((uint64_t)v39);

        uint64_t v41 = *(void **)&v33[v35];
        *(void *)&v33[v35] = v40;
        id v37 = v40;

        char v36 = 0;
      }
      uint64_t v42 = v78;
      uint64_t v43 = *(os_unfair_lock_s **)(v34 + 16);
      id v44 = v36;
      os_unfair_lock_unlock(v43);
      sub_100EA7CA0((uint64_t)v21, 0, 3, 0, 0, v28);

      sub_1008A79F0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      uint64_t v45 = v80;
      uint64_t v46 = *(unsigned int (**)(void, void, void))(v80 + 48);
      if (v46(v28, 1, v42) == 1)
      {

        sub_100522F00((uint64_t)v28, &qword_101672E90);
      }
      else
      {
        int64_t v78 = v46;
        uint64_t v71 = URL.pathExtension.getter();
        uint64_t v72 = v47;
        uint64_t v70 = *(void (**)(void, void))(v45 + 8);
        v70(v28, v42);
        swift_beginAccess();
        swift_retain();
        CRRegister.wrappedValue.getter();
        swift_endAccess();
        swift_release();
        sub_10077F98C((uint64_t)v9, (uint64_t)v13);
        sub_1008A79F0((uint64_t)v9, type metadata accessor for CRLFileItemAtomicDataStruct);
        sub_1008A7A50((uint64_t)v13, (uint64_t)v79);
        long long v48 = *(char **)(v31 + v75);
        uint64_t v49 = *(void *)&v48[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
        uint64_t v50 = *(os_unfair_lock_s **)(v49 + 16);
        int64_t v51 = v48;
        os_unfair_lock_lock(v50);
        uint64_t v52 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
        id v53 = *(void **)&v51[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
        if (v53)
        {
          id v54 = *(id *)&v51[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
        }
        else
        {
          id v55 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
          uint64_t v56 = v51;
          id v57 = sub_100EAFDE4((uint64_t)v56);

          uint64_t v58 = *(void **)&v51[v52];
          *(void *)&v51[v52] = v57;
          id v54 = v57;

          id v53 = 0;
        }
        uint64_t v59 = *(os_unfair_lock_s **)(v49 + 16);
        id v60 = v53;
        os_unfair_lock_unlock(v59);
        int64_t v61 = v81;
        uint64_t v62 = (uint64_t)v79;
        sub_100EA7CA0((uint64_t)v79, 0, 3, 0, 0, v81);

        if (v78(v61, 1, v42) == 1)
        {
          sub_100522F00((uint64_t)v61, &qword_101672E90);

          sub_1008A79F0(v62, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v63 = v73;
          (*(void (**)(char *, char *, unsigned int (*)(void, void, void)))(v80 + 32))(v73, v61, v42);
          URL._bridgeToObjectiveC()(v64);
          id v66 = v65;
          uint64_t v67 = v62;
          id v68 = [v65 crl_fileSize];

          v70(v63, v42);
          sub_100AE1D28(v71, v72, (uint64_t)v68);

          swift_bridgeObjectRelease();
          sub_1008A79F0(v67, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        }
      }
    }
  }
}

id sub_1008A75E8(uint64_t a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
  id v6 = objc_allocWithZone((Class)CRLBasicProgress);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 initWithMaxValue:100.0];
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_maximumLongEdge] = 0x406F400000000000;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_defaultShortEdge] = 0x4062C00000000000;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_importBoardItemTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem] = 0;
  v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__error] = 3;

  URL._bridgeToObjectiveC()(v8);
  uint64_t v10 = v9;
  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for CRLFileItemImporter();
  [super initWithURL:v10 boardItemFactory:a2];

  uint64_t v12 = type metadata accessor for URL();
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  id v14 = v11;
  v13(a1, v12);
  if (v14) {

  }
  return v14;
}

id sub_1008A77E0(void *a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__progress;
  id v6 = objc_allocWithZone((Class)CRLBasicProgress);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 initWithMaxValue:100.0];
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_maximumLongEdge] = 0x406F400000000000;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_defaultShortEdge] = 0x4062C00000000000;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_importBoardItemTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter_fileCoordinator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__boardItem] = 0;
  v7[OBJC_IVAR____TtC8Freeform19CRLFileItemImporter__error] = 3;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for CRLFileItemImporter();
  id v8 = [super initWithData:a1 boardItemFactory:a2];

  return v8;
}

id sub_1008A792C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileItemImporter();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLFileItemImporter()
{
  return self;
}

uint64_t sub_1008A79F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1008A7A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLAssetData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008A7AB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v7 - 8, v8);
  objc_super v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self defaultManager];
  LOBYTE(a1) = sub_100B9E810(a1);

  if (a1)
  {
    swift_bridgeObjectRetain();
    UTType.init(_:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
    {
      sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101676160);
      char v12 = 1;
    }
    else
    {
      static UTType.url.getter();
      char v13 = UTType.conforms(to:)();
      id v14 = *(void (**)(char *, uint64_t))(v3 + 8);
      v14(v6, v2);
      v14(v10, v2);
      char v12 = v13 ^ 1;
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1008A7CA0()
{
  return sub_1008A83E8((void (*)(void))&_swift_release);
}

uint64_t sub_1008A7CB8(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  id v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *id v6 = v2;
  v6[1] = sub_100528488;
  return sub_1008A64F0(a1, v5, v4);
}

uint64_t sub_1008A7D64(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528D08;
  return sub_100E0CF34(a1, v4);
}

uint64_t sub_1008A7E04()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1008A7EEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[4] = v7;
  v9[5] = v8;
  v9[2] = a1;
  _OWORD v9[3] = v6;
  v9[1] = sub_100528D08;
  return _swift_task_switch(sub_1008A6C34, 0, 0);
}

uint64_t sub_1008A8010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1008A8078()
{
  unint64_t result = qword_101685480;
  if (!qword_101685480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685480);
  }
  return result;
}

unint64_t sub_1008A80CC()
{
  unint64_t result = qword_101685488;
  if (!qword_101685488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685488);
  }
  return result;
}

uint64_t sub_1008A8120()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008A8158(uint64_t a1)
{
  return sub_1008A3C28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1008A8164()
{
  uint64_t v1 = sub_1005057FC(&qword_101685490);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1008A8234(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1005057FC(&qword_101685490) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1008A3F44(a1, v4, v5);
}

uint64_t sub_1008A82AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008A82BC(uint64_t a1)
{
  return sub_1006F3238(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1008A82C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1008A82D4()
{
  return swift_release();
}

uint64_t sub_1008A82DC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1008A831C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1008A17E8(a1, v4, v5, v6);
}

uint64_t sub_1008A83D0()
{
  return sub_1008A83E8((void (*)(void))&__Block_release);
}

uint64_t sub_1008A83E8(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1008A8430()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100528488;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1016854A8 + dword_1016854A8);
  return v5(v2, v3);
}

unsigned char *storeEnumTagSinglePayload for CRLFileItemImporter.BundleError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008A85B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFileItemImporter.BundleError()
{
  return &type metadata for CRLFileItemImporter.BundleError;
}

unint64_t sub_1008A85EC()
{
  unint64_t result = qword_1016854C0;
  if (!qword_1016854C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016854C0);
  }
  return result;
}

void **sub_1008A8640(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    objc_super v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    char v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    char v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = a3[7];
    *(void **)((char *)v7 + a3[6]) = *(void **)((char *)a2 + a3[6]);
    *((unsigned char *)v7 + v14) = *((unsigned char *)a2 + v14);
  }
  return v7;
}

uint64_t sub_1008A8744(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  unsigned int v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void **sub_1008A87BC(void **a1, void **a2, int *a3)
{
  unsigned int v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = a3[7];
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  return a1;
}

void **sub_1008A8874(void **a1, void **a2, int *a3)
{
  unsigned int v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_1008A8924(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

void **sub_1008A89C4(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

uint64_t sub_1008A8A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008A8A80);
}

uint64_t sub_1008A8A80(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1008A8B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008A8B44);
}

void *sub_1008A8B44(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CRLRealTimeEnter(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101685520);
}

uint64_t sub_1008A8C0C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1008A8CC0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v64 = type metadata accessor for CRLRealTimeEnter(0);
  __chkstk_darwin(v64, v5);
  uint64_t v63 = (uint64_t *)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = type metadata accessor for UUID();
  uint64_t v68 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v7);
  uint64_t v67 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v70 = (char *)&v59 - v11;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v69 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v71 = (uint64_t)&v59 - v17;
  uint64_t v18 = type metadata accessor for CRLProto_Data(0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (uint64_t *)((char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (uint64_t *)((char *)&v59 - v25);
  uint64_t v27 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v27 - 8, v28);
  uint64_t v29 = type metadata accessor for CRLProto_RealTimeEnter(0);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (uint64_t *)((char *)&v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = 0;
  long long v73 = 0u;
  long long v74 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_1008A9DF8(&qword_101685560, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeEnter);
  uint64_t v33 = v72;
  Message.init(serializedData:extensions:partial:options:)();
  if (v33) {
    return sub_100510084(a1, a2);
  }
  uint64_t v60 = v29;
  int64_t v61 = v22;
  uint64_t v72 = a1;
  uint64_t v35 = v71;
  sub_1005CC4F0((uint64_t)v32 + *(int *)(v29 + 24), v71);
  char v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  unsigned int v37 = v36(v35, 1, v18);
  uint64_t v38 = v18;
  unint64_t v62 = a2;
  uint64_t v59 = v36;
  if (v37 == 1)
  {
    *(_OWORD *)uint64_t v26 = xmmword_101180360;
    UnknownStorage.init()();
    sub_1008A9D98(v35);
  }
  else
  {
    sub_1008A9EA0(v35, (uint64_t)v26, type metadata accessor for CRLProto_Data);
  }
  uint64_t v39 = *v26;
  unint64_t v40 = v26[1];
  sub_100510D4C(*v26, v40);
  sub_1008A9E40((uint64_t)v26, type metadata accessor for CRLProto_Data);
  sub_10050BF48(0, &qword_101693260);
  sub_10050BF48(0, (unint64_t *)&unk_10167C540);
  uint64_t v41 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
  sub_100510084(v39, v40);
  uint64_t v42 = v60;
  uint64_t v43 = v69;
  sub_1005CC4F0((uint64_t)v32 + *(int *)(v60 + 28), v69);
  if (v59(v43, 1, v38) == 1)
  {
    id v44 = v61;
    *(_OWORD *)int64_t v61 = xmmword_101180360;
    UnknownStorage.init()();
    sub_1008A9D98(v43);
  }
  else
  {
    id v44 = v61;
    sub_1008A9EA0(v43, (uint64_t)v61, type metadata accessor for CRLProto_Data);
  }
  uint64_t v45 = *v44;
  unint64_t v46 = v44[1];
  sub_100510D4C(*v44, v46);
  sub_1008A9E40((uint64_t)v44, type metadata accessor for CRLProto_Data);
  uint64_t v47 = v70;
  UUID.init(crl_data:)(v45, v46);
  unint64_t v48 = v62;
  int v49 = *((unsigned __int8 *)v32 + *(int *)(v42 + 32));
  int64_t v51 = v67;
  uint64_t v50 = v68;
  uint64_t v52 = v66;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v67, v47, v66);
  if (v41)
  {
    uint64_t v53 = *v32;
    id v54 = v51;
    uint64_t v55 = (uint64_t)v63;
    *uint64_t v63 = v41;
    uint64_t v56 = v64;
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v55 + *(int *)(v64 + 20), v54, v52);
    *(void *)(v55 + *(int *)(v56 + 24)) = v53;
    *(unsigned char *)(v55 + *(int *)(v56 + 28)) = (v49 == 2) | v49 & 1;
    sub_1008A9EA0(v55, v65, type metadata accessor for CRLRealTimeEnter);
    sub_100510084(v72, v48);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v52);
  }
  else
  {
    sub_1005F7CE8();
    swift_allocError();
    *id v57 = 0;
    swift_willThrow();
    uint64_t v58 = *(void (**)(char *, uint64_t))(v50 + 8);
    v58(v51, v52);
    sub_100510084(v72, v48);
    v58(v47, v52);
  }
  return sub_1008A9E40((uint64_t)v32, type metadata accessor for CRLProto_RealTimeEnter);
}

uint64_t sub_1008A93A8()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v60 = (uint64_t)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v59 = (uint64_t)&v50 - v6;
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v58 = (long long *)((char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11, v12);
  id v57 = (long long *)((char *)&v50 - v13);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (long long *)((char *)&v50 - v16);
  uint64_t v18 = (int *)type metadata accessor for CRLProto_RealTimeEnter(0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (uint64_t *)((char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v21 = 0;
  UnknownStorage.init()();
  uint64_t v22 = (uint64_t)v21 + v18[6];
  uint64_t v64 = v8;
  uint64_t v25 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
  uint64_t v23 = v8 + 56;
  uint64_t v24 = v25;
  v25(v22, 1, 1, v7);
  uint64_t v63 = (uint64_t)v21 + v18[7];
  ((void (*)(void))v25)();
  uint64_t v26 = v18[8];
  *((unsigned char *)v21 + v26) = 2;
  long long v62 = xmmword_101180360;
  *uint64_t v17 = xmmword_101180360;
  UnknownStorage.init()();
  sub_1008A9D98(v22);
  sub_1008A9EA0((uint64_t)v17, v22, type metadata accessor for CRLProto_Data);
  v25(v22, 0, 1, v7);
  uint64_t v61 = v0;
  uint64_t v27 = v65;
  uint64_t v28 = sub_1008A9954();
  uint64_t v65 = v27;
  if (v27) {
    goto LABEL_9;
  }
  uint64_t v30 = v28;
  uint64_t v53 = v29;
  int64_t v51 = v21;
  uint64_t v55 = v26;
  uint64_t v56 = v23;
  uint64_t v31 = v59;
  sub_1005CC4F0(v22, v59);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  v64 += 48;
  unsigned int v33 = v32(v31, 1, v7);
  id v54 = v32;
  uint64_t v52 = v18;
  uint64_t v34 = v57;
  if (v33 == 1)
  {
    *id v57 = v62;
    UnknownStorage.init()();
    sub_1008A9D98(v31);
  }
  else
  {
    sub_1008A9EA0(v31, (uint64_t)v57, type metadata accessor for CRLProto_Data);
  }
  uint64_t v35 = v63;
  sub_100510084(*(void *)v34, *((void *)v34 + 1));
  uint64_t v36 = v53;
  *(void *)uint64_t v34 = v30;
  *((void *)v34 + 1) = v36;
  sub_1008A9D98(v22);
  sub_1008A9EA0((uint64_t)v34, v22, type metadata accessor for CRLProto_Data);
  v24(v22, 0, 1, v7);
  *uint64_t v17 = v62;
  UnknownStorage.init()();
  sub_1008A9D98(v35);
  sub_1008A9EA0((uint64_t)v17, v35, type metadata accessor for CRLProto_Data);
  v24(v35, 0, 1, v7);
  uint64_t v37 = type metadata accessor for CRLRealTimeEnter(0);
  uint64_t v38 = v61;
  uint64_t v39 = UUID.crl_data()();
  uint64_t v41 = v40;
  uint64_t v42 = v60;
  sub_1005CC4F0(v35, v60);
  if (v54(v42, 1, v7) == 1)
  {
    uint64_t v43 = v58;
    *uint64_t v58 = v62;
    UnknownStorage.init()();
    sub_1008A9D98(v42);
  }
  else
  {
    uint64_t v43 = v58;
    sub_1008A9EA0(v42, (uint64_t)v58, type metadata accessor for CRLProto_Data);
  }
  uint64_t v44 = v65;
  uint64_t v45 = v51;
  sub_100510084(*(void *)v43, *((void *)v43 + 1));
  *(void *)uint64_t v43 = v39;
  *((void *)v43 + 1) = v41;
  uint64_t v46 = v63;
  sub_1008A9D98(v63);
  sub_1008A9EA0((uint64_t)v43, v46, type metadata accessor for CRLProto_Data);
  v24(v46, 0, 1, v7);
  uint64_t v47 = *(int *)(v37 + 28);
  *uint64_t v45 = *(void *)(v38 + *(int *)(v37 + 24));
  *((unsigned char *)v45 + v55) = *(unsigned char *)(v38 + v47);
  sub_1008A9DF8(&qword_101685560, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeEnter);
  uint64_t v48 = Message.serializedData(partial:)();
  uint64_t v65 = v44;
  uint64_t v21 = v45;
  if (v44)
  {
LABEL_9:
    sub_1008A9E40((uint64_t)v21, type metadata accessor for CRLProto_RealTimeEnter);
  }
  else
  {
    uint64_t v7 = v48;
    sub_1008A9E40((uint64_t)v45, type metadata accessor for CRLProto_RealTimeEnter);
  }
  return v7;
}

void *sub_1008A9954()
{
  id v5 = 0;
  id v1 = [self archivedDataWithRootObject:v0 requiringSecureCoding:1 error:&v5];
  id v2 = v5;
  if (v1)
  {
    uint64_t v3 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v3 = v2;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1008A9A2C()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (long long *)((char *)&v25 - v11);
  uint64_t v13 = type metadata accessor for CRLProto_RealTimeLeave(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  UnknownStorage.init()();
  uint64_t v27 = v13;
  uint64_t v17 = (uint64_t)&v16[*(int *)(v13 + 20)];
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v18(v17, 1, 1, v4);
  long long v25 = xmmword_101180360;
  *uint64_t v12 = xmmword_101180360;
  UnknownStorage.init()();
  sub_1008A9D98(v17);
  sub_1008A9EA0((uint64_t)v12, v17, type metadata accessor for CRLProto_Data);
  uint64_t v26 = v18;
  v18(v17, 0, 1, v4);
  uint64_t v19 = (uint64_t)v3;
  uint64_t v20 = UUID.crl_data()();
  uint64_t v22 = v21;
  sub_1005CC4F0(v17, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4) == 1)
  {
    *(_OWORD *)uint64_t v9 = v25;
    UnknownStorage.init()();
    sub_1008A9D98(v19);
  }
  else
  {
    sub_1008A9EA0(v19, (uint64_t)v9, type metadata accessor for CRLProto_Data);
  }
  sub_100510084(*(void *)v9, *((void *)v9 + 1));
  *(void *)uint64_t v9 = v20;
  *((void *)v9 + 1) = v22;
  sub_1008A9D98(v17);
  sub_1008A9EA0((uint64_t)v9, v17, type metadata accessor for CRLProto_Data);
  v26(v17, 0, 1, v4);
  sub_1008A9DF8(&qword_101673FA8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeLeave);
  uint64_t v23 = Message.serializedData(partial:)();
  sub_1008A9E40((uint64_t)v16, type metadata accessor for CRLProto_RealTimeLeave);
  return v23;
}

uint64_t sub_1008A9D98(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674160);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1008A9DF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008A9E40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1008A9EA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1008A9F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1008A9F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1008A9FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1008AA03C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1008AA0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1008AA104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008AA118);
}

uint64_t sub_1008AA118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1008AA184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008AA198);
}

uint64_t sub_1008AA198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLRealTimeLeave(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016855C0);
}

uint64_t sub_1008AA228()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRLCountedSet()
{
  return sub_100568E70();
}

id sub_1008AA2CC()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert];
  if (v1)
  {
    uint64_t v2 = (void *)swift_allocObject();
    v2[3] = 0;
    v2[4] = 0;
    v2[2] = v0;
    aBlock[4] = sub_1005B764C;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    aBlock[3] = &unk_101518B88;
    uint64_t v3 = _Block_copy(aBlock);
    id v4 = v1;
    uint64_t v5 = v0;
    swift_release();
    [v4 dismissViewControllerAnimated:1 completion:v3];
    _Block_release(v3);
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for CRLInsertEditURLAlert();
  return [super dealloc];
}

uint64_t sub_1008AA48C()
{
  return type metadata accessor for CRLInsertEditURLAlert();
}

uint64_t type metadata accessor for CRLInsertEditURLAlert()
{
  uint64_t result = qword_1016856D8;
  if (!qword_1016856D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008AA4E0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_1008AA5F0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_1008AA6FC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_1008AA7E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v40 = a2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v37 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167BEA0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v38 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v37 - v18;
  __n128 v22 = __chkstk_darwin(v20, v21);
  uint64_t v24 = (char *)&v37 - v23;
  uint64_t v39 = v6;
  long long v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48);
  int v26 = v25(a1, 1, v5, v22);
  int v27 = v26;
  if (a3)
  {
    sub_1005F7C80(a1, (uint64_t)v24);
    sub_1005F7C80(v40, (uint64_t)v19);
    if (v27 == 1)
    {
      sub_100522F00((uint64_t)v19, &qword_101672E90);
      uint64_t v29 = (uint64_t)v24;
LABEL_8:
      sub_100522F00(v29, &qword_101672E90);
      char v28 = 0;
      return v28 & 1;
    }
    uint64_t v30 = (uint64_t)&v12[*(int *)(v9 + 48)];
    sub_1005F7C80((uint64_t)v24, (uint64_t)v12);
    sub_1005F7C80((uint64_t)v19, v30);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v25)(v12, 1, v5) == 1)
    {
      sub_100522F00((uint64_t)v19, &qword_101672E90);
      sub_100522F00((uint64_t)v24, &qword_101672E90);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v25)(v30, 1, v5) == 1)
      {
        uint64_t v29 = (uint64_t)v12;
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v31 = v38;
      sub_1005F7C80((uint64_t)v12, v38);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v25)(v30, 1, v5) != 1)
      {
        uint64_t v32 = v39;
        unsigned int v33 = v37;
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v37, v30, v5);
        sub_1008AC418();
        char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
        v35(v33, v5);
        sub_100522F00((uint64_t)v19, &qword_101672E90);
        sub_100522F00((uint64_t)v24, &qword_101672E90);
        v35((char *)v31, v5);
        sub_100522F00((uint64_t)v12, &qword_101672E90);
        char v28 = v34 ^ 1;
        return v28 & 1;
      }
      sub_100522F00((uint64_t)v19, &qword_101672E90);
      sub_100522F00((uint64_t)v24, &qword_101672E90);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v31, v5);
    }
    sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10167BEA0);
    char v28 = 1;
    return v28 & 1;
  }
  char v28 = v26 != 1;
  return v28 & 1;
}

void sub_1008AABC0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_1008AAE0C();
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert);
  *(void *)(v2 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert) = v4;
  id v6 = v4;

  uint64_t v7 = v2 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v8 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v8 + 24))(ObjectType, v8);
    swift_unknownObjectRelease();
  }
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12[4] = sub_1008ACB40;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_100679958;
  v12[3] = &unk_101518B38;
  uint64_t v11 = _Block_copy(v12);
  swift_release();
  [a1 presentViewController:v6 animated:1 completion:v11];
  _Block_release(v11);
  sub_100F2BCC8(v6);
}

void sub_1008AAD28()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong beginningOfDocument];
    id v3 = [v1 endOfDocument];
    id v4 = [v1 textRangeFromPosition:v2 toPosition:v3];

    [v1 setSelectedTextRange:v4];
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v1);
  }
}

unint64_t sub_1008AAE0C()
{
  sub_1008AA4E0();
  sub_1008AA5F0();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [self alertControllerWithTitle:v1 message:v2 preferredStyle:1];

  id v4 = sub_1008AC470();
  [v3 _setHeaderContentViewController:v4];

  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v31 = sub_1008AC81C;
  uint64_t v32 = v5;
  int v27 = _NSConcreteStackBlock;
  uint64_t v28 = *(void *)"";
  uint64_t v29 = sub_10051CE64;
  uint64_t v30 = &unk_101518A48;
  id v6 = _Block_copy(&v27);
  swift_release();
  [v3 addTextFieldWithConfigurationHandler:v6];
  _Block_release(v6);
  sub_1008AA6FC();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v31 = sub_1008AC83C;
  uint64_t v32 = v8;
  int v27 = _NSConcreteStackBlock;
  uint64_t v28 = *(void *)"";
  uint64_t v29 = sub_100679958;
  uint64_t v30 = &unk_101518A70;
  uint64_t v9 = _Block_copy(&v27);
  swift_release();
  uint64_t v31 = CRLWPShapeLayout.descendersCannotClip.getter;
  uint64_t v32 = 0;
  int v27 = _NSConcreteStackBlock;
  uint64_t v28 = *(void *)"";
  uint64_t v29 = sub_1005B18A4;
  uint64_t v30 = &unk_101518A98;
  uint64_t v10 = _Block_copy(&v27);
  [v3 _addActionWithTitle:v7 style:0 handler:v9 shouldDismissHandler:v10];
  _Block_release(v10);
  _Block_release(v9);

  id v11 = [v3 actions];
  sub_10050BF48(0, &qword_1016745E0);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_9;
    }
LABEL_3:
    unint64_t result = v13 - 1;
    if (__OFSUB__(v13, 1))
    {
      __break(1u);
    }
    else if ((v12 & 0xC000000000000001) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v15 = *(id *)(v12 + 8 * result + 32);
LABEL_8:
        uint64_t v13 = (uint64_t)v15;
        goto LABEL_9;
      }
      __break(1u);
      return result;
    }
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v13) {
    goto LABEL_3;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  uint64_t v16 = OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction;
  uint64_t v17 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction);
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction) = v13;

  uint64_t v18 = *(void **)(v0 + v16);
  if (v18) {
    [v18 setEnabled:0];
  }
  id v19 = [self mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v31 = sub_1008AC844;
  uint64_t v32 = v24;
  int v27 = _NSConcreteStackBlock;
  uint64_t v28 = *(void *)"";
  uint64_t v29 = sub_100679958;
  uint64_t v30 = &unk_101518AC0;
  long long v25 = _Block_copy(&v27);
  swift_release();
  uint64_t v31 = CRLWPShapeLayout.columnsAreLeftToRight.getter;
  uint64_t v32 = 0;
  int v27 = _NSConcreteStackBlock;
  uint64_t v28 = *(void *)"";
  uint64_t v29 = sub_1005B18A4;
  uint64_t v30 = &unk_101518AE8;
  int v26 = _Block_copy(&v27);
  [v3 _addActionWithTitle:v23 style:1 handler:v25 shouldDismissHandler:v26];
  _Block_release(v26);
  _Block_release(v25);

  return (unint64_t)v3;
}

void sub_1008AB3A4(void *a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v12 = (char *)Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role) == 1)
    {
      uint64_t v13 = Strong + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL;
      swift_beginAccess();
      sub_1005F7C80(v13, (uint64_t)v10);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2))
      {
        sub_100522F00((uint64_t)v10, &qword_101672E90);
        NSString v14 = 0;
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v10, v2);
        sub_100522F00((uint64_t)v10, &qword_101672E90);
        sub_1006F4958();
        (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      id v19 = &selRef_setText_;
    }
    else
    {
      id v15 = [self mainBundle];
      NSString v16 = String._bridgeToObjectiveC()();
      NSString v17 = String._bridgeToObjectiveC()();
      id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v19 = &selRef_setPlaceholder_;
    }
    [a1 *v19 v14];

    [a1 setAutocorrectionType:1];
    [a1 setAutocapitalizationType:0];
    [a1 setSpellCheckingType:1];
    [a1 setKeyboardType:3];
    [a1 setTextAlignment:0];
    [a1 makeTextWritingDirectionLeftToRight:0];
    [a1 setSemanticContentAttribute:3];
    [a1 setClearButtonMode:1];
    [a1 setDelegate:v12];
    NSString v20 = *(void **)&v12[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField];
    *(void *)&v12[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField] = a1;
    id v21 = a1;
  }
}

void sub_1008AB784()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_10167BEA0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672E90);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v11, v14);
  NSString v17 = (char *)&v42 - v16;
  __chkstk_darwin(v15, v18);
  NSString v20 = (char *)&v42 - v19;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v22 = Strong;
    NSString v23 = *(void **)&Strong[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField];
    if (!v23)
    {

      return;
    }
    uint64_t v42 = v4;
    id v24 = v23;
    [v24 resignFirstResponder];
    id v46 = sub_1008AC84C(v24);
    [v46 startAnimating];
    id v25 = [v24 text];
    uint64_t v45 = v1;
    id v47 = v24;
    if (v25)
    {
      int v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    sub_1006F3344(v27, v29, (uint64_t)v20);
    swift_bridgeObjectRelease();
    uint64_t v30 = &v22[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate];
    uint64_t v31 = swift_unknownObjectWeakLoadStrong();
    if (!v31)
    {
      sub_100522F00((uint64_t)v20, &qword_101672E90);

      return;
    }
    uint64_t v43 = *((void *)v30 + 1);
    uint64_t v44 = v31;
    uint64_t v32 = (uint64_t)&v22[OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL];
    swift_beginAccess();
    sub_1005F7C80(v32, (uint64_t)v17);
    uint64_t v33 = (uint64_t)&v8[*(int *)(v5 + 48)];
    sub_1005F7C80((uint64_t)v20, (uint64_t)v8);
    sub_1005F7C80((uint64_t)v17, v33);
    uint64_t v34 = v45;
    uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    if (v35((uint64_t)v8, 1, v0) == 1)
    {
      sub_100522F00((uint64_t)v17, &qword_101672E90);
      if (v35(v33, 1, v0) == 1)
      {
        sub_100522F00((uint64_t)v8, &qword_101672E90);
        char v36 = 0;
LABEL_16:
        id v40 = v47;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, void, uint64_t))(v43 + 8))(v20, v36 & 1, ObjectType);

        swift_unknownObjectRelease();
        sub_100522F00((uint64_t)v20, &qword_101672E90);
        return;
      }
    }
    else
    {
      sub_1005F7C80((uint64_t)v8, (uint64_t)v13);
      if (v35(v33, 1, v0) != 1)
      {
        uint64_t v37 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v42, v33, v0);
        sub_1008AC418();
        char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v37, v0);
        sub_100522F00((uint64_t)v17, &qword_101672E90);
        v39(v13, v0);
        sub_100522F00((uint64_t)v8, &qword_101672E90);
        char v36 = v38 ^ 1;
        goto LABEL_16;
      }
      sub_100522F00((uint64_t)v17, &qword_101672E90);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v0);
    }
    sub_100522F00((uint64_t)v8, (uint64_t *)&unk_10167BEA0);
    char v36 = 1;
    goto LABEL_16;
  }
}

void sub_1008ABC4C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_delegate;
    uint64_t v3 = swift_unknownObjectWeakLoadStrong();
    uint64_t v4 = *(void *)(v2 + 8);

    if (v3)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
      swift_unknownObjectRelease();
    }
  }
}

void sub_1008ABCEC(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert);
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_alert) = 0;

  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField);
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_textField) = 0;

  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction);
  *(void *)(a1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction) = 0;

  if (a2) {
    a2();
  }
}

void sub_1008ABD94()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1008ABE44(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v11 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = __chkstk_darwin(v15, v16).n128_u64[0];
  uint64_t v19 = (char *)&v31 - v18;
  id v20 = [a1 text:v17];
  id v21 = v20;
  if (v20)
  {
    id v22 = v20;
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [v22 stringByReplacingCharactersInRange:a2 withString:a3];

    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    a5 = v25;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (String.count.getter() < 1)
  {
    swift_bridgeObjectRelease();
    char v28 = 0;
  }
  else
  {
    sub_1006F3344(a4, a5, (uint64_t)v19);
    char v26 = *(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role);
    uint64_t v27 = v5 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL;
    swift_beginAccess();
    sub_1005F7C80(v27, (uint64_t)v14);
    char v28 = sub_1008AA7E4((uint64_t)v19, (uint64_t)v14, v26);
    sub_100522F00((uint64_t)v14, &qword_101672E90);
    sub_100522F00((uint64_t)v19, &qword_101672E90);
    swift_bridgeObjectRelease();
  }
  id v29 = *(id *)(v5 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_replaceAction);
  [v29 setEnabled:v28 & 1];

  return 1;
}

uint64_t sub_1008AC0F0(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v9 = __chkstk_darwin(v7, v8).n128_u64[0];
  uint64_t v11 = (char *)&v21 - v10;
  id v12 = [a1 text];
  if (!v12) {
    goto LABEL_5;
  }
  uint64_t v13 = v12;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v16 = v15;

  if (String.count.getter() < 1)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    char v19 = 0;
    return v19 & 1;
  }
  sub_1006F3344(v14, v16, (uint64_t)v11);
  char v17 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_role);
  uint64_t v18 = v1 + OBJC_IVAR____TtC8Freeform21CRLInsertEditURLAlert_initialURL;
  swift_beginAccess();
  sub_1005F7C80(v18, (uint64_t)v6);
  char v19 = sub_1008AA7E4((uint64_t)v11, (uint64_t)v6, v17);
  sub_100522F00((uint64_t)v6, &qword_101672E90);
  sub_100522F00((uint64_t)v11, &qword_101672E90);
  swift_bridgeObjectRelease();
  return v19 & 1;
}

unsigned char *storeEnumTagSinglePayload for CRLInsertEditURLAlert.Role(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008AC388);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLInsertEditURLAlert.Role()
{
  return &type metadata for CRLInsertEditURLAlert.Role;
}

unint64_t sub_1008AC3C4()
{
  unint64_t result = qword_1016856F0;
  if (!qword_1016856F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016856F0);
  }
  return result;
}

unint64_t sub_1008AC418()
{
  unint64_t result = qword_10167BEB8;
  if (!qword_10167BEB8)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BEB8);
  }
  return result;
}

id sub_1008AC470()
{
  id v0 = [objc_allocWithZone((Class)UIViewController) init];
  id v1 = [objc_allocWithZone((Class)UIView) init];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self systemImageNamed:v2];

  id v4 = [objc_allocWithZone((Class)UIImageView) initWithImage:v3];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v4];
  [v0 setView:v1];
  uint64_t v5 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1011807A0;
  id v7 = [v4 topAnchor];
  id v8 = [v1 topAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8 constant:16.0];

  *(void *)(v6 + 32) = v9;
  id v10 = [v4 centerXAnchor];
  id v11 = [v1 centerXAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v6 + 40) = v12;
  id v13 = [v4 bottomAnchor];
  id v14 = [v1 bottomAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v6 + 48) = v15;
  id v16 = [v4 widthAnchor];
  id v17 = [v16 constraintEqualToConstant:32.0];

  *(void *)(v6 + 56) = v17;
  id v18 = [v4 heightAnchor];
  id v19 = [v18 constraintEqualToConstant:32.0];

  *(void *)(v6 + 64) = v19;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:isa];

  return v0;
}

uint64_t sub_1008AC7E4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1008AC81C(void *a1)
{
}

uint64_t sub_1008AC824(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1008AC834()
{
  return swift_release();
}

void sub_1008AC83C()
{
}

void sub_1008AC844()
{
}

id sub_1008AC84C(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UIActivityIndicatorView) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [objc_allocWithZone((Class)UIView) init];
  [v3 addSubview:v2];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117FBE0;
  id v6 = [v2 topAnchor];
  id v7 = [v3 topAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7 constant:0.0];

  *(void *)(v5 + 32) = v8;
  id v9 = [v2 leadingAnchor];
  id v10 = [v3 leadingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10 constant:0.0];

  *(void *)(v5 + 40) = v11;
  id v12 = [v2 bottomAnchor];
  id v13 = [v3 bottomAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13 constant:0.0];

  *(void *)(v5 + 48) = v14;
  id v15 = [v2 trailingAnchor];
  id v16 = [v3 trailingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16 constant:-0.0];

  *(void *)(v5 + 56) = v17;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 activateConstraints:isa];

  [a1 setRightView:v3];
  [a1 setRightViewMode:3];

  return v2;
}

void sub_1008ACB40()
{
}

uint64_t sub_1008ACB48()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

NSString sub_1008ACBC4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171ADB8 = (uint64_t)result;
  return result;
}

uint64_t sub_1008ACBFC()
{
  sub_100523398(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLCloudAccountChangeObserverWrapper()
{
  return self;
}

Swift::Int sub_1008ACC58()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(*v0);
  return Hasher._finalize()();
}

uint64_t sub_1008ACC98()
{
  return sub_1008CE708();
}

uint64_t sub_1008ACCA4()
{
  if (*v0) {
    return 0x5320646572616853;
  }
  else {
    return 0x2065746176697250;
  }
}

void sub_1008ACCF4(void *a1@<X8>)
{
  *a1 = &off_101502C18;
}

uint64_t (*sub_1008ACD04())()
{
  return j__swift_endAccess;
}

uint64_t sub_1008ACD58(void *a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  char v7 = a2 & 1;
  *(void *)(v3 + 40) = _swiftEmptyDictionarySingleton;
  *(void *)&address.sa_data[6] = 0;
  *(void *)address.sa_datCGFloat a = 0;
  *(_WORD *)&address.sa_len = 528;
  SCNetworkReachabilityRef v8 = SCNetworkReachabilityCreateWithAddress(0, &address);
  if (v8)
  {
    SCNetworkReachabilityRef v9 = v8;
    uint64_t v10 = type metadata accessor for CRLNetworkReachabilityListener();
    swift_allocObject();
    id v11 = sub_100A59D64(v9);
    *(void *)(v4 + 24) = a1;
    *(unsigned char *)(v4 + 32) = v7;
    if (v11)
    {
      *((void *)&v19 + 1) = v10;
      id v20 = &off_10151F648;
      *(void *)&address.sa_len = v11;
      goto LABEL_7;
    }
  }
  else
  {
    if (qword_10166FA30 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v12 = (id)static OS_os_log.crlNetworkReachability;
    uint64_t v13 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Failed to create network rechability for zero address.", 54, 2, (uint64_t)_swiftEmptyArrayStorage);

    *(void *)(v4 + 24) = a1;
    *(unsigned char *)(v4 + 32) = v7;
  }
  id v20 = 0;
  sockaddr address = (sockaddr)0;
  long long v19 = 0u;
LABEL_7:
  type metadata accessor for CRLSyncScheduler();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 104) = _swiftEmptyDictionarySingleton;
  *(void *)(v14 + 112) = _swiftEmptyDictionarySingleton;
  *(void *)(v14 + 120) = &_swiftEmptySetSingleton;
  sub_10051B3EC((uint64_t)&address, v14 + 16, &qword_1016791E0);
  long long v15 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v14 + 64) = *(_OWORD *)a3;
  *(_OWORD *)(v14 + 80) = v15;
  *(void *)(v14 + 96) = *(void *)(a3 + 32);
  *(void *)(v14 + 56) = a1;
  *(void *)(v4 + 16) = v14;
  id v16 = a1;
  return v4;
}

uint64_t sub_1008ACF58(unint64_t a1, void *a2)
{
  id v101 = a2;
  uint64_t v3 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v90 = (uint64_t)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v97 = (uint64_t)&v89 - v8;
  __chkstk_darwin(v9, v10);
  unint64_t v95 = (char *)&v89 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v98 = (uint64_t)&v89 - v14;
  long long v15 = (int *)type metadata accessor for CRLThrottleInfo(0);
  unint64_t v102 = (void *)*((void *)v15 - 1);
  __chkstk_darwin(v15, v16);
  uint64_t v94 = (uint64_t)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v93 = (char *)&v89 - v20;
  __chkstk_darwin(v21, v22);
  id v24 = (char *)&v89 - v23;
  uint64_t v25 = type metadata accessor for Date();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25, v27);
  id v29 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v30 - 8, v31);
  uint64_t v89 = (uint64_t)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v99 = (uint64_t)&v89 - v35;
  __chkstk_darwin(v36, v37);
  uint64_t v92 = (uint64_t)&v89 - v38;
  __chkstk_darwin(v39, v40);
  uint64_t v42 = (char *)&v89 - v41;
  __chkstk_darwin(v43, v44);
  id v46 = (char *)&v89 - v45;
  Date.init()();
  id v47 = (void *)_convertErrorToNSError(_:)();
  CKRetryAfterSecondsForError();

  Date.advanced(by:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
  id v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v91(v46, 0, 1, v25);
  unint64_t v104 = a1;
  type metadata accessor for CKError(0);
  sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
  _BridgedStoredNSError.code.getter();
  if (v105 <= 0x21 && ((1 << v105) & 0x208008002) != 0) {
    uint64_t v48 = 8;
  }
  else {
    uint64_t v48 = 12;
  }
  uint64_t v96 = v48;
  unint64_t v104 = a1;
  _BridgedStoredNSError.code.getter();
  if (v105 == 23
    || (unint64_t v103 = a1, _BridgedStoredNSError.code.getter(), v104 > 0x24)
    || ((1 << v104) & 0x1000A002D8) == 0)
  {
    int v49 = v100;
    uint64_t v50 = (uint64_t *)((char *)v49
                    + *(int *)(type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0)
                             + 24));
    uint64_t v51 = *v50;
    uint64_t v52 = *(void *)(*v50 + 16);
    uint64_t v53 = v98;
    uint64_t v100 = v50;
    if (v52)
    {
      id v54 = v101;
      unint64_t v55 = sub_100956E24((uint64_t)v54);
      if (v56)
      {
        uint64_t v57 = *(void *)(v51 + 56);
        uint64_t v58 = v102;
        sub_1008D11CC(v57 + v102[9] * v55, v53, type metadata accessor for CRLThrottleInfo);
        uint64_t v59 = (void (*)(uint64_t, uint64_t, uint64_t, int *))v58[7];
        v59(v53, 0, 1, v15);
      }
      else
      {
        uint64_t v58 = v102;
        uint64_t v59 = (void (*)(uint64_t, uint64_t, uint64_t, int *))v102[7];
        v59(v53, 1, 1, v15);
      }
    }
    else
    {
      uint64_t v58 = v102;
      uint64_t v59 = (void (*)(uint64_t, uint64_t, uint64_t, int *))v102[7];
      v59(v98, 1, 1, v15);
    }
    sub_100522E9C((uint64_t)v46, (uint64_t)v42, &qword_101672EB0);
    if (((unsigned int (*)(uint64_t, uint64_t, int *))v58[6])(v53, 1, v15) == 1)
    {
      uint64_t v76 = v92;
      sub_100522E9C((uint64_t)v42, v92, &qword_101672EB0);
      uint64_t v77 = (uint64_t)v93;
      v91(v93, 1, 1, v25);
      *(void *)(v77 + v15[7]) = 0;
      id v78 = v101;
      id v79 = v101;
      sub_1006063BC(v76, v77, &qword_101672EB0);
      *(void *)(v77 + v15[5]) = v79;
      uint64_t v80 = v96;
      *(void *)(v77 + v15[6]) = v96;
      sub_1008D1260(v77, (uint64_t)v24, type metadata accessor for CRLThrottleInfo);
      sub_100522F00((uint64_t)v42, &qword_101672EB0);
      sub_100522F00(v98, &qword_101674228);
      uint64_t v81 = (uint64_t)v95;
    }
    else
    {
      sub_100522F00((uint64_t)v42, &qword_101672EB0);
      sub_1008D1260(v53, (uint64_t)v24, type metadata accessor for CRLThrottleInfo);
      id v78 = v101;
      uint64_t v81 = (uint64_t)v95;
      uint64_t v80 = v96;
    }
    sub_1008D2978((uint64_t)v46, (uint64_t)v24);
    *(void *)&v24[v15[6]] = v80;
    sub_1008D11CC((uint64_t)v24, v81, type metadata accessor for CRLThrottleInfo);
    v59(v81, 0, 1, v15);
    sub_10057E658(v81, v78);
    sub_100522F00((uint64_t)v46, &qword_101672EB0);
  }
  else
  {
    uint64_t v60 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
    uint64_t v61 = v100;
    uint64_t v98 = (uint64_t)v100 + *(int *)(v60 + 20);
    uint64_t v62 = v97;
    sub_100522E9C(v98, v97, &qword_101674228);
    uint64_t v63 = v99;
    sub_100522E9C((uint64_t)v46, v99, &qword_101672EB0);
    uint64_t v64 = (unsigned int (*)(uint64_t, uint64_t, int *))v102[6];
    if (v64(v62, 1, v15) == 1)
    {
      uint64_t v65 = *(uint64_t *)((char *)v61 + *(int *)(v60 + 24));
      if (*(void *)(v65 + 16))
      {
        id v66 = v101;
        unint64_t v67 = sub_100956E24((uint64_t)v66);
        if (v68)
        {
          uint64_t v69 = *(void *)(v65 + 56);
          uint64_t v70 = v102;
          uint64_t v71 = v90;
          sub_1008D11CC(v69 + v102[9] * v67, v90, type metadata accessor for CRLThrottleInfo);
          ((void (*)(uint64_t, void, uint64_t, int *))v70[7])(v71, 0, 1, v15);

          uint64_t v72 = v71;
        }
        else
        {
          uint64_t v82 = v90;
          ((void (*)(uint64_t, uint64_t, uint64_t, int *))v102[7])(v90, 1, 1, v15);

          uint64_t v72 = v82;
        }
      }
      else
      {
        uint64_t v72 = v90;
        ((void (*)(uint64_t, uint64_t, uint64_t, int *))v102[7])(v90, 1, 1, v15);
      }
      uint64_t v73 = v94;
      uint64_t v83 = v89;
      uint64_t v75 = v98;
      sub_100522E9C(v99, v89, &qword_101672EB0);
      if (v64(v72, 1, v15) == 1)
      {
        uint64_t v84 = v92;
        sub_100522E9C(v83, v92, &qword_101672EB0);
        uint64_t v85 = (uint64_t)v93;
        v91(v93, 1, 1, v25);
        *(void *)(v85 + v15[7]) = 0;
        uint64_t v86 = v72;
        id v87 = v101;
        sub_1006063BC(v84, v85, &qword_101672EB0);
        *(void *)(v85 + v15[5]) = v87;
        *(void *)(v85 + v15[6]) = v96;
        sub_1008D1260(v85, v73, type metadata accessor for CRLThrottleInfo);
        sub_100522F00(v83, &qword_101672EB0);
        long long v74 = v102;
        sub_100522F00(v99, &qword_101672EB0);
        sub_100522F00(v86, &qword_101674228);
      }
      else
      {
        sub_100522F00(v83, &qword_101672EB0);
        long long v74 = v102;
        sub_100522F00(v99, &qword_101672EB0);
        sub_1008D1260(v72, v73, type metadata accessor for CRLThrottleInfo);
      }
      sub_100522F00(v97, &qword_101674228);
    }
    else
    {
      sub_100522F00(v63, &qword_101672EB0);
      uint64_t v73 = v94;
      sub_1008D1260(v62, v94, type metadata accessor for CRLThrottleInfo);
      long long v74 = v102;
      uint64_t v75 = v98;
    }
    sub_1006063BC((uint64_t)v46, v73, &qword_101672EB0);
    *(void *)(v73 + v15[6]) = 0x7FFFFFFFFFFFFFFFLL;
    sub_100522F00(v75, &qword_101674228);
    sub_1008D11CC(v73, v75, type metadata accessor for CRLThrottleInfo);
    ((void (*)(uint64_t, void, uint64_t, int *))v74[7])(v75, 0, 1, v15);
    id v24 = (char *)v73;
  }
  return sub_1008D0E78((uint64_t)v24, type metadata accessor for CRLThrottleInfo);
}

void sub_1008AD9DC(void *a1)
{
  uint64_t v3 = (int *)type metadata accessor for CRLThrottleInfo(0);
  uint64_t v4 = *((void *)v3 - 1);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v12 - 8, v13);
  long long v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v50 - v18;
  uint64_t v20 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  uint64_t v21 = v20;
  uint64_t v22 = (uint64_t *)(v1 + *(int *)(v20 + 24));
  uint64_t v52 = v1;
  uint64_t v53 = v22;
  uint64_t v23 = *v22;
  if (!*(void *)(*v22 + 16))
  {
    uint64_t v51 = v20;
    uint64_t v28 = a1;
    uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, int *))(v4 + 56);
    v50(v15, 1, 1, v3);
LABEL_8:
    uint64_t v29 = type metadata accessor for Date();
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    v30(v11, 1, 1, v29);
    v30(v7, 1, 1, v29);
    *(void *)&v7[v3[7]] = 0;
    a1 = v28;
    id v31 = v28;
    sub_1006063BC((uint64_t)v11, (uint64_t)v7, &qword_101672EB0);
    *(void *)&v7[v3[5]] = v31;
    *(void *)&v7[v3[6]] = 12;
    sub_1008D1260((uint64_t)v7, (uint64_t)v19, type metadata accessor for CRLThrottleInfo);
    sub_100522F00((uint64_t)v15, &qword_101674228);
    uint64_t v21 = v51;
    v50(v19, 0, 1, v3);
    goto LABEL_10;
  }
  id v24 = a1;
  unint64_t v25 = sub_100956E24((uint64_t)v24);
  if (v26)
  {
    sub_1008D11CC(*(void *)(v23 + 56) + *(void *)(v4 + 72) * v25, (uint64_t)v15, type metadata accessor for CRLThrottleInfo);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, int *))(v4 + 56);
    v27(v15, 0, 1, v3);
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, int *))(v4 + 56);
    v27(v15, 1, 1, v3);
  }

  if ((*(unsigned int (**)(char *, uint64_t, int *))(v4 + 48))(v15, 1, v3) == 1)
  {
    uint64_t v50 = v27;
    uint64_t v51 = v21;
    uint64_t v28 = a1;
    goto LABEL_8;
  }
  sub_1008D1260((uint64_t)v15, (uint64_t)v19, type metadata accessor for CRLThrottleInfo);
  v27(v19, 0, 1, v3);
LABEL_10:
  id v32 = a1;
  sub_10057E658((uint64_t)v19, v32);
  id v33 = v32;
  uint64_t v34 = sub_100F475C0(v54, v33);
  uint64_t v36 = v35;
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v4 + 48);
  if (v37(v35, 1, v3))
  {
    ((void (*)(void *, void))v34)(v54, 0);
  }
  else
  {
    uint64_t v38 = v3[7];
    uint64_t v39 = *(void *)(v36 + v38);
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40)
    {
      __break(1u);
      goto LABEL_21;
    }
    *(void *)(v36 + v38) = v41;
    ((void (*)(void *, void))v34)(v54, 0);
  }

  uint64_t v42 = v52 + *(int *)(v21 + 20);
  if (!v37(v42, 1, v3))
  {
    uint64_t v43 = *(void **)(v42 + v3[5]);
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    id v44 = v33;
    id v45 = v43;
    char v46 = static NSObject.== infix(_:_:)();

    if ((v46 & 1) != 0 && !v37(v42, 1, v3))
    {
      uint64_t v47 = v3[7];
      uint64_t v48 = *(void *)(v42 + v47);
      BOOL v40 = __OFADD__(v48, 1);
      uint64_t v49 = v48 + 1;
      if (!v40)
      {
        *(void *)(v42 + v47) = v49;
        return;
      }
LABEL_21:
      __break(1u);
    }
  }
}

BOOL sub_1008ADEAC(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLThrottleInfo(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v1
                  + *(int *)(type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0)
                           + 24));
  if (*(void *)(v12 + 16))
  {
    id v13 = a1;
    unint64_t v14 = sub_100956E24((uint64_t)v13);
    if (v15)
    {
      sub_1008D11CC(*(void *)(v12 + 56) + *(void *)(v8 + 72) * v14, (uint64_t)v6, type metadata accessor for CRLThrottleInfo);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      sub_1008D1260((uint64_t)v6, (uint64_t)v11, type metadata accessor for CRLThrottleInfo);
      BOOL v16 = *(void *)&v11[*(int *)(v7 + 28)] >= *(void *)&v11[*(int *)(v7 + 24)];
      sub_1008D0E78((uint64_t)v11, type metadata accessor for CRLThrottleInfo);
      return v16;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_100522F00((uint64_t)v6, &qword_101674228);
  return 0;
}

uint64_t sub_1008AE0E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v1 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v100 = (uint64_t)&v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v110 = (char *)&v90 - v6;
  uint64_t v105 = type metadata accessor for Date();
  int64_t v115 = *(void *)(v105 - 8);
  __chkstk_darwin(v105, v7);
  uint64_t v92 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v99 = (char *)&v90 - v11;
  uint64_t v12 = sub_1005057FC(&qword_101685D80);
  __chkstk_darwin(v12 - 8, v13);
  char v15 = (uint64_t *)((char *)&v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (id *)((char *)&v90 - v18);
  uint64_t v20 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v113 = (uint64_t)&v90 - v26;
  __chkstk_darwin(v27, v28);
  uint64_t v106 = (uint64_t)&v90 - v29;
  __chkstk_darwin(v30, v31);
  id v33 = (char *)&v90 - v32;
  uint64_t v34 = type metadata accessor for CRLThrottleInfo(0);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v36);
  uint64_t v108 = (uint64_t)&v90 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (char *)&v90 - v40;
  __chkstk_darwin(v42, v43);
  id v45 = (char *)&v90 - v44;
  __chkstk_darwin(v46, v47);
  uint64_t v49 = (char *)&v90 - v48;
  uint64_t v50 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  sub_100522E9C(v118 + *(int *)(v50 + 20), (uint64_t)v33, &qword_101674228);
  char v116 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  uint64_t v117 = v35 + 48;
  if (v116(v33, 1, v34) != 1)
  {
    sub_1008D1260((uint64_t)v33, (uint64_t)v49, type metadata accessor for CRLThrottleInfo);
    id v87 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
    if (*(void *)&v49[*(int *)(v34 + 28)] >= *(void *)&v49[*(int *)(v34 + 24)])
    {
      sub_1008D0E78((uint64_t)v49, type metadata accessor for CRLThrottleInfo);
      return (*v87)(v93, 1, 1, v34);
    }
    else
    {
      uint64_t v88 = (uint64_t)v49;
      uint64_t v89 = v93;
      sub_1008D1260(v88, v93, type metadata accessor for CRLThrottleInfo);
      return (*v87)(v89, 0, 1, v34);
    }
  }
  sub_100522F00((uint64_t)v33, &qword_101674228);
  uint64_t v51 = *(void *)(v118 + *(int *)(v50 + 24));
  uint64_t v52 = v35 + 56;
  uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
  if (!*(void *)(v51 + 16)) {
    return v53(v93, 1, 1, v34);
  }
  uint64_t v109 = v35;
  uint64_t v54 = v106;
  id v101 = v53;
  uint64_t v102 = v52;
  v53(v106, 1, 1, v34);
  uint64_t v55 = *(void *)(v51 + 64);
  uint64_t v98 = v51 + 64;
  uint64_t v56 = 1 << *(unsigned char *)(v51 + 32);
  uint64_t v57 = -1;
  if (v56 < 64) {
    uint64_t v57 = ~(-1 << v56);
  }
  unint64_t v58 = v57 & v55;
  unint64_t v104 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
  uint64_t v96 = (void (**)(char *, uint64_t, uint64_t))(v115 + 32);
  uint64_t v94 = (void (**)(char *, uint64_t))(v115 + 8);
  int64_t v107 = (unint64_t)(v56 + 63) >> 6;
  int64_t v91 = v107 - 1;
  uint64_t v111 = v51;
  uint64_t result = swift_bridgeObjectRetain();
  int v114 = v41;
  int64_t v115 = 0;
  uint64_t v97 = v23;
  uint64_t v103 = v34;
  unint64_t v95 = v15;
  uint64_t v112 = v19;
  while (v58)
  {
    unint64_t v60 = __clz(__rbit64(v58));
    uint64_t v61 = (v58 - 1) & v58;
    unint64_t v62 = v60 | (v115 << 6);
LABEL_10:
    uint64_t v63 = *(void *)(v111 + 56);
    uint64_t v64 = *(void **)(*(void *)(v111 + 48) + 8 * v62);
    void *v15 = v64;
    uint64_t v65 = v63 + *(void *)(v109 + 72) * v62;
    uint64_t v66 = sub_1005057FC(&qword_101685D88);
    sub_1008D11CC(v65, (uint64_t)v15 + *(int *)(v66 + 48), type metadata accessor for CRLThrottleInfo);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v15, 0, 1, v66);
    id v67 = v64;
    uint64_t v41 = v114;
LABEL_29:
    sub_10051B3EC((uint64_t)v15, (uint64_t)v19, &qword_101685D80);
    uint64_t v72 = sub_1005057FC(&qword_101685D88);
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v19, 1, v72) == 1)
    {
      swift_release();
      return sub_10051B3EC(v54, v93, &qword_101674228);
    }
    unint64_t v118 = v61;

    sub_1008D1260((uint64_t)v19 + *(int *)(v72 + 48), (uint64_t)v45, type metadata accessor for CRLThrottleInfo);
    uint64_t v73 = v113;
    sub_100522E9C(v54, v113, &qword_101674228);
    unsigned int v74 = v116((char *)v73, 1, v34);
    sub_100522F00(v73, &qword_101674228);
    sub_1008D11CC((uint64_t)v45, (uint64_t)v41, type metadata accessor for CRLThrottleInfo);
    if (v74 == 1 && *(void *)&v41[*(int *)(v34 + 28)] < *(void *)&v41[*(int *)(v34 + 24)])
    {
      sub_1008D0E78((uint64_t)v41, type metadata accessor for CRLThrottleInfo);
      sub_100522F00(v54, &qword_101674228);
      sub_1008D1260((uint64_t)v45, v54, type metadata accessor for CRLThrottleInfo);
      uint64_t result = v101(v54, 0, 1, v34);
LABEL_7:
      uint64_t v19 = v112;
      unint64_t v58 = v118;
    }
    else
    {
      sub_1008D0E78((uint64_t)v41, type metadata accessor for CRLThrottleInfo);
      sub_100522E9C(v54, (uint64_t)v23, &qword_101674228);
      unsigned int v75 = v116(v23, 1, v34);
      uint64_t v76 = (uint64_t)v110;
      if (v75 == 1)
      {
        sub_1008D0E78((uint64_t)v45, type metadata accessor for CRLThrottleInfo);
        uint64_t result = sub_100522F00((uint64_t)v23, &qword_101674228);
        goto LABEL_7;
      }
      uint64_t v77 = v108;
      sub_1008D1260((uint64_t)v23, v108, type metadata accessor for CRLThrottleInfo);
      sub_100522E9C(v77, v76, &qword_101672EB0);
      uint64_t v78 = v105;
      id v79 = *v104;
      if ((*v104)(v76, 1, v105) == 1)
      {
        sub_1008D0E78(v77, type metadata accessor for CRLThrottleInfo);
        sub_1008D0E78((uint64_t)v45, type metadata accessor for CRLThrottleInfo);
        uint64_t result = sub_100522F00(v76, &qword_101672EB0);
        uint64_t v54 = v106;
        uint64_t v41 = v114;
        uint64_t v34 = v103;
        goto LABEL_44;
      }
      uint64_t v80 = v76;
      uint64_t v81 = *v96;
      uint64_t v82 = v99;
      (*v96)(v99, v80, v78);
      uint64_t v83 = v100;
      sub_100522E9C((uint64_t)v45, v100, &qword_101672EB0);
      if (v79(v83, 1, v78) == 1)
      {
        (*v94)(v82, v78);
        sub_1008D0E78(v108, type metadata accessor for CRLThrottleInfo);
        sub_1008D0E78((uint64_t)v45, type metadata accessor for CRLThrottleInfo);
        uint64_t result = sub_100522F00(v83, &qword_101672EB0);
        uint64_t v23 = v97;
        uint64_t v54 = v106;
        uint64_t v41 = v114;
        uint64_t v34 = v103;
LABEL_43:
        char v15 = v95;
LABEL_44:
        uint64_t v19 = v112;
        unint64_t v58 = v118;
      }
      else
      {
        uint64_t v84 = v92;
        v81(v92, v83, v78);
        char v85 = static Date.> infix(_:_:)();
        uint64_t v86 = *v94;
        (*v94)(v84, v78);
        v86(v82, v78);
        sub_1008D0E78(v108, type metadata accessor for CRLThrottleInfo);
        uint64_t v34 = v103;
        if ((v85 & 1) == 0)
        {
          uint64_t result = sub_1008D0E78((uint64_t)v45, type metadata accessor for CRLThrottleInfo);
          uint64_t v23 = v97;
          uint64_t v54 = v106;
          uint64_t v41 = v114;
          goto LABEL_43;
        }
        uint64_t v23 = v97;
        uint64_t v54 = v106;
        uint64_t v41 = v114;
        char v15 = v95;
        uint64_t v19 = v112;
        unint64_t v58 = v118;
        if (*(void *)&v45[*(int *)(v103 + 28)] < *(void *)&v45[*(int *)(v103 + 24)])
        {
          sub_100522F00(v106, &qword_101674228);
          sub_1008D1260((uint64_t)v45, v54, type metadata accessor for CRLThrottleInfo);
          uint64_t result = v101(v54, 0, 1, v34);
        }
        else
        {
          uint64_t result = sub_1008D0E78((uint64_t)v45, type metadata accessor for CRLThrottleInfo);
        }
      }
    }
  }
  int64_t v68 = v115 + 1;
  if (__OFADD__(v115, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if (v68 >= v107)
  {
LABEL_28:
    uint64_t v71 = sub_1005057FC(&qword_101685D88);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v15, 1, 1, v71);
    uint64_t v61 = 0;
    goto LABEL_29;
  }
  unint64_t v69 = *(void *)(v98 + 8 * v68);
  if (v69)
  {
LABEL_14:
    uint64_t v61 = (v69 - 1) & v69;
    unint64_t v62 = __clz(__rbit64(v69)) + (v68 << 6);
    int64_t v115 = v68;
    goto LABEL_10;
  }
  int64_t v70 = v115 + 2;
  ++v115;
  if (v68 + 1 >= v107) {
    goto LABEL_28;
  }
  unint64_t v69 = *(void *)(v98 + 8 * v70);
  if (v69) {
    goto LABEL_17;
  }
  int64_t v115 = v68 + 1;
  if (v68 + 2 >= v107) {
    goto LABEL_28;
  }
  unint64_t v69 = *(void *)(v98 + 8 * (v68 + 2));
  if (v69)
  {
    v68 += 2;
    goto LABEL_14;
  }
  int64_t v70 = v68 + 3;
  int64_t v115 = v68 + 2;
  if (v68 + 3 >= v107) {
    goto LABEL_28;
  }
  unint64_t v69 = *(void *)(v98 + 8 * v70);
  if (v69)
  {
LABEL_17:
    int64_t v68 = v70;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v68 = v70 + 1;
    if (__OFADD__(v70, 1)) {
      break;
    }
    if (v68 >= v107)
    {
      int64_t v115 = v91;
      goto LABEL_28;
    }
    unint64_t v69 = *(void *)(v98 + 8 * v68);
    ++v70;
    if (v69) {
      goto LABEL_14;
    }
  }
LABEL_53:
  __break(1u);
  return result;
}

BOOL sub_1008AED98(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v19 - v13;
  sub_100522E9C(a1, (uint64_t)v5, &qword_101672EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100522F00((uint64_t)v5, &qword_101672EB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v5, v6);
    static Date.now.getter();
    char v15 = static Date.> infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v10, v6);
    v16(v14, v6);
    if (v15) {
      return 0;
    }
  }
  uint64_t v18 = type metadata accessor for CRLThrottleInfo(0);
  return *(void *)(a1 + *(int *)(v18 + 28)) < *(void *)(a1 + *(int *)(v18 + 24));
}

BOOL sub_1008AEF90(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = type metadata accessor for CRLThrottleInfo(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v31 = (uint64_t)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  sub_100522E9C(v1 + *(int *)(v19 + 20), (uint64_t)v10, &qword_101674228);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v20(v10, 1, v11) == 1)
  {
    sub_100522F00((uint64_t)v10, &qword_101674228);
  }
  else
  {
    sub_1008D1260((uint64_t)v10, (uint64_t)v18, type metadata accessor for CRLThrottleInfo);
    BOOL v21 = sub_1008AED98((uint64_t)v18);
    sub_1008D0E78((uint64_t)v18, type metadata accessor for CRLThrottleInfo);
    if (!v21) {
      return 0;
    }
  }
  uint64_t v22 = *(void *)(v1 + *(int *)(v19 + 24));
  if (*(void *)(v22 + 16))
  {
    id v23 = a1;
    unint64_t v24 = sub_100956E24((uint64_t)v23);
    if (v25)
    {
      sub_1008D11CC(*(void *)(v22 + 56) + *(void *)(v12 + 72) * v24, (uint64_t)v6, type metadata accessor for CRLThrottleInfo);
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, v26, 1, v11);

    if (v20(v6, 1, v11) != 1)
    {
      uint64_t v28 = v31;
      sub_1008D1260((uint64_t)v6, v31, type metadata accessor for CRLThrottleInfo);
      BOOL v27 = sub_1008AED98(v28);
      sub_1008D0E78(v28, type metadata accessor for CRLThrottleInfo);
      return v27;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, 1, 1, v11);
  }
  sub_100522F00((uint64_t)v6, &qword_101674228);
  return 1;
}

BOOL sub_1008AF2B0(char a1, void *a2)
{
  uint64_t v5 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101685CA8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v2 + 40);
  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1009571B8(a1 & 1);
    if (v16)
    {
      sub_1008D11CC(*(void *)(v14 + 56) + *(void *)(v6 + 72) * v15, (uint64_t)v13, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v13, 0, 1, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5))
  {
    sub_100522F00((uint64_t)v13, &qword_101685CA8);
    return 0;
  }
  else
  {
    sub_1008D11CC((uint64_t)v13, (uint64_t)v9, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_100522F00((uint64_t)v13, &qword_101685CA8);
    BOOL v17 = sub_1008ADEAC(a2);
    sub_1008D0E78((uint64_t)v9, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
  return v17;
}

uint64_t sub_1008AF518(char a1, int a2)
{
  uint64_t v4 = v2;
  int v27 = a2;
  char v5 = a1 & 1;
  uint64_t v6 = (int *)type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  uint64_t v7 = *((void *)v6 - 1);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)(v2 + 40);
  swift_beginAccess();
  swift_retain();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v28 = v13;
  *(void *)(v4 + 40) = 0x8000000000000000;
  unint64_t v15 = sub_1009571B8(v5);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_10;
  }
  char v3 = v14;
  if (*(void *)(v13 + 24) >= v18)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
LABEL_10:
    sub_100981AE4();
    uint64_t v13 = v28;
    goto LABEL_6;
  }
  sub_10096A24C(v18, isUniquelyReferenced_nonNull_native);
  uint64_t v13 = v28;
  unint64_t v19 = sub_1009571B8(v5);
  if ((v3 & 1) != (v20 & 1))
  {
    swift_release();
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = v19;
LABEL_6:
  void *v11 = v13;
  swift_bridgeObjectRelease();
  BOOL v21 = (void *)*v11;
  if ((v3 & 1) == 0)
  {
    char v22 = *(unsigned char *)(v4 + 32);
    id v23 = &v10[v6[5]];
    uint64_t v24 = type metadata accessor for CRLThrottleInfo(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    *(void *)&v10[v6[6]] = _swiftEmptyDictionarySingleton;
    v10[v6[7]] = 0;
    *uint64_t v10 = v22;
    sub_10097B0B0(v15, v5, (uint64_t)v10, v21);
  }
  *(unsigned char *)(v21[7] + *(void *)(v7 + 72) * v15 + v6[7]) = v27 & 1;
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1008AF768(char a1)
{
  uint64_t v3 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101685CA8);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 40);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1009571B8(a1 & 1);
    if (v14)
    {
      sub_1008D11CC(*(void *)(v12 + 56) + *(void *)(v4 + 72) * v13, (uint64_t)v11, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v11, 0, 1, v3);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v11, 1, 1, v3);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v11, 1, 1, v3);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3))
  {
    sub_100522F00((uint64_t)v11, &qword_101685CA8);
    return 0;
  }
  else
  {
    sub_1008D11CC((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_100522F00((uint64_t)v11, &qword_101685CA8);
    uint64_t v15 = v7[*(int *)(v3 + 28)];
    sub_1008D0E78((uint64_t)v7, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
  return v15;
}

uint64_t sub_1008AF9C4(char a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v26 = a2;
  char v5 = a1 & 1;
  uint64_t v6 = (int *)type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)(v2 + 40);
  swift_beginAccess();
  swift_retain();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v2 + 40);
  uint64_t v27 = v12;
  *(void *)(v4 + 40) = 0x8000000000000000;
  unint64_t v14 = sub_1009571B8(v5);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_10;
  }
  char v3 = v13;
  if (*(void *)(v12 + 24) >= v17)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
LABEL_10:
    sub_100981AE4();
    uint64_t v12 = v27;
    goto LABEL_6;
  }
  sub_10096A24C(v17, isUniquelyReferenced_nonNull_native);
  uint64_t v12 = v27;
  unint64_t v18 = sub_1009571B8(v5);
  if ((v3 & 1) != (v19 & 1))
  {
    swift_release();
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v18;
LABEL_6:
  *uint64_t v10 = v12;
  swift_bridgeObjectRelease();
  char v20 = (void *)*v10;
  if ((v3 & 1) == 0)
  {
    char v21 = *(unsigned char *)(v4 + 32);
    char v22 = &v9[v6[5]];
    uint64_t v23 = type metadata accessor for CRLThrottleInfo(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
    *(void *)&v9[v6[6]] = _swiftEmptyDictionarySingleton;
    v9[v6[7]] = 0;
    *uint64_t v9 = v21;
    sub_10097B0B0(v14, v5, (uint64_t)v9, v20);
  }
  sub_1008AD9DC(v26);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1008AFC0C(char a1, unint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  unint64_t v26 = a2;
  uint64_t v27 = a3;
  char v6 = a1 & 1;
  uint64_t v7 = (int *)type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)(v3 + 40);
  swift_beginAccess();
  swift_retain();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v3 + 40);
  uint64_t v28 = v13;
  *(void *)(v5 + 40) = 0x8000000000000000;
  unint64_t v15 = sub_1009571B8(v6);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_10;
  }
  char v4 = v14;
  if (*(void *)(v13 + 24) >= v18)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
LABEL_10:
    sub_100981AE4();
    uint64_t v13 = v28;
    goto LABEL_6;
  }
  sub_10096A24C(v18, isUniquelyReferenced_nonNull_native);
  uint64_t v13 = v28;
  unint64_t v19 = sub_1009571B8(v6);
  if ((v4 & 1) != (v20 & 1))
  {
    swift_release();
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = v19;
LABEL_6:
  void *v11 = v13;
  swift_bridgeObjectRelease();
  char v21 = (void *)*v11;
  if ((v4 & 1) == 0)
  {
    char v22 = *(unsigned char *)(v5 + 32);
    uint64_t v23 = &v10[v7[5]];
    uint64_t v24 = type metadata accessor for CRLThrottleInfo(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    *(void *)&v10[v7[6]] = _swiftEmptyDictionarySingleton;
    v10[v7[7]] = 0;
    *uint64_t v10 = v22;
    sub_10097B0B0(v15, v6, (uint64_t)v10, v21);
  }
  sub_1008ACF58(v26, v27);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1008AFE54@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101685CA8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v2 + 40);
  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1009571B8(a1 & 1);
    if (v16)
    {
      sub_1008D11CC(*(void *)(v14 + 56) + *(void *)(v6 + 72) * v15, (uint64_t)v13, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v13, 0, 1, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5))
  {
    sub_100522F00((uint64_t)v13, &qword_101685CA8);
    uint64_t v17 = type metadata accessor for CRLThrottleInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  else
  {
    sub_1008D11CC((uint64_t)v13, (uint64_t)v9, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_100522F00((uint64_t)v13, &qword_101685CA8);
    sub_1008AE0E0(a2);
    return sub_1008D0E78((uint64_t)v9, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
}

BOOL sub_1008B00F0(char a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLThrottleInfo(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  char v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_101685CA8);
  __chkstk_darwin(v17 - 8, v18);
  char v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v21 = *(void *)(v1 + 40);
  if (*(void *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1009571B8(a1 & 1);
    if (v23)
    {
      sub_1008D11CC(*(void *)(v21 + 56) + *(void *)(v13 + 72) * v22, (uint64_t)v20, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v20, 1, 1, v12);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v20, 1, 1, v12);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v20, 1, v12))
  {
    sub_100522F00((uint64_t)v20, &qword_101685CA8);
    return 1;
  }
  else
  {
    sub_1008D11CC((uint64_t)v20, (uint64_t)v16, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_100522F00((uint64_t)v20, &qword_101685CA8);
    sub_100522E9C((uint64_t)&v16[*(int *)(v12 + 20)], (uint64_t)v6, &qword_101674228);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_100522F00((uint64_t)v6, &qword_101674228);
      BOOL v24 = 1;
    }
    else
    {
      sub_1008D1260((uint64_t)v6, (uint64_t)v11, type metadata accessor for CRLThrottleInfo);
      BOOL v24 = sub_1008AED98((uint64_t)v11);
      sub_1008D0E78((uint64_t)v11, type metadata accessor for CRLThrottleInfo);
    }
    sub_1008D0E78((uint64_t)v16, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
  return v24;
}

BOOL sub_1008B04A4(char a1, void *a2)
{
  uint64_t v5 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101685CA8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v2 + 40);
  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_1009571B8(a1 & 1);
    if (v16)
    {
      sub_1008D11CC(*(void *)(v14 + 56) + *(void *)(v6 + 72) * v15, (uint64_t)v13, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v13, 0, 1, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5))
  {
    sub_100522F00((uint64_t)v13, &qword_101685CA8);
    return 1;
  }
  else
  {
    sub_1008D11CC((uint64_t)v13, (uint64_t)v9, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
    sub_100522F00((uint64_t)v13, &qword_101685CA8);
    BOOL v17 = sub_1008AEF90(a2);
    sub_1008D0E78((uint64_t)v9, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
  }
  return v17;
}

uint64_t sub_1008B070C(char a1, char a2)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v7 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  if (*(unsigned char *)(v2 + 32)) {
    uint64_t v8 = 0x5320646572616853;
  }
  else {
    uint64_t v8 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v2 + 32)) {
    unint64_t v9 = 0xEC00000065706F63;
  }
  else {
    unint64_t v9 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v9;
  int v11 = a1 & 1;
  uint64_t v12 = 1702257011;
  if (v11) {
    uint64_t v12 = 0x6863746566;
  }
  unint64_t v13 = 0xE500000000000000;
  if (!v11) {
    unint64_t v13 = 0xE400000000000000;
  }
  *(void *)(v7 + 96) = &type metadata for String;
  *(void *)(v7 + 104) = v10;
  *(void *)(v7 + 64) = v10;
  *(void *)(v7 + 72) = v12;
  *(void *)(v7 + 80) = v13;
  *(void *)(v7 + 136) = &type metadata for Bool;
  *(void *)(v7 + 144) = &protocol witness table for Bool;
  char v14 = a2 & 1;
  *(unsigned char *)(v7 + 112) = v14;
  id v15 = v5;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"<%{public}@> Marking activity complete with identifier: %@ success: %d", 70, 2, v7);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return sub_100ECA714(v11, v14);
}

uint64_t sub_1008B08F0(unsigned char *a1)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v5 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (*(unsigned char *)(v1 + 32)) {
    uint64_t v6 = 0x5320646572616853;
  }
  else {
    uint64_t v6 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v1 + 32)) {
    unint64_t v7 = 0xEC00000065706F63;
  }
  else {
    unint64_t v7 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v8 = sub_100528BE4();
  v5[8] = v8;
  v5[4] = v6;
  v5[5] = v7;
  uint64_t v9 = 1702257011;
  if (*a1) {
    uint64_t v9 = 0x6863746566;
  }
  unint64_t v10 = 0xE400000000000000;
  if (*a1) {
    unint64_t v10 = 0xE500000000000000;
  }
  v5[12] = &type metadata for String;
  v5[13] = v8;
  v5[9] = v9;
  v5[10] = v10;
  id v11 = v3;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"<%{public}@> Scheduling activity with identifier: %{public}@", 60, 2, (uint64_t)v5);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return sub_100ECA1F4((uint64_t)a1);
}

uint64_t sub_1008B0AAC@<X0>(char a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v35 = a2;
  uint64_t v36 = a3;
  char v3 = a1 & 1;
  uint64_t v4 = (int *)type metadata accessor for CRLSyncActivity(0);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4, v6);
  unint64_t v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for CRLThrottleInfo(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = &v34[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1008AFE54(v3, (uint64_t)v16);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    sub_1008D1260((uint64_t)v16, (uint64_t)v21, type metadata accessor for CRLThrottleInfo);
    sub_100522E9C((uint64_t)v21, (uint64_t)v12, &qword_101672EB0);
    uint64_t v29 = *(void *)&v21[*(int *)(v17 + 24)];
    uint64_t v30 = (uint64_t)&v8[v4[5]];
    uint64_t v31 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
    uint64_t v32 = &v8[v4[7]];
    *(void *)uint64_t v32 = 0;
    v32[8] = 1;
    *unint64_t v8 = v3;
    sub_1006063BC((uint64_t)v12, v30, &qword_101672EB0);
    v8[v4[6]] = 4;
    *(void *)uint64_t v32 = v29;
    v32[8] = 0;
    v8[v4[8]] = v35 & 1;
    uint64_t v24 = v36;
    sub_1008D1260((uint64_t)v8, v36, type metadata accessor for CRLSyncActivity);
    sub_1008D0E78((uint64_t)v21, type metadata accessor for CRLThrottleInfo);
    goto LABEL_5;
  }
  sub_100522F00((uint64_t)v16, &qword_101674228);
  char v22 = sub_1008AF768(v3);
  uint64_t v23 = 1;
  uint64_t v24 = v36;
  if (v22)
  {
    uint64_t v25 = type metadata accessor for Date();
    uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    v26(v12, 1, 1, v25);
    uint64_t v27 = (uint64_t)&v8[v4[5]];
    v26((unsigned char *)v27, 1, 1, v25);
    uint64_t v28 = &v8[v4[7]];
    *(void *)uint64_t v28 = 0;
    v28[8] = 1;
    *unint64_t v8 = v3;
    sub_1006063BC((uint64_t)v12, v27, &qword_101672EB0);
    v8[v4[6]] = 4;
    *(void *)uint64_t v28 = 0;
    v28[8] = 1;
    uint64_t v24 = v36;
    v8[v4[8]] = v35 & 1;
    sub_1008D1260((uint64_t)v8, v24, type metadata accessor for CRLSyncActivity);
LABEL_5:
    uint64_t v23 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(v24, v23, 1, v4);
}

uint64_t sub_1008B0EE4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v7 = a3 & 1;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = *(void *)(v4 + 24);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v4;
  *(void *)(v18 + 24) = a1;
  *(void *)(v18 + 32) = a2;
  *(unsigned char *)(v18 + 40) = v7;
  aBlock[4] = sub_1008D2948;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_1015195C8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v21[1] = _swiftEmptyArrayStorage;
  sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

uint64_t sub_1008B11C4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(void *)(v0 + 24);
  aBlock[4] = sub_1008D28E4;
  uint64_t v15 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_101519578;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v13[1] = _swiftEmptyArrayStorage;
  sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

uint64_t sub_1008B146C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSyncActivityThrottlingScheduler()
{
  return self;
}

uint64_t sub_1008B14D8(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return _swift_task_switch(sub_1008B14FC, v2, 0);
}

uint64_t sub_1008B14FC()
{
  uint64_t v1 = v0[14];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if ((v2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLCloudAccountChangeObserverWrapper();
    sub_1008CE3C8(&qword_101685D78, 255, (void (*)(uint64_t))type metadata accessor for CRLCloudAccountChangeObserverWrapper);
    Set.Iterator.init(_cocoa:)();
    uint64_t result = v0[2];
    uint64_t v4 = v0[3];
    uint64_t v6 = v0[4];
    uint64_t v5 = v0[5];
    unint64_t v7 = v0[6];
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v4 = v2 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v2 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  v0[16] = v4;
  v0[17] = v6;
  v0[15] = result;
  if (result < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v7)
  {
    uint64_t v11 = (v7 - 1) & v7;
    unint64_t v12 = __clz(__rbit64(v7)) | (v5 << 6);
    uint64_t v13 = v5;
    goto LABEL_26;
  }
  int64_t v16 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v17 = (unint64_t)(v0[17] + 64) >> 6;
  if (v16 < v17)
  {
    uint64_t v18 = v0[16];
    unint64_t v19 = *(void *)(v18 + 8 * v16);
    uint64_t v13 = v5 + 1;
    if (v19) {
      goto LABEL_25;
    }
    uint64_t v13 = v5 + 2;
    if (v5 + 2 >= v17) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v18 + 8 * v13);
    if (v19) {
      goto LABEL_25;
    }
    uint64_t v13 = v5 + 3;
    if (v5 + 3 >= v17) {
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v18 + 8 * v13);
    if (v19)
    {
LABEL_25:
      uint64_t v11 = (v19 - 1) & v19;
      unint64_t v12 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_26:
      uint64_t v15 = *(void *)(*(void *)(result + 48) + 8 * v12);
      swift_retain();
      while (1)
      {
        v0[19] = v13;
        v0[20] = v11;
        v0[18] = v15;
        if (!v15) {
          goto LABEL_34;
        }
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        v0[21] = Strong;
        if (Strong)
        {
          uint64_t v22 = *(void *)(v15 + 24);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 8) + **(int **)(v22 + 8));
          uint64_t v24 = (void *)swift_task_alloc();
          v0[22] = v24;
          *uint64_t v24 = v0;
          v24[1] = sub_1008B18D4;
          uint64_t v26 = v0[12];
          uint64_t v25 = v0[13];
          return v28(v26, v25, ObjectType, v22);
        }
        swift_release();
        uint64_t result = v0[15];
        uint64_t v5 = v13;
        unint64_t v7 = v11;
        if ((result & 0x8000000000000000) == 0) {
          goto LABEL_8;
        }
LABEL_10:
        uint64_t v14 = __CocoaSet.Iterator.next()();
        if (!v14) {
          goto LABEL_34;
        }
        v0[11] = v14;
        type metadata accessor for CRLCloudAccountChangeObserverWrapper();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v15 = v0[10];
        swift_unknownObjectRelease();
        uint64_t v13 = v5;
        uint64_t v11 = v7;
      }
    }
    uint64_t v13 = v5 + 4;
    if (v5 + 4 < v17)
    {
      unint64_t v19 = *(void *)(v18 + 8 * v13);
      if (!v19)
      {
        uint64_t v20 = v5 + 5;
        while (v17 != v20)
        {
          unint64_t v19 = *(void *)(v18 + 8 * v20++);
          if (v19)
          {
            uint64_t v13 = v20 - 1;
            goto LABEL_25;
          }
        }
        goto LABEL_34;
      }
      goto LABEL_25;
    }
  }
LABEL_34:
  sub_10052E1EC();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_1008B18D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_1008B1A00, v1, 0);
}

uint64_t sub_1008B1A00()
{
  swift_release();
  uint64_t v1 = v0[19];
  unint64_t v2 = v0[20];
  uint64_t result = v0[15];
  if (result < 0) {
    goto LABEL_4;
  }
LABEL_2:
  if (v2)
  {
    uint64_t v4 = (v2 - 1) & v2;
    unint64_t v5 = __clz(__rbit64(v2)) | (v1 << 6);
    uint64_t v6 = v1;
    goto LABEL_20;
  }
  int64_t v9 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v10 = (unint64_t)(v0[17] + 64) >> 6;
  if (v9 < v10)
  {
    uint64_t v11 = v0[16];
    unint64_t v12 = *(void *)(v11 + 8 * v9);
    uint64_t v6 = v1 + 1;
    if (v12) {
      goto LABEL_19;
    }
    uint64_t v6 = v1 + 2;
    if (v1 + 2 >= v10) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v11 + 8 * v6);
    if (v12) {
      goto LABEL_19;
    }
    uint64_t v6 = v1 + 3;
    if (v1 + 3 >= v10) {
      goto LABEL_28;
    }
    unint64_t v12 = *(void *)(v11 + 8 * v6);
    if (v12)
    {
LABEL_19:
      uint64_t v4 = (v12 - 1) & v12;
      unint64_t v5 = __clz(__rbit64(v12)) + (v6 << 6);
LABEL_20:
      uint64_t v8 = *(void *)(*(void *)(result + 48) + 8 * v5);
      swift_retain();
      while (1)
      {
        v0[19] = v6;
        v0[20] = v4;
        v0[18] = v8;
        if (!v8) {
          goto LABEL_28;
        }
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        v0[21] = Strong;
        if (Strong)
        {
          uint64_t v15 = *(void *)(v8 + 24);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 8) + **(int **)(v15 + 8));
          int64_t v17 = (void *)swift_task_alloc();
          v0[22] = v17;
          *int64_t v17 = v0;
          v17[1] = sub_1008B18D4;
          uint64_t v19 = v0[12];
          uint64_t v18 = v0[13];
          return v21(v19, v18, ObjectType, v15);
        }
        swift_release();
        uint64_t v1 = v6;
        unint64_t v2 = v4;
        uint64_t result = v0[15];
        if ((result & 0x8000000000000000) == 0) {
          goto LABEL_2;
        }
LABEL_4:
        uint64_t v7 = __CocoaSet.Iterator.next()();
        if (!v7) {
          goto LABEL_28;
        }
        v0[11] = v7;
        type metadata accessor for CRLCloudAccountChangeObserverWrapper();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v8 = v0[10];
        swift_unknownObjectRelease();
        uint64_t v6 = v1;
        uint64_t v4 = v2;
      }
    }
    uint64_t v6 = v1 + 4;
    if (v1 + 4 < v10)
    {
      unint64_t v12 = *(void *)(v11 + 8 * v6);
      if (!v12)
      {
        uint64_t v13 = v1 + 5;
        while (v10 != v13)
        {
          unint64_t v12 = *(void *)(v11 + 8 * v13++);
          if (v12)
          {
            uint64_t v6 = v13 - 1;
            goto LABEL_19;
          }
        }
        goto LABEL_28;
      }
      goto LABEL_19;
    }
  }
LABEL_28:
  sub_10052E1EC();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t type metadata accessor for CRLAccountChangeObserverManager()
{
  return self;
}

uint64_t sub_1008B1D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return _swift_task_switch(sub_1008B1D48, 0, 0);
}

uint64_t sub_1008B1D48()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC8Freeform17CRLSyncController_accountChangeObserverManager);
  *(void *)(v0 + 64) = v1;
  swift_retain();
  return _swift_task_switch(sub_1008B1DC8, v1, 0);
}

uint64_t sub_1008B1DC8()
{
  uint64_t v6 = v0;
  uint64_t v1 = *(void *)(v0 + 56);
  type metadata accessor for CRLCloudAccountChangeObserverWrapper();
  Swift::UInt v2 = swift_allocObject();
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  sub_100CBA84C(&v5, v2);
  swift_endAccess();
  swift_release();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1008B1EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  return _swift_task_switch(sub_1008B1ED0, 0, 0);
}

uint64_t sub_1008B1ED0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC8Freeform17CRLSyncController_accountChangeObserverManager);
  *(void *)(v0 + 64) = v1;
  swift_retain();
  return _swift_task_switch(sub_1008B1F50, v1, 0);
}

uint64_t sub_1008B1F50()
{
  uint64_t v1 = *(void *)(v0 + 56);
  type metadata accessor for CRLCloudAccountChangeObserverWrapper();
  Swift::UInt v2 = swift_allocObject();
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  sub_100D17634(v2);
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1008B203C(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_10051B3EC((uint64_t)a4, (uint64_t)v17, &qword_101685D98);
  char v8 = v17[0];
  uint64_t v7 = (double (*)(uint64_t))v17[1];
  uint64_t v9 = v17[2];
  long long v16 = v18;
  if (a1)
  {
    swift_retain();
    a1(v21, a3);
    uint64_t v10 = a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
    swift_beginAccess();
    sub_1006063BC((uint64_t)v21, v10, &qword_101685C68);
    swift_endAccess();
    sub_1005174AC((uint64_t)a1);
  }
  else
  {
    uint64_t v11 = sub_1008B21F0();
    *(void *)&long long v22 = type metadata accessor for CKSyncEngine();
    *((void *)&v22 + 1) = &off_10167B450;
    v21[0] = v11;
    uint64_t v12 = a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
    swift_beginAccess();
    sub_1006063BC((uint64_t)v21, v12, &qword_101685C68);
    swift_endAccess();
  }
  sub_10051B3EC((uint64_t)a4, (uint64_t)v19, &qword_101685D98);
  if (v20)
  {
    char v13 = v8 & 1;
    long long v14 = v16;
  }
  else
  {
    uint64_t v9 = 0;
    char v13 = *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
    long long v14 = xmmword_101186B10;
    uint64_t v7 = sub_100EC9DEC;
  }
  LOBYTE(v21[0]) = v13;
  v21[1] = v7;
  void v21[2] = v9;
  long long v22 = v14;
  sub_1008D29E0(a4);
  sub_1008B2CA4((uint64_t)v21);
  return swift_release();
}

uint64_t sub_1008B21F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CKSyncEngine.Configuration();
  uint64_t v79 = *(void *)(v2 - 8);
  uint64_t v80 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v77 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v78 = (char *)&v73 - v7;
  uint64_t v8 = sub_1005057FC(&qword_101685D68);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v76 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v81 = (char *)&v73 - v13;
  __chkstk_darwin(v14, v15);
  int64_t v17 = (char *)&v73 - v16;
  uint64_t v18 = type metadata accessor for CKSyncEngine.State.Serialization();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  long long v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchPredicate();
  uint64_t v24 = *(void *)(v23 - 8);
  __n128 v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = (id *)((char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *uint64_t v28 = v29;
  (*(void (**)(void *, void, uint64_t, __n128))(v24 + 104))(v28, enum case for DispatchPredicate.onQueue(_:), v23, v26);
  id v30 = v29;
  LOBYTE(v29) = _dispatchPreconditionTest(_:)();
  uint64_t v32 = *(void (**)(void *, uint64_t))(v24 + 8);
  int v31 = v24 + 8;
  v32(v28, v23);
  if ((v29 & 1) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  id v33 = v22;
  unint64_t v34 = 0xEC00000065706F63;
  int v31 = v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope];
  int v35 = &selRef_sharedCloudDatabase;
  if (!v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    int v35 = &selRef_privateCloudDatabase;
  }
  id v75 = [*(id *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_container] *v35];
  if (!swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v84 = 0;
    long long v82 = 0u;
    long long v83 = 0u;
    goto LABEL_17;
  }
  sub_100A602E4((uint64_t)&v82);
  swift_unknownObjectRelease();
  if (!*((void *)&v83 + 1))
  {
LABEL_17:
    sub_100522F00((uint64_t)&v82, &qword_101685C60);
    unsigned int v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    v74(v17, 1, 1, v18);
LABEL_18:
    sub_100522F00((uint64_t)v17, &qword_101685D68);
    if (qword_10166FB88 == -1)
    {
LABEL_19:
      swift_beginAccess();
      uint64_t v46 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      initeCGFloat d = swift_initStackObject();
      uint64_t v48 = inited;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      int v41 = v31;
      BOOL v49 = v31 == 0;
      if (v31) {
        uint64_t v50 = 0x5320646572616853;
      }
      else {
        uint64_t v50 = 0x2065746176697250;
      }
      if (v49) {
        unint64_t v51 = 0xED000065706F6353;
      }
      else {
        unint64_t v51 = 0xEC00000065706F63;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(v48 + 32) = v50;
      *(void *)(v48 + 40) = v51;
      id v52 = v46;
      uint64_t v53 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v52, (uint64_t)&_mh_execute_header, v53, (uint64_t)"<%{public}@> Failed to decode sync metadata.", 44, 2, v48);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      goto LABEL_26;
    }
LABEL_37:
    swift_once();
    goto LABEL_19;
  }
  sub_1005057FC(&qword_101685D70);
  int v36 = swift_dynamicCast();
  unsigned int v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v74(v17, v36 ^ 1u, 1, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1) {
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
  *((void *)&v83 + 1) = v18;
  uint64_t v84 = sub_1008CE3C8(&qword_10167B448, 255, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.State.Serialization);
  uint64_t v37 = sub_1005767BC((uint64_t *)&v82);
  (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 16))(v37, v22, v18);
  uint64_t v38 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata];
  swift_beginAccess();
  sub_1006063BC((uint64_t)&v82, v38, &qword_101685C60);
  swift_endAccess();
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v73 = (id)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v39 = swift_initStackObject();
  uint64_t v40 = v39;
  *(_OWORD *)(v39 + 16) = xmmword_10117E810;
  int v41 = v31;
  BOOL v42 = v31 == 0;
  if (v31) {
    uint64_t v43 = 0x5320646572616853;
  }
  else {
    uint64_t v43 = 0x2065746176697250;
  }
  if (v42) {
    unint64_t v34 = 0xED000065706F6353;
  }
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = sub_100528BE4();
  *(void *)(v40 + 32) = v43;
  *(void *)(v40 + 40) = v34;
  id v44 = v73;
  uint64_t v45 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v45, (uint64_t)"<%{public}@> Successfully loaded sync metadata", 46, 2, v40);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v33, v18);
LABEL_26:
  uint64_t v54 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata];
  swift_beginAccess();
  sub_100522E9C(v54, (uint64_t)&v82, &qword_101685C60);
  if (*((void *)&v83 + 1))
  {
    sub_1005057FC(&qword_101685D70);
    uint64_t v55 = (uint64_t)v81;
    int v56 = swift_dynamicCast();
    v74((char *)v55, v56 ^ 1u, 1, v18);
    unint64_t v57 = 0xEC00000065706F63;
    uint64_t v58 = 0x5320646572616853;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v55, 1, v18) != 1) {
      goto LABEL_35;
    }
  }
  else
  {
    sub_100522F00((uint64_t)&v82, &qword_101685C60);
    v74(v81, 1, 1, v18);
    unint64_t v57 = 0xEC00000065706F63;
    uint64_t v58 = 0x5320646572616853;
  }
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v59 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v60 = swift_initStackObject();
  uint64_t v61 = v60;
  *(_OWORD *)(v60 + 16) = xmmword_10117E810;
  if (!v41)
  {
    uint64_t v58 = 0x2065746176697250;
    unint64_t v57 = 0xED000065706F6353;
  }
  *(void *)(v60 + 56) = &type metadata for String;
  *(void *)(v60 + 64) = sub_100528BE4();
  *(void *)(v61 + 32) = v58;
  *(void *)(v61 + 40) = v57;
  id v62 = v59;
  uint64_t v63 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v62, (uint64_t)&_mh_execute_header, v63, (uint64_t)"<%{public}@> Sync metadata is of wrong type. Setting up with nil metadata. This will lead to refetching all CloudKit data.", 122, 2, v61);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

LABEL_35:
  uint64_t v64 = (uint64_t)v81;
  sub_100522E9C((uint64_t)v81, v76, &qword_101685D68);
  sub_1008CE3C8(&qword_101685C50, v65, (void (*)(uint64_t))type metadata accessor for CRLSyncController);
  id v66 = v75;
  id v67 = v1;
  int64_t v68 = v78;
  CKSyncEngine.Configuration.init(database:stateSerialization:delegate:)();
  uint64_t v70 = v79;
  uint64_t v69 = v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v77, v68, v80);
  type metadata accessor for CKSyncEngine();
  swift_allocObject();
  uint64_t v71 = CKSyncEngine.init(_:)();

  (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v69);
  sub_100522F00(v64, &qword_101685D68);
  return v71;
}

void sub_1008B2CA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = OBJC_IVAR____TtC8Freeform17CRLSyncController_queue;
  uint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v9 = v11;
  (*(void (**)(void *, void, uint64_t, __n128))(v5 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v4, v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v9, v4);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v13 = *(void **)(v2 + v10);
  LODWORD(v4) = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
  type metadata accessor for CRLSyncActivityThrottlingScheduler();
  uint64_t v14 = swift_allocObject();
  id v15 = v13;
  sub_1008D28B8(a1);
  sub_1008ACD58(v15, v4, a1);
  uint64_t v16 = OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler;
  *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler) = v14;
  swift_release();
  if (*(void *)(v2 + v16))
  {
    swift_retain();
    sub_1008B11C4();
    sub_1008B2F88();
    swift_release();
    return;
  }
  if (qword_10166FB88 != -1) {
    goto LABEL_13;
  }
LABEL_5:
  swift_beginAccess();
  int64_t v17 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v19 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  BOOL v20 = v4 == 0;
  if (v4) {
    uint64_t v21 = 0x5320646572616853;
  }
  else {
    uint64_t v21 = 0x2065746176697250;
  }
  if (v20) {
    unint64_t v22 = 0xED000065706F6353;
  }
  else {
    unint64_t v22 = 0xEC00000065706F63;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v22;
  id v23 = v17;
  uint64_t v24 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"<%{public}@> Attempting to setup scheduler but throttling scheduler not found", 77, 2, v19);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_1008B2F88()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v4 = __chkstk_darwin(v1, v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v7 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t, __n128))(v2 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v1, v4);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v6, v1);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_5;
  }
  if (*(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler])
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v0;
    swift_retain();
    uint64_t v10 = v0;
    sub_1008B0EE4((uint64_t)&unk_101685D50, v9, 1);
    swift_release();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    id v12 = v10;
    sub_1008B0EE4((uint64_t)&unk_101685D60, v11, 0);
    swift_release();
    swift_release();
    return;
  }
  if (qword_10166FB88 != -1) {
    goto LABEL_13;
  }
LABEL_5:
  swift_beginAccess();
  uint64_t v13 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v15 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v16 = 0x5320646572616853;
  }
  else {
    uint64_t v16 = 0x2065746176697250;
  }
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v17 = 0xEC00000065706F63;
  }
  else {
    unint64_t v17 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v17;
  id v18 = v13;
  uint64_t v19 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"<%{public}@> Attempting to register scheduler activities but scheduler not found", 80, 2, v15);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_1008B329C(uint64_t a1)
{
  v1[9] = a1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DispatchQoS();
  v1[13] = v3;
  v1[14] = *(void *)(v3 - 8);
  v1[15] = swift_task_alloc();
  return _swift_task_switch(sub_1008B33B8, 0, 0);
}

uint64_t sub_1008B33B8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v13 = v0[14];
  uint64_t v14 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v12 = v0[11];
  __n128 v4 = (char *)v0[9];
  uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  v0[6] = sub_1008D2894;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(void *)"";
  v0[4] = sub_100679958;
  v0[5] = &unk_101519550;
  __n128 v7 = _Block_copy(v0 + 2);
  id v8 = v5;
  uint64_t v9 = v4;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v7);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1008B35FC(uint64_t a1)
{
  v1[9] = a1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DispatchQoS();
  v1[13] = v3;
  v1[14] = *(void *)(v3 - 8);
  v1[15] = swift_task_alloc();
  return _swift_task_switch(sub_1008B3718, 0, 0);
}

uint64_t sub_1008B3718()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v13 = v0[14];
  uint64_t v14 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v12 = v0[11];
  __n128 v4 = (char *)v0[9];
  uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  v0[6] = sub_1008D2870;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(void *)"";
  v0[4] = sub_100679958;
  v0[5] = &unk_101519500;
  __n128 v7 = _Block_copy(v0 + 2);
  id v8 = v5;
  uint64_t v9 = v4;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v7);

  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1008B395C(uint64_t a1)
{
  id v8 = 0;
  long long v6 = 0u;
  long long v7 = 0u;
  uint64_t v2 = a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata;
  swift_beginAccess();
  sub_1006063BC((uint64_t)&v6, v2, &qword_101685C60);
  swift_endAccess();
  uint64_t v3 = sub_1008B21F0();
  *((void *)&v7 + 1) = type metadata accessor for CKSyncEngine();
  id v8 = &off_10167B450;
  *(void *)&long long v6 = v3;
  uint64_t v4 = a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
  swift_beginAccess();
  sub_1006063BC((uint64_t)&v6, v4, &qword_101685C68);
  return swift_endAccess();
}

void sub_1008B3A28(uint64_t a1, char a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (!__CocoaSet.count.getter()) {
      return;
    }
  }
  else if (!*(void *)(a1 + 16))
  {
    return;
  }
  uint64_t v9 = (uint64_t)v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
  swift_beginAccess();
  sub_100522E9C(v9, (uint64_t)&v21, &qword_101685C68);
  if (v22)
  {
    sub_10053974C(&v21, (uint64_t)v23);
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    sub_1005498A4((uint64_t)v23, (uint64_t)&v21);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    sub_10053974C(&v21, v11 + 32);
    *(void *)(v11 + 72) = a1;
    *(void *)(v11 + 80) = v2;
    *(unsigned char *)(v11 + 88) = a2;
    swift_bridgeObjectRetain();
    id v12 = v2;
    sub_1006D9104((uint64_t)v8, (uint64_t)&unk_101685D40, v11);
    swift_release();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v23);
  }
  else
  {
    sub_100522F00((uint64_t)&v21, &qword_101685C68);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v13 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v15 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*((unsigned char *)v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v16 = 0x5320646572616853;
    }
    else {
      uint64_t v16 = 0x2065746176697250;
    }
    if (*((unsigned char *)v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v17 = 0xEC00000065706F63;
    }
    else {
      unint64_t v17 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v17;
    id v18 = v13;
    uint64_t v19 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"<%{public}@> Can't fetchRecords. There is no syncEngine set", 59, 2, v15);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_1008B3D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 520) = a7;
  *(void *)(v7 + 408) = a5;
  *(void *)(v7 + 416) = a6;
  *(void *)(v7 + 400) = a4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v7 + 424) = v8;
  *(void *)(v7 + 432) = *(void *)(v8 - 8);
  *(void *)(v7 + 440) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  *(void *)(v7 + 448) = v9;
  *(void *)(v7 + 456) = *(void *)(v9 - 8);
  *(void *)(v7 + 464) = swift_task_alloc();
  return _swift_task_switch(sub_1008B3E4C, 0, 0);
}

uint64_t sub_1008B3E4C()
{
  uint64_t v1 = sub_10050F848(*(void **)(v0 + 400), *(void *)(*(void *)(v0 + 400) + 24));
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1006BA59C(v2);
  *(void *)(v0 + 472) = v3;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 480) = *v1;
  swift_retain_n();
  *(void *)(v0 + 488) = CKSyncEngine.database.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 496) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1008B3F38;
  return CKDatabase.records(for:desiredKeys:)(v3, 0);
}

uint64_t sub_1008B3F38(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 504) = a1;
  *(void *)(v3 + 512) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1008B4A84;
  }
  else
  {

    uint64_t v4 = sub_1008B4054;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_1008B4054()
{
  aBlock = (void *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v78 = (void *)(v0 + 360);
  uint64_t v72 = (void *)(v0 + 376);
  uint64_t v2 = (void **)(v0 + 384);
  uint64_t v76 = *(void *)(v0 + 416);
  swift_release_n();
  swift_release();
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v73 = v1 + 64;
  uint64_t v5 = -1;
  uint64_t v79 = v1;
  uint64_t v6 = -1 << *(unsigned char *)(v1 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v4;
  uint64_t v75 = OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope;
  int64_t v74 = (unint64_t)(63 - v6) >> 6;
  uint64_t v71 = (uint64_t)_swiftEmptyDictionarySingleton;
  uint64_t v77 = v2;
  if ((v5 & v4) != 0) {
    goto LABEL_15;
  }
LABEL_16:
  while (2)
  {
    int64_t v20 = v3 + 1;
    if (!__OFADD__(v3, 1))
    {
      uint64_t v21 = v80;
      if (v20 >= v74) {
        goto LABEL_60;
      }
      unint64_t v22 = *(void *)(v73 + 8 * v20);
      ++v3;
      if (!v22)
      {
        int64_t v3 = v20 + 1;
        if (v20 + 1 >= v74) {
          goto LABEL_60;
        }
        unint64_t v22 = *(void *)(v73 + 8 * v3);
        if (!v22)
        {
          int64_t v3 = v20 + 2;
          if (v20 + 2 >= v74) {
            goto LABEL_60;
          }
          unint64_t v22 = *(void *)(v73 + 8 * v3);
          if (!v22)
          {
            int64_t v23 = v20 + 3;
            if (v23 < v74)
            {
              unint64_t v22 = *(void *)(v73 + 8 * v23);
              if (v22)
              {
                int64_t v3 = v23;
                goto LABEL_29;
              }
              while (1)
              {
                int64_t v3 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_72;
                }
                if (v3 >= v74) {
                  break;
                }
                unint64_t v22 = *(void *)(v73 + 8 * v3);
                ++v23;
                if (v22) {
                  goto LABEL_29;
                }
              }
            }
LABEL_60:
            swift_release();
            if ((v71 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              uint64_t v56 = __CocoaDictionary.count.getter();
              swift_bridgeObjectRelease();
              if (v56)
              {
LABEL_62:
                uint64_t v58 = *(void *)(v80 + 456);
                uint64_t v57 = *(void *)(v80 + 464);
                uint64_t v59 = *(void *)(v80 + 440);
                uint64_t v82 = *(void *)(v80 + 448);
                uint64_t v61 = *(void *)(v80 + 424);
                uint64_t v60 = *(void *)(v80 + 432);
                char v62 = *(unsigned char *)(v80 + 520);
                uint64_t v63 = *(char **)(v80 + 416);
                uint64_t v64 = *(void **)&v63[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
                uint64_t v65 = swift_allocObject();
                *(void *)(v65 + 16) = v63;
                *(void *)(v65 + 24) = v71;
                *(unsigned char *)(v65 + 32) = v62;
                *(void *)(v80 + 272) = sub_1008D273C;
                *(void *)(v80 + 280) = v65;
                *(void *)(v80 + 240) = _NSConcreteStackBlock;
                *(void *)(v80 + 248) = *(void *)"";
                *(void *)(v80 + 256) = sub_100679958;
                *(void *)(v80 + 264) = &unk_101519460;
                id v66 = _Block_copy(aBlock);
                id v67 = v64;
                int64_t v68 = v63;
                static DispatchQoS.unspecified.getter();
                *(void *)(v80 + 392) = _swiftEmptyArrayStorage;
                sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
                sub_1005057FC((uint64_t *)&unk_1016725D0);
                sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
                uint64_t v21 = v80;
                dispatch thunk of SetAlgebra.init<A>(_:)();
                OS_dispatch_queue.async(group:qos:flags:execute:)();
                _Block_release(v66);

                (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
                (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v82);
                swift_release();
LABEL_65:
                swift_task_dealloc();
                swift_task_dealloc();
                uint64_t v69 = *(void (**)(void))(v21 + 8);
                v69();
                return;
              }
            }
            else if (*(void *)(v71 + 16))
            {
              goto LABEL_62;
            }
            swift_bridgeObjectRelease();
            goto LABEL_65;
          }
        }
      }
LABEL_29:
      unint64_t v7 = (v22 - 1) & v22;
      for (unint64_t i = __clz(__rbit64(v22)) + (v3 << 6); ; unint64_t i = v18 | (v3 << 6))
      {
        uint64_t v24 = *(void **)(*(void *)(v79 + 48) + 8 * i);
        uint64_t v25 = *(void *)(v79 + 56) + 16 * i;
        __n128 v26 = *(void **)v25;
        if ((*(unsigned char *)(v25 + 8) & 1) == 0) {
          break;
        }
        int64_t v81 = v3;
        *uint64_t v78 = v26;
        sub_100626B48(v26, 1);
        sub_100626B48(v26, 1);
        id v27 = v24;
        sub_1005057FC(&qword_101672BD0);
        type metadata accessor for CKError(0);
        if (swift_dynamicCast())
        {
          uint64_t v28 = *v2;
          if (qword_10166FB88 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v29 = (void *)static OS_os_log.dataSync;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          initeCGFloat d = swift_initStackObject();
          int v31 = (void *)inited;
          *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
          if (*(unsigned char *)(v76 + v75)) {
            uint64_t v32 = 0x5320646572616853;
          }
          else {
            uint64_t v32 = 0x2065746176697250;
          }
          if (*(unsigned char *)(v76 + v75)) {
            unint64_t v33 = 0xEC00000065706F63;
          }
          else {
            unint64_t v33 = 0xED000065706F6353;
          }
          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = sub_100528BE4();
          v31[4] = v32;
          v31[5] = v33;
          *uint64_t v72 = v28;
          sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
          id v34 = v29;
          uint64_t v35 = _BridgedStoredNSError.errorCode.getter();
          v31[12] = &type metadata for Int;
          v31[13] = &protocol witness table for Int;
          v31[9] = v35;
          uint64_t v36 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v36, (uint64_t)"<%{public}@> Received cloud error fetching %d", 45, 2, (uint64_t)v31);

          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          sub_100541080(v26, 1);
        }
        else
        {
          if (qword_10166FB88 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v8 = (void *)static OS_os_log.dataSync;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v9 = swift_initStackObject();
          uint64_t v10 = (void *)v9;
          *(_OWORD *)(v9 + 16) = xmmword_10117D8C0;
          if (*(unsigned char *)(v76 + v75)) {
            uint64_t v11 = 0x5320646572616853;
          }
          else {
            uint64_t v11 = 0x2065746176697250;
          }
          if (*(unsigned char *)(v76 + v75)) {
            unint64_t v12 = 0xEC00000065706F63;
          }
          else {
            unint64_t v12 = 0xED000065706F6353;
          }
          *(void *)(v9 + 56) = &type metadata for String;
          unint64_t v13 = sub_100528BE4();
          v10[8] = v13;
          v10[4] = v11;
          v10[5] = v12;
          swift_getErrorValue();
          id v14 = v8;
          uint64_t v15 = Error.localizedDescription.getter();
          v10[12] = &type metadata for String;
          v10[13] = v13;
          v10[9] = v15;
          v10[10] = v16;
          uint64_t v17 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v17, (uint64_t)"<%{public}@> Unexpected error received, fetching records to overwrite. error: %@", 80, 2, (uint64_t)v10);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          sub_100541080(v26, 1);
        }
        uint64_t v2 = v77;
        int64_t v3 = v81;
        if (!v7) {
          goto LABEL_16;
        }
LABEL_15:
        unint64_t v18 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
      }
      uint64_t v37 = v71;
      if ((v71 & 0xC000000000000001) != 0)
      {
        if (v71 >= 0) {
          uint64_t v37 = v71 & 0xFFFFFFFFFFFFFF8;
        }
        sub_100626B48(v26, 0);
        sub_100626B48(v26, 0);
        id v38 = v24;
        uint64_t v39 = __CocoaDictionary.count.getter();
        if (__OFADD__(v39, 1)) {
          goto LABEL_74;
        }
        uint64_t v37 = sub_1009ECBF8(v37, v39 + 1);
      }
      else
      {
        sub_100626B48(v26, 0);
        sub_100626B48(v26, 0);
        id v40 = v24;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v43 = sub_100956CAC((uint64_t)v24);
      uint64_t v44 = *(void *)(v37 + 16);
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45)) {
        goto LABEL_73;
      }
      char v47 = v42;
      uint64_t v71 = v37;
      if (*(void *)(v37 + 24) < v46)
      {
        sub_10096A578(v46, isUniquelyReferenced_nonNull_native);
        uint64_t v71 = v37;
        unint64_t v48 = sub_100956CAC((uint64_t)v24);
        if ((v47 & 1) != (v49 & 1))
        {
          sub_10050BF48(0, &qword_10167BED0);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          return;
        }
        unint64_t v43 = v48;
        if ((v47 & 1) == 0) {
          goto LABEL_56;
        }
LABEL_54:
        uint64_t v50 = *(void *)(v71 + 56);

        *(void *)(v50 + 8 * v43) = v26;
        goto LABEL_58;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v42) {
          goto LABEL_54;
        }
      }
      else
      {
        sub_100981CE4();
        uint64_t v71 = v37;
        if (v47) {
          goto LABEL_54;
        }
      }
LABEL_56:
      *(void *)(v71 + 8 * (v43 >> 6) + 64) |= 1 << v43;
      uint64_t v51 = 8 * v43;
      *(void *)(*(void *)(v71 + 48) + v51) = v24;
      *(void *)(*(void *)(v71 + 56) + v51) = v26;
      uint64_t v52 = *(void *)(v71 + 16);
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53) {
        goto LABEL_75;
      }
      *(void *)(v71 + 16) = v54;
      id v55 = v24;
LABEL_58:
      swift_bridgeObjectRelease();

      sub_100541080(v26, 0);
      if (!v7) {
        continue;
      }
      goto LABEL_15;
    }
    break;
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
}

uint64_t sub_1008B4A84()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008B4B1C(uint64_t a1, unint64_t a2, int a3)
{
  unint64_t v5 = sub_100A3BA18((uint64_t)_swiftEmptyArrayStorage);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    uint64_t v6 = &_swiftEmptySetSingleton;
    unint64_t v7 = &_swiftEmptySetSingleton;
    goto LABEL_3;
  }
  if (_CocoaArrayWrapper.endIndex.getter())
  {
    sub_100508C0C((unint64_t)_swiftEmptyArrayStorage);
    unint64_t v7 = v9;
  }
  else
  {
    unint64_t v7 = &_swiftEmptySetSingleton;
    uint64_t v6 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
      goto LABEL_3;
    }
  }
  if (_CocoaArrayWrapper.endIndex.getter())
  {
    sub_100508C0C((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v6 = v10;
  }
  else
  {
    uint64_t v6 = &_swiftEmptySetSingleton;
  }
LABEL_3:
  sub_1008BB6AC(a2, v5, (uint64_t)v7, (uint64_t)v6, a3, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_1008B4C34(void *a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v86 = a5;
  int v84 = a3;
  int v85 = a2;
  id v88 = a1;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  id v87 = (char *)v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine];
  swift_beginAccess();
  sub_100522E9C(v20, (uint64_t)&v90, &qword_101685C68);
  if (v92)
  {
    uint64_t v80 = v13;
    int64_t v81 = v11;
    uint64_t v82 = v12;
    uint64_t v83 = v8;
    unint64_t v21 = 0xED000065706F6353;
    unint64_t v22 = 0xEC00000065706F63;
    uint64_t v23 = 0x5320646572616853;
    sub_10053974C(&v90, (uint64_t)v95);
    uint64_t v24 = &v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v26 = *(void *)&v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler];
      if (v26)
      {
        uint64_t v78 = Strong;
        uint64_t v79 = v7;
        v77[0] = *((void *)v24 + 1);
        uint64_t v27 = v26;
        uint64_t v28 = *(void *)(v26 + 16);
        uint64_t v29 = *(double (**)(uint64_t))(v28 + 72);
        uint64_t v30 = *(void *)(v28 + 80);
        double v31 = *(double *)(v28 + 96);
        swift_retain();
        v77[2] = v27;
        swift_retain();
        v77[1] = v30;
        sub_100ED16A8(1, a4, v29);
        double v33 = v31 + v32;
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v34 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        initeCGFloat d = swift_initStackObject();
        uint64_t v36 = inited;
        *(_OWORD *)(inited + 16) = xmmword_10117DF40;
        if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
          uint64_t v37 = 0x5320646572616853;
        }
        else {
          uint64_t v37 = 0x2065746176697250;
        }
        if (!v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
          unint64_t v22 = 0xED000065706F6353;
        }
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v38 = sub_100528BE4();
        *(void *)(v36 + 64) = v38;
        *(void *)(v36 + 32) = v37;
        *(void *)(v36 + 40) = v22;
        id v39 = v34;
        id v40 = [v88 zoneName];
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

        *(void *)(v36 + 96) = &type metadata for String;
        *(void *)(v36 + 104) = v38;
        *(void *)(v36 + 72) = v41;
        *(void *)(v36 + 80) = v43;
        *(void *)(v36 + 136) = &type metadata for Double;
        *(void *)(v36 + 144) = &protocol witness table for Double;
        *(double *)(v36 + 112) = v33;
        uint64_t v44 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v44, (uint64_t)"<%{public}@> Fetching targetted changes for zoneID: <%{public}@> delay:%ld", 74, 2, v36);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        static TaskPriority.userInitiated.getter();
        uint64_t v45 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v19, 0, 1, v45);
        uint64_t v46 = swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_1005498A4((uint64_t)v95, (uint64_t)&v90);
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = v46;
        id v48 = v88;
        *(void *)(v47 + 24) = v88;
        sub_10053974C(&v90, v47 + 32);
        *(unsigned char *)(v47 + 72) = v84 & 1;
        *(void *)(v47 + 80) = v86;
        *(unsigned char *)(v47 + 88) = v85;
        uint64_t v49 = v77[0];
        *(void *)(v47 + 96) = v78;
        *(void *)(v47 + 104) = v49;
        id v50 = v48;
        swift_unknownObjectRetain();
        uint64_t v51 = sub_100EC9964((uint64_t)v19, (uint64_t)&unk_101685D20, v47, v33);
        swift_release();
        sub_100522F00((uint64_t)v19, &qword_101672BB0);
        uint64_t v52 = *(void **)&v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
        BOOL v53 = (void *)swift_allocObject();
        void v53[2] = v5;
        v53[3] = v50;
        v53[4] = v51;
        uint64_t v93 = sub_1008D2498;
        uint64_t v94 = v53;
        *(void *)&long long v90 = _NSConcreteStackBlock;
        *((void *)&v90 + 1) = *(void *)"";
        int64_t v91 = sub_100679958;
        uint64_t v92 = &unk_101519348;
        uint64_t v54 = _Block_copy(&v90);
        id v55 = v50;
        id v56 = v52;
        uint64_t v57 = v5;
        swift_retain();
        uint64_t v58 = v87;
        static DispatchQoS.unspecified.getter();
        uint64_t v89 = _swiftEmptyArrayStorage;
        sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1005057FC((uint64_t *)&unk_1016725D0);
        sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
        uint64_t v59 = v81;
        uint64_t v60 = v79;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v54);
        swift_release();
        swift_unknownObjectRelease();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v60);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v58, v82);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v95);
        swift_release();
        return;
      }
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v73 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v74 = swift_initStackObject();
      uint64_t v75 = v74;
      *(_OWORD *)(v74 + 16) = xmmword_10117E810;
      if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
        unint64_t v21 = 0xEC00000065706F63;
      }
      else {
        uint64_t v23 = 0x2065746176697250;
      }
      *(void *)(v74 + 56) = &type metadata for String;
      *(void *)(v74 + 64) = sub_100528BE4();
      *(void *)(v75 + 32) = v23;
      *(void *)(v75 + 40) = v21;
      id v71 = v73;
      uint64_t v76 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v71, (uint64_t)&_mh_execute_header, v76, (uint64_t)"<%{public}@> Can't fetch records for zoneID. There is no scheduler set", 70, 2, v75);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      int64_t v68 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v69 = swift_initStackObject();
      uint64_t v70 = v69;
      *(_OWORD *)(v69 + 16) = xmmword_10117E810;
      if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
        unint64_t v21 = 0xEC00000065706F63;
      }
      else {
        uint64_t v23 = 0x2065746176697250;
      }
      *(void *)(v69 + 56) = &type metadata for String;
      *(void *)(v69 + 64) = sub_100528BE4();
      *(void *)(v70 + 32) = v23;
      *(void *)(v70 + 40) = v21;
      id v71 = v68;
      uint64_t v72 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v71, (uint64_t)&_mh_execute_header, v72, (uint64_t)"<%{public}@> Can't fetch records for zoneID. There is no datasource set", 71, 2, v70);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
    }

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v95);
    return;
  }
  sub_100522F00((uint64_t)&v90, &qword_101685C68);
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v61 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v62 = swift_initStackObject();
  uint64_t v63 = v62;
  *(_OWORD *)(v62 + 16) = xmmword_10117E810;
  if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v64 = 0x5320646572616853;
  }
  else {
    uint64_t v64 = 0x2065746176697250;
  }
  if (v5[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v65 = 0xEC00000065706F63;
  }
  else {
    unint64_t v65 = 0xED000065706F6353;
  }
  *(void *)(v62 + 56) = &type metadata for String;
  *(void *)(v62 + 64) = sub_100528BE4();
  *(void *)(v63 + 32) = v64;
  *(void *)(v63 + 40) = v65;
  id v66 = v61;
  uint64_t v67 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v67, (uint64_t)"<%{public}@> Can't fetch records for zoneID. There is no syncEngine set", 71, 2, v63);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_1008B56C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 544) = v13;
  *(void *)(v8 + 536) = a8;
  *(unsigned char *)(v8 + 657) = a7;
  *(void *)(v8 + 528) = a6;
  *(unsigned char *)(v8 + 656) = a5;
  *(void *)(v8 + 520) = a4;
  *(void *)(v8 + 504) = a2;
  *(void *)(v8 + 512) = a3;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v8 + 552) = v9;
  *(void *)(v8 + 560) = *(void *)(v9 - 8);
  *(void *)(v8 + 568) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  *(void *)(v8 + 576) = v10;
  *(void *)(v8 + 584) = *(void *)(v10 - 8);
  *(void *)(v8 + 592) = swift_task_alloc();
  return _swift_task_switch(sub_1008B5804, 0, 0);
}

uint64_t sub_1008B5804()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 600) = Strong;
  if (!Strong)
  {
LABEL_4:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  uint64_t v2 = (void *)Strong;
  if (static Task<>.isCancelled.getter())
  {
    uint64_t v3 = *(void *)(v0 + 512);
    swift_beginAccess();
    sub_10095C9A0(v3);
    swift_endAccess();

    swift_release();
    goto LABEL_4;
  }
  *(void *)(v0 + 608) = *sub_10050F848(*(void **)(v0 + 520), *(void *)(*(void *)(v0 + 520) + 24));
  swift_retain_n();
  *(void *)(v0 + 616) = CKSyncEngine.database.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 624) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1008B59A4;
  uint64_t v7 = *(void *)(v0 + 528);
  char v8 = *(unsigned char *)(v0 + 656);
  uint64_t v9 = *(void *)(v0 + 512);
  return sub_10074736C(v9, v8, v7);
}

uint64_t sub_1008B59A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 632) = a1;
  *(void *)(v4 + 640) = a2;
  *(void *)(v4 + 648) = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v5 = sub_1008B66A4;
  }
  else
  {

    unint64_t v5 = sub_1008B5AC8;
  }
  return _swift_task_switch(v5, 0, 0);
}

void sub_1008B5AC8()
{
  uint64_t v107 = v0;
  uint64_t v1 = *(void *)(v0 + 632);
  uint64_t v2 = (void **)(v0 + 456);
  uint64_t v92 = (void *)(v0 + 472);
  uint64_t v98 = (void *)(v0 + 480);
  uint64_t v97 = *(void *)(v0 + 600);
  swift_release_n();
  uint64_t v93 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  uint64_t v96 = OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope;
  int64_t v94 = (unint64_t)(63 - v4) >> 6;
  uint64_t v101 = v1;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v91 = (uint64_t)_swiftEmptyDictionarySingleton;
  uint64_t v100 = (void **)(v0 + 456);
  if (v5) {
    goto LABEL_15;
  }
LABEL_16:
  while (2)
  {
    int64_t v19 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    if (v19 >= v94) {
      goto LABEL_61;
    }
    unint64_t v20 = *(void *)(v93 + 8 * v19);
    ++v6;
    if (v20) {
      goto LABEL_29;
    }
    int64_t v6 = v19 + 1;
    if (v19 + 1 >= v94) {
      goto LABEL_61;
    }
    unint64_t v20 = *(void *)(v93 + 8 * v6);
    if (v20) {
      goto LABEL_29;
    }
    int64_t v6 = v19 + 2;
    if (v19 + 2 >= v94)
    {
LABEL_61:
      uint64_t v57 = v95[80];
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v58 = *(void *)(v57 + 16);
      if (!v58)
      {
        uint64_t v59 = 0;
        uint64_t v61 = _swiftEmptyDictionarySingleton;
LABEL_78:
        uint64_t v79 = (char *)v95[75];
        uint64_t v80 = v95[74];
        uint64_t v104 = v95[73];
        uint64_t v105 = v95[72];
        uint64_t v99 = v95[71];
        uint64_t v102 = v95[70];
        uint64_t v81 = v95[69];
        char v82 = *((unsigned char *)v95 + 657);
        uint64_t v83 = (void *)v95[64];
        swift_bridgeObjectRelease();
        int v84 = *(void **)&v79[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
        uint64_t v85 = swift_allocObject();
        *(void *)(v85 + 16) = v79;
        *(void *)(v85 + 24) = v83;
        *(void *)(v85 + 32) = v91;
        *(void *)(v85 + 40) = v61;
        *(unsigned char *)(v85 + 48) = v82;
        v95[34] = sub_1008D258C;
        v95[35] = v85;
        v95[30] = _NSConcreteStackBlock;
        v95[31] = *(void *)"";
        v95[32] = sub_100679958;
        v95[33] = &unk_1015193E8;
        uint64_t v86 = _Block_copy(v95 + 30);
        id v87 = v79;
        id v88 = v83;
        id v89 = v84;
        static DispatchQoS.unspecified.getter();
        v95[61] = _swiftEmptyArrayStorage;
        sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1005057FC((uint64_t *)&unk_1016725D0);
        sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v86);

        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v99, v81);
        (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v80, v105);
        swift_release();
        sub_1005174AC((uint64_t)v59);
        swift_task_dealloc();
        swift_task_dealloc();
        long long v90 = (void (*)(void))v95[1];
        v90();
        return;
      }
      uint64_t v59 = 0;
      uint64_t v60 = (uint64_t *)(v95[80] + 48);
      uint64_t v61 = _swiftEmptyDictionarySingleton;
      while (1)
      {
        uint64_t v62 = *(v60 - 1);
        uint64_t v63 = *v60;
        id v64 = (id)*(v60 - 2);
        swift_bridgeObjectRetain_n();
        id v65 = v64;
        sub_1005174AC((uint64_t)v59);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v106 = v61;
        unint64_t v68 = sub_100955F50(v62, v63);
        uint64_t v69 = v61[2];
        BOOL v70 = (v67 & 1) == 0;
        uint64_t v71 = v69 + v70;
        if (__OFADD__(v69, v70)) {
          goto LABEL_86;
        }
        char v72 = v67;
        if (v61[3] >= v71)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10098203C();
            uint64_t v61 = v106;
          }
        }
        else
        {
          sub_10096AB2C(v71, isUniquelyReferenced_nonNull_native);
          uint64_t v61 = v106;
          unint64_t v73 = sub_100955F50(v62, v63);
          if ((v72 & 1) != (v74 & 1)) {
            goto LABEL_81;
          }
          unint64_t v68 = v73;
        }
        swift_bridgeObjectRelease();
        if ((v72 & 1) == 0)
        {
          v61[(v68 >> 6) + 8] |= 1 << v68;
          uint64_t v75 = (uint64_t *)(v61[6] + 16 * v68);
          *uint64_t v75 = v62;
          v75[1] = v63;
          *(void *)(v61[7] + 8 * v68) = &_swiftEmptySetSingleton;
          uint64_t v76 = v61[2];
          uint64_t v77 = v76 + 1;
          BOOL v78 = __OFADD__(v76, 1);
          swift_bridgeObjectRetain();
          if (v78) {
            goto LABEL_87;
          }
          v61[2] = v77;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_100CBAB00(&v106, v65);

        swift_bridgeObjectRelease_n();
        v60 += 3;
        uint64_t v59 = sub_1008B6970;
        if (!--v58) {
          goto LABEL_78;
        }
      }
    }
    unint64_t v20 = *(void *)(v93 + 8 * v6);
    if (!v20)
    {
      int64_t v21 = v19 + 3;
      if (v21 < v94)
      {
        unint64_t v20 = *(void *)(v93 + 8 * v21);
        if (v20)
        {
          int64_t v6 = v21;
          goto LABEL_29;
        }
        while (1)
        {
          int64_t v6 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            break;
          }
          if (v6 >= v94) {
            goto LABEL_61;
          }
          unint64_t v20 = *(void *)(v93 + 8 * v6);
          ++v21;
          if (v20) {
            goto LABEL_29;
          }
        }
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        return;
      }
      goto LABEL_61;
    }
LABEL_29:
    unint64_t v5 = (v20 - 1) & v20;
    for (unint64_t i = __clz(__rbit64(v20)) + (v6 << 6); ; unint64_t i = v17 | (v6 << 6))
    {
      unint64_t v22 = *(void **)(*(void *)(v101 + 48) + 8 * i);
      uint64_t v23 = *(void *)(v101 + 56) + 16 * i;
      uint64_t v24 = *(void **)v23;
      if ((*(unsigned char *)(v23 + 8) & 1) == 0) {
        break;
      }
      *uint64_t v98 = v24;
      sub_100626B48(v24, 1);
      sub_100626B48(v24, 1);
      id v25 = v22;
      sub_1005057FC(&qword_101672BD0);
      type metadata accessor for CKError(0);
      unint64_t v103 = v5;
      if (swift_dynamicCast())
      {
        uint64_t v26 = *v2;
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v27 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        initeCGFloat d = swift_initStackObject();
        uint64_t v29 = (void *)inited;
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        if (*(unsigned char *)(v97 + v96)) {
          uint64_t v30 = 0x5320646572616853;
        }
        else {
          uint64_t v30 = 0x2065746176697250;
        }
        if (*(unsigned char *)(v97 + v96)) {
          unint64_t v31 = 0xEC00000065706F63;
        }
        else {
          unint64_t v31 = 0xED000065706F6353;
        }
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        v29[4] = v30;
        v29[5] = v31;
        void *v92 = v26;
        sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
        id v32 = v27;
        uint64_t v33 = _BridgedStoredNSError.errorCode.getter();
        v29[12] = &type metadata for Int;
        v29[13] = &protocol witness table for Int;
        v29[9] = v33;
        uint64_t v34 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v34, (uint64_t)"<%{public}@> Received cloud record error fetching records for ZoneID %d", 71, 2, (uint64_t)v29);

        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_100541080(v24, 1);
      }
      else
      {
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v7 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v8 = swift_initStackObject();
        uint64_t v9 = (void *)v8;
        *(_OWORD *)(v8 + 16) = xmmword_10117D8C0;
        if (*(unsigned char *)(v97 + v96)) {
          uint64_t v10 = 0x5320646572616853;
        }
        else {
          uint64_t v10 = 0x2065746176697250;
        }
        if (*(unsigned char *)(v97 + v96)) {
          unint64_t v11 = 0xEC00000065706F63;
        }
        else {
          unint64_t v11 = 0xED000065706F6353;
        }
        *(void *)(v8 + 56) = &type metadata for String;
        unint64_t v12 = sub_100528BE4();
        v9[8] = v12;
        v9[4] = v10;
        v9[5] = v11;
        swift_getErrorValue();
        id v13 = v7;
        uint64_t v14 = Error.localizedDescription.getter();
        v9[12] = &type metadata for String;
        v9[13] = v12;
        v9[9] = v14;
        v9[10] = v15;
        uint64_t v16 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v16, (uint64_t)"<%{public}@> Unexpected record error received, fetching records for zoneID to overwrite. error: %@", 98, 2, (uint64_t)v9);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_100541080(v24, 1);
      }
      uint64_t v2 = v100;
      unint64_t v5 = v103;
      if (!v103) {
        goto LABEL_16;
      }
LABEL_15:
      unint64_t v17 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
    }
    if ((v91 & 0xC000000000000001) != 0)
    {
      if (v91 < 0) {
        uint64_t v35 = v91;
      }
      else {
        uint64_t v35 = v91 & 0xFFFFFFFFFFFFFF8;
      }
      sub_100626B48(v24, 0);
      sub_100626B48(v24, 0);
      id v36 = v22;
      uint64_t v37 = __CocoaDictionary.count.getter();
      if (__OFADD__(v37, 1)) {
        goto LABEL_90;
      }
      Swift::Int v38 = sub_1009ECBF8(v35, v37 + 1);
    }
    else
    {
      sub_100626B48(v24, 0);
      sub_100626B48(v24, 0);
      id v39 = v22;
      Swift::Int v38 = v91;
    }
    id v40 = (void *)v38;
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v106 = v40;
    unint64_t v43 = sub_100956CAC((uint64_t)v22);
    uint64_t v44 = v40[2];
    BOOL v45 = (v42 & 1) == 0;
    uint64_t v46 = v44 + v45;
    if (__OFADD__(v44, v45)) {
      goto LABEL_89;
    }
    char v47 = v42;
    if (v40[3] >= v46)
    {
      if (v41)
      {
        id v50 = v40;
        uint64_t v91 = (uint64_t)v40;
        if (v42) {
          goto LABEL_55;
        }
      }
      else
      {
        sub_100981CE4();
        id v50 = v106;
        uint64_t v91 = (uint64_t)v106;
        if (v47) {
          goto LABEL_55;
        }
      }
LABEL_57:
      v50[(v43 >> 6) + 8] |= 1 << v43;
      uint64_t v52 = 8 * v43;
      *(void *)(v50[6] + v52) = v22;
      *(void *)(v50[7] + v52) = v24;
      uint64_t v53 = v50[2];
      BOOL v54 = __OFADD__(v53, 1);
      uint64_t v55 = v53 + 1;
      if (v54) {
        goto LABEL_91;
      }
      v50[2] = v55;
      id v56 = v22;
LABEL_59:
      swift_bridgeObjectRelease();

      sub_100541080(v24, 0);
      if (!v5) {
        continue;
      }
      goto LABEL_15;
    }
    break;
  }
  sub_10096A578(v46, v41);
  unint64_t v48 = sub_100956CAC((uint64_t)v22);
  if ((v47 & 1) == (v49 & 1))
  {
    unint64_t v43 = v48;
    id v50 = v106;
    uint64_t v91 = (uint64_t)v106;
    if ((v47 & 1) == 0) {
      goto LABEL_57;
    }
LABEL_55:
    uint64_t v51 = v50[7];

    *(void *)(v51 + 8 * v43) = v24;
    goto LABEL_59;
  }
  sub_10050BF48(0, &qword_10167BED0);
LABEL_81:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1008B66A4()
{
  uint64_t v1 = v0[81];
  uint64_t v2 = (char *)v0[75];
  uint64_t v3 = v0[74];
  uint64_t v17 = v0[73];
  uint64_t v18 = v0[72];
  uint64_t v4 = v0[71];
  uint64_t v16 = v0[70];
  uint64_t v15 = v0[69];
  char v5 = *((unsigned char *)v0 + 657);
  int64_t v6 = (void *)v0[64];
  long long v19 = *(_OWORD *)(v0 + 67);

  swift_release_n();
  uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v6;
  *(void *)(v8 + 32) = v1;
  *(_OWORD *)(v8 + 40) = v19;
  *(unsigned char *)(v8 + 56) = v5;
  v0[40] = sub_1008D24D4;
  v0[41] = v8;
  v0[36] = _NSConcreteStackBlock;
  v0[37] = *(void *)"";
  v0[38] = sub_100679958;
  v0[39] = &unk_101519398;
  uint64_t v9 = _Block_copy(v0 + 36);
  uint64_t v10 = v2;
  id v11 = v7;
  id v12 = v6;
  swift_errorRetain();
  swift_unknownObjectRetain();
  static DispatchQoS.unspecified.getter();
  v0[58] = _swiftEmptyArrayStorage;
  sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v4, v15);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v3, v18);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

void sub_1008B6970(void *a1@<X8>)
{
  *a1 = &_swiftEmptySetSingleton;
}

uint64_t sub_1008B6980(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5)
{
  swift_beginAccess();
  sub_10095C9A0(a2);
  swift_endAccess();
  swift_release();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_100508C0C((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v10 = v12;
    }
    else
    {
      uint64_t v10 = &_swiftEmptySetSingleton;
      uint64_t v9 = &_swiftEmptySetSingleton;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
        goto LABEL_3;
      }
    }
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_100508C0C((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v9 = v13;
    }
    else
    {
      uint64_t v9 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    uint64_t v9 = &_swiftEmptySetSingleton;
    uint64_t v10 = &_swiftEmptySetSingleton;
  }
LABEL_3:
  sub_1008BB6AC(a3, a4, (uint64_t)v10, (uint64_t)v9, a5, 0, 0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008B6ACC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v92 = a6;
  uint64_t v93 = a4;
  uint64_t v9 = sub_1005057FC(&qword_101685C80);
  __chkstk_darwin(v9, v10);
  id v89 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v88 = (char *)&v83 - v14;
  uint64_t v15 = type metadata accessor for CRLZoneSyncResultScenarios();
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v86 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v87 = (uint64_t)&v83 - v29;
  uint64_t v90 = a1;
  swift_beginAccess();
  sub_10095C9A0(a2);
  swift_endAccess();
  swift_release();
  unint64_t v95 = a3;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  type metadata accessor for CKError(0);
  uint64_t v31 = v30;
  int v32 = swift_dynamicCast();
  uint64_t v91 = (void *)a2;
  if (v32)
  {
    uint64_t v33 = v94;
    uint64_t v34 = sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
    uint64_t v84 = v31;
    uint64_t v85 = v34;
    _BridgedStoredNSError.code.getter();
    char v35 = (v95 < 0x25) & (0x1000A002D8uLL >> v95);
    Date.init()();
    uint64_t v86 = v33;
    id v36 = (void *)_convertErrorToNSError(_:)();
    CKRetryAfterSecondsForError();

    uint64_t v37 = v19;
    uint64_t v38 = (uint64_t)v18;
    uint64_t v39 = v87;
    Date.advanced(by:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v37);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v39, 0, 1, v37);
    uint64_t v40 = (uint64_t)&v88[*(int *)(v9 + 48)];
    sub_100522E9C(v39, v40, &qword_101672EB0);
    *(_DWORD *)uint64_t v38 = 0;
    *(unsigned char *)(v38 + 4) = v35 ^ 1;
    uint64_t v41 = (uint64_t)&v89[*(int *)(v9 + 48)];
    sub_10051B3EC(v40, v41, &qword_101672EB0);
    char v42 = (unsigned char *)(v38 + *(int *)(v15 + 36));
    *char v42 = v35;
    sub_10051B3EC(v41, (uint64_t)&v42[*(int *)(v9 + 48)], &qword_101672EB0);
    *(void *)(v38 + *(int *)(v15 + 40)) = _swiftEmptyArrayStorage;
    sub_1005057FC(&qword_101685D28);
    unint64_t v43 = (int *)(sub_1005057FC(&qword_101685D30) - 8);
    unint64_t v44 = (*(unsigned __int8 *)(*(void *)v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v43 + 80);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_10117E810;
    uint64_t v46 = v45 + v44 + v43[14];
    char v47 = v91;
    *(void *)(v45 + v44) = v91;
    sub_1008D11CC(v38, v46, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    id v48 = v47;
    unint64_t v49 = sub_100A3BB3C(v45);
    sub_100A61C14(v49, v92);
    swift_bridgeObjectRelease();
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v50 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v52 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    if (*(unsigned char *)(v90 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v53 = 0x5320646572616853;
    }
    else {
      uint64_t v53 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v90 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v54 = 0xEC00000065706F63;
    }
    else {
      unint64_t v54 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    v52[4] = v53;
    v52[5] = v54;
    uint64_t v55 = v86;
    int64_t v94 = v86;
    id v56 = v50;
    uint64_t v57 = _BridgedStoredNSError.errorCode.getter();
    v52[12] = &type metadata for Int;
    v52[13] = &protocol witness table for Int;
    v52[9] = v57;
    uint64_t v58 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v56, (uint64_t)&_mh_execute_header, v58, (uint64_t)"<%{public}@> Received cloud error fetching records for ZoneID %d", 64, 2, (uint64_t)v52);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_1008D0E78(v38, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    return sub_100522F00(v87, &qword_101672EB0);
  }
  else
  {
    uint64_t v83 = v20;
    uint64_t v84 = v19;
    uint64_t v85 = v15;
    uint64_t v87 = v9;
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v60 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v61 = swift_initStackObject();
    uint64_t v62 = (void *)v61;
    *(_OWORD *)(v61 + 16) = xmmword_10117D8C0;
    if (*(unsigned char *)(v90 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v63 = 0x5320646572616853;
    }
    else {
      uint64_t v63 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v90 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v64 = 0xEC00000065706F63;
    }
    else {
      unint64_t v64 = 0xED000065706F6353;
    }
    *(void *)(v61 + 56) = &type metadata for String;
    unint64_t v65 = sub_100528BE4();
    v62[8] = v65;
    v62[4] = v63;
    v62[5] = v64;
    swift_getErrorValue();
    id v66 = v60;
    uint64_t v67 = Error.localizedDescription.getter();
    v62[12] = &type metadata for String;
    v62[13] = v65;
    v62[9] = v67;
    v62[10] = v68;
    uint64_t v69 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v69, (uint64_t)"<%{public}@> Received error fetching records for ZoneID <%{public}@>", 68, 2, (uint64_t)v62);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_1005057FC(&qword_101685D28);
    BOOL v70 = (int *)(sub_1005057FC(&qword_101685D30) - 8);
    unint64_t v71 = (*(unsigned __int8 *)(*(void *)v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v70 + 80);
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_10117E810;
    unint64_t v73 = v72 + v71 + v70[14];
    char v74 = v91;
    *(void *)(v72 + v71) = v91;
    uint64_t v75 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v86, 1, 1, v84);
    uint64_t v76 = v87;
    uint64_t v77 = (uint64_t)&v88[*(int *)(v87 + 48)];
    sub_10051B3EC(v75, v77, &qword_101672EB0);
    *(_DWORD *)unint64_t v73 = 0;
    *(unsigned char *)(v73 + 4) = 0;
    uint64_t v78 = (uint64_t)&v89[*(int *)(v76 + 48)];
    sub_10051B3EC(v77, v78, &qword_101672EB0);
    uint64_t v79 = v85;
    uint64_t v80 = (unsigned char *)(v73 + *(int *)(v85 + 36));
    *uint64_t v80 = 0;
    sub_10051B3EC(v78, (uint64_t)&v80[*(int *)(v76 + 48)], &qword_101672EB0);
    *(void *)(v73 + *(int *)(v79 + 40)) = _swiftEmptyArrayStorage;
    id v81 = v74;
    unint64_t v82 = sub_100A3BB3C(v72);
    sub_100A61C14(v82, v92);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1008B7440(uint64_t a1, void *a2, uint64_t a3)
{
  char v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_targetedFetchTasks);
  swift_beginAccess();
  id v6 = a2;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v5;
  *char v5 = 0x8000000000000000;
  sub_100976F74(a3, v6, isUniquelyReferenced_nonNull_native);
  *char v5 = v9;

  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1008B74F0(char a1)
{
  return sub_1008B784C(a1, (uint64_t)&unk_101519290, (uint64_t)sub_1008D22C8, (uint64_t)&unk_1015192A8);
}

void sub_1008B7518(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101685D00);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for CRLSyncActivity(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler))
  {
    swift_retain();
    sub_1008AF518(1, 1);
    sub_1008B0AAC(1, a2 & 1, (uint64_t)v7);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      swift_release();
      sub_100522F00((uint64_t)v7, &qword_101685D00);
    }
    else
    {
      sub_1008D1260((uint64_t)v7, (uint64_t)v12, type metadata accessor for CRLSyncActivity);
      sub_1008B08F0(v12);
      swift_release();
      sub_1008D0E78((uint64_t)v12, type metadata accessor for CRLSyncActivity);
    }
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v13 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v15 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v16 = 0x5320646572616853;
    }
    else {
      uint64_t v16 = 0x2065746176697250;
    }
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v17 = 0xEC00000065706F63;
    }
    else {
      unint64_t v17 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v17;
    id v18 = v13;
    uint64_t v19 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"<%{public}@> Attempting to fetch changes but scheduler not found", 64, 2, v15);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_1008B7824(char a1)
{
  return sub_1008B784C(a1, (uint64_t)&unk_101519240, (uint64_t)sub_1008D22BC, (uint64_t)&unk_101519258);
}

uint64_t sub_1008B784C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v4;
  *(unsigned char *)(v17 + 24) = a1;
  aBlock[4] = a3;
  void aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = v23;
  id v18 = _Block_copy(aBlock);
  id v19 = v16;
  uint64_t v20 = v4;
  static DispatchQoS.unspecified.getter();
  uint64_t v25 = _swiftEmptyArrayStorage;
  sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v24);
  return swift_release();
}

void sub_1008B7B14(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101685D00);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for CRLSyncActivity(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler))
  {
    swift_retain();
    sub_1008AF518(0, 1);
    sub_1008B0AAC(0, a2 & 1, (uint64_t)v7);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      swift_release();
      sub_100522F00((uint64_t)v7, &qword_101685D00);
    }
    else
    {
      sub_1008D1260((uint64_t)v7, (uint64_t)v12, type metadata accessor for CRLSyncActivity);
      sub_1008B08F0(v12);
      swift_release();
      sub_1008D0E78((uint64_t)v12, type metadata accessor for CRLSyncActivity);
    }
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v13 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v15 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v16 = 0x5320646572616853;
    }
    else {
      uint64_t v16 = 0x2065746176697250;
    }
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v17 = 0xEC00000065706F63;
    }
    else {
      unint64_t v17 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v17;
    id v18 = v13;
    uint64_t v19 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"<%{public}@> Attempting to save changes but scheduler not found", 63, 2, v15);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

void sub_1008B7E20()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (void *)((char *)v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  void *v7 = v8;
  (*(void (**)(void *, void, uint64_t, __n128))(v3 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v7, v2);
  if ((v8 & 1) == 0)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (!v10)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v20 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v22 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v23 = 0x5320646572616853;
    }
    else {
      uint64_t v23 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v24 = 0xEC00000065706F63;
    }
    else {
      unint64_t v24 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v24;
    id v25 = v20;
    uint64_t v26 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"<%{public}@> Could not create throttling scheduler while attempting to save changes", 83, 2, v22);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    goto LABEL_21;
  }
  uint64_t v11 = OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask))
  {
    uint64_t v12 = qword_10166FB88;
    swift_retain();
    if (v12 == -1)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v13 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v14 = swift_initStackObject();
      uint64_t v15 = v14;
      *(_OWORD *)(v14 + 16) = xmmword_10117E810;
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        uint64_t v16 = 0x5320646572616853;
      }
      else {
        uint64_t v16 = 0x2065746176697250;
      }
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        unint64_t v17 = 0xEC00000065706F63;
      }
      else {
        unint64_t v17 = 0xED000065706F6353;
      }
      *(void *)(v14 + 56) = &type metadata for String;
      *(void *)(v14 + 64) = sub_100528BE4();
      *(void *)(v15 + 32) = v16;
      *(void *)(v15 + 40) = v17;
      id v18 = v13;
      uint64_t v19 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"<%{public}@> There is an ongoing save task. A subsequent save will be attempted once the current save task is finished", 118, 2, v15);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_1008AF518(0, 1);
      swift_release();
      return;
    }
LABEL_92:
    swift_once();
    goto LABEL_5;
  }
  swift_retain();
  sub_1008AF518(0, 0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v66 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v67 = swift_initStackObject();
    uint64_t v68 = v67;
    *(_OWORD *)(v67 + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v69 = 0x5320646572616853;
    }
    else {
      uint64_t v69 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v70 = 0xEC00000065706F63;
    }
    else {
      unint64_t v70 = 0xED000065706F6353;
    }
    *(void *)(v67 + 56) = &type metadata for String;
    *(void *)(v67 + 64) = sub_100528BE4();
    *(void *)(v68 + 32) = v69;
    *(void *)(v68 + 40) = v70;
    id v25 = v66;
    uint64_t v71 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v71, (uint64_t)"<%{public}@> Saving changes was cancelled because there is no data source set on the sync controller", 100, 2, v68);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_release();
    goto LABEL_21;
  }
  uint64_t v28 = Strong;
  uint64_t v29 = swift_unknownObjectWeakLoadStrong();
  if (!v29)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    int64_t v94 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v95 = swift_initStackObject();
    uint64_t v96 = v95;
    *(_OWORD *)(v95 + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v97 = 0x5320646572616853;
    }
    else {
      uint64_t v97 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v98 = 0xEC00000065706F63;
    }
    else {
      unint64_t v98 = 0xED000065706F6353;
    }
    *(void *)(v95 + 56) = &type metadata for String;
    *(void *)(v95 + 64) = sub_100528BE4();
    *(void *)(v96 + 32) = v97;
    *(void *)(v96 + 40) = v98;
    id v25 = v94;
    uint64_t v99 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v99, (uint64_t)"<%{public}@> Saving changes was cancelled because there is no sync logic provider set on the sync controller", 108, 2, v96);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_release();
    swift_unknownObjectRelease();
LABEL_21:

    return;
  }
  uint64_t v30 = v29;
  uint64_t v31 = sub_100A5FF6C();
  uint64_t v111 = *(void *)(v31 + 16);
  if (v111)
  {
    v107[0] = v11;
    v107[1] = v28;
    uint64_t v109 = v10;
    uint64_t v110 = v30;
    unint64_t v108 = v1;
    uint64_t v32 = 0;
    int64_t v115 = _swiftEmptyDictionarySingleton;
    while (1)
    {
      long long v112 = *(_OWORD *)(v31 + 16 * v32 + 32);
      uint64_t ObjectType = swift_getObjectType();
      v114[0] = v112;
      uint64_t v34 = *(void *)(*((void *)&v112 + 1) + 8);
      char v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8);
      swift_unknownObjectRetain();
      id v36 = (void *)v35(ObjectType, v34);
      id v37 = [v36 zoneID];

      uint64_t v38 = v115;
      if (!v115[2]
        || (id v39 = v37, sub_100956E24((uint64_t)v39), v41 = v40, v39, (v41 & 1) == 0))
      {
        id v42 = v37;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v114[0] = v38;
        int64_t v115 = (void *)0x8000000000000000;
        unint64_t v1 = sub_100956E24((uint64_t)v42);
        uint64_t v45 = v38[2];
        BOOL v46 = (v44 & 1) == 0;
        uint64_t v47 = v45 + v46;
        if (__OFADD__(v45, v46))
        {
          __break(1u);
          goto LABEL_90;
        }
        char v48 = v44;
        if (v38[3] >= v47)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_100981CD8();
          }
        }
        else
        {
          sub_10096A56C(v47, isUniquelyReferenced_nonNull_native);
          unint64_t v49 = sub_100956E24((uint64_t)v42);
          if ((v48 & 1) != (v50 & 1))
          {
            sub_10050BF48(0, (unint64_t *)&qword_101674210);
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return;
          }
          unint64_t v1 = v49;
        }
        uint64_t v51 = (void *)v114[0];
        uint64_t v52 = 8 * v1;
        if (v48)
        {
          uint64_t v53 = *(void *)(v114[0] + 56);
          swift_bridgeObjectRelease();
          *(void *)(v53 + v52) = _swiftEmptyArrayStorage;
        }
        else
        {
          *(void *)(v114[0] + 8 * (v1 >> 6) + 64) |= 1 << v1;
          *(void *)(v51[6] + 8 * v1) = v42;
          *(void *)(v51[7] + 8 * v1) = _swiftEmptyArrayStorage;
          uint64_t v54 = v51[2];
          BOOL v55 = __OFADD__(v54, 1);
          uint64_t v56 = v54 + 1;
          if (v55) {
            goto LABEL_91;
          }
          v51[2] = v56;
          id v57 = v42;
        }
        int64_t v115 = v51;

        swift_bridgeObjectRelease();
      }
      id v58 = v37;
      uint64_t v60 = sub_100F47690(v114, v58);
      uint64_t v61 = *v59;
      if (*v59)
      {
        uint64_t v62 = v59;
        swift_unknownObjectRetain();
        char v63 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v62 = v61;
        if ((v63 & 1) == 0)
        {
          uint64_t v61 = sub_100F646A0(0, *((void *)v61 + 2) + 1, 1, v61);
          *uint64_t v62 = v61;
        }
        unint64_t v65 = *((void *)v61 + 2);
        unint64_t v64 = *((void *)v61 + 3);
        if (v65 >= v64 >> 1)
        {
          uint64_t v61 = sub_100F646A0((double *)(v64 > 1), v65 + 1, 1, v61);
          *uint64_t v62 = v61;
        }
        *((void *)v61 + 2) = v65 + 1;
        *(_OWORD *)&v61[2 * v65 + 4] = v112;
      }
      ((void (*)(void *, void))v60)(v114, 0);
      ++v32;

      swift_unknownObjectRelease();
      if (v111 == v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v72 = swift_bridgeObjectRetain();
        sub_100C3185C(v72);
        Swift::Int v74 = sub_100D2D4AC(v73);
        uint64_t v75 = swift_bridgeObjectRelease();
        uint64_t v113 = _swiftEmptyArrayStorage;
        __chkstk_darwin(v75, v76);
        v107[-2] = &v113;
        uint64_t v77 = swift_bridgeObjectRetain();
        sub_1008CF6E8(v77, (void (*)(id, uint64_t))sub_1008D227C);
        swift_bridgeObjectRelease();
        unint64_t v78 = (unint64_t)v113;
        type metadata accessor for CRLSyncControllerSaveTask();
        swift_allocObject();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v79 = sub_100FAF3A4(v78);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        unint64_t v80 = v108;
        uint64_t v81 = v107[0];
        *(void *)(v108 + v107[0]) = v79;
        swift_release();
        if (!*(void *)(v80 + v81)) {
          goto LABEL_87;
        }
        swift_beginAccess();
        swift_retain();
        unint64_t v82 = swift_bridgeObjectRetain();
        sub_10057D248(v82);
        swift_endAccess();
        swift_release();
        uint64_t v83 = *(void *)(v80 + v81);
        if (!v83) {
          goto LABEL_87;
        }
        swift_beginAccess();
        uint64_t v84 = *(void *)(v83 + 40);
        if ((v84 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v85 = __CocoaSet.count.getter();
          swift_bridgeObjectRelease();
          if (v85) {
            goto LABEL_59;
          }
LABEL_87:
          swift_bridgeObjectRelease();
        }
        else
        {
          if (!*(void *)(v84 + 16)) {
            goto LABEL_87;
          }
LABEL_59:
          if (qword_10166FB88 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v86 = (void *)static OS_os_log.dataSync;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v87 = swift_initStackObject();
          uint64_t v88 = v87;
          *(_OWORD *)(v87 + 16) = xmmword_10117E810;
          if (*(unsigned char *)(v80 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
            uint64_t v89 = 0x5320646572616853;
          }
          else {
            uint64_t v89 = 0x2065746176697250;
          }
          if (*(unsigned char *)(v80 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
            unint64_t v90 = 0xEC00000065706F63;
          }
          else {
            unint64_t v90 = 0xED000065706F6353;
          }
          *(void *)(v87 + 56) = &type metadata for String;
          *(void *)(v87 + 64) = sub_100528BE4();
          *(void *)(v88 + 32) = v89;
          *(void *)(v88 + 40) = v90;
          id v91 = v86;
          uint64_t v92 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v91, (uint64_t)&_mh_execute_header, v92, (uint64_t)"<%{public}@> Attempting to re-save zones whose data was reset", 61, 2, v88);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          uint64_t v93 = sub_1006BA584(v74);
          swift_bridgeObjectRelease();
          sub_1008B97D8((unint64_t)v93);
          swift_release();
        }
        sub_1008BF5FC();
        swift_bridgeObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v100 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v101 = swift_initStackObject();
  uint64_t v102 = v101;
  *(_OWORD *)(v101 + 16) = xmmword_10117E810;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v103 = 0x5320646572616853;
  }
  else {
    uint64_t v103 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v104 = 0xEC00000065706F63;
  }
  else {
    unint64_t v104 = 0xED000065706F6353;
  }
  *(void *)(v101 + 56) = &type metadata for String;
  *(void *)(v101 + 64) = sub_100528BE4();
  *(void *)(v102 + 32) = v103;
  *(void *)(v102 + 40) = v104;
  id v105 = v100;
  uint64_t v106 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v105, (uint64_t)&_mh_execute_header, v106, (uint64_t)"<%{public}@> Received an empty change set from the data source. There is no need to sync with CloudKit", 102, 2, v102);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_1008B070C(0, 1);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_1008B8CAC(void *a1, uint64_t a2, void *a3)
{
  type metadata accessor for CRLSyncRecordGroup();
  swift_allocObject();
  id v6 = a1;
  swift_bridgeObjectRetain();
  sub_100EA3B00(v6, a2);
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  return swift_release();
}

void sub_1008B8D7C()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLSyncActivity(0);
  uint64_t v68 = *(void *)(v2 - 8);
  uint64_t v69 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v60 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101685D00);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v67 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v75 = (uint64_t)&v56 - v10;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v66 = v11;
  __chkstk_darwin(v11, v12);
  char v63 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for DispatchQoS();
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v14);
  uint64_t v61 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (uint64_t *)((char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v21 = (void *)static OS_os_log.dataSync;
  uint64_t v74 = sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v23 = (void *)inited;
  long long v72 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v24 = 0x5320646572616853;
  }
  else {
    uint64_t v24 = 0x2065746176697250;
  }
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v25 = 0xEC00000065706F63;
  }
  else {
    unint64_t v25 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v70 = sub_100528BE4();
  unint64_t v71 = v25;
  v23[8] = v70;
  uint64_t v73 = v24;
  v23[4] = v24;
  v23[5] = v25;
  id v26 = v21;
  uint64_t v27 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v27, (uint64_t)"<%{public}@> Current save task finished", 39, 2, (uint64_t)v23);
  swift_setDeallocating();
  uint64_t v28 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *uint64_t v20 = v29;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v16);
  id v30 = v29;
  LOBYTE(v29) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v17 + 8))(v20, v16);
  if (v29)
  {
    if (*(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler])
    {
      uint64_t v59 = v28;
      uint64_t v31 = OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask;
      if (*(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask])
      {
        swift_beginAccess();
        swift_retain();
        swift_retain();
        unint64_t v32 = swift_bridgeObjectRetain();
        sub_100C31A4C(v32);
        uint64_t v34 = v33;
        sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
        uint64_t v58 = static OS_dispatch_queue.main.getter();
        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = v1;
        *(void *)(v35 + 24) = v34;
        v76[4] = sub_1008D2274;
        v76[5] = v35;
        v76[0] = _NSConcreteStackBlock;
        v76[1] = *(void *)"";
        v76[2] = sub_100679958;
        v76[3] = &unk_101519208;
        id v57 = _Block_copy(v76);
        id v36 = v1;
        swift_release();
        id v37 = v61;
        static DispatchQoS.unspecified.getter();
        v76[0] = _swiftEmptyArrayStorage;
        sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1005057FC((uint64_t *)&unk_1016725D0);
        sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
        uint64_t v38 = v63;
        uint64_t v39 = v66;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        char v41 = v57;
        char v40 = (void *)v58;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v41);
        swift_release();

        (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v39);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v64);
      }
      else
      {
        swift_retain();
      }
      uint64_t v47 = (uint64_t)v67;
      sub_1008B0AAC(0, 0, v75);
      uint64_t v48 = *(void *)&v1[v31];
      if (v48) {
        char v49 = (*(unsigned char *)(v48 + 56) | *(unsigned char *)(v48 + 57)) ^ 1;
      }
      else {
        char v49 = 1;
      }
      *(void *)&v1[v31] = 0;
      swift_release();
      sub_100522E9C(v75, v47, &qword_101685D00);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v47, 1, v69) == 1)
      {
        sub_100522F00(v47, &qword_101685D00);
        sub_1008B070C(0, v49 & 1);
        swift_release();
      }
      else
      {
        char v50 = v60;
        sub_1008D1260(v47, (uint64_t)v60, type metadata accessor for CRLSyncActivity);
        sub_1008B070C(0, v49 & 1);
        uint64_t v51 = (void *)static OS_os_log.dataSync;
        uint64_t v52 = swift_initStackObject();
        *(_OWORD *)(v52 + 16) = v72;
        unint64_t v53 = v70;
        *(void *)(v52 + 56) = &type metadata for String;
        *(void *)(v52 + 64) = v53;
        *(void *)(v52 + 32) = v73;
        *(void *)(v52 + 40) = v71;
        id v54 = v51;
        uint64_t v55 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v54, (uint64_t)&_mh_execute_header, v55, (uint64_t)"<%{public}@> Scheduling new save activity", 41, 2, v52);
        swift_setDeallocating();
        swift_arrayDestroy();

        sub_1008B08F0(v50);
        swift_release();
        sub_1008D0E78((uint64_t)v50, type metadata accessor for CRLSyncActivity);
      }
      sub_100522F00(v75, &qword_101685D00);
    }
    else
    {
      id v42 = (void *)static OS_os_log.dataSync;
      uint64_t v43 = swift_initStackObject();
      *(_OWORD *)(v43 + 16) = v72;
      unint64_t v44 = v70;
      *(void *)(v43 + 56) = &type metadata for String;
      *(void *)(v43 + 64) = v44;
      *(void *)(v43 + 32) = v73;
      *(void *)(v43 + 40) = v71;
      id v45 = v42;
      uint64_t v46 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v46, (uint64_t)"<%{public}@> Attempting to mark save task finished but scheduler not found", 74, 2, v43);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1008B966C(uint64_t a1, uint64_t a2)
{
  id v4 = [self defaultCenter];
  if (qword_10166F428 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10171ADB8;
  sub_1005057FC(&qword_101677430);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = sub_1005057FC(&qword_101672BF8);
  *(void *)(inited + 72) = a2;
  swift_bridgeObjectRetain();
  sub_100A393A8(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 postNotificationName:v5 object:a1 userInfo:isa];
}

void sub_1008B97D8(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v37 = type metadata accessor for CKSyncEngine.PendingDatabaseChange();
  uint64_t v4 = *(void *)(v37 - 8);
  __chkstk_darwin(v37, v5);
  uint64_t v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (uint64_t *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t, __n128))(v9 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v8, v11);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v13, v8);
  if (v14)
  {
    if (!(a1 >> 62))
    {
      uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_4:
  uint64_t v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    v44[0] = _swiftEmptyArrayStorage;
    sub_1006BBA84(0, v16 & ~(v16 >> 63), 0);
    if (v16 < 0)
    {
      __break(1u);
LABEL_27:
      swift_once();
      goto LABEL_17;
    }
    uint64_t v36 = v2;
    uint64_t v18 = 0;
    uint64_t v17 = (double *)v44[0];
    unint64_t v40 = a1 & 0xC000000000000001;
    unsigned int v39 = enum case for CKSyncEngine.PendingDatabaseChange.saveZone(_:);
    uint64_t v38 = v4 + 32;
    unint64_t v41 = a1;
    uint64_t v19 = v37;
    do
    {
      if (v40) {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v20 = *(id *)(a1 + 8 * v18 + 32);
      }
      uint64_t v21 = v20;
      void *v7 = [objc_allocWithZone((Class)CKRecordZone) initWithZoneID:v20];
      (*(void (**)(void *, void, uint64_t))(v4 + 104))(v7, v39, v19);

      v44[0] = v17;
      unint64_t v23 = *((void *)v17 + 2);
      unint64_t v22 = *((void *)v17 + 3);
      if (v23 >= v22 >> 1)
      {
        sub_1006BBA84(v22 > 1, v23 + 1, 1);
        uint64_t v17 = (double *)v44[0];
      }
      ++v18;
      *((void *)v17 + 2) = v23 + 1;
      (*(void (**)(unint64_t, void *, uint64_t))(v4 + 32))((unint64_t)v17+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v23, v7, v19);
      a1 = v41;
    }
    while (v16 != v18);
    uint64_t v2 = v36;
  }
  uint64_t v24 = v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
  swift_beginAccess();
  sub_100522E9C(v24, (uint64_t)&v42, &qword_101685C68);
  if (v43)
  {
    sub_10053974C(&v42, (uint64_t)v44);
    sub_10050F848(v44, v44[3]);
    CKSyncEngine.state.getter();
    swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    id v26 = *(void (**)(double *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
    uint64_t v27 = swift_checkMetadataState();
    v26(v17, v27, AssociatedConformanceWitness);
    swift_release();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v44);
    return;
  }
  swift_bridgeObjectRelease();
  sub_100522F00((uint64_t)&v42, &qword_101685C68);
  if (qword_10166FB88 != -1) {
    goto LABEL_27;
  }
LABEL_17:
  swift_beginAccess();
  uint64_t v28 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v30 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v31 = 0x5320646572616853;
  }
  else {
    uint64_t v31 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v32 = 0xEC00000065706F63;
  }
  else {
    unint64_t v32 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v32;
  id v33 = v28;
  uint64_t v34 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v34, (uint64_t)"<%{public}@> SyncEngine not found while attempting to add zones to save", 71, 2, v30);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_1008B9D8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Changes = type metadata accessor for CKSyncEngine.FetchChangesOptions.Scope();
  uint64_t v6 = *(void *)(Changes - 8);
  __chkstk_darwin(Changes, v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ChangesOptions = type metadata accessor for CKSyncEngine.FetchChangesOptions();
  uint64_t v56 = *(void *)(ChangesOptions - 8);
  __chkstk_darwin(ChangesOptions, v11);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v12;
  __chkstk_darwin(v14, v15);
  id v54 = (char *)&v50 - v16;
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v20 = __chkstk_darwin(v17, v19);
  unint64_t v22 = (uint64_t *)((char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v23 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *unint64_t v22 = v23;
  (*(void (**)(void *, void, uint64_t, __n128))(v18 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v17, v20);
  id v24 = v23;
  uint64_t v25 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v22, v17);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v22 = (void *)0xED000065706F6353;
  uint64_t v25 = 0x2065746176697250;
  uint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler];
  if (v26)
  {
    uint64_t v51 = ChangesOptions;
    uint64_t v52 = v5;
    swift_retain();
    uint64_t v50 = v26;
    sub_1008AF518(1, 0);
    if (qword_10166FB88 == -1)
    {
LABEL_4:
      swift_beginAccess();
      uint64_t v27 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      initeCGFloat d = swift_initStackObject();
      uint64_t v29 = inited;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
        uint64_t v30 = 0x5320646572616853;
      }
      else {
        uint64_t v30 = v25;
      }
      if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
        unint64_t v31 = 0xEC00000065706F63;
      }
      else {
        unint64_t v31 = (unint64_t)v22;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(v29 + 32) = v30;
      *(void *)(v29 + 40) = v31;
      id v32 = v27;
      uint64_t v33 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v33, (uint64_t)"<%{public}@> [Fetch] Fetching all changes", 41, 2, v29);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for CKSyncEngine.FetchChangesOptions.Scope.all(_:), Changes);
      CKSyncEngine.FetchChangesOptions.init(scope:operationGroup:)();
      sub_10050F848(&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider], *(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider + 24]);
      sub_1005057FC(&qword_101685CA0);
      OS_dispatch_queue.sync<A>(execute:)();
      CKSyncEngine.FetchChangesOptions.prioritizedZoneIDs.setter();
      uint64_t v34 = (void (*)(char *, void))CKSyncEngine.FetchChangesOptions.defaultZoneConfiguration.modify();
      CKSyncEngine.FetchChangesOptions.ZoneConfiguration.shouldFetchAssetContents.setter();
      v34(v57, 0);
      uint64_t v35 = v56;
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
      uint64_t v37 = v54;
      uint64_t v38 = v51;
      v36(v54, v13, v51);
      uint64_t v39 = type metadata accessor for TaskPriority();
      uint64_t v40 = (uint64_t)v52;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v52, 1, 1, v39);
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v13, v37, v38);
      unint64_t v41 = (*(unsigned __int8 *)(v35 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      long long v42 = (char *)swift_allocObject();
      *((void *)v42 + 2) = 0;
      *((void *)v42 + 3) = 0;
      *((void *)v42 + 4) = v1;
      v36(&v42[v41], v13, v38);
      uint64_t v43 = v1;
      sub_1005912D0(v40, (uint64_t)&unk_101685D10, (uint64_t)v42);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v38);
      return;
    }
LABEL_18:
    swift_once();
    goto LABEL_4;
  }
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v44 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v45 = swift_initStackObject();
  uint64_t v46 = v45;
  *(_OWORD *)(v45 + 16) = xmmword_10117E810;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope])
  {
    uint64_t v25 = 0x5320646572616853;
    unint64_t v47 = 0xEC00000065706F63;
  }
  else
  {
    unint64_t v47 = 0xED000065706F6353;
  }
  *(void *)(v45 + 56) = &type metadata for String;
  *(void *)(v45 + 64) = sub_100528BE4();
  *(void *)(v46 + 32) = v25;
  *(void *)(v46 + 40) = v47;
  id v48 = v44;
  uint64_t v49 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v48, (uint64_t)&_mh_execute_header, v49, (uint64_t)"<%{public}@> Scheduler not found while attempting to fetch changes", 66, 2, v46);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_1008BA4E0(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t, __n128))(v4 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v3, v6);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v8, v3);
  if (v9)
  {
    id v11 = [a1 recordID];
    uint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords);
    swift_beginAccess();
    uint64_t v13 = *v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_100950D50(v11, v13);

    swift_bridgeObjectRelease();
    if (v14)
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        id v15 = sub_100D3F1D8(v14, a1);
        id v16 = [a1 recordID];
        swift_beginAccess();
        id v17 = v15;
        sub_1009EC460((uint64_t)v17, v16);
        swift_endAccess();
        swift_unknownObjectRelease();

LABEL_7:
        return;
      }
    }
    id v16 = [a1 recordID];
    swift_beginAccess();
    sub_1009EC460((uint64_t)a1, v16);
    swift_endAccess();
    goto LABEL_7;
  }
  __break(1u);
}

void sub_1008BA73C(id a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void **)type metadata accessor for DispatchPredicate();
  uint64_t v8 = (uint64_t)*(v7 - 1);
  __n128 v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, void **, __n128))(v8 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v7, v10);
  id v14 = v13;
  char v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void **))(v8 + 8))(v12, v7);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = (void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  a1 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = *v7;
  id v17 = v26;
  void *v7 = (void *)0x8000000000000000;
  uint64_t v12 = (void *)sub_100955F50(a2, a3);
  uint64_t v19 = v17[2];
  BOOL v20 = (v18 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  char v15 = v18;
  if (v17[3] >= v21)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_7;
    }
LABEL_12:
    sub_10098203C();
    id v17 = v26;
    goto LABEL_7;
  }
  sub_10096AB2C(v21, isUniquelyReferenced_nonNull_native);
  id v17 = v26;
  unint64_t v22 = sub_100955F50(a2, a3);
  if ((v15 & 1) != (v23 & 1))
  {
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  uint64_t v12 = (void *)v22;
LABEL_7:
  void *v7 = v17;
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    sub_10097AD24((unint64_t)v12, a2, a3, (uint64_t)&_swiftEmptySetSingleton, *v7);
    swift_bridgeObjectRetain();
  }
  sub_100CBAB00(&v26, a1);
  id v24 = v26;
  swift_endAccess();
  swift_bridgeObjectRelease();
}

void sub_1008BA9A4(void *a1)
{
}

void sub_1008BA9B0(void *a1)
{
}

void sub_1008BA9BC(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t, __n128))(v4 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v3, v6);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v8, v3);
  if (v9)
  {
    swift_beginAccess();
    sub_100CBAAE4(&v13, a1);
    uint64_t v11 = v13;
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

void sub_1008BAB1C()
{
  uint64_t v1 = sub_1005057FC(&qword_101685D00);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for CRLSyncActivity(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler))
  {
    swift_retain();
    sub_1008AFE54(1, (uint64_t)v13);
    uint64_t v14 = type metadata accessor for CRLThrottleInfo(0);
    char v15 = (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14) == 1;
    sub_1008B070C(1, v15);
    sub_1008B0AAC(1, 0, (uint64_t)v4);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      swift_release();
      sub_100522F00((uint64_t)v13, &qword_101674228);
      id v16 = &qword_101685D00;
      uint64_t v17 = (uint64_t)v4;
    }
    else
    {
      sub_1008D1260((uint64_t)v4, (uint64_t)v9, type metadata accessor for CRLSyncActivity);
      sub_1008B08F0(v9);
      swift_release();
      sub_1008D0E78((uint64_t)v9, type metadata accessor for CRLSyncActivity);
      id v16 = &qword_101674228;
      uint64_t v17 = (uint64_t)v13;
    }
    sub_100522F00(v17, v16);
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v18 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v20 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v21 = 0x5320646572616853;
    }
    else {
      uint64_t v21 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v22 = 0xEC00000065706F63;
    }
    else {
      unint64_t v22 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v20 + 32) = v21;
    *(void *)(v20 + 40) = v22;
    id v23 = v18;
    uint64_t v24 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"<%{public}@> Attempting to handle end fetching changes from CloudKit but scheduler not found", 92, 2, v20);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_1008BAED8()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (char **)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  void *v7 = v8;
  (*(void (**)(void *, void, uint64_t, __n128))(v3 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v7, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v10 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_dataSource];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v1 = &_swiftEmptySetSingleton;
  if (Strong)
  {
    uint64_t v12 = Strong;
    uint64_t v13 = *((void *)v10 + 1);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v0;
    void v14[3] = v12;
    v14[4] = v13;
    char v15 = (unint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords];
    uint64_t v35 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords];
    swift_beginAccess();
    unint64_t v16 = *v15;
    uint64_t v17 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs];
    swift_beginAccess();
    uint64_t v18 = *v17;
    uint64_t v19 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordZoneIDs];
    swift_beginAccess();
    uint64_t v20 = *v19;
    uint64_t v21 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_zoneIDsToResetDueToUserEncryptionDataReset];
    swift_beginAccess();
    uint64_t v22 = *v21;
    id v23 = v0;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1008BB6AC(v16, v18, v20, v22, 0, sub_1008D2090, (uint64_t)v14);
    swift_unknownObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v17 = (uint64_t)_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    *uint64_t v19 = (uint64_t)&_swiftEmptySetSingleton;
    uint64_t v1 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v35 = _swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (qword_10166FB88 != -1) {
    goto LABEL_14;
  }
LABEL_5:
  swift_beginAccess();
  uint64_t v24 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v26 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v27 = 0x5320646572616853;
  }
  else {
    uint64_t v27 = 0x2065746176697250;
  }
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v28 = 0xEC00000065706F63;
  }
  else {
    unint64_t v28 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v28;
  id v29 = v24;
  uint64_t v30 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v30, (uint64_t)"<%{public}@> Cannot process fetched records since the data source is nil", 72, 2, v26);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  unint64_t v31 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordIDs];
  swift_beginAccess();
  *(void *)unint64_t v31 = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  id v32 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_purgedRecordZoneIDs];
  swift_beginAccess();
  *(void *)id v32 = v1;
  swift_bridgeObjectRelease();
  uint64_t v33 = &v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngineFetchedRecords];
  swift_beginAccess();
  *(void *)uint64_t v33 = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_zoneIDsToResetDueToUserEncryptionDataReset];
  swift_beginAccess();
LABEL_12:
  *uint64_t v21 = (uint64_t)v1;
  return swift_bridgeObjectRelease();
}

void sub_1008BB3B0(uint64_t a1)
{
  unint64_t v2 = 0xED000065706F6353;
  uint64_t v3 = 0x5320646572616853;
  uint64_t v4 = a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata;
  swift_beginAccess();
  sub_100522E9C(v4, (uint64_t)&v15, &qword_101685C60);
  if (v16)
  {
    sub_10053974C(&v15, (uint64_t)v17);
    sub_100A6078C(v17);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    __n128 v5 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v7 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v2 = 0xEC00000065706F63;
    }
    else {
      uint64_t v3 = 0x2065746176697250;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v2;
    id v8 = v5;
    uint64_t v9 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"<%{public}@> Persisting sync metadata after sync is finished", 60, 2, v7);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v17);
  }
  else
  {
    sub_100522F00((uint64_t)&v15, &qword_101685C60);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v10 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v11 = swift_initStackObject();
    uint64_t v12 = v11;
    *(_OWORD *)(v11 + 16) = xmmword_10117E810;
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v2 = 0xEC00000065706F63;
    }
    else {
      uint64_t v3 = 0x2065746176697250;
    }
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_100528BE4();
    *(void *)(v12 + 32) = v3;
    *(void *)(v12 + 40) = v2;
    id v13 = v10;
    uint64_t v14 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"<%{public}@> No metadata to persist after sync is finished", 58, 2, v12);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

void sub_1008BB6AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v139 = a7;
  int v151 = a5;
  uint64_t v149 = a2;
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (void (**)(void))((char *)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t, __n128))(v13 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v12, v15);
  id v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v17, v12);
  if ((v18 & 1) == 0)
  {
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_25:
    if (qword_10166FB88 == -1)
    {
LABEL_26:
      swift_beginAccess();
      id v54 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      initeCGFloat d = swift_initStackObject();
      uint64_t v56 = inited;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      if (*(unsigned char *)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        uint64_t v57 = 0x5320646572616853;
      }
      else {
        uint64_t v57 = 0x2065746176697250;
      }
      if (*(unsigned char *)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        unint64_t v58 = 0xEC00000065706F63;
      }
      else {
        unint64_t v58 = 0xED000065706F6353;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(v56 + 32) = v57;
      *(void *)(v56 + 40) = v58;
      id v59 = v54;
      uint64_t v60 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v59, (uint64_t)&_mh_execute_header, v60, (uint64_t)"<%{public}@> Cannot process fetched records since the data source or sync logic provider is nil", 95, 2, v56);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return;
    }
LABEL_84:
    swift_once();
    goto LABEL_26;
  }
  uint64_t v21 = Strong;
  uint64_t v22 = v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider;
  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (!v23)
  {
    swift_unknownObjectRelease();
    goto LABEL_25;
  }
  uint64_t v140 = a3;
  uint64_t v137 = a6;
  uint64_t v138 = a4;
  uint64_t v152 = v21;
  uint64_t v148 = (void (*)(void))v23;
  uint64_t v24 = *(void *)(v22 + 8);
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v25 = (void *)static OS_os_log.dataSync;
  uint64_t v144 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v26 = swift_initStackObject();
  uint64_t v27 = (void *)v26;
  long long v145 = xmmword_10117E810;
  *(_OWORD *)(v26 + 16) = xmmword_10117E810;
  if (*(unsigned char *)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v28 = 0x5320646572616853;
  }
  else {
    uint64_t v28 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v7 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v29 = 0xEC00000065706F63;
  }
  else {
    unint64_t v29 = 0xED000065706F6353;
  }
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v146 = sub_100528BE4();
  v27[8] = v146;
  v27[4] = v28;
  unint64_t v141 = v29;
  v27[5] = v29;
  id v30 = v25;
  uint64_t v31 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v31, (uint64_t)"<%{public}@> Processing fetched remote records", 46, 2, (uint64_t)v27);
  swift_setDeallocating();
  uint64_t v32 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v153 = _swiftEmptyDictionarySingleton;
  __chkstk_darwin(v33, v34);
  *(&v137 - 2) = v148;
  *(&v137 - 1) = (void (*)(void))v24;
  uint64_t v147 = v24;
  __chkstk_darwin(v35, v36);
  *(&v137 - 2) = (void (*)(void))&v153;
  unint64_t v38 = sub_100C335A8(a1, (void (*)(void **__return_ptr, id *))sub_1008D1FE8, v37, (void (*)(void **__return_ptr, void *))sub_1008D2014, (uint64_t)(&v137 - 4), (void (*)(double **__return_ptr, void *))sub_1008BCA0C, 0);
  int64_t v150 = v38;
  if (v38 >> 62) {
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v40 = v141;
  unint64_t v41 = v146;
  if (!v39 && !*(void *)(v149 + 16))
  {
    if ((v140 & 0xC000000000000001) != 0)
    {
      if (__CocoaSet.count.getter()) {
        goto LABEL_16;
      }
    }
    else if (*(void *)(v140 + 16))
    {
      goto LABEL_16;
    }
    if ((v138 & 0xC000000000000001) != 0) {
      uint64_t v131 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v131 = *(void *)(v138 + 16);
    }
    if (!v131)
    {
      swift_bridgeObjectRelease();
      id v132 = (void *)static OS_os_log.dataSync;
      uint64_t v133 = swift_initStackObject();
      *(_OWORD *)(v133 + 16) = v145;
      *(void *)(v133 + 56) = &type metadata for String;
      *(void *)(v133 + 64) = v41;
      *(void *)(v133 + 32) = v28;
      *(void *)(v133 + 40) = v40;
      id v134 = v132;
      uint64_t v135 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v134, (uint64_t)&_mh_execute_header, v135, (uint64_t)"<%{public}@> Sync is finished. No new record was received. Nothing to do", 72, 2, v133);
      swift_setDeallocating();
      swift_arrayDestroy();

      if (v137) {
        v137();
      }
      uint64_t v136 = swift_bridgeObjectRetain();
      sub_100A61C14(v136, v151);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease();
      return;
    }
  }
LABEL_16:
  long long v42 = (void *)static OS_os_log.dataSync;
  uint64_t v43 = swift_initStackObject();
  *(_OWORD *)(v43 + 16) = v145;
  *(void *)(v43 + 56) = &type metadata for String;
  *(void *)(v43 + 64) = v41;
  uint64_t v142 = v28;
  *(void *)(v43 + 32) = v28;
  *(void *)(v43 + 40) = v40;
  id v44 = v42;
  uint64_t v45 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v45, (uint64_t)"<%{public}@> Merging fetched remote records", 43, 2, v43);
  swift_setDeallocating();
  uint64_t v143 = v32;
  swift_arrayDestroy();

  if (v39)
  {
    int64_t v46 = v150;
    unint64_t v47 = v150 & 0xC000000000000001;
    uint64_t v48 = 4;
    while (1)
    {
      uint64_t v7 = v48 - 4;
      if (v47)
      {
        uint64_t v49 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v51 = (void (*)(void))v49;
      }
      else
      {
        uint64_t v51 = *(void (**)(void))(v46 + 8 * v48);
        uint64_t v49 = swift_retain();
      }
      uint64_t v52 = v48 - 3;
      if (__OFADD__(v7, 1)) {
        break;
      }
      __chkstk_darwin(v49, v50);
      *(&v137 - 4) = v53;
      *(&v137 - 3) = v51;
      *((unsigned char *)&v137 - 16) = v151;
      OS_dispatch_queue.sync<A>(execute:)();
      swift_release();
      ++v48;
      int64_t v46 = v150;
      if (v52 == v39) {
        goto LABEL_33;
      }
    }
    __break(1u);
    goto LABEL_82;
  }
LABEL_33:
  swift_bridgeObjectRelease();
  uint64_t v61 = (void *)static OS_os_log.dataSync;
  uint64_t v62 = swift_initStackObject();
  *(_OWORD *)(v62 + 16) = v145;
  unint64_t v63 = v146;
  *(void *)(v62 + 56) = &type metadata for String;
  *(void *)(v62 + 64) = v63;
  unint64_t v64 = v141;
  uint64_t v65 = v142;
  *(void *)(v62 + 32) = v142;
  *(void *)(v62 + 40) = v64;
  id v66 = v61;
  uint64_t v67 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v67, (uint64_t)"<%{public}@> Finished merging fetched remote records. Clearing local cache", 74, 2, v62);
  swift_setDeallocating();
  swift_arrayDestroy();

  if ((v140 & 0xC000000000000001) != 0) {
    uint64_t v68 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v68 = *(void *)(v140 + 16);
  }
  unint64_t v69 = v146;
  if (v68)
  {
    unint64_t v70 = (void *)static OS_os_log.dataSync;
    uint64_t v71 = swift_initStackObject();
    *(_OWORD *)(v71 + 16) = v145;
    *(void *)(v71 + 56) = &type metadata for String;
    *(void *)(v71 + 64) = v69;
    *(void *)(v71 + 32) = v65;
    unint64_t v72 = v141;
    *(void *)(v71 + 40) = v141;
    id v73 = v70;
    uint64_t v74 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v73, (uint64_t)&_mh_execute_header, v74, (uint64_t)"<%{public}@> Purging zones", 26, 2, v71);
    swift_setDeallocating();
    swift_arrayDestroy();

    unint64_t v75 = v146;
    swift_unknownObjectRetain();
    unint64_t v76 = sub_1008CE768(v140);
    uint64_t v77 = swift_unknownObjectRelease();
    __chkstk_darwin(v77, v78);
    *(&v137 - 2) = v79;
    *(&v137 - 1) = (void (*)(void))v76;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_bridgeObjectRelease();
    unint64_t v80 = (void *)static OS_os_log.dataSync;
    uint64_t v81 = swift_initStackObject();
    *(_OWORD *)(v81 + 16) = v145;
    *(void *)(v81 + 56) = &type metadata for String;
    *(void *)(v81 + 64) = v75;
    uint64_t v65 = v142;
    *(void *)(v81 + 32) = v142;
    *(void *)(v81 + 40) = v72;
    id v82 = v80;
    uint64_t v83 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v82, (uint64_t)&_mh_execute_header, v83, (uint64_t)"<%{public}@> Finished purging zones", 35, 2, v81);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  uint64_t v84 = v149;
  if (!*(void *)(v149 + 16))
  {
LABEL_65:
    if ((v138 & 0xC000000000000001) != 0)
    {
      uint64_t v114 = __CocoaSet.count.getter();
      unint64_t v115 = v146;
      if (!v114) {
        goto LABEL_70;
      }
    }
    else
    {
      unint64_t v115 = v146;
      if (!*(void *)(v138 + 16))
      {
LABEL_70:
        if (v137) {
          v137();
        }
        uint64_t v130 = swift_bridgeObjectRetain();
        sub_100A61C14(v130, v151);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    char v116 = (void *)static OS_os_log.dataSync;
    uint64_t v117 = swift_initStackObject();
    *(_OWORD *)(v117 + 16) = v145;
    *(void *)(v117 + 56) = &type metadata for String;
    *(void *)(v117 + 64) = v115;
    *(void *)(v117 + 32) = v65;
    unint64_t v118 = v141;
    *(void *)(v117 + 40) = v141;
    id v119 = v116;
    uint64_t v120 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v119, (uint64_t)&_mh_execute_header, v120, (uint64_t)"<%{public}@> Resetting sync state for zones due to encryption data reset", 72, 2, v117);
    swift_setDeallocating();
    swift_arrayDestroy();

    unint64_t v121 = v146;
    swift_unknownObjectRetain();
    unint64_t v122 = sub_1008CE768(v138);
    uint64_t v123 = swift_unknownObjectRelease();
    __chkstk_darwin(v123, v124);
    *(&v137 - 2) = v125;
    *(&v137 - 1) = (void (*)(void))v122;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_bridgeObjectRelease();
    uint64_t v126 = (void *)static OS_os_log.dataSync;
    uint64_t v127 = swift_initStackObject();
    *(_OWORD *)(v127 + 16) = v145;
    *(void *)(v127 + 56) = &type metadata for String;
    *(void *)(v127 + 64) = v121;
    *(void *)(v127 + 32) = v142;
    *(void *)(v127 + 40) = v118;
    id v128 = v126;
    uint64_t v129 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v128, (uint64_t)&_mh_execute_header, v129, (uint64_t)"<%{public}@> Finished resetting sync state for zones due to encryption data reset", 81, 2, v127);
    swift_setDeallocating();
    swift_arrayDestroy();

    goto LABEL_70;
  }
  uint64_t v85 = (void *)static OS_os_log.dataSync;
  uint64_t v86 = swift_initStackObject();
  *(_OWORD *)(v86 + 16) = v145;
  unint64_t v87 = v146;
  *(void *)(v86 + 56) = &type metadata for String;
  *(void *)(v86 + 64) = v87;
  *(void *)(v86 + 32) = v65;
  *(void *)(v86 + 40) = v141;
  id v88 = v85;
  uint64_t v89 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v88, (uint64_t)&_mh_execute_header, v89, (uint64_t)"<%{public}@> Purging remote records", 35, 2, v86);
  swift_setDeallocating();
  uint64_t v7 = 1;
  swift_arrayDestroy();

  uint64_t v90 = *(void *)(v84 + 64);
  uint64_t v140 = v84 + 64;
  uint64_t v91 = 1 << *(unsigned char *)(v84 + 32);
  uint64_t v92 = -1;
  if (v91 < 64) {
    uint64_t v92 = ~(-1 << v91);
  }
  unint64_t v93 = v92 & v90;
  int64_t v150 = (unint64_t)(v91 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v94 = 0;
  if (!v93) {
    goto LABEL_43;
  }
LABEL_42:
  unint64_t v95 = __clz(__rbit64(v93));
  v93 &= v93 - 1;
  for (unint64_t i = v95 | (v94 << 6); ; unint64_t i = __clz(__rbit64(v98)) + (v94 << 6))
  {
    uint64_t v100 = (uint64_t *)(*(void *)(v84 + 48) + 16 * i);
    uint64_t v101 = *v100;
    uint64_t v102 = v100[1];
    uint64_t v103 = (uint64_t)v148;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v104 = swift_bridgeObjectRetain();
    uint64_t v105 = sub_1008CF324(v104, v103, v147, v101, v102);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v106 = swift_unknownObjectRelease();
    uint64_t v7 = *(void *)(*(void *)(v152 + 16) + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
    __chkstk_darwin(v106, v107);
    *(&v137 - 2) = v108;
    *(&v137 - 1) = (void (*)(void))v105;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_bridgeObjectRelease();
    uint64_t v84 = v149;
    if (v93) {
      goto LABEL_42;
    }
LABEL_43:
    if (__OFADD__(v94++, 1)) {
      goto LABEL_83;
    }
    if (v94 >= v150)
    {
      uint64_t v65 = v142;
LABEL_64:
      swift_release();
      uint64_t v109 = (void *)static OS_os_log.dataSync;
      uint64_t v110 = swift_initStackObject();
      *(_OWORD *)(v110 + 16) = v145;
      unint64_t v111 = v146;
      *(void *)(v110 + 56) = &type metadata for String;
      *(void *)(v110 + 64) = v111;
      *(void *)(v110 + 32) = v65;
      *(void *)(v110 + 40) = v141;
      id v112 = v109;
      uint64_t v113 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v112, (uint64_t)&_mh_execute_header, v113, (uint64_t)"<%{public}@> Finished Purging remote records", 44, 2, v110);
      swift_setDeallocating();
      swift_arrayDestroy();

      goto LABEL_65;
    }
    unint64_t v98 = *(void *)(v140 + 8 * v94);
    uint64_t v65 = v142;
    if (!v98) {
      break;
    }
LABEL_53:
    unint64_t v93 = (v98 - 1) & v98;
  }
  int64_t v99 = v94 + 1;
  if (v94 + 1 >= v150) {
    goto LABEL_64;
  }
  unint64_t v98 = *(void *)(v140 + 8 * v99);
  if (v98) {
    goto LABEL_52;
  }
  int64_t v99 = v94 + 2;
  if (v94 + 2 >= v150) {
    goto LABEL_64;
  }
  unint64_t v98 = *(void *)(v140 + 8 * v99);
  if (v98) {
    goto LABEL_52;
  }
  int64_t v99 = v94 + 3;
  if (v94 + 3 >= v150) {
    goto LABEL_64;
  }
  unint64_t v98 = *(void *)(v140 + 8 * v99);
  if (v98)
  {
LABEL_52:
    int64_t v94 = v99;
    goto LABEL_53;
  }
  while (1)
  {
    int64_t v94 = v99 + 1;
    if (__OFADD__(v99, 1)) {
      break;
    }
    if (v94 >= v150) {
      goto LABEL_64;
    }
    unint64_t v98 = *(void *)(v140 + 8 * v94);
    ++v99;
    if (v98) {
      goto LABEL_53;
    }
  }
  __break(1u);
}

uint64_t sub_1008BC744@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  v33[1] = a2;
  uint64_t v34 = a3;
  uint64_t v4 = sub_1005057FC(&qword_101685C80);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4, v6);
  id v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v33 - v11;
  uint64_t v13 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  uint64_t v21 = a1[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v35 = v22;
  uint64_t v24 = (void *)(*(uint64_t (**)(void))(*(void *)(v21 + 8) + 8))();
  v33[0] = [v24 zoneID];

  uint64_t v25 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v16, 1, 1, v25);
  uint64_t v26 = (uint64_t)&v12[*(int *)(v5 + 56)];
  sub_10051B3EC((uint64_t)v16, v26, &qword_101672EB0);
  *uint64_t v20 = 1;
  *(_DWORD *)(v20 + 1) = 0;
  uint64_t v27 = (uint64_t)&v8[*(int *)(v5 + 56)];
  sub_10051B3EC(v26, v27, &qword_101672EB0);
  uint64_t v28 = type metadata accessor for CRLZoneSyncResultScenarios();
  unint64_t v29 = &v20[*(int *)(v28 + 36)];
  *unint64_t v29 = 0;
  sub_10051B3EC(v27, (uint64_t)&v29[*(int *)(v5 + 56)], &qword_101672EB0);
  *(void *)&v20[*(int *)(v28 + 40)] = _swiftEmptyArrayStorage;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v20, 0, 1, v28);
  sub_10057E814((uint64_t)v20, v33[0]);
  uint64_t v35 = v22;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 16) + 8))(ObjectType);
  uint64_t v31 = v34;
  *uint64_t v34 = result;
  v31[1] = v32;
  return result;
}

uint64_t sub_1008BCA0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 16) + 16))(ObjectType);
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_1008BCA6C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (uint64_t *)((char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t, __n128))(v5 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v4, v7);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v9, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v50 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v52 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v53 = 0x5320646572616853;
    }
    else {
      uint64_t v53 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v54 = 0xEC00000065706F63;
    }
    else {
      unint64_t v54 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v52 + 32) = v53;
    *(void *)(v52 + 40) = v54;
    id v55 = v50;
    uint64_t v56 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"<%{public}@> Could not handle a save result since sync logic provider is not set", 80, 2, v52);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return;
  }
  uint64_t v13 = Strong;
  uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (!v14 || (uint64_t v15 = *(void **)(v14 + 64)) == 0)
  {
    id v90 = (id)Strong;
    if (qword_10166FB88 == -1)
    {
LABEL_11:
      swift_beginAccess();
      uint64_t v31 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v32 = swift_initStackObject();
      uint64_t v33 = (void *)v32;
      *(_OWORD *)(v32 + 16) = xmmword_10117D8C0;
      BOOL v34 = *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        uint64_t v35 = 0x5320646572616853;
      }
      else {
        uint64_t v35 = 0x2065746176697250;
      }
      if (v34) {
        unint64_t v36 = 0xED000065706F6353;
      }
      else {
        unint64_t v36 = 0xEC00000065706F63;
      }
      *(void *)(v32 + 56) = &type metadata for String;
      unint64_t v37 = sub_100528BE4();
      v33[4] = v35;
      v33[8] = v37;
      v33[5] = v36;
      uint64_t v92 = 0x203A65707954;
      unint64_t v93 = 0xE600000000000000;
      id v38 = v31;
      v39._countAndFlagsBits = CKRecord.recordType.getter();
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      v40._countAndFlagsBits = 0x203A444920;
      v40._object = (void *)0xE500000000000000;
      String.append(_:)(v40);
      id v41 = [a1 recordID];
      id v42 = [v41 recordName];

      uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v45 = v44;

      v46._countAndFlagsBits = v43;
      v46._object = v45;
      String.append(_:)(v46);
      swift_bridgeObjectRelease();
      uint64_t v47 = v92;
      unint64_t v48 = v93;
      v33[12] = &type metadata for String;
      v33[13] = v37;
      v33[9] = v47;
      v33[10] = v48;
      uint64_t v49 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v49, (uint64_t)"<%{public}@> There is no ongoing batch save in the save task. We can't process the save results of record %{public}@", 116, 2, (uint64_t)v33);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      swift_unknownObjectRelease();

      return;
    }
LABEL_43:
    swift_once();
    goto LABEL_11;
  }
  swift_retain();
  id v16 = [a1 recordID];
  uint64_t v17 = *(void *)(v15[2] + 24);
  if (*(void *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    id v18 = v16;
    unint64_t v19 = sub_100956CAC((uint64_t)v18);
    if (v20)
    {
      uint64_t v21 = (uint64_t *)(*(void *)(v17 + 56) + 16 * v19);
      uint64_t v22 = *v21;
      unint64_t v23 = v21[1];
      swift_unknownObjectRetain();

      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v24 = v15[6];
      id v25 = v18;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_100950D50(v25, v24);

      swift_bridgeObjectRelease();
      if (v26 && (uint64_t v27 = sub_100D406CC(a1)) != 0)
      {
        unint64_t v29 = (void *)v27;
        unint64_t v30 = v28;
        v23 |= 0x4000000000000000uLL;
        swift_unknownObjectRetain();
        a1 = 0;
      }
      else
      {
        swift_unknownObjectRetain();
        id v79 = [a1 recordChangeTag];
        if (v79)
        {

          id v80 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
          [a1 encodeSystemFieldsWithCoder:v80];
          id v81 = [v80 encodedData];
          id v90 = v25;
          unint64_t v82 = v23;
          id v83 = v81;
          unint64_t v29 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v30 = v84;

          unint64_t v23 = v82;
          id v25 = v90;
        }
        else
        {
          unint64_t v29 = 0;
          unint64_t v30 = 0xF000000000000000;
        }
        id v85 = a1;
      }
      v94[0] = v22;
      v94[1] = v23;
      v94[2] = v29;
      v94[3] = v30;
      v94[4] = a1;
      swift_beginAccess();
      id v86 = v25;
      sub_1008D0DA8(v22, v23, v29, v30, a1);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v91 = v15[8];
      unsigned char v15[8] = 0x8000000000000000;
      sub_100977310((uint64_t)v94, v86, isUniquelyReferenced_nonNull_native);
      unsigned char v15[8] = v91;

      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_unknownObjectRelease();
      sub_1008D0CD8(v22, v23, v29, v30, a1);
      swift_release();

      swift_unknownObjectRelease();
      return;
    }

    swift_bridgeObjectRelease();
  }
  id v89 = v16;
  id v90 = (id)v13;
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v57 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v58 = swift_initStackObject();
  id v59 = (void *)v58;
  *(_OWORD *)(v58 + 16) = xmmword_10117DF40;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v60 = 0x5320646572616853;
  }
  else {
    uint64_t v60 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v61 = 0xEC00000065706F63;
  }
  else {
    unint64_t v61 = 0xED000065706F6353;
  }
  *(void *)(v58 + 56) = &type metadata for String;
  unint64_t v62 = sub_100528BE4();
  v59[4] = v60;
  v59[8] = v62;
  v59[5] = v61;
  uint64_t v92 = 0x203A65707954;
  unint64_t v93 = 0xE600000000000000;
  id v63 = v57;
  v64._countAndFlagsBits = CKRecord.recordType.getter();
  String.append(_:)(v64);
  swift_bridgeObjectRelease();
  v65._countAndFlagsBits = 0x203A444920;
  v65._object = (void *)0xE500000000000000;
  String.append(_:)(v65);
  id v66 = [a1 recordID];
  id v67 = [v66 recordName];

  uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v70 = v69;

  v71._countAndFlagsBits = v68;
  v71._object = v70;
  String.append(_:)(v71);
  swift_bridgeObjectRelease();
  uint64_t v72 = v92;
  unint64_t v73 = v93;
  v59[12] = &type metadata for String;
  v59[13] = v62;
  v59[9] = v72;
  v59[10] = v73;
  id v74 = [*(id *)(v15[2] + 16) zoneName];
  uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v77 = v76;

  v59[17] = &type metadata for String;
  v59[18] = v62;
  v59[14] = v75;
  v59[15] = v77;
  uint64_t v78 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v63, (uint64_t)&_mh_execute_header, v78, (uint64_t)"<%{public}@> Did not find a local change record for record %{public}@ in batch with zone ID: %{public}@", 103, 2, (uint64_t)v59);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  swift_unknownObjectRelease();
  swift_release();
}

void sub_1008BD3DC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  id v11 = (void *)((char *)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)&v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v6, v9);
  id v13 = v12;
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v11, v6);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_62:
    swift_once();
LABEL_8:
    swift_beginAccess();
    uint64_t v21 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    unint64_t v23 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
      uint64_t v24 = 0x5320646572616853;
    }
    else {
      uint64_t v24 = 0x2065746176697250;
    }
    if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
      unint64_t v25 = 0xEC00000065706F63;
    }
    else {
      unint64_t v25 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v26 = sub_100528BE4();
    v23[4] = v24;
    v23[8] = v26;
    v23[5] = v25;
    uint64_t v143 = 0x203A65707954;
    unint64_t v144 = 0xE600000000000000;
    id v139 = v21;
    v27._countAndFlagsBits = CKRecord.recordType.getter();
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 0x203A444920;
    v28._object = (void *)0xE500000000000000;
    String.append(_:)(v28);
    id v29 = [a1 recordID];
    id v30 = [v29 recordName];

    uint64_t v31 = v3;
    uint64_t v32 = a1;
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;

    v36._countAndFlagsBits = v33;
    a1 = v32;
    uint64_t v3 = v31;
    v36._object = v35;
    String.append(_:)(v36);
    swift_bridgeObjectRelease();
    uint64_t v37 = v143;
    unint64_t v38 = v144;
    v23[12] = &type metadata for String;
    v23[13] = v26;
    v23[9] = v37;
    v23[10] = v38;
    uint64_t v39 = static os_log_type_t.error.getter();
    id v40 = v139;
    sub_100BAC898((uint64_t)v139, (uint64_t)&_mh_execute_header, v39, (uint64_t)"<%{public}@> Failed to find the current batch to handle save failure for record %{public}@", 90, 2, (uint64_t)v23);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

LABEL_15:
    a2 = v140;
    goto LABEL_16;
  }
  uint64_t v15 = *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask];
  if (!v15 || (id v16 = *(id *)(v15 + 64)) == 0)
  {
    uint64_t v140 = a2;
    if (qword_10166FB88 == -1) {
      goto LABEL_8;
    }
    goto LABEL_62;
  }
  unint64_t v145 = (unint64_t)a2;
  type metadata accessor for CKError(0);
  sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
  swift_retain();
  _BridgedStoredNSError.code.getter();
  *((void *)&v17 + 1) = v142;
  *(void *)&long long v17 = v142 - 14;
  switch((unint64_t)(v17 >> 1))
  {
    case 0uLL:
      id v18 = a2;
      unint64_t v19 = (void *)related decl 'e' for CKErrorCode.serverRecord.getter();
      if (v19)
      {
        char v20 = v19;
        sub_1008CFE70((uint64_t)v16, v19);
      }
      else
      {
        id v139 = v16;
        uint64_t v140 = a1;
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v126 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v127 = swift_initStackObject();
        uint64_t v128 = v127;
        *(_OWORD *)(v127 + 16) = xmmword_10117E810;
        if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
          uint64_t v129 = 0x5320646572616853;
        }
        else {
          uint64_t v129 = 0x2065746176697250;
        }
        uint64_t v130 = v3;
        if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
          unint64_t v131 = 0xEC00000065706F63;
        }
        else {
          unint64_t v131 = 0xED000065706F6353;
        }
        *(void *)(v127 + 56) = &type metadata for String;
        *(void *)(v127 + 64) = sub_100528BE4();
        *(void *)(v128 + 32) = v129;
        *(void *)(v128 + 40) = v131;
        uint64_t v3 = v130;
        id v132 = v126;
        uint64_t v133 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v132, (uint64_t)&_mh_execute_header, v133, (uint64_t)"<%{public}@> Could not merge conflict because serverRecord does not exist on the CKError. This is an internal CloudKit error", 124, 2, v128);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v141 = 1;
        sub_1008CE410((uint64_t)_swiftEmptyArrayStorage);
        _BridgedStoredNSError.init(_:userInfo:)();
        id v134 = (void *)v143;
        a1 = v140;
        sub_1008BEC6C((uint64_t)v139, v140, (void *)v143);
      }
      swift_release();
      a2 = v18;
      break;
    case 4uLL:
      id v139 = v16;
      uint64_t v140 = a2;
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v69 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v70 = swift_initStackObject();
      Swift::String v71 = (void *)v70;
      *(_OWORD *)(v70 + 16) = xmmword_10117D8C0;
      if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
        uint64_t v72 = 0x5320646572616853;
      }
      else {
        uint64_t v72 = 0x2065746176697250;
      }
      unint64_t v73 = v3;
      if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
        unint64_t v74 = 0xEC00000065706F63;
      }
      else {
        unint64_t v74 = 0xED000065706F6353;
      }
      *(void *)(v70 + 56) = &type metadata for String;
      unint64_t v75 = sub_100528BE4();
      v71[4] = v72;
      v71[8] = v75;
      v71[5] = v74;
      uint64_t v143 = 0x203A65707954;
      unint64_t v144 = 0xE600000000000000;
      id v138 = v69;
      v76._countAndFlagsBits = CKRecord.recordType.getter();
      String.append(_:)(v76);
      swift_bridgeObjectRelease();
      v77._countAndFlagsBits = 0x203A444920;
      v77._object = (void *)0xE500000000000000;
      String.append(_:)(v77);
      id v78 = [a1 recordID];
      id v79 = [v78 recordName];

      id v80 = a1;
      uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v83 = v82;

      v84._countAndFlagsBits = v81;
      a1 = v80;
      uint64_t v3 = v73;
      v84._object = v83;
      String.append(_:)(v84);
      swift_bridgeObjectRelease();
      uint64_t v85 = v143;
      unint64_t v86 = v144;
      v71[12] = &type metadata for String;
      v71[13] = v75;
      v71[9] = v85;
      v71[10] = v86;
      uint64_t v87 = static os_log_type_t.default.getter();
      id v88 = v138;
      sub_100BAC898((uint64_t)v138, (uint64_t)&_mh_execute_header, v87, (uint64_t)"<%{public}@> Failed to save a record due to atomic batch save failure. Record %{public}@", 88, 2, (uint64_t)v71);
      swift_release();
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      goto LABEL_15;
    case 6uLL:
      id v139 = v16;
      uint64_t v140 = a2;
      id v89 = a1;
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      uint64_t v90 = 0x5320646572616853;
      swift_beginAccess();
      uint64_t v91 = (void *)static OS_os_log.dataSync;
      id v136 = (id)sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v92 = swift_initStackObject();
      unint64_t v93 = (void *)v92;
      long long v135 = xmmword_10117D8C0;
      *(_OWORD *)(v92 + 16) = xmmword_10117D8C0;
      int v94 = v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope];
      if (!v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
        uint64_t v90 = 0x2065746176697250;
      }
      id v138 = v3;
      if (v94) {
        unint64_t v95 = 0xEC00000065706F63;
      }
      else {
        unint64_t v95 = 0xED000065706F6353;
      }
      *(void *)(v92 + 56) = &type metadata for String;
      unint64_t v96 = sub_100528BE4();
      v93[8] = v96;
      v93[4] = v90;
      v93[5] = v95;
      uint64_t v143 = 0x203A65707954;
      unint64_t v144 = 0xE600000000000000;
      id v137 = v91;
      uint64_t v97 = v89;
      v98._countAndFlagsBits = CKRecord.recordType.getter();
      String.append(_:)(v98);
      swift_bridgeObjectRelease();
      v99._countAndFlagsBits = 0x203A444920;
      v99._object = (void *)0xE500000000000000;
      String.append(_:)(v99);
      id v100 = [v89 recordID];
      id v101 = [v100 recordName];

      uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v104 = v103;

      v105._countAndFlagsBits = v102;
      v105._object = v104;
      String.append(_:)(v105);
      swift_bridgeObjectRelease();
      uint64_t v106 = v143;
      unint64_t v107 = v144;
      v93[12] = &type metadata for String;
      v93[13] = v96;
      v93[9] = v106;
      v93[10] = v107;
      uint64_t v108 = static os_log_type_t.default.getter();
      id v109 = v137;
      sub_100BAC898((uint64_t)v137, (uint64_t)&_mh_execute_header, v108, (uint64_t)"<%{public}@> Failed to save a record due to zone not found for record %{public}@", 80, 2, (uint64_t)v93);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      if (v94)
      {
        uint64_t v110 = (void *)static OS_os_log.dataSync;
        uint64_t v111 = swift_initStackObject();
        *(_OWORD *)(v111 + 16) = v135;
        *(void *)(v111 + 56) = &type metadata for String;
        *(void *)(v111 + 64) = v96;
        unint64_t v112 = v96;
        *(void *)(v111 + 32) = 0x5320646572616853;
        id v137 = (id)(v111 + 32);
        *(void *)(v111 + 40) = 0xEC00000065706F63;
        uint64_t v143 = 0x203A65707954;
        unint64_t v144 = 0xE600000000000000;
        id v113 = v110;
        v114._countAndFlagsBits = CKRecord.recordType.getter();
        String.append(_:)(v114);
        swift_bridgeObjectRelease();
        v115._countAndFlagsBits = 0x203A444920;
        v115._object = (void *)0xE500000000000000;
        String.append(_:)(v115);
        id v116 = [v97 recordID];
        id v117 = [v116 recordName];

        uint64_t v118 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v120 = v119;

        v121._countAndFlagsBits = v118;
        v121._object = v120;
        String.append(_:)(v121);
        swift_bridgeObjectRelease();
        uint64_t v122 = v143;
        unint64_t v123 = v144;
        *(void *)(v111 + 96) = &type metadata for String;
        *(void *)(v111 + 104) = v112;
        *(void *)(v111 + 72) = v122;
        *(void *)(v111 + 80) = v123;
        uint64_t v124 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v113, (uint64_t)&_mh_execute_header, v124, (uint64_t)"<%{public}@> Marking zoneNotFound failure as unrecoverable for shared record %{public}@", 87, 2, v111);
        swift_setDeallocating();
        swift_arrayDestroy();

        a2 = v140;
        uint64_t v125 = v138;
        sub_1008BF128((uint64_t)v139, v97, v140);
        swift_release();
        a1 = v97;
      }
      else
      {
        uint64_t v125 = v138;
        sub_1008D099C((uint64_t)v139);
        swift_release();
        a1 = v97;
        a2 = v140;
      }
      uint64_t v3 = v125;
      break;
    case 7uLL:
      sub_1008BE5C0((uint64_t)v16, a1, a2);
      goto LABEL_48;
    default:
      uint64_t v143 = (uint64_t)a2;
      _BridgedStoredNSError.code.getter();
      if (v145 <= 0x24 && ((1 << v145) & 0x1000A002D8) != 0)
      {
        id v139 = v16;
        uint64_t v140 = a2;
        id v41 = a1;
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v42 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v43 = swift_initStackObject();
        id v44 = (void *)v43;
        *(_OWORD *)(v43 + 16) = xmmword_10117E800;
        BOOL v45 = v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope] == 0;
        if (v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
          uint64_t v46 = 0x5320646572616853;
        }
        else {
          uint64_t v46 = 0x2065746176697250;
        }
        id v138 = v3;
        if (v45) {
          unint64_t v47 = 0xED000065706F6353;
        }
        else {
          unint64_t v47 = 0xEC00000065706F63;
        }
        *(void *)(v43 + 56) = &type metadata for String;
        unint64_t v48 = sub_100528BE4();
        void v44[4] = v46;
        id v137 = v44 + 4;
        v44[8] = v48;
        v44[5] = v47;
        uint64_t v143 = 0x203A65707954;
        unint64_t v144 = 0xE600000000000000;
        id v136 = v42;
        uint64_t v49 = v41;
        v50._countAndFlagsBits = CKRecord.recordType.getter();
        String.append(_:)(v50);
        swift_bridgeObjectRelease();
        v51._countAndFlagsBits = 0x203A444920;
        v51._object = (void *)0xE500000000000000;
        String.append(_:)(v51);
        id v52 = [v41 recordID];
        id v53 = [v52 recordName];

        uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v56 = v55;

        v57._countAndFlagsBits = v54;
        v57._object = v56;
        String.append(_:)(v57);
        swift_bridgeObjectRelease();
        uint64_t v58 = v143;
        unint64_t v59 = v144;
        v44[12] = &type metadata for String;
        v44[13] = v48;
        v44[9] = v58;
        v44[10] = v59;
        a2 = v140;
        uint64_t v60 = v140;
        uint64_t v61 = sub_1009F4A44(v60);
        uint64_t v63 = v62;

        v44[17] = &type metadata for String;
        v44[18] = v48;
        v44[14] = v61;
        v44[15] = v63;
        uint64_t v143 = (uint64_t)v60;
        id v64 = v60;
        uint64_t v65 = String.init<A>(reflecting:)();
        v44[22] = &type metadata for String;
        v44[23] = v48;
        a1 = v49;
        uint64_t v3 = v138;
        v44[19] = v65;
        v44[20] = v66;
        uint64_t v67 = static os_log_type_t.default.getter();
        id v68 = v136;
        sub_100BAC898((uint64_t)v136, (uint64_t)&_mh_execute_header, v67, (uint64_t)"<%{public}@> Failed to save record due to a retriable error. Record %{public}@ Error: %{public}@ <%@>", 101, 2, (uint64_t)v44);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_1008BEC6C((uint64_t)v139, a1, v64);
      }
      else
      {
        sub_1008BF128((uint64_t)v16, a1, a2);
      }
LABEL_48:
      swift_release();
      break;
  }
LABEL_16:
  sub_1008BE2F4((uint64_t)v3, a2, a1);
}

void sub_1008BE2F4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v5 && (uint64_t v6 = *(void *)(v5 + 64)) != 0)
  {
    uint64_t v8 = *(void **)(*(void *)(v6 + 16) + 16);
    swift_retain();
    id v26 = v8;
    sub_1008C0D1C(a2, v26, 0);
    swift_release();
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    __n128 v9 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    id v11 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    BOOL v12 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v13 = 0x5320646572616853;
    }
    else {
      uint64_t v13 = 0x2065746176697250;
    }
    if (v12) {
      unint64_t v14 = 0xED000065706F6353;
    }
    else {
      unint64_t v14 = 0xEC00000065706F63;
    }
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v15 = sub_100528BE4();
    v11[4] = v13;
    v11[8] = v15;
    v11[5] = v14;
    id v16 = v9;
    v17._countAndFlagsBits = CKRecord.recordType.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = 0x203A444920;
    v18._object = (void *)0xE500000000000000;
    String.append(_:)(v18);
    id v19 = [a3 recordID];
    id v20 = [v19 recordName];

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    v11[12] = &type metadata for String;
    v11[13] = v15;
    v11[9] = 0x203A65707954;
    v11[10] = 0xE600000000000000;
    uint64_t v25 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v25, (uint64_t)"<%{public}@> Failed to find the current batch to notify throttler about save failure for record %{public}@", 106, 2, (uint64_t)v11);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

void sub_1008BE5C0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v71 = a1;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  id v11 = (uint64_t *)((char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  BOOL v12 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v6, v9);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v11, v6);
  if (v12)
  {
    uint64_t v70 = a3;
    if (qword_10166FB88 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  unint64_t v14 = (void *)static OS_os_log.dataSync;
  uint64_t v74 = sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  id v16 = (void *)inited;
  long long v68 = xmmword_10117D8C0;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v17 = 0x5320646572616853;
  }
  else {
    uint64_t v17 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v18 = 0xEC00000065706F63;
  }
  else {
    unint64_t v18 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v19 = sub_100528BE4();
  v16[8] = v19;
  uint64_t v73 = v17;
  v16[4] = v17;
  v16[5] = v18;
  uint64_t v76 = 0x203A65707954;
  unint64_t v77 = 0xE600000000000000;
  id v20 = v14;
  uint64_t v75 = v3;
  id v21 = v20;
  v22._countAndFlagsBits = CKRecord.recordType.getter();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0x203A444920;
  v23._object = (void *)0xE500000000000000;
  String.append(_:)(v23);
  unint64_t v69 = a2;
  id v24 = [a2 recordID];
  id v25 = [v24 recordName];

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v28 = v27;

  v29._countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  uint64_t v30 = v76;
  unint64_t v31 = v77;
  v16[12] = &type metadata for String;
  v16[13] = v19;
  v16[9] = v30;
  v16[10] = v31;
  uint64_t v32 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v32, (uint64_t)"<%{public}@> Encountered .userDeletedZone error while saving record {%@}. It needs to be recreated.", 99, 2, (uint64_t)v16);
  swift_setDeallocating();
  uint64_t v33 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (*(void *)(v75 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask))
  {
    uint64_t v34 = v73;
    unint64_t v35 = v18;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v66 = v33;
      unint64_t v37 = v19;
      uint64_t v38 = v71;
      uint64_t v39 = *(void **)(*(void *)(v71 + 16) + 16);
      uint64_t v40 = Strong;
      swift_retain();
      id v41 = v39;
      uint64_t v67 = v40;
      if (sub_100D2D0CC())
      {
        swift_beginAccess();
        sub_100CBAAE4(v78, v41);
        swift_endAccess();

        id v42 = v69;
      }
      else
      {
        uint64_t v49 = (void *)static OS_os_log.dataSync;
        uint64_t v50 = swift_initStackObject();
        *(_OWORD *)(v50 + 16) = v68;
        *(void *)(v50 + 56) = &type metadata for String;
        *(void *)(v50 + 64) = v37;
        unint64_t v65 = v37;
        *(void *)(v50 + 32) = v34;
        *(void *)(v50 + 40) = v35;
        uint64_t v76 = 0x203A65707954;
        unint64_t v77 = 0xE600000000000000;
        id v51 = v49;
        id v42 = v69;
        v52._countAndFlagsBits = CKRecord.recordType.getter();
        String.append(_:)(v52);
        swift_bridgeObjectRelease();
        v53._countAndFlagsBits = 0x203A444920;
        v53._object = (void *)0xE500000000000000;
        String.append(_:)(v53);
        id v54 = [v42 recordID];
        id v55 = [v54 recordName];

        uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v58 = v57;

        uint64_t v38 = v71;
        v59._countAndFlagsBits = v56;
        v59._object = v58;
        String.append(_:)(v59);
        swift_bridgeObjectRelease();
        uint64_t v60 = v76;
        unint64_t v61 = v77;
        unint64_t v62 = v65;
        *(void *)(v50 + 96) = &type metadata for String;
        *(void *)(v50 + 104) = v62;
        *(void *)(v50 + 72) = v60;
        *(void *)(v50 + 80) = v61;
        uint64_t v63 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v51, (uint64_t)&_mh_execute_header, v63, (uint64_t)"<%{public}@> Encountered .userDeletedZone error while saving a record that should not recreate a metadata zone {%@}.", 116, 2, v50);
        swift_setDeallocating();
        swift_arrayDestroy();
      }
      sub_1008BF128(v38, v42, v70);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v46 = (void *)static OS_os_log.dataSync;
      uint64_t v47 = swift_initStackObject();
      *(_OWORD *)(v47 + 16) = xmmword_10117E810;
      *(void *)(v47 + 56) = &type metadata for String;
      *(void *)(v47 + 64) = v19;
      *(void *)(v47 + 32) = v34;
      *(void *)(v47 + 40) = v18;
      swift_retain();
      id v41 = v46;
      uint64_t v48 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v41, (uint64_t)&_mh_execute_header, v48, (uint64_t)"<%{public}@> Cannot handle save failure since a sync logic provider is not set", 78, 2, v47);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_release();
    }
  }
  else
  {
    uint64_t v43 = (void *)static OS_os_log.dataSync;
    uint64_t v44 = swift_initStackObject();
    *(_OWORD *)(v44 + 16) = xmmword_10117E810;
    *(void *)(v44 + 56) = &type metadata for String;
    *(void *)(v44 + 64) = v19;
    *(void *)(v44 + 32) = v73;
    *(void *)(v44 + 40) = v18;
    id v41 = v43;
    uint64_t v45 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v41, (uint64_t)&_mh_execute_header, v45, (uint64_t)"<%{public}@> Could not find active save task for handling zone-not-found error", 78, 2, v44);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
}

void sub_1008BEC6C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v44 = a3;
  uint64_t v45 = a1;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v11 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t, __n128))(v6 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v5, v8);
  id v12 = v11;
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
  if (v13)
  {
    id v43 = a2;
    if (qword_10166FB88 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  unint64_t v14 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  id v16 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  BOOL v17 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v18 = 0x5320646572616853;
  }
  else {
    uint64_t v18 = 0x2065746176697250;
  }
  if (v17) {
    unint64_t v19 = 0xED000065706F6353;
  }
  else {
    unint64_t v19 = 0xEC00000065706F63;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v20 = sub_100528BE4();
  v16[8] = v20;
  uint64_t v42 = v18;
  v16[4] = v18;
  v16[5] = v19;
  v47[0] = v44;
  type metadata accessor for CKError(0);
  sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
  id v21 = v14;
  uint64_t v22 = _BridgedStoredNSError.errorCode.getter();
  v16[12] = &type metadata for Int;
  v16[13] = &protocol witness table for Int;
  v16[9] = v22;
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v23, (uint64_t)"<%{public}@> Received retriable cloud error %d", 46, 2, (uint64_t)v16);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v24 = [v43 recordID];
  uint64_t v25 = *(void *)(*(void *)(v45 + 16) + 24);
  if (*(void *)(v25 + 16))
  {
    swift_bridgeObjectRetain();
    id v26 = v24;
    unint64_t v27 = sub_100956CAC((uint64_t)v26);
    if (v28)
    {
      Swift::String v29 = (uint64_t *)(*(void *)(v25 + 56) + 16 * v27);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      swift_unknownObjectRetain();

      swift_bridgeObjectRelease();
      v47[0] = v31;
      v47[1] = v30 | 0x8000000000000000;
      uint64_t v32 = v44;
      uint64_t v33 = v45;
      v47[3] = 0;
      v47[4] = 0;
      v47[2] = v44;
      swift_beginAccess();
      swift_unknownObjectRetain_n();
      id v34 = v32;
      id v35 = v26;
      id v36 = v34;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = *(void *)(v33 + 64);
      *(void *)(v33 + 64) = 0x8000000000000000;
      sub_100977310((uint64_t)v47, v35, isUniquelyReferenced_nonNull_native);
      *(void *)(v33 + 64) = v46;

      swift_bridgeObjectRelease();
      swift_endAccess();

      swift_unknownObjectRelease_n();
      return;
    }

    swift_bridgeObjectRelease();
  }
  uint64_t v38 = (void *)static OS_os_log.dataSync;
  uint64_t v39 = swift_initStackObject();
  *(_OWORD *)(v39 + 16) = xmmword_10117E810;
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = v20;
  *(void *)(v39 + 32) = v42;
  *(void *)(v39 + 40) = v19;
  id v40 = v38;
  uint64_t v41 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v41, (uint64_t)"<%{public}@> Failed to find the local change to populate an error while saving.", 79, 2, v39);
  swift_setDeallocating();
  swift_arrayDestroy();
}

void sub_1008BF128(uint64_t a1, void *a2, void *a3)
{
  uint64_t v46 = a1;
  uint64_t v47 = a3;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v11 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t, __n128))(v6 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v5, v8);
  id v12 = v11;
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
  if (v13)
  {
    id v45 = a2;
    if (qword_10166FB88 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  unint64_t v14 = (void *)static OS_os_log.dataSync;
  uint64_t v44 = sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  id v16 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v43 = v3;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v17 = 0x5320646572616853;
  }
  else {
    uint64_t v17 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v18 = 0xEC00000065706F63;
  }
  else {
    unint64_t v18 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v19 = sub_100528BE4();
  v16[8] = v19;
  v16[4] = v17;
  v16[5] = v18;
  v49[0] = v47;
  type metadata accessor for CKError(0);
  sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
  id v20 = v14;
  uint64_t v21 = _BridgedStoredNSError.errorCode.getter();
  v16[12] = &type metadata for Int;
  v16[13] = &protocol witness table for Int;
  v16[9] = v21;
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v22, (uint64_t)"<%{public}@> Received unrecoverable cloud error %d", 50, 2, (uint64_t)v16);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v23 = [v45 recordID];
  uint64_t v24 = v46;
  uint64_t v25 = *(void *)(*(void *)(v46 + 16) + 24);
  if (!*(void *)(v25 + 16)) {
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  id v26 = v23;
  unint64_t v27 = sub_100956CAC((uint64_t)v26);
  if ((v28 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v38 = (void *)static OS_os_log.dataSync;
    uint64_t v39 = swift_initStackObject();
    *(_OWORD *)(v39 + 16) = xmmword_10117E810;
    *(void *)(v39 + 56) = &type metadata for String;
    *(void *)(v39 + 64) = v19;
    *(void *)(v39 + 32) = v17;
    *(void *)(v39 + 40) = v18;
    id v40 = v38;
    uint64_t v41 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v41, (uint64_t)"<%{public}@> Failed to find the local change to populate an error while saving.", 79, 2, v39);
    swift_setDeallocating();
    swift_arrayDestroy();

    return;
  }
  Swift::String v29 = (uint64_t *)(*(void *)(v25 + 56) + 16 * v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  swift_unknownObjectRetain();

  swift_bridgeObjectRelease();
  v49[0] = v31;
  v49[1] = v30 | 0x8000000000000000;
  v49[3] = 0;
  v49[4] = 0;
  uint64_t v32 = v47;
  v49[2] = v47;
  swift_beginAccess();
  swift_unknownObjectRetain_n();
  id v33 = v32;
  id v34 = v26;
  id v35 = v33;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v48 = *(void *)(v24 + 64);
  *(void *)(v24 + 64) = 0x8000000000000000;
  sub_100977310((uint64_t)v49, v34, isUniquelyReferenced_nonNull_native);
  *(void *)(v24 + 64) = v48;

  swift_bridgeObjectRelease();
  swift_endAccess();

  swift_unknownObjectRelease_n();
  uint64_t v37 = *(void *)(v43 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v37) {
    *(unsigned char *)(v37 + 56) = 1;
  }
}

uint64_t sub_1008BF5FC()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  _OWORD v7[3] = 0;
  v7[4] = v0;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  id v9 = v0;
  if (v8 == 1)
  {
    sub_100522F00((uint64_t)v4, &qword_101672BB0);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_101685CE0;
  *(void *)(v13 + 24) = v7;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1008BF83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[43] = a4;
  uint64_t v5 = type metadata accessor for CKSyncEngine.SendChangesOptions.Scope();
  v4[44] = v5;
  v4[45] = *(void *)(v5 - 8);
  v4[46] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CKSyncEngine.SendChangesOptions();
  v4[47] = v6;
  v4[48] = *(void *)(v6 - 8);
  v4[49] = swift_task_alloc();
  return _swift_task_switch(sub_1008BF958, 0, 0);
}

uint64_t sub_1008BF958()
{
  uint64_t v1 = *(void *)(v0 + 344) + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
  swift_beginAccess();
  sub_100522E9C(v1, v0 + 128, &qword_101685C68);
  if (*(void *)(v0 + 152))
  {
    uint64_t v3 = *(void *)(v0 + 360);
    uint64_t v2 = *(void *)(v0 + 368);
    uint64_t v4 = *(void *)(v0 + 352);
    sub_10053974C((long long *)(v0 + 128), v0 + 168);
    sub_10050F848((void *)(v0 + 168), *(void *)(v0 + 192));
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for CKSyncEngine.SendChangesOptions.Scope.all(_:), v4);
    CKSyncEngine.SendChangesOptions.init(scope:operationGroup:)();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1008BFB90;
    uint64_t v6 = *(void *)(v0 + 392);
    return CKSyncEngine.sendChanges(_:)(v6);
  }
  else
  {
    sub_100522F00(v0 + 128, &qword_101685C68);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)static OS_os_log.dataSync;
    uint64_t v8 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Failed to request save from SyncEngine because of no SyncEngine exists.", 71, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_task_dealloc();
    swift_task_dealloc();
    id v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_1008BFB90()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 392);
  uint64_t v3 = *(void *)(*(void *)v1 + 384);
  uint64_t v4 = *(void *)(*(void *)v1 + 376);
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_1008BFD74;
  }
  else {
    uint64_t v5 = sub_1008BFD00;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1008BFD00()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008BFD74()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 21));
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[40];
  id v5 = v1;
  uint64_t v6 = Error.publicDescription.getter(v3, v4);
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(v0[36]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"sendChanges call to SyncEngine failed because of error: %{public}@ %@", 69, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008BFF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 344) = a4;
  *(void *)(v5 + 352) = a5;
  return _swift_task_switch(sub_1008BFF90, 0, 0);
}

uint64_t sub_1008BFF90()
{
  uint64_t v1 = *(void *)(v0 + 344) + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncEngine;
  swift_beginAccess();
  sub_100522E9C(v1, v0 + 128, &qword_101685C68);
  if (*(void *)(v0 + 152))
  {
    sub_10053974C((long long *)(v0 + 128), v0 + 168);
    sub_10050F848((void *)(v0 + 168), *(void *)(v0 + 192));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1008C0158;
    uint64_t v3 = *(void *)(v0 + 352);
    return CKSyncEngine.fetchChanges(_:)(v3);
  }
  else
  {
    sub_100522F00(v0 + 128, &qword_101685C68);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.dataSync;
    uint64_t v5 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Failed to request fetch from SyncEngine because of no SyncEngine exists.", 72, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_1008C0158()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008C02CC;
  }
  else {
    uint64_t v2 = sub_1008C026C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008C026C()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 168);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008C02CC()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 21));
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[40];
  id v5 = v1;
  uint64_t v6 = Error.publicDescription.getter(v3, v4);
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(v0[36]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"fetchChanges call to SyncEngine failed because of error: %{public}@ %@", 70, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

void sub_1008C04B4(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (void *)((char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t, __n128))(v4 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v3, v6);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v8, v3);
  if (v9)
  {
    if (qword_10166FB88 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  uint64_t v11 = (void *)static OS_os_log.dataSync;
  uint64_t v42 = sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v13 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v14 = 0x5320646572616853;
  }
  else {
    uint64_t v14 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v15 = 0xEC00000065706F63;
  }
  else {
    unint64_t v15 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v16 = sub_100528BE4();
  v13[8] = v16;
  uint64_t v43 = v1;
  uint64_t v41 = v14;
  v13[4] = v14;
  v13[5] = v15;
  id v17 = v11;
  id v18 = [a1 zoneID];
  id v40 = a1;
  id v19 = v18;
  v13[12] = sub_10050BF48(0, (unint64_t *)&qword_101674210);
  v13[13] = sub_10062E0F4(&qword_101685C78, (unint64_t *)&qword_101674210);
  v13[9] = v19;
  uint64_t v20 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v20, (uint64_t)"<%{public}@> Saved recordZone %{public}@", 40, 2, (uint64_t)v13);
  swift_setDeallocating();
  uint64_t v21 = sub_1005057FC(&qword_101672B50);
  uint64_t v22 = v43;
  swift_arrayDestroy();

  uint64_t v23 = *(void *)(v22 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v23)
  {
    v38[1] = v21;
    unint64_t v39 = v16;
    unint64_t v24 = v15;
    uint64_t v25 = v41;
    swift_retain();
    id v26 = [v40 zoneID];
    sub_1008C1530(v26, 0);

    swift_beginAccess();
    uint64_t v27 = *(void *)(v23 + 40);
    if ((v27 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = __CocoaSet.count.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    unint64_t v33 = v39;
    if (!v28)
    {
      id v34 = (void *)static OS_os_log.dataSync;
      uint64_t v35 = swift_initStackObject();
      *(_OWORD *)(v35 + 16) = xmmword_10117E810;
      *(void *)(v35 + 56) = &type metadata for String;
      *(void *)(v35 + 64) = v33;
      *(void *)(v35 + 32) = v25;
      *(void *)(v35 + 40) = v24;
      id v36 = v34;
      uint64_t v37 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v37, (uint64_t)"<%{public}@> Record zones finished saving. Enqueing record save", 63, 2, v35);
      swift_setDeallocating();
      swift_arrayDestroy();

      sub_1008BF5FC();
    }
    swift_release();
  }
  else
  {
    Swift::String v29 = (void *)static OS_os_log.dataSync;
    uint64_t v30 = swift_initStackObject();
    *(_OWORD *)(v30 + 16) = xmmword_10117E810;
    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = v16;
    *(void *)(v30 + 32) = v41;
    *(void *)(v30 + 40) = v15;
    id v31 = v29;
    uint64_t v32 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v32, (uint64_t)"<%{public}@> Could not find active save task for handling successful zone save", 78, 2, v30);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
}

void sub_1008C098C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (void *)((char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v6, v9);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v11, v6);
  if (v12)
  {
    if (qword_10166FB88 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  uint64_t v14 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  unint64_t v16 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v17 = 0x5320646572616853;
  }
  else {
    uint64_t v17 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v18 = 0xEC00000065706F63;
  }
  else {
    unint64_t v18 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v19 = sub_100528BE4();
  v16[8] = v19;
  v16[4] = v17;
  v16[5] = v18;
  id v20 = v14;
  id v21 = a2;
  uint64_t v22 = sub_1009F4A44(v21);
  uint64_t v24 = v23;

  v16[12] = &type metadata for String;
  v16[13] = v19;
  v16[9] = v22;
  v16[10] = v24;
  id v34 = v21;
  type metadata accessor for CKError(0);
  id v25 = v21;
  uint64_t v26 = String.init<A>(reflecting:)();
  v16[17] = &type metadata for String;
  v16[18] = v19;
  v16[14] = v26;
  v16[15] = v27;
  uint64_t v28 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v28, (uint64_t)"<%{public}@> Failed to save recordZone %{public}@ due to error: %{public}@ <%@>", 79, 2, (uint64_t)v16);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v29 = [a1 zoneID];
  sub_1008C0D1C(v25, v29, 0);

  v33[1] = v25;
  sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
  _BridgedStoredNSError.code.getter();
  id v30 = v34;
  id v31 = [a1 zoneID];
  uint64_t v32 = v31;
  if (v30 == (id)27) {
    sub_1008D13F0(v31);
  }
  else {
    sub_1008D1958(v31);
  }
}

void sub_1008C0D1C(void *a1, void *a2, char a3)
{
  uint64_t v6 = v3;
  Swift::String v59 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (void *)((char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t, __n128))(v10 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v9, v12);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v14, v9);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v14 = (void *)0xED000065706F6353;
  unint64_t v4 = 0xEC00000065706F63;
  uint64_t v5 = 0x5320646572616853;
  uint64_t v17 = *(void *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (v17)
  {
    int v58 = a3 & 1;
    if (a3)
    {
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_retain();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0) {
        goto LABEL_36;
      }
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRelease();
    }
    uint64_t v26 = *(void *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    if (v26)
    {
      unint64_t v60 = (unint64_t)a1;
      type metadata accessor for CKError(0);
      sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
      swift_retain();
      _BridgedStoredNSError.code.getter();
      if (v62 == 23
        || (id v61 = a1, _BridgedStoredNSError.code.getter(), v60 > 0x24)
        || ((1 << v60) & 0x1000A002D8) == 0)
      {
        swift_release();
        unint64_t v4 = 0xEC00000065706F63;
        uint64_t v5 = 0x5320646572616853;
      }
      else
      {
        unint64_t v35 = 0xEC00000065706F63;
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v36 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        initeCGFloat d = swift_initStackObject();
        uint64_t v38 = inited;
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        if (*(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
          uint64_t v39 = 0x5320646572616853;
        }
        else {
          uint64_t v39 = 0x2065746176697250;
        }
        if (!*(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
          unint64_t v35 = 0xED000065706F6353;
        }
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(v38 + 32) = v39;
        *(void *)(v38 + 40) = v35;
        uint64_t v14 = (void *)0xED000065706F6353;
        id v40 = v36;
        uint64_t v41 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v41, (uint64_t)"<%{public}@> encounteredThrottlingErrorForAllZones", 50, 2, v38);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        unint64_t v4 = 0xEC00000065706F63;
        swift_arrayDestroy();

        uint64_t v5 = 0x5320646572616853;
        *(unsigned char *)(v26 + 57) = 1;
        swift_release();
      }
LABEL_36:
      v57[1] = v17;
      if (qword_10166FB88 == -1)
      {
LABEL_37:
        swift_beginAccess();
        uint64_t v42 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v43 = swift_initStackObject();
        uint64_t v44 = (void *)v43;
        *(_OWORD *)(v43 + 16) = xmmword_10117DF40;
        BOOL v45 = *(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
        if (*(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
          uint64_t v46 = v5;
        }
        else {
          uint64_t v46 = 0x2065746176697250;
        }
        if (!v45) {
          uint64_t v14 = (void *)v4;
        }
        *(void *)(v43 + 56) = &type metadata for String;
        unint64_t v47 = sub_100528BE4();
        v44[8] = v47;
        void v44[4] = v46;
        v44[5] = v14;
        id v48 = v42;
        id v49 = a1;
        uint64_t v50 = sub_1009F4A44(v49);
        uint64_t v52 = v51;

        v44[12] = &type metadata for String;
        v44[13] = v47;
        v44[9] = v50;
        v44[10] = v52;
        id v61 = v49;
        type metadata accessor for CKError(0);
        id v53 = v49;
        uint64_t v54 = String.init<A>(reflecting:)();
        v44[17] = &type metadata for String;
        v44[18] = v47;
        v44[14] = v54;
        v44[15] = v55;
        uint64_t v56 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v48, (uint64_t)&_mh_execute_header, v56, (uint64_t)"<%{public}@> Updating earliest start date after error \"<%{public}@> <%@>\"", 73, 2, (uint64_t)v44);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_1008AFC0C(v58, (unint64_t)v53, v59);
        swift_release();
        return;
      }
LABEL_44:
      swift_once();
      goto LABEL_37;
    }
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v27 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v28 = swift_initStackObject();
    uint64_t v29 = v28;
    *(_OWORD *)(v28 + 16) = xmmword_10117E810;
    BOOL v30 = *(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
    if (*(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v31 = 0x5320646572616853;
    }
    else {
      uint64_t v31 = 0x2065746176697250;
    }
    if (v30) {
      unint64_t v32 = 0xED000065706F6353;
    }
    else {
      unint64_t v32 = 0xEC00000065706F63;
    }
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_100528BE4();
    *(void *)(v29 + 32) = v31;
    *(void *)(v29 + 40) = v32;
    id v33 = v27;
    uint64_t v34 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v34, (uint64_t)"<%{public}@> Could not find active save task for handling failure", 65, 2, v29);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_release();
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v18 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v19 = swift_initStackObject();
    uint64_t v20 = v19;
    *(_OWORD *)(v19 + 16) = xmmword_10117E810;
    int v21 = *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
    if (*(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v22 = 0x5320646572616853;
    }
    else {
      uint64_t v22 = 0x2065746176697250;
    }
    if (v21) {
      uint64_t v14 = (void *)0xEC00000065706F63;
    }
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_100528BE4();
    *(void *)(v20 + 32) = v22;
    *(void *)(v20 + 40) = v14;
    id v23 = v18;
    uint64_t v24 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"<%{public}@> Attempting update throttling state after error but scheduler not found", 83, 2, v20);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

void sub_1008C1530(void *a1, char a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_1005057FC(&qword_101674228);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v14 = __chkstk_darwin(v11, v13);
  id v16 = (uint64_t *)((char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *id v16 = (uint64_t)v17;
  (*(void (**)(uint64_t *, void, uint64_t, __n128))(v12 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v11, v14);
  id v18 = v17;
  uint64_t v19 = _dispatchPreconditionTest(_:)();
  int v21 = *(void (**)(uint64_t *, uint64_t))(v12 + 8);
  uint64_t v20 = v12 + 8;
  v21(v16, v11);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v19 = 0xED000065706F6353;
  uint64_t v11 = 0xEC00000065706F63;
  uint64_t v20 = 0x5320646572616853;
  uint64_t v22 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (!v22)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v39 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v41 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    {
      unint64_t v42 = 0xEC00000065706F63;
    }
    else
    {
      uint64_t v20 = 0x2065746176697250;
      unint64_t v42 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v41 + 32) = v20;
    *(void *)(v41 + 40) = v42;
    id v43 = v39;
    uint64_t v44 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v44, (uint64_t)"<%{public}@> Attempting update throttling state for zone save success but scheduler not found", 93, 2, v41);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    goto LABEL_36;
  }
  id v16 = &static OS_os_log.dataSync;
  id v78 = v10;
  if (a2)
  {
    int v79 = a2 & 1;
    uint64_t v80 = v22;
    swift_retain();
    goto LABEL_21;
  }
  uint64_t v23 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (!v23)
  {
    uint64_t v70 = qword_10166FB88;
    swift_retain();
    if (v70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v71 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v72 = swift_initStackObject();
    uint64_t v73 = v72;
    *(_OWORD *)(v72 + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    {
      unint64_t v74 = 0xEC00000065706F63;
    }
    else
    {
      uint64_t v20 = 0x2065746176697250;
      unint64_t v74 = 0xED000065706F6353;
    }
    *(void *)(v72 + 56) = &type metadata for String;
    *(void *)(v72 + 64) = sub_100528BE4();
    *(void *)(v73 + 32) = v20;
    *(void *)(v73 + 40) = v74;
    id v43 = v71;
    uint64_t v75 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v75, (uint64_t)"<%{public}@> Could not find active save task for zone save success", 66, 2, v73);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_release();
LABEL_36:

    return;
  }
  int v79 = 0;
  uint64_t v24 = qword_10166FB88;
  uint64_t v80 = v22;
  uint64_t v25 = v23;
  swift_retain();
  uint64_t v77 = v25;
  swift_retain();
  if (v24 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v26 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v27 = swift_initStackObject();
  uint64_t v28 = (void *)v27;
  *(_OWORD *)(v27 + 16) = xmmword_10117D8C0;
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v29 = 0x5320646572616853;
  }
  else {
    uint64_t v29 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v30 = 0xEC00000065706F63;
  }
  else {
    unint64_t v30 = 0xED000065706F6353;
  }
  *(void *)(v27 + 56) = &type metadata for String;
  unint64_t v31 = sub_100528BE4();
  v28[8] = v31;
  v28[4] = v29;
  v28[5] = v30;
  id v32 = v26;
  id v33 = [a1 zoneName];
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  uint64_t v19 = 0xED000065706F6353;
  v28[12] = &type metadata for String;
  v28[13] = v31;
  v28[9] = v34;
  v28[10] = v36;
  uint64_t v20 = 0x5320646572616853;
  uint64_t v11 = 0xEC00000065706F63;
  uint64_t v37 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v37, (uint64_t)"<%{public}@> Removing zoneID from unsaved zones after success %{public}@", 72, 2, (uint64_t)v28);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  id v16 = &static OS_os_log.dataSync;
  swift_arrayDestroy();

  swift_beginAccess();
  uint64_t v38 = (void *)sub_100D177FC(a1);
  swift_endAccess();
  swift_release();

LABEL_21:
  uint64_t v3 = a1;
  if (qword_10166FB88 != -1) {
LABEL_38:
  }
    swift_once();
  swift_beginAccess();
  BOOL v45 = (void *)*v16;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v46 = swift_initStackObject();
  unint64_t v47 = (void *)v46;
  *(_OWORD *)(v46 + 16) = xmmword_10117D8C0;
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v19 = v11;
  }
  else {
    uint64_t v20 = 0x2065746176697250;
  }
  *(void *)(v46 + 56) = &type metadata for String;
  unint64_t v48 = sub_100528BE4();
  v47[8] = v48;
  v47[4] = v20;
  v47[5] = v19;
  id v49 = v45;
  uint64_t v77 = (uint64_t)v3;
  id v50 = [v3 zoneName];
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;

  v47[12] = &type metadata for String;
  v47[13] = v48;
  v47[9] = v51;
  v47[10] = v53;
  uint64_t v54 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v49, (uint64_t)&_mh_execute_header, v54, (uint64_t)"<%{public}@> Clearing throttling state for batch with zoneID:<%{public}@>", 73, 2, (uint64_t)v47);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v55 = sub_1008ACD04();
  uint64_t v56 = sub_100F47630(v81, v79);
  uint64_t v58 = v57;
  uint64_t v59 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v58, 1, v59))
  {
    uint64_t v61 = v77;
    uint64_t v60 = (uint64_t)v78;
    sub_10095C7C4(v77, (uint64_t)v78);
    sub_100522F00(v60, &qword_101674228);
    uint64_t v62 = v58 + *(int *)(v59 + 20);
    uint64_t v63 = type metadata accessor for CRLThrottleInfo(0);
    uint64_t v64 = (void *)v61;
    uint64_t v65 = *(void *)(v63 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v62, 1, v63))
    {
      uint64_t v66 = *(void **)(v62 + *(int *)(v63 + 20));
      sub_10050BF48(0, (unint64_t *)&qword_101674210);
      id v67 = v66;
      id v68 = v64;
      char v69 = static NSObject.== infix(_:_:)();

      if (v69)
      {
        sub_100522F00(v62, &qword_101674228);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v62, 1, 1, v63);
      }
    }
  }
  ((void (*)(void *, void))v56)(v81, 0);
  ((void (*)(uint64_t *, void))v55)(&v82, 0);
  swift_release();
}

uint64_t sub_1008C1EA0(uint64_t a1)
{
  v2[67] = v1;
  v2[66] = a1;
  type metadata accessor for SyncEvent.DidSendChanges(0);
  v2[68] = swift_task_alloc();
  type metadata accessor for SyncEvent.WillSendChanges(0);
  v2[69] = swift_task_alloc();
  v2[70] = type metadata accessor for SyncEvent(0);
  v2[71] = swift_task_alloc();
  return _swift_task_switch(sub_1008C1F90, 0, 0);
}

uint64_t sub_1008C1F90()
{
  uint64_t v60 = v0 + 400;
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  uint64_t v59 = (_OWORD *)(v0 + 440);
  uint64_t v1 = *(void *)(v0 + 568);
  uint64_t v2 = *(void *)(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 528);
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v6 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  BOOL v7 = *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v8 = 0x5320646572616853;
  }
  else {
    uint64_t v8 = 0x2065746176697250;
  }
  if (v7) {
    unint64_t v9 = 0xED000065706F6353;
  }
  else {
    unint64_t v9 = 0xEC00000065706F63;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  v6[8] = v10;
  v6[4] = v8;
  v6[5] = v9;
  id v11 = v4;
  unint64_t v12 = SyncEvent.description.getter();
  v6[12] = &type metadata for String;
  v6[13] = v10;
  v6[9] = v12;
  v6[10] = v13;
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v14, (uint64_t)"<%{public}@> Received new SyncEngine event: <%{public}@>", 56, 2, (uint64_t)v6);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_1008D11CC(v3, v1, type metadata accessor for SyncEvent);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v20 = *(void *)(v0 + 568);
      int v21 = *(void **)v20;
      uint64_t v22 = *(void **)(v20 + 8);
      unsigned __int8 v23 = *(unsigned char *)(v20 + 16);
      sub_1008C4F7C(*(void **)v20, v22, v23);
      sub_1006D21A4(v21, v22, v23);
      break;
    case 2u:
      sub_1008C5A58(**(void **)(v0 + 568), *(void *)(*(void *)(v0 + 568) + 8));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      uint64_t v24 = *(uint64_t **)(v0 + 568);
      uint64_t v25 = *(char **)(v0 + 536);
      uint64_t v26 = *v24;
      uint64_t v27 = v24[1];
      uint64_t v28 = *(void **)&v25[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
      uint64_t v29 = (void *)swift_allocObject();
      void v29[2] = v26;
      v29[3] = v27;
      v29[4] = v25;
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = sub_1008D1310;
      *(void *)(v30 + 24) = v29;
      *(void *)(v0 + 384) = sub_100659320;
      *(void *)(v0 + 392) = v30;
      *(void *)(v0 + 352) = _NSConcreteStackBlock;
      *(void *)(v0 + 360) = *(void *)"";
      *(void *)(v0 + 368) = sub_1006D9628;
      *(void *)(v0 + 376) = &unk_101519028;
      unint64_t v31 = _Block_copy((const void *)(v0 + 352));
      id v32 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v33 = v25;
      swift_retain();
      swift_release();
      dispatch_sync(v32, v31);

      _Block_release(v31);
      LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v31)
      {
        __break(1u);
        goto LABEL_15;
      }
      break;
    case 4u:
LABEL_15:
      sub_1008C6E9C(**(void **)(v0 + 568), *(void *)(*(void *)(v0 + 568) + 8), *(void *)(*(void *)(v0 + 568) + 16), *(void *)(*(void *)(v0 + 568) + 24));
      goto LABEL_17;
    case 5u:
      sub_1008C75AC(**(void **)(v0 + 568), *(void *)(*(void *)(v0 + 568) + 8), *(void *)(*(void *)(v0 + 568) + 16), *(void *)(*(void *)(v0 + 568) + 24));
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 6u:
      uint64_t v34 = **(void ***)(v0 + 568);
      uint64_t v35 = (void *)static OS_os_log.dataSync;
      uint64_t v36 = swift_initStackObject();
      *(_OWORD *)(v36 + 16) = xmmword_10117D8C0;
      *(void *)(v36 + 56) = &type metadata for String;
      *(void *)(v36 + 64) = v10;
      *(void *)(v36 + 32) = v8;
      *(void *)(v36 + 40) = v9;
      id v37 = v35;
      uint64_t v38 = v34;
      id v39 = [v34 zoneName];
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      *(void *)(v36 + 96) = &type metadata for String;
      *(void *)(v36 + 104) = v10;
      *(void *)(v36 + 72) = v40;
      *(void *)(v36 + 80) = v42;
      uint64_t v43 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v37, (uint64_t)&_mh_execute_header, v43, (uint64_t)"<%{public}@> Sync engine started fetching record zone changes from CloudKit for zone: %{public}@", 96, 2, v36);
      swift_setDeallocating();
      swift_arrayDestroy();

      break;
    case 7u:
      uint64_t v44 = *(void *)(v0 + 568);
      BOOL v45 = *(void **)v44;
      uint64_t v61 = *(void **)(v44 + 8);
      uint64_t v46 = (void *)static OS_os_log.dataSync;
      uint64_t v47 = swift_initStackObject();
      *(_OWORD *)(v47 + 16) = xmmword_10117D8C0;
      *(void *)(v47 + 56) = &type metadata for String;
      *(void *)(v47 + 64) = v10;
      *(void *)(v47 + 32) = v8;
      *(void *)(v47 + 40) = v9;
      id v48 = v46;
      id v49 = v45;
      id v50 = [v45 zoneName];
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v52;

      *(void *)(v47 + 96) = &type metadata for String;
      *(void *)(v47 + 104) = v10;
      *(void *)(v47 + 72) = v51;
      *(void *)(v47 + 80) = v53;
      uint64_t v54 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v48, (uint64_t)&_mh_execute_header, v54, (uint64_t)"<%{public}@> Sync engine stopped fetching record zone changes from CloudKit for zone: %{public}@", 96, 2, v47);
      swift_setDeallocating();
      swift_arrayDestroy();

      break;
    case 8u:
      uint64_t v55 = *(void *)(v0 + 552);
      sub_1008D1260(*(void *)(v0 + 568), v55, type metadata accessor for SyncEvent.WillSendChanges);
      sub_1008CB038();
      uint64_t v56 = type metadata accessor for SyncEvent.WillSendChanges;
      goto LABEL_22;
    case 9u:
      uint64_t v55 = *(void *)(v0 + 544);
      sub_1008D1260(*(void *)(v0 + 568), v55, type metadata accessor for SyncEvent.DidSendChanges);
      sub_1008CB40C();
      uint64_t v56 = type metadata accessor for SyncEvent.DidSendChanges;
LABEL_22:
      sub_1008D0E78(v55, v56);
      break;
    case 0xAu:
      sub_1008CF880();
      break;
    case 0xBu:
      sub_1008CFB24();
      break;
    default:
      uint64_t v15 = *(void *)(v0 + 568);
      uint64_t v16 = *(void *)(v0 + 536);
      uint64_t v17 = *(void *)(v15 + 32);
      long long v18 = *(_OWORD *)(v15 + 16);
      *uint64_t v59 = *(_OWORD *)v15;
      *(_OWORD *)(v0 + 456) = v18;
      *(void *)(v0 + 472) = v17;
      sub_1005498A4((uint64_t)v59, v60);
      uint64_t v19 = v16 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncMetadata;
      swift_beginAccess();
      sub_1006063BC(v60, v19, &qword_101685C60);
      swift_endAccess();
      sub_1008D132C((uint64_t)v59);
      break;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v57 = *(uint64_t (**)(void))(v0 + 8);
  return v57();
}

uint64_t sub_1008C275C(uint64_t a1)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = v1;
  return _swift_task_switch(sub_1008C277C, 0, 0);
}

uint64_t sub_1008C277C()
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 120);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v4 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v5 = 0x5320646572616853;
  }
  else {
    uint64_t v5 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v6 = 0xEC00000065706F63;
  }
  else {
    unint64_t v6 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v6;
  id v7 = v2;
  uint64_t v8 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"<%{public}@> Next Record Zone Change Batch is being requested by Sync Engine.", 77, 2, v4);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  unint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *(void *)(swift_task_alloc() + 16) = v1;
  id v10 = v9;
  sub_1005057FC(&qword_101685CD0);
  OS_dispatch_queue.sync<A>(execute:)();

  swift_task_dealloc();
  id v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1008C29A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v225 = a1;
  uint64_t v218 = type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(0);
  unint64_t v215 = *(void *)(v218 - 8);
  __chkstk_darwin(v218, v3);
  v216 = (uint64_t *)((char *)&v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1005057FC(&qword_101685CA8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v217 = (uint64_t)&v203 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v219 = (char *)&v203 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101685CB0);
  __chkstk_darwin(v11 - 8, v12);
  int v226 = (char *)&v203 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v14 = (void *)static OS_os_log.dataSync;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v17 = (void *)inited;
  long long v223 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v18 = 0x5320646572616853;
  }
  else {
    uint64_t v18 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v19 = 0xEC00000065706F63;
  }
  else {
    unint64_t v19 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v20 = sub_100528BE4();
  v17[8] = v20;
  v17[4] = v18;
  void v17[5] = v19;
  id v21 = v14;
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v22, (uint64_t)"<%{public}@> Generating Record Zone Change Batch.", 49, 2, (uint64_t)v17);
  swift_setDeallocating();
  uint64_t v23 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (!v24)
  {
    id v37 = (void *)static OS_os_log.dataSync;
    uint64_t v38 = swift_initStackObject();
    *(_OWORD *)(v38 + 16) = v223;
    *(void *)(v38 + 56) = &type metadata for String;
    *(void *)(v38 + 64) = v20;
    *(void *)(v38 + 32) = v18;
    *(void *)(v38 + 40) = v19;
    id v39 = v37;
    uint64_t v40 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v40, (uint64_t)"<%{public}@> Attempting to handle fetch next batch to save but scheduler not found", 82, 2, v38);
LABEL_17:
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v45 = sub_1005057FC(&qword_101685CB8);
    uint64_t v28 = (uint64_t)v226;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v226, 1, 1, v45);
    uint64_t v46 = type metadata accessor for CKSyncEngine.RecordZoneChangeBatch();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v225, 1, 1, v46);
    uint64_t v47 = v28;
    uint64_t v48 = v2;
LABEL_26:
    sub_1008C4398(v47, v48);
    return sub_100522F00(v28, &qword_101685CB0);
  }
  uint64_t v221 = v15;
  uint64_t v222 = v18;
  unint64_t v224 = v20;
  unint64_t v220 = v19;
  swift_retain();
  if (!sub_1008B00F0(0))
  {
    uint64_t v41 = (void *)static OS_os_log.dataSync;
    uint64_t v42 = swift_initStackObject();
    *(_OWORD *)(v42 + 16) = v223;
    unint64_t v43 = v224;
    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = v43;
    *(void *)(v42 + 32) = v222;
    *(void *)(v42 + 40) = v220;
    id v39 = v41;
    uint64_t v44 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v44, (uint64_t)"<%{public}@> Could not return batch for saving, task is paused due to throttling", 80, 2, v42);
    swift_release();
    goto LABEL_17;
  }
  uint64_t v25 = v2;
  uint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  unint64_t v27 = v224;
  uint64_t v28 = (uint64_t)v226;
  if (!v26)
  {
    id v49 = (void *)static OS_os_log.dataSync;
    uint64_t v50 = swift_initStackObject();
    *(_OWORD *)(v50 + 16) = v223;
    *(void *)(v50 + 56) = &type metadata for String;
    *(void *)(v50 + 64) = v27;
    *(void *)(v50 + 32) = v222;
    *(void *)(v50 + 40) = v220;
    id v51 = v49;
    uint64_t v52 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v51, (uint64_t)&_mh_execute_header, v52, (uint64_t)"<%{public}@> There is no outstanding save task. No new record batch to save", 75, 2, v50);
    swift_release();
LABEL_19:
    swift_setDeallocating();
    swift_arrayDestroy();
LABEL_23:

    goto LABEL_24;
  }
  uint64_t v214 = v23;
  swift_beginAccess();
  uint64_t v29 = *(void *)(v26 + 40);
  if ((v29 & 0xC000000000000001) != 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v30 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
    if (v30)
    {
LABEL_14:
      unint64_t v31 = (void *)static OS_os_log.dataSync;
      uint64_t v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_10117D8C0;
      unint64_t v33 = v224;
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = v33;
      *(void *)(v32 + 32) = v222;
      *(void *)(v32 + 40) = v220;
      uint64_t v34 = *(void *)(v26 + 40);
      *(void *)(v32 + 96) = sub_1005057FC(&qword_101672BF8);
      *(void *)(v32 + 104) = sub_100523288(&qword_101685CC0, &qword_101672BF8);
      *(void *)(v32 + 72) = v34;
      id v35 = v31;
      swift_bridgeObjectRetain();
      uint64_t v36 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v36, (uint64_t)"<%{public}@> Could not return a batch for saving, task has pending zones to save: %{public}@", 92, 2, v32);
      swift_release();
      swift_release();
      swift_setDeallocating();
      swift_arrayDestroy();

      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v53 = *(void *)(v29 + 16);
    swift_retain();
    if (v53) {
      goto LABEL_14;
    }
  }
  if (*(unsigned char *)(v26 + 32))
  {
    uint64_t v54 = (void *)static OS_os_log.dataSync;
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = v223;
    unint64_t v56 = v224;
    *(void *)(v55 + 56) = &type metadata for String;
    *(void *)(v55 + 64) = v56;
    *(void *)(v55 + 32) = v222;
    *(void *)(v55 + 40) = v220;
    id v51 = v54;
    uint64_t v57 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v51, (uint64_t)&_mh_execute_header, v57, (uint64_t)"<%{public}@> There is an ongoing batch to be saved. Not returning a new batch", 77, 2, v55);
    swift_release();
    swift_release();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    goto LABEL_23;
  }
  uint64_t v61 = v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncLogicProvider;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v63 = v222;
  uint64_t v211 = Strong;
  if (!Strong)
  {
    Swift::String v121 = (void *)static OS_os_log.dataSync;
    uint64_t v122 = swift_initStackObject();
    *(_OWORD *)(v122 + 16) = v223;
    unint64_t v123 = v224;
    *(void *)(v122 + 56) = &type metadata for String;
    *(void *)(v122 + 64) = v123;
    *(void *)(v122 + 32) = v63;
    *(void *)(v122 + 40) = v220;
    id v51 = v121;
    uint64_t v124 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v51, (uint64_t)&_mh_execute_header, v124, (uint64_t)"<%{public}@> Could not return a batch for saving since sync logic provider is not set", 85, 2, v122);
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  unint64_t v64 = *(void *)(v61 + 8);
  uint64_t v209 = v26;
  unint64_t v210 = v64;
  unint64_t v65 = *(void *)(v26 + 64);
  uint64_t v212 = v25;
  uint64_t v204 = v24;
  if (!v65 || (*(unsigned char *)(v65 + 80) & 1) != 0 || !*(void *)(v65 + 72)) {
    goto LABEL_34;
  }
  swift_retain();
  if (sub_1009EBE08()) {
    goto LABEL_33;
  }
  uint64_t v66 = v209;
  swift_beginAccess();
  uint64_t v67 = *(void *)(v66 + 48);
  id v68 = *(void **)(*(void *)(v65 + 16) + 16);
  swift_bridgeObjectRetain();
  id v69 = v68;
  char v70 = sub_1006E5068(v69, v67);

  swift_bridgeObjectRelease();
  if (v70)
  {
LABEL_33:
    swift_release();
    uint64_t v24 = v204;
    uint64_t v26 = v209;
LABEL_34:
    int64_t v208 = (uint64_t *)(v26 + 48);
    swift_beginAccess();
    v207 = (char *)(v24 + 40);
    swift_beginAccess();
    uint64_t v71 = sub_100FAEEDC();
    if (v71)
    {
      uint64_t v72 = v71;
      uint64_t v205 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v215 + 56);
      v206 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48);
      long long v213 = xmmword_10117D8C0;
      do
      {
        uint64_t v85 = *v208;
        unint64_t v86 = *(void **)(*(void *)(v72 + 16) + 16);
        swift_bridgeObjectRetain();
        id v87 = v86;
        char v88 = sub_1006E5068(v87, v85);

        swift_bridgeObjectRelease();
        if (v88)
        {
          sub_1009EC080();
          uint64_t v73 = (void *)static OS_os_log.dataSync;
          uint64_t v74 = swift_allocObject();
          *(_OWORD *)(v74 + 16) = v213;
          unint64_t v75 = v224;
          *(void *)(v74 + 56) = &type metadata for String;
          *(void *)(v74 + 64) = v75;
          *(void *)(v74 + 32) = v222;
          *(void *)(v74 + 40) = v220;
          uint64_t v76 = *(void **)(*(void *)(v72 + 16) + 16);
          id v77 = v73;
          id v78 = [v76 zoneName];
          uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v81 = v80;

          *(void *)(v74 + 96) = &type metadata for String;
          *(void *)(v74 + 104) = v75;
          *(void *)(v74 + 72) = v79;
          *(void *)(v74 + 80) = v81;
          uint64_t v82 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v77, (uint64_t)&_mh_execute_header, v82, (uint64_t)"<%{public}@> Skipping batch part of a failed zone with ID: %{public}@", 69, 2, v74);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();

          uint64_t v83 = type metadata accessor for CRLZoneSyncResultScenarios();
          uint64_t v84 = (uint64_t)v219;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v219, 1, 1, v83);
          uint64_t v25 = v212;
          sub_1008C86E4((char *)v72, 0, v84);
          swift_release();
          sub_100522F00(v84, &qword_101674220);
        }
        else
        {
          id v89 = (void *)static OS_os_log.dataSync;
          uint64_t v90 = swift_initStackObject();
          *(_OWORD *)(v90 + 16) = v213;
          unint64_t v91 = v224;
          *(void *)(v90 + 56) = &type metadata for String;
          *(void *)(v90 + 64) = v91;
          *(void *)(v90 + 32) = v222;
          *(void *)(v90 + 40) = v220;
          uint64_t v92 = *(void **)(*(void *)(v72 + 16) + 16);
          id v93 = v89;
          id v94 = [v92 zoneName];
          uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v97 = v96;

          *(void *)(v90 + 96) = &type metadata for String;
          *(void *)(v90 + 104) = v91;
          unint64_t v65 = v72;
          *(void *)(v90 + 72) = v95;
          *(void *)(v90 + 80) = v97;
          uint64_t v98 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v93, (uint64_t)&_mh_execute_header, v98, (uint64_t)"<%{public}@> Advancing to next batch. Zone ID: %{public}@", 57, 2, v90);
          swift_setDeallocating();
          swift_arrayDestroy();

          id v99 = *(id *)(*(void *)(v72 + 16) + 16);
          uint64_t v100 = *(void *)v207;
          if (*(void *)(*(void *)v207 + 16))
          {
            id v101 = v99;
            swift_bridgeObjectRetain();
            unint64_t v102 = sub_1009571B8(0);
            uint64_t v104 = v217;
            uint64_t v103 = v218;
            if (v105)
            {
              unint64_t v106 = v215;
              sub_1008D11CC(*(void *)(v100 + 56) + *(void *)(v215 + 72) * v102, v217, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v106 + 56))(v104, 0, 1, v103);
            }
            else
            {
              (*v205)(v217, 1, 1, v218);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v104 = v217;
            uint64_t v103 = v218;
            (*v205)(v217, 1, 1, v218);
            id v107 = v99;
          }
          uint64_t v108 = v222;
          if ((*v206)(v104, 1, v103))
          {
            sub_100522F00(v104, &qword_101685CA8);
            uint64_t v25 = v212;
            uint64_t v28 = (uint64_t)v226;
            goto LABEL_53;
          }
          id v109 = v216;
          sub_1008D11CC(v104, (uint64_t)v216, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);
          sub_100522F00(v104, &qword_101685CA8);
          BOOL v110 = sub_1008AEF90(v99);
          sub_1008D0E78((uint64_t)v109, type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState);

          if (v110)
          {
            uint64_t v25 = v212;
            uint64_t v28 = (uint64_t)v226;
            goto LABEL_54;
          }
          uint64_t v111 = (void *)static OS_os_log.dataSync;
          uint64_t v112 = swift_allocObject();
          *(_OWORD *)(v112 + 16) = v213;
          unint64_t v113 = v224;
          *(void *)(v112 + 56) = &type metadata for String;
          *(void *)(v112 + 64) = v113;
          *(void *)(v112 + 32) = v108;
          *(void *)(v112 + 40) = v220;
          Swift::String v114 = *(void **)(*(void *)(v65 + 16) + 16);
          id v115 = v111;
          id v116 = [v114 zoneName];
          uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v119 = v118;

          *(void *)(v112 + 96) = &type metadata for String;
          *(void *)(v112 + 104) = v113;
          *(void *)(v112 + 72) = v117;
          *(void *)(v112 + 80) = v119;
          uint64_t v120 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v115, (uint64_t)&_mh_execute_header, v120, (uint64_t)"<%{public}@> Skipping batch for throttled Zone ID: %@", 53, 2, v112);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          swift_release();

          uint64_t v25 = v212;
        }
        uint64_t v72 = sub_100FAEEDC();
        uint64_t v28 = (uint64_t)v226;
      }
      while (v72);
    }
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    goto LABEL_24;
  }
  uint64_t v125 = (void *)static OS_os_log.dataSync;
  uint64_t v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = xmmword_10117D8C0;
  unint64_t v127 = v224;
  *(void *)(v126 + 56) = &type metadata for String;
  *(void *)(v126 + 64) = v127;
  *(void *)(v126 + 32) = v222;
  *(void *)(v126 + 40) = v220;
  uint64_t v128 = *(void **)(*(void *)(v65 + 16) + 16);
  id v99 = v125;
  id v129 = [v128 zoneName];
  uint64_t v130 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v132 = v131;

  unint64_t v133 = v224;
  *(void *)(v126 + 96) = &type metadata for String;
  *(void *)(v126 + 104) = v133;
  *(void *)(v126 + 72) = v130;
  *(void *)(v126 + 80) = v132;
  uint64_t v134 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v99, (uint64_t)&_mh_execute_header, v134, (uint64_t)"<%{public}@> The current batch previously had a recoverable save error. Attempting to save the batch again. Zone ID: %{public}@", 127, 2, v126);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
LABEL_53:

LABEL_54:
  unint64_t v230 = (unint64_t)_swiftEmptyArrayStorage;
  swift_beginAccess();
  uint64_t v135 = *(void *)(*(void *)(v65 + 64) + 16);
  unint64_t v136 = *(void *)(v65 + 32);
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  if (v135)
  {
    id v137 = sub_1009ECE4C(v136, v65);
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v136 = (unint64_t)v137;
  }
  uint64_t v218 = v136;
  unint64_t v210 = v65;
  if (!(v136 >> 62))
  {
    uint64_t v138 = *(void *)((v136 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v138) {
      goto LABEL_58;
    }
LABEL_87:
    swift_bridgeObjectRelease();
    if (v230 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v187 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v187 = *(void *)((v230 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v188 = v220;
    uint64_t v189 = v222;
    if (v187)
    {
      unint64_t v190 = v210;
      uint64_t v191 = v225;
      CKSyncEngine.RecordZoneChangeBatch.init(recordsToSave:recordIDsToDelete:atomicByZone:)();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      *(unsigned char *)(v209 + 32) = 1;
      swift_release();
      uint64_t v192 = sub_1005057FC(&qword_101685CB8);
      uint64_t v193 = *(int *)(v192 + 48);
      uint64_t v194 = type metadata accessor for CKSyncEngine.RecordZoneChangeBatch();
      uint64_t v195 = *(void *)(v194 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v195 + 16))(v28, v191, v194);
      uint64_t v196 = *(void *)(v190 + 16);
      swift_retain();
      swift_release();
      id v197 = *(id *)(v196 + 16);
      swift_release();
      *(void *)(v28 + v193) = v197;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v192 - 8) + 56))(v28, 0, 1, v192);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v195 + 56))(v191, 0, 1, v194);
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    v198 = (void *)static OS_os_log.dataSync;
    uint64_t v199 = swift_initStackObject();
    *(_OWORD *)(v199 + 16) = v223;
    unint64_t v200 = v224;
    *(void *)(v199 + 56) = &type metadata for String;
    *(void *)(v199 + 64) = v200;
    *(void *)(v199 + 32) = v189;
    *(void *)(v199 + 40) = v188;
    id v201 = v198;
    uint64_t v202 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v201, (uint64_t)&_mh_execute_header, v202, (uint64_t)"<%{public}@> No records are available to add to a batch save", 60, 2, v199);
    swift_release();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();

LABEL_24:
    uint64_t v58 = sub_1005057FC(&qword_101685CB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v28, 1, 1, v58);
    uint64_t v59 = type metadata accessor for CKSyncEngine.RecordZoneChangeBatch();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v225, 1, 1, v59);
LABEL_25:
    uint64_t v47 = v28;
    uint64_t v48 = v25;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  unint64_t v136 = v218;
  uint64_t v138 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v138) {
    goto LABEL_87;
  }
LABEL_58:
  uint64_t v217 = v138;
  if (v138 >= 1)
  {
    unint64_t v215 = v136 & 0xC000000000000001;
    v216 = (void *)(v210 + 48);
    swift_beginAccess();
    uint64_t v139 = 0;
    long long v213 = xmmword_10117D8C0;
    v207 = (char *)&type metadata for Swift.AnyObject + 8;
    while (1)
    {
      if (v215) {
        unint64_t v145 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v145 = (char *)*(id *)(v136 + 8 * v139 + 32);
      }
      unint64_t v146 = v145;
      uint64_t v147 = *v216;
      if ((*v216 & 0xC000000000000001) != 0)
      {
        uint64_t v148 = v145;
        swift_bridgeObjectRetain();
        uint64_t v149 = __CocoaDictionary.lookup(_:)();
        if (!v149) {
          goto LABEL_74;
        }
        uint64_t v227 = v149;
        sub_10050BF48(0, (unint64_t *)&qword_10167C060);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v150 = (id)v228;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        if (v150) {
          goto LABEL_73;
        }
      }
      else
      {
        if (!*(void *)(v147 + 16)) {
          goto LABEL_75;
        }
        uint64_t v148 = v145;
        swift_bridgeObjectRetain();
        unint64_t v151 = sub_100956CAC((uint64_t)v148);
        if ((v152 & 1) == 0)
        {
LABEL_74:

          swift_bridgeObjectRelease();
          goto LABEL_75;
        }
        id v150 = *(id *)(*(void *)(v147 + 56) + 8 * v151);

        swift_bridgeObjectRelease();
        if (v150)
        {
LABEL_73:
          uint64_t v219 = v146;
          uint64_t v153 = (void *)static OS_os_log.dataSync;
          uint64_t v154 = swift_allocObject();
          *(_OWORD *)(v154 + 16) = v213;
          *(void *)(v154 + 56) = &type metadata for String;
          unint64_t v155 = v224;
          *(void *)(v154 + 64) = v224;
          *(void *)(v154 + 32) = v222;
          *(void *)(v154 + 40) = v220;
          uint64_t v228 = 0x203A65707954;
          unint64_t v229 = 0xE600000000000000;
          int64_t v208 = v153;
          v156._countAndFlagsBits = CKRecord.recordType.getter();
          String.append(_:)(v156);
          swift_bridgeObjectRelease();
          v157._countAndFlagsBits = 0x203A444920;
          v157._object = (void *)0xE500000000000000;
          String.append(_:)(v157);
          id v158 = [v150 recordID];
          id v159 = [v158 recordName];

          uint64_t v160 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v162 = v161;

          v163._countAndFlagsBits = v160;
          v163._object = v162;
          String.append(_:)(v163);
          swift_bridgeObjectRelease();
          uint64_t v164 = v228;
          unint64_t v165 = v229;
          *(void *)(v154 + 96) = &type metadata for String;
          *(void *)(v154 + 104) = v155;
          *(void *)(v154 + 72) = v164;
          *(void *)(v154 + 80) = v165;
          uint64_t v166 = static os_log_type_t.default.getter();
          id v167 = v208;
          sub_100BAC898((uint64_t)v208, (uint64_t)&_mh_execute_header, v166, (uint64_t)"<%{public}@> Adding record %{public}@ to batch save that was previously merged with the server record", 101, 2, v154);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
LABEL_83:

          uint64_t v142 = (char *)v150;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v230 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v230 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v25 = v212;
          uint64_t v28 = (uint64_t)v226;
          uint64_t v143 = v219;
          goto LABEL_62;
        }
      }
LABEL_75:
      uint64_t v168 = *(void *)(v210 + 40);
      if ((v168 & 0xC000000000000001) != 0)
      {
        uint64_t v169 = v146;
        uint64_t v170 = __CocoaDictionary.lookup(_:)();
        if (!v170) {
          goto LABEL_60;
        }
        uint64_t v227 = v170;
        sub_10050BF48(0, (unint64_t *)&qword_10167C060);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v150 = (id)v228;
        swift_unknownObjectRelease();

        if (v150) {
          goto LABEL_82;
        }
      }
      else
      {
        if (!*(void *)(v168 + 16)) {
          goto LABEL_61;
        }
        unint64_t v171 = sub_100956CAC((uint64_t)v146);
        if ((v172 & 1) == 0)
        {
LABEL_60:

          goto LABEL_61;
        }
        id v150 = *(id *)(*(void *)(v168 + 56) + 8 * v171);

        if (v150)
        {
LABEL_82:
          uint64_t v219 = v146;
          uint64_t v173 = (void *)static OS_os_log.dataSync;
          uint64_t v174 = swift_initStackObject();
          *(_OWORD *)(v174 + 16) = v213;
          *(void *)(v174 + 56) = &type metadata for String;
          unint64_t v175 = v224;
          *(void *)(v174 + 64) = v224;
          *(void *)(v174 + 32) = v222;
          *(void *)(v174 + 40) = v220;
          uint64_t v228 = 0x203A65707954;
          unint64_t v229 = 0xE600000000000000;
          int64_t v208 = v173;
          v176._countAndFlagsBits = CKRecord.recordType.getter();
          String.append(_:)(v176);
          swift_bridgeObjectRelease();
          v177._countAndFlagsBits = 0x203A444920;
          v177._object = (void *)0xE500000000000000;
          String.append(_:)(v177);
          id v178 = [v150 recordID];
          id v179 = [v178 recordName];

          uint64_t v180 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v182 = v181;

          v183._countAndFlagsBits = v180;
          v183._object = v182;
          String.append(_:)(v183);
          swift_bridgeObjectRelease();
          uint64_t v184 = v228;
          unint64_t v185 = v229;
          *(void *)(v174 + 96) = &type metadata for String;
          *(void *)(v174 + 104) = v175;
          *(void *)(v174 + 72) = v184;
          *(void *)(v174 + 80) = v185;
          uint64_t v186 = static os_log_type_t.default.getter();
          id v167 = v208;
          sub_100BAC898((uint64_t)v208, (uint64_t)&_mh_execute_header, v186, (uint64_t)"<%{public}@> Adding record %{public}@ to batch save from local changes", 70, 2, v174);
          swift_setDeallocating();
          swift_arrayDestroy();
          goto LABEL_83;
        }
      }
LABEL_61:
      uint64_t v219 = (char *)static OS_os_log.dataSync;
      uint64_t v140 = swift_initStackObject();
      *(_OWORD *)(v140 + 16) = v213;
      unint64_t v141 = v224;
      *(void *)(v140 + 56) = &type metadata for String;
      *(void *)(v140 + 64) = v141;
      *(void *)(v140 + 32) = v222;
      *(void *)(v140 + 40) = v220;
      *(void *)(v140 + 96) = sub_10050BF48(0, &qword_10167BED0);
      *(void *)(v140 + 104) = sub_10062E0F4((unint64_t *)&qword_101685CC8, &qword_10167BED0);
      *(void *)(v140 + 72) = v146;
      uint64_t v142 = v146;
      uint64_t v143 = v219;
      uint64_t v144 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v143, (uint64_t)&_mh_execute_header, v144, (uint64_t)"<%{public}@> Failed to find a cloud record for record ID %{public}@ for saving the batch", 88, 2, v140);
      swift_setDeallocating();
      swift_arrayDestroy();
LABEL_62:
      ++v139;

      unint64_t v136 = v218;
      if (v217 == v139) {
        goto LABEL_87;
      }
    }
  }
  __break(1u);
  return result;
}

void sub_1008C4398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101685CB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101685CB8);
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v14)(a1, 1, v8, v11) != 1
    || (uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask)) == 0
    || (*(unsigned char *)(v15 + 32) & 1) != 0)
  {
LABEL_7:
    sub_100522E9C(a1, (uint64_t)v7, &qword_101685CB0);
    if (v14(v7, 1, v8) == 1)
    {
      sub_100522F00((uint64_t)v7, &qword_101685CB0);
    }
    else
    {
      uint64_t v18 = *(int *)(v8 + 48);
      uint64_t v19 = type metadata accessor for CKSyncEngine.RecordZoneChangeBatch();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v13, v7, v19);
      unint64_t v20 = *(void **)&v7[v18];
      *(void *)&v13[v18] = v20;
      uint64_t v21 = qword_10166FB88;
      id v22 = v20;
      if (v21 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v23 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      initeCGFloat d = swift_initStackObject();
      uint64_t v25 = inited;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      if (*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        uint64_t v26 = 0x5320646572616853;
      }
      else {
        uint64_t v26 = 0x2065746176697250;
      }
      if (*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        unint64_t v27 = 0xEC00000065706F63;
      }
      else {
        unint64_t v27 = 0xED000065706F6353;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(v25 + 32) = v26;
      *(void *)(v25 + 40) = v27;
      id v28 = v23;
      uint64_t v29 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v29, (uint64_t)"<%{public}@> There is another batch to save in the current save task. Incrementing attempts for save.", 101, 2, v25);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      if (*(void *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler))
      {
        swift_retain();
        sub_1008AF9C4(0, v22);

        swift_release();
        sub_100522F00((uint64_t)v13, &qword_101685CB8);
      }
      else
      {
        sub_100522F00((uint64_t)v13, &qword_101685CB8);
      }
    }
    return;
  }
  swift_beginAccess();
  uint64_t v16 = *(void *)(v15 + 40);
  if ((v16 & 0xC000000000000001) != 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v17 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
    if (v17)
    {
LABEL_6:
      swift_release();
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v30 = *(void *)(v16 + 16);
    swift_retain();
    if (v30) {
      goto LABEL_6;
    }
  }
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v31 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v32 = swift_initStackObject();
  uint64_t v33 = v32;
  *(_OWORD *)(v32 + 16) = xmmword_10117E810;
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v34 = 0x5320646572616853;
  }
  else {
    uint64_t v34 = 0x2065746176697250;
  }
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v35 = 0xEC00000065706F63;
  }
  else {
    unint64_t v35 = 0xED000065706F6353;
  }
  *(void *)(v32 + 56) = &type metadata for String;
  *(void *)(v32 + 64) = sub_100528BE4();
  *(void *)(v33 + 32) = v34;
  *(void *)(v33 + 40) = v35;
  id v36 = v31;
  uint64_t v37 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v37, (uint64_t)"<%{public}@> No batch left to save in the current save task. Finishing the save task", 84, 2, v33);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_1008B8D7C();
  swift_release();
}

uint64_t sub_1008C48D8(uint64_t a1, uint64_t a2)
{
  v3[30] = a2;
  v3[31] = v2;
  v3[29] = a1;
  uint64_t Changes = type metadata accessor for CKSyncEngine.FetchChangesOptions.Scope();
  v3[32] = Changes;
  v3[33] = *(void *)(Changes - 8);
  v3[34] = swift_task_alloc();
  uint64_t ChangesOptions = type metadata accessor for CKSyncEngine.FetchChangesOptions();
  v3[35] = ChangesOptions;
  v3[36] = *(void *)(ChangesOptions - 8);
  v3[37] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CKSyncEngine.SyncReason();
  v3[38] = v6;
  v3[39] = *(void *)(v6 - 8);
  v3[40] = swift_task_alloc();
  return _swift_task_switch(sub_1008C4A54, 0, 0);
}

uint64_t sub_1008C4A54()
{
  uint64_t v2 = v0[39];
  uint64_t v1 = v0[40];
  uint64_t v3 = v0[38];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[30], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for CKSyncEngine.SyncReason.scheduled(_:))
  {
    uint64_t v6 = v0[36];
    uint64_t v5 = v0[37];
    uint64_t v7 = v0[35];
    uint64_t v8 = v0[31];
    uint64_t v9 = v0[29];
    (*(void (**)(void, void, void))(v0[33] + 104))(v0[34], enum case for CKSyncEngine.FetchChangesOptions.Scope.all(_:), v0[32]);
    CKSyncEngine.FetchChangesOptions.init(scope:operationGroup:)();
    sub_10050F848((void *)(v8 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider), *(void *)(v8 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider + 24));
    sub_1005057FC(&qword_101685CA0);
    OS_dispatch_queue.sync<A>(execute:)();
    CKSyncEngine.FetchChangesOptions.prioritizedZoneIDs.setter();
    uint64_t Changes = (void (*)(void *, void))CKSyncEngine.FetchChangesOptions.defaultZoneConfiguration.modify();
    CKSyncEngine.FetchChangesOptions.ZoneConfiguration.shouldFetchAssetContents.setter();
    Changes(v0 + 20, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v9, v5, v7);
  }
  else if (v4 == enum case for CKSyncEngine.SyncReason.manual(_:))
  {
    uint64_t v11 = v0[35];
    uint64_t v12 = v0[36];
    uint64_t v13 = v0[29];
    uint64_t v14 = v0[30];
    uint64_t ChangesContext = type metadata accessor for FetchChangesContext(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v14 + *(int *)(ChangesContext + 20), v11);
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[38];
    uint64_t v39 = v0[39];
    uint64_t v40 = v0[40];
    uint64_t v37 = v0[36];
    uint64_t v38 = v0[35];
    uint64_t v17 = v0[33];
    uint64_t v18 = v0[31];
    uint64_t v34 = v0[32];
    uint64_t v35 = v0[37];
    uint64_t v32 = v18;
    uint64_t v33 = v0[34];
    uint64_t v36 = v0[29];
    swift_beginAccess();
    uint64_t v19 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v21 = (void *)inited;
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    if (*(unsigned char *)(v18 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v22 = 0x5320646572616853;
    }
    else {
      uint64_t v22 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v18 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v23 = 0xEC00000065706F63;
    }
    else {
      unint64_t v23 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v24 = sub_100528BE4();
    v21[8] = v24;
    v21[4] = v22;
    v21[5] = v23;
    sub_1008CE3C8(&qword_101685C98, 255, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.SyncReason);
    id v25 = v19;
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    v21[12] = &type metadata for String;
    v21[13] = v24;
    v21[9] = v26;
    v21[10] = v27;
    uint64_t v28 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v28, (uint64_t)"<%{public}@> encountered unknown FetchChangesContext.Reason %@", 62, 2, (uint64_t)v21);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v33, enum case for CKSyncEngine.FetchChangesOptions.Scope.all(_:), v34);
    CKSyncEngine.FetchChangesOptions.init(scope:operationGroup:)();
    sub_10050F848((void *)(v32 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider), *(void *)(v32 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncPriorityProvider + 24));
    sub_1005057FC(&qword_101685CA0);
    OS_dispatch_queue.sync<A>(execute:)();
    CKSyncEngine.FetchChangesOptions.prioritizedZoneIDs.setter();
    uint64_t v29 = (void (*)(void *, void))CKSyncEngine.FetchChangesOptions.defaultZoneConfiguration.modify();
    CKSyncEngine.FetchChangesOptions.ZoneConfiguration.shouldFetchAssetContents.setter();
    v29(v0 + 16, 0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v35, v38);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_1008C4F7C(void *a1, void *a2, unsigned __int8 a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)&v3[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(unsigned char *)(v16 + 32) = a3;
  *(void *)(v16 + 40) = v3;
  aBlock[4] = sub_1008D1084;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_101518F88;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v15;
  sub_1006D0B78(a1, a2, a3);
  uint64_t v19 = v3;
  static DispatchQoS.unspecified.getter();
  unint64_t v24 = _swiftEmptyArrayStorage;
  sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v22);
  return swift_release();
}

uint64_t sub_1008C5270(void *a1, void *a2, unsigned __int8 a3, void *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  *(unsigned char *)(v13 + 48) = a3;
  *(void *)(v13 + 56) = a4;
  sub_1006D0B78(a1, a2, a3);
  id v14 = a4;
  sub_1005912D0((uint64_t)v11, (uint64_t)&unk_101685C90, v13);
  return swift_release();
}

uint64_t sub_1008C5398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v7 + 272) = a5;
  *(void *)(v7 + 280) = a7;
  *(unsigned char *)(v7 + 320) = a6;
  *(void *)(v7 + 264) = a4;
  return _swift_task_switch(sub_1008C53C0, 0, 0);
}

uint64_t sub_1008C53C0()
{
  int v1 = *(unsigned __int8 *)(v0 + 320);
  if (v1 == 2)
  {
    uint64_t v2 = *(void **)(v0 + 272);
    goto LABEL_5;
  }
  if (v1 == 1)
  {
    uint64_t v2 = 0;
LABEL_5:
    uint64_t v3 = *(void **)(v0 + 264);
    int v4 = v3;
    goto LABEL_7;
  }
  int v4 = 0;
  uint64_t v3 = *(void **)(v0 + 264);
  uint64_t v2 = v3;
LABEL_7:
  *(void *)(v0 + 288) = v2;
  *(void *)(v0 + 296) = v4;
  id v44 = v2;
  sub_1006D0B78(v3, *(void **)(v0 + 272), v1);
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 280);
  swift_beginAccess();
  uint64_t v6 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  int v8 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  unint64_t v10 = v9;
  uint64_t v11 = 0x2065746176697250;
  if (v8) {
    uint64_t v11 = 0x5320646572616853;
  }
  uint64_t v43 = v11;
  *(void *)(inited + 32) = v11;
  unint64_t v12 = 0xED000065706F6353;
  if (v8) {
    unint64_t v12 = 0xEC00000065706F63;
  }
  *(void *)(inited + 64) = v9;
  unint64_t v42 = v12;
  *(void *)(inited + 40) = v12;
  uint64_t v13 = &selRef_alignCenter_;
  uint64_t v45 = v6;
  uint64_t v46 = v4;
  if (!v4)
  {
    uint64_t v19 = (uint64_t *)(inited + 72);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v9;
    unint64_t v20 = v9;
    id v23 = v6;
    uint64_t v21 = v44;
    goto LABEL_19;
  }
  id v14 = v6;
  id v15 = [v4 recordName];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  uint64_t v19 = (uint64_t *)(inited + 72);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v10;
  unint64_t v20 = v10;
  if (!v18)
  {
    uint64_t v21 = v44;
    uint64_t v13 = &selRef_alignCenter_;
LABEL_19:
    *uint64_t v19 = 7104878;
    *(void *)(inited + 80) = 0xE300000000000000;
    if (!v21) {
      goto LABEL_16;
    }
    goto LABEL_20;
  }
  *uint64_t v19 = v16;
  uint64_t v21 = v44;
  uint64_t v13 = &selRef_alignCenter_;
  *(void *)(inited + 80) = v18;
  if (!v44)
  {
LABEL_16:
    uint64_t v22 = (uint64_t *)(inited + 112);
    *(void *)(inited + 136) = &type metadata for String;
    *(void *)(inited + 144) = v20;
    goto LABEL_22;
  }
LABEL_20:
  id v24 = [v21 v13[301]];
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v27 = v26;

  uint64_t v22 = (uint64_t *)(inited + 112);
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v20;
  if (v27)
  {
    *uint64_t v22 = v25;
    goto LABEL_23;
  }
LABEL_22:
  *uint64_t v22 = 7104878;
  unint64_t v27 = 0xE300000000000000;
LABEL_23:
  *(void *)(inited + 120) = v27;
  uint64_t v28 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v28, (uint64_t)"<%{public}@> Received account changed notification. From %@ to %@", 65, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (v46)
  {
    if (v21)
    {
      sub_10050BF48(0, &qword_10167BED0);
      id v29 = v21;
      id v30 = v46;
      char v31 = static NSObject.== infix(_:_:)();

      if (v31)
      {
LABEL_32:
        uint64_t v36 = (void *)static OS_os_log.dataSync;
        uint64_t v37 = swift_initStackObject();
        *(_OWORD *)(v37 + 16) = xmmword_10117E810;
        *(void *)(v37 + 56) = &type metadata for String;
        *(void *)(v37 + 64) = v20;
        *(void *)(v37 + 32) = v43;
        *(void *)(v37 + 40) = v42;
        id v38 = v36;
        uint64_t v39 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v39, (uint64_t)"<%{public}@> Unexpected account change state. Both old and new user records are same", 84, 2, v37);
        swift_setDeallocating();
        swift_arrayDestroy();

        uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
        return v40();
      }
    }
  }
  else if (!v21)
  {
    id v30 = 0;
    id v29 = 0;
    goto LABEL_32;
  }
  uint64_t v32 = *(void *)(*(void *)(v0 + 280) + OBJC_IVAR____TtC8Freeform17CRLSyncController_accountChangeObserverManager);
  *(void *)(v0 + 304) = v32;
  id v33 = v21;
  id v34 = v46;
  swift_retain();
  uint64_t v35 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v35;
  *uint64_t v35 = v0;
  v35[1] = sub_1008C58A4;
  v35[13] = v21;
  v35[14] = v32;
  v35[12] = v46;
  return _swift_task_switch(sub_1008B14FC, v32, 0);
}

uint64_t sub_1008C58A4()
{
  int v1 = *(void **)(*(void *)v0 + 296);
  uint64_t v2 = *(void **)(*(void *)v0 + 288);
  swift_task_dealloc();

  swift_release();
  return _swift_task_switch(sub_1008C59F4, 0, 0);
}

uint64_t sub_1008C59F4()
{
  int v1 = *(void **)(v0 + 288);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008C5A58(uint64_t result, uint64_t a2)
{
  uint64_t v26 = *(void *)(result + 16);
  if (v26)
  {
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v4 = 0x5320646572616853;
    }
    else {
      uint64_t v4 = 0x2065746176697250;
    }
    unint64_t v5 = 0xED000065706F6353;
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v5 = 0xEC00000065706F63;
    }
    unint64_t v24 = v5;
    uint64_t v25 = v4;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v23 = v6;
    do
    {
      uint64_t v8 = qword_10166FB88;
      id v9 = *(id *)(v6 + 8 * v7 + 32);
      if (v8 != -1) {
        swift_once();
      }
      ++v7;
      swift_beginAccess();
      unint64_t v10 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      initeCGFloat d = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v12 = sub_100528BE4();
      *(void *)(inited + 64) = v12;
      *(void *)(inited + 32) = v25;
      *(void *)(inited + 40) = v24;
      id v13 = v10;
      id v14 = [v9 zoneName];
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v12;
      *(void *)(inited + 72) = v15;
      *(void *)(inited + 80) = v17;
      uint64_t v18 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v18, (uint64_t)"<%{public}@> zoneWithIDWasModified name: %{public}@", 51, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v6 = v23;
    }
    while (v26 != v7);
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v22;
  }
  uint64_t v19 = *(void *)(a2 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = (unsigned char *)(a2 + 40);
    do
    {
      uint64_t v21 = (void *)*((void *)v20 - 1);
      if (*v20)
      {
        if (*v20 == 1) {
          sub_1008C5FD8(v21);
        }
        else {
          sub_1008C62CC(v21);
        }
      }
      else
      {
        sub_1008C5CE4(v21);
      }

      v20 += 16;
      --v19;
    }
    while (v19);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1008C5CE4(void *a1)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  unint64_t v5 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v6 = 0x5320646572616853;
  }
  else {
    uint64_t v6 = 0x2065746176697250;
  }
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v7 = 0xEC00000065706F63;
  }
  else {
    unint64_t v7 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v8 = sub_100528BE4();
  v5[8] = v8;
  v5[4] = v6;
  v5[5] = v7;
  id v9 = v3;
  id v10 = [a1 zoneName];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  v5[12] = &type metadata for String;
  v5[13] = v8;
  v5[9] = v11;
  v5[10] = v13;
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v14, (uint64_t)"<%{public}@> zoneWithIDWasDeleted name: %{public}@", 50, 2, (uint64_t)v5);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v1;
  *(void *)(v16 + 24) = a1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1008D2B0C;
  *(void *)(v17 + 24) = v16;
  v24[4] = sub_100659320;
  v24[5] = v17;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = *(void *)"";
  void v24[2] = sub_1006D9628;
  void v24[3] = &unk_101518F38;
  uint64_t v18 = _Block_copy(v24);
  uint64_t v19 = v15;
  unint64_t v20 = v1;
  id v21 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v19, v18);

  _Block_release(v18);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008C5FD8(void *a1)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  unint64_t v5 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v6 = 0x5320646572616853;
  }
  else {
    uint64_t v6 = 0x2065746176697250;
  }
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v7 = 0xEC00000065706F63;
  }
  else {
    unint64_t v7 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v8 = sub_100528BE4();
  v5[8] = v8;
  v5[4] = v6;
  v5[5] = v7;
  id v9 = v3;
  id v10 = [a1 zoneName];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  v5[12] = &type metadata for String;
  v5[13] = v8;
  v5[9] = v11;
  v5[10] = v13;
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v14, (uint64_t)"<%{public}@> zoneWithIDWasPurged name: %{public}@", 49, 2, (uint64_t)v5);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v1;
  *(void *)(v16 + 24) = a1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1008D0FF8;
  *(void *)(v17 + 24) = v16;
  v24[4] = sub_100659320;
  v24[5] = v17;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = *(void *)"";
  void v24[2] = sub_1006D9628;
  void v24[3] = &unk_101518EC0;
  uint64_t v18 = _Block_copy(v24);
  uint64_t v19 = v15;
  unint64_t v20 = v1;
  id v21 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v19, v18);

  _Block_release(v18);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008C62CC(void *a1)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  unint64_t v5 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v6 = 0x5320646572616853;
  }
  else {
    uint64_t v6 = 0x2065746176697250;
  }
  if (v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v7 = 0xEC00000065706F63;
  }
  else {
    unint64_t v7 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v8 = sub_100528BE4();
  v5[8] = v8;
  v5[4] = v6;
  v5[5] = v7;
  id v9 = v3;
  id v10 = [a1 zoneName];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  v5[12] = &type metadata for String;
  v5[13] = v8;
  v5[9] = v11;
  v5[10] = v13;
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v14, (uint64_t)"<%{public}@> zoneWithIDWasDeletedDueToUserEncryptedDataReset name: %{public}@", 77, 2, (uint64_t)v5);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v1;
  *(void *)(v16 + 24) = a1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1008D0FC0;
  *(void *)(v17 + 24) = v16;
  v24[4] = sub_100659320;
  v24[5] = v17;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = *(void *)"";
  void v24[2] = sub_1006D9628;
  void v24[3] = &unk_101518E48;
  uint64_t v18 = _Block_copy(v24);
  uint64_t v19 = v15;
  unint64_t v20 = v1;
  id v21 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v19, v18);

  _Block_release(v18);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_1008C65C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v7);
  uint64_t v47 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = *(void **)(a1 + 8 * v10++ + 32);
      id v12 = v11;
      sub_1008C6A04(v12);
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = *(void *)(a2 + 16);
  if (v13)
  {
    int v14 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
    uint64_t v45 = OBJC_IVAR____TtC8Freeform17CRLSyncController_queue;
    id v44 = *(void (**)(void *, void, uint64_t))(v6 + 104);
    unsigned int v43 = enum case for DispatchPredicate.onQueue(_:);
    uint64_t v46 = v6 + 104;
    unint64_t v42 = (void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v15 = 0x2065746176697250;
    if (v14) {
      uint64_t v15 = 0x5320646572616853;
    }
    uint64_t v41 = v15;
    unint64_t v16 = 0xED000065706F6353;
    if (v14) {
      unint64_t v16 = 0xEC00000065706F63;
    }
    unint64_t v40 = v16;
    swift_bridgeObjectRetain();
    uint64_t v37 = a2;
    uint64_t v17 = (uint64_t *)(a2 + 48);
    long long v39 = xmmword_10117DF40;
    uint64_t v38 = a3;
    while (1)
    {
      uint64_t v18 = (void *)*(v17 - 2);
      uint64_t v19 = *(v17 - 1);
      uint64_t v20 = *v17;
      id v21 = *(void **)(a3 + v45);
      uint64_t v22 = v47;
      *uint64_t v47 = v21;
      uint64_t v23 = v48;
      v44(v22, v43, v48);
      id v24 = v18;
      swift_bridgeObjectRetain();
      id v25 = v21;
      char v26 = _dispatchPreconditionTest(_:)();
      (*v42)(v22, v23);
      if ((v26 & 1) == 0) {
        break;
      }
      unint64_t v27 = v24;
      uint64_t v50 = v13;
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      v17 += 3;
      swift_beginAccess();
      uint64_t v28 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      initeCGFloat d = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v39;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v30 = sub_100528BE4();
      *(void *)(inited + 32) = v41;
      *(void *)(inited + 40) = v40;
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v30;
      *(void *)(inited + 64) = v30;
      *(void *)(inited + 72) = v19;
      uint64_t v49 = v19;
      *(void *)(inited + 80) = v20;
      swift_bridgeObjectRetain();
      id v31 = v28;
      id v32 = [v27 recordName:v37];
      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v34;

      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v30;
      *(void *)(inited + 112) = v33;
      *(void *)(inited + 120) = v35;
      uint64_t v36 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v36, (uint64_t)"<%{public}@> SyncEngine fetched changed deleted record with type: %{public}@ id: %{public}@", 91, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      a3 = v38;
      sub_1008BA73C(v27, v49, v20);
      swift_bridgeObjectRelease();

      uint64_t v13 = v50 - 1;
      if (v50 == 1)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_1008C6A04(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v10 = __chkstk_darwin(v7, v9);
  id v12 = (uint64_t *)((char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *id v12 = v13;
  (*(void (**)(void *, void, uint64_t, __n128))(v8 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v7, v10);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v12, v7);
  if (v13)
  {
    v46[1] = v3;
    if (qword_10166FB88 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  uint64_t v15 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10118E4B0;
  v46[2] = v1;
  int v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v18 = sub_100528BE4();
  unint64_t v19 = v18;
  uint64_t v20 = 0x2065746176697250;
  if (v17) {
    uint64_t v20 = 0x5320646572616853;
  }
  *(void *)(inited + 32) = v20;
  unint64_t v21 = 0xED000065706F6353;
  if (v17) {
    unint64_t v21 = 0xEC00000065706F63;
  }
  *(void *)(inited + 64) = v18;
  *(void *)(inited + 40) = v21;
  v46[0] = (uint64_t)v15;
  uint64_t v22 = CKRecord.recordType.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v19;
  *(void *)(inited + 72) = v22;
  *(void *)(inited + 80) = v23;
  id v24 = [a1 recordID];
  id v25 = [v24 recordName];

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v19;
  *(void *)(inited + 112) = v26;
  *(void *)(inited + 120) = v28;
  id v29 = [a1 recordChangeTag];
  if (v29)
  {
    unint64_t v30 = v29;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v33 = 0;
  }
  v46[3] = v31;
  v46[4] = v33;
  sub_1005057FC(&qword_101674580);
  uint64_t v34 = String.init<A>(describing:)();
  *(void *)(inited + 176) = &type metadata for String;
  *(void *)(inited + 184) = v19;
  *(void *)(inited + 152) = v34;
  *(void *)(inited + 160) = v35;
  id v36 = [a1 modificationDate];
  if (v36)
  {
    uint64_t v37 = v36;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v38 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v6, 0, 1, v38);
  }
  else
  {
    uint64_t v39 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v6, 1, 1, v39);
  }
  uint64_t v40 = String.init<A>(describing:)();
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = v19;
  *(void *)(inited + 192) = v40;
  *(void *)(inited + 200) = v41;
  uint64_t v42 = static os_log_type_t.default.getter();
  unsigned int v43 = (void *)v46[0];
  sub_100BAC898(v46[0], (uint64_t)&_mh_execute_header, v42, (uint64_t)"<%{public}@> SyncEngine fetched changed record with type: %{public}@ id: %{public}@ recordChangeTag: %{public}@ modificationDate: %@", 132, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v44 = [a1 recordID];
  id v45 = [v44 zoneID];

  sub_1008C1530(v45, 1);
  sub_1008BA4E0(a1);
}

uint64_t sub_1008C6E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008C75D4(a1, a2, a3, a4, (uint64_t)&unk_101518DB8, (uint64_t)sub_1008D0F50, (uint64_t)&unk_101518DD0);
}

uint64_t sub_1008C6EC4(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, id *a5)
{
  if (!(a1 >> 62))
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(a2 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = (void **)(a2 + 40);
      do
      {
        unint64_t v16 = *v15;
        id v17 = *(v15 - 1);
        id v18 = v16;
        sub_1008C098C(v17, v18);

        v15 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
    }
    if (a3 >> 62) {
      goto LABEL_63;
    }
    uint64_t v19 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    for (uint64_t result = swift_bridgeObjectRetain(); ; v19 = result)
    {
      uint64_t v20 = &qword_101685000;
      id v69 = a5;
      if (v19)
      {
        if (v19 < 1) {
          goto LABEL_65;
        }
        uint64_t v21 = 0;
        unint64_t v66 = a3 & 0xC000000000000001;
        if (*((unsigned char *)a5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
          uint64_t v22 = 0x5320646572616853;
        }
        else {
          uint64_t v22 = 0x2065746176697250;
        }
        unint64_t v23 = 0xED000065706F6353;
        if (*((unsigned char *)a5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
          unint64_t v23 = 0xEC00000065706F63;
        }
        unint64_t v63 = v23;
        uint64_t v65 = v22;
        uint64_t v70 = v19;
        unint64_t v72 = a3;
        do
        {
          if (v66) {
            id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v24 = *(id *)(a3 + 8 * v21 + 32);
          }
          id v25 = v24;
          if (qword_10166FB88 != -1) {
            swift_once();
          }
          ++v21;
          swift_beginAccess();
          uint64_t v26 = (void *)static OS_os_log.dataSync;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          initeCGFloat d = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
          *(void *)(inited + 56) = &type metadata for String;
          unint64_t v28 = sub_100528BE4();
          *(void *)(inited + 64) = v28;
          *(void *)(inited + 32) = v65;
          *(void *)(inited + 40) = v63;
          id v29 = v26;
          id v30 = [v25 zoneName];
          uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v33 = v32;

          *(void *)(inited + 96) = &type metadata for String;
          *(void *)(inited + 104) = v28;
          *(void *)(inited + 72) = v31;
          *(void *)(inited + 80) = v33;
          uint64_t v34 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v34, (uint64_t)"<%{public}@> Zone apparently deleted as part of client save. This is unexpected! Handling anyway. zoneID: %{public}@", 116, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          a5 = v69;
          sub_1008C5CE4(v25);

          a3 = v72;
        }
        while (v70 != v21);
        swift_bridgeObjectRelease();
        uint64_t v20 = &qword_101685000;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v62 = a4 + 64;
      uint64_t v35 = 1 << *(unsigned char *)(a4 + 32);
      uint64_t v36 = -1;
      if (v35 < 64) {
        uint64_t v36 = ~(-1 << v35);
      }
      unint64_t v37 = v36 & *(void *)(a4 + 64);
      uint64_t v67 = v20[316];
      int64_t v64 = (unint64_t)(v35 + 63) >> 6;
      swift_bridgeObjectRetain();
      int64_t v38 = 0;
      if (v37)
      {
LABEL_35:
        uint64_t v71 = (v37 - 1) & v37;
        int64_t v73 = v38;
        unint64_t v39 = __clz(__rbit64(v37)) | (v38 << 6);
        goto LABEL_50;
      }
      while (1)
      {
        int64_t v40 = v38 + 1;
        if (__OFADD__(v38, 1))
        {
          __break(1u);
          goto LABEL_62;
        }
        if (v40 >= v64) {
          return swift_release();
        }
        unint64_t v41 = *(void *)(v62 + 8 * v40);
        int64_t v42 = v38 + 1;
        if (!v41)
        {
          int64_t v42 = v38 + 2;
          if (v38 + 2 >= v64) {
            return swift_release();
          }
          unint64_t v41 = *(void *)(v62 + 8 * v42);
          if (!v41)
          {
            int64_t v42 = v38 + 3;
            if (v38 + 3 >= v64) {
              return swift_release();
            }
            unint64_t v41 = *(void *)(v62 + 8 * v42);
            if (!v41) {
              break;
            }
          }
        }
LABEL_49:
        uint64_t v71 = (v41 - 1) & v41;
        int64_t v73 = v42;
        unint64_t v39 = __clz(__rbit64(v41)) + (v42 << 6);
LABEL_50:
        uint64_t v44 = 8 * v39;
        id v45 = *(void **)(*(void *)(a4 + 56) + v44);
        uint64_t v46 = qword_10166FB88;
        a3 = (unint64_t)*(id *)(*(void *)(a4 + 48) + v44);
        id v47 = v45;
        if (v46 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v48 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v49 = swift_initStackObject();
        uint64_t v50 = (void *)v49;
        *(_OWORD *)(v49 + 16) = xmmword_10117DF40;
        if (*((unsigned char *)v69 + v67)) {
          uint64_t v51 = 0x5320646572616853;
        }
        else {
          uint64_t v51 = 0x2065746176697250;
        }
        if (*((unsigned char *)v69 + v67)) {
          unint64_t v52 = 0xEC00000065706F63;
        }
        else {
          unint64_t v52 = 0xED000065706F6353;
        }
        *(void *)(v49 + 56) = &type metadata for String;
        unint64_t v53 = sub_100528BE4();
        v50[8] = v53;
        v50[4] = v51;
        v50[5] = v52;
        id v54 = v48;
        id v55 = [(id)a3 zoneName];
        uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v58 = v57;

        v50[12] = &type metadata for String;
        v50[13] = v53;
        v50[9] = v56;
        v50[10] = v58;
        id v74 = v47;
        type metadata accessor for CKError(0);
        sub_1008CE3C8(&qword_101670DB8, 255, type metadata accessor for CKError);
        a5 = &v74;
        uint64_t v59 = Error.localizedDescription.getter();
        v50[17] = &type metadata for String;
        v50[18] = v53;
        v50[14] = v59;
        v50[15] = v60;
        uint64_t v61 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v54, (uint64_t)&_mh_execute_header, v61, (uint64_t)"<%{public}@> Zone apparently failed to be deleted as part of client save. This is unexpected! This will go unhandled. zoneID: %{public}@ error: %@", 146, 2, (uint64_t)v50);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        unint64_t v37 = v71;
        int64_t v38 = v73;
        if (v71) {
          goto LABEL_35;
        }
      }
      uint64_t v43 = v38 + 4;
      if (v38 + 4 >= v64) {
        return swift_release();
      }
      unint64_t v41 = *(void *)(v62 + 8 * v43);
      if (v41) {
        break;
      }
      while (1)
      {
        int64_t v42 = v43 + 1;
        if (__OFADD__(v43, 1)) {
          break;
        }
        if (v42 >= v64) {
          return swift_release();
        }
        unint64_t v41 = *(void *)(v62 + 8 * v42);
        ++v43;
        if (v41) {
          goto LABEL_49;
        }
      }
LABEL_62:
      __break(1u);
LABEL_63:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    }
    int64_t v42 = v38 + 4;
    goto LABEL_49;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v9 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v13 = v12;
      sub_1008C04B4(v12);
    }
    goto LABEL_10;
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1008C75AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008C75D4(a1, a2, a3, a4, (uint64_t)&unk_101518D68, (uint64_t)sub_1008D0EDC, (uint64_t)&unk_101518D80);
}

uint64_t sub_1008C75D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a6;
  uint64_t v28 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v13);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v16 - 8);
  uint64_t v30 = v16;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void **)&v7[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a1;
  void v21[3] = a2;
  v21[4] = a3;
  v21[5] = a4;
  v21[6] = v7;
  aBlock[4] = v27;
  void aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = a7;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = v7;
  static DispatchQoS.unspecified.getter();
  uint64_t v32 = _swiftEmptyArrayStorage;
  sub_1008CE3C8((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  uint64_t v25 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v25);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v30);
  return swift_release();
}

void sub_1008C78D0(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (!v8) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v8) {
      goto LABEL_10;
    }
  }
  if (v8 < 1) {
    goto LABEL_92;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    sub_1008BCA6C(v10);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 16);
  unint64_t v94 = a3;
  if (!v12)
  {
    uint64_t v92 = _swiftEmptyDictionarySingleton;
    if (!(a3 >> 62)) {
      goto LABEL_19;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v96 = _CocoaArrayWrapper.endIndex.getter();
    if (!v96) {
      goto LABEL_36;
    }
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = (void **)(a2 + 40);
  uint64_t v92 = _swiftEmptyDictionarySingleton;
  do
  {
    uint64_t v19 = *v13;
    id v20 = *(v13 - 1);
    id v21 = v19;
    sub_1008BD3DC(v20, v21);
    type metadata accessor for CKError(0);
    sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
    _BridgedStoredNSError.code.getter();
    uint64_t v22 = v92;
    if (v92[2] && (uint64_t v23 = sub_1009563E8(), v22 = v92, (v24 & 1) != 0))
    {
      uint64_t v25 = *(void *)(v92[7] + 16 * v23);
      _BridgedStoredNSError.code.getter();
      if (__OFADD__(v25, 1)) {
        goto LABEL_89;
      }
      id v14 = v21;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v98 = v92;
      uint64_t v16 = v25 + 1;
      uint64_t v17 = (uint64_t)v14;
      Swift::UInt v18 = v99;
    }
    else
    {
      _BridgedStoredNSError.code.getter();
      id v14 = v21;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v98 = v22;
      uint64_t v16 = 1;
      uint64_t v17 = (uint64_t)v14;
      Swift::UInt v18 = v99;
    }
    sub_10097745C(v16, v17, v18, isUniquelyReferenced_nonNull_native);
    uint64_t v92 = v98;

    swift_bridgeObjectRelease();
    v13 += 2;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  a3 = v94;
  if (v94 >> 62) {
    goto LABEL_35;
  }
LABEL_19:
  uint64_t v96 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v96) {
    goto LABEL_36;
  }
LABEL_20:
  if (v96 < 1) {
    goto LABEL_93;
  }
  uint64_t v26 = 0;
  unint64_t v89 = a3 & 0xC000000000000001;
  if (*(unsigned char *)(a5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v27 = 0x5320646572616853;
  }
  else {
    uint64_t v27 = 0x2065746176697250;
  }
  unint64_t v28 = 0xED000065706F6353;
  if (*(unsigned char *)(a5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v28 = 0xEC00000065706F63;
  }
  unint64_t v86 = v28;
  uint64_t v88 = v27;
  do
  {
    if (v89) {
      id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v29 = *(id *)(a3 + 8 * v26 + 32);
    }
    uint64_t v30 = v29;
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    ++v26;
    swift_beginAccess();
    uint64_t v31 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v33 = sub_100528BE4();
    *(void *)(inited + 64) = v33;
    *(void *)(inited + 32) = v88;
    *(void *)(inited + 40) = v86;
    id v34 = v31;
    id v35 = [v30 recordName];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;

    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v33;
    *(void *)(inited + 72) = v36;
    *(void *)(inited + 80) = v38;
    uint64_t v39 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v39, (uint64_t)"<%{public}@> Record apparently deleted as part of client save. This is unexpected! This will go unhandled. recordID: %{public}@", 127, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    a3 = v94;
  }
  while (v96 != v26);
LABEL_36:
  swift_bridgeObjectRelease();
  uint64_t v85 = a4 + 64;
  uint64_t v40 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v41 = -1;
  if (v40 < 64) {
    uint64_t v41 = ~(-1 << v40);
  }
  unint64_t v42 = v41 & *(void *)(a4 + 64);
  uint64_t v90 = OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope;
  int64_t v87 = (unint64_t)(v40 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v43 = 0;
  if (!v42) {
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v95 = (v42 - 1) & v42;
  int64_t v97 = v43;
  for (unint64_t j = __clz(__rbit64(v42)) | (v43 << 6); ; unint64_t j = __clz(__rbit64(v46)) + (v47 << 6))
  {
    uint64_t v49 = 8 * j;
    uint64_t v50 = *(void **)(*(void *)(a4 + 56) + v49);
    uint64_t v51 = qword_10166FB88;
    id v52 = *(id *)(*(void *)(a4 + 48) + v49);
    id v53 = v50;
    if (v51 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v54 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v55 = swift_initStackObject();
    uint64_t v56 = (void *)v55;
    *(_OWORD *)(v55 + 16) = xmmword_10117DF40;
    if (*(unsigned char *)(a5 + v90)) {
      uint64_t v57 = 0x5320646572616853;
    }
    else {
      uint64_t v57 = 0x2065746176697250;
    }
    if (*(unsigned char *)(a5 + v90)) {
      unint64_t v58 = 0xEC00000065706F63;
    }
    else {
      unint64_t v58 = 0xED000065706F6353;
    }
    *(void *)(v55 + 56) = &type metadata for String;
    unint64_t v59 = sub_100528BE4();
    v56[8] = v59;
    v56[4] = v57;
    v56[5] = v58;
    id v60 = v54;
    id v61 = [v52 recordName];
    uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v64 = v63;

    v56[12] = &type metadata for String;
    v56[13] = v59;
    v56[9] = v62;
    v56[10] = v64;
    type metadata accessor for CKError(0);
    sub_1008CE3C8(&qword_101670DB8, 255, type metadata accessor for CKError);
    uint64_t v65 = Error.localizedDescription.getter();
    v56[17] = &type metadata for String;
    v56[18] = v59;
    v56[14] = v65;
    v56[15] = v66;
    uint64_t v67 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v60, (uint64_t)&_mh_execute_header, v67, (uint64_t)"<%{public}@> Record apparently failed to be deleted as part of client save. This is unexpected! This will go unhandled. recordID: %{public}@ error: %@", 150, 2, (uint64_t)v56);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    unint64_t v42 = v95;
    int64_t v43 = v97;
    if (v95) {
      goto LABEL_39;
    }
LABEL_40:
    int64_t v45 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
      goto LABEL_90;
    }
    if (v45 >= v87) {
      goto LABEL_64;
    }
    unint64_t v46 = *(void *)(v85 + 8 * v45);
    int64_t v47 = v43 + 1;
    if (!v46)
    {
      int64_t v47 = v43 + 2;
      if (v43 + 2 >= v87) {
        goto LABEL_64;
      }
      unint64_t v46 = *(void *)(v85 + 8 * v47);
      if (!v46)
      {
        int64_t v47 = v43 + 3;
        if (v43 + 3 >= v87) {
          goto LABEL_64;
        }
        unint64_t v46 = *(void *)(v85 + 8 * v47);
        if (!v46) {
          break;
        }
      }
    }
LABEL_53:
    uint64_t v95 = (v46 - 1) & v46;
    int64_t v97 = v47;
  }
  uint64_t v48 = v43 + 4;
  if (v43 + 4 < v87)
  {
    unint64_t v46 = *(void *)(v85 + 8 * v48);
    if (!v46)
    {
      while (1)
      {
        int64_t v47 = v48 + 1;
        if (__OFADD__(v48, 1)) {
          break;
        }
        if (v47 >= v87) {
          goto LABEL_64;
        }
        unint64_t v46 = *(void *)(v85 + 8 * v47);
        ++v48;
        if (v46) {
          goto LABEL_53;
        }
      }
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    int64_t v47 = v43 + 4;
    goto LABEL_53;
  }
LABEL_64:
  swift_release();
  id v68 = v92 + 8;
  uint64_t v69 = 1 << *((unsigned char *)v92 + 32);
  uint64_t v70 = -1;
  if (v69 < 64) {
    uint64_t v70 = ~(-1 << v69);
  }
  unint64_t v71 = v70 & v92[8];
  int64_t v72 = (unint64_t)(v69 + 63) >> 6;
  uint64_t v73 = swift_bridgeObjectRetain();
  id v74 = 0;
  uint64_t v75 = 0;
  int64_t v76 = 0;
  if (!v71) {
    goto LABEL_70;
  }
LABEL_67:
  unint64_t v77 = __clz(__rbit64(v71));
  v71 &= v71 - 1;
  for (unint64_t k = v77 | (v76 << 6); ; unint64_t k = __clz(__rbit64(v82)) + (v76 << 6))
  {
    uint64_t v79 = *(void *)(v73 + 56);
    uint64_t v80 = *(void *)(v79 + 16 * k);
    if (v75 < v80)
    {
      id v84 = *(id *)(v79 + 16 * k + 8);

      uint64_t v73 = (uint64_t)v92;
      id v74 = v84;
      uint64_t v75 = v80;
      if (v71) {
        goto LABEL_67;
      }
    }
    else if (v71)
    {
      goto LABEL_67;
    }
LABEL_70:
    int64_t v81 = v76 + 1;
    if (__OFADD__(v76, 1)) {
      goto LABEL_88;
    }
    if (v81 >= v72)
    {
LABEL_86:
      swift_release();
      sub_1008C8270(v74);
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v82 = v68[v81];
    ++v76;
    if (!v82)
    {
      int64_t v76 = v81 + 1;
      if (v81 + 1 >= v72) {
        goto LABEL_86;
      }
      unint64_t v82 = v68[v76];
      if (!v82)
      {
        int64_t v76 = v81 + 2;
        if (v81 + 2 >= v72) {
          goto LABEL_86;
        }
        unint64_t v82 = v68[v76];
        if (!v82) {
          break;
        }
      }
    }
LABEL_83:
    unint64_t v71 = (v82 - 1) & v82;
  }
  int64_t v83 = v81 + 3;
  if (v83 >= v72) {
    goto LABEL_86;
  }
  unint64_t v82 = v68[v83];
  if (v82)
  {
    int64_t v76 = v83;
    goto LABEL_83;
  }
  while (1)
  {
    int64_t v76 = v83 + 1;
    if (__OFADD__(v83, 1)) {
      break;
    }
    if (v76 >= v72) {
      goto LABEL_86;
    }
    unint64_t v82 = v68[v76];
    ++v83;
    if (v82) {
      goto LABEL_83;
    }
  }
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
}

uint64_t sub_1008C8270(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t, __n128))(v8 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v7, v10);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v12, v7);
  if (v13)
  {
    uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    if (v16)
    {
      *(unsigned char *)(v16 + 32) = 0;
      unint64_t v17 = *(void *)(v16 + 64);
      if (v17)
      {
        if (a1)
        {
          swift_retain();
          id v18 = a1;
          sub_1008CA1E8(v17, v18);

          swift_release();
        }
        else
        {
          uint64_t v19 = type metadata accessor for CRLZoneSyncResultScenarios();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
          id v20 = (char *)swift_retain();
          sub_1008C86E4(v20, 1, (unint64_t)v6);
          swift_release();
          sub_100522F00((uint64_t)v6, &qword_101674220);
        }
      }
    }
    return sub_1008C8494(v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008C8494(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v2)
  {
    swift_beginAccess();
    uint64_t v3 = *(void *)(v2 + 40);
    swift_bridgeObjectRetain();
    if ((v3 & 0xC000000000000001) == 0)
    {
LABEL_10:
      if (!*(void *)(v3 + 16)) {
        goto LABEL_11;
      }
LABEL_7:
      uint64_t v4 = sub_1006BA584(v3);
      swift_bridgeObjectRelease();
      sub_1008B97D8((unint64_t)v4);
      swift_release();
      return sub_1008BF5FC();
    }
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 {
         && _CocoaArrayWrapper.endIndex.getter())
  }
  {
    sub_100508C0C((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v3 = v5;
    if ((v5 & 0xC000000000000001) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = (uint64_t)&_swiftEmptySetSingleton;
    if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) == 0) {
      goto LABEL_10;
    }
  }
  if (__CocoaSet.count.getter()) {
    goto LABEL_7;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v6 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v8 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v9 = 0x5320646572616853;
  }
  else {
    uint64_t v9 = 0x2065746176697250;
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v10 = 0xEC00000065706F63;
  }
  else {
    unint64_t v10 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v10;
  id v11 = v6;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"<%{public}@> No pending zones to save, saving record zones", 58, 2, v8);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return sub_1008BF5FC();
}

void sub_1008C86E4(char *a1, char a2, unint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v12 = __chkstk_darwin(v9, v11);
  id v14 = (uint64_t *)((char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *id v14 = v15;
  (*(void (**)(void *, void, uint64_t, __n128))(v10 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v9, v12);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v14, v9);
  if ((v15 & 1) == 0)
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (a2)
  {
    id v17 = *(id *)(*((void *)a1 + 2) + 16);
    sub_1008C1530(v17, 0);

    uint64_t v4 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    if (v4)
    {
      a1[80] = 1;
LABEL_9:
      swift_retain();
      goto LABEL_10;
    }
LABEL_27:
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v38 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v40 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v41 = 0x5320646572616853;
    }
    else {
      uint64_t v41 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v42 = 0xEC00000065706F63;
    }
    else {
      unint64_t v42 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v40 + 32) = v41;
    *(void *)(v40 + 40) = v42;
    id v43 = v38;
    uint64_t v44 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v44, (uint64_t)"<%{public}@> Could not find active save task for handling finishSavingBatch", 75, 2, v40);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    goto LABEL_44;
  }
  uint64_t v4 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (!v4) {
    goto LABEL_27;
  }
  a1[80] = 1;
  if ((a1[25] & 1) == 0) {
    goto LABEL_9;
  }
  if (a1[24] == 1)
  {
    id v18 = *(void **)(*((void *)a1 + 2) + 16);
    swift_beginAccess();
    swift_retain();
    sub_100CBAAE4(v128, v18);
    swift_endAccess();
  }
  else
  {
    swift_retain();
  }
  unint64_t v51 = *((void *)a1 + 4);
  if (v51 >> 62)
  {
LABEL_97:
    swift_bridgeObjectRetain_n();
    uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v52) {
      goto LABEL_48;
    }
LABEL_98:
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {
      if (qword_10166FB88 == -1)
      {
LABEL_37:
        swift_beginAccess();
        int64_t v45 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v46 = swift_initStackObject();
        uint64_t v47 = v46;
        *(_OWORD *)(v46 + 16) = xmmword_10117E810;
        if (*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
          uint64_t v48 = 0x5320646572616853;
        }
        else {
          uint64_t v48 = 0x2065746176697250;
        }
        if (*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
          unint64_t v49 = 0xEC00000065706F63;
        }
        else {
          unint64_t v49 = 0xED000065706F6353;
        }
        *(void *)(v46 + 56) = &type metadata for String;
        *(void *)(v46 + 64) = sub_100528BE4();
        *(void *)(v47 + 32) = v48;
        *(void *)(v47 + 40) = v49;
        id v43 = v45;
        uint64_t v50 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v50, (uint64_t)"<%{public}@> Can't process save results. There is no data source set", 68, 2, v47);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
        swift_release();
LABEL_44:

        return;
      }
LABEL_95:
      swift_once();
      goto LABEL_37;
    }
    if (qword_10166FB88 == -1)
    {
LABEL_12:
      uint64_t v115 = v4;
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.dataSync;
      uint64_t v121 = sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v20 = swift_initStackObject();
      uint64_t v21 = (void *)v20;
      long long v120 = xmmword_10117D8C0;
      *(_OWORD *)(v20 + 16) = xmmword_10117D8C0;
      if (*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        uint64_t v22 = 0x5320646572616853;
      }
      else {
        uint64_t v22 = 0x2065746176697250;
      }
      if (*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        unint64_t v23 = 0xEC00000065706F63;
      }
      else {
        unint64_t v23 = 0xED000065706F6353;
      }
      *(void *)(v20 + 56) = &type metadata for String;
      *(void *)&long long v119 = sub_100528BE4();
      v21[8] = v119;
      v21[4] = v22;
      v21[5] = v23;
      swift_beginAccess();
      uint64_t v24 = *(void *)(*((void *)a1 + 8) + 16);
      v21[12] = &type metadata for Int;
      v21[13] = &protocol witness table for Int;
      v21[9] = v24;
      id v25 = v19;
      uint64_t v26 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"<%{public}@> Processing %d save results", 39, 2, (uint64_t)v21);
      swift_setDeallocating();
      uint64_t v118 = sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      unint64_t v127 = _swiftEmptyDictionarySingleton;
      uint64_t v126 = _swiftEmptyArrayStorage;
      __chkstk_darwin(v27, v28);
      *(&v109 - 4) = a3;
      *(&v109 - 3) = (uint64_t)&v126;
      *(&v109 - 2) = (uint64_t)&v127;
      uint64_t v29 = swift_bridgeObjectRetain();
      unint64_t v30 = sub_100C34364(v29, (void (*)(uint64_t *__return_ptr, id *))sub_1008C95DC, 0, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1008CFE64, (uint64_t)(&v109 - 6), (void (*)(double **__return_ptr, uint64_t *))sub_1008CA170);
      swift_bridgeObjectRelease();
      sub_100CE4D08();
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v31) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v31)
        {
LABEL_20:
          if (v31 >= 1)
          {
            uint64_t v32 = 0;
            unint64_t v123 = v30 & 0xC000000000000001;
            uint64_t v122 = (char *)&type metadata for () + 8;
            uint64_t v116 = v31;
            uint64_t v117 = v30;
            do
            {
              if (v123)
              {
                uint64_t v33 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                uint64_t v35 = v33;
              }
              else
              {
                uint64_t v35 = *(void *)(v30 + 8 * v32 + 32);
                uint64_t v33 = swift_retain();
              }
              char v36 = *(unsigned char *)(Strong + 24);
              __chkstk_darwin(v33, v34);
              *(&v109 - 4) = v37;
              *(&v109 - 3) = v35;
              *((unsigned char *)&v109 - 16) = v36;
              OS_dispatch_queue.sync<A>(execute:)();
              swift_release();
              ++v32;
            }
            while (v31 != v32);
            goto LABEL_92;
          }
LABEL_94:
          __break(1u);
          goto LABEL_95;
        }
      }
LABEL_92:
      swift_bridgeObjectRelease();
      sub_100A60184();
      uint64_t v108 = swift_bridgeObjectRetain();
      sub_100A62300(v108);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
LABEL_90:
    swift_once();
    goto LABEL_12;
  }
  uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v52) {
    goto LABEL_98;
  }
LABEL_48:
  unint64_t v110 = a3;
  uint64_t v111 = v5;
  uint64_t v115 = v4;
  uint64_t Strong = *((void *)a1 + 2);
  unint64_t v125 = v51 & 0xC000000000000001;
  unint64_t v123 = (unint64_t)(a1 + 64);
  swift_beginAccess();
  uint64_t v5 = 4;
  long long v119 = xmmword_101186D00;
  uint64_t v121 = v51;
  uint64_t v122 = a1;
  *(void *)&long long v120 = v52;
  while (1)
  {
    if (v125) {
      id v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v53 = *(id *)(v51 + 8 * v5);
    }
    id v54 = v53;
    uint64_t v4 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_88;
    }
    uint64_t v55 = *(void *)(Strong + 24);
    if (*(void *)(v55 + 16)) {
      break;
    }

LABEL_50:
    ++v5;
    if (v4 == v52)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v115;
      a3 = v110;
      uint64_t v5 = v111;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRetain();
  id v56 = v54;
  unint64_t v57 = sub_100956CAC((uint64_t)v56);
  if ((v58 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  unint64_t v59 = (char **)(*(void *)(v55 + 56) + 16 * v57);
  a1 = *v59;
  a3 = (unint64_t)v59[1];
  swift_unknownObjectRetain();

  swift_bridgeObjectRelease();
  uint64_t v60 = *(void *)v123;
  if (!*(void *)(*(void *)v123 + 16))
  {
LABEL_66:
    uint64_t v80 = (id *)v123;
    swift_beginAccess();
    swift_unknownObjectRetain_n();
    id v81 = v56;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v128[0] = *v80;
    int64_t v83 = v128[0];
    *uint64_t v80 = (id)0x8000000000000000;
    unint64_t v85 = sub_100956CAC((uint64_t)v81);
    uint64_t v86 = v83[2];
    BOOL v87 = (v84 & 1) == 0;
    uint64_t v88 = v86 + v87;
    if (__OFADD__(v86, v87)) {
      goto LABEL_89;
    }
    char v89 = v84;
    if (v83[3] >= v88)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_100982624();
      }
    }
    else
    {
      sub_10096B4B0(v88, isUniquelyReferenced_nonNull_native);
      unint64_t v90 = sub_100956CAC((uint64_t)v81);
      if ((v89 & 1) != (v91 & 1)) {
        goto LABEL_100;
      }
      unint64_t v85 = v90;
    }
    unint64_t v92 = a3 | 0x8000000000000000;
    id v93 = v128[0];
    if (v89)
    {
      uint64_t v94 = *((void *)v128[0] + 7) + 40 * v85;
      sub_1008D0CD8(*(void *)v94, *(void *)(v94 + 8), *(void **)(v94 + 16), *(void *)(v94 + 24), *(void **)(v94 + 32));
      *(void *)uint64_t v94 = a1;
      *(void *)(v94 + 8) = v92;
      *(_OWORD *)(v94 + 16) = v119;
      *(void *)(v94 + 32) = 0;
    }
    else
    {
      *((void *)v128[0] + (v85 >> 6) + 8) |= 1 << v85;
      *(void *)(v93[6] + 8 * v85) = v81;
      uint64_t v95 = v93[7] + 40 * v85;
      *(void *)uint64_t v95 = a1;
      *(void *)(v95 + 8) = v92;
      *(_OWORD *)(v95 + 16) = v119;
      *(void *)(v95 + 32) = 0;
      uint64_t v96 = v93[2];
      BOOL v97 = __OFADD__(v96, 1);
      uint64_t v98 = v96 + 1;
      if (v97)
      {
        __break(1u);
        goto LABEL_94;
      }
      v93[2] = v98;
      id v99 = v81;
    }
    *(void *)unint64_t v123 = v93;

    swift_bridgeObjectRelease();
    swift_endAccess();

    swift_unknownObjectRelease_n();
    goto LABEL_77;
  }
  id v61 = v56;
  swift_bridgeObjectRetain();
  unint64_t v62 = sub_100956CAC((uint64_t)v61);
  if ((v63 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  uint64_t v118 = (uint64_t)a1;
  uint64_t v64 = (uint64_t *)(*(void *)(v60 + 56) + 40 * v62);
  unint64_t v65 = v64[1];
  a1 = (char *)v64[2];
  unint64_t v66 = v64[3];
  uint64_t v67 = (void *)v64[4];
  uint64_t v117 = *v64;
  sub_1008D0DA8(v117, v65, a1, v66, v67);

  swift_bridgeObjectRelease();
  if ((v65 & 0x8000000000000000) != 0)
  {
    swift_unknownObjectRelease();
    sub_1008D0CD8(v117, v65, a1, v66, v67);

LABEL_77:
    unint64_t v51 = v121;
    a1 = v122;
    uint64_t v52 = v120;
    goto LABEL_50;
  }
  uint64_t v112 = v67;
  unint64_t v113 = v66;
  unint64_t v114 = v65;
  uint64_t v116 = a3;
  id v68 = (id *)v123;
  swift_beginAccess();
  swift_unknownObjectRetain_n();
  id v69 = v61;
  char v70 = swift_isUniquelyReferenced_nonNull_native();
  v128[0] = *v68;
  unint64_t v71 = v128[0];
  *id v68 = (id)0x8000000000000000;
  unint64_t v51 = sub_100956CAC((uint64_t)v69);
  uint64_t v73 = v71[2];
  BOOL v74 = (v72 & 1) == 0;
  uint64_t v75 = v73 + v74;
  if (__OFADD__(v73, v74))
  {
    __break(1u);
    goto LABEL_97;
  }
  char v76 = v72;
  a3 = (unint64_t)a1;
  if (v71[3] >= v75)
  {
    uint64_t v79 = v118;
    if ((v70 & 1) == 0) {
      sub_100982624();
    }
  }
  else
  {
    sub_10096B4B0(v75, v70);
    unint64_t v77 = sub_100956CAC((uint64_t)v69);
    uint64_t v79 = v118;
    if ((v76 & 1) != (v78 & 1)) {
      goto LABEL_100;
    }
    unint64_t v51 = v77;
  }
  unint64_t v100 = v116 | 0x8000000000000000;
  id v101 = v128[0];
  if (v76)
  {
    uint64_t v102 = *((void *)v128[0] + 7) + 40 * v51;
    sub_1008D0CD8(*(void *)v102, *(void *)(v102 + 8), *(void **)(v102 + 16), *(void *)(v102 + 24), *(void **)(v102 + 32));
    *(void *)uint64_t v102 = v79;
    *(void *)(v102 + 8) = v100;
    *(_OWORD *)(v102 + 16) = v119;
    *(void *)(v102 + 32) = 0;
LABEL_85:
    unint64_t v51 = v121;
    uint64_t v107 = v117;
    *(void *)unint64_t v123 = v101;

    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_unknownObjectRelease();
    sub_1008D0CD8(v107, v114, (void *)a3, v113, v112);
    swift_unknownObjectRelease();

    a1 = v122;
    uint64_t v52 = v120;
    goto LABEL_50;
  }
  *((void *)v128[0] + (v51 >> 6) + 8) |= 1 << v51;
  *(void *)(v101[6] + 8 * v51) = v69;
  uint64_t v103 = v101[7] + 40 * v51;
  *(void *)uint64_t v103 = v79;
  *(void *)(v103 + 8) = v100;
  *(_OWORD *)(v103 + 16) = v119;
  *(void *)(v103 + 32) = 0;
  uint64_t v104 = v101[2];
  BOOL v97 = __OFADD__(v104, 1);
  uint64_t v105 = v104 + 1;
  if (!v97)
  {
    v101[2] = v105;
    id v106 = v69;
    goto LABEL_85;
  }
  __break(1u);
LABEL_100:
  sub_10050BF48(0, &qword_10167BED0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1008C95DC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void **)(a1 + 40);
  id v8 = *(id *)a1;
  sub_1008D0DA8(v3, v4, v5, v6, v7);

  *a2 = v3;
  a2[1] = v4;
  a2[2] = (uint64_t)v5;
  a2[3] = v6;
  a2[4] = (uint64_t)v7;
}

void sub_1008C9650(uint64_t *a1@<X0>, uint64_t a2@<X1>, double **a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v125 = a4;
  uint64_t v126 = a3;
  uint64_t v121 = a5;
  uint64_t v120 = sub_1005057FC(&qword_101685C80);
  __chkstk_darwin(v120, v7);
  long long v119 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v118 = (char *)&v110 - v11;
  uint64_t v12 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v117 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLZoneSyncResultScenarios();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  unint64_t v113 = (unsigned __int8 *)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v116 = (char *)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v114 = (uint64_t)&v110 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v110 - v27;
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v110 - v31;
  __chkstk_darwin(v33, v34);
  char v36 = (char *)&v110 - v35;
  __chkstk_darwin(v37, v38);
  uint64_t v40 = (char *)&v110 - v39;
  __chkstk_darwin(v41, v42);
  uint64_t v44 = (unsigned __int8 *)&v110 - v43;
  uint64_t v46 = *a1;
  unint64_t v45 = a1[1];
  uint64_t v111 = a1[2];
  uint64_t v112 = *((unsigned __int8 *)a1 + 24);
  unint64_t v128 = v45 >> 62;
  uint64_t v124 = v45;
  if (v45 >> 62) {
    uint64_t v47 = v45 & 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v47 = v45;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v130 = v46;
  uint64_t v133 = v46;
  unint64_t v49 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v47 + 8) + 8))(ObjectType);
  id v129 = [v49 zoneID];

  sub_100522E9C(a2, (uint64_t)v44, &qword_101674220);
  uint64_t v131 = v16;
  uint64_t v50 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v16 + 48);
  if (v50(v44, 1, v15) == 1)
  {
    sub_100522F00((uint64_t)v44, &qword_101674220);
    int v51 = 0;
  }
  else
  {
    int v51 = *v44;
    sub_1008D0E78((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
  }
  sub_100522E9C(a2, (uint64_t)v40, &qword_101674220);
  if (v50((unsigned __int8 *)v40, 1, v15) == 1)
  {
    sub_100522F00((uint64_t)v40, &qword_101674220);
    int v52 = 0;
  }
  else
  {
    int v52 = v40[1];
    sub_1008D0E78((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
  }
  sub_100522E9C(a2, (uint64_t)v36, &qword_101674220);
  unsigned int v53 = v50((unsigned __int8 *)v36, 1, v15);
  id v54 = v125;
  if (v53 == 1)
  {
    sub_100522F00((uint64_t)v36, &qword_101674220);
    int v115 = 0;
  }
  else
  {
    int v115 = v36[2];
    sub_1008D0E78((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
  }
  sub_100522E9C(a2, (uint64_t)v32, &qword_101674220);
  unsigned int v55 = v50((unsigned __int8 *)v32, 1, v15);
  uint64_t v56 = (uint64_t)v116;
  if (v55 == 1)
  {
    sub_100522F00((uint64_t)v32, &qword_101674220);
    int v122 = 0;
  }
  else
  {
    int v122 = v32[3];
    sub_1008D0E78((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
  }
  int v123 = v52;
  if (v128)
  {
    if (v128 == 1)
    {
      uint64_t v57 = v124 & 0x3FFFFFFFFFFFFFFFLL;
      char v58 = v126;
      unint64_t v59 = *v126;
      swift_unknownObjectRetain_n();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *char v58 = v59;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v59 = sub_100F646A0(0, *((void *)v59 + 2) + 1, 1, v59);
        *uint64_t v126 = v59;
      }
      unint64_t v62 = *((void *)v59 + 2);
      unint64_t v61 = *((void *)v59 + 3);
      if (v62 >= v61 >> 1)
      {
        unint64_t v59 = sub_100F646A0((double *)(v61 > 1), v62 + 1, 1, v59);
        *uint64_t v126 = v59;
      }
      *((void *)v59 + 2) = v62 + 1;
      char v63 = &v59[2 * v62];
      *((void *)v63 + 4) = v130;
      *((void *)v63 + 5) = v57;
      swift_unknownObjectRelease();
      int v127 = 1;
      id v54 = v125;
    }
    else
    {
      int v127 = v51;
      if (!v112)
      {
        uint64_t v132 = v111;
        type metadata accessor for CKError(0);
        sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
        _BridgedStoredNSError.code.getter();
        if (v133 == 18)
        {
          int v122 = 1;
        }
        else if (v133 == 25)
        {
          int v123 = 1;
        }
      }
    }
  }
  else
  {
    int v127 = v51;
    uint64_t v64 = v126;
    unint64_t v65 = *v126;
    swift_unknownObjectRetain_n();
    char v66 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v64 = v65;
    if ((v66 & 1) == 0)
    {
      unint64_t v65 = sub_100F646A0(0, *((void *)v65 + 2) + 1, 1, v65);
      *uint64_t v126 = v65;
    }
    unint64_t v68 = *((void *)v65 + 2);
    unint64_t v67 = *((void *)v65 + 3);
    if (v68 >= v67 >> 1)
    {
      unint64_t v65 = sub_100F646A0((double *)(v67 > 1), v68 + 1, 1, v65);
      *uint64_t v126 = v65;
    }
    *((void *)v65 + 2) = v68 + 1;
    id v69 = &v65[2 * v68];
    uint64_t v70 = v124;
    *((void *)v69 + 4) = v130;
    *((void *)v69 + 5) = v70;
    swift_unknownObjectRelease();
    id v54 = v125;
  }
  uint64_t v71 = *v54;
  if (*(void *)(*v54 + 16))
  {
    id v72 = v129;
    unint64_t v73 = sub_100956E24((uint64_t)v72);
    if (v74)
    {
      uint64_t v75 = *(void *)(v71 + 56);
      uint64_t v76 = v131;
      uint64_t v77 = v114;
      sub_1008D11CC(v75 + *(void *)(v131 + 72) * v73, v114, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      uint64_t v78 = v76;
      uint64_t v79 = v77;
      uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56);
      v80(v79, 0, 1, v15);
    }
    else
    {
      uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56);
      uint64_t v79 = v114;
      v80(v114, 1, 1, v15);
    }
  }
  else
  {
    uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56);
    uint64_t v79 = v114;
    v80(v114, 1, 1, v15);
  }
  if (v50((unsigned __int8 *)v79, 1, v15))
  {
    sub_100522F00(v79, &qword_101674220);
  }
  else
  {
    uint64_t v81 = v79;
    uint64_t v82 = v79;
    int64_t v83 = v113;
    sub_1008D11CC(v81, (uint64_t)v113, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    sub_100522F00(v82, &qword_101674220);
    LODWORD(v82) = *v83;
    sub_1008D0E78((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    v127 |= v82;
  }
  uint64_t v84 = *v54;
  if (*(void *)(*v54 + 16))
  {
    id v85 = v129;
    unint64_t v86 = sub_100956E24((uint64_t)v85);
    if (v87)
    {
      sub_1008D11CC(*(void *)(v84 + 56) + *(void *)(v131 + 72) * v86, v56, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      uint64_t v88 = v56;
      uint64_t v89 = 0;
    }
    else
    {
      uint64_t v88 = v56;
      uint64_t v89 = 1;
    }
    v80(v88, v89, 1, v15);
  }
  else
  {
    v80(v56, 1, 1, v15);
  }
  if (v50((unsigned __int8 *)v56, 1, v15))
  {
    sub_100522F00(v56, &qword_101674220);
    char v90 = v123;
  }
  else
  {
    uint64_t v91 = (uint64_t)v113;
    sub_1008D11CC(v56, (uint64_t)v113, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    sub_100522F00(v56, &qword_101674220);
    char v92 = *(unsigned char *)(v91 + 1);
    sub_1008D0E78(v91, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    char v90 = v92 | v123;
  }
  id v93 = *v126;
  uint64_t v94 = type metadata accessor for Date();
  uint64_t v95 = (uint64_t)v117;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v117, 1, 1, v94);
  uint64_t v96 = v120;
  uint64_t v97 = (uint64_t)&v118[*(int *)(v120 + 48)];
  sub_10051B3EC(v95, v97, &qword_101672EB0);
  *uint64_t v28 = v127 & 1;
  v28[1] = v90 & 1;
  v28[2] = v115;
  v28[3] = v122;
  v28[4] = 0;
  uint64_t v98 = (uint64_t)&v119[*(int *)(v96 + 48)];
  sub_10051B3EC(v97, v98, &qword_101672EB0);
  id v99 = &v28[*(int *)(v15 + 36)];
  *id v99 = 0;
  sub_10051B3EC(v98, (uint64_t)&v99[*(int *)(v96 + 48)], &qword_101672EB0);
  *(void *)&v28[*(int *)(v15 + 40)] = v93;
  v80((uint64_t)v28, 0, 1, v15);
  id v100 = v129;
  swift_bridgeObjectRetain();
  sub_10057E814((uint64_t)v28, v100);
  uint64_t v101 = v130;
  uint64_t v102 = v124;
  if (v128) {
    uint64_t v102 = v124 & 0x3FFFFFFFFFFFFFFFLL;
  }
  uint64_t v103 = swift_getObjectType();
  uint64_t v133 = v101;
  uint64_t v104 = *(void *)(v102 + 32);
  uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8);
  swift_unknownObjectRetain();
  uint64_t v106 = v105(v103, v104);
  uint64_t v108 = v107;
  swift_unknownObjectRelease();

  uint64_t v109 = v121;
  *uint64_t v121 = v106;
  v109[1] = v108;
}

uint64_t sub_1008CA170@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >> 62) {
    uint64_t v4 = v3 & 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v4 = *(void *)(a1 + 8);
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 32) + 16))(ObjectType);
  *a2 = result;
  a2[1] = v7;
  return result;
}

void sub_1008CA1E8(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (uint64_t *)((char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  void *v15 = v16;
  (*(void (**)(void *, void, uint64_t, __n128))(v11 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v10, v13);
  id v17 = v16;
  uint64_t v18 = _dispatchPreconditionTest(_:)();
  uint64_t v20 = *(void (**)(void *, uint64_t))(v11 + 8);
  uint64_t v19 = v11 + 8;
  v20(v15, v10);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v15 = (void *)0xED000065706F6353;
  uint64_t v16 = (void *)0xEC00000065706F63;
  uint64_t v19 = 0x5320646572616853;
  uint64_t v18 = 0x2065746176697250;
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_throttlingScheduler);
  if (!v21)
  {
    if (qword_10166FB88 == -1)
    {
LABEL_15:
      swift_beginAccess();
      uint64_t v41 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      initeCGFloat d = swift_initStackObject();
      uint64_t v43 = inited;
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        uint64_t v15 = v16;
      }
      else {
        uint64_t v19 = v18;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(v43 + 32) = v19;
      *(void *)(v43 + 40) = v15;
      id v44 = v41;
      uint64_t v45 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v45, (uint64_t)"<%{public}@> Attempting to handle successful batch failure but scheduler not found", 82, 2, v43);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return;
    }
LABEL_80:
    swift_once();
    goto LABEL_15;
  }
  uint64_t v110 = v9;
  uint64_t v112 = v21;
  swift_retain();
  unint64_t v111 = a1;
  if (sub_1009EBE08())
  {
    uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    uint64_t v23 = 0x2065746176697250;
    if (v22) {
      *(unsigned char *)(v22 + 56) = 1;
    }
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v24 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v25 = swift_initStackObject();
    uint64_t v26 = (void *)v25;
    *(_OWORD *)(v25 + 16) = xmmword_10117DF40;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope))
    {
      uint64_t v23 = 0x5320646572616853;
      unint64_t v27 = 0xEC00000065706F63;
    }
    else
    {
      unint64_t v27 = 0xED000065706F6353;
    }
    *(void *)(v25 + 56) = &type metadata for String;
    unint64_t v28 = sub_100528BE4();
    uint64_t v109 = v3;
    unint64_t v29 = v28;
    v26[8] = v28;
    v26[4] = v23;
    v26[5] = v27;
    id v30 = v24;
    id v31 = a2;
    uint64_t v32 = sub_1009F4A44(v31);
    uint64_t v34 = v33;

    v26[12] = &type metadata for String;
    v26[13] = v29;
    v26[9] = v32;
    v26[10] = v34;
    id v115 = v31;
    type metadata accessor for CKError(0);
    id v35 = v31;
    uint64_t v36 = String.init<A>(reflecting:)();
    v26[17] = &type metadata for String;
    v26[18] = v29;
    uint64_t v3 = v109;
    v26[14] = v36;
    v26[15] = v37;
    uint64_t v38 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v38, (uint64_t)"<%{public}@> Encountered unrecoverable batch error \"<%{public}@> <%@>\"", 70, 2, (uint64_t)v26);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  unint64_t v113 = (unint64_t)a2;
  type metadata accessor for CKError(0);
  sub_1008CE3C8((unint64_t *)&qword_101670DF8, 255, type metadata accessor for CKError);
  _BridgedStoredNSError.code.getter();
  if (v115 == (id)23
    || (uint64_t v114 = a2, _BridgedStoredNSError.code.getter(), v113 > 0x24)
    || ((1 << v113) & 0x1000A002D8) == 0)
  {
    char v39 = 0;
    unint64_t v40 = v111;
  }
  else
  {
    uint64_t v46 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
    char v39 = 1;
    unint64_t v40 = v111;
    if (v46) {
      *(unsigned char *)(v46 + 57) = 1;
    }
  }
  *(void *)(v40 + 72) = a2;
  id v47 = a2;
  swift_errorRelease();
  uint64_t v48 = *(void *)(v40 + 16);
  id v49 = *(id *)(v48 + 16);
  sub_1008C0D1C(v47, v49, 0);

  if (sub_1009EBE08())
  {
    if (*(unsigned char *)(v40 + 25) == 1)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v50 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v51 = swift_initStackObject();
      *(_OWORD *)(v51 + 16) = xmmword_10117E810;
      int v52 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
      *(void *)(v51 + 56) = &type metadata for String;
      unint64_t v53 = sub_100528BE4();
      uint64_t v54 = 0x2065746176697250;
      if (v52) {
        uint64_t v54 = 0x5320646572616853;
      }
      *(void *)(v51 + 32) = v54;
      if (v52) {
        unint64_t v55 = 0xEC00000065706F63;
      }
      else {
        unint64_t v55 = 0xED000065706F6353;
      }
      *(void *)(v51 + 64) = v53;
      *(void *)(v51 + 40) = v55;
      id v56 = v50;
      uint64_t v57 = static os_log_type_t.default.getter();
      char v58 = "<%{public}@> An atomic batch has failed to save and we cannot retry the save. Finishing the save operation on the batch";
      uint64_t v59 = (uint64_t)v56;
      uint64_t v60 = 119;
    }
    else
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      char v74 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v51 = swift_initStackObject();
      *(_OWORD *)(v51 + 16) = xmmword_10117E810;
      int v75 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope);
      *(void *)(v51 + 56) = &type metadata for String;
      unint64_t v76 = sub_100528BE4();
      uint64_t v77 = 0x2065746176697250;
      if (v75) {
        uint64_t v77 = 0x5320646572616853;
      }
      *(void *)(v51 + 32) = v77;
      if (v75) {
        unint64_t v78 = 0xEC00000065706F63;
      }
      else {
        unint64_t v78 = 0xED000065706F6353;
      }
      *(void *)(v51 + 64) = v76;
      *(void *)(v51 + 40) = v78;
      id v56 = v74;
      uint64_t v57 = static os_log_type_t.default.getter();
      char v58 = "<%{public}@> A non-atomic batch has failed to save and we cannot retry the save. Finishing the save operation on the batch";
      uint64_t v59 = (uint64_t)v56;
      uint64_t v60 = 122;
    }
    sub_100BAC898(v59, (uint64_t)&_mh_execute_header, v57, (uint64_t)v58, v60, 2, v51);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

LABEL_53:
    uint64_t v79 = type metadata accessor for CRLZoneSyncResultScenarios();
    unint64_t v80 = (unint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v110, 1, 1, v79);
    uint64_t v81 = (char *)v40;
    char v82 = 0;
LABEL_54:
    sub_1008C86E4(v81, v82, v80);
    swift_release();
    sub_100522F00(v80, &qword_101674220);
    return;
  }
  id v61 = *(id *)(v48 + 16);
  BOOL v62 = sub_1008B04A4(0, v61);

  if (v39 & 1 | !v62)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v63 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v64 = swift_initStackObject();
    unint64_t v65 = (void *)v64;
    *(_OWORD *)(v64 + 16) = xmmword_10117D8C0;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v66 = 0x5320646572616853;
    }
    else {
      uint64_t v66 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v67 = 0xEC00000065706F63;
    }
    else {
      unint64_t v67 = 0xED000065706F6353;
    }
    *(void *)(v64 + 56) = &type metadata for String;
    *(void *)(v64 + 64) = sub_100528BE4();
    v65[4] = v66;
    v65[5] = v67;
    unint64_t v68 = *(void **)(v48 + 16);
    v65[12] = sub_10050BF48(0, (unint64_t *)&qword_101674210);
    v65[13] = sub_10062E0F4(&qword_101685C78, (unint64_t *)&qword_101674210);
    v65[9] = v68;
    id v69 = v63;
    id v70 = v68;
    uint64_t v71 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v69, (uint64_t)&_mh_execute_header, v71, (uint64_t)"<%{public}@> Batch cannot be saved because it is throttled. ZoneID:<%{public}@>", 79, 2, (uint64_t)v65);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v72 = *(id *)(v48 + 16);
    BOOL v73 = sub_1008AF2B0(0, v72);

    if (v73) {
      *(unsigned char *)(v40 + 56) = 1;
    }
    goto LABEL_53;
  }
  swift_beginAccess();
  unint64_t v83 = *(void *)(v40 + 32);
  if (!*(void *)(*(void *)(v40 + 64) + 16))
  {
    swift_bridgeObjectRetain();
    if (!(v83 >> 62)) {
      goto LABEL_57;
    }
LABEL_69:
    swift_bridgeObjectRetain();
    uint64_t v86 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_58;
  }
  swift_retain();
  unint64_t v84 = swift_bridgeObjectRetain();
  unint64_t v85 = (unint64_t)sub_1009ECE4C(v84, v40);
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v83 = v85;
  if (v85 >> 62) {
    goto LABEL_69;
  }
LABEL_57:
  uint64_t v86 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_58:
  swift_bridgeObjectRelease();
  if (!v86)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v101 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v102 = swift_initStackObject();
    uint64_t v103 = v102;
    *(_OWORD *)(v102 + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v104 = 0x5320646572616853;
    }
    else {
      uint64_t v104 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v105 = 0xEC00000065706F63;
    }
    else {
      unint64_t v105 = 0xED000065706F6353;
    }
    *(void *)(v102 + 56) = &type metadata for String;
    *(void *)(v102 + 64) = sub_100528BE4();
    *(void *)(v103 + 32) = v104;
    *(void *)(v103 + 40) = v105;
    id v106 = v101;
    uint64_t v107 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v106, (uint64_t)&_mh_execute_header, v107, (uint64_t)"<%{public}@> A failed batch save should not be attempted again because all failures have been resolved locally and there is no need to sync them back to server", 159, 2, v103);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v108 = type metadata accessor for CRLZoneSyncResultScenarios();
    unint64_t v80 = (unint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v110, 1, 1, v108);
    uint64_t v81 = (char *)v40;
    char v82 = 1;
    goto LABEL_54;
  }
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v87 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v88 = swift_initStackObject();
  uint64_t v89 = v88;
  *(_OWORD *)(v88 + 16) = xmmword_10117DF40;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v90 = 0x5320646572616853;
  }
  else {
    uint64_t v90 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v91 = 0xEC00000065706F63;
  }
  else {
    unint64_t v91 = 0xED000065706F6353;
  }
  *(void *)(v88 + 56) = &type metadata for String;
  unint64_t v92 = sub_100528BE4();
  *(void *)(v89 + 64) = v92;
  *(void *)(v89 + 32) = v90;
  *(void *)(v89 + 40) = v91;
  id v93 = *(void **)(v48 + 16);
  id v94 = v87;
  id v95 = [v93 zoneName];
  uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v98 = v97;

  *(void *)(v89 + 96) = &type metadata for String;
  *(void *)(v89 + 104) = v92;
  *(void *)(v89 + 72) = v96;
  *(void *)(v89 + 80) = v98;
  char v99 = *(unsigned char *)(v111 + 25);
  *(void *)(v89 + 136) = &type metadata for Bool;
  *(void *)(v89 + 144) = &protocol witness table for Bool;
  *(unsigned char *)(v89 + 112) = v99;
  uint64_t v100 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v94, (uint64_t)&_mh_execute_header, v100, (uint64_t)"<%{public}@> Saving a batch is failed but the save failure is recoverable. In our next attempt, we will retry the save if there are any outstanding records for saving. Zone id: %{public}@, isAtomic: %d", 201, 2, v89);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  swift_release();
}

uint64_t sub_1008CB038()
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v3 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v4 = 0x5320646572616853;
  }
  else {
    uint64_t v4 = 0x2065746176697250;
  }
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v5 = 0xEC00000065706F63;
  }
  else {
    unint64_t v5 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  id v6 = v1;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"<%{public}@> Sync engine will send changes to CloudKit", 54, 2, v3);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1008CFE4C;
  *(void *)(v10 + 24) = v9;
  v16[4] = sub_100659320;
  v16[5] = v10;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = *(void *)"";
  void v16[2] = sub_1006D9628;
  v16[3] = &unk_101518D30;
  uint64_t v11 = _Block_copy(v16);
  uint64_t v12 = v8;
  __n128 v13 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v11);

  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008CB2DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  void *v7 = v8;
  (*(void (**)(void *, void, uint64_t, __n128))(v3 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v7, v2);
  if (v8)
  {
    uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingSavesCounter);
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (!v12)
    {
      *(void *)(a1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingSavesCounter) = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1008CB40C()
{
  uint64_t v1 = v0;
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v4 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v5 = 0x5320646572616853;
  }
  else {
    uint64_t v5 = 0x2065746176697250;
  }
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v6 = 0xEC00000065706F63;
  }
  else {
    unint64_t v6 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  v4[8] = v7;
  v4[4] = v5;
  v4[5] = v6;
  id v8 = v2;
  uint64_t v9 = CKSyncEngine.SyncReason.description.getter();
  v4[12] = &type metadata for String;
  v4[13] = v7;
  v4[9] = v9;
  v4[10] = v10;
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v11, (uint64_t)"<%{public}@> Sync engine did send changes to CloudKit for reason %{public}@", 75, 2, (uint64_t)v4);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  BOOL v12 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1008CFE00;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = sub_1006591F0;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1006D9628;
  aBlock[3] = &unk_101518CB8;
  uint64_t v15 = _Block_copy(aBlock);
  uint64_t v16 = v12;
  id v17 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v16, v15);

  _Block_release(v15);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008CB6D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  unint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v8 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  void *v7 = v8;
  (*(void (**)(void *, void, uint64_t, __n128))(v3 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v7, v2);
  if (v8)
  {
    uint64_t v11 = OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingFetchesCounter;
    if (!*(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingFetchesCounter])
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        sub_100CEE234(v1);
        uint64_t result = swift_unknownObjectRelease();
      }
    }
    uint64_t v12 = *(void *)&v1[v11];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (!v13)
    {
      *(void *)&v1[v11] = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1008CB838()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v4 = __chkstk_darwin(v1, v3);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t, __n128))(v2 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v1, v4);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v6, v1);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v9 = OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingFetchesCounter;
  uint64_t v10 = *(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingFetchesCounter];
  if (v10 <= 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_decrementOngoingFetchCounter()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncController.swift", 82, 2, 2098, (uint64_t)"SyncController ongoing fetch counter is negative, which is invalid. A fetch finished but we did not expect one to be ongoing.", 125, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_decrementOngoingFetchCounter()", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncController.swift", 82, 2, 2098);
    uint64_t v10 = *(void *)&v0[v9];
  }
  BOOL v11 = __OFSUB__(v10, 1);
  uint64_t v12 = v10 - 1;
  if (v11) {
    goto LABEL_10;
  }
  *(void *)&v0[v9] = v12 & ~(v12 >> 63);
  if (v12 <= 0)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100CED63C(v0);
      swift_unknownObjectRelease();
    }
  }
}

void sub_1008CBA48()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v4 = __chkstk_darwin(v1, v3);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t, __n128))(v2 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v1, v4);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v6, v1);
  if (v7)
  {
    uint64_t v9 = OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingSavesCounter;
    uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLSyncController_ongoingSavesCounter);
    if (v10 <= 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_decrementOngoingSaveCounter()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncController.swift", 82, 2, 2113, (uint64_t)"SyncController ongoing fetch counter is negative, which is invalid. A fetch finished but we did not expect one to be ongoing.", 125, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_decrementOngoingSaveCounter()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncController.swift", 82, 2, 2113);
      uint64_t v10 = *(void *)(v0 + v9);
    }
    BOOL v11 = __OFSUB__(v10, 1);
    uint64_t v12 = v10 - 1;
    if (!v11)
    {
      *(void *)(v0 + v9) = v12 & ~(v12 >> 63);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1008CBC54()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSyncController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLSyncController()
{
  return self;
}

void *sub_1008CBDE8(unsigned char *a1, void *a2, int *a3)
{
  __n128 v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *__n128 v4 = *a2;
    __n128 v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    id v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = (int *)type metadata accessor for CRLThrottleInfo(0);
    uint64_t v11 = *((void *)v10 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_1005057FC(&qword_101674228);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14))
      {
        uint64_t v16 = sub_1005057FC(&qword_101672EB0);
        memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v8, v9, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
      }
      uint64_t v17 = v10[5];
      uint64_t v18 = *(void **)&v9[v17];
      *(void *)&v8[v17] = v18;
      *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
      *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
      uint64_t v19 = *(void (**)(char *, void, uint64_t, int *))(v11 + 56);
      id v20 = v18;
      v19(v8, 0, 1, v10);
    }
    uint64_t v21 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v21) = *((unsigned char *)a2 + v21);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t type metadata accessor for CRLThrottleInfo(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101685BB8);
}

uint64_t sub_1008CC084(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for CRLThrottleInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    uint64_t v4 = type metadata accessor for Date();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
    }
  }

  return swift_bridgeObjectRelease();
}

unsigned char *sub_1008CC1B0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  id v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for CRLThrottleInfo(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1005057FC(&qword_101674228);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
    {
      uint64_t v14 = sub_1005057FC(&qword_101672EB0);
      memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v7, v8, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    }
    uint64_t v15 = v9[5];
    uint64_t v16 = *(void **)&v8[v15];
    *(void *)&v7[v15] = v16;
    *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
    *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
    uint64_t v17 = *(void (**)(char *, void, uint64_t, int *))(v10 + 56);
    id v18 = v16;
    v17(v7, 0, 1, v9);
  }
  uint64_t v19 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  a1[v19] = a2[v19];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_1008CC3DC(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  id v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for CRLThrottleInfo(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1008D0E78((uint64_t)v7, type metadata accessor for CRLThrottleInfo);
      goto LABEL_7;
    }
    uint64_t v18 = type metadata accessor for Date();
    uint64_t v32 = *(void *)(v18 - 8);
    uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    int v20 = v19(v7, 1, v18);
    int v21 = v19(v8, 1, v18);
    if (v20)
    {
      if (!v21)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v7, v8, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v7, 0, 1, v18);
LABEL_16:
        uint64_t v27 = v9[5];
        unint64_t v28 = *(void **)&v8[v27];
        unint64_t v29 = *(void **)&v7[v27];
        *(void *)&v7[v27] = v28;
        id v30 = v28;

        *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
        *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v21)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 24))(v7, v8, v18);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v18);
    }
    uint64_t v26 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v17 = sub_1005057FC(&qword_101674228);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  uint64_t v22 = v9[5];
  uint64_t v23 = *(void **)&v8[v22];
  *(void *)&v7[v22] = v23;
  *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  uint64_t v24 = *(void (**)(char *, void, uint64_t, int *))(v10 + 56);
  id v25 = v23;
  v24(v7, 0, 1, v9);
LABEL_17:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *sub_1008CC7DC(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  id v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for CRLThrottleInfo(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1005057FC(&qword_101674228);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
    {
      uint64_t v14 = sub_1005057FC(&qword_101672EB0);
      memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v7, v8, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    }
    *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
    *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
    *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v15 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  a1[v15] = a2[v15];
  return a1;
}

unsigned char *sub_1008CCA00(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  id v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for CRLThrottleInfo(0);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_1008D0E78((uint64_t)v7, type metadata accessor for CRLThrottleInfo);
      goto LABEL_7;
    }
    uint64_t v18 = type metadata accessor for Date();
    uint64_t v26 = *(void *)(v18 - 8);
    uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    int v20 = v19(v7, 1, v18);
    int v21 = v19(v8, 1, v18);
    if (v20)
    {
      if (!v21)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v7, v8, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v7, 0, 1, v18);
LABEL_16:
        uint64_t v23 = v9[5];
        uint64_t v24 = *(void **)&v7[v23];
        *(void *)&v7[v23] = *(void *)&v8[v23];

        *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
        *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v21)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v7, v8, v18);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v18);
    }
    uint64_t v22 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v17 = sub_1005057FC(&qword_101674228);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, v8, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  *(void *)&v7[v9[5]] = *(void *)&v8[v9[5]];
  *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
  *(void *)&v7[v9[7]] = *(void *)&v8[v9[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_1008CCDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008CCE04);
}

uint64_t sub_1008CCE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101674228);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1008CCECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008CCEE0);
}

uint64_t sub_1008CCEE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_101674228);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLSyncActivityThrottlingScheduler.CRLSyncActivityThrottlingState(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101685B18);
}

void sub_1008CCFC4()
{
  sub_1008CDB28(319, (unint64_t *)&unk_101685B28, (void (*)(uint64_t))type metadata accessor for CRLThrottleInfo);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1008CD088(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1005057FC(&qword_101672EB0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    int v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    id v14 = v13;
  }
  return a1;
}

void sub_1008CD218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = *(void **)(a1 + *(int *)(a2 + 20));
}

char *sub_1008CD2E4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1005057FC(&qword_101672EB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)&a2[v9];
  *(void *)&a1[v9] = v11;
  *(void *)&a1[v10] = *(void *)&a2[v10];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  id v12 = v11;
  return a1;
}

char *sub_1008CD424(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1005057FC(&qword_101672EB0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  int v13 = *(void **)&a2[v12];
  id v14 = *(void **)&a1[v12];
  *(void *)&a1[v12] = v13;
  id v15 = v13;

  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_1008CD5D4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1005057FC(&qword_101672EB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_1008CD710(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1005057FC(&qword_101672EB0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  int v13 = *(void **)&a1[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];

  uint64_t v14 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  return a1;
}

uint64_t sub_1008CD8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008CD8CC);
}

uint64_t sub_1008CD8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672EB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1008CD990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008CD9A4);
}

uint64_t sub_1008CD9A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_101672EB0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1008CDA64()
{
  sub_1008CDB28(319, (unint64_t *)&qword_101685FF0, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1008CDB28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CRLSyncScope(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008CDC48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSyncScope()
{
  return &type metadata for CRLSyncScope;
}

uint64_t sub_1008CDC80()
{
  return sub_100523288(&qword_101685BF8, &qword_101685C00);
}

unint64_t sub_1008CDCC0()
{
  unint64_t result = qword_101685C08[0];
  if (!qword_101685C08[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_101685C08);
  }
  return result;
}

uint64_t sub_1008CDD14(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_100528D08;
  return sub_1008C1EA0(a1);
}

uint64_t sub_1008CDDA8(uint64_t a1)
{
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_100528D08;
  v4[14] = a1;
  v4[15] = v1;
  return _swift_task_switch(sub_1008C277C, 0, 0);
}

uint64_t sub_1008CDE54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528D08;
  return sub_1008C48D8(a1, a2);
}

uint64_t sub_1008CDEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10167B798 + dword_10167B798);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v6 = v3;
  v6[1] = sub_100528D08;
  return v9(a1, a3, WitnessTable);
}

uint64_t sub_1008CDFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v9 = v4;
  v9[1] = sub_100528D08;
  return sub_1006CFEDC(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1008CE0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v9 = v4;
  v9[1] = sub_100528D08;
  return sub_1006D037C(a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1008CE19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1005C8138;
  return CKSyncEngineDelegate.shouldFetchChanges(zoneID:syncEngine:)(a1, a2, a3, a4);
}

uint64_t sub_1008CE25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_1005C8138;
  return CKSyncEngineDelegate.relatedApplicationBundleIdentifiers(zoneIDs:recordIDs:syncEngine:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1008CE324(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1008CE3C8(&qword_101685C50, a2, (void (*)(uint64_t))type metadata accessor for CRLSyncController);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE37C()
{
  return sub_1008CE3C8(&qword_101685C58, 255, (void (*)(uint64_t))type metadata accessor for CRLCloudAccountChangeObserverWrapper);
}

uint64_t sub_1008CE3C8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008CE410(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101685CE8);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100522E9C(v6, (uint64_t)&v15, &qword_101685CF0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1008CE548(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100575CE8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008CE548(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1008CE5C0(a1, a2, v4);
}

unint64_t sub_1008CE5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1008CE708()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong)
    {
      swift_unknownObjectRelease();
      return v1 == Strong;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1008CE768(uint64_t a1)
{
  uint64_t v94 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v94, v3);
  id v93 = (char *)v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v105 = (char *)v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v109 = (char *)v87 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v104 = (char *)v87 - v18;
  uint64_t v19 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v92 = (uint64_t)v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v91 = (uint64_t)v87 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v90 = (uint64_t)v87 - v27;
  uint64_t v108 = v8;
  uint64_t v88 = v1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    sub_10062E0F4((unint64_t *)&qword_101674218, (unint64_t *)&qword_101674210);
    uint64_t v8 = v108;
    unint64_t result = Set.Iterator.init(_cocoa:)();
    a1 = v116;
    uint64_t v98 = v117;
    uint64_t v29 = v118;
    uint64_t v30 = v119;
    unint64_t v31 = v120;
  }
  else
  {
    uint64_t v32 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v33 = *(void *)(a1 + 56);
    uint64_t v98 = a1 + 56;
    uint64_t v29 = ~v32;
    uint64_t v34 = -v32;
    if (v34 < 64) {
      uint64_t v35 = ~(-1 << v34);
    }
    else {
      uint64_t v35 = -1;
    }
    unint64_t v31 = v35 & v33;
    unint64_t result = swift_bridgeObjectRetain();
    uint64_t v30 = 0;
  }
  v87[1] = v29;
  uint64_t v96 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v97 = (unint64_t)(v29 + 64) >> 6;
  id v106 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v103 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v102 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v101 = (void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v100 = CKCurrentUserDefaultName;
  uint64_t v89 = (void (**)(char *, uint64_t))(v10 + 8);
  unint64_t v111 = _swiftEmptyArrayStorage;
  id v95 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v107 = a1;
  uint64_t v110 = v9;
  while (a1 < 0)
  {
    uint64_t v39 = __CocoaSet.Iterator.next()();
    if (!v39) {
      goto LABEL_69;
    }
    *(void *)&long long v112 = v39;
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v40 = (id)v115;
    swift_unknownObjectRelease();
    uint64_t v38 = v30;
    uint64_t v36 = v31;
    if (!v40) {
      goto LABEL_69;
    }
LABEL_33:
    uint64_t v121 = v36;
    id v44 = [v40 zoneName];
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v47 = v46;

    v48._countAndFlagsBits = 0x5F6472616F42;
    v48._object = (void *)0xE600000000000000;
    if (String.hasPrefix(_:)(v48))
    {
      uint64_t v49 = HIBYTE(v47) & 0xF;
      if ((v47 & 0x2000000000000000) == 0) {
        uint64_t v49 = v45 & 0xFFFFFFFFFFFFLL;
      }
      if (!v49)
      {
LABEL_44:
        swift_bridgeObjectRelease();
        uint64_t v8 = v108;
        uint64_t v9 = v110;
        (*v106)(v108, 1, 1, v110);
        a1 = v107;
LABEL_50:
        sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674520);
        long long v112 = 0u;
        long long v113 = 0u;
        uint64_t v114 = 0;
        goto LABEL_63;
      }
      unint64_t v50 = 4 * v49;
      while (1)
      {
        unint64_t v51 = String.index(before:)();
        if (String.subscript.getter() == 95 && v52 == 0xE100000000000000) {
          break;
        }
        char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v54) {
          goto LABEL_47;
        }
        if (v51 < 0x4000) {
          goto LABEL_44;
        }
      }
      swift_bridgeObjectRelease();
LABEL_47:
      unint64_t result = String.index(after:)();
      if (v50 < result >> 14) {
        goto LABEL_71;
      }
      String.subscript.getter();
      swift_bridgeObjectRelease();
      static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
      uint64_t v8 = v108;
      UUID.init(uuidString:)();
      a1 = v107;
      uint64_t v9 = v110;
    }
    else
    {
      (*v106)(v8, 1, 1, v9);
    }
    swift_bridgeObjectRelease();
    if ((*v103)(v8, 1, v9) == 1) {
      goto LABEL_50;
    }
    uint64_t v55 = v9;
    id v56 = *v102;
    uint64_t v57 = v104;
    (*v102)(v104, v8, v55);
    char v58 = *v101;
    (*v101)(v109, v57, v55);
    id v59 = [v40 ownerName];
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v62 = v61;

    if (v60 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v62 == v63)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v64 & 1) == 0)
      {
        id v67 = [v40 ownerName];
        uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v66 = v68;

        goto LABEL_57;
      }
    }
    uint64_t v65 = 0;
    unint64_t v66 = 0xE000000000000000;
LABEL_57:
    v58(v105, v109, v110);
    uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v99 = v38;
    if (v65 == v69 && v66 == v70)
    {
      swift_bridgeObjectRelease();
LABEL_61:
      swift_bridgeObjectRelease();
      uint64_t v65 = 0;
      unint64_t v66 = 0xE000000000000000;
      goto LABEL_62;
    }
    char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v71) {
      goto LABEL_61;
    }
LABEL_62:
    uint64_t v72 = v107;
    BOOL v73 = *v89;
    uint64_t v74 = v110;
    (*v89)(v109, v110);
    int v75 = v93;
    v56(v93, v105, v74);
    uint64_t v9 = v74;
    unint64_t v76 = (uint64_t *)&v75[*(int *)(v94 + 20)];
    *unint64_t v76 = v65;
    v76[1] = v66;
    uint64_t v77 = (uint64_t)v75;
    uint64_t v78 = v91;
    sub_1008D1260(v77, v91, type metadata accessor for CRLBoardIdentifierStorage);
    v73(v104, v74);
    uint64_t v79 = v90;
    sub_1008D1260(v78, v90, type metadata accessor for CRLBoardIdentifier);
    uint64_t v80 = v92;
    sub_1008D11CC(v79, v92, type metadata accessor for CRLBoardIdentifier);
    uint64_t v81 = type metadata accessor for CRLBoardSyncRemoteRecordIdentifier(0);
    uint64_t v82 = swift_allocObject();
    sub_1008D1260(v80, v82 + OBJC_IVAR____TtC8Freeform34CRLBoardSyncRemoteRecordIdentifier_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
    *((void *)&v113 + 1) = v81;
    uint64_t v114 = &off_101537420;
    *(void *)&long long v112 = v82;
    sub_1008D0E78(v79, type metadata accessor for CRLBoardIdentifier);
    uint64_t v8 = v108;
    a1 = v72;
    uint64_t v38 = v99;
LABEL_63:
    unint64_t v83 = v121;

    if (*((void *)&v113 + 1))
    {
      sub_10053974C(&v112, (uint64_t)&v115);
      sub_10053974C(&v115, (uint64_t)&v112);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v111 = sub_100F646B4(0, *((void *)v111 + 2) + 1, 1, v111);
      }
      unint64_t v85 = *((void *)v111 + 2);
      unint64_t v84 = *((void *)v111 + 3);
      if (v85 >= v84 >> 1) {
        unint64_t v111 = sub_100F646B4((double *)(v84 > 1), v85 + 1, 1, v111);
      }
      uint64_t v86 = v111;
      *((void *)v111 + 2) = v85 + 1;
      unint64_t result = sub_10053974C(&v112, (uint64_t)&v86[5 * v85 + 4]);
    }
    else
    {
      unint64_t result = sub_100522F00((uint64_t)&v112, &qword_101685CF8);
    }
    uint64_t v30 = v38;
    unint64_t v31 = v83;
  }
  if (v31)
  {
    uint64_t v36 = (v31 - 1) & v31;
    unint64_t v37 = __clz(__rbit64(v31)) | (v30 << 6);
    uint64_t v38 = v30;
LABEL_32:
    id v40 = *(id *)(*(void *)(a1 + 48) + 8 * v37);
    if (!v40) {
      goto LABEL_69;
    }
    goto LABEL_33;
  }
  int64_t v41 = v30 + 1;
  if (!__OFADD__(v30, 1))
  {
    if (v41 >= v97) {
      goto LABEL_69;
    }
    unint64_t v42 = *(void *)(v98 + 8 * v41);
    uint64_t v38 = v30 + 1;
    if (!v42)
    {
      uint64_t v38 = v30 + 2;
      if (v30 + 2 >= v97) {
        goto LABEL_69;
      }
      unint64_t v42 = *(void *)(v98 + 8 * v38);
      if (!v42)
      {
        uint64_t v38 = v30 + 3;
        if (v30 + 3 >= v97) {
          goto LABEL_69;
        }
        unint64_t v42 = *(void *)(v98 + 8 * v38);
        if (!v42)
        {
          uint64_t v38 = v30 + 4;
          if (v30 + 4 >= v97) {
            goto LABEL_69;
          }
          unint64_t v42 = *(void *)(v98 + 8 * v38);
          if (!v42)
          {
            uint64_t v38 = v30 + 5;
            if (v30 + 5 >= v97) {
              goto LABEL_69;
            }
            unint64_t v42 = *(void *)(v98 + 8 * v38);
            if (!v42)
            {
              uint64_t v43 = v30 + 6;
              while (v97 != v43)
              {
                unint64_t v42 = *(void *)(v98 + 8 * v43++);
                if (v42)
                {
                  uint64_t v38 = v43 - 1;
                  goto LABEL_31;
                }
              }
LABEL_69:
              sub_10052E1EC();
              return (unint64_t)v111;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v36 = (v42 - 1) & v42;
    unint64_t v37 = __clz(__rbit64(v42)) + (v38 << 6);
    goto LABEL_32;
  }
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_1008CF324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, &qword_10167BED0);
    sub_10062E0F4(&qword_10167BED8, &qword_10167BED0);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v30;
    uint64_t v25 = v31;
    uint64_t v7 = v32;
    uint64_t v8 = v33;
    unint64_t v9 = v34;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v8 = 0;
  }
  int64_t v24 = (unint64_t)(v7 + 64) >> 6;
  uint64_t v13 = _swiftEmptyArrayStorage;
  while (v5 < 0)
  {
    uint64_t v17 = __CocoaSet.Iterator.next()();
    if (!v17) {
      goto LABEL_39;
    }
    *(void *)&long long v27 = v17;
    sub_10050BF48(0, &qword_10167BED0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v18 = *(id *)&v29[0];
    swift_unknownObjectRelease();
    uint64_t v16 = v8;
    uint64_t v14 = v9;
    if (!v18) {
      goto LABEL_39;
    }
LABEL_33:
    sub_100D2B93C(v18, a4, v35, (uint64_t)&v27);

    if (v28)
    {
      sub_10053974C(&v27, (uint64_t)v29);
      sub_10053974C(v29, (uint64_t)&v27);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_100F646B4(0, *((void *)v13 + 2) + 1, 1, v13);
      }
      unint64_t v23 = *((void *)v13 + 2);
      unint64_t v22 = *((void *)v13 + 3);
      if (v23 >= v22 >> 1) {
        uint64_t v13 = sub_100F646B4((double *)(v22 > 1), v23 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v23 + 1;
      uint64_t result = sub_10053974C(&v27, (uint64_t)&v13[5 * v23 + 4]);
    }
    else
    {
      uint64_t result = sub_100522F00((uint64_t)&v27, &qword_101685CF8);
    }
    uint64_t v8 = v16;
    unint64_t v9 = v14;
  }
  if (v9)
  {
    uint64_t v14 = (v9 - 1) & v9;
    unint64_t v15 = __clz(__rbit64(v9)) | (v8 << 6);
    uint64_t v16 = v8;
LABEL_32:
    id v18 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
    if (!v18) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  int64_t v19 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v19 >= v24) {
      goto LABEL_39;
    }
    unint64_t v20 = *(void *)(v25 + 8 * v19);
    uint64_t v16 = v8 + 1;
    if (!v20)
    {
      uint64_t v16 = v8 + 2;
      if (v8 + 2 >= v24) {
        goto LABEL_39;
      }
      unint64_t v20 = *(void *)(v25 + 8 * v16);
      if (!v20)
      {
        uint64_t v16 = v8 + 3;
        if (v8 + 3 >= v24) {
          goto LABEL_39;
        }
        unint64_t v20 = *(void *)(v25 + 8 * v16);
        if (!v20)
        {
          uint64_t v16 = v8 + 4;
          if (v8 + 4 >= v24) {
            goto LABEL_39;
          }
          unint64_t v20 = *(void *)(v25 + 8 * v16);
          if (!v20)
          {
            uint64_t v16 = v8 + 5;
            if (v8 + 5 >= v24) {
              goto LABEL_39;
            }
            unint64_t v20 = *(void *)(v25 + 8 * v16);
            if (!v20)
            {
              uint64_t v21 = v8 + 6;
              while (v24 != v21)
              {
                unint64_t v20 = *(void *)(v25 + 8 * v21++);
                if (v20)
                {
                  uint64_t v16 = v21 - 1;
                  goto LABEL_31;
                }
              }
LABEL_39:
              sub_10052E1EC();
              return (uint64_t)v13;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v14 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

void sub_1008CF6E8(uint64_t a1, void (*a2)(id, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v9);
        if (!v16)
        {
          int64_t v9 = v15 + 3;
          if (v15 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v9);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = 8 * v11;
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + v12);
    id v14 = *(id *)(*(void *)(a1 + 48) + v12);
    swift_bridgeObjectRetain();
    a2(v14, v13);
    swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1008CF880()
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v3 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v4 = 0x5320646572616853;
  }
  else {
    uint64_t v4 = 0x2065746176697250;
  }
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v5 = 0xEC00000065706F63;
  }
  else {
    unint64_t v5 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  id v6 = v1;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"<%{public}@> Sync engine started fetching changes from CloudKit", 63, 2, v3);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  int64_t v8 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1008D1380;
  *(void *)(v10 + 24) = v9;
  v16[4] = sub_100659320;
  v16[5] = v10;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = *(void *)"";
  void v16[2] = sub_1006D9628;
  v16[3] = &unk_1015190A0;
  unint64_t v11 = _Block_copy(v16);
  uint64_t v12 = v8;
  uint64_t v13 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v11);

  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008CFB24()
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v3 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    uint64_t v4 = 0x5320646572616853;
  }
  else {
    uint64_t v4 = 0x2065746176697250;
  }
  if (v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope]) {
    unint64_t v5 = 0xEC00000065706F63;
  }
  else {
    unint64_t v5 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  id v6 = v1;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"<%{public}@> Sync engine stopped fetching changes from CloudKit", 63, 2, v3);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  int64_t v8 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLSyncController_queue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1008D13B4;
  *(void *)(v10 + 24) = v9;
  v16[4] = sub_100659320;
  v16[5] = v10;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = *(void *)"";
  void v16[2] = sub_1006D9628;
  v16[3] = &unk_101519118;
  unint64_t v11 = _Block_copy(v16);
  uint64_t v12 = v8;
  uint64_t v13 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v11);

  _Block_release(v11);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008CFDC8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1008CFE00()
{
}

uint64_t sub_1008CFE24()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008CFE34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1008CFE44()
{
  return swift_release();
}

uint64_t sub_1008CFE4C()
{
  return sub_1008CB2DC(*(void *)(v0 + 16));
}

uint64_t sub_1008CFE54()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1008CFE64(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1008C9650(a1, *(void *)(v2 + 16), *(double ***)(v2 + 24), *(uint64_t **)(v2 + 32), a2);
}

void sub_1008CFE70(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  unint64_t v11 = (id *)((char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v6, v9);
  id v13 = v12;
  uint64_t v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v11, v6);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_49;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v57 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v59 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v60 = 0x5320646572616853;
    }
    else {
      uint64_t v60 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v61 = 0xEC00000065706F63;
    }
    else {
      unint64_t v61 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v59 + 32) = v60;
    *(void *)(v59 + 40) = v61;
    id v56 = v57;
    uint64_t v62 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v56, (uint64_t)&_mh_execute_header, v62, (uint64_t)"<%{public}@> Cannot handle save failure since a sync logic provider is not set", 78, 2, v59);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    goto LABEL_26;
  }
  uint64_t v16 = Strong;
  uint64_t v14 = (uint64_t)[a2 recordID];
  uint64_t v17 = *(void *)(*(void *)(a1 + 16) + 24);
  if (!*(void *)(v17 + 16))
  {
LABEL_28:
    if (qword_10166FB88 == -1)
    {
LABEL_29:
      swift_beginAccess();
      uint64_t v63 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v64 = swift_initStackObject();
      uint64_t v65 = (void *)v64;
      *(_OWORD *)(v64 + 16) = xmmword_10117D8C0;
      if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        uint64_t v66 = 0x5320646572616853;
      }
      else {
        uint64_t v66 = 0x2065746176697250;
      }
      if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
        unint64_t v67 = 0xEC00000065706F63;
      }
      else {
        unint64_t v67 = 0xED000065706F6353;
      }
      *(void *)(v64 + 56) = &type metadata for String;
      *(void *)(v64 + 64) = sub_100528BE4();
      v65[4] = v66;
      v65[5] = v67;
      v65[12] = sub_10050BF48(0, &qword_10167BED0);
      v65[13] = sub_10062E0F4((unint64_t *)&qword_101685CC8, &qword_10167BED0);
      v65[9] = v14;
      id v68 = (id)v14;
      id v69 = v63;
      uint64_t v70 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v69, (uint64_t)&_mh_execute_header, v70, (uint64_t)"<%{public}@> Failed to find the local change to merge into the remote change for %{public}@.", 92, 2, (uint64_t)v65);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      swift_unknownObjectRelease();

      return;
    }
LABEL_49:
    swift_once();
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  id v18 = (id)v14;
  unint64_t v19 = sub_100956CAC((uint64_t)v18);
  if ((v20 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v21 = (uint64_t *)(*(void *)(v17 + 56) + 16 * v19);
  unint64_t v22 = v18;
  uint64_t v24 = *v21;
  uint64_t v23 = v21[1];
  swift_unknownObjectRetain();
  id v100 = v22;

  swift_bridgeObjectRelease();
  uint64_t v25 = sub_100D406CC(a2);
  if (v25)
  {
    unint64_t v27 = v26;
    uint64_t v99 = v25;
    uint64_t v28 = (void *)v16;
    uint64_t v29 = v23;
    id v30 = v28;
    uint64_t v31 = sub_100D2C69C();
    if (v31)
    {
      uint64_t v33 = v31;
      uint64_t v34 = v32;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 40);
      int64_t v97 = (void *)v33;
      if (v36(ObjectType, v34))
      {
        uint64_t v98 = v24;
        id v96 = v30;
        sub_100D2CC4C((uint64_t)v97, v34, a2);
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v37 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v38 = swift_initStackObject();
        uint64_t v39 = (void *)v38;
        *(_OWORD *)(v38 + 16) = xmmword_10117D8C0;
        BOOL v40 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope) == 0;
        if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
          uint64_t v41 = 0x5320646572616853;
        }
        else {
          uint64_t v41 = 0x2065746176697250;
        }
        if (v40) {
          unint64_t v42 = 0xED000065706F6353;
        }
        else {
          unint64_t v42 = 0xEC00000065706F63;
        }
        *(void *)(v38 + 56) = &type metadata for String;
        unint64_t v43 = sub_100528BE4();
        v39[4] = v41;
        v39[8] = v43;
        v39[5] = v42;
        uint64_t v103 = 0x203A65707954;
        unint64_t v104 = 0xE600000000000000;
        id v95 = v37;
        v44._countAndFlagsBits = CKRecord.recordType.getter();
        String.append(_:)(v44);
        swift_bridgeObjectRelease();
        v45._countAndFlagsBits = 0x203A444920;
        v45._object = (void *)0xE500000000000000;
        String.append(_:)(v45);
        id v46 = [a2 recordID];
        id v47 = [v46 recordName];

        uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v50 = v49;

        v51._countAndFlagsBits = v48;
        v51._object = v50;
        String.append(_:)(v51);
        swift_bridgeObjectRelease();
        uint64_t v52 = v103;
        unint64_t v53 = v104;
        v39[12] = &type metadata for String;
        v39[13] = v43;
        v39[9] = v52;
        v39[10] = v53;
        uint64_t v54 = static os_log_type_t.default.getter();
        id v55 = v95;
        sub_100BAC898((uint64_t)v95, (uint64_t)&_mh_execute_header, v54, (uint64_t)"<%{public}@> Resolved conflict for record %{public}@", 52, 2, (uint64_t)v39);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        swift_beginAccess();
        id v56 = v100;
        sub_1009EC460((uint64_t)a2, v56);
        swift_endAccess();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

LABEL_26:
        return;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v105 = v24;
    unint64_t v106 = v29 | 0x4000000000000000;
    uint64_t v107 = v99;
    long long v108 = v27;
    swift_beginAccess();
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    id v93 = v100;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v102 = *(void *)(a1 + 64);
    *(void *)(a1 + 64) = 0x8000000000000000;
    sub_100977310((uint64_t)&v105, v93, isUniquelyReferenced_nonNull_native);
    *(void *)(a1 + 64) = v102;

    swift_bridgeObjectRelease();
    swift_endAccess();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
  }
  else
  {
    uint64_t v98 = v24;
    uint64_t v99 = v23;
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v71 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v72 = swift_initStackObject();
    BOOL v73 = (void *)v72;
    *(_OWORD *)(v72 + 16) = xmmword_10117D8C0;
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v74 = 0x5320646572616853;
    }
    else {
      uint64_t v74 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v75 = 0xEC00000065706F63;
    }
    else {
      unint64_t v75 = 0xED000065706F6353;
    }
    *(void *)(v72 + 56) = &type metadata for String;
    unint64_t v76 = sub_100528BE4();
    v73[4] = v74;
    int64_t v97 = v73 + 4;
    v73[8] = v76;
    v73[5] = v75;
    uint64_t v105 = 0x203A65707954;
    unint64_t v106 = 0xE600000000000000;
    id v96 = v71;
    v77._countAndFlagsBits = CKRecord.recordType.getter();
    String.append(_:)(v77);
    swift_bridgeObjectRelease();
    v78._countAndFlagsBits = 0x203A444920;
    v78._object = (void *)0xE500000000000000;
    String.append(_:)(v78);
    id v79 = [a2 recordID];
    id v80 = [v79 recordName];

    uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v83 = v82;

    v84._countAndFlagsBits = v81;
    v84._object = v83;
    String.append(_:)(v84);
    swift_bridgeObjectRelease();
    uint64_t v85 = v105;
    unint64_t v86 = v106;
    v73[12] = &type metadata for String;
    v73[13] = v76;
    v73[9] = v85;
    v73[10] = v86;
    uint64_t v87 = static os_log_type_t.error.getter();
    id v88 = v96;
    sub_100BAC898((uint64_t)v96, (uint64_t)&_mh_execute_header, v87, (uint64_t)"<%{public}@> Failed to convert server's record to CRLSyncRemoteRecord %{public}@", 80, 2, (uint64_t)v73);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v105 = v98;
    unint64_t v106 = v99 | 0x8000000000000000;
    uint64_t v107 = (uint64_t)a2;
    long long v108 = xmmword_10118D2A0;
    swift_beginAccess();
    swift_unknownObjectRetain_n();
    id v89 = a2;
    id v90 = v100;
    id v91 = v89;
    char v92 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v101 = *(void *)(a1 + 64);
    *(void *)(a1 + 64) = 0x8000000000000000;
    sub_100977310((uint64_t)&v105, v90, v92);
    *(void *)(a1 + 64) = v101;

    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease_n();
}

void sub_1008D099C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t, __n128))(v4 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v3, v6);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v8, v3);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v11)
  {
    swift_beginAccess();
    uint64_t v12 = *(void *)(v11 + 48);
    uint64_t v13 = *(void *)(a1 + 16);
    uint64_t v14 = *(void **)(v13 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    id v15 = v14;
    char v16 = sub_1006E5068(v15, v12);

    swift_bridgeObjectRelease();
    if (v16 & 1) != 0 || (*(unsigned char *)(a1 + 56))
    {
      swift_release();
    }
    else
    {
      uint64_t v24 = *(void **)(v13 + 16);
      swift_beginAccess();
      sub_100CBAAE4(&v26, v24);
      swift_endAccess();
      swift_release();
    }
    return;
  }
  if (qword_10166FB88 != -1) {
    goto LABEL_16;
  }
LABEL_7:
  swift_beginAccess();
  uint64_t v17 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  uint64_t v19 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    uint64_t v20 = 0x5320646572616853;
  }
  else {
    uint64_t v20 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
    unint64_t v21 = 0xEC00000065706F63;
  }
  else {
    unint64_t v21 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v21;
  id v22 = v17;
  uint64_t v23 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v23, (uint64_t)"<%{public}@> Could not find active save task for handling zone-not-found error", 78, 2, v19);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_1008D0CB8()
{
  return sub_100CA99F4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

void sub_1008D0CD8(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, void *a5)
{
  unint64_t v7 = a2 >> 62;
  if (a2 >> 62 == 2)
  {
    swift_unknownObjectRelease();
    sub_10081EB44(a3, a4);
  }
  else if (v7 == 1)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else if (!v7)
  {
    swift_unknownObjectRelease();
    sub_100514260((uint64_t)a3, a4);
  }
}

void sub_1008D0DA8(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, void *a5)
{
  unint64_t v7 = a2 >> 62;
  if (a2 >> 62 == 2)
  {
    swift_unknownObjectRetain();
    sub_10081EB30(a3, a4);
  }
  else if (v7 == 1)
  {
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
  }
  else if (!v7)
  {
    swift_unknownObjectRetain();
    sub_1005FA2A0((uint64_t)a3, a4);
    id v8 = a5;
  }
}

uint64_t sub_1008D0E78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1008D0EDC()
{
  return sub_1008D0F68((uint64_t (*)(void, void, void, void, void))sub_1008C78D0);
}

uint64_t sub_1008D0EF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1008D0F50()
{
  return sub_1008D0F68((uint64_t (*)(void, void, void, void, void))sub_1008C6EC4);
}

uint64_t sub_1008D0F68(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1008D0F80()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1008D0FC0()
{
  sub_1008BA9B0(*(void **)(v0 + 24));
}

uint64_t sub_1008D0FE8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1008D0FF8()
{
  sub_1008BA9A4(*(void **)(v0 + 24));
}

uint64_t sub_1008D1020()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008D1030()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008D1040()
{
  sub_1006D21A4(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1008D1084()
{
  return sub_1008C5270(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1008D1094()
{
  swift_unknownObjectRelease();
  sub_1006D21A4(*(void **)(v0 + 32), *(void **)(v0 + 40), *(unsigned char *)(v0 + 48));

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1008D10E0()
{
  long long v6 = *(_OWORD *)(v0 + 32);
  char v2 = *(unsigned char *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_100528488;
  *(void *)(v4 + 280) = v3;
  *(unsigned char *)(v4 + 320) = v2;
  *(_OWORD *)(v4 + 264) = v6;
  return _swift_task_switch(sub_1008C53C0, 0, 0);
}

uint64_t sub_1008D11B0@<X0>(double **a1@<X8>)
{
  return sub_100604114(v1, a1);
}

uint64_t sub_1008D11CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1008D1234@<X0>(uint64_t a1@<X8>)
{
  return sub_1008C29A0(a1);
}

uint64_t sub_1008D1260(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1008D12C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1008D1310()
{
  sub_1008C65C0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1008D131C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008D132C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1008D1380()
{
  return sub_1008CB6D8();
}

uint64_t sub_1008D13A4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1008D13B4()
{
}

uint64_t sub_1008D13E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1008D13F0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101685C80);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)v45 - v14;
  uint64_t v16 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLZoneSyncResultScenarios();
  __chkstk_darwin(v20, v21);
  uint64_t v24 = (char *)v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v25)
  {
    uint64_t v46 = v22;
    id v47 = v11;
    uint64_t v48 = v7;
    *(unsigned char *)(v25 + 56) = 1;
    swift_beginAccess();
    id v26 = a1;
    swift_retain();
    sub_100CBAAE4(&v49, v26);
    swift_endAccess();

    swift_beginAccess();
    unint64_t v27 = (void *)sub_100D177FC(v26);
    swift_endAccess();

    uint64_t v28 = *(void *)(v25 + 64);
    if (v28)
    {
      v45[1] = v2;
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      uint64_t v29 = *(void **)(*(void *)(v28 + 16) + 16);
      swift_retain();
      id v30 = v29;
      char v31 = static NSObject.== infix(_:_:)();

      if (v31)
      {
        uint64_t v32 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v19, 1, 1, v32);
        uint64_t v33 = (uint64_t)&v15[*(int *)(v8 + 48)];
        sub_10051B3EC((uint64_t)v19, v33, &qword_101672EB0);
        *(_DWORD *)uint64_t v24 = 0x10000;
        v24[4] = 0;
        uint64_t v34 = (uint64_t)&v47[*(int *)(v8 + 48)];
        sub_10051B3EC(v33, v34, &qword_101672EB0);
        uint64_t v35 = &v24[*(int *)(v20 + 36)];
        *uint64_t v35 = 0;
        sub_10051B3EC(v34, (uint64_t)&v35[*(int *)(v8 + 48)], &qword_101672EB0);
        *(void *)&v24[*(int *)(v20 + 40)] = _swiftEmptyArrayStorage;
        uint64_t v36 = (uint64_t)v48;
        sub_1008D11CC((uint64_t)v24, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v36, 0, 1, v20);
        sub_1008C86E4((char *)v28, 0, v36);
        swift_release();
        sub_100522F00(v36, &qword_101674220);
        sub_1008D0E78((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      }
      else
      {
        swift_release();
      }
    }
    sub_1008BF5FC();
    swift_release();
  }
  else
  {
    uint64_t v37 = v2;
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v38 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v40 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v37 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v41 = 0x5320646572616853;
    }
    else {
      uint64_t v41 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v37 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v42 = 0xEC00000065706F63;
    }
    else {
      unint64_t v42 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v40 + 32) = v41;
    *(void *)(v40 + 40) = v42;
    id v43 = v38;
    uint64_t v44 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v44, (uint64_t)"<%{public}@> Could not find active save task for handling zone save failure", 75, 2, v40);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

void sub_1008D1958(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101674220);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101685C80);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)v45 - v14;
  uint64_t v16 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLZoneSyncResultScenarios();
  __chkstk_darwin(v20, v21);
  uint64_t v24 = (char *)v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLSyncController_saveTask);
  if (v25)
  {
    uint64_t v46 = v22;
    id v47 = v11;
    uint64_t v48 = v7;
    *(unsigned char *)(v25 + 56) = 1;
    swift_beginAccess();
    id v26 = a1;
    swift_retain();
    sub_100CBAAE4(&v49, v26);
    swift_endAccess();

    swift_beginAccess();
    unint64_t v27 = (void *)sub_100D177FC(v26);
    swift_endAccess();

    uint64_t v28 = *(void *)(v25 + 64);
    if (v28)
    {
      v45[1] = v2;
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      uint64_t v29 = *(void **)(*(void *)(v28 + 16) + 16);
      swift_retain();
      id v30 = v29;
      char v31 = static NSObject.== infix(_:_:)();

      if (v31)
      {
        uint64_t v32 = type metadata accessor for Date();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v19, 1, 1, v32);
        uint64_t v33 = (uint64_t)&v15[*(int *)(v8 + 48)];
        sub_10051B3EC((uint64_t)v19, v33, &qword_101672EB0);
        *(_DWORD *)uint64_t v24 = 0;
        v24[4] = 0;
        uint64_t v34 = (uint64_t)&v47[*(int *)(v8 + 48)];
        sub_10051B3EC(v33, v34, &qword_101672EB0);
        uint64_t v35 = &v24[*(int *)(v20 + 36)];
        *uint64_t v35 = 0;
        sub_10051B3EC(v34, (uint64_t)&v35[*(int *)(v8 + 48)], &qword_101672EB0);
        *(void *)&v24[*(int *)(v20 + 40)] = _swiftEmptyArrayStorage;
        uint64_t v36 = (uint64_t)v48;
        sub_1008D11CC((uint64_t)v24, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v36, 0, 1, v20);
        sub_1008C86E4((char *)v28, 0, v36);
        swift_release();
        sub_100522F00(v36, &qword_101674220);
        sub_1008D0E78((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      }
      else
      {
        swift_release();
      }
    }
    sub_1008BF5FC();
    swift_release();
  }
  else
  {
    uint64_t v37 = v2;
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v38 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    uint64_t v40 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    if (*(unsigned char *)(v37 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      uint64_t v41 = 0x5320646572616853;
    }
    else {
      uint64_t v41 = 0x2065746176697250;
    }
    if (*(unsigned char *)(v37 + OBJC_IVAR____TtC8Freeform17CRLSyncController_syncScope)) {
      unint64_t v42 = 0xEC00000065706F63;
    }
    else {
      unint64_t v42 = 0xED000065706F6353;
    }
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v40 + 32) = v41;
    *(void *)(v40 + 40) = v42;
    id v43 = v38;
    uint64_t v44 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v44, (uint64_t)"<%{public}@> Could not find active save task for handling zone save failure", 75, 2, v40);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_1008D1EBC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1008D1EFC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1008BF83C(a1, v4, v5, v6);
}

uint64_t sub_1008D1FB0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008D1FE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100D406CC(*(void **)(a1 + 8));
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1008D2014@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008BC744(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1008D201C()
{
  return sub_100CA8424(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

void sub_1008D203C()
{
  sub_100CAA824(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1008D2058()
{
  sub_100CAB040(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1008D2074()
{
  return sub_1008D26E0((void (*)(void))&_swift_unknownObjectRelease, 40);
}

void sub_1008D2090()
{
  sub_1008BB3B0(*(void *)(v0 + 16));
}

uint64_t sub_1008D209C()
{
  uint64_t ChangesOptions = type metadata accessor for CKSyncEngine.FetchChangesOptions();
  uint64_t v2 = *(void *)(ChangesOptions - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, ChangesOptions);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1008D2170()
{
  uint64_t v2 = *(void *)(type metadata accessor for CKSyncEngine.FetchChangesOptions() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100528D08;
  v5[43] = v3;
  v5[44] = v4;
  return _swift_task_switch(sub_1008BFF90, 0, 0);
}

uint64_t sub_1008D2258()
{
  return sub_1008D26E0((void (*)(void))&_swift_bridgeObjectRelease, 32);
}

void sub_1008D2274()
{
  sub_1008B966C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1008D227C(void *a1, uint64_t a2)
{
  return sub_1008B8CAC(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1008D2284()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_1008D22BC()
{
  sub_1008B7B14(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1008D22C8()
{
  sub_1008B7518(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1008D22D4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008D230C()
{
  swift_release();

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 32);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1008D235C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + 32;
  char v7 = *(unsigned char *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  uint64_t v9 = *(void *)(v1 + 96);
  char v10 = *(unsigned char *)(v1 + 88);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_100528488;
  return sub_1008B56C8(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t sub_1008D2450()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1008D2498()
{
  return sub_1008B7440(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1008D24A4()
{
  return sub_1008D2518((void (*)(void))&_swift_errorRelease, (void (*)(void))&_swift_unknownObjectRelease, 57);
}

uint64_t sub_1008D24D4()
{
  return sub_1008B6ACC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_1008D24E8()
{
  return sub_1008D2518((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_bridgeObjectRelease, 49);
}

uint64_t sub_1008D2518(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  a1(*(void *)(v3 + 32));
  a2(*(void *)(v3 + 40));

  return _swift_deallocObject(v3, a3, 7);
}

uint64_t sub_1008D258C()
{
  return sub_1008B6980(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_1008D259C()
{
  swift_unknownObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 32);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_1008D25EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + 32;
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  char v9 = *(unsigned char *)(v1 + 88);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *char v10 = v2;
  v10[1] = sub_100528D08;
  return sub_1008B3D28(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1008D26C4()
{
  return sub_1008D26E0((void (*)(void))&_swift_bridgeObjectRelease, 33);
}

uint64_t sub_1008D26E0(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 24));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_1008D273C()
{
  return sub_1008B4B1C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1008D2748()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_1008B329C(v2);
}

uint64_t sub_1008D27DC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_1008B35FC(v2);
}

void sub_1008D2870()
{
}

void sub_1008D2894()
{
}

uint64_t sub_1008D28B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1008D28E4()
{
  return sub_100EC9DF8();
}

uint64_t sub_1008D2908()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1008D2948()
{
  return sub_100ECA9B0(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1008D2978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1008D29E0(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1008D2A14(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return swift_retain();
  }
  return result;
}

void sub_1008D2AEC()
{
}

id sub_1008D2B10(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v9 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper());
  sub_100510D4C(a1, a2);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return sub_100B4DED8(a1, a2, a3, a4, v4);
}

id sub_1008D2BA4(uint64_t a1)
{
  uint64_t v3 = (char *)[v1 store];
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  uint64_t v5 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  uint64_t v6 = *(void **)&v3[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v6)
  {
    id v7 = *(id *)&v3[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    uint64_t v21 = (objc_class *)type metadata accessor for CRLAssetManager();
    uint64_t v8 = (char *)objc_allocWithZone(v21);
    swift_unknownObjectWeakInit();
    uint64_t v9 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = v3;
    uint64_t v22 = a1;
    uint64_t v12 = v8;
    uint64_t v13 = (_DWORD *)swift_slowAlloc();
    *uint64_t v13 = 0;
    *(void *)(v10 + 16) = v13;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v8[v9] = v10;
    *(void *)&v12[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v14 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v12[v14] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v12[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign();

    v23.receiver = v12;
    a1 = v22;
    v23.super_class = v21;
    [super init];

    uint64_t v16 = *(void **)&v3[v5];
    *(void *)&v3[v5] = v15;
    id v7 = v15;

    uint64_t v6 = 0;
  }
  uint64_t v17 = *(os_unfair_lock_s **)(v4 + 16);
  id v18 = v6;
  os_unfair_lock_unlock(v17);

  id v19 = sub_100AE64C8(a1, v1, (uint64_t)v7);
  return v19;
}

id sub_1008D2D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for URL();
  __n128 v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 16))(v11, a1, v9);
  uint64_t v13 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper());
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v14 = sub_100B516A8((uint64_t)v11, a2, a3, v3, v13);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1008D2EB0()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v45 = (uint64_t)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v4);
  uint64_t v43 = (uint64_t)&v40 - v5;
  uint64_t v6 = type metadata accessor for CRLProto_Data(0);
  unint64_t v42 = *(void **)(v6 - 8);
  uint64_t v7 = v42;
  __chkstk_darwin(v6, v8);
  uint64_t v44 = (long long *)((char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v40 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (long long *)((char *)&v40 - v16);
  uint64_t v18 = type metadata accessor for CRLProto_ChunkedRealTimeMessage(0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[8] = 0;
  *(void *)uint64_t v21 = 0;
  UnknownStorage.init()();
  uint64_t v22 = (uint64_t)&v21[*(int *)(v18 + 32)];
  objc_super v23 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7[7];
  v23(v22, 1, 1, v6);
  uint64_t v46 = v18;
  uint64_t v24 = (uint64_t)&v21[*(int *)(v18 + 36)];
  v23(v24, 1, 1, v6);
  long long v47 = xmmword_101180360;
  *uint64_t v17 = xmmword_101180360;
  UnknownStorage.init()();
  sub_1008A9D98(v22);
  sub_1005CC5B8((uint64_t)v17, v22);
  uint64_t v48 = v23;
  v23(v22, 0, 1, v6);
  uint64_t v25 = v42;
  uint64_t v26 = UUID.crl_data()();
  uint64_t v40 = v27;
  uint64_t v41 = v26;
  uint64_t v28 = v43;
  sub_1005CC4F0(v22, v43);
  unint64_t v42 = (void *)v25[6];
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v42)(v28, 1, v6) == 1)
  {
    *(_OWORD *)uint64_t v13 = v47;
    UnknownStorage.init()();
    sub_1008A9D98(v28);
  }
  else
  {
    sub_1005CC5B8(v28, (uint64_t)v13);
  }
  sub_100510084(*(void *)v13, *((void *)v13 + 1));
  uint64_t v29 = v40;
  *(void *)uint64_t v13 = v41;
  *((void *)v13 + 1) = v29;
  sub_1008A9D98(v22);
  sub_1005CC5B8((uint64_t)v13, v22);
  id v30 = v48;
  v48(v22, 0, 1, v6);
  uint64_t v31 = v49;
  int v32 = *(unsigned __int16 *)(v49 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex);
  *(_DWORD *)uint64_t v21 = *(unsigned __int16 *)(v49 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
  *((_DWORD *)v21 + 1) = v32;
  v21[8] = *(unsigned char *)(v31 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted);
  *uint64_t v17 = v47;
  UnknownStorage.init()();
  sub_1008A9D98(v24);
  sub_1005CC5B8((uint64_t)v17, v24);
  v30(v24, 0, 1, v6);
  uint64_t v33 = *(void *)(v31 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data);
  unint64_t v34 = *(void *)(v31 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data + 8);
  uint64_t v35 = v45;
  sub_1005CC4F0(v24, v45);
  unsigned int v36 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v42)(v35, 1, v6);
  uint64_t v37 = v44;
  if (v36 == 1)
  {
    *uint64_t v44 = v47;
    sub_100510D4C(v33, v34);
    UnknownStorage.init()();
    sub_1008A9D98(v35);
  }
  else
  {
    sub_1005CC5B8(v35, (uint64_t)v44);
    sub_100510D4C(v33, v34);
  }
  sub_100510084(*(void *)v37, *((void *)v37 + 1));
  *(void *)uint64_t v37 = v33;
  *((void *)v37 + 1) = v34;
  sub_1008A9D98(v24);
  sub_1005CC5B8((uint64_t)v37, v24);
  v48(v24, 0, 1, v6);
  sub_1008D5114(&qword_101685E98, (void (*)(uint64_t))type metadata accessor for CRLProto_ChunkedRealTimeMessage);
  uint64_t v38 = Message.serializedData(partial:)();
  sub_1008D515C((uint64_t)v21, type metadata accessor for CRLProto_ChunkedRealTimeMessage);
  return v38;
}

uint64_t sub_1008D33B4()
{
  uint64_t result = 0x44496E69616863;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7865646E69;
      break;
    case 2:
      uint64_t result = 0x65646E497473616CLL;
      break;
    case 3:
      uint64_t result = 0x6574707972636E65;
      break;
    case 4:
      uint64_t result = 1635017060;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008D3460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008D53C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008D3488(uint64_t a1)
{
  unint64_t v2 = sub_1008D3D98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008D34C4(uint64_t a1)
{
  unint64_t v2 = sub_1008D3D98();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008D3500()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_chainID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100510084(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data), *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_1008D35B4()
{
  return type metadata accessor for CRLChunkedRealTimeMessage();
}

uint64_t type metadata accessor for CRLChunkedRealTimeMessage()
{
  uint64_t result = qword_101685DC8;
  if (!qword_101685DC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008D3608()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1008D36BC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101685E88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_1008D3D98();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  type metadata accessor for UUID();
  sub_1008D5114(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data);
    v11[15] = 4;
    sub_10060D344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

void *sub_1008D3920(void *a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v19 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_101685E78);
  uint64_t v16 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1008D3D98();
  uint64_t v20 = v10;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v16;
    uint64_t v12 = v17;
    uint64_t v15 = v4;
    LOBYTE(v21) = 0;
    sub_1008D5114(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = v18;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))((uint64_t)v1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_chainID, v19, v5);
    LOBYTE(v21) = 1;
    *(_WORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v21) = 2;
    *(_WORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex) = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v21) = 3;
    *((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    char v22 = 4;
    sub_10060D184();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v13);
    *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data) = v21;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v1;
}

void *sub_1008D3D10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_1008D3920(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1008D3D68(void *a1)
{
  return sub_1008D36BC(a1);
}

uint64_t sub_1008D3D8C(uint64_t *a1, uint64_t *a2)
{
  return sub_1008D4740(*a1, *a2);
}

unint64_t sub_1008D3D98()
{
  unint64_t result = qword_101685E80;
  if (!qword_101685E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685E80);
  }
  return result;
}

double *sub_1008D3DEC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 1)
  {
LABEL_11:
    sub_1005057FC(&qword_101685E90);
    uint64_t v10 = (double *)swift_allocObject();
    *((_OWORD *)v10 + 1) = xmmword_10117E810;
    *((void *)v10 + 4) = a2;
    *((void *)v10 + 5) = a3;
    sub_100510D4C(a2, a3);
  }
  else
  {
    uint64_t v5 = 0;
    switch(a3 >> 62)
    {
      case 1uLL:
        LODWORD(v5) = HIDWORD(a2) - a2;
        if (__OFSUB__(HIDWORD(a2), a2)) {
          goto LABEL_37;
        }
        uint64_t v5 = (int)v5;
LABEL_7:
        float v8 = ceilf((float)v5 / (float)a1);
        if ((~LODWORD(v8) & 0x7F800000) == 0) {
          goto LABEL_33;
        }
        if (v8 <= -9.2234e18) {
          goto LABEL_34;
        }
        if (v8 >= 9.2234e18) {
          goto LABEL_35;
        }
        uint64_t v9 = (uint64_t)v8;
        if ((uint64_t)v8 == 1) {
          goto LABEL_11;
        }
        if (v9 < 0) {
          goto LABEL_36;
        }
        if (v9)
        {
          uint64_t v12 = 0;
          uint64_t v10 = _swiftEmptyArrayStorage;
          do
          {
            BOOL v13 = __OFSUB__(v5, a1);
            uint64_t v14 = v5 - a1;
            if (v5 >= a1) {
              uint64_t v5 = a1;
            }
            if (v13)
            {
              __break(1u);
LABEL_30:
              __break(1u);
LABEL_31:
              __break(1u);
LABEL_32:
              __break(1u);
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              __break(1u);
              JUMPOUT(0x1008D4038);
            }
            uint64_t v15 = v12 * a1;
            if ((unsigned __int128)(v12 * (__int128)a1) >> 64 != (v12 * a1) >> 63) {
              goto LABEL_30;
            }
            if (__OFADD__(v15, v5)) {
              goto LABEL_31;
            }
            if (v15 + v5 < v15) {
              goto LABEL_32;
            }
            uint64_t v16 = Data.subdata(in:)();
            unint64_t v18 = v17;
            sub_100510D4C(v16, v17);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = sub_100F63620(0, *((void *)v10 + 2) + 1, 1, v10);
            }
            unint64_t v20 = *((void *)v10 + 2);
            unint64_t v19 = *((void *)v10 + 3);
            if (v20 >= v19 >> 1) {
              uint64_t v10 = sub_100F63620((double *)(v19 > 1), v20 + 1, 1, v10);
            }
            ++v12;
            *((void *)v10 + 2) = v20 + 1;
            long long v21 = &v10[2 * v20];
            *((void *)v21 + 4) = v16;
            *((void *)v21 + 5) = v18;
            sub_100510084(v16, v18);
            uint64_t v5 = v14;
          }
          while (v9 != v12);
        }
        else
        {
          uint64_t v10 = _swiftEmptyArrayStorage;
        }
        break;
      case 2uLL:
        uint64_t v7 = *(void *)(a2 + 16);
        uint64_t v6 = *(void *)(a2 + 24);
        BOOL v13 = __OFSUB__(v6, v7);
        uint64_t v5 = v6 - v7;
        if (!v13) {
          goto LABEL_7;
        }
        goto LABEL_38;
      case 3uLL:
        goto LABEL_7;
      default:
        uint64_t v5 = BYTE6(a3);
        goto LABEL_7;
    }
  }
  return v10;
}

uint64_t sub_1008D4048@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_100510D4C(a2, a3);
      uint64_t v10 = (char *)__DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = __DataStorage._offset.getter();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = __DataStorage._length.getter();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1008D42ACLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_100510084(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      unint64_t v17 = (char *)__DataStorage._bytes.getter();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = __DataStorage._offset.getter();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = __DataStorage._length.getter();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1008D42BC@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, BOOL *a4@<X8>)
{
  if (__s1)
  {
    if (__s2)
    {
      uint64_t __s2 = memcmp(__s1, (const void *)__s2, a3 - __s2);
      *a4 = __s2 == 0;
      return __s2;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return __s2;
}

uint64_t sub_1008D4318(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1008D4048((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1008D43F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  __DataStorage._length.getter();
  sub_1008D4048(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1008D44A8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1008D4710);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_100510D4C(a3, a4);
                  sub_100510D4C(a1, a2);
                  char v17 = sub_1008D43F0((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_100510084(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_100510D4C(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1008D43F0(v21, v22, v20, a3, a4);
                  sub_100510084(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_100510D4C(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_100510D4C(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1008D4318(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_100510084(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1008D4740(uint64_t a1, uint64_t a2)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0
    || *(unsigned __int16 *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) != *(unsigned __int16 *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index)
    || *(unsigned __int16 *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex) != *(unsigned __int16 *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex)
    || *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted) != *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted))
  {
    return 0;
  }
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data);
  unint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data + 8);
  uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data);
  unint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data + 8);

  return sub_1008D44A8(v5, v6, v7, v8);
}

uint64_t sub_1008D47FC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v54 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v59 = (uint64_t)&v50 - v9;
  uint64_t v10 = type metadata accessor for CRLProto_Data(0);
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  __chkstk_darwin(v10, v11);
  id v55 = (uint64_t *)((char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (uint64_t *)((char *)&v50 - v15);
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v56 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  char v24 = (char *)&v50 - v23;
  uint64_t v25 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v27 = type metadata accessor for CRLProto_ChunkedRealTimeMessage(0);
  __chkstk_darwin(v27, v28);
  char v30 = (char *)&v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = 0;
  long long v60 = 0u;
  long long v61 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_1008D5114(&qword_101685E98, (void (*)(uint64_t))type metadata accessor for CRLProto_ChunkedRealTimeMessage);
  uint64_t v31 = v63;
  Message.init(serializedData:extensions:partial:options:)();
  if (v31)
  {
    sub_100510084(a1, a2);
    return a2;
  }
  uint64_t v63 = v24;
  uint64_t v52 = a1;
  unint64_t v53 = a2;
  uint64_t v50 = v17;
  Swift::String v51 = v20;
  uint64_t v32 = v59;
  sub_1005CC4F0((uint64_t)&v30[*(int *)(v27 + 32)], v59);
  uint64_t v33 = v58;
  unint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v34(v32, 1, v58) == 1)
  {
    *(_OWORD *)uint64_t v16 = xmmword_101180360;
    UnknownStorage.init()();
    sub_1008A9D98(v32);
  }
  else
  {
    sub_1005CC5B8(v32, (uint64_t)v16);
  }
  uint64_t v35 = *v16;
  unint64_t v36 = v16[1];
  sub_100510D4C(*v16, v36);
  sub_1008D515C((uint64_t)v16, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v35, v36);
  uint64_t v59 = 0;
  int v38 = *(_DWORD *)v30;
  if (*(_DWORD *)v30 < 0x10000u)
  {
    unsigned int v39 = *((_DWORD *)v30 + 1);
    uint64_t v40 = v55;
    if (v39 < 0x10000)
    {
      uint64_t v41 = v33;
      LODWORD(v57) = v30[8];
      uint64_t v42 = v54;
      sub_1005CC4F0((uint64_t)&v30[*(int *)(v27 + 36)], v54);
      __int16 v43 = v38;
      if (v34(v42, 1, v41) == 1)
      {
        *(_OWORD *)uint64_t v40 = xmmword_101180360;
        UnknownStorage.init()();
        sub_1008A9D98(v42);
      }
      else
      {
        sub_1005CC5B8(v42, (uint64_t)v40);
      }
      sub_100510084(v52, v53);
      sub_1008D515C((uint64_t)v30, type metadata accessor for CRLProto_ChunkedRealTimeMessage);
      uint64_t v44 = *v40;
      unint64_t v45 = v40[1];
      sub_100510D4C(*v40, v45);
      sub_1008D515C((uint64_t)v40, type metadata accessor for CRLProto_Data);
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
      uint64_t v48 = v50;
      long long v47 = v51;
      v46(v51, v63, v50);
      type metadata accessor for CRLChunkedRealTimeMessage();
      a2 = swift_allocObject();
      v46((char *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_chainID), v47, v48);
      *(_WORD *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) = v43;
      *(_WORD *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex) = v39;
      *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted) = v57;
      uint64_t v49 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data);
      *uint64_t v49 = v44;
      v49[1] = v45;
      return a2;
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1008D4DD8(uint64_t a1, unint64_t a2, char a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  unint64_t v34 = (char *)&v27 - v16;
  uint64_t v17 = sub_1008D3DEC(a4, a1, a2);
  unint64_t v18 = *((void *)v17 + 2);
  if (v18 >> 16)
  {
    swift_bridgeObjectRelease();
    sub_1007DC5DC();
    swift_allocError();
    *uint64_t v19 = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v29 = v4;
    unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
    sub_101044ABC(v18, 0);
    specialized Array._endMutation()();
    if (v18)
    {
      unint64_t v33 = v18;
      int v32 = v18 - 1;
      UUID.init()();
      uint64_t v21 = 0;
      uint64_t v27 = v17;
      uint64_t v28 = v10;
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      int v30 = a3 & 1;
      uint64_t v22 = (unint64_t *)(v17 + 5);
      do
      {
        v31(v13, v34, v9);
        uint64_t v23 = *(v22 - 1);
        unint64_t v24 = *v22;
        type metadata accessor for CRLChunkedRealTimeMessage();
        uint64_t v25 = swift_allocObject();
        (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v25 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_chainID, v13, v9);
        *(_WORD *)(v25 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) = v21;
        *(_WORD *)(v25 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex) = v32;
        *(unsigned char *)(v25 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted) = v30;
        uint64_t v26 = (uint64_t *)(v25 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data);
        *uint64_t v26 = v23;
        v26[1] = v24;
        sub_100510D4C(v23, v24);
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        ++v21;
        v22 += 2;
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_release();
      }
      while (v33 != v21);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v9);
      swift_bridgeObjectRelease();
      return v35;
    }
    else
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1008D5114(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008D515C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLChunkedRealTimeMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008D5288);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLChunkedRealTimeMessage.CodingKeys()
{
  return &type metadata for CRLChunkedRealTimeMessage.CodingKeys;
}

unint64_t sub_1008D52C4()
{
  unint64_t result = qword_101685EA0;
  if (!qword_101685EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685EA0);
  }
  return result;
}

unint64_t sub_1008D531C()
{
  unint64_t result = qword_101685EA8;
  if (!qword_101685EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685EA8);
  }
  return result;
}

unint64_t sub_1008D5374()
{
  unint64_t result = qword_101685EB0;
  if (!qword_101685EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685EB0);
  }
  return result;
}

uint64_t sub_1008D53C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496E69616863 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7865646E69 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65646E497473616CLL && a2 == 0xE900000000000078 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574707972636E65 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void sub_1008D55E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v6 = __chkstk_darwin(v4 - 8, v5).n128_u64[0];
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [*(id *)(v1 + 16) objectForKey:a1, v6];
  if (v9)
  {
    uint64_t v10 = (uint64_t)v9 + 64;
    swift_beginAccess();
    sub_100522E9C(v10, (uint64_t)&v22, &qword_101681D68);
    if (*((void *)&v23 + 1))
    {
      sub_1005498A4((uint64_t)&v22, (uint64_t)v21);
      sub_100522F00((uint64_t)&v22, &qword_101681D68);
      sub_10050F848(v21, v21[3]);
      dispatch thunk of Cancellable.cancel()();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v21);
    }
    else
    {
      sub_100522F00((uint64_t)&v22, &qword_101681D68);
    }
    uint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    swift_beginAccess();
    sub_1006063BC((uint64_t)&v22, v10, &qword_101681D68);
    swift_endAccess();
    [*(id *)(v1 + 16) removeObjectForKey:a1];
    dispatch thunk of __ServiceLocator.sceneService.getter();
    sub_10050F848(&v22, *((uint64_t *)&v23 + 1));
    dispatch thunk of __SceneService.remove(scene:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v22);
    if (![*(id *)(v1 + 16) count])
    {
      sub_1008D6D60();
      uint64_t v18 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
      type metadata accessor for MainActor();
      swift_retain();
      uint64_t v19 = static MainActor.shared.getter();
      uint64_t v20 = (void *)swift_allocObject();
      v20[2] = v19;
      v20[3] = &protocol witness table for MainActor;
      v20[4] = v2;
      sub_1006D9104((uint64_t)v8, (uint64_t)&unk_1016862F8, (uint64_t)v20);
      swift_release();
    }
    swift_release();
  }
  else
  {
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v11 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v13 = v11;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v14 = static String._fromSubstring(_:)();
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v14;
    *(void *)(inited + 40) = v16;
    uint64_t v17 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v17, (uint64_t)"(CoreRE) [%{public}@] Cannot remove unknown client.", 51, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_1008D5A04(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v6 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v8 = a1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  id v9 = v6;
  uint64_t v34 = a1;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v10 = v8;
  uint64_t v11 = static String._fromSubstring(_:)();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v14 = sub_100528BE4();
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v13;
  uint64_t v15 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v15, (uint64_t)"(CoreRE) [%{public}@] Adding new client.", 40, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  strcpy((char *)v39, "ClientScene-");
  BYTE5(v39[1]) = 0;
  HIWORD(v39[1]) = -5120;
  type metadata accessor for UUID();
  sub_1008DAF94(&qword_101677460, (void (*)(uint64_t))&type metadata accessor for UUID);
  v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  sub_1008D6980(v39[0], v39[1]);
  swift_bridgeObjectRelease();
  String.utf8CString.getter();
  swift_bridgeObjectRelease();
  RESceneCreate();
  swift_release();
  RESceneSetRequiresAnchoring();
  type metadata accessor for Scene();
  uint64_t v17 = static Scene.fromCore(_:)();
  RERelease();
  dispatch thunk of __ServiceLocator.sceneService.getter();
  sub_10050F848(v39, v39[3]);
  dispatch thunk of __SceneService.append(scene:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v39);
  _s11ClientSceneCMa();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v18 = sub_100B4D260(v34, v17, a2, a3);
  uint64_t v19 = *(void **)(v4 + 24);
  _s6CoreREO19SceneRenderingStateCMa(0);
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v20 = v40;
  uint64_t v21 = sub_1008D77B4(v19, v18);
  if (v20)
  {
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v22 = v21;
    if (!*(void *)(v4 + 96)) {
      sub_1008D6A78();
    }
    uint64_t v40 = v10;
    if ((dispatch thunk of __Engine.isRunning.getter() & 1) == 0) {
      dispatch thunk of __Engine.__start()();
    }
    [*(id *)(v4 + 16) setObject:v22 forKey:v18];
    type metadata accessor for SceneEvents.Update();
    uint64_t v38 = 0;
    memset(v37, 0, sizeof(v37));
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    *(void *)(v25 + 24) = v24;
    Scene.subscribe<A>(to:on:_:)();
    swift_release();
    sub_100522F00((uint64_t)v37, &qword_101686318);
    sub_10051B3EC((uint64_t)v39, (uint64_t)v37, &qword_101681D68);
    swift_beginAccess();
    sub_1006063BC((uint64_t)v37, v22 + 64, &qword_101681D68);
    swift_endAccess();
    uint64_t v26 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_10117E810;
    id v33 = v26;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v28 = static String._fromSubstring(_:)();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = v14;
    *(void *)(v27 + 32) = v28;
    *(void *)(v27 + 40) = v30;
    uint64_t v31 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v31, (uint64_t)"(CoreRE) [%{public}@] Added new client.", 39, 2, v27);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_release();
    swift_release();
  }
  return v18;
}

uint64_t sub_1008D6048()
{
  _s6CoreREO6EngineCMa();
  swift_allocObject();
  uint64_t result = sub_1008D6084();
  qword_10171ADE8 = result;
  return result;
}

uint64_t sub_1008D6084()
{
  uint64_t v1 = type metadata accessor for __EngineServiceMaskRef();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for __Engine.Configuration();
  uint64_t v21 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [self mapTableWithKeyOptions:517 valueOptions:0];
  uint64_t v23 = v0;
  *(_OWORD *)(v0 + 48) = 0u;
  uint64_t v10 = v0 + 48;
  *(void *)(v0 + 16) = v9;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(void *)(v0 + 96) = 0;
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v11 = (id)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"(CoreRE) Loading CoreRE.Engine.", 31, 2, (uint64_t)_swiftEmptyArrayStorage);

  __Engine.Configuration.init()();
  __Engine.Configuration.__createServices.getter();
  type metadata accessor for REEngineServiceMask(0);
  uint64_t v14 = v13;
  __EngineServiceMaskRef.__as<A>(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v5, v1);
  unsigned int v16 = v29 & 0xFFFFDE3F;
  if ((v29 & 0x21C0) != 0) {
    v29 &= 0xFFFFDE3F;
  }
  uint64_t v28 = v14;
  LODWORD(v27[0]) = v16;
  static __EngineServiceMaskRef.__fromCore(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v27);
  __Engine.Configuration.__createServices.setter();
  __Engine.Configuration.__updateServices.getter();
  __EngineServiceMaskRef.__as<A>(_:)();
  v15(v5, v1);
  unsigned int v29 = v27[0];
  if ((v27[0] & 0x21C0) != 0) {
    unsigned int v29 = v27[0] & 0xFFFFDE3F;
  }
  uint64_t v28 = v14;
  LODWORD(v27[0]) &= 0xFFFFDE3F;
  static __EngineServiceMaskRef.__fromCore(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v27);
  __Engine.Configuration.__updateServices.setter();
  type metadata accessor for __ServiceLocator();
  static __ServiceLocator.__createSharedIfNeeded(with:)();
  uint64_t v17 = static __ServiceLocator.shared.getter();
  uint64_t v18 = v23;
  *(void *)(v23 + 40) = v17;
  *(void *)(v18 + 32) = dispatch thunk of __ServiceLocator.engine.getter();
  dispatch thunk of __ServiceLocator.renderService.getter();
  sub_10050F848(v27, v28);
  *(void *)(v18 + 24) = dispatch thunk of __RenderService.device.getter();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v27);
  dispatch thunk of __ServiceLocator.eventService.getter();
  sub_10050F848(v26, v26[3]);
  type metadata accessor for EngineRenderEvent();
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  swift_allocObject();
  swift_weakInit();
  EventService.subscribe<A>(to:on:componentType:_:)();
  swift_release();
  sub_100522F00((uint64_t)v24, &qword_101686318);
  swift_beginAccess();
  sub_1006063BC((uint64_t)v27, v10, &qword_101681D68);
  swift_endAccess();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v26);
  dispatch thunk of __ServiceLocator.coreServiceLocator.getter();
  uint64_t result = REServiceLocatorGetECSService();
  if (result)
  {
    REECSManagerAddDefaultSystems();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008D6518()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1008D6570();
    return swift_release();
  }
  return result;
}

uint64_t sub_1008D6570()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of __ServiceLocator.coreServiceLocator.getter();
  uint64_t result = REServiceLocatorGetEngine();
  if (!result) {
    return result;
  }
  uint64_t result = REServiceLocatorGetRenderManager();
  if (!result || !*(void *)(v0 + 96)) {
    return result;
  }
  uint64_t v8 = *(void *)(v0 + 88);
  BOOL v9 = __CFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    goto LABEL_20;
  }
  uint64_t v11 = result;
  v32[0] = *(void *)(v0 + 96);
  uint64_t v33 = v3;
  uint64_t v34 = v2;
  *(void *)(v0 + 88) = v10;
  REEngineGetCurrentTime();
  v32[1] = v11;
  uint64_t RenderFrameSettings = RERenderManagerCreateRenderFrameSettings();
  RERenderFrameSettingsSetTotalTime();
  id v13 = [*(id *)(v0 + 16) objectEnumerator];
  if (!v13) {
    id v13 = [objc_allocWithZone((Class)NSEnumerator) init];
  }
  NSEnumerator.makeIterator()();

  NSFastEnumerationIterator.next()();
  if (!v54)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
    RERenderManagerCreateRenderFrameWorkload();
    RERenderFrameWorkloadConfigure();
    RERenderGraphEmitterAssetExecute();
    RERenderFrameWorkloadCommit();
    RERelease();
    return RERelease();
  }
  uint64_t v14 = (char *)&type metadata for Any + 8;
  while (1)
  {
    sub_100575CE8(&v53, v52);
    _s6CoreREO19SceneRenderingStateCMa(0);
    if (!swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
      return RERelease();
    }
    uint64_t v15 = v41[0];
    if (*(unsigned char *)(v41[0] + 256) == 1) {
      break;
    }
    swift_release();
LABEL_10:
    NSFastEnumerationIterator.next()();
    if (!v54) {
      goto LABEL_15;
    }
  }
  unsigned int v16 = v6;
  uint64_t v17 = v14;
  uint64_t v18 = v1;
  uint64_t v40 = *(void *)(v1 + 88);
  uint64_t v19 = *(void *)(v41[0] + 16);
  int v20 = *(_DWORD *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration);
  long long v21 = *(_OWORD *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 16);
  long long v38 = *(_OWORD *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 32);
  long long v39 = v21;
  long long v37 = *(_OWORD *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 48);
  uint64_t v22 = *(void *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 64);
  long long v23 = *(_OWORD *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription);
  long long v35 = *(_OWORD *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 16);
  long long v36 = v23;
  uint64_t v24 = *(void *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 32);
  char v25 = *(unsigned char *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 40);
  uint64_t v26 = RenderFrameSettings;
  uint64_t v27 = *(void *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v28 = sub_100B4B838();
  LODWORD(v41[0]) = v20;
  long long v42 = v39;
  long long v43 = v38;
  long long v44 = v37;
  uint64_t v45 = v22;
  long long v46 = v36;
  long long v47 = v35;
  uint64_t v48 = v24;
  char v49 = v25;
  uint64_t v50 = v27;
  Swift::Int v51 = v28;
  uint64_t RenderFrameSettings = v26;
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v41, v29);
  sub_10051B3EC(v15 + 112, (uint64_t)v52, (uint64_t *)&unk_101686320);
  sub_10051B3EC((uint64_t)v41, v15 + 112, (uint64_t *)&unk_101686320);
  sub_1008DAE88((uint64_t *)v52);
  uint64_t result = RERenderFrameSettingsAddGpuSignalEvent();
  uint64_t v30 = *(void *)(v15 + 264);
  BOOL v9 = __CFADD__(v30, 1);
  uint64_t v31 = v30 + 1;
  if (!v9)
  {
    *(void *)(v15 + 264) = v31;
    swift_release();
    uint64_t v1 = v18;
    uint64_t v14 = v17;
    uint64_t v6 = v16;
    goto LABEL_10;
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

void sub_1008D6918()
{
  id v0 = [self currentCapabilities];
  if (v0)
  {
    uint64_t v1 = v0;
    unsigned __int8 v2 = [v0 isMetalCapable];

    byte_10171ADF0 = v2 ^ 1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1008D6980(uint64_t a1, uint64_t a2)
{
  if (sub_1008D70F8(a1, a2, v2))
  {
    uint64_t v5 = 1;
    while (1)
    {
      swift_bridgeObjectRetain();
      v6._countAndFlagsBits = 45;
      v6._object = (void *)0xE100000000000000;
      String.append(_:)(v6);
      v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v7);
      swift_bridgeObjectRelease();
      if ((sub_1008D70F8(a1, a2, v2) & 1) == 0) {
        break;
      }
      swift_bridgeObjectRelease();
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1008D6A78()
{
  if (*(void *)(v0 + 96))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"loadRenderGraphEmitter()", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_Engine.swift", 126, 2, 259, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadRenderGraphEmitter()", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_Engine.swift", 126, 2, 259);
  }
  else
  {
    dispatch thunk of __ServiceLocator.assetService.getter();
    sub_10050F848(v3, v4);
    dispatch thunk of __REAssetService.__handle.getter();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v3);
    uint64_t AssetHandle = REAssetManagerCreateAssetHandle();
    if (AssetHandle)
    {
      uint64_t v2 = AssetHandle;
      REAssetHandleLoadNow();
      dispatch thunk of __ServiceLocator.renderService.getter();
      sub_10050F848(v3, v4);
      dispatch thunk of __RenderService.__coreRenderManager.getter();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v3);
      RERenderGraphEmitterAssetRegisterProviders();
      *(void *)(v0 + 96) = v2;
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1008D6BE8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      if ([*(id *)(v1 + 16) objectForKey:Strong])
      {
        sub_1008D7E5C();
        swift_release();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"doUpdateCallback(client:update:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_Engine.swift", 126, 2, 307, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"doUpdateCallback(client:update:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_Engine.swift", 126, 2, 307);
      }
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1008D6D60()
{
  if (*(void *)(v0 + 96))
  {
    dispatch thunk of __ServiceLocator.renderService.getter();
    sub_10050F848(v1, v1[3]);
    dispatch thunk of __RenderService.__coreRenderManager.getter();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
    RERenderGraphEmitterAssetUnregisterProviders();
    RERelease();
    *(void *)(v0 + 96) = 0;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"unloadRenderGraphEmitter()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_Engine.swift", 126, 2, 277, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"unloadRenderGraphEmitter()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_Engine.swift", 126, 2, 277);
  }
}

BOOL sub_1008D6E7C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v9 = sub_1005057FC(&qword_1016741F8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (double *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v20 = __chkstk_darwin(v18, v19).n128_u64[0];
  uint64_t v22 = (char *)&v28 - v21;
  id v23 = [*(id *)(v4 + 16) objectForKey:a1 v20];
  if (v23)
  {
    UUID.init()();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v22, v13);
    uint64_t v24 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
    char v25 = (char *)v12 + *(int *)(v24 + 20);
    uint64_t v26 = sub_1005057FC(&qword_101693770);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v25, a2, v26);
    *uint64_t v12 = a3;
    v12[1] = a4;
    *((unsigned char *)v12 + *(int *)(v24 + 24)) = 0;
    (*(void (**)(double *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 0, 1, v24);
    swift_beginAccess();
    sub_10057E9D0((uint64_t)v12, (uint64_t)v17);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    swift_release();
  }
  return v23 != 0;
}

uint64_t sub_1008D70F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v9 = __chkstk_darwin(v6, v8).n128_u64[0];
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [*(id *)(a3 + 16) keyEnumerator];
  NSEnumerator.makeIterator()();

  NSFastEnumerationIterator.next()();
  while (v21)
  {
    sub_100575CE8(&v20, &v19);
    _s11ClientSceneCMa();
    if (swift_dynamicCast())
    {
      if (dispatch thunk of Scene.name.getter() == a1 && v13 == a2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v16 = 1;
        goto LABEL_12;
      }
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_release();
      if (v15)
      {
        uint64_t v16 = 1;
        goto LABEL_12;
      }
    }
    NSFastEnumerationIterator.next()();
  }
  uint64_t v16 = 0;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  return v16;
}

uint64_t sub_1008D72E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_1008D73D4, v7, v6);
}

uint64_t sub_1008D73D4()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_101686300 + dword_101686300);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008D749C;
  return v3(0xA055690D9DB80000, 1, 0, 0, 1);
}

uint64_t sub_1008D749C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 40);
  uint64_t v4 = *(void *)(*v1 + 32);
  uint64_t v5 = *(void *)(*v1 + 24);
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v8 = sub_1008D76C4;
  }
  else {
    uint64_t v8 = sub_1008D7634;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_1008D7634()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  if (![*(id *)(v1 + 16) count]) {
    dispatch thunk of __Engine.__stop()();
  }
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1008D76C4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008D7730()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  sub_100522F00(v0 + 48, &qword_101681D68);

  return swift_deallocClassInstance();
}

uint64_t _s6CoreREO6EngineCMa()
{
  return self;
}

uint64_t sub_1008D77B4(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  *(_OWORD *)(v2 + 64) = 0u;
  uint64_t v7 = v2 + 64;
  uint64_t v8 = v2 + 112;
  *(void *)(v4 + 96) = 0;
  *(_OWORD *)(v4 + 80) = 0u;
  sub_1008DAF78(v35);
  sub_10051B3EC((uint64_t)v35, v8, (uint64_t *)&unk_101686320);
  *(unsigned char *)(v4 + 256) = 1;
  *(void *)(v4 + 264) = 0;
  uint64_t v9 = v4
     + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_lastTextureResizeTimestamp;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(unsigned char *)(v4
           + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_textureSizeIsStale) = 1;
  uint64_t v11 = v4
      + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  *(unsigned char *)(v4
           + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_viewDescriptorsValid) = 0;
  uint64_t v12 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_snapshotRequests;
  *(void *)(v4 + v12) = sub_100A3B3AC((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  long long v13 = *(_OWORD *)(a2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 48);
  void v33[2] = *(_OWORD *)(a2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 32);
  v33[3] = v13;
  uint64_t v34 = *(void *)(a2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 64);
  long long v14 = *(_OWORD *)(a2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 16);
  v33[0] = *(_OWORD *)(a2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration);
  v33[1] = v14;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v15 = sub_100844D0C((double *)v33);
  id v17 = [self texture2DDescriptorWithPixelFormat:81 width:v15 height:v16 mipmapped:0];
  [v17 setStorageMode:2];
  [v17 setUsage:23];
  uint64_t v18 = sub_100844FBC(a1, v17, 0, 0);
  if (v3)
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    sub_100522F00(v7, &qword_101681D68);
    sub_10051B3EC(v8, (uint64_t)v32, (uint64_t *)&unk_101686320);
    sub_1008DAE88(v32);
    sub_100522F00(v4+ OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_lastTextureResizeTimestamp, &qword_101672EB0);
    swift_bridgeObjectRelease();
    _s6CoreREO19SceneRenderingStateCMa(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v4 + 32) = v18;
    *(void *)(v4 + 40) = v19;
    *(void *)(v4 + 48) = v20;
    *(void *)(v4 + 56) = v21;
    *(unsigned char *)(v4
             + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_textureSizeIsStale) = 0;
    if (swift_weakLoadStrong())
    {
      uint64_t v22 = *(void **)(v4 + 32);
      uint64_t v23 = *(void *)(v4 + 40);
      uint64_t v25 = *(void *)(v4 + 48);
      uint64_t v24 = *(void **)(v4 + 56);
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v26 = v24;
      sub_1007753A8(v22, v23, v25, v26);
      swift_release();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    if (*(unsigned char *)(v4
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState
                  + 8) == 1)
    {
      if (*(void *)(v4
                     + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState))
        uint64_t v27 = 0x7065656C7361;
      else {
        uint64_t v27 = 0x656B617761;
      }
      if (*(void *)(v4
                     + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState))
        uint64_t v28 = 0xE600000000000000;
      else {
        uint64_t v28 = 0xE500000000000000;
      }
    }
    else
    {
      uint64_t v28 = 0x800000010125FAE0;
      uint64_t v27 = 0xD000000000000011;
    }
    uint64_t v29 = *(void *)(a2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32[0] = v29;
    sub_100975EDC(v27, v28, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_100B4BC60(v29);
    swift_release();
    swift_unknownObjectRelease();
  }
  return v4;
}

BOOL sub_1008D7BA0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration;
  if (*(float *)(a1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration) != *v1) {
    return 1;
  }
  uint64_t v5 = 0;
  long long v6 = *(_OWORD *)(v3 + 16);
  double v7 = *(double *)(v3 + 32);
  long long v8 = *((_OWORD *)v2 + 1);
  double v9 = *((double *)v2 + 4);
  float64x2_t v10 = *(float64x2_t *)(v3 + 56);
  float64x2_t v11 = *(float64x2_t *)(v3 + 40);
  float64x2_t v12 = *(float64x2_t *)(v2 + 14);
  BOOL v13 = 1;
  float64x2_t v14 = *(float64x2_t *)(v2 + 10);
  while (1)
  {
    while (!v13)
    {
      if (v5 == 3) {
        return 1;
      }
      BOOL v13 = 0;
      ++v5;
    }
    long long v24 = v6;
    float v15 = *(float *)((unint64_t)&v24 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
    long long v25 = v8;
    float v16 = *(float *)((unint64_t)&v25 & 0xFFFFFFFFFFFFFFF3 | (4 * (v5 & 3)));
    BOOL v13 = v15 == v16;
    if (v5 == 3) {
      break;
    }
    ++v5;
  }
  BOOL result = 1;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v11, v14), (int32x4_t)vceqq_f64(v10, v12))), 0xFuLL))) & 1) != 0&& v15 == v16&& v7 == v9)
  {
    uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 32);
    int v20 = *(unsigned __int8 *)(a1
                             + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription
                             + 40);
    uint64_t v21 = *((void *)v2 + 14);
    int v22 = *((unsigned __int8 *)v2 + 120);
    if (sub_100AD8E88(*(__n128 *)(a1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription), *(__n128 *)(a1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 16), *(__n128 *)(v2 + 20), *(__n128 *)(v2 + 24)))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v23 = sub_100ED65D8(v19, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0 && ((v20 ^ v22) & 1) == 0) {
        return sub_100B4B838() != *((void *)v2 + 17);
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1008D7D3C(uint64_t result, char a2)
{
  uint64_t v3 = v2
     + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState;
  uint64_t v4 = *(void *)(v2
                 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState);
  int v5 = *(unsigned __int8 *)(v2
                          + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState
                          + 8);
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  if (a2)
  {
    if (result)
    {
      if (!v4) {
        int v5 = 0;
      }
      if (v5 == 1) {
        return result;
      }
LABEL_10:
      uint64_t v6 = 0x7065656C7361;
      if (!result) {
        uint64_t v6 = 0x656B617761;
      }
      unint64_t v7 = 0xE600000000000000;
      if (!result) {
        unint64_t v7 = 0xE500000000000000;
      }
      if (a2) {
        uint64_t v8 = v6;
      }
      else {
        uint64_t v8 = 0xD000000000000011;
      }
      if (a2) {
        uint64_t v9 = v7;
      }
      else {
        uint64_t v9 = 0x800000010125FAE0;
      }
      uint64_t v10 = *(void *)(*(void *)(v2 + 16) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata);
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_100975EDC(v8, v9, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      return sub_100B4BC60(v10);
    }
    if (v4) {
      LOBYTE(v5) = 0;
    }
    if ((v5 & 1) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    if (v4 != result) {
      LOBYTE(v5) = 1;
    }
    if (v5) {
      goto LABEL_10;
    }
  }
  return result;
}

uint64_t sub_1008D7E5C()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for __EntityRef();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  unint64_t v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v8 - 8, v9);
  float64x2_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  float v15 = (char *)&v69 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v69 - v18;
  uint64_t v80 = type metadata accessor for Date();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80, v20);
  Swift::String v77 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  unint64_t v76 = (char *)&v69 - v24;
  if (sub_1008D86EC())
  {
    char v71 = v11;
    uint64_t v74 = v3;
    uint64_t v78 = v1;
    if (*(unsigned char *)(v0
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState
                  + 8) == 1
      && *(void *)(v0
                   + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState))
    {
      long long v25 = *(void **)(v0 + 32);
      id v26 = *(void **)(v2 + 56);
      swift_unknownObjectRetain();
      unint64_t v75 = v26;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if ((char *)[v25 setPurgeableState:1] - 3 < (char *)2) {
        [v25 setPurgeableState:2];
      }

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t v70 = v15;
    uint64_t v72 = v7;
    uint64_t v73 = v4;
    sub_1008D7D3C(0, 1);
    *(unsigned char *)(v2 + 256) = 1;
    uint64_t v27 = *(void **)(v2 + 32);
    uint64_t v28 = *(void **)(v2 + 56);
    unint64_t v75 = *(char **)(v2 + 16);
    uint64_t v29 = &v75[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration];
    long long v30 = *(_OWORD *)&v75[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 48];
    v83[2] = *(_OWORD *)&v75[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 32];
    v83[3] = v30;
    uint64_t v84 = *(void *)&v75[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 64];
    long long v31 = *(_OWORD *)&v75[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 16];
    v83[0] = *(_OWORD *)&v75[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration];
    v83[1] = v31;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v32 = v28;
    id v33 = (id)sub_100844D0C((double *)v83);
    id v35 = v34;
    if ([v27 width] == v33)
    {
      id v36 = [v27 height];

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if (v36 == v35) {
        goto LABEL_27;
      }
    }
    else
    {

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    if (*(void *)(v2 + 264) >= 0x79uLL)
    {
      uint64_t v40 = v2
          + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_lastTextureResizeTimestamp;
      swift_beginAccess();
      sub_100522E9C(v40, (uint64_t)v19, &qword_101672EB0);
      uint64_t v41 = v79;
      uint64_t v42 = v80;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v19, 1, v80) == 1)
      {
        sub_100522F00((uint64_t)v19, &qword_101672EB0);
      }
      else
      {
        long long v43 = v76;
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v76, v19, v42);
        long long v44 = v77;
        Date.init()();
        Date.timeIntervalSince(_:)();
        double v46 = v45;
        long long v47 = *(void (**)(char *, uint64_t))(v41 + 8);
        v47(v44, v42);
        v47(v43, v42);
        if (v46 < 1.0)
        {
          char v48 = 1;
LABEL_26:
          *(unsigned char *)(v2
                   + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_textureSizeIsStale) = v48;
LABEL_27:
          sub_100B4B2F4();
          return sub_1008D887C();
        }
      }
    }
    char v49 = *(void **)(v2 + 40);
    uint64_t v50 = *(void **)(v2 + 48);
    Swift::Int v51 = *(void **)(v2 + 24);
    long long v52 = *((_OWORD *)v29 + 3);
    v81[2] = *((_OWORD *)v29 + 2);
    v81[3] = v52;
    uint64_t v82 = *((void *)v29 + 8);
    long long v54 = *(_OWORD *)v29;
    long long v53 = *((_OWORD *)v29 + 1);
    id v55 = v49;
    v81[0] = v54;
    v81[1] = v53;
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain();
    uint64_t v56 = sub_100844D0C((double *)v81);
    id v58 = [self texture2DDescriptorWithPixelFormat:81 width:v56 height:v57 mipmapped:0];
    [v58 setStorageMode:2];
    [v58 setUsage:23];
    uint64_t v59 = v78;
    long long v60 = sub_100844FBC(v51, v58, v55, v50);
    if (v59)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      *(unsigned char *)(v2 + 256) = 0;
      swift_retain();
      uint64_t v64 = v72;
      dispatch thunk of Entity.__coreEntity.getter();
      swift_release();
      __EntityRef.__as<A>(_:)();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v64, v74);
      RECameraViewDescriptorsComponentGetComponentType();
      REEntityGetOrAddComponentByClass();
      RECameraViewDescriptorsComponentClearCameraViewDescriptors();
      *(unsigned char *)(v2
               + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_viewDescriptorsValid) = 0;
      return swift_willThrow();
    }
    uint64_t v65 = v63;
    uint64_t v78 = 0;
    sub_1008DB2A8((uint64_t)v60, v61, v62, v63);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v66 = (uint64_t)v70;
    Date.init()();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v66, 0, 1, v80);
    uint64_t v67 = (uint64_t)v71;
    sub_10051B3EC(v66, (uint64_t)v71, &qword_101672EB0);
    uint64_t v68 = v2
        + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_lastTextureResizeTimestamp;
    swift_beginAccess();
    sub_1006063BC(v67, v68, &qword_101672EB0);
    swift_endAccess();
    char v48 = 0;
    goto LABEL_26;
  }
  swift_retain();
  dispatch thunk of Entity.__coreEntity.getter();
  swift_release();
  __EntityRef.__as<A>(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  RECameraViewDescriptorsComponentGetComponentType();
  REEntityGetOrAddComponentByClass();
  RECameraViewDescriptorsComponentClearCameraViewDescriptors();
  *(unsigned char *)(v0
           + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_viewDescriptorsValid) = 0;
  *(unsigned char *)(v0 + 256) = 0;
  uint64_t v37 = *(void *)(v0
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState);
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_awakeState
                + 8) == 1)
  {
    char v38 = v37 != 0;
    uint64_t result = 1;
    return sub_1008D7D3C(result, v38);
  }
  uint64_t result = v37 + 1;
  if (!__OFADD__(v37, 1))
  {
    if (result > 59)
    {
      [*(id *)(v0 + 32) setPurgeableState:3];
      uint64_t result = 1;
      char v38 = 1;
    }
    else
    {
      char v38 = 0;
    }
    return sub_1008D7D3C(result, v38);
  }
  __break(1u);
  return result;
}

uint64_t sub_1008D86EC()
{
  uint64_t v1 = v0;
  id v2 = [*(id *)(v0 + 48) signaledValue];
  if (v2 != [*(id *)(v1 + 40) signaledValue]) {
    return 0;
  }
  sub_10051B3EC(v1 + 112, (uint64_t)v9, (uint64_t *)&unk_101686320);
  sub_10051B3EC((uint64_t)v9, (uint64_t)v10, (uint64_t *)&unk_101686320);
  if (sub_1008DB290((uint64_t)v10) == 1)
  {
    BOOL v3 = 1;
  }
  else
  {
    int v21 = v10[0];
    long long v22 = v11;
    long long v23 = v12;
    long long v24 = v13;
    uint64_t v25 = v14;
    long long v26 = v15;
    long long v27 = v16;
    uint64_t v28 = v17;
    char v29 = v18;
    uint64_t v30 = v19;
    uint64_t v31 = v20;
    uint64_t v5 = *(void *)(v1 + 16);
    sub_10051B3EC((uint64_t)v9, (uint64_t)&v8, (uint64_t *)&unk_101686320);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    BOOL v3 = sub_1008D7BA0(v5);
    sub_1008DAE88(v9);
  }
  char v6 = sub_100B4B690();
  uint64_t v7 = v1
     + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_snapshotRequests;
  swift_beginAccess();
  if (v3 || (v6 & 1) != 0 || *(uint64_t *)(*(void *)v7 + 16) > 0 || *(void *)(v1 + 264) <= 0x77uLL) {
    return 1;
  }
  else {
    return *(unsigned __int8 *)(v1
  }
                              + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_textureSizeIsStale);
}

uint64_t sub_1008D887C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  char v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for __EntityRef();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  long long v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v0 + 16);
  swift_retain();
  dispatch thunk of Entity.__coreEntity.getter();
  swift_release();
  __EntityRef.__as<A>(_:)();
  long long v16 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v42 = v11;
  uint64_t v17 = v11;
  char v18 = v16;
  v16(v15, v17);
  RECameraViewDescriptorsComponentGetComponentType();
  char v38 = (void *)REEntityGetOrAddComponentByClass();
  uint64_t v35 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_viewDescriptorsValid;
  char v19 = *(unsigned char *)(v0
                 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_viewDescriptorsValid);
  uint64_t v43 = v0;
  if ((v19 & 1) == 0)
  {
    swift_retain();
    dispatch thunk of Entity.__coreEntity.getter();
    swift_release();
    __EntityRef.__as<A>(_:)();
    v18(v15, v42);
    RECameraViewDescriptorsComponentGetComponentType();
    REEntityGetOrAddComponentByClass();
    RECameraViewDescriptorsComponentClearCameraViewDescriptors();
    *(unsigned char *)(v43 + v35) = 0;
    RECameraViewDescriptorsComponentAddViewDescriptor();
    RECameraViewDescriptorsComponentAddSpecifyCommandFromTexture();
    RECameraViewDescriptorsComponentCameraViewDescriptorSetViewport();
    RECameraViewDescriptorsComponentCameraViewDescriptorCopySettingStruct();
    RERenderGraphDataStructAddFloat4();
    RECameraViewDescriptorsComponentCameraViewDescriptorSetSettingStruct();
    RERelease();
    uint64_t v1 = v43;
  }
  uint64_t v20 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_snapshotRequests);
  swift_beginAccess();
  uint64_t v21 = *v20;
  uint64_t v22 = *(void *)(*v20 + 64);
  uint64_t v36 = *v20 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v37 = (unint64_t)(v23 + 63) >> 6;
  uint64_t v40 = v3 + 16;
  uint64_t v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v39 = v3 + 48;
  uint64_t v42 = v21;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v27 = 0;
  uint64_t v28 = v43;
  if (!v25) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v29 = __clz(__rbit64(v25));
  v25 &= v25 - 1;
  for (unint64_t i = v29 | (v27 << 6); ; unint64_t i = __clz(__rbit64(v32)) + (v27 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v10, *(void *)(v42 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1) {
      goto LABEL_29;
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
    id v34 = [*(id *)(v28 + 32) device];
    sub_1008D930C((uint64_t)v6, v38, v34);
    swift_unknownObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if (v25) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v31 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v31 >= v37) {
      goto LABEL_28;
    }
    unint64_t v32 = *(void *)(v36 + 8 * v31);
    ++v27;
    if (!v32)
    {
      int64_t v27 = v31 + 1;
      if (v31 + 1 >= v37) {
        goto LABEL_28;
      }
      unint64_t v32 = *(void *)(v36 + 8 * v27);
      if (!v32)
      {
        int64_t v27 = v31 + 2;
        if (v31 + 2 >= v37) {
          goto LABEL_28;
        }
        unint64_t v32 = *(void *)(v36 + 8 * v27);
        if (!v32)
        {
          int64_t v27 = v31 + 3;
          if (v31 + 3 >= v37) {
            goto LABEL_28;
          }
          unint64_t v32 = *(void *)(v36 + 8 * v27);
          if (!v32)
          {
            int64_t v27 = v31 + 4;
            if (v31 + 4 >= v37) {
              goto LABEL_28;
            }
            unint64_t v32 = *(void *)(v36 + 8 * v27);
            if (!v32) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v25 = (v32 - 1) & v32;
  }
  int64_t v33 = v31 + 5;
  if (v33 >= v37)
  {
LABEL_28:
    (*v41)(v10, 1, 1, v2);
LABEL_29:
    uint64_t result = swift_release();
    *(unsigned char *)(v43 + v35) = 1;
    return result;
  }
  unint64_t v32 = *(void *)(v36 + 8 * v33);
  if (v32)
  {
    int64_t v27 = v33;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v27 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v27 >= v37) {
      goto LABEL_28;
    }
    unint64_t v32 = *(void *)(v36 + 8 * v27);
    ++v33;
    if (v32) {
      goto LABEL_24;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t (*sub_1008D8E50())()
{
  return j__swift_endAccess;
}

uint64_t sub_1008D8EAC(uint64_t a1, void *a2, unint64_t a3, int a4)
{
  int v42 = a4;
  unint64_t v40 = a3;
  id v43 = a2;
  uint64_t v45 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v7);
  long long v47 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1005057FC(&qword_101693770);
  uint64_t v44 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016741F8);
  __chkstk_darwin(v12 - 8, v13);
  long long v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  char v19 = (char *)&v40 - v18;
  uint64_t v20 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v25 = (uint64_t *)(v4
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_snapshotRequests);
  swift_beginAccess();
  uint64_t v26 = *v25;
  uint64_t v27 = *(void *)(*v25 + 16);
  uint64_t v46 = a1;
  if (!v27)
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v30(v19, 1, 1, v20);
LABEL_7:
    sub_100522F00((uint64_t)v19, &qword_1016741F8);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_100955FC8(a1);
  if (v29)
  {
    sub_1008DB22C(*(void *)(v26 + 56) + *(void *)(v21 + 72) * v28, (uint64_t)v19);
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v30(v19, 0, 1, v20);
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v30(v19, 1, 1, v20);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1) {
    goto LABEL_7;
  }
  sub_1008DAFDC((uint64_t)v19, (uint64_t)v24);
  uint64_t v31 = v41;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v11, &v24[*(int *)(v20 + 20)], v41);
  char v32 = v42;
  if ((v42 & 0x100) != 0)
  {
    sub_100776FC8();
    uint64_t v34 = swift_allocError();
    uint64_t v35 = (uint64_t)v43;
    unint64_t v36 = v40;
    *(void *)uint64_t v37 = v43;
    *(void *)(v37 + 8) = v36;
    *(unsigned char *)(v37 + 16) = v32;
    uint64_t v48 = v34;
    sub_100767448(v35, v36, v32);
    CheckedContinuation.resume(throwing:)();
  }
  else
  {
    uint64_t v48 = (uint64_t)v43;
    id v33 = v43;
    CheckedContinuation.resume(returning:)();
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v31);
  sub_1008DB040((uint64_t)v24);
LABEL_12:
  uint64_t v38 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v47, v46, v45);
  v30(v15, 1, 1, v20);
  swift_beginAccess();
  sub_10057E9D0((uint64_t)v15, v38);
  return swift_endAccess();
}

uint64_t sub_1008D930C(uint64_t a1, void *a2, void *a3)
{
  id v54 = a3;
  id v52 = a2;
  uint64_t v5 = (void *)type metadata accessor for UUID();
  uint64_t v55 = *(v5 - 1);
  uint64_t v6 = *(void *)(v55 + 64);
  __chkstk_darwin(v5, v7);
  long long v53 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = sub_1005057FC(&qword_1016741F8);
  __chkstk_darwin(v12 - 8, v13);
  long long v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (double *)((char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = (uint64_t *)(v3
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_snapshotRequests);
  swift_beginAccess();
  uint64_t v22 = *v21;
  if (!*(void *)(v22 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    return sub_100522F00((uint64_t)v15, &qword_1016741F8);
  }
  swift_bridgeObjectRetain();
  uint64_t v51 = a1;
  unint64_t v23 = sub_100955FC8(a1);
  if (v24)
  {
    sub_1008DB22C(*(void *)(v22 + 56) + *(void *)(v17 + 72) * v23, (uint64_t)v15);
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v25, 1, v16);
  swift_bridgeObjectRelease();
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v26(v15, 1, v16) == 1) {
    return sub_100522F00((uint64_t)v15, &qword_1016741F8);
  }
  uint64_t result = sub_1008DAFDC((uint64_t)v15, (uint64_t)v20);
  if (*((unsigned char *)v20 + *(int *)(v16 + 24))) {
    return sub_1008DB040((uint64_t)v20);
  }
  double v28 = *v20;
  if ((~*(void *)v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v28 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  double v29 = v20[1];
  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v29 < 9.22337204e18)
  {
    id v30 = [self texture2DDescriptorWithPixelFormat:81 width:(uint64_t)v28 height:(uint64_t)v29 mipmapped:0];
    [v30 setUsage:23];
    [v30 setStorageMode:0];
    id v31 = [v54 newTextureWithDescriptor:v30];

    if (v31)
    {
      uint64_t RenderGraphDataStruct = RERenderGraphCreateRenderGraphDataStruct();
      RERenderGraphDataStructAddFloat4();
      uint64_t v46 = swift_allocObject();
      swift_weakInit();
      uint64_t v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v26;
      uint64_t v32 = v55;
      id v33 = *(void (**)(char *, uint64_t, id))(v55 + 16);
      uint64_t v47 = v55 + 16;
      uint64_t v48 = v33;
      v33(v11, v51, v5);
      unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      id v54 = v5;
      id v35 = v31;
      unint64_t v36 = (v6 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v46;
      (*(void (**)(unint64_t, char *, id))(v32 + 32))(v37 + v34, v11, v54);
      *(void *)(v37 + v36) = v35;
      aBlock[4] = sub_1008DB184;
      void aBlock[5] = v37;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_1015198C0;
      uint64_t v38 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      swift_release();
      id v52 = v35;
      id v39 = v54;
      RECameraViewDescriptorsComponentSnapshotNextFrameWithSettings();
      _Block_release(v38);
      unint64_t v40 = v53;
      v48(v53, v51, v39);
      uint64_t v41 = sub_1008D8E50();
      int v42 = sub_100F476FC(v56);
      uint64_t v44 = v43;
      if (!v50(v43, 1, v16)) {
        *(unsigned char *)(v44 + *(int *)(v16 + 24)) = 1;
      }
      ((void (*)(void *, void))v42)(v56, 0);
      (*(void (**)(char *, id))(v55 + 8))(v40, v39);
      ((void (*)(void *, void))v41)(aBlock, 0);
      RERelease();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1008D8EAC(v51, (void *)0xD000000000000022, 0x800000010125FB30, 261);
    }
    return sub_1008DB040((uint64_t)v20);
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1008D9954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1008D99C8(a2, a3);
    return swift_release();
  }
  return result;
}

void sub_1008D99C8(uint64_t a1, uint64_t a2)
{
  CGColorSpaceRef v4 = CGColorSpaceCreateWithName(kCGColorSpaceLinearSRGB);
  if (v4)
  {
    CGColorSpaceRef v5 = v4;
    sub_1005057FC(&qword_101686330);
    initeCGFloat d = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 32) = kCIContextWorkingColorSpace;
    type metadata accessor for CGColorSpace(0);
    *(void *)(inited + 40) = v5;
    *(void *)(inited + 64) = v7;
    *(void *)(inited + 72) = kCIContextOutputColorSpace;
    *(void *)(inited + 104) = v7;
    *(void *)(inited + 80) = v5;
    uint64_t v8 = v5;
    uint64_t v9 = kCIContextWorkingColorSpace;
    uint64_t v10 = kCIContextOutputColorSpace;
    sub_100A3BD30(inited);
    id v11 = objc_allocWithZone((Class)CIContext);
    type metadata accessor for CIContextOption(0);
    sub_1008DAF94(&qword_101671700, type metadata accessor for CIContextOption);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v13 = [v11 initWithOptions:isa];

    id v14 = [objc_allocWithZone((Class)CIImage) initWithMTLTexture:a2 options:0];
    if (v14)
    {
      long long v15 = v14;
      id v16 = [v14 imageByApplyingCGOrientation:4];

      if (v16)
      {
        [v16 extent];
        id v17 = [v13 createCGImage:v16 fromRect:kCIFormatBGRA8 colorSpace:v8];
        if (v17)
        {
          uint64_t v18 = v17;
          id v19 = v17;
          sub_1008D8EAC(a1, v18, 0, 0);

LABEL_8:
          return;
        }
      }
    }
    sub_1008D8EAC(a1, (void *)0xD000000000000024, 0x800000010125FB00, 261);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1008D9C18()
{
  if (*(unsigned char *)(v0 + 8) != 1) {
    return 0xD000000000000011;
  }
  if (*(void *)v0) {
    return 0x7065656C7361;
  }
  return 0x656B617761;
}

uint64_t sub_1008D9C74(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int8 *)(a2 + 8);
  unsigned int v3 = (*(void *)a1 == *(void *)a2) & ~v2;
  if (*(void *)a2) {
    unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v4 = 0;
  }
  if (*(void *)a2) {
    unsigned int v2 = 0;
  }
  if (*(void *)a1) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = v2;
  }
  if (*(unsigned char *)(a1 + 8) == 1) {
    return v5;
  }
  else {
    return v3;
  }
}

uint64_t sub_1008D9CB0()
{
  swift_release();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_100522F00(v0 + 64, &qword_101681D68);
  sub_10051B3EC(v0 + 112, (uint64_t)v2, (uint64_t *)&unk_101686320);
  sub_1008DAE88(v2);
  sub_100522F00(v0+ OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_lastTextureResizeTimestamp, &qword_101672EB0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1008D9D68()
{
  sub_1008D9CB0();

  return swift_deallocClassInstance();
}

uint64_t sub_1008D9DBC()
{
  return _s6CoreREO19SceneRenderingStateCMa(0);
}

uint64_t _s6CoreREO19SceneRenderingStateCMa(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101685FE0);
}

void sub_1008D9DE4()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void *sub_1008D9EDC(_OWORD *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1005057FC(&qword_101693770);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_1008D9FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1005057FC(&qword_101693770);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_1008DA034(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005057FC(&qword_101693770);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1008DA0D0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005057FC(&qword_101693770);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_1008DA174(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005057FC(&qword_101693770);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_1008DA210(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005057FC(&qword_101693770);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1008DA2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008DA2C0);
}

uint64_t sub_1008DA2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101693770);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1008DA398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008DA3AC);
}

uint64_t sub_1008DA3AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_101693770);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101686298);
}

void sub_1008DA490()
{
  sub_1008DA530();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1008DA530()
{
  if (!qword_1016862A8)
  {
    type metadata accessor for CGImage(255);
    sub_100522D34(&qword_101672BD0);
    unint64_t v0 = type metadata accessor for CheckedContinuation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1016862A8);
    }
  }
}

ValueMetadata *_s6CoreREO19SceneRenderingStateC10AwakeStateOMa()
{
  return &_s6CoreREO19SceneRenderingStateC10AwakeStateON;
}

uint64_t _s6CoreREO19SceneRenderingStateC12FrameReceiptVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s6CoreREO19SceneRenderingStateC12FrameReceiptVwcp(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v6 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6CoreREO19SceneRenderingStateC12FrameReceiptVwca(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

__n128 _s6CoreREO19SceneRenderingStateC12FrameReceiptVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s6CoreREO19SceneRenderingStateC12FrameReceiptVwta(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t _s6CoreREO19SceneRenderingStateC12FrameReceiptVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6CoreREO19SceneRenderingStateC12FrameReceiptVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 112) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s6CoreREO19SceneRenderingStateC12FrameReceiptVMa()
{
  return &_s6CoreREO19SceneRenderingStateC12FrameReceiptVN;
}

ValueMetadata *_s6CoreREOMa()
{
  return &_s6CoreREON;
}

uint64_t sub_1008DA888()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1008DA8C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100528488;
  return sub_1008D72E0(a1, v4, v5, v6);
}

uint64_t sub_1008DA97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = type metadata accessor for ContinuousClock.Instant();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return _swift_task_switch(sub_1008DAA80, 0, 0);
}

uint64_t sub_1008DAA80()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = type metadata accessor for ContinuousClock();
  uint64_t v5 = sub_1008DAF94(&qword_101686308, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_1008DAF94(&qword_101686310, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  long long v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  void *v7 = v0;
  v7[1] = sub_1008DAC20;
  uint64_t v8 = v0[11];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v4, v5);
}

uint64_t sub_1008DAC20()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return _swift_task_switch(sub_1008DADDC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1008DADDC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008DAE48()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008DAE80()
{
  return sub_1008D6518();
}

uint64_t *sub_1008DAE88(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1008DAEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t result = a15;
  if (a15)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1008DAF30()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008DAF70()
{
  return sub_1008D6BE8();
}

double sub_1008DAF78(_OWORD *a1)
{
  double result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1008DAF94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008DAFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008DB040(uint64_t a1)
{
  uint64_t v2 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1008DB09C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1008DB184()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1008D9954(v3, v0 + v2, v4);
}

uint64_t sub_1008DB214(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1008DB224()
{
  return swift_release();
}

uint64_t sub_1008DB22C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008DB290(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 112);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1008DB2A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  long long v7 = (void *)v5[7];
  v5[4] = a1;
  v5[5] = a2;
  v5[6] = a3;
  v5[7] = a4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v8 = a4;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = (void *)v5[4];
    uint64_t v11 = v5[5];
    uint64_t v12 = v5[6];
    id v13 = (void *)v5[7];
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v14 = v13;
    sub_1007753A8(v10, v11, v12, v14);
    swift_release();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
  }
  *((unsigned char *)v5
  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreREP33_23F24EF2C3AE8F7E8DC9481174D548F219SceneRenderingState_viewDescriptorsValvoid (*v48)(char *, uint64_t, id) = 0;
  return result;
}

void sub_1008DB4B8()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v2 - 8, v3);
  v80.receiver = v0;
  v80.super_class = (Class)type metadata accessor for CRLiOSCompactScenesNavigatorViewController();
  [super viewDidLoad];
  uint64_t v4 = OBJC_IVAR____TtC8Freeform42CRLiOSCompactScenesNavigatorViewController_hostingController;
  id v5 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform42CRLiOSCompactScenesNavigatorViewController_hostingController] view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v6 = v5;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v7 = *(id *)&v0[v4];
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();

  id v8 = [v0 view];
  if (!v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = v8;
  uint64_t v10 = self;
  id v11 = [v10 systemBackgroundColor];
  [v9 setBackgroundColor:v11];

  id v12 = [v1 view];
  if (!v12)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v13 = v12;
  id v14 = [v12 layer];

  [v14 setCornerRadius:22.0];
  id v15 = [v1 view];
  if (!v15)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v16 = v15;
  id v17 = [v15 layer];

  [v17 setCornerCurve:kCACornerCurveContinuous];
  id v18 = [v1 view];
  if (!v18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v19 = v18;
  id v20 = [v18 layer];

  [v20 setBorderWidth:0.5];
  id v21 = [v1 view];
  if (!v21)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v22 = v21;
  id v23 = [v21 layer];

  id v24 = [v10 blackColor];
  id v25 = [v24 colorWithAlphaComponent:0.08];

  id v26 = [v25 CGColor];
  [v23 setBorderColor:v26];

  id v27 = [v1 view];
  if (!v27)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  double v28 = v27;
  id v29 = [v27 layer];

  [v29 crl_applyDefaultCanvasOverlayUIShadowSettings];
  [v1 addChildViewController:*(void *)&v1[v4]];
  [*(id *)&v1[v4] didMoveToParentViewController:v1];
  id v30 = [v1 view];
  if (!v30)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v31 = v30;
  id v32 = [*(id *)&v1[v4] view];
  if (!v32)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v33 = v32;
  [v31 addSubview:v32];

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1011807A0;
  id v35 = [*(id *)&v1[v4] view];
  if (!v35)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v36 = v35;
  id v37 = [v35 widthAnchor];

  id v38 = [v37 constraintEqualToConstant:156.0];
  *(void *)(v34 + 32) = v38;
  id v39 = [v1 view];
  if (!v39)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v40 = v39;
  id v41 = [v39 leadingAnchor];

  id v42 = [*(id *)&v1[v4] view];
  if (!v42)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v43 = v42;
  id v44 = [v42 safeAreaLayoutGuide];

  id v45 = [v44 leadingAnchor];
  id v46 = [v41 constraintEqualToAnchor:v45 constant:-6.0];

  *(void *)(v34 + 40) = v46;
  id v47 = [v1 view];
  if (!v47)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v48 = v47;
  id v49 = [v47 trailingAnchor];

  id v50 = [*(id *)&v1[v4] view];
  if (!v50)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v51 = v50;
  id v52 = [v50 safeAreaLayoutGuide];

  id v53 = [v52 trailingAnchor];
  id v54 = [v49 constraintEqualToAnchor:v53 constant:6.0];

  *(void *)(v34 + 48) = v54;
  id v55 = [v1 view];
  if (!v55)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v56 = v55;
  id v57 = [v55 topAnchor];

  id v58 = [*(id *)&v1[v4] view];
  if (!v58)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v59 = v58;
  id v60 = [v58 safeAreaLayoutGuide];

  id v61 = [v60 topAnchor];
  id v62 = [v57 constraintEqualToAnchor:v61 constant:-8.0];

  *(void *)(v34 + 56) = v62;
  id v63 = [v1 view];
  if (!v63)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v64 = v63;
  id v65 = [v63 bottomAnchor];

  id v66 = [*(id *)&v1[v4] view];
  if (!v66)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v67 = v66;
  uint64_t v68 = self;
  id v69 = [v67 safeAreaLayoutGuide];

  id v70 = [v69 bottomAnchor];
  id v71 = [v65 constraintEqualToAnchor:v70 constant:8.0];

  *(void *)(v34 + 64) = v71;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v68 activateConstraints:isa];

  id v73 = [v1 view];
  if (v73)
  {
    uint64_t v74 = v73;
    [v73 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
    uint64_t v76 = v75;
    uint64_t v78 = v77;

    uint64_t v79 = &v1[OBJC_IVAR____TtC8Freeform42CRLiOSCompactScenesNavigatorViewController_contentViewSize];
    *(void *)uint64_t v79 = v76;
    *((void *)v79 + 1) = v78;
    return;
  }
LABEL_39:
  __break(1u);
}

void sub_1008DBE08()
{
  id v1 = [v0 parentViewController];
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  id v34 = [v1 view];

  if (!v34) {
    return;
  }
  [v34 frame];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  if (!objc_msgSend(self, "crl_phoneUI")
    || !objc_msgSend(self, "crl_deviceIsLandscape"))
  {
    v38.origin.x = v4;
    v38.origin.y = v6;
    v38.size.double width = v8;
    v38.size.double height = v10;
    double Height = CGRectGetHeight(v38);
    id v20 = (double *)&v0[OBJC_IVAR____TtC8Freeform42CRLiOSCompactScenesNavigatorViewController_contentViewSize];
    double v21 = *(double *)&v0[OBJC_IVAR____TtC8Freeform42CRLiOSCompactScenesNavigatorViewController_contentViewSize + 8];
    v39.origin.x = v4;
    v39.origin.y = v6;
    v39.size.double width = v8;
    v39.size.double height = v10;
    double Width = CGRectGetWidth(v39);
    double v23 = *v20;
    double v24 = v20[1];
    id v25 = [v0 view];
    if (v25)
    {
      id v26 = v25;
      [v25 setFrame:(Width - v23) * 0.5, Height - v21 + -30.0, v23, v24];

      id v27 = [v0 view];
      if (v27)
      {
        id v18 = v27;
        [v34 center];
        double v29 = v28;
        id v30 = [v0 view];
        if (v30)
        {
          id v31 = v30;
          [v30 center];
          double v33 = v32;

          [v18 setCenter:v29, v33];
          goto LABEL_12;
        }
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v36.origin.x = v4;
  v36.origin.y = v6;
  v36.size.double width = v8;
  v36.size.double height = v10;
  double v11 = CGRectGetHeight(v36);
  id v12 = (double *)&v0[OBJC_IVAR____TtC8Freeform42CRLiOSCompactScenesNavigatorViewController_contentViewSize];
  double v13 = *(double *)&v0[OBJC_IVAR____TtC8Freeform42CRLiOSCompactScenesNavigatorViewController_contentViewSize + 8];
  v37.origin.x = v4;
  v37.origin.y = v6;
  v37.size.double width = v8;
  v37.size.double height = v10;
  double v14 = CGRectGetWidth(v37);
  double v15 = *v12;
  double v16 = v12[1];
  id v17 = [v0 view];
  if (!v17)
  {
LABEL_18:
    __break(1u);
    return;
  }
  id v18 = v17;
  [v17 setFrame:v14 - v15 + -30.0, v11 - v13 + -30.0, v15, v16];
LABEL_12:
}

id sub_1008DC170()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSCompactScenesNavigatorViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSCompactScenesNavigatorViewController()
{
  return self;
}

void sub_1008DC214(void *a1)
{
  objc_super v2 = v1;
  id v3 = [a1 userInfo];
  if (v3)
  {
    CGFloat v4 = v3;
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    double v14 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v5 + 16) && (unint64_t v6 = sub_10095647C((uint64_t)v15), (v7 & 1) != 0))
    {
      sub_100522D7C(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v16);
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10050BFE0((uint64_t)v15);
    if (*((void *)&v17 + 1))
    {
      sub_10050BF48(0, (unint64_t *)&qword_1016792E8);
      if (swift_dynamicCast())
      {
        uint64_t v8 = OBJC_IVAR____TtC8Freeform42CRLiOSCompactScenesNavigatorViewController_editorController;
        id v9 = [*(id *)&v2[OBJC_IVAR____TtC8Freeform42CRLiOSCompactScenesNavigatorViewController_editorController] selectionPath];
        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        id v10 = [*(id *)&v2[v8] selectionPath];
        char v11 = static NSObject.== infix(_:_:)();

        if ((v11 & 1) == 0)
        {
LABEL_11:

          return;
        }
        id v12 = [v2 view];
        if (v12)
        {
          double v13 = v12;
          [v12 removeFromSuperview];

          [v2 removeFromParentViewController];
          goto LABEL_11;
        }
        __break(1u);
      }
    }
    else
    {
      sub_10052E2B0((uint64_t)&v16);
    }
  }
}

uint64_t sub_1008DC470()
{
  qword_10171ADF8 = 97;
  unk_10171AE00 = 0xE100000000000000;
  qword_10171AE08 = swift_getKeyPath();
  unk_10171AE10 = 98;
  qword_10171AE18 = 0xE100000000000000;
  qword_10171AE20 = swift_getKeyPath();
  qword_10171AE28 = 99;
  qword_10171AE30 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171AE38 = result;
  return result;
}

uint64_t sub_1008DC4E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v32 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = sub_1005057FC(&qword_101680140);
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v5);
  id v27 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v24, v7);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  double v13 = (char *)&v23 - v12;
  double v14 = (int *)type metadata accessor for CRLConnectionLineCRDTData(0);
  uint64_t v25 = a4 + v14[5];
  uint64_t v15 = type metadata accessor for UUID();
  long long v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v13, 1, 1, v15);
  sub_100522E9C((uint64_t)v13, (uint64_t)v9, (uint64_t *)&unk_101674520);
  sub_1008DF454();
  CRRegister.init(wrappedValue:)();
  sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101674520);
  uint64_t v26 = a4 + v14[6];
  v16(v13, 1, 1, v15);
  sub_100522E9C((uint64_t)v13, (uint64_t)v9, (uint64_t *)&unk_101674520);
  CRRegister.init(wrappedValue:)();
  sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101674520);
  *(void *)(a4 + v14[7]) = _swiftEmptyDictionarySingleton;
  sub_1008E020C(v32, a4, type metadata accessor for CRLShapeItemCRDTData);
  uint64_t v17 = v29;
  sub_100522E9C(v29, (uint64_t)v13, (uint64_t *)&unk_101674520);
  id v18 = v27;
  CRRegister.init(_:)();
  id v19 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 40);
  uint64_t v20 = v30;
  v19(v25, v18, v30);
  uint64_t v21 = v31;
  sub_100522E9C(v31, (uint64_t)v13, (uint64_t *)&unk_101674520);
  CRRegister.init(_:)();
  sub_100522F00(v21, (uint64_t *)&unk_101674520);
  sub_100522F00(v17, (uint64_t *)&unk_101674520);
  sub_1008E0274(v32, type metadata accessor for CRLShapeItemCRDTData);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(v26, v18, v20);
}

uint64_t sub_1008DC824@<X0>(uint64_t a1@<X8>)
{
  return sub_1008E020C(v1, a1, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
}

void (*sub_1008DC858(uint64_t *a1))(uint64_t *a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0) - 8) + 64);
  a1[1] = (uint64_t)malloc(v3);
  CGFloat v4 = malloc(v3);
  a1[2] = (uint64_t)v4;
  sub_1008E020C(v1, (uint64_t)v4, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  return sub_1008DC8F8;
}

void sub_1008DC8F8(uint64_t *a1, char a2)
{
  objc_super v2 = (void *)a1[1];
  size_t v3 = (void *)a1[2];
  uint64_t v4 = *a1;
  if (a2)
  {
    sub_1008E020C(a1[2], (uint64_t)v2, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    sub_1005DF630((uint64_t)v2, v4);
    sub_1008E0274((uint64_t)v3, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  }
  else
  {
    sub_1005DF630(a1[2], v4);
  }
  free(v3);

  free(v2);
}

uint64_t sub_1008DC99C(uint64_t a1)
{
  uint64_t v2 = sub_1008DF550((unint64_t *)&unk_10168A0A0, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_1008DCA08()
{
  sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.actionUndoingDifference(from:)();
}

uint64_t sub_1008DCA8C()
{
  sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.apply(_:)();
}

uint64_t sub_1008DCB08()
{
  sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.hasDelta(from:)();
}

uint64_t sub_1008DCB84()
{
  sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.delta(_:from:)();
}

uint64_t sub_1008DCC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_1008DCC94()
{
  sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.merge(delta:)();
}

uint64_t sub_1008DCD14@<X0>(void *a1@<X8>)
{
  if (qword_10166F440 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_10171AE00;
  uint64_t v4 = qword_10171AE08;
  uint64_t v3 = unk_10171AE10;
  uint64_t v5 = qword_10171AE18;
  uint64_t v6 = qword_10171AE20;
  uint64_t v7 = qword_10171AE28;
  uint64_t v8 = qword_10171AE30;
  uint64_t v9 = qword_10171AE38;
  *a1 = qword_10171ADF8;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_1008DCDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008DCE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008DCEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_1008DCF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_1008DCFF4()
{
  sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.needToFinalizeTimestamps()();
}

uint64_t sub_1008DD060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_1008DD0DC()
{
  sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.merge(_:)();
}

uint64_t sub_1008DD158()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_1008DD1D8()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_1008DD268(uint64_t a1)
{
  uint64_t v2 = sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return static CRStruct_3.fieldKeys.getter(a1, v2);
}

uint64_t sub_1008DD2D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v18[-v8];
  uint64_t v10 = type metadata accessor for CRLShapeItemCRDTData(0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10, v12);
  double v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memset(v18, 0, 112);
  sub_10051A3F4((uint64_t)v22);
  sub_10051B3EC((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_101685110);
  memset(v20, 0, sizeof(v20));
  uint64_t v21 = 0;
  sub_100E21C10((uint64_t)v18, (uint64_t)v19, (uint64_t)v20, (uint64_t)v20, (uint64_t)v14, 0.0);
  *(void *)&v14[*(int *)(v11 + 28)] = _swiftEmptyDictionarySingleton;
  uint64_t v15 = type metadata accessor for UUID();
  long long v16 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v9, 1, 1, v15);
  v16(v5, 1, 1, v15);
  return sub_1008DC4E0((uint64_t)v14, (uint64_t)v9, (uint64_t)v5, a1);
}

uint64_t sub_1008DD4B0()
{
  return CRStruct_3.init(from:)();
}

uint64_t sub_1008DD530()
{
  return CRStruct_3.encode(to:)();
}

uint64_t sub_1008DD5A8(uint64_t a1)
{
  uint64_t v2 = sub_1008DF550(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);

  return CRStruct_3.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1008DD624()
{
  return 2;
}

uint64_t sub_1008DD630()
{
  uint64_t v1 = type metadata accessor for CRLShapeItemParentAffinity(0);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1, v3);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_100682B70();
  uint64_t v15 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  sub_100522E9C(v15, (uint64_t)v13, &qword_1016892B0);
  sub_1005057FC(&qword_101686808);
  CRRegister.wrappedValue.getter();
  sub_1008E020C((uint64_t)&v5[*(int *)(v2 + 28)], (uint64_t)v9, type metadata accessor for CRLPathSourceData);
  sub_1008E0274((uint64_t)v5, type metadata accessor for CRLShapeItemParentAffinity);
  sub_100522F00((uint64_t)v13, &qword_1016892B0);
  sub_10051B3EC((uint64_t)(v9 + 184), (uint64_t)v19, &qword_10168A060);
  sub_10051B3EC((uint64_t)v19, (uint64_t)v20, &qword_10168A060);
  if (sub_1008E0338((uint64_t)v20) != 1)
  {
    if (v20[9])
    {
      sub_1008E0274((uint64_t)v9, type metadata accessor for CRLPathSourceData);
    }
    else
    {
      uint64_t v16 = v20[13];
      sub_1008E0274((uint64_t)v9, type metadata accessor for CRLPathSourceData);
      if (!v16) {
        return v14;
      }
    }
    return 0x3000000000000;
  }
  sub_1008E0274((uint64_t)v9, type metadata accessor for CRLPathSourceData);
  return v14;
}

void *sub_1008DD8B4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v31 - v11;
  uint64_t v13 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)v31 - v19;
  uint64_t v21 = (uint64_t)v2 + *(void *)(v4 + 632);
  swift_beginAccess();
  if (a1)
  {
    v31[1] = v5;
    sub_100522E9C(v21, (uint64_t)v16, &qword_1016892B0);
    sub_100523288(&qword_101675540, &qword_1016892B0);
    CRType.copy(renamingReferences:)();
    sub_100522F00((uint64_t)v16, &qword_1016892B0);
    uint64_t v22 = (uint64_t)v2 + *(void *)(*v2 + 752);
    swift_beginAccess();
    sub_1008E020C(v22, (uint64_t)v8, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1008DF550((unint64_t *)&unk_10168A0A0, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
    CRType.copy(renamingReferences:)();
    sub_1008E0274((uint64_t)v8, type metadata accessor for CRLConnectionLineCRDTData);
  }
  else
  {
    sub_100522E9C(v21, (uint64_t)v20, &qword_1016892B0);
    uint64_t v23 = (uint64_t)v2 + *(void *)(*v2 + 752);
    swift_beginAccess();
    sub_1008E020C(v23, (uint64_t)v12, type metadata accessor for CRLConnectionLineCRDTData);
  }
  uint64_t v24 = v2[4];
  uint64_t v25 = v2[5];
  uint64_t v28 = v2 + 2;
  uint64_t v26 = v2[2];
  uint64_t v27 = v28[1];
  uint64_t v29 = swift_allocObject();
  sub_1008E02D4((uint64_t)v12, v29 + *(void *)(*(void *)v29 + 752));
  *(void *)(v29 + qword_10169E700) = 0;
  sub_10051B3EC((uint64_t)v20, v29 + *(void *)(*(void *)v29 + 632), &qword_1016892B0);
  return sub_10068B398(v27, v24, v25, v26);
}

uint64_t sub_1008DDC50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v47 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v47 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v57 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v57, v20);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v47 - v25;
  uint64_t v27 = type metadata accessor for UUID();
  __chkstk_darwin(v27, v28);
  __chkstk_darwin(v29, v30);
  uint64_t v58 = a1;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs))
  {
    id v50 = (char *)&v47 - v31;
    uint64_t v51 = v22;
    uint64_t v48 = v32;
    id v52 = v7;
    id v53 = v15;
    id v54 = v11;
    uint64_t v34 = v2 + *(void *)(*(void *)v2 + 752);
    uint64_t v35 = v33;
    swift_beginAccess();
    uint64_t v56 = v34;
    sub_1008E020C(v34, (uint64_t)v26, type metadata accessor for CRLConnectionLineCRDTData);
    uint64_t v55 = sub_1005057FC(&qword_101680140);
    CRRegister.wrappedValue.getter();
    sub_1008E0274((uint64_t)v26, type metadata accessor for CRLConnectionLineCRDTData);
    id v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    if (v49(v19, 1, v27) == 1)
    {
      sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674520);
      uint64_t v36 = (uint64_t)v53;
    }
    else
    {
      uint64_t v38 = (uint64_t)v50;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v50, v19, v27);
      uint64_t v39 = v35;
      uint64_t v40 = v27;
      uint64_t v41 = (uint64_t)v53;
      sub_100A68D30(v38, (uint64_t)v53);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v40);
      swift_beginAccess();
      sub_100522E9C(v41, (uint64_t)v54, (uint64_t *)&unk_101674520);
      uint64_t v36 = v41;
      uint64_t v27 = v40;
      CRRegister.wrappedValue.setter();
      sub_100522F00(v36, (uint64_t *)&unk_101674520);
      swift_endAccess();
      uint64_t v35 = v39;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v50, v27);
    }
    uint64_t v43 = (uint64_t)v51;
    uint64_t v42 = (uint64_t)v52;
    sub_1008E020C(v56, (uint64_t)v51, type metadata accessor for CRLConnectionLineCRDTData);
    CRRegister.wrappedValue.getter();
    sub_1008E0274(v43, type metadata accessor for CRLConnectionLineCRDTData);
    unsigned int v44 = v49((char *)v42, 1, v27);
    uint64_t v37 = v58;
    if (v44 == 1)
    {
      sub_100522F00(v42, (uint64_t *)&unk_101674520);
    }
    else
    {
      uint64_t v45 = v48;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v48, v42, v27);
      sub_100A68D30(v45, v36);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v27);
      swift_beginAccess();
      sub_100522E9C(v36, (uint64_t)v54, (uint64_t *)&unk_101674520);
      CRRegister.wrappedValue.setter();
      sub_100522F00(v36, (uint64_t *)&unk_101674520);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v45, v27);
    }
  }
  else
  {
    uint64_t v37 = v58;
  }
  swift_beginAccess();
  sub_100F9A0B8(v37);
  return swift_endAccess();
}

uint64_t sub_1008DE200()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), &qword_1016892B0);

  sub_1008E0274(v0 + *(void *)(*(void *)v0 + 752), type metadata accessor for CRLConnectionLineCRDTData);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLConnectionLineItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016863A0);
}

char *sub_1008DE2D8(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1005057FC(&qword_101673478);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = v8[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(&a1[v8[7]], (char *)a2 + v8[7], v16);
    uint64_t v18 = v8[8];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_1005057FC(&qword_101689320);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    *(void *)&a1[v8[9]] = *(uint64_t *)((char *)a2 + v8[9]);
    uint64_t v22 = type metadata accessor for CRLShapeItemCRDTData(0);
    *(void *)&a1[*(int *)(v22 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(v22 + 20));
    uint64_t v23 = a3[5];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = (char *)a2 + v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1005057FC(&qword_101680140);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    v27(v24, v25, v26);
    v27(&a1[a3[6]], (char *)a2 + a3[6], v26);
    *(void *)&a1[a3[7]] = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1008DE570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v6 = a1 + v5[5];
  uint64_t v7 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + v5[6];
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(a1 + v5[7], v9);
  uint64_t v11 = a1 + v5[8];
  uint64_t v12 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLShapeItemCRDTData(0);
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + *(int *)(a2 + 20);
  uint64_t v14 = sub_1005057FC(&qword_101680140);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);
  v15(a1 + *(int *)(a2 + 24), v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1008DE774(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  uint64_t v22 = a3[5];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1005057FC(&qword_101680140);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  v26(v23, v24, v25);
  v26(a1 + a3[6], a2 + a3[6], v25);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1008DE9BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[5];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1005057FC(&qword_101680140);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24);
  v26(v23, v24, v25);
  v26(a1 + a3[6], a2 + a3[6], v25);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1008DEC20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  uint64_t v22 = a3[5];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1005057FC(&qword_101680140);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32);
  v26(v23, v24, v25);
  v26(a1 + a3[6], a2 + a3[6], v25);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1008DEE54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016A8B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1005057FC(&qword_101673478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + v7[7], a2 + v7[7], v15);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1005057FC(&qword_101689320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a1 + *(int *)(v21 + 20)) = *(void *)(a2 + *(int *)(v21 + 20));
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[5];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_1005057FC(&qword_101680140);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 40);
  v26(v23, v24, v25);
  v26(a1 + a3[6], a2 + a3[6], v25);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1008DF0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008DF0B4);
}

uint64_t sub_1008DF0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLShapeItemCRDTData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_101680140);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1008DF1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008DF1E0);
}

uint64_t sub_1008DF1E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLShapeItemCRDTData(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1005057FC(&qword_101680140);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CRLConnectionLineCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101686768);
}

void sub_1008DF314()
{
  type metadata accessor for CRLShapeItemCRDTData(319);
  if (v0 <= 0x3F)
  {
    sub_1008DF3EC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1008DF3EC()
{
  if (!qword_101686778)
  {
    sub_100522D34((uint64_t *)&unk_101674520);
    sub_1008DF454();
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101686778);
    }
  }
}

unint64_t sub_1008DF454()
{
  unint64_t result = qword_101686780;
  if (!qword_101686780)
  {
    sub_100522D34((uint64_t *)&unk_101674520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686780);
  }
  return result;
}

uint64_t sub_1008DF4C0()
{
  return sub_1008DF550(&qword_1016867B8, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
}

uint64_t sub_1008DF508()
{
  return sub_1008DF550(&qword_1016867C0, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
}

uint64_t sub_1008DF550(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008DF598()
{
  return sub_1008DF550(&qword_1016867C8, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
}

uint64_t sub_1008DF5E0()
{
  return sub_1008DF550(&qword_101675498, (void (*)(uint64_t))type metadata accessor for CRLShapeItemCRDTData);
}

uint64_t sub_1008DF628()
{
  return sub_100523288(&qword_1016867D0, &qword_101680140);
}

uint64_t sub_1008DF664()
{
  return sub_1008DF550(&qword_1016867D8, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
}

uint64_t sub_1008DF6AC()
{
  return sub_1008DF550((unint64_t *)&unk_10168A0A0, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
}

uint64_t sub_1008DF6F4()
{
  return sub_100523288(&qword_1016867E0, &qword_1016867E8);
}

uint64_t sub_1008DF730()
{
  return sub_1008DF550(&qword_1016867F0, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
}

uint64_t sub_1008DF778(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1008DF550(&qword_1016867B8, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
  uint64_t result = sub_1008DF550(&qword_1016867F8, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1008DF7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v82 = type metadata accessor for UUID();
  uint64_t v84 = *(void *)(v82 - 8);
  __chkstk_darwin(v82, v4);
  uint64_t v77 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v83, v6);
  uint64_t v79 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v71 - v10;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v76 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v80 = (uint64_t)&v71 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v78 = (char *)&v71 - v20;
  __chkstk_darwin(v21, v22);
  uint64_t v81 = (uint64_t)&v71 - v23;
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v71 - v26;
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (char *)&v71 - v30;
  uint64_t v32 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v32, v33);
  uint64_t v87 = (uint64_t)&v71 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v36);
  uint64_t v88 = (uint64_t)&v71 - v37;
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (char *)&v71 - v40;
  __chkstk_darwin(v42, v43);
  uint64_t v45 = (char *)&v71 - v44;
  BOOL v46 = sub_100E23AA8(a1, a2);
  uint64_t v85 = a1;
  sub_1008E020C(a1, (uint64_t)v45, type metadata accessor for CRLConnectionLineCRDTData);
  uint64_t v86 = a2;
  sub_1008E020C(a2, (uint64_t)v41, type metadata accessor for CRLConnectionLineCRDTData);
  if (!v46)
  {
    sub_1008E0274((uint64_t)v41, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1008E0274((uint64_t)v45, type metadata accessor for CRLConnectionLineCRDTData);
LABEL_9:
    uint64_t v54 = v87;
    uint64_t v53 = v88;
    sub_1008E020C(v85, v88, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1008E020C(v86, v54, type metadata accessor for CRLConnectionLineCRDTData);
    goto LABEL_10;
  }
  sub_1005057FC(&qword_101680140);
  CRRegister.wrappedValue.getter();
  uint64_t v75 = v32;
  CRRegister.wrappedValue.getter();
  uint64_t v47 = (uint64_t)&v11[*(int *)(v83 + 48)];
  sub_100522E9C((uint64_t)v31, (uint64_t)v11, (uint64_t *)&unk_101674520);
  sub_100522E9C((uint64_t)v27, v47, (uint64_t *)&unk_101674520);
  uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  uint64_t v49 = v82;
  uint64_t v50 = (uint64_t)v11;
  if (v48((uint64_t)v11, 1, v82) != 1)
  {
    uint64_t v56 = (uint64_t)v11;
    uint64_t v57 = v81;
    sub_100522E9C(v56, v81, (uint64_t *)&unk_101674520);
    if (v48(v47, 1, v49) != 1)
    {
      uint64_t v74 = v48;
      id v60 = v77;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v77, v47, v49);
      sub_1008DF550((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      int v73 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v72 = v50;
      id v61 = *(void (**)(char *, uint64_t))(v84 + 8);
      v61(v60, v49);
      sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674520);
      sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
      sub_1008E0274((uint64_t)v41, type metadata accessor for CRLConnectionLineCRDTData);
      sub_1008E0274((uint64_t)v45, type metadata accessor for CRLConnectionLineCRDTData);
      v61((char *)v57, v49);
      uint64_t v55 = v49;
      sub_100522F00(v72, (uint64_t *)&unk_101674520);
      uint64_t v53 = v88;
      sub_1008E020C(v85, v88, type metadata accessor for CRLConnectionLineCRDTData);
      uint64_t v54 = v87;
      sub_1008E020C(v86, v87, type metadata accessor for CRLConnectionLineCRDTData);
      if (v73) {
        goto LABEL_14;
      }
LABEL_10:
      sub_1008E0274(v54, type metadata accessor for CRLConnectionLineCRDTData);
      sub_1008E0274(v53, type metadata accessor for CRLConnectionLineCRDTData);
      goto LABEL_11;
    }
    sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
    sub_1008E0274((uint64_t)v41, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1008E0274((uint64_t)v45, type metadata accessor for CRLConnectionLineCRDTData);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v57, v49);
    goto LABEL_8;
  }
  sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674520);
  sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
  sub_1008E0274((uint64_t)v41, type metadata accessor for CRLConnectionLineCRDTData);
  sub_1008E0274((uint64_t)v45, type metadata accessor for CRLConnectionLineCRDTData);
  uint64_t v51 = v47;
  uint64_t v52 = v49;
  uint64_t v74 = v48;
  if (v48(v51, 1, v49) != 1)
  {
LABEL_8:
    sub_100522F00(v50, (uint64_t *)&unk_10168A0C0);
    goto LABEL_9;
  }
  sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
  uint64_t v53 = v88;
  sub_1008E020C(v85, v88, type metadata accessor for CRLConnectionLineCRDTData);
  uint64_t v54 = v87;
  sub_1008E020C(v86, v87, type metadata accessor for CRLConnectionLineCRDTData);
  uint64_t v55 = v52;
LABEL_14:
  sub_1005057FC(&qword_101680140);
  uint64_t v62 = (uint64_t)v78;
  CRRegister.wrappedValue.getter();
  uint64_t v63 = v80;
  CRRegister.wrappedValue.getter();
  uint64_t v64 = v79;
  uint64_t v65 = v79 + *(int *)(v83 + 48);
  sub_100522E9C(v62, v79, (uint64_t *)&unk_101674520);
  sub_100522E9C(v63, v65, (uint64_t *)&unk_101674520);
  id v66 = v74;
  if (v74(v64, 1, v55) == 1)
  {
    sub_100522F00(v63, (uint64_t *)&unk_101674520);
    sub_100522F00(v62, (uint64_t *)&unk_101674520);
    sub_1008E0274(v54, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1008E0274(v53, type metadata accessor for CRLConnectionLineCRDTData);
    if (v66(v65, 1, v55) == 1)
    {
      sub_100522F00(v64, (uint64_t *)&unk_101674520);
      char v58 = 1;
      return v58 & 1;
    }
  }
  else
  {
    uint64_t v67 = v76;
    sub_100522E9C(v64, v76, (uint64_t *)&unk_101674520);
    if (v66(v65, 1, v55) != 1)
    {
      uint64_t v68 = v84;
      id v69 = v77;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v77, v65, v55);
      sub_1008DF550((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v58 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v70 = *(void (**)(char *, uint64_t))(v68 + 8);
      v70(v69, v55);
      sub_100522F00(v80, (uint64_t *)&unk_101674520);
      sub_100522F00(v62, (uint64_t *)&unk_101674520);
      sub_1008E0274(v54, type metadata accessor for CRLConnectionLineCRDTData);
      sub_1008E0274(v53, type metadata accessor for CRLConnectionLineCRDTData);
      v70((char *)v67, v55);
      sub_100522F00(v64, (uint64_t *)&unk_101674520);
      return v58 & 1;
    }
    sub_100522F00(v63, (uint64_t *)&unk_101674520);
    sub_100522F00(v62, (uint64_t *)&unk_101674520);
    sub_1008E0274(v54, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1008E0274(v53, type metadata accessor for CRLConnectionLineCRDTData);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v67, v55);
  }
  sub_100522F00(v64, (uint64_t *)&unk_10168A0C0);
LABEL_11:
  char v58 = 0;
  return v58 & 1;
}

uint64_t sub_1008E020C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1008E0274(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1008E02D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLConnectionLineCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008E0338(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1008E0350(void *a1, uint64_t a2, unsigned __int16 a3)
{
  uint64_t v33 = a2;
  uint64_t v32 = a3;
  uint64_t v5 = sub_1005057FC(&qword_101686858);
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v27 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101686860);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101686868);
  uint64_t v25 = *(void *)(v12 - 8);
  uint64_t v26 = v12;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101686870);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1008E17CC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if ((a3 & 0x100) != 0)
  {
    if (v33 | v32)
    {
      char v38 = 2;
      sub_1008E1820();
      uint64_t v15 = v27;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v24 = v28;
      uint64_t v23 = v29;
    }
    else
    {
      char v36 = 0;
      sub_1008E191C();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v24 = v25;
      uint64_t v23 = v26;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
  else
  {
    char v37 = 1;
    sub_1008E1874();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v34 = v33;
    char v35 = v32 & 1;
    sub_1008E1970();
    uint64_t v21 = v31;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
}

uint64_t sub_1008E072C(uint64_t a1)
{
  unint64_t v2 = sub_1008E191C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E0768(uint64_t a1)
{
  unint64_t v2 = sub_1008E191C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008E07A4()
{
  return 0x657079546D657469;
}

uint64_t sub_1008E07BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x657079546D657469 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1008E0854(uint64_t a1)
{
  unint64_t v2 = sub_1008E1874();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E0890(uint64_t a1)
{
  unint64_t v2 = sub_1008E1874();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008E08CC()
{
  unint64_t v1 = 0x6574496472616F62;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6472616F62;
  }
}

uint64_t sub_1008E092C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008E10B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008E0954(uint64_t a1)
{
  unint64_t v2 = sub_1008E17CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E0990(uint64_t a1)
{
  unint64_t v2 = sub_1008E17CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008E09CC(uint64_t a1)
{
  unint64_t v2 = sub_1008E1820();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E0A08(uint64_t a1)
{
  unint64_t v2 = sub_1008E1820();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008E0A44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1008E120C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 9) = HIBYTE(v5) & 1;
  }
  return result;
}

uint64_t sub_1008E0A7C(void *a1)
{
  return sub_1008E0350(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 9) << 8));
}

uint64_t sub_1008E0AAC(uint64_t a1, uint64_t a2)
{
  return sub_1008E0ADC(*(void *)a1, *(unsigned __int8 *)(a1 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 9) << 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8) | (unsigned __int16)(*(unsigned __int8 *)(a2 + 9) << 8));
}

uint64_t sub_1008E0ADC(uint64_t a1, __int16 a2, unint64_t a3, __int16 a4)
{
  if ((a2 & 0x100) != 0)
  {
    BOOL v5 = (a3 | a4) == 0;
    if ((a4 & 0x100) != 0)
    {
      BOOL v6 = (a3 | a4) != 0;
    }
    else
    {
      BOOL v5 = 0;
      BOOL v6 = 0;
    }
    if (a1 | a2) {
      return v6;
    }
    else {
      return v5;
    }
  }
  else
  {
    if ((a4 & 0x100) != 0) {
      return 0;
    }
    if ((a2 & 1) == 0) {
      return (a4 & 1) == 0 && a1 == a3;
    }
    switch(a1)
    {
      case 1:
        if ((a4 & 1) == 0 || a3 != 1) {
          return 0;
        }
        uint64_t result = 1;
        break;
      case 2:
        if ((a4 & 1) == 0 || a3 != 2) {
          return 0;
        }
        uint64_t result = 1;
        break;
      case 3:
        if ((a4 & 1) == 0 || a3 != 3) {
          return 0;
        }
        uint64_t result = 1;
        break;
      case 4:
        if ((a4 & 1) == 0 || a3 != 4) {
          return 0;
        }
        uint64_t result = 1;
        break;
      case 5:
        if ((a4 & 1) == 0 || a3 != 5) {
          return 0;
        }
        uint64_t result = 1;
        break;
      case 6:
        if ((a4 & 1) == 0 || a3 != 6) {
          return 0;
        }
        uint64_t result = 1;
        break;
      case 7:
        if ((a4 & 1) == 0 || a3 != 7) {
          return 0;
        }
        uint64_t result = 1;
        break;
      case 8:
        if ((a4 & 1) == 0 || a3 != 8) {
          return 0;
        }
        uint64_t result = 1;
        break;
      case 9:
        if ((a4 & 1) == 0 || a3 != 9) {
          return 0;
        }
        uint64_t result = 1;
        break;
      case 10:
        if ((a4 & 1) == 0 || a3 <= 9) {
          return 0;
        }
        uint64_t result = 1;
        break;
      default:
        if ((a4 & 1) == 0 || a3) {
          return 0;
        }
        uint64_t result = 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1008E0C78(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 1;
  switch(v1)
  {
    case 0:
      uint64_t result = 0;
      break;
    case 1:
      return result;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      uint64_t result = 3;
      break;
    case 4:
      uint64_t result = 4;
      break;
    case 5:
      uint64_t result = 5;
      break;
    case 6:
      uint64_t result = 6;
      break;
    case 7:
      uint64_t result = 7;
      break;
    case 8:
      uint64_t result = 8;
      break;
    case 9:
      uint64_t result = 9;
      break;
    case 10:
      uint64_t result = 10;
      break;
    case 11:
      uint64_t result = 11;
      break;
    case 98:
      uint64_t result = 12;
      break;
    default:
      uint64_t result = 13;
      break;
  }
  return result;
}

uint64_t sub_1008E0E9C(uint64_t a1)
{
  uint64_t v1 = a1;
  switch(sub_1008E0C78(a1))
  {
    case 1u:
      uint64_t v1 = 0;
      break;
    case 2u:
      uint64_t v1 = 1;
      break;
    case 3u:
      uint64_t v1 = 2;
      break;
    case 4u:
      uint64_t v1 = 3;
      break;
    case 5u:
      uint64_t v1 = 4;
      break;
    case 6u:
      uint64_t v1 = 5;
      break;
    case 7u:
      uint64_t v1 = 6;
      break;
    case 8u:
      uint64_t v1 = 7;
      break;
    case 9u:
      uint64_t v1 = 8;
      break;
    case 0xAu:
      uint64_t v1 = 9;
      break;
    case 0xBu:
      uint64_t v1 = 10;
      break;
    case 0xCu:
      uint64_t v1 = 1;
      break;
    case 0xDu:
      return v1;
    default:
      uint64_t v1 = 0;
      break;
  }
  return v1;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLSerializableObjectType(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLSerializableObjectType(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLSerializableObjectType(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 10) = v3;
  return result;
}

uint64_t sub_1008E1064(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1008E1080(uint64_t result, int a2)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 9) = 1;
  }
  else
  {
    *(unsigned char *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectType()
{
  return &type metadata for CRLSerializableObjectType;
}

uint64_t sub_1008E10B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6472616F62 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574496472616F62 && a2 == 0xE90000000000006DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000101252E40)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1008E120C(void *a1)
{
  uint64_t v27 = sub_1005057FC(&qword_101686810);
  uint64_t v29 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v2);
  uint64_t v32 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_101686818);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101686820);
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101686828);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v33 = a1;
  sub_10050F848(a1, v18);
  sub_1008E17CC();
  uint64_t v19 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v19)
  {
    uint64_t v20 = v32;
    uint64_t v34 = v14;
    uint64_t v21 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v21 + 16) == 1)
    {
      if (*(unsigned char *)(v21 + 32))
      {
        if (*(unsigned char *)(v21 + 32) == 1)
        {
          char v37 = 1;
          sub_1008E1874();
          uint64_t v22 = v17;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          sub_1008E18C8();
          uint64_t v26 = v30;
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v26);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v13);
          uint64_t v12 = v35;
        }
        else
        {
          char v38 = 2;
          sub_1008E1820();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v27);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v13);
          uint64_t v12 = 1;
        }
      }
      else
      {
        char v36 = 0;
        sub_1008E191C();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v12, v9);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v13);
        uint64_t v12 = 0;
      }
    }
    else
    {
      uint64_t v12 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v24 = v23;
      sub_1005057FC(&qword_1016771E0);
      *uint64_t v24 = &type metadata for CRLSerializableObjectType;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v24, enum case for DecodingError.typeMismatch(_:), v12);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v13);
    }
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v33);
  return v12;
}

unint64_t sub_1008E17CC()
{
  unint64_t result = qword_101686830;
  if (!qword_101686830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686830);
  }
  return result;
}

unint64_t sub_1008E1820()
{
  unint64_t result = qword_101686838;
  if (!qword_101686838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686838);
  }
  return result;
}

unint64_t sub_1008E1874()
{
  unint64_t result = qword_101686840;
  if (!qword_101686840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686840);
  }
  return result;
}

unint64_t sub_1008E18C8()
{
  unint64_t result = qword_101686848;
  if (!qword_101686848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686848);
  }
  return result;
}

unint64_t sub_1008E191C()
{
  unint64_t result = qword_101686850;
  if (!qword_101686850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686850);
  }
  return result;
}

unint64_t sub_1008E1970()
{
  unint64_t result = qword_101686878;
  if (!qword_101686878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686878);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLSerializableObjectType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008E1A90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectType.CodingKeys()
{
  return &type metadata for CRLSerializableObjectType.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectType.BoardCodingKeys()
{
  return &type metadata for CRLSerializableObjectType.BoardCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLSerializableObjectType.BoardItemCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1008E1B74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectType.BoardItemCodingKeys()
{
  return &type metadata for CRLSerializableObjectType.BoardItemCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectType.PasteboardObjectCodingKeys()
{
  return &type metadata for CRLSerializableObjectType.PasteboardObjectCodingKeys;
}

unint64_t sub_1008E1BC0()
{
  unint64_t result = qword_101686880;
  if (!qword_101686880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686880);
  }
  return result;
}

unint64_t sub_1008E1C18()
{
  unint64_t result = qword_101686888;
  if (!qword_101686888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686888);
  }
  return result;
}

unint64_t sub_1008E1C70()
{
  unint64_t result = qword_101686890;
  if (!qword_101686890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686890);
  }
  return result;
}

unint64_t sub_1008E1CC8()
{
  unint64_t result = qword_101686898;
  if (!qword_101686898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686898);
  }
  return result;
}

unint64_t sub_1008E1D20()
{
  unint64_t result = qword_1016868A0;
  if (!qword_1016868A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016868A0);
  }
  return result;
}

unint64_t sub_1008E1D78()
{
  unint64_t result = qword_1016868A8;
  if (!qword_1016868A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016868A8);
  }
  return result;
}

unint64_t sub_1008E1DD0()
{
  unint64_t result = qword_1016868B0;
  if (!qword_1016868B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016868B0);
  }
  return result;
}

unint64_t sub_1008E1E28()
{
  unint64_t result = qword_1016868B8;
  if (!qword_1016868B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016868B8);
  }
  return result;
}

unint64_t sub_1008E1E80()
{
  unint64_t result = qword_1016868C0;
  if (!qword_1016868C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016868C0);
  }
  return result;
}

unint64_t sub_1008E1ED8()
{
  unint64_t result = qword_1016868C8;
  if (!qword_1016868C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016868C8);
  }
  return result;
}

uint64_t sub_1008E1F2C()
{
  return String.init<A>(describing:)();
}

uint64_t type metadata accessor for CRLUnfairLock()
{
  return self;
}

uint64_t sub_1008E1F88()
{
  swift_slowDealloc();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLUnfairRecursiveLock()
{
  return self;
}

uint64_t sub_1008E1FEC()
{
  if (objc_msgSend(v1, "aa_isAccountClass:", AAAccountClassPrimary))
  {
    id v2 = [v1 aa_altDSID];
    if (v2)
    {
      int v3 = v2;
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v4;
    }
    goto LABEL_6;
  }
  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v2 = [v1 accountDescription];
  if (!v2)
  {
    __break(1u);
LABEL_6:
    __break(1u);
  }
  unsigned int v6 = v2;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_identifier", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/ACAccount_CRLAdditions.swift", 87, 2, 17, (uint64_t)"No stable account identifier found for %{public}@", 49, 2u, inited);
  sub_100586FD4(inited, (uint64_t)"No stable account identifier found for %{public}@");
  sub_1005871AC(inited, (uint64_t)"crl_identifier", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/ACAccount_CRLAdditions.swift", 87, 2, 17);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v10, v11);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1008E21B8(double a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform34CRLMiniFormatterStrokeDataProvider_strokeChangingState;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform34CRLMiniFormatterStrokeDataProvider_strokeChangingState + 8) != 1)
  {
LABEL_7:
    if ([*(id *)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController) mostSpecificEditorConformingToProtocol:&OBJC_PROTOCOL___CRLStrokeEditor])
    {
      uint64_t v7 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v7) {
        [v7 didChangeStrokeWidth:a1];
      }
      swift_unknownObjectRelease();
    }
    *(double *)uint64_t v3 = a1;
    *(unsigned char *)(v3 + 8) = 0;
    goto LABEL_12;
  }
  double v4 = *(double *)v3;
  id v5 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController) mostSpecificEditorConformingToProtocol:&OBJC_PROTOCOL___CRLStrokeEditor];
  if (v4 != 0.0)
  {
    if (v5)
    {
      unsigned int v6 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v6) {
        [v6 beginChangingStrokeWidth:a1];
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_7;
  }
  if (v5)
  {
    uint64_t v8 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v8) {
      [v8 applyStrokeWidth:a1];
    }
    swift_unknownObjectRelease();
  }
LABEL_12:
  sub_1008E2764();
}

void sub_1008E2324(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v9 = sub_1008E2AE4();
  if (v9 != 1)
  {
    CKRecordID v10 = (void *)v9;
    double v11 = COERCE_DOUBLE(sub_1008E2AFC());
    if ((v12 & 0xFF00) == 0x200)
    {
      sub_100522AD8(v10);
    }
    else
    {
      double v13 = v11;
      char v14 = v12;
      if (v10)
      {
        uint64_t v15 = v10;
      }
      else
      {
        if (a4) {
          id v16 = a4;
        }
        else {
          id v16 = [self blackColor];
        }
        uint64_t v15 = v16;
      }
      double v17 = *(double *)&a2;
      if (a3) {
        double v17 = 1.0;
      }
      if (v14) {
        double v18 = v17;
      }
      else {
        double v18 = v13;
      }
      uint64_t v19 = self;
      id v20 = v10;
      id v21 = [v19 strokeWithColor:v15 width:a1 pattern:v18];
      if ([*(id *)(v4 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController) mostSpecificEditorConformingToProtocol:&OBJC_PROTOCOL___CRLStrokeEditor])
      {
        uint64_t v22 = swift_dynamicCastObjCProtocolConditional();
        if (v22)
        {
          uint64_t v23 = (void *)v22;
          id v24 = v21;
          [v23 applyStroke:v24];
        }
        swift_unknownObjectRelease();
      }
      sub_1008E2764();

      sub_100522AD8(v10);
    }
  }
}

void sub_1008E250C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v9 = sub_1008E2AE4();
  if (v9 != 1)
  {
    CKRecordID v10 = (void *)v9;
    double v11 = COERCE_DOUBLE(sub_1008E2AFC());
    if ((v12 & 0xFF00) == 0x200)
    {
      sub_100522AD8(v10);
    }
    else
    {
      double v13 = v11;
      char v14 = v12;
      if (v10)
      {
        uint64_t v15 = v10;
      }
      else
      {
        if (a5) {
          id v16 = a5;
        }
        else {
          id v16 = [self blackColor];
        }
        uint64_t v15 = v16;
      }
      double v17 = *(double *)&a3;
      if (a4) {
        double v17 = 1.0;
      }
      if (v14) {
        double v18 = v17;
      }
      else {
        double v18 = v13;
      }
      sub_10050BF48(0, &qword_101686A58);
      ObjCClassFromMetadatCGFloat a = (void *)swift_getObjCClassFromMetadata();
      id v20 = v10;
      NSString v21 = String._bridgeToObjectiveC()();
      id v22 = [ObjCClassFromMetadata strokeWithName:v21 color:v15 width:v18];

      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10050BF48(0, (unint64_t *)&qword_101686A50);
      if (swift_dynamicCast())
      {
        if ([*(id *)(v5 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController) mostSpecificEditorConformingToProtocol:&OBJC_PROTOCOL___CRLStrokeEditor])
        {
          uint64_t v23 = (void *)swift_dynamicCastObjCProtocolConditional();
          if (v23) {
            [v23 applyStroke:v24];
          }

          swift_unknownObjectRelease();
        }
        else
        {
        }
      }
      sub_1008E2764();

      sub_100522AD8(v10);
    }
  }
}

void sub_1008E2764()
{
  uint64_t v1 = (void *)sub_1008E2994();
  if (v1 != (void *)1)
  {
    uint64_t v3 = v1;
    if (v2)
    {
      sub_100522AD8(v1);
    }
    else if (v1)
    {
      uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      sub_10052315C(v1);
      id v6 = v3;
      NSString v5 = String._bridgeToObjectiveC()();
      [v4 setObject:v6 forInspectorPropertyKey:v5];

      sub_100522AD8(v3);
      sub_100522AD8(v3);
    }
  }
}

uint64_t sub_1008E2878()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 objectForInspectorPropertyKey:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_10052E248((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101686A50);
    if (swift_dynamicCast()) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10052E2B0((uint64_t)v7);
    return 0;
  }
}

uint64_t sub_1008E297C()
{
  return sub_1008E29AC((void (*)(uint64_t *, double *, uint64_t))sub_100AC7880);
}

uint64_t sub_1008E2994()
{
  return sub_1008E29AC((void (*)(uint64_t *, double *, uint64_t))sub_100AC7520);
}

uint64_t sub_1008E29AC(void (*a1)(uint64_t *, double *, uint64_t))
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  sub_10050BF48(0, &qword_101686A48);
  if ([v3 mostSpecificCurrentEditorOfClass:swift_getObjCClassFromMetadata()])
  {
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
    {
      id v5 = [v4 styledItems];
      swift_unknownObjectRelease();
      if (v5)
      {
        type metadata accessor for CRLStyledItem();
        sub_10089B5CC();
        uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v7 = sub_1006B97F8(v6);
        swift_bridgeObjectRelease();
        a1(&v9, v7, v1);
        swift_release();
        return v9;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return 1;
}

uint64_t sub_1008E2AE4()
{
  return sub_1008E29AC((void (*)(uint64_t *, double *, uint64_t))sub_100AC7504);
}

id sub_1008E2AFC()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform34CRLMiniFormatterStrokeDataProvider_strokeChangingState + 8) & 1) == 0) {
    return *(id *)(v0 + OBJC_IVAR____TtC8Freeform34CRLMiniFormatterStrokeDataProvider_strokeChangingState);
  }
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  sub_10050BF48(0, &qword_101686A48);
  id result = [v1 mostSpecificCurrentEditorOfClass:swift_getObjCClassFromMetadata()];
  if (!result) {
    return result;
  }
  self;
  id v3 = (void *)swift_dynamicCastObjCClass();
  if (v3)
  {
    id v4 = [v3 styledItems];
    swift_unknownObjectRelease();
    if (v4)
    {
      type metadata accessor for CRLStyledItem();
      sub_10089B5CC();
      uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v6 = sub_1006B97F8(v5);
      swift_bridgeObjectRelease();
      sub_100AC7C5C((Swift::Int)&v7, (unint64_t)v6);
      swift_release();
      return (id)v7;
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  return 0;
}

uint64_t sub_1008E2C5C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, (unint64_t *)&qword_101686A40)) {
    ObjCClassFromMetadatCGFloat a = swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadatCGFloat a = 0;
  }
  id v3 = [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  id v4 = (void *)swift_dynamicCastObjCClass();
  uint64_t v5 = (uint64_t)v4;
  if (v4)
  {
    if ([v4 infosAreLines]) {
      uint64_t v5 = 1;
    }
    else {
      uint64_t v5 = (uint64_t)[(id)v5 infosAreConnectionLines];
    }
  }
  swift_unknownObjectRelease();
  return v5;
}

id sub_1008E2D2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterStrokeDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterStrokeDataProvider()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLMiniFormatterStrokeDataProvider.StrokeChangingState()
{
  return &type metadata for CRLMiniFormatterStrokeDataProvider.StrokeChangingState;
}

uint64_t sub_1008E2D94()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1008E2E34()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    objc_super v2 = (char *)*(id *)(result + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterUSDZBuilder_usdzDataProvider);

    id v3 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    if (type metadata accessor for CRLUSDZEditor()) {
      ObjCClassFromMetadatCGFloat a = swift_getObjCClassFromMetadata();
    }
    else {
      ObjCClassFromMetadatCGFloat a = 0;
    }
    id v5 = [v3 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    uint64_t v6 = (void *)swift_dynamicCastClass();
    if (v6) {
      [v6 showMediaReplaceUI:v2];
    }

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1008E2F18()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_1008E2FE0()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1008E3080()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    NSString v1 = (void *)result;
    NSString v2 = (char *)*(id *)(result + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterUSDZBuilder_usdzDataProvider);

    id v3 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    if (type metadata accessor for CRLUSDZEditor()) {
      ObjCClassFromMetadatCGFloat a = swift_getObjCClassFromMetadata();
    }
    else {
      ObjCClassFromMetadatCGFloat a = 0;
    }
    id v5 = [v3 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    if (swift_dynamicCastClass()) {
      sub_1007E225C();
    }

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1008E315C()
{
  NSString v1 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterUSDZBuilder_usdzDataProvider)
                + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (type metadata accessor for CRLUSDZEditor()) {
    ObjCClassFromMetadatCGFloat a = swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadatCGFloat a = 0;
  }
  id v3 = [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  if (swift_dynamicCastClass()) {
    char v4 = sub_1007E1F04();
  }
  else {
    char v4 = 0;
  }
  swift_unknownObjectRelease();
  return v4 & 1;
}

uint64_t sub_1008E3208(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)v8);
  type metadata accessor for CRLUSDZItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_1007FE0AC();
  if (!v4)
  {

LABEL_5:
    char v5 = sub_100897B28(a1, a2);
    return v5 & 1;
  }
  char v5 = sub_1006E5050(v7, v4);

  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1008E32D8()
{
}

id sub_1008E32E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterUSDZBuilder();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterUSDZBuilder()
{
  return self;
}

unint64_t sub_1008E3350()
{
  unint64_t result = qword_101672600;
  if (!qword_101672600)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101672600);
  }
  return result;
}

uint64_t sub_1008E3390()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1008E33C8()
{
  return sub_1008E3080();
}

uint64_t sub_1008E33D0()
{
  return sub_1008E2E34();
}

id sub_1008E33D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  __int16 v12 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterUSDZDataProvider());
  *(void *)&v12[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  double v13 = (objc_class *)type metadata accessor for CRLMiniFormatterDataProvider();
  v22.receiver = v12;
  v22.super_class = v13;
  char v14 = v6;
  id v15 = a5;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterUSDZBuilder_usdzDataProvider] = [super init];

  id v16 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterMediaDataProvider());
  *(void *)&v16[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = v15;
  v21.receiver = v16;
  v21.super_class = v13;
  double v17 = v14;
  id v18 = v15;
  *(void *)&v17[OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider] = [super init];

  return sub_100521CB4(a1, a2, a3, a4, v18, a6);
}

uint64_t sub_1008E3500(uint64_t a1)
{
  *(void *)(v1 + 120) = a1;
  return _swift_task_switch(sub_1008E3520, 0, 0);
}

uint64_t sub_1008E3520()
{
  uint64_t v1 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_1008E3614;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1005BFB40;
  v0[13] = &unk_101519BF0;
  v0[14] = v2;
  [v1 importBoardItemsWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1008E3614()
{
  return _swift_task_switch(sub_1008E36F4, 0, 0);
}

uint64_t sub_1008E36F4()
{
  id v1 = [*(id *)(v0 + 120) boardItems];
  type metadata accessor for CRLBoardItem(0);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(v0 + 120);
  if (v3)
  {
    id v5 = [v4 boardItems];
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v7(v6);
  }
  else
  {
    id v9 = [v4 errors];
    sub_1005057FC(&qword_101672BD0);
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v11 = *(void *)(v10 + 16);
    swift_bridgeObjectRelease();
    if (v11)
    {
      uint64_t v12 = 0;
    }
    else
    {
      id v13 = [*(id *)(v0 + 120) errors];
      uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    sub_1006700E8();
    swift_allocError();
    *char v14 = v12;
    swift_willThrow();
    id v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
}

uint64_t sub_1008E38F4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1008E3914, 0, 0);
}

uint64_t sub_1008E3914()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = *(void **)(*(void *)(*sub_10050F848(*(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 24))
                              + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory);
    id v3 = objc_allocWithZone((Class)CRLMultipleItemImporter);
    type metadata accessor for CRLPreinsertionAssetWrapper();
    swift_bridgeObjectRetain();
    id v4 = v2;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [v3 initWithDataWrappers:isa boardItemFactory:v4 importAnimatedGIFsAsImages:0];
    *(void *)(v0 + 32) = v6;

    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v7;
    void *v7 = v0;
    v7[1] = sub_1008E3B14;
    v7[15] = v6;
    return _swift_task_switch(sub_1008E3520, 0, 0);
  }
  sub_1006700E8();
  swift_allocError();
  *id v9 = 0;
  swift_willThrow();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1008E3B14(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1008E3CA4;
  }
  else
  {
    *(void *)(v4 + 56) = a1;
    id v5 = sub_1008E3C3C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1008E3C3C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 56);
  return v1(v2);
}

uint64_t sub_1008E3CA4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008E3D08(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_1005057FC(&qword_101672E90);
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  return _swift_task_switch(sub_1008E3E08, 0, 0);
}

uint64_t sub_1008E3E08()
{
  uint64_t v1 = _swiftEmptyArrayStorage;
  uint64_t v35 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 16);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = *(void *)(v0 + 48);
  if (v2)
  {
    id v6 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    uint64_t v5 = v4 + 16;
    unint64_t v30 = (*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64);
    unint64_t v7 = v3 + v30;
    uint64_t v8 = *(void *)(v5 + 56);
    uint64_t v31 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    uint64_t v32 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 40);
    uint64_t v33 = v6;
    uint64_t v34 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v29 = (void (**)(void, void))(v5 - 8);
    while (1)
    {
      uint64_t v9 = v8;
      uint64_t v11 = *(void *)(v0 + 32);
      uint64_t v10 = *(void *)(v0 + 40);
      v33(v11, v7, v10);
      uint64_t v12 = *v32;
      (*v32)(v11, 0, 1, v10);
      if ((*v31)(v11, 1, v10) == 1) {
        break;
      }
      id v13 = *v34;
      (*v34)(*(char **)(v0 + 64), *(void *)(v0 + 32), *(void *)(v0 + 40));
      if (URL.isFileURL.getter())
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"importItems(from:controller:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Performers/Intents/CRLAppIntentsBoardItemsImporter.swift", 121, 2, 17, (uint64_t)"File url backed assets must be imported using a CRLPreinsertionAssetWrapper", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"importItems(from:controller:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Performers/Intents/CRLAppIntentsBoardItemsImporter.swift", 121, 2, 17);
      }
      if (URL.isFileURL.getter())
      {
        (*v29)(*(void *)(v0 + 64), *(void *)(v0 + 40));
        uint64_t v8 = v9;
      }
      else
      {
        v13(*(char **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 40));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB824(0, *((void *)v1 + 2) + 1, 1);
          uint64_t v1 = v35;
        }
        uint64_t v8 = v9;
        unint64_t v15 = *((void *)v1 + 2);
        unint64_t v14 = *((void *)v1 + 3);
        if (v15 >= v14 >> 1)
        {
          sub_1006BB824(v14 > 1, v15 + 1, 1);
          uint64_t v8 = v9;
          uint64_t v1 = v35;
        }
        uint64_t v16 = *(void *)(v0 + 56);
        uint64_t v17 = *(void *)(v0 + 40);
        *((void *)v1 + 2) = v15 + 1;
        v13((char *)v1 + v30 + v15 * v8, v16, v17);
        uint64_t v35 = v1;
      }
      v7 += v8;
      if (!--v2)
      {
        v12(*(void *)(v0 + 32), 1, 1, *(void *)(v0 + 40));
        break;
      }
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v4 + 56))(*(void *)(v0 + 32), 1, 1, *(void *)(v0 + 40));
  }
  uint64_t v18 = *(void *)(v0 + 32);
  swift_bridgeObjectRelease();
  sub_1005CCBB8(v18);
  uint64_t v19 = *((void *)v1 + 2);
  swift_release();
  if (v19)
  {
    id v20 = *(void **)(*(void *)(*sub_10050F848(*(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 24))
                               + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory);
    id v21 = objc_allocWithZone((Class)CRLMultipleItemImporter);
    swift_bridgeObjectRetain();
    id v22 = v20;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v24 = [v21 initWithURLs:isa boardItemFactory:v22];
    *(void *)(v0 + 72) = v24;

    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1008E42C0;
    v25[15] = v24;
    return _swift_task_switch(sub_1008E3520, 0, 0);
  }
  else
  {
    sub_1006700E8();
    swift_allocError();
    *uint64_t v26 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
}

uint64_t sub_1008E42C0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1008E4478;
  }
  else
  {
    *(void *)(v4 + 96) = a1;
    uint64_t v5 = sub_1008E43E8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1008E43E8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 96);
  return v1(v2);
}

uint64_t sub_1008E4478()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

ValueMetadata *type metadata accessor for CRLAppIntentsBoardItemsImporter()
{
  return &type metadata for CRLAppIntentsBoardItemsImporter;
}

id sub_1008E456C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Freeform23CRLCommandSetImageMedia_id];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  *(void *)&v7[OBJC_IVAR____TtC8Freeform23CRLCommandSetImageMedia_imageData] = a2;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform23CRLCommandSetImageMedia_thumbnailData] = a3;
  v13.receiver = v7;
  v13.super_class = v3;
  id v11 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v11;
}

void sub_1008E4964(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9) {
    goto LABEL_7;
  }
  type metadata accessor for CRLImageItem();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLCommandSetImageMedia.swift", 94, 2, 29, (uint64_t)"Unable to retrieve image item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve image item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLCommandSetImageMedia.swift", 94, 2, 29);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  id v12 = v9;
  sub_10103405C(v11, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    sub_100A2E25C(*(void *)(v5 + OBJC_IVAR____TtC8Freeform23CRLCommandSetImageMedia_imageData), *(void *)(v5 + OBJC_IVAR____TtC8Freeform23CRLCommandSetImageMedia_thumbnailData));
    id v13 = v12;
    sub_101023724(v11, (uint64_t)&off_101518040, a3);
  }
}

void sub_1008E4B9C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform23CRLCommandSetImageMedia_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform23CRLCommandSetImageMedia_thumbnailData);
}

id sub_1008E4C28()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetImageMedia();
  return [super dealloc];
}

uint64_t sub_1008E4CF0()
{
  return type metadata accessor for CRLCommandSetImageMedia();
}

uint64_t type metadata accessor for CRLCommandSetImageMedia()
{
  uint64_t result = qword_101686B30;
  if (!qword_101686B30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008E4D44()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_1008E4F04(uint64_t a1, char a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_1008E4F48(a1, a2);
}

id sub_1008E4F48(uint64_t a1, char a2)
{
  id v5 = (uint64_t *)&v2[OBJC_IVAR____TtC8Freeform26CRLCommandDeleteBoardItems_actionString];
  id v6 = self;
  uint64_t v7 = v2;
  id v8 = [v6 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  *id v5 = v12;
  v5[1] = v14;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform26CRLCommandDeleteBoardItems_boardItems] = a1;
  v7[OBJC_IVAR____TtC8Freeform26CRLCommandDeleteBoardItems_canDeleteNewlyCreatedItems] = a2;

  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for CRLCommandDeleteBoardItems();
  return [super init];
}

uint64_t sub_1008E5200(uint64_t a1, uint64_t a2)
{
  uint64_t v191 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v181 = (char *)&v169 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v183 = (uint64_t)&v169 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = (void *)type metadata accessor for UUID();
  uint64_t v192 = *(v9 - 1);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v169 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  unint64_t v16 = (unint64_t)&v169 - v15;
  __chkstk_darwin(v17, v18);
  uint64_t v187 = (char *)&v169 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v186 = (char *)&v169 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v184 = (char *)&v169 - v25;
  if (qword_10166FBD0 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    swift_beginAccess();
    id v26 = (id)static OS_os_log.boardItemLifecycle;
    uint64_t v27 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v27, (uint64_t)"⭕ CRLCommandDeleteBoardItems commit() begin", 45, 0, (uint64_t)_swiftEmptyArrayStorage);

    unint64_t v177 = sub_100A3B3E8((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform26CRLCommandDeleteBoardItems_boardItems);
    if ((v28 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      type metadata accessor for CRLBoardItem(0);
      sub_10060A334();
      Set.Iterator.init(_cocoa:)();
      uint64_t v28 = v207;
      uint64_t v203 = v208;
      uint64_t v29 = v209;
      unint64_t v30 = v210;
      unint64_t v31 = v211;
    }
    else
    {
      uint64_t v32 = -1 << *(unsigned char *)(v28 + 32);
      uint64_t v33 = *(void *)(v28 + 56);
      uint64_t v203 = v28 + 56;
      uint64_t v34 = ~v32;
      uint64_t v35 = -v32;
      uint64_t v36 = v35 < 64 ? ~(-1 << v35) : -1;
      unint64_t v31 = v36 & v33;
      swift_bridgeObjectRetain();
      uint64_t v29 = v34;
      unint64_t v30 = 0;
    }
    uint64_t v198 = v29;
    uint64_t v200 = v28 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v201 = (unint64_t)(v29 + 64) >> 6;
    uint64_t v202 = (uint64_t *)(v192 + 8);
    uint64_t v199 = (char *)&type metadata for Swift.AnyObject + 8;
    unint64_t v172 = v2;
    uint64_t v205 = v9;
    uint64_t v193 = v12;
    unint64_t v178 = v16;
    if (v28 < 0) {
      break;
    }
    while (v31)
    {
      uint64_t v39 = (v31 - 1) & v31;
      unint64_t v40 = __clz(__rbit64(v31)) | ((void)v30 << 6);
      char v38 = v30;
LABEL_28:
      NSString v9 = *(id *)(*(void *)(v28 + 48) + 8 * v40);
      if (!v9) {
        goto LABEL_45;
      }
LABEL_29:
      uint64_t v204 = v38;
      uint64_t v44 = (char *)[v9 parentContainerItem:v169];
      if (!v44) {
        goto LABEL_139;
      }
      uint64_t v45 = v44;
      unint64_t v16 = v28;
      uint64_t v46 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs;
      uint64_t v47 = *(void **)&v44[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs];
      if (!v47)
      {
        sub_100846AB0();
        uint64_t v47 = *(void **)&v45[v46];
      }
      if (v47) {
        uint64_t v48 = v47;
      }
      else {
        uint64_t v48 = &_swiftEmptySetSingleton;
      }
      uint64_t v49 = *(void (**)(uint64_t))((swift_isaMask & *v9) + 0x88);
      uint64_t v50 = swift_bridgeObjectRetain();
      uint64_t v51 = (uint64_t)v184;
      v49(v50);
      char v52 = sub_1006E3E24(v51, (uint64_t)v48);
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, void *))*v202)(v51, v205);
      if ((v52 & 1) == 0)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandDeleteBoardItems.swift", 98, 2, 36, (uint64_t)"Board item being deleted should be a child of its parent container.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Board item being deleted should be a child of its parent container.");
        uint64_t v161 = _swiftEmptyArrayStorage;
        uint64_t v162 = 36;
        goto LABEL_143;
      }
      uint64_t v12 = v193;
      uint64_t v28 = v16;
      if (*(void *)(v177 + 16))
      {
        uint64_t v53 = v45;
        unint64_t v54 = sub_100956EE4((uint64_t)v53);
        uint64_t v55 = _swiftEmptyArrayStorage;
        if (v56)
        {
          uint64_t v55 = *(double **)(*(void *)(v177 + 56) + 8 * v54);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        uint64_t v55 = _swiftEmptyArrayStorage;
      }
      v206 = v55;
      uint64_t v57 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)v206 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v206 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      NSString v9 = v206;
      char v58 = v45;
      uint64_t v59 = (double *)v177;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v212 = (unint64_t)v59;
      unint64_t v2 = (unint64_t)&v212;
      sub_100976008((uint64_t)v9, v58, isUniquelyReferenced_nonNull_native);
      unint64_t v177 = v212;

      swift_bridgeObjectRelease();
      unint64_t v30 = v204;
      unint64_t v31 = v39;
      if ((v16 & 0x8000000000000000) != 0) {
        goto LABEL_9;
      }
    }
    int64_t v41 = (int64_t)(v30 + 1);
    if (!__OFADD__(v30, 1))
    {
      if (v41 >= v201) {
        goto LABEL_45;
      }
      unint64_t v42 = *(void *)(v203 + 8 * v41);
      char v38 = v30 + 1;
      if (!v42)
      {
        char v38 = v30 + 2;
        if ((uint64_t)(v30 + 2) >= v201) {
          goto LABEL_45;
        }
        unint64_t v42 = *(void *)(v203 + 8 * (void)v38);
        if (!v42)
        {
          char v38 = v30 + 3;
          if ((uint64_t)(v30 + 3) >= v201) {
            goto LABEL_45;
          }
          unint64_t v42 = *(void *)(v203 + 8 * (void)v38);
          if (!v42)
          {
            char v38 = v30 + 4;
            if ((uint64_t)(v30 + 4) >= v201) {
              goto LABEL_45;
            }
            unint64_t v42 = *(void *)(v203 + 8 * (void)v38);
            if (!v42)
            {
              uint64_t v43 = v30 + 5;
              do
              {
                if ((char *)v201 == v43) {
                  goto LABEL_45;
                }
                unint64_t v42 = *(void *)(v203 + 8 * (void)v43++);
              }
              while (!v42);
              char v38 = v43 - 1;
            }
          }
        }
      }
      uint64_t v39 = (v42 - 1) & v42;
      unint64_t v40 = __clz(__rbit64(v42)) + ((void)v38 << 6);
      goto LABEL_28;
    }
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
  }
LABEL_9:
  uint64_t v37 = __CocoaSet.Iterator.next()();
  if (v37)
  {
    unint64_t v212 = v37;
    type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    NSString v9 = v206;
    swift_unknownObjectRelease();
    char v38 = v30;
    uint64_t v39 = v31;
    if (v9) {
      goto LABEL_29;
    }
  }
LABEL_45:
  sub_10052E1EC();
  uint64_t v61 = *(void *)(v177 + 64);
  unint64_t v169 = v177 + 64;
  uint64_t v62 = 1 << *(unsigned char *)(v177 + 32);
  uint64_t v63 = -1;
  if (v62 < 64) {
    uint64_t v63 = ~(-1 << v62);
  }
  unint64_t v64 = v63 & v61;
  int64_t v170 = (unint64_t)(v62 + 63) >> 6;
  uint64_t v171 = OBJC_IVAR____TtC8Freeform26CRLCommandDeleteBoardItems_canDeleteNewlyCreatedItems;
  uint64_t v194 = (void (**)(unint64_t, char *, void *))(v192 + 32);
  uint64_t v182 = (unint64_t *)(v192 + 56);
  id v179 = (unsigned int (**)(char *, uint64_t, void *))(v192 + 48);
  uint64_t v180 = v192 + 16;
  swift_bridgeObjectRetain_n();
  int64_t v65 = 0;
  long long v185 = xmmword_10118E4B0;
  if (v64)
  {
LABEL_48:
    uint64_t v173 = (v64 - 1) & v64;
    int64_t v174 = v65;
    unint64_t v66 = __clz(__rbit64(v64)) | (v65 << 6);
    unint64_t v2 = v177;
    NSString v9 = v205;
    goto LABEL_65;
  }
  while (1)
  {
    BOOL v67 = __OFADD__(v65, 1);
    int64_t v68 = v65 + 1;
    unint64_t v2 = v177;
    if (v67) {
      goto LABEL_134;
    }
    if (v68 >= v170) {
      goto LABEL_129;
    }
    unint64_t v69 = *(void *)(v169 + 8 * v68);
    if (v69)
    {
      NSString v9 = v205;
    }
    else
    {
      int64_t v70 = v68 + 1;
      NSString v9 = v205;
      if (v68 + 1 >= v170) {
        goto LABEL_129;
      }
      unint64_t v69 = *(void *)(v169 + 8 * v70);
      if (!v69)
      {
        int64_t v70 = v68 + 2;
        if (v68 + 2 >= v170) {
          goto LABEL_129;
        }
        unint64_t v69 = *(void *)(v169 + 8 * v70);
        if (!v69)
        {
          int64_t v70 = v68 + 3;
          if (v68 + 3 >= v170) {
            goto LABEL_129;
          }
          unint64_t v69 = *(void *)(v169 + 8 * v70);
          if (!v69)
          {
            int64_t v70 = v68 + 4;
            if (v68 + 4 >= v170) {
              goto LABEL_129;
            }
            unint64_t v69 = *(void *)(v169 + 8 * v70);
            if (!v69)
            {
              int64_t v70 = v68 + 5;
              if (v68 + 5 >= v170)
              {
LABEL_129:
                swift_release();
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }
              unint64_t v69 = *(void *)(v169 + 8 * v70);
              if (!v69)
              {
                while (1)
                {
                  int64_t v68 = v70 + 1;
                  if (__OFADD__(v70, 1)) {
                    break;
                  }
                  if (v68 >= v170) {
                    goto LABEL_129;
                  }
                  unint64_t v69 = *(void *)(v169 + 8 * v68);
                  ++v70;
                  if (v69) {
                    goto LABEL_64;
                  }
                }
                __break(1u);
LABEL_137:

LABEL_138:
                __break(1u);
LABEL_139:
                uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
                sub_1005057FC((uint64_t *)&unk_101672B40);
                initeCGFloat d = swift_initStackObject();
                if (Strong)
                {
                  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
                  id v152 = [v9 description];

                  uint64_t v153 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v155 = v154;

                  *(void *)(inited + 56) = &type metadata for String;
                  unint64_t v156 = sub_100528BE4();
                  *(void *)(inited + 64) = v156;
                  *(void *)(inited + 32) = v153;
                  *(void *)(inited + 40) = v155;
                  id v157 = [Strong description];

                  uint64_t v158 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v160 = v159;

                  *(void *)(inited + 96) = &type metadata for String;
                  *(void *)(inited + 104) = v156;
                  *(void *)(inited + 72) = v158;
                  *(void *)(inited + 80) = v160;
                  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandDeleteBoardItems.swift", 98, 2, 43, (uint64_t)"Trying to delete a board item (%{public}@) which is not in a container (%{public}@).", 84, 2u, inited);
                  sub_100586FD4(inited, (uint64_t)"Trying to delete a board item (%{public}@) which is not in a container (%{public}@).");
                  uint64_t v161 = (double *)inited;
                  uint64_t v162 = 43;
                }
                else
                {
                  *(_OWORD *)(inited + 16) = xmmword_10117E810;
                  id v163 = [v9 description];

                  uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v166 = v165;

                  *(void *)(inited + 56) = &type metadata for String;
                  *(void *)(inited + 64) = sub_100528BE4();
                  *(void *)(inited + 32) = v164;
                  *(void *)(inited + 40) = v166;
                  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandDeleteBoardItems.swift", 98, 2, 45, (uint64_t)"Trying to delete a board item (%{public}@) which has no parent.", 63, 2u, inited);
                  sub_100586FD4(inited, (uint64_t)"Trying to delete a board item (%{public}@) which has no parent.");
                  uint64_t v161 = (double *)inited;
                  uint64_t v162 = 45;
                }
LABEL_143:
                sub_1005871AC((uint64_t)v161, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandDeleteBoardItems.swift", 98, 2, v162);
                SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v167, v168);
                uint64_t result = _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
                return result;
              }
            }
          }
        }
      }
      int64_t v68 = v70;
    }
LABEL_64:
    uint64_t v173 = (v69 - 1) & v69;
    int64_t v174 = v68;
    unint64_t v66 = __clz(__rbit64(v69)) + (v68 << 6);
LABEL_65:
    uint64_t v71 = *(double **)(v2 + 16);
    id v72 = *(id *)(*(void *)(v2 + 48) + 8 * v66);
    if (!v71) {
      goto LABEL_138;
    }
    uint64_t v28 = (uint64_t)v72;
    unint64_t v73 = sub_100956EE4(v28);
    if ((v74 & 1) == 0) {
      goto LABEL_137;
    }
    unint64_t v75 = *(void *)(*(void *)(v2 + 56) + 8 * v73);
    swift_bridgeObjectRetain();
    uint64_t v195 = (char *)v28;

    unint64_t v175 = v75 >> 62;
    if (v75 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v76 = _CocoaArrayWrapper.endIndex.getter();
      int64_t v201 = v75;
      if (!v76) {
        goto LABEL_86;
      }
LABEL_69:
      if (v76 >= 1)
      {
        uint64_t v77 = 0;
        unint64_t v189 = v75 & 0xC000000000000001;
        uint64_t v190 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        unint64_t v188 = v76;
        while (1)
        {
          uint64_t v200 = v77;
          if (v189) {
            uint64_t v84 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v84 = *(id *)(v75 + 8 * v77 + 32);
          }
          uint64_t v85 = v84;
          uint64_t v86 = (void *)static OS_os_log.boardItemLifecycle;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v87 = swift_initStackObject();
          *(_OWORD *)(v87 + 16) = v185;
          uint64_t v88 = *(void (**)(void))((swift_isaMask & *v85) + 0x88);
          uint64_t v199 = v86;
          id v89 = v186;
          v88();
          uint64_t v90 = UUID.uuidString.getter();
          uint64_t v92 = v91;
          uint64_t v196 = v85;
          uint64_t v203 = *v202;
          ((void (*)(char *, void *))v203)(v89, v205);
          *(void *)(v87 + 56) = &type metadata for String;
          unint64_t v93 = sub_100528BE4();
          *(void *)(v87 + 32) = v90;
          uint64_t v198 = v87 + 32;
          *(void *)(v87 + 64) = v93;
          *(void *)(v87 + 40) = v92;
          uint64_t v94 = v85;
          uint64_t v204 = v94;
          id v95 = [v94 description];
          uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v98 = v97;

          *(void *)(v87 + 96) = &type metadata for String;
          *(void *)(v87 + 104) = v93;
          *(void *)(v87 + 72) = v96;
          *(void *)(v87 + 80) = v98;
          uint64_t v99 = *(void (**)(uint64_t))(**(void **)&v195[v190] + 256);
          id v100 = v195;
          uint64_t v101 = swift_retain();
          uint64_t v102 = v187;
          v99(v101);

          swift_release();
          uint64_t v103 = UUID.uuidString.getter();
          uint64_t v105 = v104;
          unint64_t v106 = v102;
          uint64_t v107 = v205;
          ((void (*)(char *, void *))v203)(v106, v205);
          *(void *)(v87 + 136) = &type metadata for String;
          *(void *)(v87 + 144) = v93;
          *(void *)(v87 + 112) = v103;
          *(void *)(v87 + 120) = v105;
          long long v108 = v100;
          id v109 = [v108 description];
          uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v112 = v111;

          *(void *)(v87 + 176) = &type metadata for String;
          *(void *)(v87 + 184) = v93;
          unint64_t v197 = v93;
          *(void *)(v87 + 152) = v110;
          *(void *)(v87 + 160) = v112;
          uint64_t v113 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v204) + 0x2E8))();
          if (v113)
          {
            uint64_t v114 = (void *)v113;
            uint64_t v115 = *(void *)(v113 + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
                 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
            swift_beginAccess();
            uint64_t v116 = v115;
            uint64_t v117 = v183;
            sub_100530898(v116, v183);
            swift_retain();
            sub_1005057FC(&qword_101674550);
            uint64_t v118 = v184;
            CRRegister.wrappedValue.getter();
            sub_1005308FC(v117);

            swift_release();
            uint64_t v119 = UUID.uuidString.getter();
            unint64_t v82 = v120;
            ((void (*)(char *, void *))v203)(v118, v107);
            uint64_t v78 = (uint64_t *)(v87 + 192);
            unint64_t v121 = v197;
            *(void *)(v87 + 216) = &type metadata for String;
            *(void *)(v87 + 224) = v121;
            NSString v9 = v107;
            unint64_t v16 = v188;
            if (v82)
            {
              *uint64_t v78 = v119;
              uint64_t v12 = v193;
              uint64_t v80 = v200;
              unint64_t v75 = v201;
              uint64_t v81 = v199;
              goto LABEL_73;
            }
            uint64_t v12 = v193;
            unint64_t v75 = v201;
          }
          else
          {
            uint64_t v78 = (uint64_t *)(v87 + 192);
            unint64_t v79 = v197;
            *(void *)(v87 + 216) = &type metadata for String;
            *(void *)(v87 + 224) = v79;
            NSString v9 = v107;
            uint64_t v12 = v193;
            unint64_t v75 = v201;
            unint64_t v16 = v188;
          }
          uint64_t v81 = v199;
          uint64_t v80 = v200;
          *uint64_t v78 = 7104878;
          unint64_t v82 = 0xE300000000000000;
LABEL_73:
          uint64_t v77 = v80 + 1;
          *(void *)(v87 + 200) = v82;
          uint64_t v83 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v81, (uint64_t)&_mh_execute_header, v83, (uint64_t)"⭕ CRLCommandDeleteBoardItems commit() remove %{public}@%{public}@ from parent %{public}@%{public}@. Board: %{public}@", 119, 0, v87);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          if (v16 == v77) {
            goto LABEL_86;
          }
        }
      }
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    uint64_t v76 = *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    int64_t v201 = v75;
    if (v76) {
      goto LABEL_69;
    }
LABEL_86:
    swift_bridgeObjectRelease();
    if (v175)
    {
      swift_bridgeObjectRetain();
      uint64_t v122 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v122)
      {
LABEL_98:
        swift_bridgeObjectRelease();
        uint64_t v124 = _swiftEmptyArrayStorage;
        goto LABEL_99;
      }
    }
    else
    {
      uint64_t v122 = *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v122) {
        goto LABEL_98;
      }
    }
    unint64_t v212 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v2 = (unint64_t)&v212;
    sub_1006BB544(0, v122 & ~(v122 >> 63), 0);
    if (v122 < 0) {
      goto LABEL_131;
    }
    uint64_t v123 = 0;
    uint64_t v124 = (double *)v212;
    unint64_t v125 = v75 & 0xC000000000000001;
    do
    {
      if (v125) {
        uint64_t v126 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v126 = *(id *)(v75 + 8 * v123 + 32);
      }
      int v127 = v126;
      (*(void (**)(void))((swift_isaMask & *v126) + 0x88))();

      unint64_t v212 = (unint64_t)v124;
      unint64_t v129 = *((void *)v124 + 2);
      unint64_t v128 = *((void *)v124 + 3);
      if (v129 >= v128 >> 1)
      {
        sub_1006BB544(v128 > 1, v129 + 1, 1);
        uint64_t v124 = (double *)v212;
      }
      ++v123;
      *((void *)v124 + 2) = v129 + 1;
      (*(void (**)(unint64_t, char *, void *))(v192 + 32))((unint64_t)v124+ ((*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80))+ *(void *)(v192 + 72) * v129, v12, v205);
      unint64_t v75 = v201;
    }
    while (v122 != v123);
    swift_bridgeObjectRelease();
    NSString v9 = v205;
LABEL_99:
    LODWORD(v200) = *(unsigned __int8 *)(v172 + v171);
    uint64_t v130 = v176;
    sub_10103405C((uint64_t)v195, (uint64_t)&off_101518040);
    uint64_t v131 = v182;
    uint64_t v176 = v130;
    if (v130)
    {
      swift_bridgeObjectRelease();

      swift_release();
      goto LABEL_127;
    }
    unint64_t v212 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v132 = *((void *)v124 + 2);
    if (v132)
    {
      uint64_t v199 = (char *)((unint64_t)v182 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
      uint64_t v133 = OBJC_IVAR____TtC8Freeform16CRLContainerItem_items;
      uint64_t v134 = (char *)v124
           + ((*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80));
      uint64_t v135 = *(char **)(v192 + 16);
      uint64_t v203 = *(void *)(v192 + 72);
      uint64_t v204 = v135;
      swift_bridgeObjectRetain();
      unint64_t v136 = v181;
      int64_t v201 = v133;
      while (1)
      {
        ((void (*)(char *, char *, void *))v204)(v136, v134, v9);
        unint64_t v16 = *v131;
        ((void (*)(char *, void, uint64_t, void *))*v131)(v136, 0, 1, v9);
        if ((*v179)(v136, 1, v9) == 1) {
          goto LABEL_113;
        }
        uint64_t v137 = v178;
        (*v194)(v178, v136, v9);
        uint64_t v138 = *(void *)&v195[v133];
        if (*(void *)(v138 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v139 = sub_100955FC8(v137);
          if (v140)
          {
            id v141 = *(id *)(*(void *)(v138 + 56) + 8 * v139);
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, void *))*v202)(v137, v9);
            id v142 = v141;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v212 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v212 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            NSString v9 = v205;
            uint64_t v131 = v182;
            uint64_t v133 = v201;
            goto LABEL_104;
          }
          swift_bridgeObjectRelease();
        }
        ((void (*)(uint64_t, void *))*v202)(v137, v9);
        uint64_t v131 = v182;
LABEL_104:
        v134 += v203;
        --v132;
        unint64_t v136 = v181;
        if (!v132)
        {
          ((void (*)(char *, uint64_t, uint64_t, void *))v16)(v181, 1, 1, v9);
          goto LABEL_113;
        }
      }
    }
    unint64_t v16 = *v182;
    swift_bridgeObjectRetain();
    ((void (*)(char *, uint64_t, uint64_t, void *))v16)(v181, 1, 1, v9);
LABEL_113:
    swift_bridgeObjectRelease();
    id v143 = v195;
    uint64_t v144 = v176;
    sub_10084C770((uint64_t)v124);
    if (v144) {
      break;
    }
    uint64_t v12 = 0;
    unint64_t v2 = v212;
    if (v212 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v145 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v146 = v200;
      if (v145)
      {
LABEL_116:
        if (v145 < 1) {
          goto LABEL_132;
        }
        uint64_t v147 = 0;
        unint64_t v16 = v2 & 0xC000000000000001;
        do
        {
          if (v16) {
            uint64_t v148 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v148 = (double *)*(id *)(v2 + 8 * v147 + 32);
          }
          NSString v9 = v148;
          ++v147;
          sub_101031278(v148, v146, 0, v191);
        }
        while (v145 != v147);
      }
    }
    else
    {
      uint64_t v145 = *(void *)((v212 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v146 = v200;
      if (v145) {
        goto LABEL_116;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v28 = (uint64_t)v195;
    sub_101023724((uint64_t)v195, (uint64_t)&off_101518040, 2u);
    uint64_t v176 = 0;

    swift_bridgeObjectRelease();
    uint64_t v12 = v193;
    unint64_t v64 = v173;
    int64_t v65 = v174;
    if (v173) {
      goto LABEL_48;
    }
  }
  uint64_t v176 = v144;
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
LABEL_127:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008E684C()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_1008E6890()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandDeleteBoardItems();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommandDeleteBoardItems()
{
  return self;
}

uint64_t sub_1008E6938()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform26CRLCommandDeleteBoardItems_actionString);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1008E6978(char a1, uint64_t a2, uint64_t a3)
{
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(*(void *)(static AASApplicationManager.shared
                            + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                + 16) == 1)
  {
    uint64_t v6 = swift_allocObject();
    *(unsigned char *)(v6 + 16) = a1 & 1;
    *(void *)(v6 + 24) = a2;
    *(void *)(v6 + 32) = a3;
    swift_retain();
    sub_1005173A0(a2);
    Tracker.whenSession(block:)();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Skip submit session event for unselected user", 45, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1008E6B24()
{
  type metadata accessor for BoardInitialAppStateEvent(0);
  sub_1008E7C14();
  memset(v1, 0, sizeof(v1));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  return sub_10052E2B0((uint64_t)v1);
}

uint64_t sub_1008E6BAC(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  unint64_t v75 = (char *)&v73 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  char v74 = (char *)&v73 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t result = __chkstk_darwin(v16, v19);
  uint64_t v22 = (char *)&v73 - v21;
  uint64_t v23 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderBoardCount;
  uint64_t v24 = a1;
  uint64_t v25 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderBoardCount);
  if (!v25)
  {
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
    return result;
  }
  uint64_t v26 = sub_1005057FC(&qword_101670F30);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v22, 1, 5, v26);
  uint64_t v28 = *(void *)(v25 + 16);
  unint64_t v73 = v8;
  if (v28)
  {
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_10095697C((uint64_t)v22);
    if (v30) {
      uint64_t v31 = *(void *)(*(void *)(v25 + 56) + 8 * v29);
    }
    else {
      uint64_t v31 = -1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = -1;
  }
  uint64_t result = sub_1006C6EB8((uint64_t)v22);
  uint64_t v32 = v2[2];
  if (v32 <= v31) {
    uint64_t v32 = v31;
  }
  v2[2] = v32;
  uint64_t v33 = *(void *)(v24 + v23);
  if (!v33) {
    goto LABEL_112;
  }
  uint64_t v34 = v24;
  v27(v18, 4, 5, v26);
  if (*(void *)(v33 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v35 = sub_10095697C((uint64_t)v18);
    if (v36) {
      uint64_t v37 = *(void *)(*(void *)(v33 + 56) + 8 * v35);
    }
    else {
      uint64_t v37 = -1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = -1;
  }
  uint64_t result = sub_1006C6EB8((uint64_t)v18);
  uint64_t v38 = v2[3];
  if (v38 <= v37) {
    uint64_t v38 = v37;
  }
  v2[3] = v38;
  uint64_t v39 = *(void *)(v24 + v23);
  if (!v39) {
    goto LABEL_113;
  }
  uint64_t v40 = (uint64_t)v74;
  v27(v74, 3, 5, v26);
  uint64_t v41 = (uint64_t)v75;
  if (*(void *)(v39 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v42 = sub_10095697C(v40);
    if (v43) {
      uint64_t v44 = *(void *)(*(void *)(v39 + 56) + 8 * v42);
    }
    else {
      uint64_t v44 = -1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v44 = -1;
  }
  uint64_t result = sub_1006C6EB8(v40);
  uint64_t v45 = v2[4];
  if (v45 <= v44) {
    uint64_t v45 = v44;
  }
  v2[4] = v45;
  uint64_t v46 = *(void *)(v34 + v23);
  if (!v46) {
    goto LABEL_114;
  }
  v27((char *)v41, 2, 5, v26);
  if (*(void *)(v46 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v47 = sub_10095697C(v41);
    if (v48) {
      uint64_t v49 = *(void *)(*(void *)(v46 + 56) + 8 * v47);
    }
    else {
      uint64_t v49 = -1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = -1;
  }
  uint64_t result = sub_1006C6EB8(v41);
  uint64_t v50 = v2[5];
  if (v50 <= v49) {
    uint64_t v50 = v49;
  }
  v2[5] = v50;
  uint64_t v51 = *(void *)(v34 + v23);
  if (!v51) {
    goto LABEL_115;
  }
  uint64_t v52 = (uint64_t)v73;
  v27(v73, 5, 5, v26);
  if (*(void *)(v51 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v53 = sub_10095697C(v52);
    if (v54) {
      uint64_t v55 = *(void *)(*(void *)(v51 + 56) + 8 * v53);
    }
    else {
      uint64_t v55 = -1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v55 = -1;
  }
  sub_1006C6EB8(v52);
  uint64_t v56 = v2[6];
  if (v56 <= v55) {
    uint64_t v56 = v55;
  }
  v2[6] = v56;
  uint64_t v57 = v2[2];
  if (v57 <= 100)
  {
    if (v57 <= 10)
    {
      if (v57 <= 5)
      {
        if (v57 <= 2)
        {
          if (v57 >= 0) {
            uint64_t v58 = v2[2];
          }
          else {
            uint64_t v58 = 0xFFFFFFFFLL;
          }
        }
        else
        {
          uint64_t v58 = 5;
        }
      }
      else
      {
        uint64_t v58 = 10;
      }
    }
    else
    {
      uint64_t v58 = 100;
    }
  }
  else
  {
    uint64_t v58 = 101;
  }
  uint64_t v59 = v2[3];
  if (v59 <= 100)
  {
    if (v59 <= 10)
    {
      if (v59 <= 5)
      {
        if (v59 <= 2)
        {
          if (v59 >= 0) {
            unint64_t v60 = v59 << 32;
          }
          else {
            unint64_t v60 = 0xFFFFFFFF00000000;
          }
        }
        else
        {
          unint64_t v60 = 0x500000000;
        }
      }
      else
      {
        unint64_t v60 = 0xA00000000;
      }
    }
    else
    {
      unint64_t v60 = 0x6400000000;
    }
  }
  else
  {
    unint64_t v60 = 0x6500000000;
  }
  uint64_t v61 = v2[4];
  if (v61 <= 100)
  {
    if (v61 <= 10)
    {
      if (v61 <= 5)
      {
        if (v61 <= 2)
        {
          if (v61 >= 0) {
            uint64_t v62 = v2[4];
          }
          else {
            uint64_t v62 = 0xFFFFFFFFLL;
          }
        }
        else
        {
          uint64_t v62 = 5;
        }
      }
      else
      {
        uint64_t v62 = 10;
      }
    }
    else
    {
      uint64_t v62 = 100;
    }
  }
  else
  {
    uint64_t v62 = 101;
  }
  uint64_t v63 = v2[5];
  if (v63 > 100)
  {
    unint64_t v64 = 0x6500000000;
    if (v56 > 100) {
      goto LABEL_100;
    }
LABEL_90:
    if (v56 <= 10)
    {
      if (v56 <= 5)
      {
        if (v56 <= 2)
        {
          if (v56 < 0) {
            int v65 = -1;
          }
          else {
            int v65 = v56;
          }
        }
        else
        {
          int v65 = 5;
        }
      }
      else
      {
        int v65 = 10;
      }
    }
    else
    {
      int v65 = 100;
    }
    goto LABEL_101;
  }
  if (v63 > 10)
  {
    unint64_t v64 = 0x6400000000;
    if (v56 > 100) {
      goto LABEL_100;
    }
    goto LABEL_90;
  }
  if (v63 > 5)
  {
    unint64_t v64 = 0xA00000000;
    if (v56 > 100) {
      goto LABEL_100;
    }
    goto LABEL_90;
  }
  if (v63 <= 2)
  {
    if (v63 >= 0) {
      unint64_t v64 = v63 << 32;
    }
    else {
      unint64_t v64 = 0xFFFFFFFF00000000;
    }
    if (v56 > 100) {
      goto LABEL_100;
    }
    goto LABEL_90;
  }
  unint64_t v64 = 0x500000000;
  if (v56 <= 100) {
    goto LABEL_90;
  }
LABEL_100:
  int v65 = 101;
LABEL_101:
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v66 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v67 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v67, (uint64_t)"Update BoardInitialAppStateEvent data", 37, 2, (uint64_t)_swiftEmptyArrayStorage);

  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  uint64_t v68 = static AASApplicationManager.shared;
  sub_1005057FC(&qword_10167A078);
  uint64_t v69 = type metadata accessor for DataEventTrait();
  uint64_t v70 = *(void *)(v69 - 8);
  unint64_t v71 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  uint64_t v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, void, uint64_t))(v70 + 104))(v72 + v71, enum case for DataEventTrait.unique(_:), v69);
  if (!*(void *)(v68 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator)) {
    return swift_bridgeObjectRelease();
  }
  swift_retain();
  sub_1008E7C6C(v60 | v58, v64 | v62, v65, v72);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1008E72FC()
{
  uint64_t v1 = type metadata accessor for ContinuousClock();
  v0[8] = v1;
  v0[9] = *(void *)(v1 - 8);
  v0[10] = swift_task_alloc();
  return _swift_task_switch(sub_1008E73B8, 0, 0);
}

uint64_t sub_1008E73B8()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_101686300 + dword_101686300);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008E7480;
  return v3(3000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1008E7480()
{
  objc_super v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[9] + 8))(v2[10], v2[8]);
  if (v0) {
    uint64_t v3 = sub_1008E77F0;
  }
  else {
    uint64_t v3 = sub_1008E75E8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1008E75E8()
{
  uint64_t v1 = *(void *)(v0 + 96);
  static Task<>.checkCancellation()();
  if (v1)
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v2 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v3 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Submit BoardInitialAppStateEvent canceled.", 42, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_errorRelease();
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v5 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Reached timerInterval for BoardInitialAppStateEvent, submit event", 65, 2, (uint64_t)_swiftEmptyArrayStorage);

    if (qword_10166EDC8 != -1) {
      swift_once();
    }
    if (*(void *)(static AASApplicationManager.shared
                   + OBJC_IVAR____TtC8Freeform21AASApplicationManager_trackersCoordinator))
    {
      swift_retain();
      sub_1008E6978(0, 0, 0);
      swift_release();
    }
  }
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1008E77F0()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v2 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Submit BoardInitialAppStateEvent canceled.", 42, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

__n128 sub_1008E78EC()
{
  if (v0[3].n128_u64[1])
  {
    swift_retain();
    sub_1005057FC(&qword_101672BD0);
    Task.cancel()();
    swift_release();
  }
  v0[3].n128_u64[1] = 0;
  swift_release();
  v0[3].n128_u64[0] = -1;
  result.n128_u64[0] = -1;
  result.n128_u64[1] = -1;
  v0[1] = result;
  v0[2] = result;
  return result;
}

uint64_t sub_1008E7970()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLAASApplicationTracker()
{
  return self;
}

uint64_t sub_1008E79CC()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  *(void *)(v5 + 56) = sub_1006D9104((uint64_t)v4, (uint64_t)&unk_101686CF8, v7);
  return swift_release();
}

double sub_1008E7AC0()
{
  *(void *)&double result = sub_1008E78EC().n128_u64[0];
  return result;
}

uint64_t sub_1008E7AE4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1008E7B1C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528488;
  return sub_1008E72FC();
}

uint64_t sub_1008E7BC8()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1008E7C08()
{
  return sub_1008E6B24();
}

unint64_t sub_1008E7C14()
{
  unint64_t result = qword_101686D00;
  if (!qword_101686D00)
  {
    type metadata accessor for BoardInitialAppStateEvent(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686D00);
  }
  return result;
}

uint64_t sub_1008E7C6C(unint64_t a1, unint64_t a2, int a3, uint64_t a4)
{
  int v6 = a2;
  int v7 = a1;
  unint64_t v8 = HIDWORD(a1);
  unint64_t v9 = HIDWORD(a2);
  uint64_t v16 = &type metadata for BoardCollectionData;
  unint64_t v17 = sub_1008E7E44();
  v15[0] = v7;
  v15[1] = v8;
  v15[2] = v6;
  v15[3] = v9;
  void v15[4] = a3;
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(*(void *)(static AASApplicationManager.shared
                            + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager)
                + 16) == 1)
  {
    sub_1005498A4((uint64_t)v15, (uint64_t)v14);
    uint64_t v10 = swift_allocObject();
    sub_10053974C(v14, v10 + 16);
    *(void *)(v10 + 56) = a4;
    swift_retain();
    swift_bridgeObjectRetain();
    Tracker.whenSession(block:)();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_10166FA40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v11 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Skip push session data for unselected user", 42, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
}

unint64_t sub_1008E7E44()
{
  unint64_t result = qword_101686D08;
  if (!qword_101686D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686D08);
  }
  return result;
}

uint64_t sub_1008E7E98()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1008E7FCC()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v5, v6);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100750F28(v0 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      id v11 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v12 = (uint64_t)v8;
      goto LABEL_7;
    }
    sub_1008EA7E4((uint64_t)v8, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v10 = sub_1005057FC(&qword_101670F30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v4, 5, v10))
    {
      id v11 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      uint64_t v12 = (uint64_t)v4;
LABEL_7:
      sub_1008EA730(v12, v11);
      return 1;
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v4, v14);
  }
  else
  {
    sub_1008EA730((uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  return 0;
}

uint64_t sub_1008E81F4(char a1, uint64_t (*a2)(id), uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4;
  unint64_t v6 = a4 >> 62;
  if (a1)
  {
    if (!v6)
    {
      id v7 = *(id *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7) {
        goto LABEL_24;
      }
LABEL_54:
      swift_bridgeObjectRelease();
      return (uint64_t)v7;
    }
    swift_bridgeObjectRetain();
    id v7 = (id)_CocoaArrayWrapper.endIndex.getter();
    if (!v7) {
      goto LABEL_54;
    }
    while (1)
    {
LABEL_24:
      unint64_t v15 = v4 >> 62;
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v17) {
          goto LABEL_56;
        }
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v18) {
          goto LABEL_46;
        }
      }
      else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_45;
      }
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v15) {
          goto LABEL_29;
        }
      }
      else
      {
        if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_48;
        }
        id v7 = *(id *)(v4 + 32);
        if (!v15)
        {
LABEL_29:
          uint64_t v16 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_35;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_35:
      if (!v16) {
        goto LABEL_50;
      }
      sub_100F4CA70(0, 1);
      if (a2(v7)) {
        goto LABEL_54;
      }
      id v19 = [v7 children];
      type metadata accessor for CRLBoardLibraryViewModelItemNode();
      unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1006E0C58(v20);
      unint64_t v4 = a4;
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        id v7 = (id)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v7) {
          goto LABEL_54;
        }
      }
      else
      {
        id v7 = *(id *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v7) {
          goto LABEL_54;
        }
      }
    }
  }
  if (v6) {
    goto LABEL_51;
  }
  id v7 = *(id *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_54;
  }
  while (1)
  {
    unint64_t v8 = v4 >> 62;
    if (v4 >> 62) {
      break;
    }
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
LABEL_6:
    if ((v4 & 0xC000000000000001) != 0)
    {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (v8) {
        goto LABEL_14;
      }
    }
    else
    {
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_47;
      }
      id v7 = *(id *)(v4 + 32);
      if (v8)
      {
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
    if (v9)
    {
      sub_100F4CA70(0, 1);
      if (a2(v7)) {
        goto LABEL_54;
      }
      id v13 = [v7 children];
      type metadata accessor for CRLBoardLibraryViewModelItemNode();
      unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100F49364(0, 0, v14);
      unint64_t v4 = a4;
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        id v7 = (id)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v7) {
          goto LABEL_54;
        }
      }
      else
      {
        id v7 = *(id *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v7) {
          goto LABEL_54;
        }
      }
    }
    else
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      swift_bridgeObjectRetain();
      id v7 = (id)_CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        goto LABEL_54;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v12) {
      goto LABEL_44;
    }
    goto LABEL_6;
  }
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_1008E8618(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101686D70);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_1008EA790();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  sub_1008EA8E0(&qword_101686D78, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Item);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    id v10 = [v3 children];
    type metadata accessor for CRLBoardLibraryViewModelItemNode();
    uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = v11;
    v13[15] = 1;
    sub_1005057FC(&qword_10167ACC8);
    sub_1008EA84C(&qword_101686D80, &qword_101686D88);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

char *sub_1008E8864(void *a1)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101686D48);
  uint64_t v18 = *(void *)(v8 - 8);
  uint64_t v19 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
  uint64_t v12 = a1[3];
  unint64_t v20 = a1;
  sub_10050F848(a1, v12);
  sub_1008EA790();
  id v13 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
    swift_bridgeObjectRelease();
    type metadata accessor for CRLBoardLibraryViewModelItemNode();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v23) = 0;
    sub_1008EA8E0(&qword_101686D58, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v14 = v19;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1008EA7E4((uint64_t)v7, (uint64_t)&v13[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);

    uint64_t v16 = (objc_class *)type metadata accessor for CRLBoardLibraryViewModelItemNode();
    v22.receiver = v13;
    v22.super_class = v16;
    id v17 = [super init];
    sub_1005057FC(&qword_10167ACC8);
    char v21 = 1;
    sub_1008EA84C(&qword_101686D60, &qword_101686D68);
    id v13 = (char *)v17;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v14);
    *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = v23;
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
  }
  return v13;
}

uint64_t sub_1008E8C28(char *a1, char *a2)
{
  return sub_10094E25C(*a1, *a2);
}

Swift::Int sub_1008E8C34()
{
  return Hasher._finalize()();
}

uint64_t sub_1008E8CB0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1008E8D18()
{
  return Hasher._finalize()();
}

uint64_t sub_1008E8D90@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015042C8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1008E8DF0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1835365481;
  if (*v1) {
    uint64_t v2 = 0x6E6572646C696863;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1008E8E28@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015042C8, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1008E8E8C(uint64_t a1)
{
  unint64_t v2 = sub_1008EA790();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E8EC8(uint64_t a1)
{
  unint64_t v2 = sub_1008EA790();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008E8F04(uint64_t a1)
{
  sub_100557A70(a1, (uint64_t)v9);
  if (!v10)
  {
    sub_10052E2B0((uint64_t)v9);
    goto LABEL_7;
  }
  type metadata accessor for CRLBoardLibraryViewModelItemNode();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    unsigned __int8 v6 = 0;
    return v6 & 1;
  }
  if ((sub_100DDCC28((uint64_t)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v8 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item) & 1) == 0)
  {

    goto LABEL_7;
  }
  id v2 = [v1 children];
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v4 = [v8 children];
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unsigned __int8 v6 = sub_1005BED54(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

id sub_1008E90D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoardLibraryViewModelItemNode();
  return [super dealloc];
}

uint64_t sub_1008E9168()
{
  return type metadata accessor for CRLBoardLibraryViewModelItemNode();
}

uint64_t type metadata accessor for CRLBoardLibraryViewModelItemNode()
{
  uint64_t result = qword_101686D38;
  if (!qword_101686D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008E91BC()
{
  uint64_t result = type metadata accessor for CRLBoardLibraryViewModel.Item(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

char *sub_1008E9258@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for CRLBoardLibraryViewModelItemNode());
  uint64_t result = sub_1008E8864(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1008E92B0(void *a1)
{
  return sub_1008E8618(a1);
}

BOOL sub_1008E92D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v2, v3);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100750F28(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayloaCGFloat d = swift_getEnumCaseMultiPayload();
  char v7 = type metadata accessor for CRLBoardLibraryViewModel.Item;
  if (EnumCaseMultiPayload == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    char v7 = type metadata accessor for CRLBoardIdentifier;
  }
  sub_1008EA730((uint64_t)v5, v7);
  return EnumCaseMultiPayload != 2;
}

void *sub_1008E93E0(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v2, v3);
  id v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v8, v11);
  uint64_t v14 = (char *)&v29 - v13;
  __chkstk_darwin(v12, v15);
  id v17 = (char *)&v29 - v16;
  unint64_t v31 = a1;
  uint64_t v32 = &_swiftEmptySetSingleton;
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v18)
  {
    while (1)
    {
      unint64_t v19 = a1 >> 62;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (!v30)
        {
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v23) {
          goto LABEL_24;
        }
      }
      else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v19)
        {
LABEL_8:
          uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_14;
        }
LABEL_13:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
LABEL_14:
        if (!v21) {
          goto LABEL_26;
        }
        sub_100F4CA70(0, 1);
        id v24 = [v20 children];
        type metadata accessor for CRLBoardLibraryViewModelItemNode();
        unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1006E0C58(v25);
        sub_100750F28((uint64_t)v20 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          sub_1005057FC(&qword_101677100);
          swift_bridgeObjectRelease();
          sub_1008EA7E4((uint64_t)v5, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
          sub_100750F28((uint64_t)v17, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090((uint64_t)v14, (uint64_t)v10);
          sub_1008EA730((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
          uint64_t v26 = (uint64_t)v17;
          uint64_t v27 = type metadata accessor for CRLBoardIdentifier;
        }
        else
        {
          uint64_t v27 = type metadata accessor for CRLBoardLibraryViewModel.Item;
          uint64_t v26 = (uint64_t)v5;
        }
        sub_1008EA730(v26, v27);

        a1 = v31;
        if (v31 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v28)
          {
LABEL_22:
            swift_bridgeObjectRelease();
            return v32;
          }
        }
        else if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_22;
        }
      }
      else
      {
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v20 = *(id *)(a1 + 32);
          if (!v19) {
            goto LABEL_8;
          }
          goto LABEL_13;
        }
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        swift_bridgeObjectRetain();
        if (!_CocoaArrayWrapper.endIndex.getter()) {
          break;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1008E97DC(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v2, v3);
  id v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)v31 - v12;
  unint64_t v14 = sub_100A39EF8((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v33 = a1;
  if (a1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    do
    {
      v31[1] = v14;
      unint64_t v16 = v14;
      while (1)
      {
        unint64_t v14 = a1 >> 62;
        if (!(a1 >> 62)) {
          break;
        }
        swift_bridgeObjectRetain();
        uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v19)
        {
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v21) {
          goto LABEL_25;
        }
LABEL_6:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v14) {
            goto LABEL_14;
          }
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_26;
          }
          id v17 = *(id *)(a1 + 32);
          if (v14)
          {
LABEL_14:
            swift_bridgeObjectRetain();
            uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            goto LABEL_15;
          }
        }
        uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
        if (!v18) {
          goto LABEL_27;
        }
        sub_100F4CA70(0, 1);
        id v22 = [v17 children];
        type metadata accessor for CRLBoardLibraryViewModelItemNode();
        unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1006E0C58(v23);
        sub_100750F28((uint64_t)v17 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          id v24 = (uint64_t *)&v5[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
          uint64_t v26 = *v24;
          uint64_t v25 = v24[1];
          sub_1008EA7E4((uint64_t)v5, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
          sub_100750F28((uint64_t)v13, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v32 = v16;
          sub_100974BA4(v26, v25, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
          unint64_t v16 = v32;
          swift_bridgeObjectRelease();
          sub_1008EA730((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
          uint64_t v28 = (uint64_t)v13;
          uint64_t v29 = type metadata accessor for CRLBoardIdentifier;
        }
        else
        {
          uint64_t v29 = type metadata accessor for CRLBoardLibraryViewModel.Item;
          uint64_t v28 = (uint64_t)v5;
        }
        sub_1008EA730(v28, v29);

        a1 = v33;
        if (v33 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v30)
          {
LABEL_23:
            swift_bridgeObjectRelease();
            goto LABEL_30;
          }
        }
        else if (!*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_23;
        }
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_6;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    while (_CocoaArrayWrapper.endIndex.getter());
  }
  swift_bridgeObjectRelease();
  unint64_t v16 = v14;
LABEL_30:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1008E9BF8(char a1, unsigned __int8 a2, unint64_t a3)
{
  int v5 = a2;
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v10 = (unsigned __int8 *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (unsigned __int8 *)&v29 - v12;
  unint64_t v30 = a3;
  unint64_t v14 = a3 >> 62;
  if (a1)
  {
    if (!v14)
    {
      uint64_t v25 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v25) {
        goto LABEL_26;
      }
      goto LABEL_57;
    }
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_57:
      swift_bridgeObjectRelease();
      return 0;
    }
    while (1)
    {
LABEL_26:
      unint64_t v26 = a3 >> 62;
      if (a3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = (unsigned __int8 *)_CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v13) {
          goto LABEL_60;
        }
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v27) {
          goto LABEL_49;
        }
      }
      else if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_48;
      }
      if ((a3 & 0xC000000000000001) != 0)
      {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (v26) {
          goto LABEL_36;
        }
      }
      else
      {
        if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_51;
        }
        id v17 = *(id *)(a3 + 32);
        if (v26)
        {
LABEL_36:
          swift_bridgeObjectRetain();
          uint64_t v13 = (unsigned __int8 *)_CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
      }
      uint64_t v13 = *(unsigned __int8 **)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_37:
      if (!v13) {
        goto LABEL_53;
      }
      sub_100F4CA70(0, 1);
      sub_100750F28((uint64_t)v17 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1008EA730((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      else if (*v10 == v5)
      {
        goto LABEL_45;
      }
      id v28 = [v17 children];
      type metadata accessor for CRLBoardLibraryViewModelItemNode();
      uint64_t v13 = (unsigned __int8 *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1006E0C58((unint64_t)v13);
      a3 = v30;
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        id v17 = (id)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v17)
        {
LABEL_45:
          swift_bridgeObjectRelease();
          return (uint64_t)v17;
        }
      }
      else
      {
        id v17 = *(id *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v17) {
          goto LABEL_45;
        }
      }
    }
  }
  if (v14) {
    goto LABEL_54;
  }
  uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v15) {
    goto LABEL_57;
  }
  while (1)
  {
    unint64_t v16 = a3 >> 62;
    if (a3 >> 62) {
      break;
    }
    if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
LABEL_6:
    if ((a3 & 0xC000000000000001) != 0)
    {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (v16) {
        goto LABEL_14;
      }
    }
    else
    {
      if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_50;
      }
      id v17 = *(id *)(a3 + 32);
      if (v16)
      {
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    uint64_t v18 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
    if (v18)
    {
      sub_100F4CA70(0, 1);
      sub_100750F28((uint64_t)v17 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1008EA730((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      else if (*v13 == v5)
      {
        goto LABEL_45;
      }
      id v22 = [v17 children];
      type metadata accessor for CRLBoardLibraryViewModelItemNode();
      unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100F49364(0, 0, v23);
      a3 = v30;
      if (v30 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v24) {
          goto LABEL_57;
        }
      }
      else if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_57;
      }
    }
    else
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      swift_bridgeObjectRetain();
      if (!_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_57;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v21) {
      goto LABEL_47;
    }
    goto LABEL_6;
  }
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_1008EA12C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v11, v12);
  unint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100750F28(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1008EA7E4((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100DD59E0((uint64_t)v6);
    char v15 = static UUID.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    sub_1008EA730((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  }
  else
  {
    sub_1008EA730((uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1008EA344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100750F28(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1008EA7E4((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    char v12 = sub_100DDC744((uint64_t)v7, a2);
    sub_1008EA730((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  }
  else
  {
    sub_1008EA730((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1008EA4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v28 - v10;
  __chkstk_darwin(v12, v13);
  char v15 = (char *)&v28 - v14;
  uint64_t v16 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100750F28(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_1008EA7E4((uint64_t)v19, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    char v20 = static UUID.== infix(_:_:)();
    sub_100750F28((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    sub_100750F28(a2, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    if (v20)
    {
      uint64_t v21 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v22 = *(void *)&v11[v21];
      uint64_t v23 = *(void *)&v11[v21 + 8];
      uint64_t v24 = &v7[v21];
      if (v22 == *(void *)v24 && v23 == *((void *)v24 + 1)) {
        char v26 = 1;
      }
      else {
        char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    else
    {
      char v26 = 0;
    }
    sub_1008EA730((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    sub_1008EA730((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    sub_1008EA730((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    sub_1008EA730((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
    char v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_1008EA730(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1008EA790()
{
  unint64_t result = qword_101686D50;
  if (!qword_101686D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686D50);
  }
  return result;
}

uint64_t sub_1008EA7E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1008EA84C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_10167ACC8);
    sub_1008EA8E0(a2, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModelItemNode);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008EA8E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardLibraryViewModelItemNode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008EA9F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryViewModelItemNode.CodingKeys()
{
  return &type metadata for CRLBoardLibraryViewModelItemNode.CodingKeys;
}

unint64_t sub_1008EAA30()
{
  unint64_t result = qword_101686D90;
  if (!qword_101686D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686D90);
  }
  return result;
}

unint64_t sub_1008EAA88()
{
  unint64_t result = qword_101686D98;
  if (!qword_101686D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686D98);
  }
  return result;
}

unint64_t sub_1008EAAE0()
{
  unint64_t result = qword_101686DA0;
  if (!qword_101686DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DA0);
  }
  return result;
}

uint64_t destroy for CRLWPTextPresetData(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 != 255) {
    sub_10051ACA0(*(void *)a1, *(void *)(a1 + 8), v2 & 1);
  }
  if (*(void *)(a1 + 160))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLWPTextPresetData(uint64_t a1, uint64_t *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  else
  {
    char v5 = v4 & 1;
    uint64_t v6 = *a2;
    unint64_t v7 = a2[1];
    sub_10051B3C8(*a2, v7, v4 & 1);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = v5;
  }
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)((char *)a2 + 25);
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 48) = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  uint64_t v8 = (void *)(a1 + 64);
  uint64_t v9 = a2 + 8;
  uint64_t v10 = a2[20];
  if (v10)
  {
    *uint64_t v8 = *v9;
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
    *(void *)(a1 + 88) = a2[11];
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(void *)(a1 + 100) = *(uint64_t *)((char *)a2 + 100);
    *(_DWORD *)(a1 + 108) = *((_DWORD *)a2 + 27);
    *(void *)(a1 + 112) = a2[14];
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
    *(void *)(a1 + 136) = a2[17];
    *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v10;
    *(void *)(a1 + 168) = a2[21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    long long v12 = *((_OWORD *)a2 + 5);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(a1 + 80) = v12;
    long long v13 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v13;
  }
  *(void *)(a1 + 176) = a2[22];
  *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
  *(void *)(a1 + 192) = a2[24];
  *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
  *(void *)(a1 + 208) = a2[26];
  *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
  *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
  *(void *)(a1 + 224) = a2[28];
  *(void *)(a1 + 240) = a2[30];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLWPTextPresetData(uint64_t a1, long long *a2)
{
  int v4 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v4 == 255)
    {
      long long v6 = *a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      char v13 = v4 & 1;
      uint64_t v14 = *(void *)a2;
      unint64_t v15 = *((void *)a2 + 1);
      sub_10051B3C8(*(void *)a2, v15, v4 & 1);
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v15;
      *(unsigned char *)(a1 + 16) = v13;
    }
  }
  else if (v4 == 255)
  {
    sub_1008EB104(a1);
    char v5 = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = *a2;
    *(unsigned char *)(a1 + 16) = v5;
  }
  else
  {
    char v7 = v4 & 1;
    uint64_t v8 = *(void *)a2;
    unint64_t v9 = *((void *)a2 + 1);
    sub_10051B3C8(*(void *)a2, v9, v4 & 1);
    uint64_t v10 = *(void *)a1;
    unint64_t v11 = *(void *)(a1 + 8);
    char v12 = *(unsigned char *)(a1 + 16);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 16) = v7;
    sub_10051ACA0(v10, v11, v12);
  }
  int v16 = *((_DWORD *)a2 + 5);
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(_DWORD *)(a1 + 20) = v16;
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  *(unsigned char *)(a1 + 26) = *((unsigned char *)a2 + 26);
  uint64_t v17 = *((void *)a2 + 4);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v17;
  uint64_t v18 = *((void *)a2 + 6);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v18;
  uint64_t v19 = (void *)(a1 + 64);
  char v20 = (uint64_t *)(a2 + 4);
  uint64_t v21 = *((void *)a2 + 20);
  if (*(void *)(a1 + 160))
  {
    if (v21)
    {
      uint64_t v22 = *v20;
      *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
      *uint64_t v19 = v22;
      LODWORD(v22) = *((_DWORD *)a2 + 20);
      *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
      *(_DWORD *)(a1 + 80) = v22;
      uint64_t v23 = *((void *)a2 + 11);
      *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
      *(void *)(a1 + 88) = v23;
      *(_DWORD *)(a1 + 100) = *((_DWORD *)a2 + 25);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      *(_DWORD *)(a1 + 108) = *((_DWORD *)a2 + 27);
      *(void *)(a1 + 112) = *((void *)a2 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 120) = *((_DWORD *)a2 + 30);
      *(_DWORD *)(a1 + 124) = *((_DWORD *)a2 + 31);
      *(_DWORD *)(a1 + 128) = *((_DWORD *)a2 + 32);
      *(_DWORD *)(a1 + 132) = *((_DWORD *)a2 + 33);
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
      *(void *)(a1 + 152) = *((void *)a2 + 19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *((void *)a2 + 20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *((void *)a2 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008EB164(a1 + 64);
      long long v27 = a2[5];
      long long v26 = a2[6];
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *(_OWORD *)(a1 + 80) = v27;
      *(_OWORD *)(a1 + 96) = v26;
      long long v28 = a2[10];
      long long v30 = a2[7];
      long long v29 = a2[8];
      *(_OWORD *)(a1 + 144) = a2[9];
      *(_OWORD *)(a1 + 160) = v28;
      *(_OWORD *)(a1 + 112) = v30;
      *(_OWORD *)(a1 + 128) = v29;
    }
  }
  else if (v21)
  {
    uint64_t v24 = *v20;
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    *uint64_t v19 = v24;
    LODWORD(v24) = *((_DWORD *)a2 + 20);
    *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
    *(_DWORD *)(a1 + 80) = v24;
    uint64_t v25 = *((void *)a2 + 11);
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(void *)(a1 + 88) = v25;
    *(_DWORD *)(a1 + 100) = *((_DWORD *)a2 + 25);
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    *(_DWORD *)(a1 + 108) = *((_DWORD *)a2 + 27);
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    *(_DWORD *)(a1 + 120) = *((_DWORD *)a2 + 30);
    *(_DWORD *)(a1 + 124) = *((_DWORD *)a2 + 31);
    *(_DWORD *)(a1 + 128) = *((_DWORD *)a2 + 32);
    *(_DWORD *)(a1 + 132) = *((_DWORD *)a2 + 33);
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
    *(void *)(a1 + 152) = *((void *)a2 + 19);
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    *(void *)(a1 + 168) = *((void *)a2 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v31 = *(_OWORD *)v20;
    long long v32 = a2[6];
    *(_OWORD *)(a1 + 80) = a2[5];
    *(_OWORD *)(a1 + 96) = v32;
    *(_OWORD *)uint64_t v19 = v31;
    long long v33 = a2[7];
    long long v34 = a2[8];
    long long v35 = a2[10];
    *(_OWORD *)(a1 + 144) = a2[9];
    *(_OWORD *)(a1 + 160) = v35;
    *(_OWORD *)(a1 + 112) = v33;
    *(_OWORD *)(a1 + 128) = v34;
  }
  uint64_t v36 = *((void *)a2 + 22);
  *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
  *(void *)(a1 + 176) = v36;
  uint64_t v37 = *((void *)a2 + 24);
  *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
  *(void *)(a1 + 192) = v37;
  uint64_t v38 = *((void *)a2 + 26);
  *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
  *(void *)(a1 + 208) = v38;
  uint64_t v39 = *((void *)a2 + 28);
  *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
  *(void *)(a1 + 224) = v39;
  *(void *)(a1 + 240) = *((void *)a2 + 30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1008EB104(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016875E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1008EB164(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for CRLWPTextPresetData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(void *)(a1 + 240) = *((void *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for CRLWPTextPresetData(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 == 255) {
    goto LABEL_4;
  }
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (v5 == 255)
  {
    sub_1008EB104(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  sub_10051ACA0(v6, v7, v4 & 1);
LABEL_6:
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v8 = (_OWORD *)(a1 + 64);
  long long v9 = (_OWORD *)(a2 + 64);
  if (!*(void *)(a1 + 160))
  {
LABEL_10:
    long long v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    long long v12 = *(_OWORD *)(a2 + 80);
    *long long v8 = *v9;
    *(_OWORD *)(a1 + 80) = v12;
    long long v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    goto LABEL_11;
  }
  uint64_t v10 = *(void *)(a2 + 160);
  if (!v10)
  {
    sub_1008EB164(a1 + 64);
    goto LABEL_10;
  }
  *(void *)long long v8 = *(void *)v9;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 100) = *(void *)(a2 + 100);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
LABEL_11:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPTextPresetData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 248)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 240);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPTextPresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 248) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 240) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 248) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPTextPresetData()
{
  return &type metadata for CRLWPTextPresetData;
}

unint64_t sub_1008EB4C8(char a1)
{
  unint64_t result = 0x6D614E746E6F665FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7A6953746E6F665FLL;
      break;
    case 2:
      unint64_t result = 0x646C6F625FLL;
      break;
    case 3:
      unint64_t result = 0x63696C6174695FLL;
      break;
    case 4:
      unint64_t result = 0x696C7265646E755FLL;
      break;
    case 5:
      unint64_t result = 0x74656B697274735FLL;
      break;
    case 6:
      unint64_t result = 0x746361726168635FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0x7974537473696C5FLL;
      break;
    case 10:
      unint64_t result = 0x6174537473696C5FLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1008EB678(char *a1, char *a2)
{
  return qword_101196AA0[*a1] == qword_101196AA0[*a2];
}

Swift::Int sub_1008EB69C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_101196AA0[v1]);
  return Hasher._finalize()();
}

void sub_1008EB6EC()
{
  Hasher._combine(_:)(qword_101196AA0[*v0]);
}

Swift::Int sub_1008EB724()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_101196AA0[v1]);
  return Hasher._finalize()();
}

uint64_t sub_1008EB770@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1008EF284(*a1);
  *a2 = result;
  return result;
}

void sub_1008EB79C(void *a1@<X8>)
{
  *a1 = qword_101196AA0[*v1];
}

unint64_t sub_1008EB7B4()
{
  return sub_1008EB4C8(*v0);
}

uint64_t sub_1008EB7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008EF2A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008EB7E4()
{
  return qword_101196AA0[*v0];
}

uint64_t sub_1008EB7FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1008EF284(a1);
  *a2 = result;
  return result;
}

void sub_1008EB824(void *a1@<X8>)
{
  *a1 = &off_101503080;
}

uint64_t sub_1008EB834(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1008ED970();
  unint64_t v5 = sub_1008ED9C8();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_1008EB88C(uint64_t a1)
{
  unint64_t v2 = sub_1008ED9C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008EB8C8(uint64_t a1)
{
  unint64_t v2 = sub_1008ED9C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008EB904(int a1, id a2)
{
  uint64_t result = (uint64_t)[a2 characterCount];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10090059C(0, result, v21);
    long long v3 = (char *)v21[4];
    unint64_t v4 = (char *)v21[5];
    unint64_t v5 = (char *)v21[3];

    __chkstk_darwin(v6, v7);
    sub_10083E550();
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    long long v9 = (void *)sub_10103FC38(KeyPath, v5, v3, v4);
    uint64_t v11 = v10;
    LOBYTE(v4) = v12;
    swift_release();

    if ((v4 & 1) == 0) {
      return sub_100B149FC((uint64_t)v9, v11);
    }
    sub_1005057FC(&qword_101686E30);
    swift_getKeyPath();
    char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t result = swift_release();
    if ((v14 & 1) == 0)
    {
      sub_10083E5A4();
      return 0;
    }
    uint64_t v15 = v9[2];
    if (v15)
    {
      int v16 = v9 + 5;
      uint64_t v20 = v9[5];
      uint64_t v19 = v9[4];
      do
      {
        uint64_t v17 = *(v16 - 1);
        uint64_t v18 = *v16;
        if ((v17 != 0xD000000000000029 || v18 != 0x8000000101235A60)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
          && (v17 != 0xD000000000000023 || v18 != 0x8000000101235A90)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
          && (v17 != 0xD000000000000024 || v18 != 0x8000000101235AC0)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
          && (v17 != 0xD000000000000026 || v18 != 0x8000000101235AF0)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
          && (v17 != 0xD000000000000025 || v18 != 0x8000000101235B20)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
          && (v17 != 0xD000000000000027 || v18 != 0x8000000101235B50))
        {
          _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        v16 += 2;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_100B149FC(v19, v20);
      sub_10083E5A4();
      return v13;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1008EBCB8(int a1, id a2)
{
  unint64_t result = (unint64_t)[a2 characterCount];
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_10090059C(0, result, v14);
    long long v3 = (char *)v14[4];
    unint64_t v4 = (char *)v14[5];
    unint64_t v5 = (char *)v14[3];

    __chkstk_darwin(v6, v7);
    sub_10083E4FC();
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    uint64_t v9 = sub_10103EFE4(KeyPath, v5, v3, v4);
    LOBYTE(v3) = v10;
    swift_release();

    if ((v3 & 1) == 0)
    {
      unsigned __int8 v11 = 0;
LABEL_8:
      LOBYTE(v14[0]) = v11;
      return v9 | ((unint64_t)v11 << 32);
    }
    sub_1005057FC(&qword_101686E30);
    swift_getKeyPath();
    char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
    unint64_t result = swift_release();
    if ((v12 & 1) == 0)
    {
      unsigned __int8 v11 = 1;
      sub_1006F23FC(v9, 1);
      LODWORD(v9) = 0;
      goto LABEL_8;
    }
    if (*(void *)(v9 + 16))
    {
      int v13 = *(_DWORD *)(v9 + 32);
      sub_1006F23FC(v9, 1);
      unsigned __int8 v11 = 0;
      LODWORD(v9) = v13;
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1008EBE5C(int a1, id a2, uint64_t a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t, id, id, id))
{
  uint64_t result = (uint64_t)[a2 characterCount];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10090059C(0, result, v19);
    id v8 = v19[4];
    id v9 = v19[5];
    id v10 = v19[3];

    uint64_t v13 = __chkstk_darwin(v11, v12);
    a4(v13);
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    uint64_t v15 = a5(KeyPath, v10, v8, v9);
    LOBYTE(v8) = v16;
    swift_release();

    if ((v8 & 1) == 0) {
      return v15 & 1;
    }
    sub_1005057FC(&qword_101686E30);
    swift_getKeyPath();
    char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t result = swift_release();
    if ((v18 & 1) == 0)
    {
      sub_1006F23FC(v15, 1);
      return 2;
    }
    if (*(void *)(v15 + 16))
    {
      uint64_t v17 = *(unsigned __int8 *)(v15 + 32);
      sub_1006F23FC(v15, 1);
      return v17;
    }
  }
  __break(1u);
  return result;
}

void sub_1008EBFFC(id a1@<X1>, uint64_t a2@<X0>, char *a3@<X8>)
{
  uint64_t v5 = (uint64_t)[a1 characterCount];
  if (v5 < 0) {
    goto LABEL_42;
  }
  uint64_t v44 = a3;
  sub_10090059C(0, v5, v53);
  uint64_t v6 = (char *)v53[4];
  uint64_t v7 = (char *)v53[5];
  id v8 = (char *)v53[3];

  __chkstk_darwin(v9, v10);
  sub_10083E34C();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  unint64_t v52 = sub_10103B9D8(KeyPath, v8, v6, v7);
  LOBYTE(v6) = v12;
  swift_release();

  if (v6)
  {
    sub_1005057FC(&qword_101686E30);
    uint64_t v54 = a2;
    v68[0] = swift_getKeyPath();
    char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
    swift_release();
    if ((v17 & 1) == 0)
    {
      sub_10083E3A0((void *)v52, 1);
      *((_OWORD *)a3 + 5) = 0u;
      *((_OWORD *)a3 + 6) = 0u;
      *((_OWORD *)a3 + 3) = 0u;
      *((_OWORD *)a3 + 4) = 0u;
      *((_OWORD *)a3 + 1) = 0u;
      *((_OWORD *)a3 + 2) = 0u;
      *(_OWORD *)a3 = 0u;
      return;
    }
    a3 = (char *)(v52 & 0xFFFFFFFFFFFFFF8);
    if (v52 >> 62) {
      goto LABEL_46;
    }
    uint64_t v18 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v18) {
      goto LABEL_47;
    }
LABEL_9:
    unint64_t v50 = v52 & 0xC000000000000001;
    uint64_t v45 = a3;
    if ((v52 & 0xC000000000000001) != 0)
    {
LABEL_48:
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*((void *)a3 + 2))
      {
        __break(1u);
        return;
      }
      id v19 = *(id *)(v52 + 32);
    }
    char v43 = v19;
    sub_10083E3A0((void *)v52, 1);
    swift_bridgeObjectRetain();
    unint64_t v20 = 0;
    uint64_t v48 = v18;
    if (v50)
    {
LABEL_13:
      id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_16;
    }
    while (1)
    {
      if (v20 >= *((void *)v45 + 2))
      {
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        if (!v18)
        {
LABEL_47:
          sub_10083E3A0((void *)v52, 1);
          __break(1u);
          goto LABEL_48;
        }
        goto LABEL_9;
      }
      id v21 = *(id *)(v52 + 8 * v20 + 32);
LABEL_16:
      uint64_t v22 = v21;
      unint64_t v23 = v20 + 1;
      if (__OFADD__(v20, 1))
      {
        __break(1u);
        goto LABEL_41;
      }
      self;
      uint64_t v24 = (void *)swift_dynamicCastObjCClass();
      id v25 = v22;
      if (!v24) {
        break;
      }
      id v26 = [v24 color];
      long long v27 = (CGColor *)[v26 CGColor];
      long long v28 = CGColorGetColorSpace(v27);

      if (!v28
        || (CGColorSpaceModel Model = CGColorSpaceGetModel(v28), v28, Model != kCGColorSpaceModelRGB)
        || (a3 = (char *)[v26 CGColor],
            uint64_t v30 = CGColorRef.components.getter(),
            a3,
            !v30))
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 134, (uint64_t)"Asked to archive a CGColor that we can't handle. Falling back to archiving black.", 81, 2u, (uint64_t)&_swiftEmptyArrayStorage);
        unint64_t v23 = v20 + 1;
        sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 134);
        sub_1005057FC(&qword_1016803B8);
        initeCGFloat d = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E800;
        *(void *)(inited + 32) = 0;
        *(void *)(inited + 40) = 0;
        *(void *)(inited + 48) = 0;
        *(void *)(inited + 56) = 0x3FF0000000000000;
        sub_1007B1558(inited, 0, (uint64_t)&v64, v33);
        swift_setDeallocating();

        long long v34 = (char **)&v65;
        goto LABEL_31;
      }
      if ((unint64_t)[v26 colorRGBSpace] > 1)
      {
        a3 = "init(archiving:colorRGBSpace:)";
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:colorRGBSpace:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 152, (uint64_t)"Color should be converted to RGB by the time it is archived. Falling back to archiving sRGB.", 92, 2u, (uint64_t)&_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:colorRGBSpace:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 152);
      }
      unint64_t v31 = *(void *)(v30 + 16);
      if (!v31) {
        goto LABEL_43;
      }
      if (v31 == 1) {
        goto LABEL_44;
      }
      if (v31 < 3) {
        goto LABEL_45;
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      if (v23 == v18) {
        goto LABEL_37;
      }
LABEL_33:
      ++v20;
      if (v50) {
        goto LABEL_13;
      }
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 47, (uint64_t)"Unsupported fill type for archiving. Falling back to archiving color fill.", 74, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 47);
    id v35 = [v25 referenceColor];
    if (v35)
    {
      sub_1007B16EC(v35, (uint64_t)&v66);
      id v26 = v25;
      long long v34 = (char **)&v67;
LABEL_31:

      a3 = *v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 52, (uint64_t)"Missing fill reference color. Falling back to black color.", 58, 2u, (uint64_t)&_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 52);
      id v36 = [self blackColor];
      sub_1007B16EC(v36, (uint64_t)v68);
      a3 = (char *)v68[7];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v48;
    if (v23 == v48)
    {
LABEL_37:
      sub_10083E3A0((void *)v52, 1);
      sub_100F91F6C(v43, (uint64_t)&v54);
      uint64_t v37 = v54;
      uint64_t v38 = v55;
      uint64_t v39 = v56;
      int v40 = v57;
      long long v49 = v59;
      long long v51 = v58;
      long long v46 = v61;
      long long v47 = v60;
      uint64_t v41 = v62;
      sub_10083E3A0((void *)v52, 1);
      unint64_t v42 = &_mh_execute_header;
      if (!v40) {
        unint64_t v42 = 0;
      }
      *(void *)uint64_t v44 = v37;
      *((void *)v44 + 1) = v38;
      *((void *)v44 + 2) = (unint64_t)v42 | v39;
      *(_OWORD *)(v44 + 24) = v51;
      *(_OWORD *)(v44 + 40) = v49;
      *(_OWORD *)(v44 + 56) = v47;
      *(_OWORD *)(v44 + 72) = v46;
      *((void *)v44 + 11) = v41;
      *((_OWORD *)v44 + 6) = v63;
      return;
    }
    goto LABEL_33;
  }
  sub_100F91F6C((void *)v52, (uint64_t)&v54);
  uint64_t v13 = v55;
  uint64_t v14 = v62;
  uint64_t v15 = &_mh_execute_header;
  if (!v57) {
    uint64_t v15 = 0;
  }
  unint64_t v16 = (unint64_t)v15 | v56;
  *(void *)a3 = v54;
  *((void *)a3 + 1) = v13;
  *((void *)a3 + 2) = v16;
  *(_OWORD *)(a3 + 24) = v58;
  *(_OWORD *)(a3 + 40) = v59;
  *(_OWORD *)(a3 + 56) = v60;
  *(_OWORD *)(a3 + 72) = v61;
  *((void *)a3 + 11) = v14;
  *((_OWORD *)a3 + 6) = v63;
}

uint64_t sub_1008EC8D8(int a1, id a2, uint64_t a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t, id, id, id), void (*a6)(uint64_t, uint64_t))
{
  uint64_t result = (uint64_t)[a2 characterCount];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10090059C(0, result, v22);
    id v10 = v22[4];
    id v11 = v22[5];
    id v12 = v22[3];

    uint64_t v15 = __chkstk_darwin(v13, v14);
    a4(v15);
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    uint64_t v17 = a5(KeyPath, v12, v10, v11);
    LOBYTE(v10) = v18;
    swift_release();

    if ((v10 & 1) == 0) {
      return v17;
    }
    sub_1005057FC(&qword_101686E30);
    swift_getKeyPath();
    char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t result = swift_release();
    if ((v19 & 1) == 0)
    {
      uint64_t v21 = 0;
      unint64_t v20 = a6;
      goto LABEL_7;
    }
    unint64_t v20 = a6;
    if (*(void *)(v17 + 16))
    {
      uint64_t v21 = *(void *)(v17 + 32);
LABEL_7:
      v20(v17, 1);
      return v21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1008ECA90(int a1, id a2)
{
  uint64_t result = (uint64_t)[a2 characterCount];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10090059C(0, result, v13);
    long long v3 = (char *)v13[4];
    unint64_t v4 = (char *)v13[5];
    uint64_t v5 = (char *)v13[3];

    __chkstk_darwin(v6, v7);
    sub_10083E1BC();
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    uint64_t v9 = sub_1010397A0(KeyPath, v5, v3, v4);
    LOBYTE(v3) = v10;
    swift_release();

    if ((v3 & 1) == 0) {
      return v9;
    }
    sub_1005057FC(&qword_101686E30);
    swift_getKeyPath();
    char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t result = swift_release();
    if ((v12 & 1) == 0)
    {
      sub_1006F23FC(v9, 1);
      return 0;
    }
    if (*(void *)(v9 + 16))
    {
      uint64_t v11 = *(unsigned __int8 *)(v9 + 32);
      sub_1006F23FC(v9, 1);
      return v11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1008ECC28(int a1, id a2)
{
  uint64_t result = (uint64_t)[a2 characterCount];
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_10090059C(0, result, v18);
    long long v3 = (char *)v18[4];
    unint64_t v4 = (char *)v18[5];
    uint64_t v5 = (char *)v18[3];

    __chkstk_darwin(v6, v7);
    sub_10083BD04();
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    uint64_t v9 = sub_101038C68(KeyPath, v5, v3, v4);
    LOBYTE(v4) = v10;
    swift_release();

    if ((v4 & 1) == 0) {
      return v9;
    }
    sub_1005057FC(&qword_101686E30);
    swift_getKeyPath();
    char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t result = swift_release();
    if ((v11 & 1) == 0)
    {
      uint64_t v13 = 0;
LABEL_13:
      sub_1006F23FC(v9, 1);
      return v13;
    }
    uint64_t v12 = *(void *)(v9 + 16);
    if (v12)
    {
      uint64_t v13 = *(void *)(v9 + 32);
      if (v13 <= 1)
      {
        uint64_t v14 = v12 - 1;
        if (v14)
        {
          uint64_t v15 = (uint64_t *)(v9 + 40);
          while (1)
          {
            uint64_t v17 = *v15++;
            uint64_t v16 = v17;
            if (v17 > 1) {
              break;
            }
            if (!--v14) {
              goto LABEL_13;
            }
          }
          uint64_t v13 = v16;
        }
      }
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1008ECDE8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101686E78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1008ED9C8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v19, (uint64_t *)&unk_101687BD0);
  sub_10051B3EC((uint64_t)v19, (uint64_t)v12, (uint64_t *)&unk_101687BD0);
  char v20 = 0;
  sub_1005057FC(&qword_1016875E0);
  sub_1008F05E8();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    char v10 = *(unsigned char *)(v3 + 24);
    LOBYTE(v12[0]) = 1;
    char v20 = v10;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12[0]) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12[0]) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10051B3EC(v3 + 32, (uint64_t)v18, &qword_101686E10);
    sub_10051B3EC((uint64_t)v18, (uint64_t)v12, &qword_101686E10);
    char v20 = 4;
    sub_1005057FC(&qword_10167BDF8);
    sub_1008F065C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 48, (uint64_t)v17, (uint64_t *)&unk_101687BE0);
    sub_10051B3EC((uint64_t)v17, (uint64_t)v12, (uint64_t *)&unk_101687BE0);
    char v20 = 5;
    sub_1005057FC(&qword_101687550);
    sub_1008F06D0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 64, (uint64_t)v16, &qword_101686E98);
    sub_10051B3EC((uint64_t)v16, (uint64_t)v12, &qword_101686E98);
    char v20 = 6;
    sub_1008F0744();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 176, (uint64_t)v15, &qword_101686E18);
    sub_10051B3EC((uint64_t)v15, (uint64_t)v12, &qword_101686E18);
    char v20 = 7;
    sub_1005057FC(&qword_101687860);
    sub_1008F0798();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 192, (uint64_t)v14, &qword_101686E20);
    sub_10051B3EC((uint64_t)v14, (uint64_t)v12, &qword_101686E20);
    char v20 = 8;
    sub_1005057FC(&qword_10167BE18);
    sub_1008F080C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 208, (uint64_t)v13, &qword_101687C00);
    sub_10051B3EC((uint64_t)v13, (uint64_t)v12, &qword_101687C00);
    char v20 = 9;
    sub_1005057FC(&qword_10167BDC8);
    sub_1008F0880();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12[0]) = 10;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v12[0] = *(void *)(v3 + 240);
    char v20 = 11;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1008ED2EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1008ED2F4(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 240) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1008ED320())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_1008ED340(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 208);
  v17[12] = *(_OWORD *)(a1 + 192);
  v17[13] = v2;
  v17[14] = *(_OWORD *)(a1 + 224);
  uint64_t v18 = *(void *)(a1 + 240);
  long long v3 = *(_OWORD *)(a1 + 144);
  v17[8] = *(_OWORD *)(a1 + 128);
  v17[9] = v3;
  long long v4 = *(_OWORD *)(a1 + 176);
  v17[10] = *(_OWORD *)(a1 + 160);
  v17[11] = v4;
  long long v5 = *(_OWORD *)(a1 + 80);
  v17[4] = *(_OWORD *)(a1 + 64);
  void v17[5] = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  v17[6] = *(_OWORD *)(a1 + 96);
  v17[7] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v17[0] = *(_OWORD *)a1;
  v17[1] = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  v17[2] = *(_OWORD *)(a1 + 32);
  void v17[3] = v8;
  long long v9 = *(_OWORD *)(a2 + 208);
  v19[12] = *(_OWORD *)(a2 + 192);
  v19[13] = v9;
  v19[14] = *(_OWORD *)(a2 + 224);
  uint64_t v20 = *(void *)(a2 + 240);
  long long v10 = *(_OWORD *)(a2 + 144);
  char v19[8] = *(_OWORD *)(a2 + 128);
  v19[9] = v10;
  long long v11 = *(_OWORD *)(a2 + 176);
  v19[10] = *(_OWORD *)(a2 + 160);
  v19[11] = v11;
  long long v12 = *(_OWORD *)(a2 + 80);
  v19[4] = *(_OWORD *)(a2 + 64);
  v19[5] = v12;
  long long v13 = *(_OWORD *)(a2 + 112);
  id v19[6] = *(_OWORD *)(a2 + 96);
  v19[7] = v13;
  long long v14 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v19[2] = *(_OWORD *)(a2 + 32);
  v19[3] = v15;
  return sub_1008ECDE4(v17, v19) & 1;
}

double sub_1008ED404@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1008EF7E8(a1, (uint64_t)v12);
  if (!v2)
  {
    long long v5 = v24;
    *(_OWORD *)(a2 + 192) = v23;
    *(_OWORD *)(a2 + 208) = v5;
    *(_OWORD *)(a2 + 224) = v25;
    *(void *)(a2 + 240) = v26;
    long long v6 = v20;
    *(_OWORD *)(a2 + 128) = v19;
    *(_OWORD *)(a2 + 144) = v6;
    long long v7 = v22;
    *(_OWORD *)(a2 + 160) = v21;
    *(_OWORD *)(a2 + 176) = v7;
    long long v8 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v8;
    long long v9 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v9;
    long long v10 = v12[1];
    *(_OWORD *)a2 = v12[0];
    *(_OWORD *)(a2 + 16) = v10;
    double result = *(double *)&v13;
    long long v11 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v11;
  }
  return result;
}

uint64_t sub_1008ED49C(void *a1)
{
  return sub_1008ECDE8(a1);
}

uint64_t sub_1008ED510(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100842C40();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008ED564(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100842C40();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008ED5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1005DDFD0();
  unint64_t v7 = sub_1008F093C();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1008ED628(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100842C40();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1008ED674()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_1008ED6C4()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_1008ED70C(uint64_t a1)
{
  unint64_t v2 = sub_1008EDB30();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_1008ED75C()
{
  unint64_t result = qword_101686DA8;
  if (!qword_101686DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DA8);
  }
  return result;
}

unint64_t sub_1008ED7B4()
{
  unint64_t result = qword_101686DB0;
  if (!qword_101686DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DB0);
  }
  return result;
}

unint64_t sub_1008ED810()
{
  unint64_t result = qword_101686DB8;
  if (!qword_101686DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DB8);
  }
  return result;
}

unint64_t sub_1008ED868()
{
  unint64_t result = qword_101686DC0;
  if (!qword_101686DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DC0);
  }
  return result;
}

unint64_t sub_1008ED8C0()
{
  unint64_t result = qword_101686DC8;
  if (!qword_101686DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DC8);
  }
  return result;
}

unint64_t sub_1008ED918()
{
  unint64_t result = qword_101686DD0;
  if (!qword_101686DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DD0);
  }
  return result;
}

unint64_t sub_1008ED970()
{
  unint64_t result = qword_101686DD8;
  if (!qword_101686DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DD8);
  }
  return result;
}

unint64_t sub_1008ED9C8()
{
  unint64_t result = qword_101686DE0;
  if (!qword_101686DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DE0);
  }
  return result;
}

unint64_t sub_1008EDA20()
{
  unint64_t result = qword_101686DE8;
  if (!qword_101686DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DE8);
  }
  return result;
}

unint64_t sub_1008EDA78()
{
  unint64_t result = qword_101686DF0;
  if (!qword_101686DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DF0);
  }
  return result;
}

unint64_t sub_1008EDAD0()
{
  unint64_t result = qword_101686DF8;
  if (!qword_101686DF8)
  {
    sub_100522D34(&qword_101686E00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686DF8);
  }
  return result;
}

unint64_t sub_1008EDB30()
{
  unint64_t result = qword_101686E08;
  if (!qword_101686E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E08);
  }
  return result;
}

uint64_t sub_1008EDB84(uint64_t a1, long long *a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 16);
  int v5 = *((unsigned __int8 *)a2 + 16);
  if (v4 == 255)
  {
    if (v5 != 255) {
      goto LABEL_47;
    }
  }
  else
  {
    uint64_t v7 = *(void *)a1;
    unint64_t v6 = *(void *)(a1 + 8);
    long long v8 = *a2;
    uint64_t v84 = *(void *)a1;
    unint64_t v85 = v6;
    LOBYTE(v86) = v4;
    if (v5 == 255)
    {
      sub_10051B3C8(v7, v6, v4 & 1);
      sub_10051ACA0(v7, v6, v4 & 1);
      goto LABEL_47;
    }
    long long v117 = v8;
    LOBYTE(v118) = v5 & 1;
    sub_10051B3C8(v7, v6, v4 & 1);
    sub_10051B3C8(v7, v6, v4 & 1);
    sub_1006F23A8();
    char v9 = static CRExtensible.== infix(_:_:)();
    sub_10051ACA0(v84, v85, v86);
    sub_10051AC88(v7, v6, v4);
    if ((v9 & 1) == 0) {
      goto LABEL_47;
    }
  }
  char v10 = *((unsigned char *)a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*((unsigned char *)a2 + 24)) {
      goto LABEL_47;
    }
  }
  else
  {
    if (*(float *)(a1 + 20) != *((float *)a2 + 5)) {
      char v10 = 1;
    }
    if (v10) {
      goto LABEL_47;
    }
  }
  int v11 = *(unsigned __int8 *)(a1 + 25);
  int v12 = *((unsigned __int8 *)a2 + 25);
  if (v11 == 2)
  {
    if (v12 != 2) {
      goto LABEL_47;
    }
  }
  else
  {
    char v13 = 0;
    BOOL v14 = (v11 & 1) == 0;
    if (v12 == 2 || ((v14 ^ v12) & 1) == 0) {
      return v13 & 1;
    }
  }
  int v15 = *(unsigned __int8 *)(a1 + 26);
  int v16 = *((unsigned __int8 *)a2 + 26);
  if (v15 == 2)
  {
    if (v16 != 2) {
      goto LABEL_47;
    }
LABEL_23:
    sub_10051B3EC(a1 + 32, (uint64_t)v116, &qword_101686E10);
    uint64_t v18 = *((void *)a2 + 4);
    int v19 = *((unsigned __int8 *)a2 + 40);
    sub_10051B3EC((uint64_t)v116, (uint64_t)v127, &qword_101686E10);
    if (v127[8] == 255)
    {
      if (v19 != 255) {
        goto LABEL_47;
      }
    }
    else
    {
      sub_10051B3EC((uint64_t)v127, (uint64_t)v128, &qword_10167BDF8);
      sub_10051B3EC((uint64_t)v116, (uint64_t)&v84, &qword_101686E10);
      if (v19 == 255) {
        goto LABEL_47;
      }
      *(void *)&long long v117 = v18;
      BYTE8(v117) = v19 & 1;
      type metadata accessor for CRLWPUnderline(0);
      sub_1008F08F4((unint64_t *)&unk_10167BE00, type metadata accessor for CRLWPUnderline);
      if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
        goto LABEL_47;
      }
    }
    sub_10051B3EC(a1 + 48, (uint64_t)v115, (uint64_t *)&unk_101687BE0);
    uint64_t v20 = *((void *)a2 + 6);
    int v21 = *((unsigned __int8 *)a2 + 56);
    sub_10051B3EC((uint64_t)v115, (uint64_t)v129, (uint64_t *)&unk_101687BE0);
    if (v129[8] == 255)
    {
      if (v21 != 255) {
        goto LABEL_47;
      }
    }
    else
    {
      sub_10051B3EC((uint64_t)v129, (uint64_t)v130, &qword_101687550);
      sub_10051B3EC((uint64_t)v115, (uint64_t)&v84, (uint64_t *)&unk_101687BE0);
      if (v21 == 255) {
        goto LABEL_47;
      }
      *(void *)&long long v117 = v20;
      BYTE8(v117) = v21 & 1;
      type metadata accessor for CRLWPStrikethru(0);
      sub_1008F08F4(&qword_10167BDF0, type metadata accessor for CRLWPStrikethru);
      if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
        goto LABEL_47;
      }
    }
    uint64_t v22 = *(void *)(a1 + 64);
    uint64_t v23 = *(void *)(a1 + 72);
    uint64_t v24 = *(void *)(a1 + 80);
    uint64_t v25 = *(void *)(a1 + 88);
    uint64_t v26 = *(void *)(a1 + 96);
    uint64_t v27 = *(void *)(a1 + 104);
    uint64_t v28 = *(void *)(a1 + 112);
    uint64_t v29 = *(void *)(a1 + 120);
    uint64_t v30 = *(void *)(a1 + 128);
    uint64_t v31 = *(void *)(a1 + 136);
    uint64_t v32 = *(void *)(a1 + 144);
    uint64_t v33 = *(void *)(a1 + 152);
    uint64_t v35 = *(void *)(a1 + 160);
    uint64_t v34 = *(void *)(a1 + 168);
    uint64_t v36 = *((void *)a2 + 8);
    uint64_t v37 = *((void *)a2 + 9);
    uint64_t v38 = *((void *)a2 + 10);
    uint64_t v81 = *((void *)a2 + 11);
    uint64_t v40 = *((void *)a2 + 12);
    uint64_t v39 = *((void *)a2 + 13);
    uint64_t v42 = *((void *)a2 + 14);
    uint64_t v41 = *((void *)a2 + 15);
    uint64_t v75 = *((void *)a2 + 16);
    uint64_t v43 = *((void *)a2 + 17);
    uint64_t v82 = *((void *)a2 + 18);
    uint64_t v44 = *((void *)a2 + 19);
    uint64_t v45 = *((void *)a2 + 20);
    uint64_t v78 = *((void *)a2 + 21);
    if (v35)
    {
      if (v45)
      {
        uint64_t v84 = *(void *)(a1 + 64);
        uint64_t v79 = v41;
        LOBYTE(v85) = v23 & 1;
        *(void *)&long long v117 = v36;
        BYTE8(v117) = v37 & 1;
        uint64_t v64 = v22;
        uint64_t v65 = v23;
        uint64_t v61 = v24;
        uint64_t v62 = v25;
        uint64_t v71 = v37;
        uint64_t v72 = v26;
        uint64_t v63 = v27;
        uint64_t v73 = v28;
        uint64_t v74 = v29;
        uint64_t v69 = v31;
        uint64_t v70 = v30;
        uint64_t v67 = v33;
        uint64_t v68 = v32;
        uint64_t v46 = v42;
        uint64_t v66 = v34;
        uint64_t v47 = v36;
        uint64_t v48 = v43;
        uint64_t v49 = v44;
        sub_10051B2E8(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v35);
        sub_10051B2E8(v47, v71, v38, v81, v40, v39, v46, v79, v75, v48, v82, v49, v45);
        sub_1008EE6D8();
        if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
          goto LABEL_46;
        }
        LODWORD(v117) = v61;
        BYTE4(v117) = BYTE4(v61) & 1;
        *((void *)&v117 + 1) = v62;
        uint64_t v118 = v72;
        uint64_t v119 = v63;
        uint64_t v120 = v73;
        uint64_t v121 = v74;
        uint64_t v122 = v70;
        uint64_t v123 = v69;
        uint64_t v124 = v68;
        uint64_t v125 = v67;
        uint64_t v126 = v35;
        LODWORD(v84) = v38;
        BYTE4(v84) = BYTE4(v38) & 1;
        unint64_t v85 = v81;
        uint64_t v86 = v40;
        uint64_t v87 = v39;
        uint64_t v88 = v46;
        uint64_t v89 = v79;
        uint64_t v90 = v75;
        uint64_t v91 = v48;
        uint64_t v92 = v82;
        uint64_t v93 = v49;
        uint64_t v94 = v45;
        if ((sub_1007B049C(&v117, &v84) & 1) == 0)
        {
LABEL_46:
          sub_10051ABBC(v47, v71, v38, v81, v40, v39, v46, v79, v75, v48, v82, v49, v45);
          sub_10051ABBC(v64, v65, v61, v62, v72, v63, v73, v74, v70, v69, v68, v67, v35);
          goto LABEL_47;
        }
        char v60 = sub_100ED60AC(v66, v78);
        sub_10051ABBC(v47, v71, v38, v81, v40, v39, v46, v79, v75, v48, v82, v49, v45);
        sub_10051ABBC(v64, v65, v61, v62, v72, v63, v73, v74, v70, v69, v68, v67, v35);
        if ((v60 & 1) == 0)
        {
LABEL_47:
          char v13 = 0;
          return v13 & 1;
        }
LABEL_42:
        sub_10051B3EC(a1 + 176, (uint64_t)v114, &qword_101686E18);
        uint64_t v53 = *((void *)a2 + 22);
        int v54 = *((unsigned __int8 *)a2 + 184);
        sub_10051B3EC((uint64_t)v114, (uint64_t)v131, &qword_101686E18);
        if (v131[8] == 255)
        {
          if (v54 != 255) {
            goto LABEL_47;
          }
        }
        else
        {
          sub_10051B3EC((uint64_t)v131, (uint64_t)v132, &qword_101687860);
          sub_10051B3EC((uint64_t)v114, (uint64_t)v137, &qword_101686E18);
          if (v54 == 255) {
            goto LABEL_47;
          }
          uint64_t v135 = v53;
          unsigned __int8 v136 = v54 & 1;
          type metadata accessor for CRLWPParagraphAlignment(0);
          sub_1008F08F4((unint64_t *)&unk_10167BDE0, type metadata accessor for CRLWPParagraphAlignment);
          if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
            goto LABEL_47;
          }
        }
        sub_10051B3EC(a1 + 192, (uint64_t)v113, &qword_101686E20);
        uint64_t v56 = *((void *)a2 + 24);
        int v57 = *((unsigned __int8 *)a2 + 200);
        sub_10051B3EC((uint64_t)v113, (uint64_t)v133, &qword_101686E20);
        if (v133[8] == 255)
        {
          if (v57 != 255) {
            goto LABEL_47;
          }
        }
        else
        {
          sub_10051B3EC((uint64_t)v133, (uint64_t)v134, &qword_10167BE18);
          sub_10051B3EC((uint64_t)v113, (uint64_t)v137, &qword_101686E20);
          if (v57 == 255) {
            goto LABEL_47;
          }
          uint64_t v135 = v56;
          unsigned __int8 v136 = v57 & 1;
          type metadata accessor for CRLWPWritingDirection(0);
          sub_1008F08F4((unint64_t *)&unk_10167BE20, type metadata accessor for CRLWPWritingDirection);
          if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
            goto LABEL_47;
          }
        }
        sub_10051B3EC(a1 + 208, (uint64_t)v112, &qword_101687C00);
        int v58 = *((unsigned __int8 *)a2 + 216);
        sub_10051B3EC((uint64_t)v112, (uint64_t)&v135, &qword_101687C00);
        if (v136 == 255)
        {
          if (v58 != 255) {
            goto LABEL_47;
          }
        }
        else
        {
          sub_10051B3EC((uint64_t)&v135, (uint64_t)v137, &qword_10167BDC8);
          sub_10051B3EC((uint64_t)v112, (uint64_t)v83, &qword_101687C00);
          if (v58 == 255) {
            goto LABEL_47;
          }
          sub_1006F2354();
          if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
            goto LABEL_47;
          }
        }
        char v59 = *((unsigned char *)a2 + 232);
        if (*(unsigned char *)(a1 + 232))
        {
          if (!*((unsigned char *)a2 + 232)) {
            goto LABEL_47;
          }
        }
        else
        {
          if (*(void *)(a1 + 224) != *((void *)a2 + 28)) {
            char v59 = 1;
          }
          if (v59) {
            goto LABEL_47;
          }
        }
        char v13 = sub_100ED60AC(*(void *)(a1 + 240), *((void *)a2 + 30));
        return v13 & 1;
      }
    }
    else if (!v45)
    {
      goto LABEL_42;
    }
    uint64_t v84 = *(void *)(a1 + 64);
    unint64_t v85 = v23;
    uint64_t v86 = v24;
    uint64_t v87 = v25;
    uint64_t v88 = v26;
    uint64_t v89 = v27;
    uint64_t v90 = v28;
    uint64_t v91 = v29;
    uint64_t v92 = v30;
    uint64_t v93 = v31;
    uint64_t v94 = v32;
    uint64_t v95 = v33;
    uint64_t v96 = v35;
    uint64_t v97 = v34;
    uint64_t v98 = v36;
    uint64_t v99 = v37;
    uint64_t v100 = v38;
    uint64_t v101 = v81;
    uint64_t v102 = v40;
    uint64_t v103 = v39;
    uint64_t v104 = v42;
    uint64_t v105 = v41;
    uint64_t v106 = v75;
    uint64_t v107 = v43;
    uint64_t v108 = v82;
    uint64_t v109 = v44;
    uint64_t v110 = v45;
    uint64_t v111 = v78;
    uint64_t v80 = v41;
    uint64_t v76 = v39;
    uint64_t v77 = v42;
    uint64_t v50 = v36;
    uint64_t v51 = v43;
    uint64_t v52 = v44;
    sub_10051B2E8(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v35);
    sub_10051B2E8(v50, v37, v38, v81, v40, v76, v77, v80, v75, v51, v82, v52, v45);
    sub_1008EE60C((uint64_t)&v84);
    goto LABEL_47;
  }
  char v13 = 0;
  BOOL v17 = (v15 & 1) == 0;
  if (v16 != 2 && ((v17 ^ v16) & 1) != 0) {
    goto LABEL_23;
  }
  return v13 & 1;
}

uint64_t sub_1008EE60C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 128);
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 160);
  uint64_t v8 = *(void *)(a1 + 168);
  long long v11 = *(_OWORD *)(a1 + 192);
  long long v12 = *(_OWORD *)(a1 + 176);
  uint64_t v9 = *(void *)(a1 + 208);
  sub_10051ABBC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96));
  sub_10051ABBC(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v9);
  return a1;
}

unint64_t sub_1008EE6D8()
{
  unint64_t result = qword_101686E28;
  if (!qword_101686E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E28);
  }
  return result;
}

uint64_t sub_1008EE72C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10051B3EC((uint64_t)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride], (uint64_t)v140, &qword_10168D670);
  sub_10051B3EC((uint64_t)v140, (uint64_t)v141, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v141);
  if (result == 1)
  {
    uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v9)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void))(*(void *)v9 + 760))();
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    sub_100864634((uint64_t)v7);
    swift_release();
    char v10 = &v106;
  }
  else
  {
    char v10 = v140;
  }
  sub_10051B3EC((uint64_t)v10, (uint64_t)v139, &qword_10168D670);
  int KeyPath = swift_getKeyPath();
  sub_1008EF10C(v140, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
  uint64_t v12 = sub_1008EB904(KeyPath, a1);
  unint64_t v14 = v13;
  int v16 = v15;
  int v17 = ~(_BYTE)v15;
  swift_release();
  if (!v17)
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v106) == 1)
    {
      uint64_t v12 = 0;
      unint64_t v14 = 0;
      int v16 = 255;
    }
    else
    {
      uint64_t v12 = v106;
      unint64_t v14 = v107;
      int v16 = v108;
      sub_10051B3B0(v106, v107, v108);
    }
  }
  int v18 = swift_getKeyPath();
  unint64_t v19 = sub_1008EBCB8(v18, a1);
  swift_release();
  if ((v19 & 0x100000000) != 0)
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v106) == 1)
    {
      unint64_t v91 = 0;
      int v20 = 1;
    }
    else
    {
      unint64_t v91 = v109;
      int v20 = v110;
    }
    int v90 = v20;
  }
  else
  {
    unint64_t v91 = v19;
    int v90 = 0;
  }
  int v21 = swift_getKeyPath();
  int v22 = sub_1008EBE5C(v21, a1, (uint64_t)&type metadata for CRLWPFontBoldAttribute, (void (*)(uint64_t))sub_10083E4A8, (uint64_t (*)(uint64_t, id, id, id))sub_10103E2CC);
  swift_release();
  if (v22 == 2)
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v106) == 1) {
      int v22 = 2;
    }
    else {
      int v22 = v111;
    }
  }
  int v23 = swift_getKeyPath();
  int v24 = sub_1008EBE5C(v23, a1, (uint64_t)&type metadata for CRLWPFontItalicAttribute, (void (*)(uint64_t))sub_10083E454, (uint64_t (*)(uint64_t, id, id, id))sub_10103E254);
  swift_release();
  if (v24 == 2)
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v106) == 1) {
      int v24 = 2;
    }
    else {
      int v24 = v112;
    }
  }
  int v25 = swift_getKeyPath();
  uint64_t v100 = sub_1008EC8D8(v25, a1, (uint64_t)&type metadata for CRLWPUnderlineAttribute, (void (*)(uint64_t))sub_10083E400, (uint64_t (*)(uint64_t, id, id, id))sub_10103D470, (void (*)(uint64_t, uint64_t))sub_1008432C0);
  int v99 = v26;
  int v27 = ~(_BYTE)v26;
  swift_release();
  if (!v27)
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v106) == 1)
    {
      uint64_t v100 = 0;
      int v28 = 255;
    }
    else
    {
      uint64_t v100 = v113;
      int v28 = v114;
    }
    int v99 = v28;
  }
  int v29 = swift_getKeyPath();
  uint64_t v98 = sub_1008EC8D8(v29, a1, (uint64_t)&type metadata for CRLWPStrikethroughAttribute, (void (*)(uint64_t))sub_10083E3AC, (uint64_t (*)(uint64_t, id, id, id))sub_10103D3BC, (void (*)(uint64_t, uint64_t))sub_1008432C0);
  int v97 = v30;
  int v31 = ~(_BYTE)v30;
  swift_release();
  if (!v31)
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v106) == 1)
    {
      uint64_t v98 = 0;
      int v32 = 255;
    }
    else
    {
      uint64_t v98 = v115;
      int v32 = v116;
    }
    int v97 = v32;
  }
  uint64_t v33 = swift_getKeyPath();
  sub_1008EBFFC(a1, v33, (char *)v103);
  swift_release();
  if (v104)
  {
    uint64_t v89 = v104;
    uint64_t v76 = v105;
    uint64_t v77 = v103[11];
    uint64_t v78 = v103[10];
    uint64_t v79 = v103[9];
    uint64_t v80 = v103[8];
    uint64_t v81 = v103[7];
    uint64_t v82 = v103[6];
    uint64_t v83 = v103[5];
    uint64_t v84 = v103[4];
    uint64_t v85 = v103[3];
    uint64_t v86 = v103[2];
    uint64_t v87 = v103[1];
    uint64_t v88 = v103[0];
  }
  else
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v106) == 1)
    {
      uint64_t v87 = 0;
      uint64_t v88 = 0;
      uint64_t v85 = 0;
      uint64_t v86 = 0;
      uint64_t v83 = 0;
      uint64_t v84 = 0;
      uint64_t v81 = 0;
      uint64_t v82 = 0;
      uint64_t v79 = 0;
      uint64_t v80 = 0;
      uint64_t v77 = 0;
      uint64_t v78 = 0;
      uint64_t v89 = 0;
      uint64_t v76 = 0;
    }
    else
    {
      uint64_t v76 = v130;
      uint64_t v89 = v129;
      uint64_t v77 = v128;
      uint64_t v78 = v127;
      uint64_t v79 = v126;
      uint64_t v80 = v125;
      uint64_t v87 = v118;
      uint64_t v88 = v117;
      uint64_t v85 = v120;
      uint64_t v86 = v119;
      uint64_t v83 = v122;
      uint64_t v84 = v121;
      uint64_t v81 = v124;
      uint64_t v82 = v123;
      sub_10051B2E8(v117, v118, v119, v120, v121, v122, v123, v124, v125, v126, v127, v128, v129);
    }
  }
  int v34 = swift_getKeyPath();
  uint64_t v96 = sub_1008EC8D8(v34, a1, (uint64_t)&type metadata for CRLWPParagraphAlignmentAttribute, (void (*)(uint64_t))sub_1005F2218, (uint64_t (*)(uint64_t, id, id, id))sub_10103AE6C, (void (*)(uint64_t, uint64_t))sub_1008432C0);
  int v102 = v35;
  int v36 = ~(_BYTE)v35;
  swift_release();
  unint64_t v94 = v14;
  if (!v36)
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v106) == 1)
    {
      uint64_t v96 = 0;
      int v37 = 255;
    }
    else
    {
      uint64_t v96 = v131;
      int v37 = v132;
    }
    int v102 = v37;
  }
  int v38 = swift_getKeyPath();
  uint64_t v101 = sub_1008EC8D8(v38, a1, (uint64_t)&type metadata for CRLWPWritingDirectionAttribute, (void (*)(uint64_t))sub_1008429AC, (uint64_t (*)(uint64_t, id, id, id))sub_10103A300, (void (*)(uint64_t, uint64_t))sub_1006F23FC);
  char v40 = v39;
  int v41 = ~v39;
  swift_release();
  int v92 = v24;
  int v93 = v22;
  if (!v41)
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v106) == 1)
    {
      uint64_t v101 = 0;
      char v40 = -1;
    }
    else
    {
      uint64_t v101 = v133;
      char v40 = v134;
    }
  }
  int v42 = swift_getKeyPath();
  uint64_t v43 = sub_1008ECA90(v42, a1);
  char v45 = v44;
  int v46 = ~v44;
  swift_release();
  int v95 = v16;
  if (v46)
  {
    uint64_t v47 = v12;
  }
  else
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    uint64_t v47 = v12;
    if (sub_1005DF0EC((uint64_t)&v106) == 1)
    {
      uint64_t v43 = 0;
      char v45 = -1;
    }
    else
    {
      uint64_t v43 = v135;
      char v45 = v136;
    }
  }
  int v48 = swift_getKeyPath();
  uint64_t v49 = sub_1008ECC28(v48, a1);
  char v51 = v50;

  swift_release();
  if (v51)
  {
    sub_10051B3EC((uint64_t)v139, (uint64_t)&v106, &qword_10168D670);
    int v54 = sub_1005DF0EC((uint64_t)&v106);
    int v53 = v91;
    if (v54 == 1)
    {
      uint64_t v49 = 0;
      char v52 = 1;
    }
    else
    {
      sub_1008EF10C(v139, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
      uint64_t v49 = v137;
      char v52 = v138;
    }
  }
  else
  {
    sub_1008EF10C(v139, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
    char v52 = 0;
    int v53 = v91;
  }
  char v55 = v90;
  uint64_t v56 = v100;
  char v57 = v99;
  uint64_t v58 = v98;
  char v59 = v97;
  uint64_t v61 = v88;
  uint64_t v60 = v89;
  uint64_t v63 = v86;
  uint64_t v62 = v87;
  uint64_t v64 = v84;
  uint64_t result = v85;
  uint64_t v66 = v82;
  uint64_t v65 = v83;
  uint64_t v68 = v80;
  uint64_t v67 = v81;
  uint64_t v70 = v78;
  uint64_t v69 = v79;
  uint64_t v72 = v76;
  uint64_t v71 = v77;
  uint64_t v73 = v96;
  LOBYTE(v103[0]) = v52;
  unint64_t v74 = v94;
  *(void *)a2 = v47;
  *(void *)(a2 + 8) = v74;
  LOBYTE(v106) = v55;
  *(unsigned char *)(a2 + 16) = v95;
  *(_DWORD *)(a2 + 20) = v53;
  *(unsigned char *)(a2 + 24) = v55;
  *(unsigned char *)(a2 + 25) = v93;
  *(unsigned char *)(a2 + 26) = v92;
  *(void *)(a2 + 32) = v56;
  *(unsigned char *)(a2 + 40) = v57;
  *(void *)(a2 + 48) = v58;
  *(unsigned char *)(a2 + 56) = v59;
  *(void *)(a2 + 64) = v61;
  *(void *)(a2 + 72) = v62;
  *(void *)(a2 + 80) = v63;
  *(void *)(a2 + 88) = result;
  *(void *)(a2 + 96) = v64;
  *(void *)(a2 + 104) = v65;
  *(void *)(a2 + 112) = v66;
  *(void *)(a2 + 120) = v67;
  *(void *)(a2 + 128) = v68;
  *(void *)(a2 + 136) = v69;
  *(void *)(a2 + 144) = v70;
  *(void *)(a2 + 152) = v71;
  *(void *)(a2 + 160) = v60;
  *(void *)(a2 + 168) = v72;
  *(void *)(a2 + 176) = v73;
  *(unsigned char *)(a2 + 184) = v102;
  *(void *)(a2 + 192) = v101;
  *(unsigned char *)(a2 + 200) = v40;
  *(void *)(a2 + 208) = v43;
  *(unsigned char *)(a2 + 216) = v45;
  *(void *)(a2 + 224) = v49;
  *(unsigned char *)(a2 + 232) = v103[0];
  *(void *)(a2 + 240) = &_swiftEmptyDictionarySingleton;
  return result;
}

void *sub_1008EF10C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28],
    a1[29],
    a1[30]);
  return a1;
}

uint64_t sub_1008EF198()
{
  return 24;
}

uint64_t sub_1008EF1A4()
{
  return swift_release();
}

uint64_t sub_1008EF1AC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return swift_retain();
}

__n128 sub_1008EF1CC(__n128 *a1, uint64_t a2)
{
  *(void *)a2 = a1[1].n128_u64[0];
  __n128 result = *a1;
  *(__n128 *)(a2 + 8) = *a1;
  return result;
}

double sub_1008EF1E0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = 3;
  if (a1) {
    uint64_t v2 = 5;
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = 0;
  *(_DWORD *)(a2 + 20) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  *(unsigned char *)(a2 + 25) = a1 != 0;
  *(unsigned char *)(a2 + 26) = 2;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = -1;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = -1;
  double result = 0.0;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(void *)(a2 + 176) = 2;
  *(unsigned char *)(a2 + 184) = 0;
  *(void *)(a2 + 192) = -1;
  *(unsigned char *)(a2 + 200) = 0;
  *(void *)(a2 + 208) = 0;
  *(unsigned char *)(a2 + 216) = 0;
  *(void *)(a2 + 224) = 0;
  *(unsigned char *)(a2 + 232) = 1;
  *(void *)(a2 + 240) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1008EF284(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0xB) {
    return 12;
  }
  else {
    return byte_101196B00[a1 + 1];
  }
}

uint64_t sub_1008EF2A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E746E6F665FLL && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A6953746E6F665FLL && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646C6F625FLL && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x63696C6174695FLL && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696C7265646E755FLL && a2 == 0xEA0000000000656ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74656B697274735FLL && a2 == 0xEE006867756F7268 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746361726168635FLL && a2 == 0xEE006C6C69467265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001012606A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001012606C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7974537473696C5FLL && a2 == 0xEE0065707954656CLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6174537473696C5FLL && a2 == 0xEA00000000007472 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_1008EF7E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v132 = sub_1005057FC(&qword_101686E38);
  uint64_t v5 = *(void *)(v132 - 8);
  __chkstk_darwin(v132, v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1008ED9C8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v68 = v5;
    sub_1005057FC(&qword_1016875E0);
    LOBYTE(v69) = 0;
    sub_1008F02DC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v67 = a2;
    uint64_t v9 = v85;
    unint64_t v10 = v86;
    int v11 = v87;
    LOBYTE(v85) = 1;
    sub_10051B3B0(v9, v86, v87);
    unint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    unint64_t v65 = v10;
    int v66 = v11;
    uint64_t v13 = HIDWORD(v12) & 1;
    char v129 = BYTE4(v12) & 1;
    LOBYTE(v85) = 2;
    unint64_t v14 = v12;
    int v15 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v62 = v13;
    int v63 = v15;
    unint64_t v64 = v14;
    LOBYTE(v85) = 3;
    LODWORD(v13) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    sub_1005057FC(&qword_10167BDF8);
    LOBYTE(v69) = 4;
    sub_1008F0350();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v16 = v85;
    int v61 = v86;
    sub_1005057FC(&qword_101687550);
    LOBYTE(v69) = 5;
    sub_1008F03C4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v47 = v85;
    uint64_t v48 = v16;
    LODWORD(v16) = v86;
    LOBYTE(v69) = 6;
    sub_1008F0438();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    int v43 = v16;
    uint64_t v46 = v85;
    uint64_t v59 = v87;
    uint64_t v60 = v86;
    uint64_t v57 = v89;
    uint64_t v58 = v88;
    uint64_t v51 = v91;
    uint64_t v52 = v90;
    uint64_t v50 = v92;
    uint64_t v55 = v94;
    uint64_t v56 = v93;
    uint64_t v53 = v96;
    uint64_t v54 = v95;
    uint64_t v17 = v97;
    uint64_t v18 = v98;
    uint64_t v44 = sub_1005057FC(&qword_101687860);
    uint64_t v45 = v18;
    LOBYTE(v69) = 7;
    uint64_t v49 = v17;
    sub_10051B2E8(v46, v60, v59, v58, v57, v52, v51, v50, v56, v55, v54, v53, v17);
    sub_1008F048C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v19 = v85;
    LODWORD(v44) = v86;
    sub_1005057FC(&qword_10167BE18);
    LOBYTE(v69) = 8;
    sub_1008F0500();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v42 = v85;
    int v41 = v86;
    sub_1005057FC(&qword_10167BDC8);
    LOBYTE(v69) = 9;
    sub_1008F0574();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v40 = v85;
    int v39 = v86;
    LOBYTE(v85) = 10;
    uint64_t v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    int v38 = v21 & 1;
    char v123 = v21 & 1;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v120 = 11;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v8, v132);
    uint64_t v132 = v121;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    BYTE8(v70) = v62;
    BYTE8(v83) = v38;
    unint64_t v22 = v65;
    *(void *)&long long v69 = v9;
    *((void *)&v69 + 1) = v65;
    LOBYTE(v17) = v66;
    LOBYTE(v70) = v66;
    DWORD1(v70) = v64;
    BYTE9(v70) = v63;
    HIDWORD(v35) = v13;
    BYTE10(v70) = v13;
    *(void *)&long long v71 = v48;
    BYTE8(v71) = v61;
    *(void *)&long long v72 = v47;
    BYTE8(v72) = v43;
    *(void *)&long long v73 = v46;
    *((void *)&v73 + 1) = v60;
    *(void *)&long long v74 = v59;
    *((void *)&v74 + 1) = v58;
    *(void *)&long long v75 = v57;
    *((void *)&v75 + 1) = v52;
    *(void *)&long long v76 = v51;
    *((void *)&v76 + 1) = v50;
    *(void *)&long long v77 = v56;
    *((void *)&v77 + 1) = v55;
    *(void *)&long long v78 = v54;
    *((void *)&v78 + 1) = v53;
    *(void *)&long long v79 = v49;
    *((void *)&v79 + 1) = v45;
    uint64_t v36 = v19;
    uint64_t v37 = v20;
    *(void *)&long long v80 = v19;
    BYTE8(v80) = v44;
    *(void *)&long long v81 = v42;
    BYTE8(v81) = v41;
    *(void *)&long long v82 = v40;
    BYTE8(v82) = v39;
    *(void *)&long long v83 = v20;
    uint64_t v84 = v132;
    sub_1005DF3EC((uint64_t)&v69);
    swift_bridgeObjectRelease();
    uint64_t v23 = v51;
    uint64_t v24 = v52;
    uint64_t v25 = v50;
    sub_10051ABBC(v46, v60, v59, v58, v57, v52, v51, v50, v56, v55, v54, v53, v49);
    sub_10051AC88(v9, v22, v17);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    uint64_t v85 = v9;
    uint64_t v86 = v22;
    LOBYTE(v87) = v17;
    *(_WORD *)((char *)&v87 + 1) = v130;
    BYTE3(v87) = v131;
    HIDWORD(v87) = v64;
    LOBYTE(v88) = v129;
    BYTE1(v88) = v63;
    BYTE2(v88) = BYTE4(v35);
    *(_DWORD *)((char *)&v88 + 3) = *(_DWORD *)&v128[7];
    HIBYTE(v88) = v128[11];
    uint64_t v89 = v48;
    LOBYTE(v90) = v61;
    HIDWORD(v90) = *(_DWORD *)&v128[3];
    *(_DWORD *)((char *)&v90 + 1) = *(_DWORD *)v128;
    uint64_t v91 = v47;
    LOBYTE(v92) = v43;
    *(_DWORD *)((char *)&v92 + 1) = *(_DWORD *)v127;
    HIDWORD(v92) = *(_DWORD *)&v127[3];
    uint64_t v93 = v46;
    uint64_t v94 = v60;
    uint64_t v95 = v59;
    uint64_t v96 = v58;
    uint64_t v97 = v57;
    uint64_t v98 = v24;
    uint64_t v99 = v23;
    uint64_t v100 = v25;
    uint64_t v101 = v56;
    uint64_t v102 = v55;
    uint64_t v103 = v54;
    uint64_t v104 = v53;
    uint64_t v105 = v49;
    uint64_t v106 = v45;
    uint64_t v107 = v36;
    char v108 = v44;
    *(_DWORD *)&v109[3] = *(_DWORD *)&v126[3];
    *(_DWORD *)unsigned int v109 = *(_DWORD *)v126;
    uint64_t v110 = v42;
    char v111 = v41;
    *(_DWORD *)&v112[3] = *(_DWORD *)&v125[3];
    *(_DWORD *)unsigned __int8 v112 = *(_DWORD *)v125;
    uint64_t v113 = v40;
    char v114 = v39;
    *(_DWORD *)&v115[3] = *(_DWORD *)&v124[3];
    *(_DWORD *)uint64_t v115 = *(_DWORD *)v124;
    uint64_t v116 = v37;
    char v117 = v123;
    *(_DWORD *)&v118[3] = *(_DWORD *)&v122[3];
    *(_DWORD *)uint64_t v118 = *(_DWORD *)v122;
    uint64_t v119 = v132;
    uint64_t result = sub_10089B210((uint64_t)&v85);
    long long v27 = v82;
    uint64_t v28 = v67;
    *(_OWORD *)(v67 + 192) = v81;
    *(_OWORD *)(v28 + 208) = v27;
    *(_OWORD *)(v28 + 224) = v83;
    *(void *)(v28 + 240) = v84;
    long long v29 = v78;
    *(_OWORD *)(v28 + 128) = v77;
    *(_OWORD *)(v28 + 144) = v29;
    long long v30 = v80;
    *(_OWORD *)(v28 + 160) = v79;
    *(_OWORD *)(v28 + 176) = v30;
    long long v31 = v74;
    *(_OWORD *)(v28 + 64) = v73;
    *(_OWORD *)(v28 + 80) = v31;
    long long v32 = v76;
    *(_OWORD *)(v28 + 96) = v75;
    *(_OWORD *)(v28 + 112) = v32;
    long long v33 = v70;
    *(_OWORD *)uint64_t v28 = v69;
    *(_OWORD *)(v28 + 16) = v33;
    long long v34 = v72;
    *(_OWORD *)(v28 + 32) = v71;
    *(_OWORD *)(v28 + 48) = v34;
  }
  return result;
}

unint64_t sub_1008F02DC()
{
  unint64_t result = qword_101686E40;
  if (!qword_101686E40)
  {
    sub_100522D34(&qword_1016875E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E40);
  }
  return result;
}

unint64_t sub_1008F0350()
{
  unint64_t result = qword_101686E48;
  if (!qword_101686E48)
  {
    sub_100522D34(&qword_10167BDF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E48);
  }
  return result;
}

unint64_t sub_1008F03C4()
{
  unint64_t result = qword_101686E50;
  if (!qword_101686E50)
  {
    sub_100522D34(&qword_101687550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E50);
  }
  return result;
}

unint64_t sub_1008F0438()
{
  unint64_t result = qword_101686E58;
  if (!qword_101686E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E58);
  }
  return result;
}

unint64_t sub_1008F048C()
{
  unint64_t result = qword_101686E60;
  if (!qword_101686E60)
  {
    sub_100522D34(&qword_101687860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E60);
  }
  return result;
}

unint64_t sub_1008F0500()
{
  unint64_t result = qword_101686E68;
  if (!qword_101686E68)
  {
    sub_100522D34(&qword_10167BE18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E68);
  }
  return result;
}

unint64_t sub_1008F0574()
{
  unint64_t result = qword_101686E70;
  if (!qword_101686E70)
  {
    sub_100522D34(&qword_10167BDC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E70);
  }
  return result;
}

unint64_t sub_1008F05E8()
{
  unint64_t result = qword_101686E80;
  if (!qword_101686E80)
  {
    sub_100522D34(&qword_1016875E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E80);
  }
  return result;
}

unint64_t sub_1008F065C()
{
  unint64_t result = qword_101686E88;
  if (!qword_101686E88)
  {
    sub_100522D34(&qword_10167BDF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E88);
  }
  return result;
}

unint64_t sub_1008F06D0()
{
  unint64_t result = qword_101686E90;
  if (!qword_101686E90)
  {
    sub_100522D34(&qword_101687550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686E90);
  }
  return result;
}

unint64_t sub_1008F0744()
{
  unint64_t result = qword_101686EA0;
  if (!qword_101686EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686EA0);
  }
  return result;
}

unint64_t sub_1008F0798()
{
  unint64_t result = qword_101686EA8;
  if (!qword_101686EA8)
  {
    sub_100522D34(&qword_101687860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686EA8);
  }
  return result;
}

unint64_t sub_1008F080C()
{
  unint64_t result = qword_101686EB0;
  if (!qword_101686EB0)
  {
    sub_100522D34(&qword_10167BE18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686EB0);
  }
  return result;
}

unint64_t sub_1008F0880()
{
  unint64_t result = qword_101686EB8;
  if (!qword_101686EB8)
  {
    sub_100522D34(&qword_10167BDC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686EB8);
  }
  return result;
}

uint64_t sub_1008F08F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008F093C()
{
  unint64_t result = qword_101686EC0;
  if (!qword_101686EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686EC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLWPTextPresetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008F0A5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPTextPresetData.CodingKeys()
{
  return &type metadata for CRLWPTextPresetData.CodingKeys;
}

unint64_t sub_1008F0A98()
{
  unint64_t result = qword_101686EC8;
  if (!qword_101686EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101686EC8);
  }
  return result;
}

double *sub_1008F0AEC()
{
  uint64_t v0 = type metadata accessor for PKDrawing();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  unsigned int v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v6 = (void *)Strong;
    uint64_t v7 = self;
    Class isa = (Class)[v7 allDrawingItemsDescendedFromContainer:v6];
    if (!isa)
    {
      type metadata accessor for CRLFreehandDrawingItem();
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    id v9 = [v7 makePKDrawingFromDrawingItems:isa];

    static PKDrawing._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = self;
    Class v11 = PKDrawing._bridgeToObjectiveC()().super.isa;
    id v12 = [v10 indexableStringFromDrawing:v11];

    if (v12)
    {
      uint64_t v28 = v1;
      uint64_t v29 = v0;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      long long v32 = (double *)v13;
      uint64_t v33 = v15;
      uint64_t v30 = 10;
      unint64_t v31 = 0xE100000000000000;
      sub_10052E310();
      uint64_t v16 = StringProtocol.components<A>(separatedBy:)();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        uint64_t v18 = (uint64_t *)(v16 + 40);
        uint64_t v19 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v23 = *(v18 - 1);
          uint64_t v24 = *v18;
          uint64_t v25 = HIBYTE(*v18) & 0xF;
          if ((*v18 & 0x2000000000000000) == 0) {
            uint64_t v25 = v23 & 0xFFFFFFFFFFFFLL;
          }
          if (v25)
          {
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            long long v32 = v19;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1006BB504(0, *((void *)v19 + 2) + 1, 1);
              uint64_t v19 = v32;
            }
            unint64_t v21 = *((void *)v19 + 2);
            unint64_t v20 = *((void *)v19 + 3);
            if (v21 >= v20 >> 1)
            {
              sub_1006BB504(v20 > 1, v21 + 1, 1);
              uint64_t v19 = v32;
            }
            *((void *)v19 + 2) = v21 + 1;
            unint64_t v22 = &v19[2 * v21];
            *((void *)v22 + 4) = v23;
            *((void *)v22 + 5) = v24;
          }
          v18 += 2;
          --v17;
        }
        while (v17);
      }
      else
      {
        uint64_t v19 = _swiftEmptyArrayStorage;
      }

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v29);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"stringContentForSearch", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLPKDrawingIndexableModel.swift", 97, 2, 21, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"stringContentForSearch", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLPKDrawingIndexableModel.swift", 97, 2, 21);
  }
  return v19;
}

id sub_1008F0EC0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLPKDrawingIndexableModel();
  [super dealloc];
}

uint64_t type metadata accessor for CRLPKDrawingIndexableModel()
{
  return self;
}

void sub_1008F0F2C(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, void *a6, void *a7, UIFontWeight a8)
{
  if (a1)
  {
    uint64_t v15 = self;
    id v44 = a1;
    id v16 = [v15 preferredFontDescriptorWithTextStyle:a2];
    uint64_t v17 = self;
    [v16 pointSize];
    id v18 = [v17 systemFontOfSize:];

    uint64_t v45 = v18;
    if (a4)
    {
      id v20 = [v18 fontDescriptor];
      [v20 pointSize];
      double v19 = v21;
    }
    else
    {
      double v19 = *(double *)&a3;
    }
    UIImageSymbolWeight v22 = UIImageSymbolWeightForFontWeight(a8);
    uint64_t v23 = self;
    id v24 = [v23 configurationWithPointSize:v22 weight:v19];
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_101177E70;
    *(void *)(v25 + 32) = a5;
    specialized Array._endMutation()();
    sub_1008F13C0();
    id v26 = a5;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v28 = [v23 configurationWithPaletteColors:isa];

    id v29 = [v24 configurationByApplyingConfiguration:v28];
    id v30 = [v44 imageByApplyingSymbolConfiguration:v29];
    [v43 setImage:v30 forState:0];

    if (a6)
    {
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_101177E70;
      *(void *)(v31 + 32) = a6;
      specialized Array._endMutation()();
      id v32 = a6;
      Class v33 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v34 = [v23 configurationWithPaletteColors:v33];

      id v35 = [v29 configurationByApplyingConfiguration:v34];
      id v36 = [v44 imageByApplyingSymbolConfiguration:v35];
      [v43 setImage:v36 forState:2];
    }
    if (a7)
    {
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_101177E70;
      *(void *)(v37 + 32) = a7;
      specialized Array._endMutation()();
      id v38 = a7;
      Class v39 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v40 = [v23 configurationWithPaletteColors:v39];

      id v41 = [v29 configurationByApplyingConfiguration:v40];
      id v42 = [v44 imageByApplyingSymbolConfiguration:v41];
      [v43 setImage:v42 forState:1];
    }
    id v47 = String._bridgeToObjectiveC()();
    [v43 setAccessibilityLabel:v47];
  }
}

unint64_t sub_1008F13C0()
{
  unint64_t result = qword_101687FC0;
  if (!qword_101687FC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101687FC0);
  }
  return result;
}

id sub_1008F1400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  swift_unknownObjectRetain();
  sub_1005057FC((uint64_t *)&unk_10167BE80);
  sub_1005057FC(&qword_101687010);
  if (swift_dynamicCast())
  {
    sub_10053974C(v16, (uint64_t)v20);
    uint64_t v5 = v21;
    uint64_t v6 = v22;
    sub_10050F848(v20, v21);
    id v7 = (id)(*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v6 + 8))(*(void *)(v3 + 16), a3, v5, v6);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
  }
  else
  {
    uint64_t v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_1008F1658((uint64_t)v16);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getObjectType();
    id v7 = v8;
    uint64_t v10 = _typeName(_:qualified:)();
    uint64_t v12 = v11;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = v12;
    uint64_t v13 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v13, (uint64_t)"CRLBoardLogicProvider cannot create a cloud record from an unknown local record. Local Record: %{public}@", 105, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_1008F16B8();
    swift_allocError();
    *uint64_t v14 = 1;
    swift_willThrow();
  }
  return v7;
}

uint64_t type metadata accessor for CRLPublicCloudRecordProvider()
{
  return self;
}

uint64_t sub_1008F1658(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101687018);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1008F16B8()
{
  unint64_t result = qword_101687020;
  if (!qword_101687020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687020);
  }
  return result;
}

uint64_t sub_1008F170C(void *a1)
{
  uint64_t v2 = CKRecord.recordType.getter();
  char v4 = sub_100D2AD54(v2, v3);
  swift_bridgeObjectRelease();
  switch(v4)
  {
    case 4:
      uint64_t result = sub_100D3A7AC(a1);
      break;
    case 5:
      uint64_t result = sub_100D3C104(a1);
      break;
    case 6:
      uint64_t result = sub_100D3DEF0(a1);
      break;
    case 8:
      id v16 = [a1 recordID];
      type metadata accessor for CRLUnknownSyncRemoteRecord();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v16;
      break;
    default:
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v5 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      initeCGFloat d = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v7 = v5;
      uint64_t v8 = CKRecord.recordType.getter();
      sub_100D2AD54(v8, v9);
      swift_bridgeObjectRelease();
      sub_1005057FC(&qword_101687028);
      uint64_t v10 = String.init<A>(describing:)();
      uint64_t v12 = v11;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v10;
      *(void *)(inited + 40) = v12;
      uint64_t v13 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v13, (uint64_t)"CRLPublicCloudRecordProvider should not be getting this non-public CloudRecord: recordType %{public}@.", 102, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_1008F16B8();
      swift_allocError();
      *uint64_t v14 = 0;
      uint64_t result = swift_willThrow();
      break;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLPublicCloudRecordProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008F1A54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPublicCloudRecordProviderError()
{
  return &type metadata for CRLPublicCloudRecordProviderError;
}

unint64_t sub_1008F1A90()
{
  unint64_t result = qword_101687030;
  if (!qword_101687030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687030);
  }
  return result;
}

void sub_1008F1AE4()
{
}

id sub_1008F1B08(uint64_t a1)
{
  return [*v1 characterAtIndex:a1];
}

void sub_1008F1B30(uint64_t a1, int64_t a2, uint64_t a3, unint64_t a4, int a5)
{
}

uint64_t sub_1008F1B54()
{
  return swift_getAtKeyPath();
}

uint64_t sub_1008F1B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, (uint64_t *)&unk_101683850);
}

uint64_t sub_1008F1B68()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t sub_1008F1BB0()
{
  return swift_getAtKeyPath();
}

uint64_t sub_1008F1BB8()
{
  swift_retain();
  swift_setAtWritableKeyPath();

  return swift_release();
}

uint64_t sub_1008F1C04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *a1;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v13, v3 + *(int *)(a2 + 36), v8, v11);
  uint64_t v14 = *(void *)(a2 + 24);
  v16[0] = *(void *)(a2 + 16);
  v16[1] = *(void *)(class metadata base offset for WritableKeyPath + v7 + 8);
  long long v16[2] = v14;
  v16[3] = a3;
  v16[4] = a1;
  swift_getKeyPath();
  swift_retain();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

void sub_1008F1D9C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  __chkstk_darwin(v4, v5);
  id v35 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101687AE0);
  uint64_t v38 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPStorageCRDTData(0);
  *(void *)&double v17 = __chkstk_darwin(v15 - 8, v16).n128_u64[0];
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = [v2 textRangeForParagraphAtCharIndex:a1, v17];
  if (v21 != (id)0x7FFFFFFFFFFFFFFFLL || v20 != 0)
  {
    uint64_t v23 = v20;
    id v24 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
    uint64_t v34 = sub_1006CC83C((uint64_t)v21, v23);
    id v25 = sub_10090059C(*(void *)(v34 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range), *(void *)(v34 + OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8), &v39);
    id v26 = v39;
    uint64_t v27 = *(void *)&v39[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v27)
    {
      (*(void (**)(id))(*(void *)v27 + 760))(v25);
      sub_100919454((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
      sub_1005057FC((uint64_t *)&unk_10167BC20);
      CRAttributedString.subscript.getter();
      sub_100918D58((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
      id v28 = (void *)CRAttributedString.Substring.attributedString.getter();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v7);
      id v29 = [v28 string];

      if (v29)
      {

        long long v42 = v40;
        uint64_t v43 = v41;
        sub_1006436E8((id *)&v42);
        id v30 = v35;
        static CharacterSet.newlines.getter();
        Class isa = CharacterSet._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v37);
        id v32 = [v29 stringByTrimmingCharactersInSet:isa];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1008F219C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v35[1] = a2;
  v35[2] = a3;
  uint64_t v36 = a1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  v35[0] = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v35 - v10;
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v22 = __chkstk_darwin(v20, v21);
  id v24 = (char *)v35 - v23;
  uint64_t v37 = v3;
  uint64_t v40 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v25 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v25)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  (*(void (**)(__n128))(*(void *)v25 + 760))(v22);
  uint64_t v39 = v12;
  sub_100919454((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v24, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  id v26 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v26(v11, v24, v4);
  sub_100918D58((uint64_t)v24, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v27 = (void *)CRAttributedString.attributedString.getter();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v5 + 8);
  v38(v11, v4);
  id v28 = [v27 length];

  BOOL v29 = (uint64_t)v28 < v36;
  uint64_t v30 = v37;
  if (!v29)
  {
LABEL_6:
    uint64_t v33 = *(void *)(v30 + v40);
    if (v33)
    {
      (*(void (**)(void))(*(void *)v33 + 760))();
      sub_100919454((uint64_t)&v15[*(int *)(v39 + 20)], (uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v34 = (char *)v35[0];
      v26((char *)v35[0], v19, v4);
      sub_100918D58((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
      CRAttributedString.cursor(at:affinity:)();
      v38(v34, v4);
      return;
    }
    goto LABEL_9;
  }
  uint64_t v31 = *(void *)(v37 + v40);
  if (v31)
  {
    (*(void (**)(void))(*(void *)v31 + 760))();
    sub_100919454((uint64_t)&v15[*(int *)(v39 + 20)], (uint64_t)v24, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
    v26(v11, v24, v4);
    sub_100918D58((uint64_t)v24, type metadata accessor for CRLWPStorageCRDTData);
    id v32 = (void *)CRAttributedString.attributedString.getter();
    v38(v11, v4);
    [v32 length];

    goto LABEL_6;
  }
LABEL_10:
  __break(1u);
}

void sub_1008F264C(void *a1)
{
  uint64_t v50 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v53 = v2;
  uint64_t v54 = v3;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v52, v7);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v14) {
    goto LABEL_11;
  }
  uint64_t v15 = *(uint64_t (**)(void))(*(void *)v14 + 440);
  id v16 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_store);
  swift_retain();
  uint64_t v17 = v15(0);
  swift_release();
  sub_1005C6DF0((uint64_t)v57);
  sub_10051B3EC((uint64_t)v57, (uint64_t)v63, &qword_10168D670);
  id v18 = objc_allocWithZone((Class)type metadata accessor for CRLWPStorage());
  uint64_t v19 = (char *)sub_100913E24(v16, v17, v63);

  swift_release();
  sub_100907358();
  uint64_t v51 = v19;
  uint64_t v49 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v20 = *(void *)&v19[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v20)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  (*(void (**)(void))(*(void *)v20 + 760))();
  sub_100919454((uint64_t)&v9[*(int *)(v52 + 20)], (uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v21 = v53;
  uint64_t v22 = v54;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v23(v6, v13, v53);
  sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
  id v24 = (void *)CRAttributedString.attributedString.getter();
  id v26 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v25 = v22 + 8;
  uint64_t v48 = v26;
  v26(v6, v21);
  int64_t v27 = (int64_t)[v24 length];

  if (v27 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v47 = v23;
  uint64_t v54 = v25;
  id v28 = [self mainBundle];
  NSString v29 = String._bridgeToObjectiveC()();
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = [v28 localizedStringForKey:v29 value:v30 table:0];

  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v34 = v33;

  int64_t v35 = v27;
  uint64_t v36 = v51;
  sub_100901520(0, v35, v32, v34, 1);
  uint64_t v37 = swift_bridgeObjectRelease();
  uint64_t v38 = v50;
  if (!v50) {
    return;
  }
  uint64_t v39 = *(void *)&v36[v49];
  if (!v39)
  {
LABEL_13:
    __break(1u);
    return;
  }
  (*(void (**)(uint64_t))(*(void *)v39 + 760))(v37);
  sub_100919454((uint64_t)&v9[*(int *)(v52 + 20)], (uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
  id v40 = v38;
  sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v41 = v53;
  v47(v6, v13, v53);
  sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
  long long v42 = (void *)CRAttributedString.attributedString.getter();
  v48(v6, v41);
  uint64_t v43 = (uint64_t)[v42 length];

  if (v43 < 0) {
    goto LABEL_10;
  }
  uint64_t KeyPath = swift_getKeyPath();
  id v45 = v40;
  sub_10090059C(0, v43, &v58);
  uint64_t v46 = v58;
  long long v61 = v59;
  uint64_t v62 = v60;
  long long v55 = v59;
  uint64_t v56 = v60;
  sub_100E93D50((uint64_t)v38, 0, KeyPath);

  swift_release();
  sub_1006436E8((id *)&v61);
}

uint64_t sub_1008F2BE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t sub_1008F2C00(uint64_t a1, char *a2, uint64_t a3, unsigned int (*a4)(char *, uint64_t, uint64_t), uint64_t *a5)
{
  char v131 = a5;
  uint64_t v128 = a4;
  uint64_t v129 = a3;
  uint64_t v133 = a1;
  uint64_t v6 = sub_1005057FC(&qword_1016879D0);
  uint64_t v143 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v135 = (double *)((char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v9 - 8, v10);
  char v134 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = (void *)sub_1005057FC(&qword_101687AE0);
  uint64_t v120 = *(v127 - 1);
  __chkstk_darwin(v127, v12);
  *(void *)&long long v126 = (char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1005057FC(&qword_1016879E0);
  uint64_t v122 = *(void *)(v141 - 8);
  uint64_t v15 = __chkstk_darwin(v141, v14);
  uint64_t v125 = (void (**)(char *, uint64_t))((char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15, v17);
  char v140 = (char *)&v116 - v18;
  uint64_t v19 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v142 = (uint64_t)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  uint64_t v119 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  uint64_t v145 = (uint64_t)&v116 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_1005057FC((uint64_t *)&unk_10167BE70);
  uint64_t v138 = *(void *)(v146 - 8);
  __chkstk_darwin(v146, v25);
  int64_t v27 = (uint64_t *)((char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  uint64_t v30 = __chkstk_darwin(v28 - 8, v29);
  unint64_t v139 = (char *)&v116 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v32);
  uint64_t v132 = (char *)&v116 - v33;
  uint64_t v34 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v118 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v116 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (char *)&v116 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v42, v43);
  uint64_t v144 = (uint64_t)&v116 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v123 = *(void *)(v124 - 8);
  uint64_t v46 = __chkstk_darwin(v124, v45);
  uint64_t v121 = (char *)&v116 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v48);
  uint64_t v50 = (char *)&v116 - v49;
  uint64_t v147 = _swiftEmptyArrayStorage;
  id v51 = [a2 characterCount];
  __int16 v130 = a2;
  uint64_t v52 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  char v136 = v27;
  uint64_t v137 = v22;
  if (v51)
  {
    if (v52)
    {
      (*(void (**)(void))(*(void *)v52 + 760))();
      uint64_t v53 = v144;
      sub_100919454((uint64_t)&v41[*(int *)(v38 + 20)], v144, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v41, type metadata accessor for CRLWPShapeItemCRDTData);
      (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v121, v53, v124);
      sub_100918D58(v53, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v54 = v126;
      CRAttributedString.subscript.getter();
      long long v55 = (char *)v125;
      uint64_t v56 = v127;
      CRAttributedString.Substring.runs.getter();
      (*(void (**)(uint64_t, void *))(v120 + 8))(v54, v56);
      (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v140, v55, v141);
      uint64_t v57 = v134;
      CRAttributedString.Runs.next()();
      uint64_t v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48);
      uint64_t v129 = v143 + 48;
      uint64_t v128 = v58;
      if (v58(v57, 1, v6) == 1)
      {
LABEL_4:
        (*(void (**)(char *, uint64_t))(v122 + 8))(v140, v141);
        sub_1008FB7F0();
        (*(void (**)(char *, uint64_t))(v123 + 8))(v121, v124);
        int64_t v27 = v136;
        uint64_t v22 = v137;
LABEL_7:
        uint64_t v70 = (uint64_t)v139;
        uint64_t v71 = *((void *)v147 + 2);
        if (v71)
        {
          uint64_t v72 = *(unsigned __int8 *)(v138 + 80);
          uint64_t v135 = v147;
          uint64_t v73 = (uint64_t)v147 + ((v72 + 32) & ~v72);
          uint64_t v74 = *(void *)(v138 + 72);
          long long v75 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48);
          char v140 = (char *)(v119 + 48);
          uint64_t v141 = v74;
          do
          {
            sub_100522E9C(v73, (uint64_t)v27, (uint64_t *)&unk_10167BE70);
            sub_100522E9C((uint64_t)v27 + *(int *)(v146 + 36), v70, (uint64_t *)&unk_10167BE90);
            if ((*v75)(v70, 1, v22) == 1)
            {
              sub_100522F00(v70, (uint64_t *)&unk_10167BE90);
              sub_100522F00((uint64_t)v27, (uint64_t *)&unk_10167BE70);
            }
            else
            {
              uint64_t v80 = v70;
              uint64_t v81 = v145;
              sub_1009197F0(v80, v145);
              long long v82 = v130;
              uint64_t v83 = sub_1009068B8(*(void *)(v81 + *(int *)(v22 + 24)), *(void *)(v81 + *(int *)(v22 + 24) + 8));
              uint64_t v85 = v84;
              uint64_t v86 = v142;
              sub_100522E9C(v81 + *(int *)(v22 + 20), v142, &qword_101672E90);
              uint64_t v143 = v85;
              uint64_t v144 = v83;
              id v87 = [v82 stringEquivalentFromRange:v83, v85];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v88 = type metadata accessor for URL();
              uint64_t v89 = *(void *)(v88 - 8);
              LODWORD(v86) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v86, 1, v88);
              swift_bridgeObjectRetain();
              uint64_t v91 = 0;
              if (v86 != 1)
              {
                uint64_t v92 = v142;
                URL._bridgeToObjectiveC()(v90);
                uint64_t v91 = v93;
                (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v92, v88);
              }
              id v76 = objc_allocWithZone((Class)CRLWPHyperlinkField);
              NSString v77 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              NSString v78 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v79 = [v76 initWithURL:v91 range:v144 displayText:v143 uuidString:v77];

              id v148 = v79;
              int64_t v27 = v136;
              sub_100910A9C((uint64_t)&v148, *v136, v136[1], v131);

              sub_100918D58(v145, type metadata accessor for CRLWPHyperlinkSmartFieldData);
              sub_100522F00((uint64_t)v27, (uint64_t *)&unk_10167BE70);
              uint64_t v22 = v137;
              uint64_t v70 = (uint64_t)v139;
              long long v75 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v140;
              uint64_t v74 = v141;
            }
            v73 += v74;
            --v71;
          }
          while (v71);
        }
        return swift_bridgeObjectRelease();
      }
      uint64_t v127 = *(void **)(v143 + 32);
      v143 += 32;
      uint64_t v125 = (void (**)(char *, uint64_t))(v143 - 24);
      long long v126 = xmmword_10117E810;
      ((void (*)(double *, char *, uint64_t))v127)(v135, v57, v6);
      while (1)
      {
        sub_1005057FC(&qword_101687AE8);
        uint64_t v96 = *(void *)(v138 + 72);
        unint64_t v97 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
        uint64_t v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = v126;
        uint64_t v99 = (void *)(v98 + v97);
        uint64_t v144 = CRAttributedString.Runs.Run.range.getter();
        uint64_t v101 = v100;
        __chkstk_darwin(v144, v100);
        sub_10091989C();
        swift_getKeyPath();
        sub_100913630();
        uint64_t v102 = v135;
        swift_retain();
        uint64_t v103 = (uint64_t)v132;
        CRAttributedString.Runs.Run.subscript.getter();
        swift_release();
        *uint64_t v99 = v144;
        v99[1] = v101;
        sub_10051B3EC(v103, v98 + v97 + *(int *)(v146 + 36), (uint64_t *)&unk_10167BE90);
        uint64_t v104 = *(void *)(v98 + 16);
        unint64_t v105 = (unint64_t)v147;
        int64_t v106 = *((void *)v147 + 2);
        int64_t v107 = v106 + v104;
        if (__OFADD__(v106, v104))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v107 <= *(void *)(v105 + 24) >> 1)
        {
          if (!v104) {
            goto LABEL_17;
          }
        }
        else
        {
          if (v106 <= v107) {
            int64_t v109 = v106 + v104;
          }
          else {
            int64_t v109 = v106;
          }
          unint64_t v105 = sub_100F62A44(isUniquelyReferenced_nonNull_native, v109, 1, v105);
          uint64_t v147 = (double *)v105;
          if (!v104) {
            goto LABEL_17;
          }
        }
        uint64_t v110 = *(void *)(v105 + 16);
        if ((*(void *)(v105 + 24) >> 1) - v110 < v104) {
          goto LABEL_37;
        }
        unint64_t v111 = v105 + v97 + v110 * v96;
        if ((unint64_t)v99 < v111 + v104 * v96 && v111 < (unint64_t)v99 + v104 * v96) {
          goto LABEL_41;
        }
        swift_arrayInitWithCopy();
        uint64_t v113 = *(void *)(v105 + 16);
        BOOL v114 = __OFADD__(v113, v104);
        uint64_t v115 = v113 + v104;
        if (v114) {
          goto LABEL_38;
        }
        *(void *)(v105 + 16) = v115;
LABEL_17:
        swift_bridgeObjectRelease();
        (*v125)((char *)v102, v6);
        uint64_t v95 = v134;
        CRAttributedString.Runs.next()();
        if (v128(v95, 1, v6) == 1) {
          goto LABEL_4;
        }
        ((void (*)(double *, char *, uint64_t))v127)(v102, v95, v6);
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v143 = v34;
    if (v52)
    {
      (*(void (**)(void))(*(void *)v52 + 760))();
      uint64_t v59 = v144;
      sub_100919454((uint64_t)&v41[*(int *)(v38 + 20)], v144, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v41, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v60 = v59 + *(int *)(v42 + 20);
      uint64_t v61 = v123;
      uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 16);
      char v117 = v50;
      v62(v50, v60, v124);
      sub_100918D58(v59, type metadata accessor for CRLWPStorageCRDTData);
      int v63 = v37;
      CRAttributedString.attributes(at:effectiveRange:)();
      sub_1005057FC(&qword_101687AE8);
      unint64_t v64 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_10117E810;
      int v66 = (void *)(v65 + v64);
      __chkstk_darwin(v65, v67);
      sub_10091989C();
      swift_getKeyPath();
      sub_100913630();
      swift_retain();
      uint64_t v68 = (uint64_t)v132;
      uint64_t v69 = v143;
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      void *v66 = 0;
      v66[1] = 0;
      sub_10051B3EC(v68, v65 + v64 + *(int *)(v146 + 36), (uint64_t *)&unk_10167BE90);
      sub_1006E1C64(v65);
      (*(void (**)(char *, uint64_t))(v118 + 8))(v63, v69);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v117, v124);
      goto LABEL_7;
    }
  }
  __break(1u);
LABEL_41:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1008F3BF0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v145 = (char *)a4;
  uint64_t v138 = a3;
  uint64_t v139 = a1;
  uint64_t v7 = sub_1005057FC(&qword_1016879D0);
  uint64_t v144 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v141 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v10 - 8, v11);
  char v140 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101687AE0);
  uint64_t v136 = *(void *)(v13 - 8);
  uint64_t v137 = (uint64_t (*)(void, void, void))v13;
  __chkstk_darwin(v13, v14);
  uint64_t v135 = (void (**)(char *, uint64_t))((char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v143 = sub_1005057FC(&qword_1016879E0);
  uint64_t v130 = *(void *)(v143 - 8);
  __chkstk_darwin(v143, v16);
  uint64_t v127 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v142 = (char *)&v125 - v20;
  uint64_t isUniquelyReferenced_nonNull_native = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v126 = *(void *)(isUniquelyReferenced_nonNull_native - 8);
  __chkstk_darwin(isUniquelyReferenced_nonNull_native, v22);
  uint64_t v24 = (char *)&v125 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v134, v25);
  uint64_t v133 = (char *)&v125 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v27 = (int *)type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v131 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v32);
  uint64_t v129 = (char *)&v125 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v36 = __chkstk_darwin(v34, v35).n128_u64[0];
  uint64_t v38 = (char *)&v125 - v37;
  uint64_t v154 = _swiftEmptyArrayStorage;
  id v39 = [a2 characterCount:v36];
  uint64_t v132 = a2;
  uint64_t v40 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  uint64_t v146 = (void *)a5;
  uint64_t v128 = v31;
  if (v39)
  {
    if (!v40) {
      goto LABEL_101;
    }
    uint64_t v41 = (uint64_t)v133;
    (*(void (**)(void))(*(void *)v40 + 760))();
    sub_100919454(v41 + *(int *)(v134 + 20), (uint64_t)v30, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58(v41, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v129, v30, v31);
    sub_100918D58((uint64_t)v30, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v42 = v135;
    CRAttributedString.subscript.getter();
    uint64_t v43 = v127;
    uint64_t v44 = v137;
    CRAttributedString.Substring.runs.getter();
    (*(void (**)(void, uint64_t (*)(void, void, void)))(v136 + 8))(v42, v44);
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v142, v43, v143);
    uint64_t v45 = v140;
    CRAttributedString.Runs.next()();
    uint64_t v137 = *(uint64_t (**)(void, void, void))(v144 + 48);
    uint64_t v138 = v144 + 48;
    int v46 = v137(v45, 1, v7);
    uint64_t v47 = v141;
    if (v46 != 1)
    {
      uint64_t v136 = *(void *)(v144 + 32);
      BOOL v114 = _swiftEmptyArrayStorage;
      v144 += 32;
      uint64_t v135 = (void (**)(char *, uint64_t))(v144 - 24);
      do
      {
        ((void (*)(char *, void *, uint64_t))v136)(v47, v45, v7);
        uint64_t v145 = (char *)CRAttributedString.Runs.Run.range.getter();
        uint64_t v116 = v115;
        __chkstk_darwin(v145, v115);
        *(&v125 - 4) = (uint64_t)&type metadata for CRLWPFontSizeAttribute;
        unint64_t v117 = sub_10083E4FC();
        uint64_t v118 = v139;
        *(&v125 - 3) = v117;
        *(&v125 - 2) = v118;
        swift_getKeyPath();
        sub_10083E5B0();
        swift_retain();
        CRAttributedString.Runs.Run.subscript.getter();
        swift_release();
        int v119 = v153[0];
        char v120 = BYTE4(v153[0]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v114 = (double *)sub_100F6451C(0, *((void *)v114 + 2) + 1, 1, v114);
        }
        unint64_t v122 = *((void *)v114 + 2);
        unint64_t v121 = *((void *)v114 + 3);
        if (v122 >= v121 >> 1) {
          BOOL v114 = (double *)sub_100F6451C((void *)(v121 > 1), v122 + 1, 1, v114);
        }
        *((void *)v114 + 2) = v122 + 1;
        uint64_t v123 = &v114[3 * v122];
        *((void *)v123 + 4) = v145;
        *((void *)v123 + 5) = v116;
        *((_DWORD *)v123 + 12) = v119;
        *((unsigned char *)v123 + 52) = v120;
        uint64_t v154 = v114;
        uint64_t v47 = v141;
        (*v135)(v141, v7);
        uint64_t v45 = v140;
        CRAttributedString.Runs.next()();
        int v124 = v137(v45, 1, v7);
        a5 = (unint64_t)v146;
      }
      while (v124 != 1);
    }
    (*(void (**)(char *, uint64_t))(v130 + 8))(v142, v143);
    sub_1008FBD2C();
    (*(void (**)(char *, uint64_t))(v131 + 8))(v129, v128);
    uint64_t v48 = v154;
  }
  else
  {
    uint64_t v145 = v38;
    uint64_t v49 = v126;
    if (!v40) {
      goto LABEL_102;
    }
    uint64_t v45 = v133;
    (*(void (**)(void))(*(void *)v40 + 760))();
    sub_100919454((uint64_t)v45 + *(int *)(v134 + 20), (uint64_t)v30, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v45, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v145, &v30[v27[5]], v31);
    sub_100918D58((uint64_t)v30, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v50 = CRAttributedString.attributes(at:effectiveRange:)();
    __chkstk_darwin(v50, v51);
    *(&v125 - 4) = (uint64_t)&type metadata for CRLWPFontSizeAttribute;
    unint64_t v52 = sub_10083E4FC();
    uint64_t v53 = v139;
    *(&v125 - 3) = v52;
    *(&v125 - 2) = v53;
    swift_getKeyPath();
    sub_10083E5B0();
    swift_retain();
    CRAttributedString.Attributes.subscript.getter();
    swift_release();
    LODWORD(v45) = v153[0];
    LOBYTE(v27) = BYTE4(v153[0]);
    uint64_t v48 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_99:
    }
      uint64_t v48 = (double *)sub_100F6451C(0, *((void *)v48 + 2) + 1, 1, v48);
    unint64_t v55 = *((void *)v48 + 2);
    unint64_t v54 = *((void *)v48 + 3);
    if (v55 >= v54 >> 1) {
      uint64_t v48 = (double *)sub_100F6451C((void *)(v54 > 1), v55 + 1, 1, v48);
    }
    *((void *)v48 + 2) = v55 + 1;
    uint64_t v56 = &v48[3 * v55];
    void v56[4] = 0.0;
    v56[5] = 0.0;
    *((_DWORD *)v56 + 12) = v45;
    *((unsigned char *)v56 + 52) = (_BYTE)v27;
    uint64_t v154 = v48;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v24, isUniquelyReferenced_nonNull_native);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v145, v128);
  }
  uint64_t v143 = (uint64_t)v48;
  uint64_t v24 = (char *)*((void *)v48 + 2);
  if (!v24) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v145 = &v132[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride];
  uint64_t v49 = v143 + 52;
  uint64_t v144 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&qword_10168D670;
  while (1)
  {
    int64_t v27 = *(int **)(v49 - 20);
    uint64_t v48 = *(double **)(v49 - 12);
    if (*(unsigned char *)v49) {
      break;
    }
    if (__OFSUB__(v48, v27))
    {
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    int v59 = *(_DWORD *)(v49 - 4);
    id v60 = [self valueWithRange:v27, (char *)v48 - (char *)v27];
    id v61 = objc_allocWithZone((Class)NSNumber);
    int64_t v27 = (int *)v60;
    LODWORD(v62) = v59;
    id v63 = [v61 initWithFloat:v62];
    uint64_t v64 = *(void *)a5;
    unint64_t v65 = *(void *)a5 & 0xC000000000000001;
    if (v63)
    {
      id v66 = v63;
      if (v65)
      {
        if (v64 >= 0) {
          v64 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        uint64_t v67 = __CocoaDictionary.count.getter();
        if (__OFADD__(v67, 1)) {
          goto LABEL_93;
        }
        *(void *)a5 = sub_1009EC768(v64, v67 + 1);
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v153[0] = *(void *)a5;
      uint64_t v68 = v153[0];
      *(void *)a5 = 0x8000000000000000;
      a5 = sub_1009570E8((uint64_t)v27);
      uint64_t v70 = *(void *)(v68 + 16);
      BOOL v71 = (v69 & 1) == 0;
      uint64_t v72 = v70 + v71;
      if (__OFADD__(v70, v71)) {
        goto LABEL_91;
      }
      uint64_t v48 = v69;
      if (*(void *)(v68 + 24) >= v72)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_10098159C();
        }
      }
      else
      {
        sub_10096962C(v72, isUniquelyReferenced_nonNull_native);
        unint64_t v73 = sub_1009570E8((uint64_t)v27);
        if ((v48 & 1) != (v74 & 1)) {
          goto LABEL_103;
        }
        a5 = v73;
      }
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&qword_10168D670;
      uint64_t v45 = (void *)v153[0];
      uint64_t v100 = 8 * a5;
      if ((v48 & 1) == 0)
      {
        *(void *)(v153[0] + 8 * (a5 >> 6) + 64) |= 1 << a5;
        *(void *)(v45[6] + 8 * a5) = v27;
        *(void *)(v45[7] + 8 * a5) = v66;
        uint64_t v101 = v45[2];
        BOOL v102 = __OFADD__(v101, 1);
        uint64_t v103 = v101 + 1;
        if (v102) {
          goto LABEL_95;
        }
        goto LABEL_67;
      }
LABEL_65:
      uint64_t v104 = v45[7];

      *(void *)(v104 + v100) = v66;
LABEL_68:
      a5 = (unint64_t)v146;
      *uint64_t v146 = v45;
      goto LABEL_69;
    }
    if (!v65)
    {
      swift_bridgeObjectRetain();
      unint64_t v94 = sub_1009570E8((uint64_t)v27);
      char v108 = v107;
      swift_bridgeObjectRelease();
      if ((v108 & 1) == 0) {
        goto LABEL_80;
      }
      char v109 = swift_isUniquelyReferenced_nonNull_native();
      Swift::Int v93 = *(void *)a5;
      v153[0] = *(void *)a5;
      *(void *)a5 = 0x8000000000000000;
      if ((v109 & 1) == 0)
      {
        sub_10098159C();
        Swift::Int v93 = v153[0];
      }
      goto LABEL_76;
    }
    if (v64 < 0) {
      uint64_t v90 = *(void *)a5;
    }
    else {
      uint64_t v90 = v64 & 0xFFFFFFFFFFFFFF8;
    }
    int64_t v27 = v27;
    swift_bridgeObjectRetain();
    uint64_t v91 = __CocoaDictionary.lookup(_:)();

    if (v91)
    {
      swift_unknownObjectRelease();
      uint64_t v92 = __CocoaDictionary.count.getter();
      Swift::Int v93 = sub_1009EC768(v90, v92);
      swift_retain();
      unint64_t v94 = sub_1009570E8((uint64_t)v27);
      uint64_t v48 = v95;
      swift_release();
      if ((v48 & 1) == 0) {
        goto LABEL_97;
      }
LABEL_76:

      uint64_t v45 = *(void **)(*(void *)(v93 + 56) + 8 * v94);
      sub_10058ADC0(v94, v93);
      *(void *)a5 = v93;

      goto LABEL_77;
    }
LABEL_69:

LABEL_77:
    swift_bridgeObjectRelease();
LABEL_78:
    v49 += 24;
    if (!--v24) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_10051B3EC((uint64_t)v145, (uint64_t)v152, &qword_10168D670);
  sub_10051B3EC((uint64_t)v152, (uint64_t)v153, &qword_10168D670);
  if (sub_1005DF0EC((uint64_t)v153) != 1)
  {
    sub_10051B3EC((uint64_t)v152, (uint64_t)v149, &qword_10168D670);
    goto LABEL_29;
  }
  uint64_t v57 = *(void *)&v132[v144];
  if (v57)
  {
    uint64_t v45 = v133;
    (*(void (**)(void))(*(void *)v57 + 760))();
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v147, (uint64_t)v148, &qword_10168D670);
    sub_100918D58((uint64_t)v45, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)v148, (uint64_t)v149, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)v149) == 1)
    {
      float v58 = 18.0;
LABEL_31:
      if (__OFSUB__(v48, v27)) {
        goto LABEL_90;
      }
      id v76 = [self valueWithRange:v27 length:(char *)v48 - (char *)v27];
      id v77 = objc_allocWithZone((Class)NSNumber);
      int64_t v27 = (int *)v76;
      *(float *)&double v78 = v58;
      id v79 = [v77 initWithFloat:v78];
      uint64_t v80 = *(void *)a5;
      unint64_t v81 = *(void *)a5 & 0xC000000000000001;
      if (v79)
      {
        id v66 = v79;
        if (v81)
        {
          if (v80 >= 0) {
            v80 &= 0xFFFFFFFFFFFFFF8uLL;
          }
          uint64_t v82 = __CocoaDictionary.count.getter();
          if (__OFADD__(v82, 1)) {
            goto LABEL_94;
          }
          *(void *)a5 = sub_1009EC768(v80, v82 + 1);
        }
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v149[0] = *(void *)a5;
        uint64_t v83 = v149[0];
        *(void *)a5 = 0x8000000000000000;
        a5 = sub_1009570E8((uint64_t)v27);
        uint64_t v85 = *(void *)(v83 + 16);
        BOOL v86 = (v84 & 1) == 0;
        uint64_t v87 = v85 + v86;
        if (__OFADD__(v85, v86)) {
          goto LABEL_92;
        }
        uint64_t v48 = v84;
        if (*(void *)(v83 + 24) >= v87)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_10098159C();
          }
        }
        else
        {
          sub_10096962C(v87, isUniquelyReferenced_nonNull_native);
          unint64_t v88 = sub_1009570E8((uint64_t)v27);
          if ((v48 & 1) != (v89 & 1)) {
            goto LABEL_103;
          }
          a5 = v88;
        }
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&qword_10168D670;
        uint64_t v45 = (void *)v149[0];
        uint64_t v100 = 8 * a5;
        if (v48) {
          goto LABEL_65;
        }
        *(void *)(v149[0] + 8 * (a5 >> 6) + 64) |= 1 << a5;
        *(void *)(v45[6] + 8 * a5) = v27;
        *(void *)(v45[7] + 8 * a5) = v66;
        uint64_t v105 = v45[2];
        BOOL v102 = __OFADD__(v105, 1);
        uint64_t v103 = v105 + 1;
        if (v102) {
          goto LABEL_96;
        }
LABEL_67:
        void v45[2] = v103;
        int64_t v106 = v27;
        goto LABEL_68;
      }
      if (!v81)
      {
        swift_bridgeObjectRetain();
        unint64_t v94 = sub_1009570E8((uint64_t)v27);
        char v111 = v110;
        swift_bridgeObjectRelease();
        if ((v111 & 1) == 0)
        {
LABEL_80:

          goto LABEL_78;
        }
        char v112 = swift_isUniquelyReferenced_nonNull_native();
        Swift::Int v93 = *(void *)a5;
        v149[0] = *(void *)a5;
        *(void *)a5 = 0x8000000000000000;
        if ((v112 & 1) == 0)
        {
          sub_10098159C();
          Swift::Int v93 = v149[0];
        }
        goto LABEL_76;
      }
      if (v80 < 0) {
        uint64_t v96 = *(void *)a5;
      }
      else {
        uint64_t v96 = v80 & 0xFFFFFFFFFFFFFF8;
      }
      int64_t v27 = v27;
      swift_bridgeObjectRetain();
      uint64_t v97 = __CocoaDictionary.lookup(_:)();

      if (v97)
      {
        swift_unknownObjectRelease();
        uint64_t v98 = __CocoaDictionary.count.getter();
        Swift::Int v93 = sub_1009EC768(v96, v98);
        swift_retain();
        unint64_t v94 = sub_1009570E8((uint64_t)v27);
        uint64_t v48 = v99;
        swift_release();
        if ((v48 & 1) == 0) {
          goto LABEL_98;
        }
        goto LABEL_76;
      }
      goto LABEL_69;
    }
LABEL_29:
    float v58 = v150;
    int v75 = v151;
    sub_1008EF10C(v152, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
    sub_10089B210((uint64_t)v149);
    if (v75) {
      float v58 = 18.0;
    }
    goto LABEL_31;
  }
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  sub_10050BF48(0, (unint64_t *)&qword_10167AF10);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1008F4D7C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v99 = a4;
  Swift::Int v103 = a1;
  uint64_t v104 = a3;
  uint64_t v97 = sub_1005057FC(&qword_101687A90);
  __chkstk_darwin(v97, v6);
  uint64_t v96 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v100 = (char *)&v95 - v10;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101683740);
  __chkstk_darwin(v11, v12);
  uint64_t v98 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  BOOL v102 = (unint64_t *)((char *)&v95 - v16);
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v28 = __chkstk_darwin(v26 - 8, v27);
  uint64_t v30 = (char *)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v114 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v31 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v31)
  {
    __break(1u);
    goto LABEL_52;
  }
  (*(void (**)(__n128))(*(void *)v31 + 760))(v28);
  sub_100919454((uint64_t)&v25[*(int *)(v22 + 20)], (uint64_t)v30, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v25, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v30, v17);
  sub_100918D58((uint64_t)v30, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v32 = CRAttributedString.count.getter();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v33 = (char *)(v18 + 8);
  v34(v21, v17);
  if (v32 >= (a2 & ~(a2 >> 63))) {
    uint64_t v35 = a2 & ~(a2 >> 63);
  }
  else {
    uint64_t v35 = v32;
  }
  uint64_t v36 = v104 & ~(v104 >> 63);
  if (v32 < v36) {
    uint64_t v36 = v32;
  }
  uint64_t v104 = v36;
  if (v36 < v35)
  {
    __break(1u);
  }
  else
  {
    uint64_t v101 = (char *)v35;
    uint64_t v17 = (uint64_t)v102;
    *BOOL v102 = &_swiftEmptySetSingleton;
    unint64_t v95 = sub_1005D3BF8();
    CRAttributedString.Attributes.init()();
    uint64_t v11 = v103;
    sub_10051B3EC(v103, (uint64_t)v134, (uint64_t *)&unk_101687BD0);
    sub_10051B3EC((uint64_t)v134, (uint64_t)v137, (uint64_t *)&unk_101687BD0);
    if (v138 != 255)
    {
      char v37 = v138 & 1;
      uint64_t v38 = v137[0];
      unint64_t v39 = v137[1];
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v41 = sub_1009140C4(v38, v39, v37);
      uint64_t v43 = v42;
      sub_100CB8180((Swift::Int *)&v152, 0x656D614E746E6F66, 0xE800000000000000);
      uint64_t v44 = swift_bridgeObjectRelease();
      __chkstk_darwin(v44, v45);
      *(&v95 - 4) = (unint64_t)&type metadata for CRLWPCharacterScope;
      *(&v95 - 3) = (unint64_t)&type metadata for CRLWPFontNameAttribute;
      *(&v95 - 2) = sub_10083E550();
      *(&v95 - 1) = KeyPath;
      swift_getKeyPath();
      swift_retain();
      swift_bridgeObjectRetain();
      *(void *)&long long v152 = sub_100B149FC(v41, v43);
      *((void *)&v152 + 1) = v46;
      LOBYTE(v153) = 0;
      sub_1005057FC((uint64_t *)&unk_1016836C0);
      sub_10091307C();
      CRAttributedString.Attributes.subscript.setter();
      uint64_t v11 = v103;
      swift_bridgeObjectRelease();
      swift_release();
    }
    sub_10051B3EC(v11 + 20, (uint64_t)&v133, &qword_101673520);
    sub_10051B3EC((uint64_t)&v133, (uint64_t)v139, &qword_101673520);
    if ((v139[4] & 1) == 0)
    {
      uint64_t v47 = swift_getKeyPath();
      sub_100CB8180((Swift::Int *)&v152, 0x657A6953746E6F66, 0xE800000000000000);
      uint64_t v48 = swift_bridgeObjectRelease();
      __chkstk_darwin(v48, v49);
      *(&v95 - 4) = (unint64_t)&type metadata for CRLWPCharacterScope;
      *(&v95 - 3) = (unint64_t)&type metadata for CRLWPFontSizeAttribute;
      *(&v95 - 2) = sub_10083E4FC();
      *(&v95 - 1) = v47;
      swift_getKeyPath();
      sub_10051B3EC((uint64_t)&v133, (uint64_t)&v152, &qword_101673520);
      sub_1005057FC((uint64_t *)&unk_1016836C0);
      sub_10083E5B0();
      CRAttributedString.Attributes.subscript.setter();
    }
    sub_10051B3EC(v11 + 25, (uint64_t)&v132, &qword_101683780);
    sub_10051B3EC((uint64_t)&v132, (uint64_t)&v140, &qword_101683780);
    if (v140 != 2)
    {
      uint64_t v50 = swift_getKeyPath();
      sub_100CB8180((Swift::Int *)&v152, 1684828002, 0xE400000000000000);
      uint64_t v51 = swift_bridgeObjectRelease();
      __chkstk_darwin(v51, v52);
      *(&v95 - 4) = (unint64_t)&type metadata for CRLWPCharacterScope;
      *(&v95 - 3) = (unint64_t)&type metadata for CRLWPFontBoldAttribute;
      *(&v95 - 2) = sub_10083E4A8();
      *(&v95 - 1) = v50;
      swift_getKeyPath();
      sub_10051B3EC((uint64_t)&v132, (uint64_t)&v152, &qword_101683780);
      sub_1005057FC((uint64_t *)&unk_1016836C0);
      sub_100843254();
      CRAttributedString.Attributes.subscript.setter();
    }
    sub_10051B3EC(v11 + 26, (uint64_t)&v131, &qword_101683780);
    sub_10051B3EC((uint64_t)&v131, (uint64_t)&v141, &qword_101683780);
    if (v141 != 2)
    {
      uint64_t v53 = swift_getKeyPath();
      sub_100CB8180((Swift::Int *)&v152, 0x63696C617469, 0xE600000000000000);
      uint64_t v54 = swift_bridgeObjectRelease();
      __chkstk_darwin(v54, v55);
      *(&v95 - 4) = (unint64_t)&type metadata for CRLWPCharacterScope;
      *(&v95 - 3) = (unint64_t)&type metadata for CRLWPFontItalicAttribute;
      *(&v95 - 2) = sub_10083E454();
      *(&v95 - 1) = v53;
      swift_getKeyPath();
      sub_10051B3EC((uint64_t)&v131, (uint64_t)&v152, &qword_101683780);
      sub_1005057FC((uint64_t *)&unk_1016836C0);
      sub_100843200();
      CRAttributedString.Attributes.subscript.setter();
    }
    sub_10051B3EC(v11 + 32, (uint64_t)v130, &qword_101686E10);
    sub_10051B3EC((uint64_t)v130, (uint64_t)v142, &qword_101686E10);
    if (v142[8] != 255)
    {
      sub_10051B3EC((uint64_t)v142, (uint64_t)v143, &qword_10167BDF8);
      uint64_t v56 = swift_getKeyPath();
      sub_10051B3EC((uint64_t)v143, (uint64_t)&v144, &qword_10167BDF8);
      if (v145) {
        uint64_t v57 = 0;
      }
      else {
        uint64_t v57 = v144;
      }
      sub_100CB8180((Swift::Int *)&v152, 0x6E696C7265646E75, 0xE900000000000065);
      uint64_t v58 = swift_bridgeObjectRelease();
      __chkstk_darwin(v58, v59);
      *(&v95 - 4) = (unint64_t)&type metadata for CRLWPCharacterScope;
      *(&v95 - 3) = (unint64_t)&type metadata for CRLWPUnderlineAttribute;
      *(&v95 - 2) = sub_10083E400();
      *(&v95 - 1) = v56;
      swift_getKeyPath();
      *(void *)&long long v152 = v57;
      BYTE8(v152) = 0;
      sub_1005057FC((uint64_t *)&unk_1016836C0);
      sub_1008431AC();
      CRAttributedString.Attributes.subscript.setter();
    }
    sub_10051B3EC(v11 + 48, (uint64_t)v129, (uint64_t *)&unk_101687BE0);
    sub_10051B3EC((uint64_t)v129, (uint64_t)v146, (uint64_t *)&unk_101687BE0);
    if (v146[8] != 255)
    {
      sub_10051B3EC((uint64_t)v146, (uint64_t)v147, &qword_101687550);
      uint64_t v60 = swift_getKeyPath();
      sub_10051B3EC((uint64_t)v147, (uint64_t)&v148, &qword_101687550);
      if (v149) {
        uint64_t v61 = 0;
      }
      else {
        uint64_t v61 = v148;
      }
      sub_100CB8180((Swift::Int *)&v152, 0x6874656B69727473, 0xED00006867756F72);
      uint64_t v62 = swift_bridgeObjectRelease();
      __chkstk_darwin(v62, v63);
      *(&v95 - 4) = (unint64_t)&type metadata for CRLWPCharacterScope;
      *(&v95 - 3) = (unint64_t)&type metadata for CRLWPStrikethroughAttribute;
      *(&v95 - 2) = sub_10083E3AC();
      *(&v95 - 1) = v60;
      swift_getKeyPath();
      *(void *)&long long v152 = v61;
      BYTE8(v152) = 0;
      sub_1005057FC((uint64_t *)&unk_1016836C0);
      sub_100843158();
      CRAttributedString.Attributes.subscript.setter();
    }
    sub_10051B3EC(v11 + 64, (uint64_t)v128, &qword_101686E98);
    sub_10051B3EC((uint64_t)v128, (uint64_t)v150, &qword_101686E98);
    if ((void)v151)
    {
      long long v156 = v150[4];
      long long v157 = v150[5];
      long long v158 = v151;
      long long v152 = v150[0];
      long long v153 = v150[1];
      long long v154 = v150[2];
      long long v155 = v150[3];
      uint64_t v64 = swift_getKeyPath();
      sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
      v165[2] = v155;
      v165[3] = v156;
      v165[4] = v157;
      uint64_t v166 = v158;
      v165[0] = v153;
      v165[1] = v154;
      v135[0] = v153;
      v135[1] = v154;
      v135[3] = v156;
      v135[4] = v157;
      v135[2] = v155;
      uint64_t v136 = v158;
      sub_10091A53C(v128, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051B2E8);
      sub_10068F4F8((uint64_t)v165);
      unint64_t v65 = sub_1007B0B84((uint64_t)v135);
      sub_10051B3EC((uint64_t)&v152, (uint64_t)v167, &qword_101687C08);
      sub_10051B3EC((uint64_t)v167, (uint64_t)v168, &qword_101687C08);
      if (v168[8] == 1)
      {
        if (qword_10166FB80 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v66 = (id)static OS_os_log.persistence;
        uint64_t v67 = static os_log_type_t.info.getter();
        sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v67, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
      id v68 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v65];

      sub_10091A53C(v128, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051ABBC);
      sub_100CB8180(&v115, 0x6574636172616863, 0xED00006C6C694672);
      uint64_t v69 = swift_bridgeObjectRelease();
      __chkstk_darwin(v69, v70);
      *(&v95 - 4) = (unint64_t)&type metadata for CRLWPCharacterScope;
      *(&v95 - 3) = (unint64_t)&type metadata for CRLWPCharacterFillAttribute;
      *(&v95 - 2) = sub_10083E34C();
      *(&v95 - 1) = v64;
      swift_getKeyPath();
      swift_retain();
      id v71 = v68;
      sub_100F91F6C(v71, (uint64_t)&v115);
      uint64_t v72 = &_mh_execute_header;
      if (!v118) {
        uint64_t v72 = 0;
      }
      Swift::Int v105 = v115;
      uint64_t v106 = v116;
      unint64_t v107 = (unint64_t)v72 | v117;
      long long v108 = v119;
      long long v109 = v120;
      long long v110 = v121;
      long long v111 = v122;
      uint64_t v112 = v123;
      long long v113 = v124;
      sub_1005057FC((uint64_t *)&unk_1016836C0);
      sub_100913244();
      CRAttributedString.Attributes.subscript.setter();

      swift_release();
      uint64_t v11 = v103;
    }
    uint64_t v73 = v98;
    sub_100522E9C(v17, v98, (uint64_t *)&unk_101683740);
    id v74 = objc_allocWithZone((Class)sub_1005057FC((uint64_t *)&unk_101687BF0));
    uint64_t v33 = (char *)v99;
    uint64_t v30 = v101;
    sub_10083C824(v33, (uint64_t)v101, v104, v73);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_35;
    }
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_35:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_10051B3EC(v11 + 176, (uint64_t)v127, &qword_101686E18);
  sub_10051B3EC((uint64_t)v127, (uint64_t)&v159, &qword_101686E18);
  int v75 = v100;
  if (v160 != 255)
  {
    char v76 = v160 & 1;
    Swift::Int v77 = v159;
    uint64_t v78 = swift_getKeyPath();
    id v79 = v33;
    sub_100918DB8(v79, (uint64_t)v30, v104, v78, v77, v76);

    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  sub_10051B3EC(v11 + 208, (uint64_t)v126, &qword_101687C00);
  sub_10051B3EC((uint64_t)v126, (uint64_t)&v161, &qword_101687C00);
  if (v162 != 255)
  {
    int v80 = v162 & 1;
    unsigned __int8 v81 = v161;
    uint64_t v82 = swift_getKeyPath();
    uint64_t v83 = v33;
    sub_100919000(v83, (uint64_t)v30, v104, v82, v81, v80);

    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  sub_10051B3EC(v11 + 224, (uint64_t)v125, &qword_10167A3B0);
  sub_10051B3EC((uint64_t)v125, (uint64_t)&v163, &qword_10167A3B0);
  if (v164) {
    goto LABEL_48;
  }
  Swift::Int v103 = v163;
  uint64_t v84 = swift_getKeyPath();
  *int v75 = &_swiftEmptySetSingleton;
  uint64_t v85 = v33;
  uint64_t v86 = CRAttributedString.Attributes.init()();
  __chkstk_darwin(v86, v87);
  *(&v95 - 4) = (unint64_t)&type metadata for CRLWPParagraphScope;
  *(&v95 - 3) = (unint64_t)&type metadata for CRLWPListStartAttribute;
  unint64_t v88 = sub_10083BD04();
  *(&v95 - 2) = v88;
  *(&v95 - 1) = v84;
  uint64_t v89 = swift_getKeyPath();
  if (*(void *)&v85[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage])
  {
    uint64_t v90 = v89;
    swift_retain();
    sub_100CB8180(&v105, 0x726174537473696CLL, 0xE900000000000074);
    uint64_t v91 = swift_bridgeObjectRelease();
    __chkstk_darwin(v91, v92);
    *(&v95 - 4) = (unint64_t)&type metadata for CRLWPParagraphScope;
    *(&v95 - 3) = (unint64_t)&type metadata for CRLWPListStartAttribute;
    *(&v95 - 2) = v88;
    *(&v95 - 1) = v90;
    swift_getKeyPath();
    Swift::Int v105 = v103;
    LOBYTE(v106) = 0;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_10083BD58();
    CRAttributedString.Attributes.subscript.setter();
    uint64_t v93 = v96;
    sub_100522E9C((uint64_t)v75, v96, &qword_101687A90);
    id v94 = objc_allocWithZone((Class)sub_1005057FC((uint64_t *)&unk_1016836E0));
    sub_10083D5DC(v85, (uint64_t)v101, v104, v93);
    sub_100522F00((uint64_t)v75, &qword_101687A90);

    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v17 = (uint64_t)v102;
LABEL_48:
    sub_100522F00(v17, (uint64_t *)&unk_101683740);
    return;
  }
LABEL_52:
  __break(1u);
}

char *sub_1008F5F7C(char *result, uint64_t a2, id a3)
{
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t result = (char *)[a3 textRangeForParagraphsInCharRange:result, a2 - (void)result, v3, v4];
  BOOL v6 = __OFADD__(result, v5);
  uint64_t v7 = &result[v5];
  if (v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((uint64_t)v7 < (uint64_t)result) {
LABEL_7:
  }
    __break(1u);
  return result;
}

unint64_t sub_1008F5FD4()
{
  return 0xD000000000000014;
}

uint64_t sub_1008F5FF0()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F6040()
{
  return 0x6E696C7265646E75;
}

uint64_t sub_1008F605C()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F60AC()
{
  return 0x6874656B69727473;
}

uint64_t sub_1008F60D0()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F6120()
{
  return 0x657A6953746E6F66;
}

uint64_t sub_1008F6138()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F6188()
{
  return 0x656D614E746E6F66;
}

uint64_t sub_1008F61A0()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F61F0()
{
  return 1684828002;
}

uint64_t sub_1008F6200()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F6250()
{
  return 0x63696C617469;
}

uint64_t sub_1008F6264()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F62B4()
{
  return 0x6574636172616863;
}

uint64_t sub_1008F62D8()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

unint64_t sub_1008F6328()
{
  return 0xD000000000000012;
}

uint64_t sub_1008F6344()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

unint64_t sub_1008F6394@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s8Freeform25CRLiCloudConnectionStatusO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1008F63C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100919254();
  unint64_t v7 = sub_100912F24();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1008F6430()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_1008F649C()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_1008F64F8(uint64_t a1)
{
  unint64_t v2 = sub_100919254();
  unint64_t v3 = sub_1006F2354();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

uint64_t sub_1008F6558()
{
  return 0x6C7974537473696CLL;
}

uint64_t sub_1008F6574()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F65C4()
{
  return 0x726174537473696CLL;
}

uint64_t sub_1008F65E0()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F6630()
{
  return 0x7061726761726170;
}

uint64_t sub_1008F6654()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

uint64_t sub_1008F66A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10091BF9C();
  unint64_t v7 = sub_10091BEE8();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1008F6714()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_1008F6780()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_1008F67DC(uint64_t a1)
{
  unint64_t v2 = sub_10091BF9C();
  unint64_t v3 = sub_1006F2468();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

uint64_t sub_1008F683C(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101687A58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100912860();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v10 = *((unsigned char *)v3 + 8);
  uint64_t v15 = *v3;
  char v16 = v10;
  char v14 = 0;
  sub_1005057FC(&qword_101687A18);
  sub_1009194BC();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v11 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
    LOBYTE(v15) = 1;
    type metadata accessor for URL();
    sub_100912338(&qword_101687A68, 255, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v15) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v15 = *(uint64_t *)((char *)v3 + *(int *)(v11 + 28));
    char v14 = 3;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

Swift::Int sub_1008F6AA8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  char v10 = *(unsigned char *)(v0 + 8);
  v13[1] = *(void *)v0;
  char v14 = v10;
  sub_1005057FC(&qword_101687A18);
  CRExtensible.hash(into:)();
  uint64_t v11 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  sub_100522E9C(v0 + *(int *)(v11 + 20), (uint64_t)v9, &qword_101672E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v9, v1);
    Hasher._combine(_:)(1u);
    sub_100912338((unint64_t *)&unk_101687A20, 255, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  String.hash(into:)();
  sub_100AD82A0(v15, *(void *)(v0 + *(int *)(v11 + 28)));
  return Hasher._finalize()();
}

uint64_t sub_1008F6CF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101687A30);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v15 = 0;
  unsigned char v15[8] = 0;
  uint64_t v29 = *(int *)(v16 + 28);
  *(void *)&v15[v29] = _swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_100912860();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v27;
    type metadata accessor for URL();
    char v33 = 1;
    sub_100912338(&qword_101687A38, 255, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v18 = v28;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC((uint64_t)v7, (uint64_t)&v15[*(int *)(v12 + 20)], &qword_101672E90);
    char v32 = 2;
    uint64_t v19 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v20 = (uint64_t *)&v15[*(int *)(v12 + 24)];
    *uint64_t v20 = v19;
    v20[1] = v21;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v31 = 3;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v18);
    uint64_t v23 = v29;
    uint64_t v22 = v30;
    swift_bridgeObjectRelease();
    *(void *)&v15[v23] = v22;
    sub_100919454((uint64_t)v15, v26, type metadata accessor for CRLWPHyperlinkSmartFieldData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPHyperlinkSmartFieldData);
  }
}

BOOL sub_1008F70D0(char *a1, char *a2)
{
  return qword_1011988B0[*a1] == qword_1011988B0[*a2];
}

Swift::Int sub_1008F70F4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011988B0[v1]);
  return Hasher._finalize()();
}

void sub_1008F7144()
{
  Hasher._combine(_:)(qword_1011988B0[*v0]);
}

Swift::Int sub_1008F717C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011988B0[v1]);
  return Hasher._finalize()();
}

uint64_t sub_1008F71C8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1009192A8(*a1);
  *a2 = result;
  return result;
}

void sub_1008F71F4(void *a1@<X8>)
{
  *a1 = qword_1011988B0[*v1];
}

unint64_t sub_1008F720C()
{
  unint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      unint64_t result = 7107189;
      break;
    case 2:
      unint64_t result = 1684632949;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008F7284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1009192CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008F72AC()
{
  return qword_1011988B0[*v0];
}

uint64_t sub_1008F72C4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1009192A8(a1);
  *a2 = result;
  return result;
}

void sub_1008F72EC(void *a1@<X8>)
{
  *a1 = &off_101503500;
}

uint64_t sub_1008F72FC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100912808();
  unint64_t v5 = sub_100912860();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_1008F7354(uint64_t a1)
{
  unint64_t v2 = sub_100912860();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008F7390(uint64_t a1)
{
  unint64_t v2 = sub_100912860();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1008F73D0(long long *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = *((unsigned char *)v2 + 8);
  uint64_t v15 = *v2;
  char v16 = v14;
  sub_1005057FC(&qword_101687A18);
  CRExtensible.hash(into:)();
  sub_100522E9C((uint64_t)v2 + *(int *)(a2 + 20), (uint64_t)v13, &qword_101672E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v13, v5);
    Hasher._combine(_:)(1u);
    sub_100912338((unint64_t *)&unk_101687A20, 255, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  String.hash(into:)();
  sub_100AD82A0(a1, *(uint64_t *)((char *)v2 + *(int *)(a2 + 28)));
}

Swift::Int sub_1008F7610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  char v13 = *(unsigned char *)(v2 + 8);
  v15[1] = *(void *)v2;
  char v16 = v13;
  sub_1005057FC(&qword_101687A18);
  CRExtensible.hash(into:)();
  sub_100522E9C(v2 + *(int *)(a2 + 20), (uint64_t)v12, &qword_101672E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v12, v4);
    Hasher._combine(_:)(1u);
    sub_100912338((unint64_t *)&unk_101687A20, 255, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  String.hash(into:)();
  sub_100AD82A0(v17, *(void *)(v2 + *(int *)(a2 + 28)));
  return Hasher._finalize()();
}

uint64_t sub_1008F7860@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008F6CF8(a1, a2);
}

uint64_t sub_1008F7878(void *a1)
{
  return sub_1008F683C(a1);
}

uint64_t sub_1008F7890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338(&qword_101687408, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008F7918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338(&qword_101687408, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1008F79A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100912338(&qword_1016873A0, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
  uint64_t v7 = sub_100912338(&qword_1016873F8, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1008F7A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338(&qword_101687408, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1008F7AF4()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_1008F7B78()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_1008F7BF4(uint64_t a1)
{
  uint64_t v2 = sub_100912338(&qword_101687400, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1008F7C74()
{
  return 0x6E696C7265707968;
}

uint64_t sub_1008F7C90()
{
  return static CRAttributeStringKey.loadAttribute(from:)();
}

unint64_t sub_1008F7CE0()
{
  sub_1005057FC((uint64_t *)&unk_101687C10);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101196C50;
  *(void *)(inited + 32) = 0x6E696C7265646E75;
  *(void *)(inited + 40) = 0xE900000000000065;
  unint64_t v1 = sub_100912BEC();
  *(void *)(inited + 48) = &type metadata for CRLWPUnderlineAttribute;
  *(void *)(inited + 56) = v1;
  strcpy((char *)(inited + 64), "strikethrough");
  *(_WORD *)(inited + 78) = -4864;
  unint64_t v2 = sub_100912D30();
  *(void *)(inited + 80) = &type metadata for CRLWPStrikethroughAttribute;
  *(void *)(inited + 88) = v2;
  *(void *)(inited + 96) = 0x657A6953746E6F66;
  *(void *)(inited + 104) = 0xE800000000000000;
  unint64_t v3 = sub_10091252C();
  *(void *)(inited + 112) = &type metadata for CRLWPFontSizeAttribute;
  *(void *)(inited + 120) = v3;
  *(void *)(inited + 128) = 0x656D614E746E6F66;
  *(void *)(inited + 136) = 0xE800000000000000;
  unint64_t v4 = sub_100912F7C();
  *(void *)(inited + 144) = &type metadata for CRLWPFontNameAttribute;
  *(void *)(inited + 152) = v4;
  strcpy((char *)(inited + 160), "characterFill");
  *(_WORD *)(inited + 174) = -4864;
  unint64_t v5 = sub_1009130D4();
  *(void *)(inited + 176) = &type metadata for CRLWPCharacterFillAttribute;
  *(void *)(inited + 184) = v5;
  *(void *)(inited + 192) = 1684828002;
  *(void *)(inited + 200) = 0xE400000000000000;
  unint64_t v6 = sub_100912AC8();
  *(void *)(inited + 208) = &type metadata for CRLWPFontBoldAttribute;
  *(void *)(inited + 216) = v6;
  *(void *)(inited + 224) = 0x63696C617469;
  *(void *)(inited + 232) = 0xE600000000000000;
  unint64_t v7 = sub_100912B6C();
  *(void *)(inited + 240) = &type metadata for CRLWPFontItalicAttribute;
  *(void *)(inited + 248) = v7;
  *(void *)(inited + 256) = 0x6C7974537473696CLL;
  *(void *)(inited + 264) = 0xE900000000000065;
  unint64_t v8 = sub_10091329C();
  *(void *)(inited + 272) = &type metadata for CRLWPListStyleTypeAttribute;
  *(void *)(inited + 280) = v8;
  *(void *)(inited + 288) = 0x726174537473696CLL;
  *(void *)(inited + 296) = 0xE900000000000074;
  unint64_t v9 = sub_1009133A0();
  *(void *)(inited + 304) = &type metadata for CRLWPListStartAttribute;
  *(void *)(inited + 312) = v9;
  strcpy((char *)(inited + 320), "paragraphLevel");
  *(unsigned char *)(inited + 335) = -18;
  unint64_t v10 = sub_100913444();
  *(void *)(inited + 336) = &type metadata for CRLWPParagraphLevelAttribute;
  *(void *)(inited + 344) = v10;
  *(void *)(inited + 352) = 0x6E696C7265707968;
  *(void *)(inited + 360) = 0xE90000000000006BLL;
  unint64_t v11 = sub_1009134C4();
  *(void *)(inited + 368) = &type metadata for CRLWPHyperlinkAttribute;
  *(void *)(inited + 376) = v11;
  *(void *)(inited + 384) = 0xD000000000000012;
  *(void *)(inited + 392) = 0x80000001012356A0;
  unint64_t v12 = sub_100913688();
  *(void *)(inited + 400) = &type metadata for CRLWPParagraphAlignmentAttribute;
  *(void *)(inited + 408) = v12;
  *(void *)(inited + 416) = 0xD000000000000014;
  *(void *)(inited + 424) = 0x8000000101258E00;
  unint64_t v13 = sub_1009137CC();
  *(void *)(inited + 432) = &type metadata for CRLWPWritingDirectionAttribute;
  *(void *)(inited + 440) = v13;
  unint64_t result = sub_100A3BD58(inited);
  static CRLTextAttributeScope.attributeTypes = result;
  return result;
}

uint64_t *CRLTextAttributeScope.attributeTypes.unsafeMutableAddressor()
{
  if (qword_10166F448 != -1) {
    swift_once();
  }
  return &static CRLTextAttributeScope.attributeTypes;
}

uint64_t static CRLTextAttributeScope.attributeTypes.getter()
{
  if (qword_10166F448 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static CRLTextAttributeScope.attributeTypes.setter(uint64_t a1)
{
  if (qword_10166F448 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static CRLTextAttributeScope.attributeTypes = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static CRLTextAttributeScope.attributeTypes.modify())()
{
  if (qword_10166F448 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for CRLTextAttributeScope()
{
  return &type metadata for CRLTextAttributeScope;
}

void sub_1008F813C(void *a1)
{
  sub_1005D3BF8();
  CRAttributedString.Attributes.init()();
  swift_getKeyPath();
  id v2 = a1;
  sub_1009148C8((uint64_t)a1);

  sub_1005057FC((uint64_t *)&unk_1016836C0);
  sub_100843254();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  id v3 = v2;
  sub_100914E00((char *)a1);

  sub_1008431AC();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  id v4 = v3;
  uint64_t v5 = sub_100915C0C((char *)a1);

  uint64_t v16 = v5;
  char v17 = 0;
  sub_100842B0C();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  id v6 = v4;
  id v7 = sub_100915524((char *)a1);

  sub_100F91F6C(v7, (uint64_t)&v16);
  sub_100913244();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  id v8 = v6;
  sub_100915FA8((char *)a1);

  sub_100842A00();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  id v9 = v8;
  uint64_t v10 = sub_10091420C((char *)a1);
  uint64_t v12 = v11;

  sub_100B149FC(v10, v12);
  sub_10091307C();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  id v13 = v9;
  sub_100914624((uint64_t)a1);

  sub_10083E5B0();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  id v14 = v13;
  sub_100914B64((uint64_t)a1);

  sub_100843200();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  sub_10083BCB0();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  id v15 = v14;
  sub_100915190((char *)a1);

  sub_100843158();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  sub_10083E210();
  CRAttributedString.Attributes.subscript.setter();
  swift_getKeyPath();
  sub_10083BD58();
  CRAttributedString.Attributes.subscript.setter();
}

void sub_1008F8540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11, v12);
  id v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v17 = __chkstk_darwin(v15 - 8, v16);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v20) {
    goto LABEL_10;
  }
  (*(void (**)(__n128))(*(void *)v20 + 760))(v17);
  sub_100919454((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v19, v6);
  sub_100918D58((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v21 = CRAttributedString.count.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v21 >= (a1 & ~(a1 >> 63))) {
    uint64_t v22 = a1 & ~(a1 >> 63);
  }
  else {
    uint64_t v22 = v21;
  }
  if (v21 >= (a2 & ~(a2 >> 63))) {
    uint64_t v23 = a2 & ~(a2 >> 63);
  }
  else {
    uint64_t v23 = v21;
  }
  if (v23 < v22)
  {
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_1008F87A8()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_1008F8810()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t sub_1008F8864@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptySetSingleton;
  sub_1005057FC((uint64_t *)&unk_101683740);
  sub_1005D3BF8();
  uint64_t result = CRAttributedString.Attributes.init()();
  uint64_t v95 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v97 = 0;
  int64_t v96 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v8 = v7 | (v97 << 6);
LABEL_6:
      uint64_t v9 = *(void *)(a1 + 56);
      v98[0] = *(void *)(*(void *)(a1 + 48) + 8 * v8);
      uint64_t v10 = (void *)v98[0];
      sub_100522D7C(v9 + 32 * v8, (uint64_t)&v98[1]);
      id v11 = v10;
      goto LABEL_25;
    }
    int64_t v12 = v97 + 1;
    if (__OFADD__(v97, 1))
    {
      __break(1u);
      goto LABEL_67;
    }
    if (v12 < v96)
    {
      unint64_t v13 = *(void *)(v95 + 8 * v12);
      if (v13) {
        goto LABEL_10;
      }
      int64_t v14 = v97 + 2;
      ++v97;
      if (v12 + 1 < v96)
      {
        unint64_t v13 = *(void *)(v95 + 8 * v14);
        if (v13) {
          goto LABEL_13;
        }
        int64_t v97 = v12 + 1;
        if (v12 + 2 < v96)
        {
          unint64_t v13 = *(void *)(v95 + 8 * (v12 + 2));
          if (v13)
          {
            v12 += 2;
            goto LABEL_10;
          }
          int64_t v14 = v12 + 3;
          int64_t v97 = v12 + 2;
          if (v12 + 3 < v96) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v6 = 0;
    memset(v98, 0, 40);
LABEL_25:
    sub_10051B3EC((uint64_t)v98, (uint64_t)&v102, (uint64_t *)&unk_101687AB0);
    uint64_t v15 = v102;
    if (!v102) {
      return swift_release();
    }
    sub_100575CE8(&v103, &v100);
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
    if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
LABEL_30:
      sub_100522D7C((uint64_t)&v100, (uint64_t)v98);
      if (swift_dynamicCast())
      {
        CTFontRef v21 = v99;
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath, v23);
        swift_getKeyPath();
        sub_100CB8180(v98, 0x6E696C7265646E75, 0xE900000000000065);
        uint64_t v24 = swift_bridgeObjectRelease();
        __chkstk_darwin(v24, v25);
        sub_10083E400();
        swift_getKeyPath();
        v98[0] = v21;
        LOBYTE(v98[1]) = 0;
        sub_1005057FC((uint64_t *)&unk_1016836C0);
        sub_1008431AC();
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_30;
    }
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;
    if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29)
    {
      swift_bridgeObjectRelease_n();
LABEL_36:
      sub_100522D7C((uint64_t)&v100, (uint64_t)v98);
      if (swift_dynamicCast())
      {
        CTFontRef v31 = v99;
        uint64_t v32 = swift_getKeyPath();
        __chkstk_darwin(v32, v33);
        swift_getKeyPath();
        sub_100CB8180(v98, 0x6874656B69727473, 0xED00006867756F72);
        uint64_t v34 = swift_bridgeObjectRelease();
        __chkstk_darwin(v34, v35);
        sub_10083E3AC();
        swift_getKeyPath();
        v98[0] = v31;
        LOBYTE(v98[1]) = 0;
        sub_1005057FC((uint64_t *)&unk_1016836C0);
        sub_100843158();
LABEL_38:
        CRAttributedString.Attributes.subscript.setter();
      }
LABEL_39:

      goto LABEL_40;
    }
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_36;
    }
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;
    if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v39)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_45;
    }
    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v40)
    {
LABEL_45:
      sub_10050F848(&v100, v101);
      uint64_t v41 = (const void *)_bridgeAnythingToObjectiveC<A>(_:)();
      CFTypeID v42 = CFGetTypeID(v41);
      swift_unknownObjectRelease();
      if (v42 != CTFontGetTypeID()) {
        goto LABEL_39;
      }
      sub_100522D7C((uint64_t)&v100, (uint64_t)v98);
      type metadata accessor for CTFont(0);
      swift_dynamicCast();
      uint64_t v43 = v99;
      char SymbolicTraits = CTFontGetSymbolicTraits(v99);
      if ((SymbolicTraits & 2) != 0)
      {
        uint64_t v45 = swift_getKeyPath();
        __chkstk_darwin(v45, v46);
        swift_getKeyPath();
        sub_100CB8180(v98, 1684828002, 0xE400000000000000);
        uint64_t v47 = swift_bridgeObjectRelease();
        __chkstk_darwin(v47, v48);
        sub_10083E4A8();
        swift_getKeyPath();
        LOBYTE(v98[0]) = 1;
        sub_1005057FC((uint64_t *)&unk_1016836C0);
        sub_100843254();
        CRAttributedString.Attributes.subscript.setter();
      }
      if (SymbolicTraits)
      {
        uint64_t v49 = swift_getKeyPath();
        __chkstk_darwin(v49, v50);
        swift_getKeyPath();
        sub_100CB8180(v98, 0x63696C617469, 0xE600000000000000);
        uint64_t v51 = swift_bridgeObjectRelease();
        __chkstk_darwin(v51, v52);
        sub_10083E454();
        swift_getKeyPath();
        LOBYTE(v98[0]) = 1;
        sub_1005057FC((uint64_t *)&unk_1016836C0);
        sub_100843200();
        CRAttributedString.Attributes.subscript.setter();
      }
      uint64_t v53 = swift_getKeyPath();
      __chkstk_darwin(v53, v54);
      swift_getKeyPath();
      uint64_t v55 = (__CFString *)CTFontCopyFamilyName(v43);
      uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v94 = v43;
      uint64_t v57 = v56;

      sub_100CB8180(v98, 0x656D614E746E6F66, 0xE800000000000000);
      uint64_t v58 = swift_bridgeObjectRelease();
      __chkstk_darwin(v58, v59);
      sub_10083E550();
      swift_getKeyPath();
      swift_retain();
      swift_bridgeObjectRetain();
      v98[0] = sub_100B149FC(v92, v57);
      v98[1] = v60;
      LOBYTE(v98[2]) = 0;
      sub_1005057FC((uint64_t *)&unk_1016836C0);
      sub_10091307C();
      CRAttributedString.Attributes.subscript.setter();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v61 = swift_getKeyPath();
      __chkstk_darwin(v61, v62);
      swift_getKeyPath();
      float Size = CTFontGetSize(v94);
      sub_100CB8180(v98, 0x657A6953746E6F66, 0xE800000000000000);
      uint64_t v64 = swift_bridgeObjectRelease();
      __chkstk_darwin(v64, v65);
      sub_10083E4FC();
      swift_getKeyPath();
      *(float *)uint64_t v98 = Size;
      BYTE4(v98[0]) = 0;
      sub_10083E5B0();
      CRAttributedString.Attributes.subscript.setter();

      uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v100);
    }
    else
    {
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v68 = v67;
      if (v66 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v68 == v69)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v70 & 1) == 0) {
          goto LABEL_39;
        }
      }
      sub_100522D7C((uint64_t)&v100, (uint64_t)v98);
      sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_39;
      }
      CTFontRef v71 = v99;
      uint64_t v72 = swift_getKeyPath();
      __chkstk_darwin(v72, v73);
      CTFontRef v93 = v71;
      swift_getKeyPath();
      id v74 = [(__CTFont *)v71 CGColor];
      id v91 = [objc_allocWithZone((Class)CRLColorFill) initWithCGColor:v74];

      sub_100CB8180(v98, 0x6574636172616863, 0xED00006C6C694672);
      uint64_t v75 = swift_bridgeObjectRelease();
      __chkstk_darwin(v75, v76);
      sub_10083E34C();
      swift_getKeyPath();
      self;
      Swift::Int v77 = (void *)swift_dynamicCastObjCClass();
      swift_retain();
      id v78 = v91;
      if (v77)
      {
        id v79 = v104;
        sub_1007B16EC([v77 color], (uint64_t)v104);
        int v80 = v78;
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 47, (uint64_t)"Unsupported fill type for archiving. Falling back to archiving color fill.", 74, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 47);
        id v81 = [v78 referenceColor];
        int v80 = v78;
        if (v81)
        {
          id v79 = v105;
          uint64_t v82 = v105;
        }
        else
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 52, (uint64_t)"Missing fill reference color. Falling back to black color.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
          int v80 = v78;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLFillData.swift", 81, 2, 52);
          id v81 = [self blackColor];
          id v79 = v106;
          uint64_t v82 = v106;
        }
        sub_1007B16EC(v81, (uint64_t)v82);
      }

      uint64_t v84 = *((void *)v79 + 9);
      uint64_t v83 = *((void *)v79 + 10);
      long long v85 = *(_OWORD *)(v79 + 40);
      long long v86 = *(_OWORD *)(v79 + 56);
      long long v87 = *(_OWORD *)(v79 + 8);
      long long v88 = *(_OWORD *)(v79 + 24);
      uint64_t v89 = &_mh_execute_header;
      if (!v79[4]) {
        uint64_t v89 = 0;
      }
      unint64_t v90 = (unint64_t)v89 | *(unsigned int *)v79;
      *(_OWORD *)uint64_t v98 = 0uLL;
      v98[2] = v90;
      *(_OWORD *)&v98[3] = v87;
      *(_OWORD *)&v98[5] = v88;
      *(_OWORD *)&v98[7] = v85;
      *(_OWORD *)&v98[9] = v86;
      v98[11] = v84;
      v98[12] = v83;
      v98[13] = &_swiftEmptyDictionarySingleton;
      sub_1005057FC((uint64_t *)&unk_1016836C0);
      sub_100913244();
      CRAttributedString.Attributes.subscript.setter();

      swift_release();
LABEL_40:
      uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v100);
    }
  }
  unint64_t v13 = *(void *)(v95 + 8 * v14);
  if (v13)
  {
LABEL_13:
    int64_t v12 = v14;
LABEL_10:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v8 = __clz(__rbit64(v13)) + (v12 << 6);
    int64_t v97 = v12;
    goto LABEL_6;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v96)
    {
      int64_t v97 = v96 - 1;
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v95 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_10;
    }
  }
LABEL_67:
  __break(1u);
  return result;
}

void sub_1008F9810(void **a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptySetSingleton;
  id v3 = (char *)a2 + *(int *)(sub_1005057FC((uint64_t *)&unk_101683740) + 36);
  sub_1005D3BF8();
  CRAttributedString.Attributes.init()();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v5 = (uint64_t)a1[4];
  id v78 = (char *)a1[3];
  uint64_t v4 = v78;
  unint64_t v6 = (char *)a1[5];
  unint64_t v7 = (void (*)(char *, uint64_t))swift_getKeyPath();
  Swift::Int v8 = sub_10103D470(v7, v78, (char *)v5, v6);
  char v10 = v9;
  swift_release();
  if (v10)
  {
    if (!*(void *)(v8 + 16))
    {
      __break(1u);
      goto LABEL_31;
    }
    Swift::Int v11 = *(void *)(v8 + 32);
    sub_1006F23FC(v8, 1);
    Swift::Int v8 = v11;
  }
  sub_100CB8180(&v89, 0x6E696C7265646E75, 0xE900000000000065);
  uint64_t v12 = swift_bridgeObjectRelease();
  __chkstk_darwin(v12, v13);
  sub_10083E400();
  swift_getKeyPath();
  Swift::Int v89 = v8;
  LOBYTE(v90) = 0;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  sub_1008431AC();
  Swift::Int v77 = v3;
  CRAttributedString.Attributes.subscript.setter();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v4 = (char *)&v75;
  __chkstk_darwin(v15, v16);
  swift_getKeyPath();
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = sub_10103E2CC(v17, v78, (char *)v5, v6);
  char v20 = v19;
  swift_release();
  if ((v20 & 1) == 0)
  {
    char v21 = v18 & 1;
    goto LABEL_8;
  }
  if (!*(void *)(v18 + 16))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  char v21 = *(unsigned char *)(v18 + 32);
  sub_1006F23FC(v18, 1);
LABEL_8:
  sub_100CB8180(&v89, 1684828002, 0xE400000000000000);
  uint64_t v22 = swift_bridgeObjectRelease();
  __chkstk_darwin(v22, v23);
  sub_10083E4A8();
  swift_getKeyPath();
  LOBYTE(v89) = v21;
  sub_100843254();
  CRAttributedString.Attributes.subscript.setter();
  uint64_t v24 = swift_getKeyPath();
  uint64_t v4 = (char *)&v75;
  __chkstk_darwin(v24, v25);
  swift_getKeyPath();
  uint64_t v26 = (void (*)(char *, uint64_t))swift_getKeyPath();
  Swift::Int v27 = sub_10103D3BC(v26, v78, (char *)v5, v6);
  char v29 = v28;
  swift_release();
  if ((v29 & 1) == 0) {
    goto LABEL_11;
  }
  if (!*(void *)(v27 + 16))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  Swift::Int v30 = *(void *)(v27 + 32);
  sub_1006F23FC(v27, 1);
  Swift::Int v27 = v30;
LABEL_11:
  sub_100CB8180(&v89, 0x6874656B69727473, 0xED00006867756F72);
  uint64_t v31 = swift_bridgeObjectRelease();
  __chkstk_darwin(v31, v32);
  sub_10083E3AC();
  swift_getKeyPath();
  Swift::Int v89 = v27;
  LOBYTE(v90) = 0;
  sub_100843158();
  CRAttributedString.Attributes.subscript.setter();
  uint64_t v33 = swift_getKeyPath();
  uint64_t v4 = (char *)&v75;
  __chkstk_darwin(v33, v34);
  swift_getKeyPath();
  uint64_t v35 = swift_getKeyPath();
  uint64_t v36 = sub_10103E254(v35, v78, (char *)v5, v6);
  char v38 = v37;
  swift_release();
  if ((v38 & 1) == 0)
  {
    char v39 = v36 & 1;
    goto LABEL_15;
  }
  if (!*(void *)(v36 + 16))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  char v39 = *(unsigned char *)(v36 + 32);
  sub_1006F23FC(v36, 1);
LABEL_15:
  sub_100CB8180(&v89, 0x63696C617469, 0xE600000000000000);
  uint64_t v40 = swift_bridgeObjectRelease();
  __chkstk_darwin(v40, v41);
  sub_10083E454();
  swift_getKeyPath();
  LOBYTE(v89) = v39;
  sub_100843200();
  CRAttributedString.Attributes.subscript.setter();
  uint64_t v42 = swift_getKeyPath();
  __chkstk_darwin(v42, v43);
  swift_getKeyPath();
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = (void *)sub_10103FC38(v44, v78, (char *)v5, v6);
  uint64_t v47 = v46;
  uint64_t v4 = v48;
  swift_release();
  uint64_t v76 = a1;
  if ((v4 & 1) == 0) {
    goto LABEL_18;
  }
  if (!v45[2])
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v50 = (void *)v45[4];
  uint64_t v49 = v45[5];
  swift_bridgeObjectRetain();
  sub_10083E5A4();
  uint64_t v45 = v50;
  uint64_t v47 = v49;
LABEL_18:
  sub_100CB8180(&v89, 0x656D614E746E6F66, 0xE800000000000000);
  uint64_t v51 = swift_bridgeObjectRelease();
  __chkstk_darwin(v51, v52);
  sub_10083E550();
  swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  Swift::Int v89 = sub_100B149FC((uint64_t)v45, v47);
  uint64_t v90 = v53;
  LOBYTE(v91) = 0;
  sub_10091307C();
  CRAttributedString.Attributes.subscript.setter();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v54 = swift_getKeyPath();
  __chkstk_darwin(v54, v55);
  swift_getKeyPath();
  uint64_t v56 = swift_getKeyPath();
  uint64_t v57 = sub_10103EFE4(v56, v78, (char *)v5, v6);
  uint64_t v4 = v58;
  swift_release();
  if ((v4 & 1) == 0)
  {
    uint64_t v59 = v14;
    goto LABEL_22;
  }
  if (!*(void *)(v57 + 16))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v59 = v14;
  int v60 = *(_DWORD *)(v57 + 32);
  sub_1006F23FC(v57, 1);
  LODWORD(v57) = v60;
LABEL_22:
  sub_100CB8180(&v89, 0x657A6953746E6F66, 0xE800000000000000);
  uint64_t v61 = swift_bridgeObjectRelease();
  __chkstk_darwin(v61, v62);
  sub_10083E4FC();
  swift_getKeyPath();
  LODWORD(v89) = v57;
  BYTE4(v89) = 0;
  sub_10083E5B0();
  uint64_t v75 = v59;
  CRAttributedString.Attributes.subscript.setter();
  uint64_t v63 = swift_getKeyPath();
  __chkstk_darwin(v63, v64);
  swift_getKeyPath();
  uint64_t v65 = swift_getKeyPath();
  uint64_t v4 = v78;
  uint64_t v5 = sub_10103B9D8(v65, v78, (char *)v5, v6);
  char v67 = v66;
  swift_release();
  if (v67)
  {
    if ((v5 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v68 = *(id *)(v5 + 32);
      goto LABEL_26;
    }
LABEL_36:
    swift_bridgeObjectRetain();
    id v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    sub_10083E3A0((void *)v5, 1);
LABEL_26:
    sub_10083E3A0((void *)v5, 1);
    uint64_t v5 = (uint64_t)v68;
  }
  sub_100CB8180(&v89, 0x6574636172616863, 0xED00006C6C694672);
  uint64_t v69 = swift_bridgeObjectRelease();
  __chkstk_darwin(v69, v70);
  CTFontRef v71 = v4;
  sub_10083E34C();
  swift_getKeyPath();
  swift_retain();
  id v72 = (id)v5;
  sub_100F91F6C(v72, (uint64_t)&v89);
  uint64_t v73 = &_mh_execute_header;
  if (!v92) {
    uint64_t v73 = 0;
  }
  Swift::Int v80 = v89;
  uint64_t v81 = v90;
  unint64_t v82 = (unint64_t)v73 | v91;
  long long v83 = v93;
  long long v84 = v94;
  long long v85 = v95;
  long long v86 = v96;
  uint64_t v87 = v97;
  long long v88 = v98;
  sub_100913244();
  CRAttributedString.Attributes.subscript.setter();

  swift_release();
  id v74 = *v76;
}

void sub_1008FA304(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptySetSingleton;
  sub_1005057FC(&qword_101687A90);
  sub_1005D3BF8();
  CRAttributedString.Attributes.init()();
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = *(char **)(a1 + 24);
  uint64_t v4 = *(char **)(a1 + 32);
  uint64_t v5 = *(char **)(a1 + 40);
  uint64_t KeyPath = swift_getKeyPath();
  Swift::Int v7 = sub_10103A300(KeyPath, v3, v4, v5);
  char v9 = v8;
  swift_release();
  if (v9)
  {
    if (!*(void *)(v7 + 16))
    {
      __break(1u);
      goto LABEL_19;
    }
    Swift::Int v10 = *(void *)(v7 + 32);
    sub_1006F23FC(v7, 1);
    Swift::Int v7 = v10;
  }
  sub_100CB8180(&v50, 0xD000000000000014, 0x8000000101258E00);
  uint64_t v11 = swift_bridgeObjectRelease();
  __chkstk_darwin(v11, v12);
  sub_1008429AC();
  swift_getKeyPath();
  Swift::Int v50 = v7;
  LOBYTE(v51) = 0;
  sub_1005057FC((uint64_t *)&unk_1016836C0);
  sub_100842A00();
  CRAttributedString.Attributes.subscript.setter();
  uint64_t v13 = swift_getKeyPath();
  __chkstk_darwin(v13, v14);
  swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  Swift::Int v16 = sub_10103AE6C(v15, v3, v4, v5);
  char v18 = v17;
  swift_release();
  if ((v18 & 1) == 0) {
    goto LABEL_7;
  }
  if (!*(void *)(v16 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  Swift::Int v19 = *(void *)(v16 + 32);
  sub_1006F23FC(v16, 1);
  Swift::Int v16 = v19;
LABEL_7:
  sub_100CB8180(&v50, 0xD000000000000012, 0x80000001012356A0);
  uint64_t v20 = swift_bridgeObjectRelease();
  __chkstk_darwin(v20, v21);
  sub_1005F2218();
  swift_getKeyPath();
  Swift::Int v50 = v16;
  LOBYTE(v51) = 0;
  sub_100842B0C();
  CRAttributedString.Attributes.subscript.setter();
  uint64_t v22 = swift_getKeyPath();
  __chkstk_darwin(v22, v23);
  swift_getKeyPath();
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = sub_1010397A0(v24, v3, v4, v5);
  char v27 = v26;
  swift_release();
  if ((v27 & 1) == 0)
  {
    unsigned __int8 v28 = v25;
    goto LABEL_11;
  }
  if (!*(void *)(v25 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unsigned __int8 v28 = *(unsigned char *)(v25 + 32);
  sub_1006F23FC(v25, 1);
LABEL_11:
  sub_100CB8180(&v50, 0x6C7974537473696CLL, 0xE900000000000065);
  uint64_t v29 = swift_bridgeObjectRelease();
  __chkstk_darwin(v29, v30);
  sub_10083E1BC();
  swift_getKeyPath();
  Swift::Int v50 = v28;
  LOBYTE(v51) = 0;
  sub_10083E210();
  CRAttributedString.Attributes.subscript.setter();
  uint64_t v31 = swift_getKeyPath();
  __chkstk_darwin(v31, v32);
  swift_getKeyPath();
  uint64_t v33 = swift_getKeyPath();
  Swift::Int v34 = sub_101038C68(v33, v3, v4, v5);
  char v36 = v35;
  swift_release();
  if (v36)
  {
    if (*(void *)(v34 + 16))
    {
      Swift::Int v37 = *(void *)(v34 + 32);
      sub_1006F23FC(v34, 1);
      Swift::Int v34 = v37;
      goto LABEL_14;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_14:
  sub_100CB8180(&v50, 0x726174537473696CLL, 0xE900000000000074);
  uint64_t v38 = swift_bridgeObjectRelease();
  __chkstk_darwin(v38, v39);
  sub_10083BD04();
  swift_getKeyPath();
  Swift::Int v50 = v34;
  LOBYTE(v51) = 0;
  sub_10083BD58();
  CRAttributedString.Attributes.subscript.setter();
  uint64_t v40 = swift_getKeyPath();
  __chkstk_darwin(v40, v41);
  swift_getKeyPath();
  uint64_t v42 = swift_getKeyPath();
  Swift::Int v43 = sub_10104093C(v42, v3, v4, v5);
  char v45 = v44;
  swift_release();
  if ((v45 & 1) == 0)
  {
LABEL_17:
    sub_100CB8180(&v50, 0x7061726761726170, 0xEE006C6576654C68);
    uint64_t v47 = swift_bridgeObjectRelease();
    __chkstk_darwin(v47, v48);
    sub_10083BC5C();
    swift_getKeyPath();
    Swift::Int v50 = v43;
    LOBYTE(v51) = 0;
    sub_10083BCB0();
    CRAttributedString.Attributes.subscript.setter();
    uint64_t v49 = *(void **)a1;

    return;
  }
  if (*(void *)(v43 + 16))
  {
    Swift::Int v46 = *(void *)(v43 + 32);
    sub_1006F23FC(v43, 1);
    Swift::Int v43 = v46;
    goto LABEL_17;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_1008FAA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void sub_1008FAA58(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptySetSingleton;
  sub_1005057FC(&qword_101687A90);
  sub_1005D3BF8();
  CRAttributedString.Attributes.init()();
  if (!*(void *)(a1 + 16))
  {
    long long v17 = 0u;
    long long v18 = 0u;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v3 = NSParagraphStyleAttributeName;
  uint64_t v4 = sub_10095609C();
  if ((v5 & 1) == 0)
  {
    long long v17 = 0u;
    long long v18 = 0u;

    goto LABEL_10;
  }
  sub_100522D7C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v17);

  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
LABEL_11:
    sub_100522F00((uint64_t)&v17, &qword_101672BF0);
    return;
  }
  sub_10050BF48(0, &qword_101687A98);
  if (swift_dynamicCast())
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath, v7);
    swift_getKeyPath();
    uint64_t v8 = (uint64_t)[v16 baseWritingDirection];
    if ((unint64_t)(v8 + 1) >= 3)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24, (uint64_t)"Unknown direction.", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPWritingDirection.swift", 87, 2, 24);
      uint64_t v8 = -1;
    }
    sub_100CB8180((Swift::Int *)&v17, 0xD000000000000014, 0x8000000101258E00);
    uint64_t v9 = swift_bridgeObjectRelease();
    __chkstk_darwin(v9, v10);
    sub_1008429AC();
    swift_getKeyPath();
    *(void *)&long long v17 = v8;
    BYTE8(v17) = 0;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_100842A00();
    CRAttributedString.Attributes.subscript.setter();
    uint64_t v11 = swift_getKeyPath();
    __chkstk_darwin(v11, v12);
    swift_getKeyPath();
    uint64_t v13 = sub_1001CF4D4((unint64_t)[v16 alignment]);
    sub_100CB8180((Swift::Int *)&v17, 0xD000000000000012, 0x80000001012356A0);
    uint64_t v14 = swift_bridgeObjectRelease();
    __chkstk_darwin(v14, v15);
    sub_1005F2218();
    swift_getKeyPath();
    *(void *)&long long v17 = v13;
    BYTE8(v17) = 0;
    sub_100842B0C();
    CRAttributedString.Attributes.subscript.setter();
  }
}

uint64_t sub_1008FAE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v27 = sub_1005057FC(&qword_101687A90);
  __chkstk_darwin(v27, v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101683740);
  uint64_t result = __chkstk_darwin(v15, v16);
  Swift::Int v19 = (uint64_t *)((char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(a1 + 16))
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    sub_1008F8864(v20, v19);
    uint64_t v21 = (char *)v19 + *(int *)(v15 + 36);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v25(v14, v21, v10);
    sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101683740);
    sub_1005057FC((uint64_t *)&unk_10167BC20);
    CRAttributedString.addAttributes(_:range:)();
    uint64_t v24 = a3;
    uint64_t v22 = *(void (**)(char *, uint64_t))(v11 + 8);
    v22(v14, v10);
    uint64_t v23 = swift_bridgeObjectRetain();
    sub_1008FAA58(v23, v9);
    v25(v14, &v9[*(int *)(v27 + 36)], v10);
    sub_100522F00((uint64_t)v9, &qword_101687A90);
    CRAttributedString.addAttributes(_:range:)();
    return ((uint64_t (*)(char *, uint64_t))v22)(v14, v10);
  }
  return result;
}

uint64_t sub_1008FB0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a4;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v37 = *(void *)(a3 - 8);
  __chkstk_darwin(a1, a2);
  Swift::Int v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  char v36 = (char *)&v33 - v8;
  uint64_t v9 = type metadata accessor for CRLWPAttributeValue();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  long long v17 = (char *)&v33 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v35 = *(void *)(TupleTypeMetadata2 - 8);
  __n128 v20 = __chkstk_darwin(TupleTypeMetadata2, v19);
  uint64_t v22 = (char *)&v33 - v21;
  uint64_t v24 = (char *)&v33 + *(int *)(v23 + 48) - v21;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v25((char *)&v33 - v21, v39, v9, v20);
  ((void (*)(char *, uint64_t, uint64_t))v25)(v24, v40, v9);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    ((void (*)(char *, char *, uint64_t))v25)(v17, v22, v9);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v27 = v37;
      unsigned __int8 v28 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v28(v36, v17, a3);
      uint64_t v29 = v34;
      v28(v34, v24, a3);
      uint64_t v30 = v36;
      char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v27 + 8);
      v31(v29, a3);
      v31(v30, a3);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v17, a3);
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v25)(v13, v22, v9);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char v26 = 0;
    uint64_t v10 = v35;
    uint64_t v9 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  char v26 = static Array<A>.== infix(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
  return v26 & 1;
}

uint64_t sub_1008FB488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1008FB0CC(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

void sub_1008FB494()
{
  unint64_t v1 = *v0;
  unint64_t v2 = *((void *)*v0 + 2);
  if (v2 < 2) {
    return;
  }
  uint64_t v38 = v0;
  swift_bridgeObjectRetain_n();
  id v3 = (id *)(v1 + 6);
  uint64_t v4 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v3 - 1);
    int64_t v43 = (int64_t)*(v3 - 2);
    uint64_t v7 = *((void *)v4 + 2);
    id v8 = *v3;
    uint64_t v9 = v8;
    if (!v7)
    {
      id v22 = v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_100F62A30(0, 1, 1, v4);
      }
      unint64_t v35 = *((void *)v4 + 2);
      unint64_t v34 = *((void *)v4 + 3);
      if (v35 >= v34 >> 1) {
        uint64_t v4 = sub_100F62A30((double *)(v34 > 1), v35 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v35 + 1;
      char v36 = &v4[3 * v35];
      *((void *)v36 + 4) = v43;
      *((void *)v36 + 5) = v6;
      *((void *)v36 + 6) = v22;
      goto LABEL_4;
    }
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v10 = *((void *)v4 + 2);
      if (!v10) {
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v4 = sub_100F685B0((uint64_t)v4);
      uint64_t v10 = *((void *)v4 + 2);
      if (!v10) {
        goto LABEL_41;
      }
    }
    uint64_t v11 = v10 - 1;
    uint64_t v12 = &v4[3 * v11];
    int64_t v14 = *((void *)v12 + 4);
    uint64_t v13 = *((void *)v12 + 5);
    uint64_t v15 = (void *)*((void *)v12 + 6);
    *((void *)v4 + 2) = v11;
    if (__OFSUB__(v13, v14)) {
      break;
    }
    if (__OFSUB__(v6, v43)) {
      goto LABEL_40;
    }
    uint64_t v42 = v6;
    v44.location = v14;
    v45.location = v43;
    v44.length = v13 - v14;
    v45.length = v6 - v43;
    NSUInteger v16 = sub_1002093DC(v44, v45, 1);
    if (v16 == NSNotFound.getter()) {
      goto LABEL_20;
    }
    type metadata accessor for CRLWPCharacterStyle();
    unint64_t v40 = v2;
    id v17 = v9;
    id v18 = v15;
    char v19 = static NSObject.== infix(_:_:)();

    uint64_t v39 = v17;
    unint64_t v2 = v40;
    if ((v19 & 1) == 0)
    {
LABEL_20:
      int64_t v24 = *((void *)v4 + 2);
      int64_t v25 = v24 + 2;
      if (__OFADD__(v24, 2)) {
        goto LABEL_42;
      }
      unint64_t v26 = *((void *)v4 + 3);
      id v41 = v9;
      if (v25 > (uint64_t)(v26 >> 1))
      {
        if (v24 <= v25) {
          int64_t v37 = v24 + 2;
        }
        else {
          int64_t v37 = v24;
        }
        uint64_t v4 = sub_100F62A30((double *)1, v37, 1, v4);
      }
      unint64_t v28 = *((void *)v4 + 2);
      unint64_t v27 = *((void *)v4 + 3);
      unint64_t v29 = v28 + 1;
      id v22 = v15;
      if (v28 >= v27 >> 1) {
        uint64_t v4 = sub_100F62A30((double *)(v27 > 1), v28 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v29;
      uint64_t v30 = &v4[3 * v28];
      *((void *)v30 + 4) = v14;
      *((void *)v30 + 5) = v13;
      *((void *)v30 + 6) = v22;
      unint64_t v31 = *((void *)v4 + 3);
      int64_t v32 = v28 + 2;
      id v33 = v41;
      if (v29 >= v31 >> 1) {
        uint64_t v4 = sub_100F62A30((double *)(v31 > 1), v32, 1, v4);
      }
      *((void *)v4 + 2) = v32;
      uint64_t v5 = &v4[3 * v29];
      *((void *)v5 + 4) = v43;
      *((void *)v5 + 5) = v42;
      *((void *)v5 + 6) = v33;
    }
    else
    {
      if (v43 < v14) {
        int64_t v14 = v43;
      }
      if (v42 > v13) {
        uint64_t v13 = v42;
      }
      if (v13 < v14) {
        goto LABEL_43;
      }
      unint64_t v20 = *((void *)v4 + 2);
      unint64_t v21 = *((void *)v4 + 3);
      id v22 = v18;
      if (v20 >= v21 >> 1) {
        uint64_t v4 = sub_100F62A30((double *)(v21 > 1), v20 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v20 + 1;
      uint64_t v23 = &v4[3 * v20];
      *((void *)v23 + 4) = v14;
      *((void *)v23 + 5) = v13;
      *((void *)v23 + 6) = v22;
    }
LABEL_4:

    v3 += 3;
    if (!--v2)
    {
      swift_bridgeObjectRelease_n();
      *uint64_t v38 = v4;
      return;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
}

uint64_t sub_1008FB7F0()
{
  uint64_t v1 = sub_1005057FC(&qword_101687AF8);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (uint64_t *)((char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_1005057FC((uint64_t *)&unk_10167BE70);
  uint64_t v6 = __chkstk_darwin(v58, v5);
  uint64_t v50 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v55 = (uint64_t)&v45 - v10;
  uint64_t v12 = __chkstk_darwin(v9, v11);
  int64_t v14 = (char *)&v45 - v13;
  __chkstk_darwin(v12, v15);
  id v18 = (NSUInteger *)((char *)&v45 - v17);
  uint64_t result = *v0;
  unint64_t v20 = *(void *)(*v0 + 16);
  if (v20 >= 2)
  {
    Swift::Int v46 = v0;
    uint64_t v21 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v22 = (v21 + 32) & ~v21;
    uint64_t v23 = result + v22;
    uint64_t v24 = *(void *)(v16 + 72);
    uint64_t v53 = (unsigned int (**)(int64_t *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v56 = v24 + v22;
    uint64_t v57 = v21 | 7;
    uint64_t v59 = v22;
    int v60 = _swiftEmptyArrayStorage;
    uint64_t v49 = v22 + 2 * v24;
    uint64_t v45 = result;
    swift_bridgeObjectRetain();
    long long v48 = xmmword_10117D8C0;
    long long v47 = xmmword_10117E810;
    uint64_t v54 = v14;
    uint64_t v51 = v4;
    uint64_t v52 = v18;
    do
    {
      sub_100522E9C(v23, (uint64_t)v18, (uint64_t *)&unk_10167BE70);
      unint64_t v27 = (unint64_t)v60;
      if (*((void *)v60 + 2))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v27 = sub_100F685E8(v27);
        }
        uint64_t v28 = *(void *)(v27 + 16);
        if (!v28)
        {
          __break(1u);
LABEL_25:
          __break(1u);
        }
        unint64_t v29 = v4;
        uint64_t v30 = v28 - 1;
        uint64_t v31 = v55;
        sub_10051B3EC(v27 + v59 + (v28 - 1) * v24, v55, (uint64_t *)&unk_10167BE70);
        *(void *)(v27 + 16) = v30;
        uint64_t v4 = v29;
        int v60 = (double *)v27;
        uint64_t v32 = (uint64_t)v54;
        sub_10051B3EC(v31, (uint64_t)v54, (uint64_t *)&unk_10167BE70);
        id v18 = v52;
        sub_1008FC030(v52, v29);
        if ((*v53)(v29, 1, v58) == 1)
        {
          sub_100522F00((uint64_t)v29, &qword_101687AF8);
          sub_1005057FC(&qword_101687AE8);
          uint64_t v25 = swift_allocObject();
          *(_OWORD *)(v25 + 16) = v48;
          uint64_t v26 = v25 + v59;
          sub_100522E9C(v32, v25 + v59, (uint64_t *)&unk_10167BE70);
          sub_100522E9C((uint64_t)v18, v26 + v24, (uint64_t *)&unk_10167BE70);
          sub_1006E1C64(v25);
        }
        else
        {
          uint64_t v33 = v50;
          sub_10051B3EC((uint64_t)v29, v50, (uint64_t *)&unk_10167BE70);
          sub_1005057FC(&qword_101687AE8);
          uint64_t v34 = swift_allocObject();
          *(_OWORD *)(v34 + 16) = v47;
          sub_100522E9C(v33, v34 + v59, (uint64_t *)&unk_10167BE70);
          sub_1006E1C64(v34);
          uint64_t v35 = v33;
          uint64_t v4 = v29;
          sub_100522F00(v35, (uint64_t *)&unk_10167BE70);
        }
        sub_100522F00(v32, (uint64_t *)&unk_10167BE70);
      }
      else
      {
        sub_1005057FC(&qword_101687AE8);
        unint64_t v36 = swift_allocObject() + v59;
        sub_100522E9C((uint64_t)v18, v36, (uint64_t *)&unk_10167BE70);
        unint64_t v37 = *(void *)(v27 + 16);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (!isUniquelyReferenced_nonNull_native || (unint64_t v39 = *(void *)(v27 + 24) >> 1, v39 <= v37))
        {
          unint64_t v27 = sub_100F62A44(isUniquelyReferenced_nonNull_native, v37 + 1, 1, v27);
          int v60 = (double *)v27;
          unint64_t v39 = *(void *)(v27 + 24) >> 1;
        }
        unint64_t v40 = *(void *)(v27 + 16);
        if (v39 <= v40) {
          goto LABEL_25;
        }
        unint64_t v41 = v27 + v59 + v40 * v24;
        if (v36 < v41 + v24 && v41 < v36 + v24)
        {
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        ++*(void *)(v27 + 16);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v4 = v51;
      }
      sub_100522F00((uint64_t)v18, (uint64_t *)&unk_10167BE70);
      v23 += v24;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    int64_t v43 = v60;
    NSRange v44 = (double **)v46;
    uint64_t result = swift_bridgeObjectRelease();
    *NSRange v44 = v43;
  }
  return result;
}

uint64_t sub_1008FBD2C()
{
  uint64_t result = *v0;
  unint64_t v2 = *(void *)(*v0 + 16);
  if (v2 < 2) {
    return result;
  }
  uint64_t v35 = (double **)v0;
  uint64_t v3 = (float *)(swift_bridgeObjectRetain() + 52);
  uint64_t v4 = _swiftEmptyArrayStorage;
  while (1)
  {
    int64_t v9 = *(void *)(v3 - 5);
    uint64_t v8 = *(void *)(v3 - 3);
    float v10 = *(v3 - 1);
    LODWORD(v5) = *(unsigned __int8 *)v3;
    uint64_t v11 = *((void *)v4 + 2);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (!v11)
    {
      if ((result & 1) == 0) {
        uint64_t v4 = (double *)sub_100F6451C(0, 1, 1, v4);
      }
      unint64_t v21 = *((void *)v4 + 2);
      unint64_t v20 = *((void *)v4 + 3);
      if (v21 >= v20 >> 1) {
        uint64_t v4 = (double *)sub_100F6451C((void *)(v20 > 1), v21 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v21 + 1;
      uint64_t v22 = &v4[3 * v21];
      *((void *)v22 + 4) = v9;
      uint64_t v7 = v22 + 4;
      goto LABEL_4;
    }
    if (result)
    {
      uint64_t v12 = *((void *)v4 + 2);
      if (!v12) {
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_100F687CC(v4);
      uint64_t v4 = (double *)result;
      uint64_t v12 = *(void *)(result + 16);
      if (!v12) {
        goto LABEL_46;
      }
    }
    uint64_t v13 = v12 - 1;
    int64_t v14 = &v4[3 * v13];
    int64_t v15 = *((void *)v14 + 4);
    uint64_t v16 = *((void *)v14 + 5);
    float v17 = *((float *)v14 + 12);
    char v18 = *((unsigned char *)v14 + 52);
    *((void *)v4 + 2) = v13;
    if (__OFSUB__(v16, v15)) {
      break;
    }
    if (__OFSUB__(v8, v9)) {
      goto LABEL_45;
    }
    v37.location = v15;
    v38.location = v9;
    v37.length = v16 - v15;
    v38.length = v8 - v9;
    NSUInteger v19 = sub_1002093DC(v37, v38, 1);
    uint64_t result = NSNotFound.getter();
    if (v19 != result)
    {
      if (v18)
      {
        if (v5) {
          goto LABEL_21;
        }
      }
      else if ((v5 & 1) == 0 && v17 == v10)
      {
LABEL_21:
        if (v9 >= v15) {
          int64_t v5 = v15;
        }
        else {
          int64_t v5 = v9;
        }
        if (v8 <= v16) {
          uint64_t v8 = v16;
        }
        if (v8 < v5) {
          goto LABEL_48;
        }
        unint64_t v24 = *((void *)v4 + 2);
        unint64_t v23 = *((void *)v4 + 3);
        if (v24 >= v23 >> 1) {
          uint64_t v4 = (double *)sub_100F6451C((void *)(v23 > 1), v24 + 1, 1, v4);
        }
        *((void *)v4 + 2) = v24 + 1;
        uint64_t v25 = &v4[3 * v24];
        *((void *)v25 + 4) = v5;
        uint64_t v7 = v25 + 4;
        float v10 = v17;
        LOBYTE(v5) = v18;
        goto LABEL_4;
      }
    }
    uint64_t v36 = v8;
    char v26 = v5;
    unint64_t v27 = *((void *)v4 + 2);
    int64_t v28 = v27 + 2;
    if (__OFADD__(v27, 2)) {
      goto LABEL_47;
    }
    unint64_t v29 = *((void *)v4 + 3);
    unint64_t v30 = v29 >> 1;
    if ((uint64_t)(v29 >> 1) < v28)
    {
      if ((uint64_t)v27 <= v28) {
        int64_t v34 = v27 + 2;
      }
      else {
        int64_t v34 = *((void *)v4 + 2);
      }
      uint64_t v4 = (double *)sub_100F6451C((void *)1, v34, 1, v4);
      unint64_t v27 = *((void *)v4 + 2);
      unint64_t v29 = *((void *)v4 + 3);
      unint64_t v30 = v29 >> 1;
    }
    unint64_t v31 = v27 + 1;
    if (v30 <= v27)
    {
      uint64_t v4 = (double *)sub_100F6451C((void *)(v29 > 1), v27 + 1, 1, v4);
      unint64_t v29 = *((void *)v4 + 3);
      unint64_t v30 = v29 >> 1;
    }
    *((void *)v4 + 2) = v31;
    uint64_t v32 = &v4[3 * v27];
    *((void *)v32 + 4) = v15;
    *((void *)v32 + 5) = v16;
    *((float *)v32 + 12) = v17;
    *((unsigned char *)v32 + 52) = v18;
    unint64_t v33 = v27 + 2;
    if (v30 <= v31) {
      uint64_t v4 = (double *)sub_100F6451C((void *)(v29 > 1), v27 + 2, 1, v4);
    }
    LOBYTE(v5) = v26;
    *((void *)v4 + 2) = v33;
    uint64_t v6 = &v4[3 * v31];
    *((void *)v6 + 4) = v9;
    uint64_t v7 = v6 + 4;
    uint64_t v8 = v36;
LABEL_4:
    *((void *)v7 + 1) = v8;
    *((float *)v7 + 4) = v10;
    v3 += 6;
    *((unsigned char *)v7 + 20) = v5;
    if (!--v2)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
      *uint64_t v35 = v4;
      return result;
    }
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

NSUInteger sub_1008FC030@<X0>(NSUInteger *a1@<X0>, int64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  int64_t v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101687B00);
  __chkstk_darwin(v14, v15);
  float v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19.location = *v2;
  NSUInteger v18 = v2[1];
  v19.length = v18 - *v2;
  if (__OFSUB__(v18, *v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  NSUInteger v20 = a1[1];
  if (__OFSUB__(v20, *a1))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return v19.location;
  }
  v38.location = *a1;
  v38.length = v20 - *a1;
  NSUInteger v21 = sub_1002093DC(v19, v38, 1);
  if (v21 == NSNotFound.getter())
  {
LABEL_19:
    uint64_t v32 = sub_1005057FC((uint64_t *)&unk_10167BE70);
    v19.location = (*(uint64_t (**)(int64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 1, 1, v32);
    return v19.location;
  }
  uint64_t v35 = v9;
  NSRange v37 = a2;
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_10167BE70);
  uint64_t v23 = *(int *)(v22 + 36);
  uint64_t v24 = (uint64_t)a1 + v23;
  uint64_t v25 = (uint64_t)&v17[*(int *)(v14 + 48)];
  uint64_t v36 = (uint64_t)v2 + v23;
  sub_100522E9C((uint64_t)v2 + v23, (uint64_t)v17, (uint64_t *)&unk_10167BE90);
  sub_100522E9C(v24, v25, (uint64_t *)&unk_10167BE90);
  char v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v26((uint64_t)v17, 1, v5) == 1)
  {
    int v27 = v26(v25, 1, v5);
    a2 = v37;
    if (v27 == 1)
    {
      v19.location = sub_100522F00((uint64_t)v17, (uint64_t *)&unk_10167BE90);
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  sub_100522E9C((uint64_t)v17, (uint64_t)v13, (uint64_t *)&unk_10167BE90);
  if (v26(v25, 1, v5) == 1)
  {
    sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPHyperlinkSmartFieldData);
    a2 = v37;
LABEL_9:
    sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101687B00);
    goto LABEL_19;
  }
  int64_t v28 = v35;
  sub_1009197F0(v25, (uint64_t)v35);
  char v29 = sub_10091399C(v13, v28);
  sub_100918D58((uint64_t)v28, type metadata accessor for CRLWPHyperlinkSmartFieldData);
  sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPHyperlinkSmartFieldData);
  v19.location = sub_100522F00((uint64_t)v17, (uint64_t *)&unk_10167BE90);
  a2 = v37;
  if ((v29 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_11:
  if ((uint64_t)*a1 >= (uint64_t)*v2) {
    int64_t v30 = *v2;
  }
  else {
    int64_t v30 = *a1;
  }
  if ((uint64_t)a1[1] <= (uint64_t)v2[1]) {
    int64_t v31 = v2[1];
  }
  else {
    int64_t v31 = a1[1];
  }
  if (v31 < v30) {
    goto LABEL_23;
  }
  sub_100522E9C(v36, (uint64_t)a2 + *(int *)(v22 + 36), (uint64_t *)&unk_10167BE90);
  *a2 = v30;
  a2[1] = v31;
  v19.location = (*(uint64_t (**)(int64_t *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 0, 1, v22);
  return v19.location;
}

uint64_t sub_1008FC744()
{
  uint64_t v102 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v0 = *(void (***)(uint64_t, uint64_t))(v102 - 8);
  __chkstk_darwin(v102, v1);
  uint64_t v101 = (char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_1016879D0);
  uint64_t v105 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_1005057FC(&qword_1016879E0);
  uint64_t v11 = *(void *)(v104 - 8);
  __chkstk_darwin(v104, v12);
  long long v103 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  __chkstk_darwin(v14, v106);
  uint64_t v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  NSUInteger v20 = (char *)&v86 - v19;
  __chkstk_darwin(v21, v22);
  int v27 = *(void **)&v24[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange];
  if (!v27) {
    goto LABEL_11;
  }
  int64_t v28 = *(void **)&v24[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange];
  if (!v28) {
    goto LABEL_11;
  }
  char v29 = *(void **)&v24[OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText];
  if (!v29) {
    goto LABEL_11;
  }
  long long v93 = (void (**)(char *, uint64_t))OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange;
  long long v96 = (void (*)(char *, char *, uint64_t))OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange;
  uint64_t v97 = (unsigned int (*)(char *, uint64_t, uint64_t))OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText;
  long long v94 = v0;
  char v92 = (void (**)(uint64_t, uint64_t))((char *)&v86 - v25);
  uint64_t v90 = v26;
  uint64_t v91 = v23;
  int64_t v30 = v27;
  int64_t v31 = v28;
  id v32 = v29;
  if ((uint64_t)[v32 length] < 1)
  {

    uint64_t v24 = (char *)v106;
LABEL_11:
    return (uint64_t)v24;
  }
  Swift::Int v89 = v31;
  CTFontRef v99 = v10;
  long long v100 = v30;
  uint64_t v87 = v11;
  sub_1005D3BF8();
  id v33 = v32;
  CRAttributedString.init(_:)();
  uint64_t v34 = v91;
  long long v95 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
  v95(v20, v16, v91);
  long long v98 = (char *)[v33 length];
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v20;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1005D3C5C;
  *(void *)(v36 + 24) = v35;
  aBlock[4] = sub_1005D3C74;
  void aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100F9A6C0;
  aBlock[3] = &unk_10151A950;
  NSRange v37 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v33 enumerateAttributesInRange:0 options:v98 usingBlock:v37];
  id v88 = v33;

  _Block_release(v37);
  LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v37)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v95((char *)v92, v20, v34);
  swift_release();
  uint64_t KeyPath = (void (**)(uint64_t, void, uint64_t, uint64_t))swift_getKeyPath();
  uint64_t v40 = CRAttributedString.count.getter();
  sub_100E8FE78(KeyPath, 0, v40);
  swift_release();
  long long v98 = (char *)(id)v106;
  id v41 = [v98 range];
  int64_t v43 = v42;
  id v44 = objc_allocWithZone((Class)type metadata accessor for CRLWPStorage());
  uint64_t v45 = (char *)sub_1008FFCEC(v98, (uint64_t)v41, v43);
  Swift::Int v46 = v98;
  long long v47 = v100;
  long long v48 = v94;
  if ((v98[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] & 1) == 0)
  {
    sub_1008FDB6C();
    Swift::Int v46 = v98;
  }
  *(void *)&v45[OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns] = *(void *)&v46[OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v49 = v89;
  sub_100902DAC(*(void *)&v89[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(void *)&v89[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8], v92, 1);
  [v45 range];
  uint64_t v50 = (char *)[v47 start];
  uint64_t v51 = *(void *)&v50[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v51 == NSNotFound.getter())
  {
    uint64_t result = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v52 = 0;
  }
  else
  {
    uint64_t result = *(void *)&v47[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    uint64_t v53 = *(void *)&v47[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
    uint64_t v52 = v53 - result;
    if (__OFSUB__(v53, result))
    {
LABEL_50:
      __break(1u);
      return result;
    }
  }
  __C::_NSRange_optional v110 = _NSRange.intersection(_:)(*(__C::_NSRange *)&result);
  if (!v110.is_nil)
  {
    CRAttributedString.runs.getter();
    uint64_t v106 = OBJC_IVAR____TtC8Freeform12CRLTextRange_range;
    uint64_t v54 = v99;
    CRAttributedString.Runs.next()();
    uint64_t v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
    long long v98 = (char *)(v105 + 48);
    if (v97(v54, 1, v3) == 1)
    {
LABEL_39:

      (*(void (**)(char *, uint64_t))(v87 + 8))(v103, v104);
      (*(void (**)(void, uint64_t))(v90 + 8))(v92, v91);
      return (uint64_t)v45;
    }
    long long v96 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
    long long v94 = v48 + 1;
    v105 += 32;
    long long v93 = (void (**)(char *, uint64_t))(v105 - 24);
    long long v95 = (void (*)(char *, char *, uint64_t))v45;
    while (1)
    {
      v96(v6, v54, v3);
      uint64_t v55 = *(void *)&v47[v106];
      uint64_t result = CRAttributedString.Runs.Run.range.getter();
      uint64_t v56 = v55 + result;
      if (__OFADD__(v55, result)) {
        break;
      }
      uint64_t result = CRAttributedString.Runs.Run.range.getter();
      uint64_t v58 = v57 - result;
      if (__OFSUB__(v57, result)) {
        goto LABEL_44;
      }
      uint64_t v59 = v56 + v58;
      if (__OFADD__(v56, v58)) {
        goto LABEL_45;
      }
      if (v59 < v56) {
        goto LABEL_46;
      }
      id v60 = [v45 range];
      uint64_t v62 = v61;
      uint64_t v63 = (objc_class *)type metadata accessor for CRLTextRange();
      id v64 = objc_allocWithZone(v63);
      uint64_t v65 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:v60 caretAffinity:0];
      uint64_t result = NSNotFound.getter();
      if (v62 >= result) {
        uint64_t v66 = 0;
      }
      else {
        uint64_t v66 = v62;
      }
      uint64_t v67 = *(void *)&v65[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
      uint64_t v68 = v67 + v66;
      if (__OFADD__(v67, v66)) {
        goto LABEL_47;
      }
      if (v68 < v67) {
        goto LABEL_48;
      }
      uint64_t v69 = *(void *)&v65[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
      uint64_t v70 = (char *)objc_allocWithZone(v63);
      uint64_t v71 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
      *(void *)&v70[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
      *(void *)&v70[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
      id v72 = &v70[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      *(void *)id v72 = v67;
      *((void *)v72 + 1) = v68;
      *(void *)&v70[v71] = v69;
      v107.receiver = v70;
      v107.super_class = v63;
      uint64_t v73 = (char *)[super init];

      swift_getObjectType();
      swift_deallocPartialClassInstance();
      uint64_t v75 = *(void *)&v73[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      uint64_t v74 = *(void *)&v73[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      if (v74 >= v56) {
        uint64_t v76 = v56;
      }
      else {
        uint64_t v76 = *(void *)&v73[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      }
      if (v56 >= v75) {
        uint64_t v77 = v76;
      }
      else {
        uint64_t v77 = *(void *)&v73[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      }
      if (v59 > v75) {
        uint64_t v75 = v59;
      }
      if (v74 >= v59) {
        uint64_t v78 = v75;
      }
      else {
        uint64_t v78 = *(void *)&v73[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      }
      uint64_t v79 = (uint64_t)v101;
      CRAttributedString.Runs.Run.attributes.getter();
      uint64_t v45 = (char *)v95;
      sub_10090614C(v79, v77, v78);

      (*v94)(v79, v102);
      (*v93)(v6, v3);
      uint64_t v54 = v99;
      CRAttributedString.Runs.next()();
      unsigned int v80 = v97(v54, 1, v3);
      long long v47 = v100;
      if (v80 == 1) {
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v81 = *(void **)((char *)v96 + v106);
  *(void *)((char *)v96 + v106) = 0;

  unint64_t v82 = *(void (**)(char *, uint64_t))((char *)v93 + v106);
  *(void (**)(char *, uint64_t))((char *)v93 + v106) = 0;

  long long v83 = *(void **)&v98[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS];
  *(void *)&v98[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS] = 0;

  long long v84 = *(void **)((char *)v97 + v106);
  *(void *)((char *)v97 + v106) = 0;

  *(void *)&v98[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextStyle] = 0;
  swift_bridgeObjectRelease();
  (*(void (**)(void, uint64_t))(v90 + 8))(v92, v91);
  long long v85 = v98;

  return (uint64_t)v85;
}

uint64_t sub_1008FD30C(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    swift_getObjectType();
    uint64_t v4 = swift_conformsToProtocol2();
    if (v4) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 0;
    }
    if (v4) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 0;
    }
    if (!v6)
    {

      if (a1) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
    uint64_t ObjectType = swift_getObjectType();
    char v8 = sub_100FC1058(ObjectType, v5);

    if ((v8 & 1) == 0)
    {
LABEL_13:
      return swift_unknownObjectRelease();
    }
  }
  if (a1)
  {
LABEL_11:
    type metadata accessor for CRLBoardItem(0);
    if (!swift_dynamicCastClass())
    {
      swift_unknownObjectRetain();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"parentInfo", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 841, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"parentInfo", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 841);
      return swift_unknownObjectRelease_n();
    }
    swift_unknownObjectWeakAssign();
    goto LABEL_13;
  }
LABEL_17:

  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1008FD64C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result = *(void *)(a1 + *a3);
  if (result) {
    return swift_getObjCClassFromMetadata();
  }
  return result;
}

void sub_1008FD694()
{
  uint64_t v1 = type metadata accessor for CharacterSet();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1, v2);
  unint64_t v39 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  char v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v38 = v0;
  uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v19)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  (*(void (**)(__n128))(*(void *)v19 + 760))(v15);
  uint64_t v35 = v9;
  sub_100919454((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v34(v8, v17, v4);
  sub_100918D58((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  NSUInteger v20 = (void *)CRAttributedString.attributedString.getter();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  uint64_t v22 = (uint64_t)[v20 length];

  if (v22 >= 1)
  {
    uint64_t v23 = v39;
    uint64_t v24 = static CharacterSet.whitespacesAndNewlines.getter();
    uint64_t v25 = *(void *)(v38 + v18);
    if (v25)
    {
      (*(void (**)(uint64_t))(*(void *)v25 + 760))(v24);
      sub_100919454((uint64_t)&v12[*(int *)(v35 + 20)], (uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData);
      v34(v8, v17, v4);
      sub_100918D58((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v26 = (void *)CRAttributedString.attributedString.getter();
      v21(v8, v4);
      id v27 = [v26 string];

      unint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v30 = v29;

      __chkstk_darwin(v31, v32);
      *(&v33 - 2) = (uint64_t)v23;
      sub_100E3BDAC((uint64_t (*)(unint64_t *))sub_10091A4C8, (uint64_t)(&v33 - 4), v28, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v37);
      return;
    }
    goto LABEL_7;
  }
}

uint64_t sub_1008FDB6C()
{
  uint64_t v1 = (double *)sub_1005057FC(&qword_1016879D0);
  *(double *)&long long v234 = *(v1 - 1);
  __chkstk_darwin(v1, v2);
  uint64_t v218 = (char *)v210 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v219 = (char *)v210 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v233 = sub_1005057FC(&qword_1016879E0);
  uint64_t v214 = *(void *)(v233 - 8);
  __chkstk_darwin(v233, v7);
  v232 = (char *)v210 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v223 = *(v9 - 1);
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v227 = (char *)v210 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  unint64_t v15 = (unint64_t)v210 - v14;
  uint64_t v16 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v210 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = (unsigned __int8 *)type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v225, v20);
  uint64_t v22 = (uint64_t)v210 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  unint64_t v224 = (void (**)(char *, double *))((char *)v210 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = __chkstk_darwin(v26, v28);
  uint64_t v31 = (char *)v210 - v30;
  uint64_t v236 = _swiftEmptyArrayStorage;
  unint64_t v237 = _swiftEmptyArrayStorage;
  uint64_t v229 = (uint64_t)v0;
  uint64_t v228 = (unsigned int (*)(uint64_t, uint64_t, double *))OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  unint64_t v32 = *(void *)&v0[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v32) {
    goto LABEL_213;
  }
  (*(void (**)(uint64_t))(*(void *)v32 + 760))(result);
  uint64_t v213 = v16;
  sub_100919454((uint64_t)&v19[*(int *)(v16 + 20)], v22, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData);
  unint64_t v212 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v212(v31, v22, v23);
  sub_100918D58(v22, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v33 = (uint64_t)[(id)v229 characterCount];
  if (v33 < 0) {
    goto LABEL_208;
  }
  v210[0] = v19;
  v210[1] = v24 + 16;
  uint64_t v211 = v22;
  uint64_t v215 = v24;
  id v34 = (id)v229;
  sub_10090059C(0, v33, v238);
  id v35 = v238[4];
  uint64_t v36 = (unsigned int (*)(char *, uint64_t, uint64_t))v238[5];
  uint64_t v37 = (char *)v238[3];

  uint64_t KeyPath = swift_getKeyPath();
  sub_1008F2C00(KeyPath, v37, (uint64_t)v35, v36, (uint64_t *)&v236);

  swift_release();
  uint64_t v39 = v23;
  uint64_t v217 = v31;
  uint64_t v40 = (void *)CRAttributedString.attributedString.getter();
  id v41 = [v40 string];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v42 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v44 = [v42 initWithString:v43];

  id v45 = v34;
  sub_1008F813C(v45);
  sub_100916564();
  Swift::Int v46 = *(double **)(v223 + 8);
  id v221 = v9;
  long long v47 = v9;
  uint64_t v48 = v223 + 8;
  uint64_t v222 = v46;
  ((void (*)(unint64_t, void *))v46)(v15, v47);
  type metadata accessor for Key(0);
  unint64_t v50 = v49;
  uint64_t v51 = sub_100912338((unint64_t *)&qword_1016837E0, 255, type metadata accessor for Key);
  unint64_t v231 = v50;
  int64_t v230 = v51;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v53 = [v44 length];
  id v220 = v44;
  [v44 addAttributes:isa range:0 v53];

  int v226 = v45;
  uint64_t result = (uint64_t)[v45 characterCount];
  uint64_t v216 = v39;
  if (result < 1)
  {
    uint64_t v59 = *(void *)((char *)v228 + v229);
    if (!v59) {
      goto LABEL_214;
    }
    uint64_t v60 = v210[0];
    (*(void (**)(void))(*(void *)v59 + 760))();
    uint64_t v61 = v211;
    sub_100919454(v60 + *(int *)(v213 + 20), v211, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58(v60, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v62 = v224;
    uint64_t v63 = v216;
    v212((char *)v224, v61 + *((int *)v225 + 5), v216);
    sub_100918D58(v61, type metadata accessor for CRLWPStorageCRDTData);
    id v64 = v227;
    CRAttributedString.attributes(at:effectiveRange:)();
    (*(void (**)(void, uint64_t))(v215 + 8))(v62, v63);
    unint64_t v15 = (unint64_t)sub_100916564();
    Class v65 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v220 addAttributes:v65 range:0];

    uint64_t v66 = sub_100917214();
    id v67 = v221;
    uint64_t v68 = v222;
    if (v66)
    {
      unint64_t v15 = (unint64_t)v237;
      uint64_t v69 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = (unint64_t)sub_100F62A30(0, *(void *)(v15 + 16) + 1, 1, (double *)v15);
      }
      unint64_t v71 = *(void *)(v15 + 16);
      unint64_t v70 = *(void *)(v15 + 24);
      if (v71 >= v70 >> 1) {
        unint64_t v15 = (unint64_t)sub_100F62A30((double *)(v70 > 1), v71 + 1, 1, (double *)v15);
      }
      *(void *)(v15 + 16) = v71 + 1;
      id v72 = (void *)(v15 + 24 * v71);
      v72[4] = 0;
      v72[5] = 0;
      v72[6] = v69;

      unint64_t v237 = (double *)v15;
      uint64_t v68 = v222;
    }
    ((void (*)(char *, id))v68)(v64, v67);
  }
  else
  {
    CRAttributedString.runs.getter();
    uint64_t v22 = (uint64_t)v219;
    CRAttributedString.Runs.next()();
    uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, double *))(v234 + 48);
    uint64_t v229 = v234 + 48;
    uint64_t v228 = v54;
    unsigned int v55 = v54(v22, 1, v1);
    id v56 = v221;
    uint64_t v57 = v222;
    uint64_t v58 = v218;
    if (v55 != 1)
    {
      uint64_t v227 = *(char **)(v234 + 32);
      *(void *)&long long v234 = v234 + 32;
      unint64_t v224 = (void (**)(char *, double *))(v234 - 24);
      uint64_t v225 = (unsigned __int8 *)&type metadata for Any + 8;
      uint64_t v223 = v48;
      ((void (*)(char *, uint64_t, double *))v227)(v218, v22, v1);
      while (1)
      {
        CRAttributedString.Runs.Run.attributes.getter();
        sub_100916564();
        ((void (*)(unint64_t, id))v57)(v15, v56);
        uint64_t v197 = v48;
        uint64_t v198 = v57;
        v199.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        unint64_t v32 = (unint64_t)v58;
        uint64_t v200 = CRAttributedString.Runs.Run.range.getter();
        if (__OFSUB__(v201, v200)) {
          goto LABEL_201;
        }
        [v220 addAttributes:v199.super.isa range:v200, v201 - v200];

        CRAttributedString.Runs.Run.attributes.getter();
        uint64_t v202 = sub_100917214();
        ((void (*)(unint64_t, id))v198)(v15, v56);
        uint64_t v57 = v198;
        uint64_t v48 = v197;
        if (v202)
        {
          uint64_t v203 = CRAttributedString.Runs.Run.range.getter();
          uint64_t v205 = v204;
          v206 = v237;
          uint64_t v207 = v202;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v206 = sub_100F62A30(0, *((void *)v206 + 2) + 1, 1, v206);
          }
          unint64_t v209 = *((void *)v206 + 2);
          unint64_t v208 = *((void *)v206 + 3);
          if (v209 >= v208 >> 1) {
            v206 = sub_100F62A30((double *)(v208 > 1), v209 + 1, 1, v206);
          }
          *((void *)v206 + 2) = v209 + 1;
          uint64_t v196 = &v206[3 * v209];
          *((void *)v196 + 4) = v203;
          *((void *)v196 + 5) = v205;
          *((void *)v196 + 6) = v207;

          unint64_t v237 = v206;
          id v56 = v221;
          uint64_t v48 = v223;
          uint64_t v22 = (uint64_t)v219;
          uint64_t v57 = v222;
          uint64_t v58 = v218;
        }
        (*v224)(v58, v1);
        CRAttributedString.Runs.next()();
        if (v228(v22, 1, v1) == 1) {
          break;
        }
        ((void (*)(char *, uint64_t, double *))v227)(v58, v22, v1);
      }
    }
    (*(void (**)(char *, void))(v214 + 8))(v232, v233);
  }
  sub_1008FB494();
  unint64_t v32 = (unint64_t)v226;
  if ((v226[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges] & 1) == 0)
  {
    sub_1008FF790();
    unint64_t v32 = (unint64_t)v226;
  }
  uint64_t v73 = *(void *)(*(void *)(v32 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphRanges) + 16);
  uint64_t v1 = _swiftEmptyArrayStorage;
  if (v73)
  {
    uint64_t v22 = (uint64_t)_swiftEmptyArrayStorage;
    int64_t v230 = swift_bridgeObjectRetain();
    uint64_t v74 = (uint64_t *)(v230 + 40);
    do
    {
      uint64_t v75 = *v74;
      *(void *)&long long v234 = *(v74 - 1);
      *(void *)&long long v233 = v75;
      sub_10090059C(v234, v75, v239);
      uint64_t v1 = (double *)v239[4];
      uint64_t v76 = (char *)v239[5];
      uint64_t v77 = (char *)v239[3];

      uint64_t v78 = swift_getKeyPath();
      unint64_t v32 = sub_1010397A0(v78, v77, (char *)v1, v76);
      char v80 = v79;
      swift_release();
      uint64_t v227 = (char *)v22;
      if (v80)
      {
        if (!*(void *)(v32 + 16)) {
          goto LABEL_202;
        }
        unint64_t v15 = *(unsigned __int8 *)(v32 + 32);
        sub_1006F23FC(v32, 1);
        LOBYTE(v32) = v15;
      }
      uint64_t v81 = sub_100910B6C(v77, (char *)v1, (uint64_t)v76, v32);
      unint64_t v32 = swift_getKeyPath();
      unint64_t v82 = sub_101038C68(v32, v77, (char *)v1, v76);
      uint64_t v22 = v83;
      swift_release();
      if (v22)
      {
        if (!*(void *)(v82 + 16)) {
          goto LABEL_203;
        }
        unint64_t v15 = *(void *)(v82 + 32);
        sub_1006F23FC(v82, 1);
        unint64_t v231 = v15;
      }
      else
      {
        unint64_t v231 = v82;
      }
      unint64_t v32 = swift_getKeyPath();
      uint64_t v84 = sub_10104093C(v32, v77, (char *)v1, v76);
      uint64_t v22 = v85;
      swift_release();
      v232 = v81;
      if (v22)
      {
        if (!*(void *)(v84 + 16)) {
          goto LABEL_204;
        }
        uint64_t v86 = v73;
        uint64_t v87 = *(void *)(v84 + 32);
        sub_1006F23FC(v84, 1);
        uint64_t v84 = v87;
      }
      else
      {
        uint64_t v86 = v73;
      }
      unint64_t v32 = (unint64_t)sub_1009107A8();
      unint64_t v15 = swift_getKeyPath();
      uint64_t v22 = sub_10103AE6C(v15, v77, (char *)v1, v76);
      char v89 = v88;
      swift_release();
      if (v89)
      {
        if (!*(void *)(v22 + 16)) {
          goto LABEL_205;
        }
        uint64_t v90 = *(void *)(v22 + 32);
        sub_1006F23FC(v22, 1);
        uint64_t v22 = v90;
      }
      *(void *)(v32 + OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_alignment) = v22;
      unint64_t v15 = swift_getKeyPath();
      unint64_t v32 = (unint64_t)(id)v32;
      uint64_t v1 = (double *)sub_10103A300(v15, v77, (char *)v1, v76);
      uint64_t v22 = v91;
      swift_release();
      uint64_t v92 = v86;
      if (v22)
      {
        long long v93 = v232;
        if (!*((void *)v1 + 2)) {
          goto LABEL_206;
        }
        long long v94 = (double *)*((void *)v1 + 4);
        sub_1006F23FC((uint64_t)v1, 1);
        uint64_t v1 = v94;
      }
      else
      {
        long long v93 = v232;
      }
      unint64_t v95 = v32 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection;
      *(void *)unint64_t v95 = v1;
      *(unsigned char *)(v95 + 8) = 0;
      long long v96 = v93;
      uint64_t v22 = (uint64_t)v227;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = (uint64_t)sub_100F62A10(0, *(void *)(v22 + 16) + 1, 1, (void *)v22);
      }
      unint64_t v15 = *(void *)(v22 + 16);
      unint64_t v97 = *(void *)(v22 + 24);
      if (v15 >= v97 >> 1) {
        uint64_t v22 = (uint64_t)sub_100F62A10((void *)(v97 > 1), v15 + 1, 1, (void *)v22);
      }
      v74 += 2;
      *(void *)(v22 + 16) = v15 + 1;
      unint64_t v98 = v22 + 56 * v15;
      uint64_t v99 = v233;
      *(void *)(v98 + 32) = v234;
      *(void *)(v98 + 40) = v99;
      *(void *)(v98 + 48) = v32;
      *(void *)(v98 + 56) = v93;
      unint64_t v100 = v231;
      *(void *)(v98 + 64) = v84;
      *(void *)(v98 + 72) = v100;
      *(unsigned char *)(v98 + 80) = 0;

      uint64_t v73 = v92 - 1;
    }
    while (v73);
    swift_bridgeObjectRelease();
    unint64_t v32 = (unint64_t)v226;
    uint64_t v1 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v22 = (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v224 = *(void (***)(char *, double *))(v22 + 16);
  if (!v224)
  {
    unint64_t v101 = (unint64_t)[(id)v32 characterCount];
    if ((v101 & 0x8000000000000000) == 0)
    {
      unint64_t v15 = v101;
      unint64_t v32 = (unint64_t)sub_1009107A8();
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_46;
      }
      goto LABEL_210;
    }
    goto LABEL_209;
  }
LABEL_49:
  uint64_t v223 = v22 + 32;
  swift_bridgeObjectRetain();
  unint64_t v105 = 0;
  uint64_t v106 = (char *)_swiftEmptyDictionarySingleton;
  uint64_t v222 = v1;
  uint64_t v227 = (char *)v22;
  while (1)
  {
    if (v105 >= *(void *)(v22 + 16))
    {
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
      goto LABEL_199;
    }
    unint64_t v107 = v223 + 56 * v105;
    *(void *)&long long v234 = *(void *)v107;
    uint64_t v108 = *(void *)(v107 + 8);
    unint64_t v15 = *(void *)(v107 + 16);
    v232 = v106;
    *(void *)&long long v233 = v108;
    long long v109 = *(unsigned __int8 **)(v107 + 24);
    uint64_t result = *(void *)(v107 + 32);
    uint64_t v110 = *(void *)(v107 + 40);
    int v111 = *(unsigned __int8 *)(v107 + 48);
    unint64_t v231 = v105;
    if (v109 && !v109[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType])
    {
      unint64_t v32 = (unint64_t)(v106 + 64);
      uint64_t v135 = 1 << v106[32];
      if (v135 < 64) {
        uint64_t v136 = ~(-1 << v135);
      }
      else {
        uint64_t v136 = -1;
      }
      unint64_t v137 = v136 & *((void *)v106 + 8);
      int64_t v230 = (unint64_t)(v135 + 63) >> 6;
      uint64_t v225 = v109;
      id v221 = (id)v15;
      swift_bridgeObjectRetain();
      int64_t v138 = 0;
      uint64_t v228 = (unsigned int (*)(uint64_t, uint64_t, double *))(v106 + 64);
      while (1)
      {
        if (v137)
        {
          unint64_t v139 = __clz(__rbit64(v137));
          v137 &= v137 - 1;
          unint64_t v140 = v139 | (v138 << 6);
        }
        else
        {
          int64_t v143 = v138 + 1;
          if (__OFADD__(v138, 1))
          {
            __break(1u);
            goto LABEL_195;
          }
          if (v143 >= v230) {
            goto LABEL_109;
          }
          unint64_t v144 = *(void *)(v32 + 8 * v143);
          ++v138;
          if (!v144)
          {
            int64_t v138 = v143 + 1;
            if (v143 + 1 >= v230) {
              goto LABEL_109;
            }
            unint64_t v144 = *(void *)(v32 + 8 * v138);
            if (!v144)
            {
              int64_t v138 = v143 + 2;
              if (v143 + 2 >= v230) {
                goto LABEL_109;
              }
              unint64_t v144 = *(void *)(v32 + 8 * v138);
              if (!v144)
              {
                int64_t v138 = v143 + 3;
                if (v143 + 3 >= v230) {
                  goto LABEL_109;
                }
                unint64_t v144 = *(void *)(v32 + 8 * v138);
                if (!v144)
                {
                  int64_t v145 = v143 + 4;
                  if (v145 >= v230)
                  {
LABEL_109:
                    swift_release();

                    swift_bridgeObjectRelease();
                    uint64_t v106 = (char *)_swiftEmptyDictionarySingleton;
                    goto LABEL_53;
                  }
                  unint64_t v144 = *(void *)(v32 + 8 * v145);
                  if (!v144)
                  {
                    while (1)
                    {
                      int64_t v138 = v145 + 1;
                      if (__OFADD__(v145, 1)) {
                        break;
                      }
                      if (v138 >= v230) {
                        goto LABEL_109;
                      }
                      unint64_t v144 = *(void *)(v32 + 8 * v138);
                      ++v145;
                      if (v144) {
                        goto LABEL_100;
                      }
                    }
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
LABEL_201:
                    __break(1u);
LABEL_202:
                    __break(1u);
LABEL_203:
                    __break(1u);
LABEL_204:
                    __break(1u);
LABEL_205:
                    __break(1u);
LABEL_206:
                    __break(1u);
LABEL_207:
                    __break(1u);
LABEL_208:
                    __break(1u);
LABEL_209:
                    __break(1u);
LABEL_210:
                    uint64_t v22 = (uint64_t)sub_100F62A10(0, *(void *)(v22 + 16) + 1, 1, (void *)v22);
LABEL_46:
                    unint64_t v103 = *(void *)(v22 + 16);
                    unint64_t v102 = *(void *)(v22 + 24);
                    unint64_t v224 = (void (**)(char *, double *))(v103 + 1);
                    if (v103 >= v102 >> 1) {
                      uint64_t v22 = (uint64_t)sub_100F62A10((void *)(v102 > 1), (int64_t)v224, 1, (void *)v22);
                    }
                    *(void *)(v22 + 16) = v224;
                    uint64_t v104 = v22 + 56 * v103;
                    *(void *)(v104 + 32) = 0;
                    *(void *)(v104 + 40) = v15;
                    *(void *)(v104 + 48) = v32;
                    *(void *)(v104 + 56) = 0;
                    *(void *)(v104 + 64) = 0;
                    *(void *)(v104 + 72) = 0;
                    *(unsigned char *)(v104 + 80) = 1;
                    goto LABEL_49;
                  }
                  int64_t v138 = v145;
                }
              }
            }
          }
LABEL_100:
          unint64_t v137 = (v144 - 1) & v144;
          unint64_t v140 = __clz(__rbit64(v144)) + (v138 << 6);
        }
        uint64_t v141 = *(void *)(*((void *)v106 + 7) + 8 * v140);
        uint64_t v142 = *(void *)(v141 + 16);
        if (v142)
        {
          uint64_t v229 = v138;
          swift_bridgeObjectRetain();
          uint64_t v146 = v222;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v146 = sub_100F628C8(0, *((void *)v146 + 2) + 1, 1, v146);
          }
          uint64_t v147 = (long long *)(v141 + 40);
          do
          {
            char v148 = *((unsigned char *)v147 - 8);
            long long v149 = *v147;
            long long v233 = v147[1];
            long long v234 = v149;
            uint64_t v150 = *((void *)v147 + 4);
            long long v151 = v146;
            unint64_t v15 = *((void *)v146 + 2);
            unint64_t v152 = *((void *)v146 + 3);
            swift_bridgeObjectRetain();
            if (v15 >= v152 >> 1) {
              uint64_t v146 = sub_100F628C8((double *)(v152 > 1), v15 + 1, 1, v151);
            }
            else {
              uint64_t v146 = v151;
            }
            *((void *)v146 + 2) = v15 + 1;
            long long v153 = &v146[6 * v15];
            *((unsigned char *)v153 + 32) = v148;
            *(_OWORD *)(v153 + 5) = v234;
            *(_OWORD *)(v153 + 7) = v233;
            *((void *)v153 + 9) = v150;
            v147 += 3;
            --v142;
          }
          while (v142);
          uint64_t v222 = v146;
          swift_bridgeObjectRelease();
          uint64_t v22 = (uint64_t)v227;
          uint64_t v1 = _swiftEmptyArrayStorage;
          unint64_t v105 = v231;
          uint64_t v106 = v232;
          unint64_t v32 = (unint64_t)v228;
          int64_t v138 = v229;
        }
      }
    }
    uint64_t v112 = *((void *)v106 + 2);
    uint64_t v229 = result;
    if (v112 && (uint64_t result = sub_100955F14(result), (v113 & 1) != 0))
    {
      unint64_t v114 = *(double **)(*((void *)v106 + 7) + 8 * result);
      uint64_t result = swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v114 = v1;
    }
    uint64_t v115 = *((void *)v114 + 2);
    uint64_t v228 = (unsigned int (*)(uint64_t, uint64_t, double *))v15;
    if (!v115)
    {
      if (!v109) {
        goto LABEL_212;
      }
      uint64_t v127 = v1;
      LODWORD(v230) = v109[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType];
      goto LABEL_70;
    }
    unsigned __int8 v116 = &v114[6 * v115];
    unsigned int v117 = (double *)*((void *)v116 + 3);
    if (!v109) {
      break;
    }
    int v118 = v109[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType];
    LODWORD(v230) = *((unsigned __int8 *)v116 - 16);
    if (v230 != v118)
    {
      uint64_t v127 = v1;
      swift_bridgeObjectRetain();
      LODWORD(v230) = v118;
LABEL_70:
      uint64_t v128 = v109;
      uint64_t v129 = v228;
      swift_bridgeObjectRelease();
      if (v111) {
        uint64_t v120 = 1;
      }
      else {
        uint64_t v120 = v110;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v114 = sub_100F628C8(0, *((void *)v114 + 2) + 1, 1, v114);
      }
      unint64_t v131 = *((void *)v114 + 2);
      unint64_t v130 = *((void *)v114 + 3);
      if (v131 >= v130 >> 1) {
        unint64_t v114 = sub_100F628C8((double *)(v130 > 1), v131 + 1, 1, v114);
      }
      *((void *)v114 + 2) = v131 + 1;
      char v132 = &v114[6 * v131];
      *((unsigned char *)v132 + 32) = v230;
      uint64_t v133 = (unsigned __int8 *)v229;
      uint64_t v134 = v234;
      *((void *)v132 + 5) = v229;
      *((void *)v132 + 6) = v134;
      *((void *)v132 + 7) = v233;
      *((void *)v132 + 8) = v120;
      *((void *)v132 + 9) = v127;
      uint64_t v126 = v127;
      unsigned int v117 = v127;
      uint64_t v225 = v133;
      goto LABEL_120;
    }
    uint64_t v119 = *(void *)v116;
    uint64_t v225 = (unsigned __int8 *)*((void *)v116 - 1);
    uint64_t v120 = *((void *)v116 + 2);
    uint64_t v121 = *((void *)v117 + 2);
    if (v121)
    {
      LODWORD(v221) = v111;
      uint64_t v122 = v22;
      int64_t v123 = *(void *)&v117[v121 + 3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v124 = v109;
      id v125 = (id)v15;
      LOBYTE(v123) = sub_100917728(v123, v231, v122);
      swift_bridgeObjectRelease();
      if (v123)
      {
        *(void *)&long long v234 = v119;
        uint64_t v22 = (uint64_t)v227;
        uint64_t v126 = _swiftEmptyArrayStorage;
      }
      else
      {
        LODWORD(v230) = v124[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType];
        swift_bridgeObjectRelease();
        if (v221) {
          uint64_t v120 = 1;
        }
        else {
          uint64_t v120 = v110;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v114 = sub_100F628C8(0, *((void *)v114 + 2) + 1, 1, v114);
        }
        unint64_t v157 = *((void *)v114 + 2);
        unint64_t v156 = *((void *)v114 + 3);
        uint64_t v22 = (uint64_t)v227;
        unsigned int v117 = _swiftEmptyArrayStorage;
        if (v157 >= v156 >> 1) {
          unint64_t v114 = sub_100F628C8((double *)(v156 > 1), v157 + 1, 1, v114);
        }
        *((void *)v114 + 2) = v157 + 1;
        long long v158 = &v114[6 * v157];
        *((unsigned char *)v158 + 32) = v230;
        Swift::Int v159 = (unsigned __int8 *)v229;
        uint64_t v160 = v234;
        *((void *)v158 + 5) = v229;
        *((void *)v158 + 6) = v160;
        *((void *)v158 + 7) = v233;
        *((void *)v158 + 8) = v120;
        *((void *)v158 + 9) = _swiftEmptyArrayStorage;
        uint64_t v126 = _swiftEmptyArrayStorage;
        uint64_t v225 = v159;
      }
      int v111 = (int)v221;
    }
    else
    {
      swift_bridgeObjectRetain();
      long long v154 = v109;
      id v155 = (id)v15;
      *(void *)&long long v234 = v119;
      uint64_t v126 = _swiftEmptyArrayStorage;
    }
LABEL_120:
    if (v120 == 1) {
      int v161 = v111;
    }
    else {
      int v161 = 1;
    }
    if (v110 < 1) {
      int v161 = 1;
    }
    if (v161) {
      unint64_t v15 = v120;
    }
    else {
      unint64_t v15 = v110;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned int v117 = sub_100F629F0(0, *((void *)v117 + 2) + 1, 1, v117);
    }
    unint64_t v105 = v231;
    uint64_t v1 = v126;
    unint64_t v32 = *((void *)v117 + 2);
    unint64_t v162 = *((void *)v117 + 3);
    if (v32 >= v162 >> 1) {
      unsigned int v117 = sub_100F629F0((double *)(v162 > 1), v32 + 1, 1, v117);
    }
    *((void *)v117 + 2) = v32 + 1;
    *(void *)&v117[v32 + 4] = v105;
    if ((uint64_t)v233 < (uint64_t)v234) {
      goto LABEL_196;
    }
    if (v114)
    {
      if (!*((void *)v114 + 2)) {
        goto LABEL_197;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v163 = *((void *)v114 + 2);
        if (!v163) {
          goto LABEL_198;
        }
      }
      else
      {
        unint64_t v114 = sub_100F6859C((uint64_t)v114);
        uint64_t v163 = *((void *)v114 + 2);
        if (!v163) {
          goto LABEL_198;
        }
      }
      *((void *)v114 + 2) = v163 - 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v114 = sub_100F628C8(0, *((void *)v114 + 2) + 1, 1, v114);
      }
      unint64_t v165 = *((void *)v114 + 2);
      unint64_t v164 = *((void *)v114 + 3);
      if (v165 >= v164 >> 1) {
        unint64_t v114 = sub_100F628C8((double *)(v164 > 1), v165 + 1, 1, v114);
      }
      *((void *)v114 + 2) = v165 + 1;
      uint64_t v166 = &v114[6 * v165];
      *((unsigned char *)v166 + 32) = v230;
      uint64_t v167 = v234;
      *((void *)v166 + 5) = v225;
      *((void *)v166 + 6) = v167;
      *((void *)v166 + 7) = v233;
      *((void *)v166 + 8) = v15;
      *((void *)v166 + 9) = v117;
      swift_bridgeObjectRetain();
      unint64_t v15 = (unint64_t)v232;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v235 = (char *)v15;
      unint64_t v32 = (unint64_t)&v235;
      sub_100972E4C((uint64_t)v114, v229, isUniquelyReferenced_nonNull_native);
      v232 = v235;

      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v32 = (unint64_t)v232;
      unint64_t v169 = sub_100955F14(v229);
      if (v170)
      {
        unint64_t v15 = v169;
        char v171 = swift_isUniquelyReferenced_nonNull_native();
        v235 = (char *)v32;
        if ((v171 & 1) == 0)
        {
          sub_10097CB80();
          unint64_t v32 = (unint64_t)v235;
        }
        v232 = (char *)v32;
        sub_10058857C(v15, v32);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v106 = v232;
LABEL_53:
    if ((void (**)(char *, double *))++v105 == v224)
    {
      swift_bridgeObjectRelease();
      if (*((void *)v106 + 2))
      {
        unint64_t v32 = (unint64_t)(v106 + 64);
        uint64_t v172 = 1 << v106[32];
        uint64_t v173 = -1;
        if (v172 < 64) {
          uint64_t v173 = ~(-1 << v172);
        }
        unint64_t v174 = v173 & *((void *)v106 + 8);
        uint64_t v175 = (unint64_t)(v172 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v176 = 0;
        v232 = v106;
        uint64_t v1 = v222;
        int64_t v230 = (int64_t)(v106 + 64);
        uint64_t v229 = v175;
        if (v174)
        {
LABEL_152:
          unint64_t v177 = __clz(__rbit64(v174));
          v174 &= v174 - 1;
          unint64_t v178 = v177 | (v176 << 6);
          goto LABEL_153;
        }
        while (1)
        {
          int64_t v180 = v176 + 1;
          if (__OFADD__(v176, 1)) {
            goto LABEL_200;
          }
          if (v180 >= v175) {
            goto LABEL_181;
          }
          unint64_t v181 = *(void *)(v32 + 8 * v180);
          ++v176;
          if (!v181)
          {
            int64_t v176 = v180 + 1;
            if (v180 + 1 >= v175) {
              goto LABEL_181;
            }
            unint64_t v181 = *(void *)(v32 + 8 * v176);
            if (!v181)
            {
              int64_t v176 = v180 + 2;
              if (v180 + 2 >= v175) {
                goto LABEL_181;
              }
              unint64_t v181 = *(void *)(v32 + 8 * v176);
              if (!v181)
              {
                int64_t v176 = v180 + 3;
                if (v180 + 3 >= v175) {
                  goto LABEL_181;
                }
                unint64_t v181 = *(void *)(v32 + 8 * v176);
                if (!v181)
                {
                  int64_t v182 = v180 + 4;
                  if (v182 >= v175)
                  {
LABEL_181:
                    swift_release();
                    goto LABEL_183;
                  }
                  unint64_t v181 = *(void *)(v32 + 8 * v182);
                  if (!v181)
                  {
                    while (1)
                    {
                      int64_t v176 = v182 + 1;
                      if (__OFADD__(v182, 1)) {
                        goto LABEL_207;
                      }
                      if (v176 >= v175) {
                        goto LABEL_181;
                      }
                      unint64_t v181 = *(void *)(v32 + 8 * v176);
                      ++v182;
                      if (v181) {
                        goto LABEL_170;
                      }
                    }
                  }
                  int64_t v176 = v182;
                }
              }
            }
          }
LABEL_170:
          unint64_t v174 = (v181 - 1) & v181;
          unint64_t v178 = __clz(__rbit64(v181)) + (v176 << 6);
LABEL_153:
          unint64_t v15 = *(void *)(*((void *)v106 + 7) + 8 * v178);
          uint64_t v179 = *(void *)(v15 + 16);
          if (v179)
          {
            swift_bridgeObjectRetain();
            char v183 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v231 = v176;
            if ((v183 & 1) == 0) {
              uint64_t v1 = sub_100F628C8(0, *((void *)v1 + 2) + 1, 1, v1);
            }
            unint64_t v184 = v15 + 40;
            do
            {
              char v185 = *(unsigned char *)(v184 - 8);
              long long v186 = *(_OWORD *)v184;
              long long v233 = *(_OWORD *)(v184 + 16);
              long long v234 = v186;
              uint64_t v187 = *(void *)(v184 + 32);
              unint64_t v188 = v1;
              unint64_t v189 = *((void *)v1 + 2);
              unint64_t v190 = *((void *)v1 + 3);
              swift_bridgeObjectRetain();
              if (v189 >= v190 >> 1) {
                uint64_t v1 = sub_100F628C8((double *)(v190 > 1), v189 + 1, 1, v188);
              }
              else {
                uint64_t v1 = v188;
              }
              *((void *)v1 + 2) = v189 + 1;
              uint64_t v191 = &v1[6 * v189];
              *((unsigned char *)v191 + 32) = v185;
              *(_OWORD *)(v191 + 5) = v234;
              *(_OWORD *)(v191 + 7) = v233;
              *((void *)v191 + 9) = v187;
              v184 += 48;
              --v179;
            }
            while (v179);
            swift_bridgeObjectRelease();
            uint64_t v22 = (uint64_t)v227;
            int64_t v176 = v231;
            uint64_t v106 = v232;
            unint64_t v32 = v230;
            uint64_t v175 = v229;
            if (v174) {
              goto LABEL_152;
            }
          }
          else if (v174)
          {
            goto LABEL_152;
          }
        }
      }
      uint64_t v1 = v222;
LABEL_183:
      uint64_t v192 = v226;
      uint64_t v193 = *(void **)&v226[OBJC_IVAR____TtC8Freeform12CRLWPStorage__coreTextAttributedString];
      id v194 = v220;
      *(void *)&v226[OBJC_IVAR____TtC8Freeform12CRLWPStorage__coreTextAttributedString] = v220;
      id v195 = v194;

      *(void *)&v192[OBJC_IVAR____TtC8Freeform12CRLWPStorage__characterStyleRuns] = v237;
      swift_bridgeObjectRelease();
      *(void *)&v192[OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns] = v22;
      swift_bridgeObjectRelease();
      *(void *)&v192[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hyperlinkRuns] = v236;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v192[OBJC_IVAR____TtC8Freeform12CRLWPStorage__listRuns] = v1;

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v215 + 8))(v217, v216);
      v192[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] = 1;
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t result = swift_bridgeObjectRetain();
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
  return result;
}

void sub_1008FF790()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v11 = *(void (***)(char *, char *, uint64_t))(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  uint64_t v39 = v15;
  *(void *)(v15 + 16) = _swiftEmptyArrayStorage;
  uint64_t v16 = (double **)(v15 + 16);
  uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v17)
  {
    (*(void (**)(void))(*(void *)v17 + 760))();
    sub_100919454((uint64_t)&v5[*(int *)(v2 + 20)], (uint64_t)v9, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
    v11[2](v14, v9, v10);
    sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v18 = (void *)CRAttributedString.attributedString.getter();
    id v19 = [v18 string];

    if (v19)
    {
      if ((uint64_t)[v19 length] < 1) {
        goto LABEL_11;
      }
      uint64_t v37 = v14;
      uint64_t v38 = v1;
      uint64_t v14 = (char *)v11;
      uint64_t v11 = (void (**)(char *, char *, uint64_t))v10;
      uint64_t v20 = (double *)[v19 crl_range];
      id v22 = v21;
      uint64_t v10 = v39;
      aBlock[4] = sub_1009199D8;
      uint64_t v41 = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_1009109DC;
      aBlock[3] = &unk_10151A7A0;
      uint64_t v23 = (double *)_Block_copy(aBlock);
      uint64_t v1 = v41;
      swift_retain();
      swift_release();
      [v19 enumerateSubstringsInRange:v20 options:v22 usingBlock:v23];
      _Block_release(v23);
      uint64_t v24 = (char *)[v19 length];
      if (__OFSUB__(v24, 1))
      {
        __break(1u);
        goto LABEL_18;
      }
      unsigned int v25 = sub_1001CA284((uint64_t)[v19 characterAtIndex:v24 - 1]);
      uint64_t v10 = (uint64_t)v11;
      uint64_t v11 = (void (**)(char *, char *, uint64_t))v14;
      uint64_t v14 = v37;
      uint64_t v1 = v38;
      if (!v25)
      {
LABEL_11:
        swift_beginAccess();
        unint64_t v32 = *v16;
        if (*((void *)*v16 + 2))
        {
LABEL_16:
          *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphRanges) = v32;
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v11[1])(v14, v10);
          *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges) = 1;
          swift_release();
          return;
        }
        swift_beginAccess();
        uint64_t v20 = *v16;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v16 = v20;
        if (isUniquelyReferenced_nonNull_native)
        {
LABEL_13:
          unint64_t v35 = *((void *)v20 + 2);
          unint64_t v34 = *((void *)v20 + 3);
          if (v35 >= v34 >> 1)
          {
            uint64_t v20 = sub_100F627B8((double *)(v34 > 1), v35 + 1, 1, v20);
            *uint64_t v16 = v20;
          }
          *((void *)v20 + 2) = v35 + 1;
          uint64_t v36 = &v20[2 * v35];
          void v36[4] = 0.0;
          v36[5] = 0.0;
          unint64_t v32 = *v16;
          swift_endAccess();
          goto LABEL_16;
        }
LABEL_18:
        uint64_t v20 = sub_100F627B8(0, *((void *)v20 + 2) + 1, 1, v20);
        *uint64_t v16 = v20;
        goto LABEL_13;
      }
      id v26 = [v19 length];
      id v27 = [v19 length];
      if ((uint64_t)v27 < (uint64_t)v26)
      {
        __break(1u);
      }
      else
      {
        id v22 = v27;
        swift_beginAccess();
        uint64_t v23 = *v16;
        char v28 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v16 = v23;
        if (v28)
        {
LABEL_8:
          unint64_t v30 = *((void *)v23 + 2);
          unint64_t v29 = *((void *)v23 + 3);
          if (v30 >= v29 >> 1)
          {
            uint64_t v23 = sub_100F627B8((double *)(v29 > 1), v30 + 1, 1, v23);
            *uint64_t v16 = v23;
          }
          *((void *)v23 + 2) = v30 + 1;
          uint64_t v31 = &v23[2 * v30];
          *((void *)v31 + 4) = v26;
          *((void *)v31 + 5) = v22;
          swift_endAccess();
          uint64_t v1 = v38;
          goto LABEL_11;
        }
      }
      uint64_t v23 = sub_100F627B8(0, *((void *)v23 + 2) + 1, 1, v23);
      *uint64_t v16 = v23;
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1008FFCEC(char *a1, uint64_t a2, uint64_t (*a3)(uint64_t a1))
{
  char v79 = a3;
  uint64_t v76 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v71 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v6);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v81, v9);
  uint64_t v75 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v80, v11);
  uint64_t v70 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v74 = (uint64_t)&v66 - v15;
  uint64_t v16 = sub_1005057FC(&qword_101687AE0);
  uint64_t v82 = *(void *)(v16 - 8);
  uint64_t v83 = v16;
  __chkstk_darwin(v16, v17);
  uint64_t v73 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  id v22 = (char *)&v66 - v21;
  uint64_t v69 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData] = 0;
  uint64_t v23 = (uint64_t)&v3[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride];
  sub_1005C6DF0((uint64_t)v86);
  sub_10051B3EC((uint64_t)v86, v23, &qword_10168D670);
  uint64_t v24 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_geometry;
  id v25 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  id v26 = v3;
  id v27 = [v25 initWithSize:100.0, 100.0];
  id v72 = v3;
  *(void *)&v3[v24] = v27;
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText] = 0;
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange] = 0;
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange] = 0;
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS] = 0;
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextStyle] = 0;
  swift_unknownObjectWeakInit();
  v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage_isSupported] = 1;
  uint64_t v28 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_layoutClass;
  *(void *)&v26[v28] = type metadata accessor for CRLWPLayout();
  uint64_t v29 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_repClass;
  *(void *)&v26[v29] = sub_10050BF48(0, &qword_101684070);
  uint64_t v30 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_editorClass;
  *(void *)&v26[v30] = type metadata accessor for CRLWPEditor();
  v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges] = 0;
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphRanges] = _swiftEmptyArrayStorage;
  v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] = 0;
  uint64_t v31 = OBJC_IVAR____TtC8Freeform12CRLWPStorage__coreTextAttributedString;
  *(void *)&v26[v31] = [objc_allocWithZone((Class)NSAttributedString) init];
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage__characterStyleRuns] = _swiftEmptyArrayStorage;
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns] = _swiftEmptyArrayStorage;
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hyperlinkRuns] = _swiftEmptyArrayStorage;
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage__listRuns] = _swiftEmptyArrayStorage;
  unint64_t v32 = *(void **)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_store];
  *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage_store] = v32;
  id v33 = v32;
  sub_10090664C(a2, (uint64_t)v79);
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t result = NSNotFound.getter();
  if (v35 == result)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (__OFADD__(v35, v37))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  char v79 = (uint64_t (*)(uint64_t))OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v39 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v39)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v40 = a1;
  uint64_t v41 = *(uint64_t (**)(void))(*(void *)v39 + 440);
  swift_retain();
  uint64_t v77 = v41(0);
  uint64_t result = swift_release();
  id v78 = v40;
  uint64_t v42 = *(void *)((char *)v79 + (void)v40);
  if (!v42)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v68 = v8;
  uint64_t v43 = (uint64_t)v75;
  (*(void (**)(uint64_t))(*(void *)v42 + 760))(result);
  uint64_t v44 = v81;
  uint64_t v45 = v74;
  sub_100919454(v43 + *(int *)(v81 + 20), v74, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58(v43, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v46 = v76;
  CRAttributedString.subscript.getter();
  sub_100918D58(v45, type metadata accessor for CRLWPStorageCRDTData);
  long long v47 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  id v67 = v22;
  v47(v73, v22, v83);
  sub_1005D3BF8();
  CRAttributedString.init(_:)();
  uint64_t v48 = v80;
  uint64_t v49 = v45;
  CRAttributedString.init(_:)();
  *(void *)(v45 + *(int *)(v48 + 24)) = _swiftEmptyDictionarySingleton;
  unint64_t v50 = *(uint64_t (**)(unsigned char *))(*(void *)v77 + 776);
  uint64_t v73 = (char *)(*(void *)v77 + 776);
  uint64_t v66 = v50;
  uint64_t v51 = (void (*)(unsigned char *, void))v50(v85);
  sub_10091A240(v49, v52 + *(int *)(v44 + 20));
  v51(v85, 0);
  uint64_t result = sub_100918D58(v49, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v53 = *(void *)((char *)v79 + (void)v78);
  if (v53)
  {
    (*(void (**)(uint64_t))(*(void *)v53 + 760))(result);
    sub_100919454(v43 + *(int *)(v44 + 20), v49, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58(v43, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v54 = v49 + *(int *)(v48 + 20);
    uint64_t v55 = v44;
    uint64_t v56 = v71;
    uint64_t v57 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v68, v54, v46);
    char v79 = type metadata accessor for CRLWPStorageCRDTData;
    uint64_t v58 = sub_100918D58(v49, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v59 = v77;
    (*(void (**)(uint64_t))(*(void *)v77 + 760))(v58);
    uint64_t v60 = v43 + *(int *)(v55 + 20);
    uint64_t v61 = v70;
    sub_100919454(v60, v70, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58(v43, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 40))(v61 + *(int *)(v80 + 20), v57, v46);
    uint64_t v62 = (void (*)(unsigned char *, void))v66(v85);
    sub_10091A240(v61, v63 + *(int *)(v81 + 20));
    v62(v85, 0);
    sub_100918D58(v61, v79);
    *(void *)&v72[v69] = v59;
    swift_retain();

    swift_release();
    id v64 = (objc_class *)type metadata accessor for CRLWPStorage();
    v84.receiver = v26;
    v84.super_class = v64;
    id v65 = [super init];
    swift_release();

    (*(void (**)(char *, uint64_t))(v82 + 8))(v67, v83);
    return (uint64_t)v65;
  }
LABEL_11:
  __break(1u);
  return result;
}

id sub_10090059C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v26 = a2;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  id result = (id)__chkstk_darwin(v16 - 8, v17);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (v21)
  {
    (*(void (**)(id))(*(void *)v21 + 760))(result);
    sub_100919454((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
    id v22 = v4;
    sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v20, v7);
    sub_100918D58((uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v23 = CRAttributedString.count.getter();
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if (v23 >= (a1 & ~(a1 >> 63))) {
      uint64_t v24 = a1 & ~(a1 >> 63);
    }
    else {
      uint64_t v24 = v23;
    }
    if (v23 >= (v26 & ~(v26 >> 63))) {
      uint64_t v23 = v26 & ~(v26 >> 63);
    }
    if (v23 >= v24)
    {
      id result = v22;
      *a3 = result;
      a3[1] = v24;
      a3[2] = v23;
      a3[3] = result;
      a3[4] = v24;
      a3[5] = v23;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100900858()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v15)
  {
    (*(void (**)(__n128))(*(void *)v15 + 760))(v12);
    sub_100919454((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v14, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v14, v1);
    sub_100918D58((uint64_t)v14, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v16 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    [v16 length];
  }
  else
  {
    __break(1u);
  }
}

void sub_100900AB8()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v15)
  {
    (*(void (**)(__n128))(*(void *)v15 + 760))(v12);
    sub_100919454((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v14, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v14, v1);
    sub_100918D58((uint64_t)v14, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v16 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    id v17 = [v16 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    __break(1u);
  }
}

id sub_100900D38(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

void sub_100900DA8()
{
  uint64_t v34 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v1 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v2);
  id v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v33, v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v35 = v0;
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v13)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v14 = *(void (**)(uint64_t))(*(void *)v13 + 408);
  uint64_t v15 = swift_retain();
  v14(v15);
  swift_release();
  uint64_t v16 = sub_10088BE6C();
  uint64_t v18 = v17;
  uint64_t v19 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v21 = *((void *)v19 + 2);
  unint64_t v20 = *((void *)v19 + 3);
  if (v21 >= v20 >> 1) {
    uint64_t v19 = sub_100F61B70((double *)(v20 > 1), v21 + 1, 1, v19);
  }
  *((void *)v19 + 2) = v21 + 1;
  id v22 = &v19[2 * v21];
  *((void *)v22 + 4) = v16;
  *((void *)v22 + 5) = v18;
  uint64_t v23 = *(void *)(v35 + v12);
  if (!v23) {
    goto LABEL_12;
  }
  (*(void (**)(void))(*(void *)v23 + 760))();
  sub_100919454((uint64_t)&v7[*(int *)(v33 + 20)], (uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v24 = v34;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v11, v34);
  sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v25 = (void *)CRAttributedString.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v24);
  id v26 = [v25 string];

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  if (String.count.getter() < 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v31 = *((void *)v19 + 2);
    unint64_t v30 = *((void *)v19 + 3);
    if (v31 >= v30 >> 1) {
      uint64_t v19 = sub_100F61B70((double *)(v30 > 1), v31 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v31 + 1;
    unint64_t v32 = &v19[2 * v31];
    *((void *)v32 + 4) = v27;
    *((void *)v32 + 5) = v29;
  }
  uint64_t v36 = v19;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
}

void sub_1009011A8(uint64_t a1, unint64_t a2)
{
  uint64_t v26 = a1;
  unint64_t v27 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPStorageCRDTData(0);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v30 = v2;
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  (*(void (**)(uint64_t))(*(void *)v18 + 760))(v14);
  uint64_t v29 = v8;
  sub_100919454((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v19(v7, v16, v3);
  sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  unint64_t v20 = (void *)CRAttributedString.attributedString.getter();
  unint64_t v21 = *(void (**)(char *, uint64_t))(v4 + 8);
  v21(v7, v3);
  id v28 = [v20 length];

  uint64_t v22 = *(void *)(v30 + v17);
  if (v22)
  {
    (*(void (**)(void))(*(void *)v22 + 760))();
    sub_100919454((uint64_t)&v11[*(int *)(v29 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    v19(v7, v16, v3);
    sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v23 = (void *)CRAttributedString.attributedString.getter();
    v21(v7, v3);
    id v24 = [v23 length];

    if ((uint64_t)v24 >= (uint64_t)v28)
    {
      sub_100901520((uint64_t)v28, (int64_t)v24, v26, v27, 1);
      return;
    }
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
}

void sub_100901520(uint64_t a1, int64_t a2, uint64_t a3, unint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v160 = a5;
  uint64_t v164 = a3;
  uint64_t v158 = type metadata accessor for CharacterSet();
  unint64_t v156 = *(void (***)(uint64_t, uint64_t, char *))(v158 - 8);
  __chkstk_darwin(v158, v10);
  id v155 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016801A8);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (void (**)(uint64_t, uint64_t, char *))((char *)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  __chkstk_darwin(v16 - 8, v17);
  unint64_t v178 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v159 = *(void *)(v179 - 8);
  uint64_t v20 = __chkstk_darwin(v179, v19);
  uint64_t v162 = (uint64_t)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v163 = (uint64_t)&v147 - v24;
  __chkstk_darwin(v23, v25);
  unint64_t v27 = (char *)&v147 - v26;
  uint64_t v180 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v28 = *(void *)(v180 - 8);
  __chkstk_darwin(v180, v29);
  int v161 = (char *)&v147 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v175, v31);
  uint64_t v172 = (char *)&v147 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = type metadata accessor for CRLWPStorageCRDTData(0);
  uint64_t v34 = __chkstk_darwin(v153, v33);
  unint64_t v181 = (char *)&v147 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v36);
  uint64_t v165 = (uint64_t)&v147 - v37;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v39 = (void *)Strong;
    swift_getObjectType();
    uint64_t v40 = swift_conformsToProtocol2();
    if (v40) {
      uint64_t v41 = v40;
    }
    else {
      uint64_t v41 = 0;
    }
    if (v40) {
      uint64_t v42 = v39;
    }
    else {
      uint64_t v42 = 0;
    }
    if (v42)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v44 = sub_100FC1058(ObjectType, v41);

      if ((v44 & 1) == 0) {
        return;
      }
    }
    else
    {
    }
  }
  uint64_t v169 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v45 = *(void *)&v6[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v45)
  {
    __break(1u);
    goto LABEL_117;
  }
  uint64_t v46 = (uint64_t)v172;
  (*(void (**)(void))(*(void *)v45 + 760))();
  uint64_t v47 = v165;
  sub_100919454(v46 + *(int *)(v175 + 20), v165, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58(v46, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v49 = v161;
  uint64_t v50 = v180;
  uint64_t v151 = v28 + 16;
  uint64_t v150 = v48;
  v48(v161, v47, v180);
  sub_100918D58(v47, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v51 = CRAttributedString.count.getter();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v152 = v28 + 8;
  long long v149 = v52;
  v52(v49, v50);
  if (v51 >= (a1 & ~(a1 >> 63))) {
    uint64_t v53 = a1 & ~(a1 >> 63);
  }
  else {
    uint64_t v53 = v51;
  }
  uint64_t v54 = a2 & ~(a2 >> 63);
  if (v51 < v54) {
    uint64_t v54 = v51;
  }
  char v171 = (char *)v54;
  if (v54 < v53) {
    goto LABEL_109;
  }
  uint64_t v55 = v53;
  swift_bridgeObjectRetain();
  uint64_t v56 = String.UTF16View.count.getter();
  uint64_t v173 = v55;
  a2 = v56;
  swift_bridgeObjectRelease();
  if (__OFADD__(v173, a2))
  {
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  if (v173 + a2 < v173)
  {
LABEL_111:
    __break(1u);
LABEL_112:
    swift_once();
LABEL_87:
    uint64_t v109 = sub_100556B74((uint64_t)v27, (uint64_t)qword_10171AE70);
    v15[2](a1, v109, v27);
    swift_bridgeObjectRetain();
    unint64_t v110 = sub_100999908(v51, a2);
    swift_bridgeObjectRelease();
    if ((v110 & 0x100000000) == 0)
    {
      char v111 = CharacterSet.contains(_:)();
      ((void (*)(uint64_t, char *))v15[1])(a1, v27);
      swift_bridgeObjectRelease();
      if (v111)
      {
        id v112 = objc_allocWithZone((Class)NSDataDetector);
        aBlocunint64_t k = 0;
        id v113 = [v112 initWithTypes:32 error:&aBlock];
        unint64_t v114 = aBlock;
        if (v113)
        {
          unint64_t v148 = a4;
          uint64_t v115 = *(void *)&v6[v169];
          if (!v115) {
            goto LABEL_121;
          }
          unsigned __int8 v116 = v113;
          uint64_t v117 = (uint64_t)v172;
          (*(void (**)(void))(*(void *)v115 + 760))();
          uint64_t v118 = v165;
          sub_100919454(v117 + *(int *)(v175 + 20), v165, type metadata accessor for CRLWPStorageCRDTData);
          uint64_t v119 = v114;
          sub_100918D58(v117, type metadata accessor for CRLWPShapeItemCRDTData);
          uint64_t v120 = v161;
          uint64_t v121 = v180;
          v150(v161, v118, v180);
          sub_100918D58(v118, type metadata accessor for CRLWPStorageCRDTData);
          uint64_t v122 = (void *)CRAttributedString.attributedString.getter();
          v149(v120, v121);
          id v123 = [v122 string];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v124 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          unint64_t v181 = (char *)[v6 range];
          uint64_t v126 = v125;
          uint64_t v127 = swift_allocObject();
          *(void *)(v127 + 16) = v6;
          uint64_t v128 = swift_allocObject();
          uint64_t v129 = sub_10091A48C;
          *(void *)(v128 + 16) = sub_10091A48C;
          *(void *)(v128 + 24) = v127;
          uint64_t v187 = sub_10091A4A4;
          uint64_t v188 = v128;
          aBlocunint64_t k = _NSConcreteStackBlock;
          uint64_t v184 = *(void *)"";
          char v185 = sub_100F89570;
          long long v186 = &unk_10151A8B8;
          unint64_t v130 = _Block_copy(&aBlock);
          unint64_t v131 = v6;
          swift_retain();
          swift_release();
          [v116 enumerateMatchesInString:v124 options:0 range:v181 usingBlock:v126];

          _Block_release(v130);
          LOBYTE(v124) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v124 & 1) == 0) {
            goto LABEL_95;
          }
          goto LABEL_114;
        }
        char v132 = aBlock;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
      }
LABEL_94:
      uint64_t v129 = 0;
LABEL_95:
      uint64_t v133 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange;
      uint64_t v134 = *(char **)&v6[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange];
      if (v134 && *(void *)&v134[OBJC_IVAR____TtC8Freeform12CRLTextRange_range] >= v157)
      {
        uint64_t v135 = v134;
        uint64_t v136 = (char *)String.count.getter();
        unint64_t v137 = sub_1006CD32C(v136);
        int64_t v138 = *(void **)&v6[v133];
        *(void *)&v6[v133] = v137;
      }
      uint64_t v139 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange;
      unint64_t v140 = *(char **)&v6[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange];
      if (v140)
      {
        if (*(void *)&v140[OBJC_IVAR____TtC8Freeform12CRLTextRange_range] >= v157)
        {
          uint64_t v141 = v140;
          uint64_t v142 = (char *)String.count.getter();
          int64_t v143 = sub_1006CD32C(v142);
          unint64_t v144 = *(void **)&v6[v139];
          *(void *)&v6[v139] = v143;
        }
      }
      int64_t v145 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
      uint64_t v146 = v179;
      v145(v162, v179);
      v145(v163, v146);
      sub_1005174AC((uint64_t)v129);
      return;
    }
LABEL_119:
    __break(1u);
    goto LABEL_120;
  }
  uint64_t v154 = v173 + a2;
  uint64_t v157 = a1;
  sub_10090059C(v173, (uint64_t)v171, v182);
  uint64_t v57 = (char *)v182[4];
  uint64_t v58 = (char *)v182[5];
  uint64_t v59 = (char *)v182[3];

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = (void *)sub_101041474(KeyPath, v59, v57, v58);
  char v63 = v62;
  swift_release();

  id v64 = v61;
  char v65 = v160;
  if (v63)
  {
    if (!v61[2])
    {
      __break(1u);
LABEL_114:
      __break(1u);
      goto LABEL_115;
    }
    id v64 = (void *)v61[4];
  }
  sub_10083E3A0(v61, v63 & 1);
  a2 = v173;
  if (!v64) {
    goto LABEL_68;
  }
  if ((v6[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] & 1) == 0) {
    sub_1008FDB6C();
  }
  uint64_t v66 = *(void *)&v6[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hyperlinkRuns];
  uint64_t v170 = *(void *)(v66 + 16);
  if (!v170) {
    goto LABEL_68;
  }
  unint64_t v148 = a4;
  uint64_t v166 = v6;
  uint64_t v168 = v66 + 32;
  unint64_t v177 = (void (**)(char *, char *, uint64_t))(v159 + 16);
  a4 = v159 + 56;
  id v67 = (void (**)(char *, char *))(v159 + 8);
  uint64_t v147 = v66;
  swift_bridgeObjectRetain();
  uint64_t v68 = 0;
  uint64_t v69 = (uint64_t)v171;
  while (2)
  {
    uint64_t v73 = (uint64_t *)(v168 + 24 * v68);
    uint64_t v74 = *v73;
    uint64_t v51 = v73[1];
    uint64_t v75 = (void *)v73[2];
    if (a2 < *v73 || a2 >= v51)
    {
      if (a2 == v69) {
        goto LABEL_31;
      }
      BOOL v77 = v74 < v69 && a2 < v51;
      if (!v77 || v74 == v51) {
        goto LABEL_31;
      }
    }
    uint64_t v174 = v68;
    uint64_t v176 = *(void *)&v166[v169];
    if (!v176) {
LABEL_115:
    }
      __break(1u);
    uint64_t v79 = swift_getKeyPath();
    a1 = v51 - v74;
    if (__OFSUB__(v51, v74))
    {
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    a2 = v79;
    uint64_t v6 = v172;
    (*(void (**)(void))(*(void *)v176 + 760))();
    sub_100919454((uint64_t)&v6[*(int *)(v175 + 20)], (uint64_t)v181, type metadata accessor for CRLWPStorageCRDTData);
    id v80 = v75;
    swift_retain();
    sub_100918D58((uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData);
    if (a1 < 1)
    {
      swift_release();
      goto LABEL_30;
    }
    id v167 = v80;
    while (1)
    {
      aBlocunint64_t k = 0;
      uint64_t v184 = 0;
      uint64_t v81 = CRAttributedString.attributes(at:effectiveRange:)();
      __chkstk_darwin(v81, v82);
      *(&v147 - 4) = (uint64_t)&type metadata for CRLWPHyperlinkAttribute;
      *(&v147 - 3) = sub_10091989C();
      *(&v147 - 2) = a2;
      swift_getKeyPath();
      uint64_t v83 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
      uint64_t v6 = v178;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v178, 1, 1, v83);
      sub_100913630();
      swift_retain();
      CRAttributedString.Attributes.subscript.setter();
      uint64_t v51 = (uint64_t)aBlock;
      objc_super v84 = (char *)aBlock + v184;
      if (__OFADD__(aBlock, v184))
      {
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
        goto LABEL_108;
      }
      uint64_t v85 = v74 + a1;
      if (__OFADD__(v74, a1)) {
        goto LABEL_103;
      }
      if ((uint64_t)v84 >= v85) {
        uint64_t v86 = (char *)(v74 + a1);
      }
      else {
        uint64_t v86 = (char *)aBlock + v184;
      }
      if ((uint64_t)aBlock >= v74 && (uint64_t)aBlock < v85)
      {
        uint64_t v87 = (char *)(v86 - (char *)aBlock);
        if (__OFSUB__(v86, aBlock)) {
          goto LABEL_106;
        }
        goto LABEL_61;
      }
      if (v74 < (uint64_t)aBlock || v74 >= (uint64_t)v84) {
        break;
      }
      uint64_t v87 = &v86[-v74];
      if (__OFSUB__(v86, v74)) {
        goto LABEL_107;
      }
LABEL_61:
      uint64_t v6 = (char *)v179;
      (*v177)((char *)v15, v27, v179);
      (*(void (**)(void (**)(uint64_t, uint64_t, char *), void, uint64_t, char *))a4)(v15, 0, 1, v6);
      uint64_t v51 = (uint64_t)v181;
      CRAttributedString.setAttributes(_:range:)();
      sub_100522F00((uint64_t)v15, &qword_1016801A8);
      (*v67)(v27, v6);
      BOOL v88 = __OFADD__(v74, v87);
      v74 += (uint64_t)v87;
      if (v88) {
        goto LABEL_104;
      }
      BOOL v88 = __OFSUB__(a1, v87);
      a1 -= (uint64_t)v87;
      if (v88) {
        goto LABEL_105;
      }
      if (a1 <= 0) {
        goto LABEL_66;
      }
    }
    (*v67)(v27, (char *)v179);
LABEL_66:
    swift_release();
    id v80 = v167;
LABEL_30:
    uint64_t v70 = (void (*)(void ***, void))(*(uint64_t (**)(void ***))(*(void *)v176 + 776))(&aBlock);
    uint64_t v72 = (uint64_t)v181;
    sub_10091A240((uint64_t)v181, v71 + *(int *)(v175 + 20));
    v70(&aBlock, 0);
    sub_100918D58(v72, type metadata accessor for CRLWPStorageCRDTData);

    swift_release();
    a2 = v173;
    uint64_t v69 = (uint64_t)v171;
    uint64_t v68 = v174;
LABEL_31:
    if (++v68 != v170) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v166;
  a4 = v148;
  char v65 = v160;
LABEL_68:
  char v89 = v171;
  if (!a2 && v89 == [v6 characterCount] && !v154) {
    sub_1009047F4();
  }
  uint64_t v90 = sub_100904750((char *)a2, v89);
  if ((v65 & 1) == 0)
  {
    sub_1005D3BF8();
    CRAttributedString.Attributes.init()();
    uint64_t v98 = CRAttributedString.Attributes.init()();
    goto LABEL_78;
  }
  uint64_t v91 = a2;
  uint64_t v92 = (uint64_t)v90;
  sub_100904DCC((uint64_t)v90);
  if ((sub_1009044F8(v91, (uint64_t)v89) & 1) == 0)
  {
    uint64_t v98 = (uint64_t)sub_1009054D8(v92);
LABEL_78:
    uint64_t v99 = *(void *)&v6[v169];
    if (v99)
    {
      uint64_t v100 = (uint64_t)v172;
      (*(void (**)(uint64_t))(*(void *)v99 + 760))(v98);
      uint64_t v101 = v175;
      uint64_t v102 = v165;
      sub_100919454(v100 + *(int *)(v175 + 20), v165, type metadata accessor for CRLWPStorageCRDTData);
      swift_retain();
      sub_100918D58(v100, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v103 = v164;
      CRAttributedString.replaceSubrange(_:with:)();
      uint64_t v104 = (void (*)(void ***, void))(*(uint64_t (**)(void ***))(*(void *)v99 + 776))(&aBlock);
      sub_10091A240(v102, v105 + *(int *)(v101 + 20));
      v104(&aBlock, 0);
      sub_100918D58(v102, type metadata accessor for CRLWPStorageCRDTData);
      swift_release();
      v6[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] = 0;
      v6[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges] = 0;
      if (v65)
      {
        uint64_t v106 = HIBYTE(a4) & 0xF;
        if ((a4 & 0x2000000000000000) == 0) {
          uint64_t v106 = v103 & 0xFFFFFFFFFFFFLL;
        }
        if (v106) {
          sub_100905A34(v163, v162, v173, v154);
        }
      }
      uint64_t v107 = String.count.getter();
      unint64_t v27 = (char *)v158;
      if (v107 < 1) {
        goto LABEL_94;
      }
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1009999E8(v103, a4);
      a2 = v108;
      swift_bridgeObjectRelease();
      if (a2)
      {
        uint64_t v15 = v156;
        a1 = (uint64_t)v155;
        if (qword_10166F450 == -1) {
          goto LABEL_87;
        }
        goto LABEL_112;
      }
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  uint64_t v93 = *(void *)&v6[v169];
  if (v93)
  {
    uint64_t v94 = (uint64_t)v172;
    (*(void (**)(void))(*(void *)v93 + 760))();
    uint64_t v95 = v165;
    sub_100919454(v94 + *(int *)(v175 + 20), v165, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58(v94, type metadata accessor for CRLWPShapeItemCRDTData);
    long long v96 = v161;
    uint64_t v97 = v180;
    v150(v161, v95 + *(int *)(v153 + 20), v180);
    sub_100918D58(v95, type metadata accessor for CRLWPStorageCRDTData);
    CRAttributedString.attributes(at:effectiveRange:)();
    uint64_t v98 = ((uint64_t (*)(char *, uint64_t))v149)(v96, v97);
    goto LABEL_78;
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
}

void sub_100902938(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1005057FC(&qword_101672E90);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  uint64_t v22 = (char *)&v42 - v21;
  if (!a1) {
    return;
  }
  id v23 = a1;
  id v24 = [v23 URL];
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_7;
  }
  uint64_t v25 = v24;
  uint64_t v47 = v22;
  uint64_t v45 = a4;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v26(v13, v19, v14);
  uint64_t v46 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  v46(v13, 0, 1, v14);
  unint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v27(v13, 1, v14) == 1)
  {
LABEL_7:

    sub_100522F00((uint64_t)v13, &qword_101672E90);
    return;
  }
  char v44 = v27;
  uint64_t v28 = v47;
  v26(v47, v13, v14);
  id v29 = [v23 range];
  uint64_t v31 = v30;
  if (v29 == (id)NSNotFound.getter())
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v28, v14);

    return;
  }
  uint64_t v32 = (uint64_t)v31 + (void)v29;
  if (__OFADD__(v29, v31))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v47, v14);
  v46(v10, 0, 1, v14);
  uint64_t v46 = v31;
  if (__OFSUB__(v32, v29))
  {
LABEL_16:
    __break(1u);
    return;
  }
  id v33 = [objc_allocWithZone((Class)NSUUID) init];
  id v34 = [v33 UUIDString];

  uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (v44(v10, 1, v14) == 1)
  {
    uint64_t v36 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v35);
    uint64_t v36 = v37;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
  }
  id v38 = objc_allocWithZone((Class)CRLWPHyperlinkField);
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v40 = [v38 initWithURL:v36 range:v29 displayText:v46 uuidString:0];

  sub_10090059C((uint64_t)v29, v32, &v50);
  uint64_t v41 = v50;
  long long v53 = v51;
  uint64_t v54 = v52;
  long long v48 = v51;
  uint64_t v49 = v52;
  sub_100E93950((uint64_t)v40, 0, KeyPath);

  swift_release();
  sub_1006436E8((id *)&v53);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v47, v14);
}

void sub_100902DAC(uint64_t a1, uint64_t a2, void (**a3)(uint64_t, uint64_t), int a4)
{
  uint64_t v5 = v4;
  int v135 = a4;
  int64_t v138 = a3;
  uint64_t v131 = a1;
  uint64_t v132 = a2;
  uint64_t v6 = sub_1005057FC(&qword_1016801A8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v125 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v122 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v118 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v117 = (char *)&v110 - v14;
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v110 - v17;
  __chkstk_darwin(v19, v20);
  uint64_t v133 = (uint64_t)&v110 - v21;
  uint64_t v22 = sub_1005057FC(&qword_1016879D0);
  uint64_t v127 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v23);
  NSString v124 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v128 = (char *)&v110 - v27;
  uint64_t v28 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v134 = (char *)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1005057FC(&qword_1016879E0);
  uint64_t v110 = *(void *)(v137 - 8);
  __chkstk_darwin(v137, v31);
  uint64_t v136 = (char *)&v110 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = (void (**)(void, void))sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v33 = (uint64_t)*(v139 - 1);
  __chkstk_darwin(v139, v34);
  unint64_t v130 = (char *)&v110 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v113, v36);
  id v112 = (char *)&v110 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v38 - 8, v39);
  uint64_t v41 = (char *)&v110 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v43 = (void *)Strong;
    swift_getObjectType();
    uint64_t v44 = swift_conformsToProtocol2();
    if (v44) {
      uint64_t v45 = v44;
    }
    else {
      uint64_t v45 = 0;
    }
    if (v44) {
      uint64_t v46 = v43;
    }
    else {
      uint64_t v46 = 0;
    }
    if (v46)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v48 = sub_100FC1058(ObjectType, v45);

      if ((v48 & 1) == 0) {
        return;
      }
    }
    else
    {
    }
  }
  uint64_t v111 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v49 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v49) {
    goto LABEL_54;
  }
  uint64_t v50 = (uint64_t)v112;
  (*(void (**)(void))(*(void *)v49 + 760))();
  sub_100919454(v50 + *(int *)(v113 + 20), (uint64_t)v41, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58(v50, type metadata accessor for CRLWPShapeItemCRDTData);
  long long v51 = v130;
  uint64_t v52 = v139;
  (*(void (**)(char *, char *, void (**)(void, void)))(v33 + 16))(v130, v41, v139);
  sub_100918D58((uint64_t)v41, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v53 = CRAttributedString.count.getter();
  (*(void (**)(char *, void))(v33 + 8))(v51, v52);
  if (v53 >= (v131 & ~(v131 >> 63))) {
    uint64_t v54 = v131 & ~(v131 >> 63);
  }
  else {
    uint64_t v54 = v53;
  }
  if (v53 >= (v132 & ~(v132 >> 63))) {
    int64_t v55 = v132 & ~(v132 >> 63);
  }
  else {
    int64_t v55 = v53;
  }
  if (v55 < v54) {
    goto LABEL_52;
  }
  uint64_t v56 = (void *)CRAttributedString.attributedString.getter();
  id v57 = [v56 string];

  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v60 = v59;

  uint64_t v132 = v54;
  sub_100901520(v54, v55, v58, v60, v135 & 1);
  uint64_t v61 = v128;
  swift_bridgeObjectRelease();
  CRAttributedString.runs.getter();
  uint64_t v62 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride;
  char v63 = v134;
  CRAttributedString.Runs.next()();
  uint64_t v64 = v127;
  unint64_t v130 = *(char **)(v127 + 48);
  uint64_t v131 = v127 + 48;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v130)(v63, 1, v22) == 1)
  {
LABEL_21:
    (*(void (**)(char *, uint64_t))(v110 + 8))(v136, v137);
    return;
  }
  uint64_t v129 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  uint64_t v123 = v5 + v62;
  unint64_t v114 = (void (**)(char *, char *, uint64_t))(v122 + 16);
  uint64_t v115 = v18;
  uint64_t v126 = (void (**)(char *, char *, uint64_t))(v122 + 32);
  uint64_t v127 = v64 + 32;
  uint64_t v120 = (void (**)(char *, char *, uint64_t))(v64 + 16);
  uint64_t v121 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56);
  uint64_t v119 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
  int64_t v138 = (void (**)(uint64_t, uint64_t))(v122 + 8);
  uint64_t v139 = (void (**)(void, void))(v64 + 8);
  uint64_t v122 = v5;
  uint64_t v116 = v9;
  v129(v61, v63, v22);
  while (1)
  {
    uint64_t v66 = CRAttributedString.Runs.Run.range.getter();
    uint64_t v67 = v132 + v66;
    if (__OFADD__(v132, v66)) {
      break;
    }
    if (v135)
    {
      CRAttributedString.Runs.Run.attributes.getter();
      uint64_t v68 = CRAttributedString.Runs.Run.range.getter();
      uint64_t v70 = v69 - v68;
      if (__OFSUB__(v69, v68)) {
        goto LABEL_47;
      }
      uint64_t v71 = v67 + v70;
      if (__OFADD__(v67, v70)) {
        goto LABEL_49;
      }
      if (v71 < v67) {
        goto LABEL_51;
      }
      uint64_t v72 = v133;
      sub_10090614C(v133, v67, v71);
      (*v138)(v72, v9);
      (*v139)(v61, v22);
      goto LABEL_24;
    }
    sub_10051B3EC(v123, (uint64_t)v170, &qword_10168D670);
    sub_10051B3EC((uint64_t)v170, (uint64_t)v171, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)v171) != 1)
    {
      sub_10051B3EC((uint64_t)v170, (uint64_t)&v144, &qword_10168D670);
      uint64_t v77 = v169;
      uint64_t v78 = v167;
      char v79 = v168;
      uint64_t v80 = v165;
      char v81 = v166;
      uint64_t v82 = v163;
      char v83 = v164;
      uint64_t v84 = v161;
      char v85 = v162;
      long long v86 = v154;
      long long v87 = v155;
      long long v88 = v156;
      long long v89 = v157;
      long long v90 = v158;
      long long v91 = v159;
      long long v92 = v160;
      uint64_t v93 = v152;
      char v94 = v153;
      uint64_t v95 = v150;
      char v96 = v151;
      char v97 = v149;
      char v98 = v148;
      int v99 = v146;
      char v100 = v147;
      long long v101 = v144;
      char v102 = v145;
LABEL_38:
      long long v144 = v101;
      char v145 = v102;
      int v146 = v99;
      char v147 = v100;
      char v148 = v98;
      char v149 = v97;
      uint64_t v150 = v95;
      char v151 = v96;
      uint64_t v152 = v93;
      char v153 = v94;
      long long v154 = v86;
      long long v155 = v87;
      long long v156 = v88;
      long long v157 = v89;
      long long v158 = v90;
      long long v159 = v91;
      long long v160 = v92;
      uint64_t v161 = v84;
      char v162 = v85;
      uint64_t v163 = v82;
      char v164 = v83;
      uint64_t v165 = v80;
      char v166 = v81;
      uint64_t v167 = v78;
      char v168 = v79;
      uint64_t v169 = v77;
      sub_1008EF10C(v170, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
      uint64_t v103 = v117;
      CRAttributedString.Runs.Run.attributes.getter();
      uint64_t v104 = v118;
      uint64_t v9 = v116;
      (*v114)(v118, v103, v116);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_100843254();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      LOBYTE(v142) = v142 & 1;
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10091307C();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      long long v140 = v142;
      char v141 = v143;
      uint64_t v61 = v128;
      CRAttributedString.Attributes.subscript.setter();
      uint64_t v75 = (uint64_t)v125;
      (*v126)(v125, v104, v9);
      sub_10089B210((uint64_t)&v144);
      (*v138)((uint64_t)v103, v9);
      (*v121)(v75, 0, 1, v9);
      uint64_t v18 = v115;
      uint64_t v76 = v124;
      goto LABEL_39;
    }
    uint64_t v73 = *(void *)(v5 + v111);
    if (!v73) {
      goto LABEL_53;
    }
    uint64_t v74 = (uint64_t)v112;
    (*(void (**)(void))(*(void *)v73 + 760))();
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v140, (uint64_t)&v142, &qword_10168D670);
    sub_100918D58(v74, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)&v142, (uint64_t)&v144, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v144) != 1)
    {
      uint64_t v77 = v169;
      uint64_t v78 = v167;
      char v79 = v168;
      uint64_t v80 = v165;
      char v81 = v166;
      uint64_t v82 = v163;
      char v83 = v164;
      uint64_t v84 = v161;
      char v85 = v162;
      long long v86 = v154;
      long long v87 = v155;
      long long v88 = v156;
      long long v89 = v157;
      long long v90 = v158;
      long long v91 = v159;
      long long v92 = v160;
      uint64_t v93 = v152;
      char v94 = v153;
      uint64_t v95 = v150;
      char v96 = v151;
      char v97 = v149;
      char v98 = v148;
      int v99 = v146;
      char v100 = v147;
      long long v101 = v144;
      char v102 = v145;
      goto LABEL_38;
    }
    uint64_t v75 = (uint64_t)v125;
    (*v121)((uint64_t)v125, 1, 1, v9);
    uint64_t v76 = v124;
    uint64_t v61 = v128;
LABEL_39:
    (*v120)(v76, v61, v22);
    if ((*v119)(v75, 1, v9) == 1)
    {
      CRAttributedString.Runs.Run.attributes.getter();
      uint64_t v105 = (void (*)(char *, uint64_t))*v139;
      (*v139)(v76, v22);
      sub_100522F00(v75, &qword_1016801A8);
    }
    else
    {
      uint64_t v105 = (void (*)(char *, uint64_t))*v139;
      (*v139)(v76, v22);
      (*v126)(v18, (char *)v75, v9);
    }
    uint64_t v5 = v122;
    uint64_t v106 = CRAttributedString.Runs.Run.range.getter();
    uint64_t v108 = v107 - v106;
    if (__OFSUB__(v107, v106)) {
      goto LABEL_48;
    }
    uint64_t v109 = v67 + v108;
    if (__OFADD__(v67, v108)) {
      goto LABEL_50;
    }
    if (v109 < v67)
    {
      __break(1u);
      break;
    }
    sub_10090614C((uint64_t)v18, v67, v109);
    (*v138)((uint64_t)v18, v9);
    v105(v61, v22);
LABEL_24:
    char v65 = v134;
    CRAttributedString.Runs.next()();
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v130)(v65, 1, v22) == 1) {
      goto LABEL_21;
    }
    v129(v61, v65, v22);
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
}

void sub_100903AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v104 = a3;
  uint64_t v100 = sub_1005057FC(&qword_101687A90);
  __chkstk_darwin(v100, v6);
  uint64_t v8 = (uint64_t *)((char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v101 = sub_1005057FC((uint64_t *)&unk_101683740);
  __chkstk_darwin(v101, v9);
  uint64_t v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016879D0);
  uint64_t v91 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1005057FC(&qword_1016879E0);
  uint64_t v92 = *(void *)(v103 - 8);
  __chkstk_darwin(v103, v20);
  uint64_t v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  char v102 = (char *)&v86 - v25;
  char v97 = (void *)sub_1005057FC((uint64_t *)&unk_10167BC20);
  char v98 = (char *)*(v97 - 1);
  __chkstk_darwin(v97, v26);
  char v96 = (char *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v94, v28);
  uint64_t v95 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v30 - 8, v31);
  uint64_t v93 = (uint64_t)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = v3;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v105 = v11;
  if (!Strong)
  {
LABEL_12:
    uint64_t v42 = v98;
    long long v89 = v22;
    sub_10090664C(a1, a2);
    uint64_t v99 = v44;
    uint64_t v90 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
    uint64_t v45 = *(void *)(v104 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
    if (!v45)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v46 = v43;
    uint64_t v47 = (uint64_t)v95;
    (*(void (**)(void))(*(void *)v45 + 760))();
    uint64_t v48 = v93;
    sub_100919454(v47 + *(int *)(v94 + 20), v93, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58(v47, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v49 = v96;
    uint64_t v50 = v97;
    long long v88 = (void (*)(char *, uint64_t, void *))*((void *)v42 + 2);
    v88(v96, v48, v97);
    sub_100918D58(v48, type metadata accessor for CRLWPStorageCRDTData);
    long long v51 = (void *)CRAttributedString.attributedString.getter();
    uint64_t v52 = (void (*)(char *, void *))*((void *)v42 + 1);
    char v98 = v42 + 8;
    long long v87 = v52;
    v52(v49, v50);
    id v53 = [v51 string];

    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v56 = v55;

    int64_t v57 = v46 + v99;
    if (!__OFADD__(v46, v99))
    {
      if (v57 < v46)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v99 = v46;
      sub_100901520(v46, v57, v54, v56, 1);
      uint64_t v58 = swift_bridgeObjectRelease();
      uint64_t v59 = *(void *)(v104 + v90);
      if (!v59)
      {
LABEL_37:
        __break(1u);
        return;
      }
      uint64_t v60 = (uint64_t)v95;
      (*(void (**)(uint64_t))(*(void *)v59 + 760))(v58);
      uint64_t v61 = v93;
      sub_100919454(v60 + *(int *)(v94 + 20), v93, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58(v60, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v62 = v96;
      char v63 = v97;
      v88(v96, v61, v97);
      sub_100918D58(v61, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v64 = v89;
      CRAttributedString.runs.getter();
      v87(v62, v63);
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v102, v64, v103);
      CRAttributedString.Runs.next()();
      char v98 = *(char **)(v91 + 48);
      int v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v98)(v19, 1, v12);
      uint64_t v66 = v105;
      if (v65 == 1)
      {
LABEL_26:
        (*(void (**)(char *, uint64_t))(v92 + 8))(v102, v103);
        return;
      }
      char v97 = *(void **)(v91 + 32);
      uint64_t v67 = (void (**)(char *, uint64_t))(v91 + 8);
      while (1)
      {
        ((void (*)(char *, char *, uint64_t))v97)(v15, v19, v12);
        uint64_t v68 = CRAttributedString.Runs.Run.range.getter();
        sub_10090059C(v68, v69, v107);
        sub_1008F9810(v107, v66);
        uint64_t v70 = CRAttributedString.Runs.Run.range.getter();
        sub_10090059C(v70, v71, v108);
        sub_1008FA304((uint64_t)v108, v8);
        uint64_t v72 = CRAttributedString.Runs.Run.range.getter();
        uint64_t v73 = v99 + v72;
        if (__OFADD__(v99, v72)) {
          break;
        }
        uint64_t v74 = (uint64_t)v8;
        uint64_t v75 = *(int *)(v101 + 36);
        uint64_t v76 = CRAttributedString.Runs.Run.range.getter();
        uint64_t v78 = v77 - v76;
        if (__OFSUB__(v77, v76)) {
          goto LABEL_28;
        }
        uint64_t v79 = v73 + v78;
        if (__OFADD__(v73, v78)) {
          goto LABEL_29;
        }
        if (v79 < v73) {
          goto LABEL_30;
        }
        sub_10090614C((uint64_t)v105 + v75, v73, v79);
        uint64_t v80 = *(int *)(v100 + 36);
        uint64_t v81 = CRAttributedString.Runs.Run.range.getter();
        uint64_t v83 = v82 - v81;
        if (__OFSUB__(v82, v81)) {
          goto LABEL_31;
        }
        uint64_t v84 = v73 + v83;
        if (__OFADD__(v73, v83)) {
          goto LABEL_32;
        }
        if (v84 < v73) {
          goto LABEL_33;
        }
        uint64_t v85 = v74 + v80;
        uint64_t v8 = (void *)v74;
        sub_10090614C(v85, v73, v84);
        sub_100522F00(v74, &qword_101687A90);
        uint64_t v66 = v105;
        sub_100522F00((uint64_t)v105, (uint64_t *)&unk_101683740);
        (*v67)(v15, v12);
        CRAttributedString.Runs.next()();
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v98)(v19, 1, v12) == 1) {
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v34 = (void *)Strong;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  swift_getObjectType();
  uint64_t v37 = swift_conformsToProtocol2();
  if (v37) {
    uint64_t v38 = v37;
  }
  else {
    uint64_t v38 = 0;
  }
  if (v37) {
    uint64_t v39 = v34;
  }
  else {
    uint64_t v39 = 0;
  }
  if (!v39)
  {

    a2 = v36;
    a1 = v35;
    goto LABEL_12;
  }
  uint64_t ObjectType = swift_getObjectType();
  char v41 = sub_100FC1058(ObjectType, v38);

  a2 = v36;
  a1 = v35;
  if (v41) {
    goto LABEL_12;
  }
}

uint64_t sub_1009044F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CharacterSet();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101687BB0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
LABEL_12:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v14, 1, 1, v6);
    goto LABEL_13;
  }
  if (a2 != a1) {
    return 0;
  }
  if (a2 < 1)
  {
LABEL_8:
    [v3 textRangeForParagraphAtCharIndex:a2];
    return v19 == 0;
  }
  if ((objc_msgSend(v3, "characterAtIndex:", objc_msgSend(v3, "previousCharacterIndex:", a2)) & 0xF800) == 0xD800) {
    return 0;
  }
  id v15 = sub_1001CA044();
  if (!v15) {
    goto LABEL_12;
  }
  uint64_t v16 = v15;
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v10, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v6);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  char v18 = CharacterSet.contains(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  if (v18) {
    goto LABEL_8;
  }
  return 0;
}

char *sub_100904750(char *result, char *a2)
{
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_21;
  }
  if (a2 != result) {
    return result;
  }
  if ((uint64_t)[v2 characterCount] < 1) {
    return a2;
  }
  BOOL v6 = [v2 textRangeForParagraphAtCharIndex:a2] != a2 || v4 == 0;
  if (!a2 || !v6)
  {
    uint64_t result = a2;
    goto LABEL_17;
  }
  uint64_t result = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
    __break(1u);
    return a2;
  }
LABEL_17:
  if (__OFADD__(result, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((uint64_t)(result + 1) < (uint64_t)result) {
LABEL_22:
  }
    __break(1u);
  return result;
}

void sub_1009047F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  BOOL v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v42, v11);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v41 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v45 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v18 = (void *)Strong;
    uint64_t v44 = (uint64_t)v6;
    uint64_t v19 = v2;
    uint64_t v20 = v7;
    uint64_t v21 = v0;
    uint64_t v22 = v3;
    swift_getObjectType();
    uint64_t v23 = swift_conformsToProtocol2();
    if (v23) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = 0;
    }
    if (v23) {
      uint64_t v25 = v18;
    }
    else {
      uint64_t v25 = 0;
    }
    if (v25)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v27 = sub_100FC1058(ObjectType, v24);

      uint64_t v3 = v22;
      uint64_t v1 = v21;
      uint64_t v7 = v20;
      uint64_t v2 = v19;
      BOOL v6 = (char *)v44;
      if ((v27 & 1) == 0) {
        return;
      }
    }
    else
    {

      uint64_t v3 = v22;
      uint64_t v1 = v21;
      uint64_t v7 = v20;
      uint64_t v2 = v19;
      BOOL v6 = (char *)v44;
    }
  }
  if ((uint64_t)[v1 characterCount] >= 1)
  {
    uint64_t v40 = v14;
    uint64_t v44 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
    uint64_t v28 = *(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v28)
    {
      (*(void (**)(void))(*(void *)v28 + 760))();
      sub_100919454((uint64_t)&v10[*(int *)(v7 + 20)], (uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v10, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
      v29(v6, v13, v2);
      sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
      CRAttributedString.attributes(at:effectiveRange:)();
      uint64_t v43 = v7;
      uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
      v39[1] = v3 + 8;
      uint64_t v31 = v30(v6, v2);
      uint64_t v32 = *(void *)&v1[v44];
      if (v32)
      {
        (*(void (**)(uint64_t))(*(void *)v32 + 760))(v31);
        sub_100919454((uint64_t)&v10[*(int *)(v43 + 20)], (uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
        sub_100918D58((uint64_t)v10, type metadata accessor for CRLWPShapeItemCRDTData);
        v29(v6, &v13[*(int *)(v42 + 20)], v2);
        sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
        CRAttributedString.count.getter();
        uint64_t v33 = v30(v6, v2);
        uint64_t v34 = *(void *)&v1[v44];
        if (v34)
        {
          (*(void (**)(uint64_t))(*(void *)v34 + 760))(v33);
          uint64_t v35 = v43;
          sub_100919454((uint64_t)&v10[*(int *)(v43 + 20)], (uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
          swift_retain();
          sub_100918D58((uint64_t)v10, type metadata accessor for CRLWPShapeItemCRDTData);
          uint64_t v36 = v45;
          CRAttributedString.addAttributes(_:range:)();
          uint64_t v37 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v34 + 776))(v46);
          sub_10091A240((uint64_t)v13, v38 + *(int *)(v35 + 20));
          v37(v46, 0);
          sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
          swift_release();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v40);
          return;
        }
LABEL_20:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
}

id sub_100904DCC(uint64_t a1)
{
  v22[1] = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v14 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v15);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v1 characterCount];
  uint64_t v19 = *(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (result)
  {
    if (v19)
    {
      (*(void (**)(void))(*(void *)v19 + 760))();
      sub_100919454((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v20 = v13;
LABEL_6:
      uint64_t v21 = v23;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, v23);
      sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
      CRAttributedString.attributes(at:effectiveRange:)();
      sub_1005D3BF8();
      CRAttributedString.Attributes.init()();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1008431AC();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      *(void *)&long long v25 = v32;
      BYTE8(v25) = BYTE8(v32);
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_100843158();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      *(void *)&long long v25 = v32;
      BYTE8(v25) = BYTE8(v32);
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10083E5B0();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      LODWORD(v25) = v32;
      BYTE4(v25) = BYTE4(v32);
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10091307C();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      long long v25 = v32;
      LOBYTE(v26) = v33;
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_100913244();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      long long v25 = v32;
      long long v26 = v33;
      long long v27 = v34;
      long long v28 = v35;
      long long v29 = v36;
      long long v30 = v37;
      long long v31 = v38;
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_100843254();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      LOBYTE(v25) = v32;
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_100843200();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      LOBYTE(v25) = v32;
      CRAttributedString.Attributes.subscript.setter();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v2);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v21);
    }
    __break(1u);
  }
  else if (v19)
  {
    (*(void (**)(void))(*(void *)v19 + 760))();
    sub_100919454((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v20 = &v13[*(int *)(v10 + 20)];
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

id sub_1009054D8(uint64_t a1)
{
  v22[1] = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v14 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v15);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v1 characterCount];
  uint64_t v19 = *(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (result)
  {
    if (v19)
    {
      (*(void (**)(void))(*(void *)v19 + 760))();
      sub_100919454((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v20 = v13;
LABEL_6:
      uint64_t v21 = v23;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v20, v23);
      sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
      CRAttributedString.attributes(at:effectiveRange:)();
      sub_1005D3BF8();
      CRAttributedString.Attributes.init()();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10083E210();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      uint64_t v25 = v27;
      char v26 = v28;
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10083BCB0();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      uint64_t v25 = v27;
      char v26 = v28;
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_100842B0C();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      uint64_t v25 = v27;
      char v26 = v28;
      CRAttributedString.Attributes.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_100842A00();
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      uint64_t v25 = v27;
      char v26 = v28;
      CRAttributedString.Attributes.subscript.setter();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v2);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v21);
    }
    __break(1u);
  }
  else if (v19)
  {
    (*(void (**)(void))(*(void *)v19 + 760))();
    sub_100919454((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v20 = &v13[*(int *)(v10 + 20)];
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_100905A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v46[1] = a2;
  v46[2] = a1;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v47 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_10:
    if (a3 == a4) {
      return;
    }
    goto LABEL_13;
  }
  uint64_t v21 = (void *)Strong;
  v46[0] = a4;
  uint64_t v22 = v12;
  uint64_t v23 = v8;
  uint64_t v24 = v4;
  uint64_t v25 = a3;
  swift_getObjectType();
  uint64_t v26 = swift_conformsToProtocol2();
  if (v26) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v26) {
    char v28 = v21;
  }
  else {
    char v28 = 0;
  }
  if (v28)
  {
    uint64_t ObjectType = swift_getObjectType();
    char v30 = sub_100FC1058(ObjectType, v27);

    a3 = v25;
    uint64_t v5 = v24;
    uint64_t v8 = v23;
    uint64_t v12 = v22;
    a4 = v46[0];
    if ((v30 & 1) == 0) {
      return;
    }
    goto LABEL_10;
  }

  a3 = v25;
  uint64_t v5 = v24;
  uint64_t v8 = v23;
  uint64_t v12 = v22;
  a4 = v46[0];
  if (a3 == v46[0]) {
    return;
  }
LABEL_13:
  v46[0] = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v31 = *(void *)&v5[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v31)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  (*(void (**)(void))(*(void *)v31 + 760))();
  sub_100919454((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v32 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v11, v19, v8);
  sub_100918D58((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v33 = CRAttributedString.count.getter();
  uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v8);
  if (v33 >= (a3 & ~(a3 >> 63))) {
    uint64_t v35 = a3 & ~(a3 >> 63);
  }
  else {
    uint64_t v35 = v33;
  }
  uint64_t v36 = a4 & ~(a4 >> 63);
  if (v36 >= v33) {
    uint64_t v36 = v33;
  }
  if (v36 < v35)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v47 = a3;
  uint64_t v37 = *(void *)&v5[v46[0]];
  if (!v37)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (__OFSUB__(v36, v35)) {
    goto LABEL_30;
  }
  (*(void (**)(uint64_t))(*(void *)v37 + 760))(v34);
  sub_100919454((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  swift_retain();
  sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  CRAttributedString.addAttributes(_:range:)();
  long long v38 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v37 + 776))(v48);
  sub_10091A240((uint64_t)v19, v39 + *(int *)(v12 + 20));
  v38(v48, 0);
  sub_100918D58((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  swift_release();
  if (__OFSUB__(a4, v47))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v40 = (char *)[v5 textRangeForParagraphsInCharRange:v47, a4 - v47];
  uint64_t v42 = &v40[v41];
  if (__OFADD__(v40, v41))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((uint64_t)v42 < (uint64_t)v40)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v43 = *(void *)&v5[v46[0]];
  if (!v43)
  {
LABEL_37:
    __break(1u);
    return;
  }
  if (__OFSUB__(v42, v40)) {
    goto LABEL_34;
  }
  (*(void (**)(void))(*(void *)v43 + 760))();
  sub_100919454((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  swift_retain();
  sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  CRAttributedString.addAttributes(_:range:)();
  uint64_t v44 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v43 + 776))(v48);
  sub_10091A240((uint64_t)v19, v45 + *(int *)(v12 + 20));
  v44(v48, 0);
  sub_100918D58((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  swift_release();
}

void sub_100906024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_12;
  }
  uint64_t v13 = (void *)Strong;
  swift_getObjectType();
  uint64_t v14 = swift_conformsToProtocol2();
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v14) {
    uint64_t v16 = v13;
  }
  else {
    uint64_t v16 = 0;
  }
  if (!v16)
  {

    goto LABEL_12;
  }
  uint64_t ObjectType = swift_getObjectType();
  char v18 = sub_100FC1058(ObjectType, v15);

  if (v18)
  {
LABEL_12:
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8))(a2, a3, v6, a4, a5);
    uint64_t v21 = v20;
    uint64_t v22 = type metadata accessor for CRLWPAttributeDictionary();
    sub_10090614C(a1 + *(int *)(v22 + 36), v19, v21);
    *(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
  }
}

uint64_t sub_10090614C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a1;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for CRLWPStorageCRDTData(0);
  uint64_t result = __chkstk_darwin(v33, v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v18) {
    goto LABEL_10;
  }
  uint64_t v30 = a3;
  if (__OFSUB__(a3, a2))
  {
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v19 = v3;
  uint64_t v31 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  (*(void (**)(uint64_t))(*(void *)v18 + 760))(result);
  sub_100919454((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  swift_retain();
  sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  CRAttributedString.addAttributes(_:range:)();
  uint64_t v20 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v18 + 776))(v35);
  sub_10091A240((uint64_t)v17, v21 + *(int *)(v10 + 20));
  v20(v35, 0);
  sub_100918D58((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t result = swift_release();
  if (a2)
  {
    uint64_t result = sub_1009044F8(a2, v30);
    if ((result & 1) == 0) {
      goto LABEL_8;
    }
  }
  uint64_t v22 = v9;
  uint64_t v23 = v31;
  uint64_t v24 = *(void *)(v19 + v31);
  if (!v24) {
    goto LABEL_11;
  }
  (*(void (**)(uint64_t))(*(void *)v24 + 760))(result);
  sub_100919454((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v25 = v32;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v22, &v17[*(int *)(v33 + 20)], v6);
  sub_100918D58((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  CRAttributedString.count.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v22, v6);
  uint64_t v26 = *(void *)(v19 + v23);
  if (v26)
  {
    (*(void (**)(uint64_t))(*(void *)v26 + 760))(result);
    sub_100919454((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
    swift_retain();
    sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
    CRAttributedString.addAttributes(_:range:)();
    uint64_t v27 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v26 + 776))(v35);
    sub_10091A240((uint64_t)v17, v28 + *(int *)(v10 + 20));
    v27(v35, 0);
    sub_100918D58((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t result = swift_release();
LABEL_8:
    *(unsigned char *)(v19 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

void sub_10090664C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v19) {
    goto LABEL_11;
  }
  (*(void (**)(__n128))(*(void *)v19 + 760))(v16);
  sub_100919454((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v18, v5);
  sub_100918D58((uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v20 = CRAttributedString.count.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (v20 >= (a1 & ~(a1 >> 63))) {
    uint64_t v21 = a1 & ~(a1 >> 63);
  }
  else {
    uint64_t v21 = v20;
  }
  if (__OFADD__(a1, a2))
  {
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  if (v20 < a1 + a2 && __OFSUB__(v20, v21)) {
    goto LABEL_10;
  }
}

uint64_t sub_1009068B8(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a1;
  uint64_t v58 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v56 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  uint64_t v54 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v6);
  uint64_t v62 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016879D0);
  uint64_t v68 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v16 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v17);
  uint64_t v64 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v61, v19);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v25 = (char *)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1005057FC(&qword_1016879E0);
  uint64_t v55 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26, v27);
  uint64_t v30 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v28, v31);
  uint64_t v34 = (char *)&v53 - v33;
  uint64_t v35 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v35) {
    goto LABEL_38;
  }
  uint64_t v65 = 0;
  uint64_t v67 = 0x7FFFFFFFFFFFFFFFLL;
  (*(void (**)(uint64_t))(*(void *)v35 + 760))(result);
  sub_100919454((uint64_t)&v21[*(int *)(v61 + 20)], (uint64_t)v25, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v21, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v36 = v64;
  uint64_t v37 = v66;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v64, v25, v66);
  sub_100918D58((uint64_t)v25, type metadata accessor for CRLWPStorageCRDTData);
  CRAttributedString.runs.getter();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v36, v37);
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v34, v30, v26);
  uint64_t v64 = (char *)v26;
  uint64_t v66 = (uint64_t)v34;
  CRAttributedString.Runs.next()();
  uint64_t v38 = v68;
  uint64_t v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
  uint64_t v61 = v68 + 48;
  if (v60(v15, 1, v8) == 1)
  {
    uint64_t v39 = v67;
LABEL_33:
    (*(void (**)(uint64_t, char *))(v55 + 8))(v66, v64);
    return v39;
  }
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  uint64_t v40 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  uint64_t v68 = v38 + 32;
  uint64_t v41 = (void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v42 = v65;
  uint64_t v39 = v67;
  uint64_t v43 = (uint64_t)v56;
  v59(v11, v15, v8);
  while (1)
  {
    swift_getKeyPath();
    sub_100913630();
    CRAttributedString.Runs.Run.subscript.getter();
    swift_release();
    uint64_t v44 = v63;
    if ((*v40)(v43, 1, v63) == 1)
    {
      sub_100522F00(v43, (uint64_t *)&unk_10167BE90);
LABEL_11:
      uint64_t v45 = v67;
      if (v39 != v67)
      {
        (*v41)(v11, v8);
        goto LABEL_33;
      }
      (*v41)(v11, v8);
      uint64_t v39 = v45;
      uint64_t v46 = v65;
      if (v42 != v65)
      {
        uint64_t v39 = v67;
        goto LABEL_33;
      }
      goto LABEL_7;
    }
    uint64_t v47 = v62;
    sub_1009197F0(v43, v62);
    uint64_t v48 = (void *)(v47 + *(int *)(v44 + 24));
    BOOL v49 = *v48 == v57 && v48[1] == v58;
    if (!v49 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      sub_100918D58(v62, type metadata accessor for CRLWPHyperlinkSmartFieldData);
      goto LABEL_11;
    }
    uint64_t v50 = CRAttributedString.Runs.Run.range.getter();
    uint64_t result = CRAttributedString.Runs.Run.range.getter();
    uint64_t v46 = v51 - result;
    if (__OFSUB__(v51, result)) {
      break;
    }
    if (v39 == v67 && v42 == v65)
    {
      uint64_t v39 = v50;
    }
    else
    {
      uint64_t v52 = v50 + v46;
      if (__OFADD__(v50, v46)) {
        goto LABEL_35;
      }
      if (__OFADD__(v39, v42)) {
        goto LABEL_36;
      }
      if (v52 <= v39 + v42) {
        uint64_t v52 = v39 + v42;
      }
      if (v50 < v39) {
        uint64_t v39 = v50;
      }
      uint64_t v46 = v52 - v39;
      if (__OFSUB__(v52, v39)) {
        goto LABEL_37;
      }
    }
    sub_100918D58(v62, type metadata accessor for CRLWPHyperlinkSmartFieldData);
    (*v41)(v11, v8);
    uint64_t v43 = (uint64_t)v56;
LABEL_7:
    CRAttributedString.Runs.next()();
    uint64_t v42 = v46;
    if (v60(v15, 1, v8) == 1) {
      goto LABEL_33;
    }
    v59(v11, v15, v8);
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_100907034()
{
  uint64_t v0 = type metadata accessor for CharacterSet();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v3 = __chkstk_darwin(v0, v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v3, v6);
  uint64_t v9 = (char *)&v12 - v8;
  sub_100568B28(v7, qword_10171AE70);
  sub_100556B74(v0, (uint64_t)qword_10171AE70);
  static CharacterSet.whitespacesAndNewlines.getter();
  CharacterSet.init(charactersIn:)();
  CharacterSet.union(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v5, v0);
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v0);
}

id sub_1009071B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStorage();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPStorage()
{
  return self;
}

void sub_100907358()
{
  uint64_t v1 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (uint64_t (*)(void))type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v27, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v28 = v0;
  uint64_t v18 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v18)
  {
    (*(void (**)(__n128))(*(void *)v18 + 760))(v15);
    uint64_t v19 = (uint64_t)&v4[*(int *)(v1 + 20)];
    uint64_t v26 = v1;
    sub_100919454(v19, (uint64_t)v7, type metadata accessor for CRLWPStorageCRDTData);
    swift_retain();
    sub_100918D58((uint64_t)v4, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, &v7[*((int *)v27 + 5)], v8);
    uint64_t v27 = type metadata accessor for CRLWPStorageCRDTData;
    sub_100918D58((uint64_t)v7, type metadata accessor for CRLWPStorageCRDTData);
    sub_100523288(qword_101687C20, (uint64_t *)&unk_10167BC20);
    CRType.copy()();
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    (*(void (**)(uint64_t))(*(void *)v18 + 760))(v20);
    uint64_t v21 = v26;
    sub_100919454((uint64_t)&v4[*(int *)(v26 + 20)], (uint64_t)v7, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v4, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v7, v17, v8);
    uint64_t v22 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v18 + 776))(v29);
    sub_10091A240((uint64_t)v7, v23 + *(int *)(v21 + 20));
    v22(v29, 0);
    sub_100918D58((uint64_t)v7, v27);
    swift_release();
    uint64_t v24 = v28;
    *(unsigned char *)(v28 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges) = 0;
    *(unsigned char *)(v24 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_100907764()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v15)
  {
    (*(void (**)(__n128))(*(void *)v15 + 760))(v12);
    sub_100919454((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v14, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v14, v1);
    sub_100918D58((uint64_t)v14, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v16 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    [v16 length];
  }
  else
  {
    __break(1u);
  }
}

char *sub_100907A04(void *a1, uint64_t a2, char *a3)
{
  uint64_t v4 = v3;
  uint64_t result = (char *)[v4 characterCount];
  int64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    unint64_t v10 = 0;
    uint64_t v11 = a2 + 32;
    uint64_t v12 = *(void *)(a2 + 16);
    do
    {
      while (1)
      {
        if (__OFSUB__(v12, v10))
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        unint64_t v15 = v10 + (uint64_t)(v12 - v10) / 2;
        if (__OFADD__(v10, (uint64_t)(v12 - v10) / 2)) {
          goto LABEL_44;
        }
        if (v15 >= v9) {
          goto LABEL_45;
        }
        uint64_t v16 = (uint64_t *)(v11 + 24 * v15);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        if (v18 < (uint64_t)a3 && v17 <= (uint64_t)a3) {
          break;
        }
        uint64_t v12 = v10 + (uint64_t)(v12 - v10) / 2;
        if (v10 == v15) {
          goto LABEL_21;
        }
      }
      if (v17 < (uint64_t)a3 || (uint64_t)result > (uint64_t)a3) {
        unint64_t v10 = v15 + 1;
      }
      else {
        uint64_t v12 = v10 + (uint64_t)(v12 - v10) / 2;
      }
    }
    while (v10 != v12);
LABEL_21:
    if (v12 >= v9)
    {
      uint64_t v21 = *(char **)(v11 + 24 * v9 - 16);
      goto LABEL_35;
    }
    uint64_t v20 = (void **)(v11 + 24 * v12);
    uint64_t v21 = (char *)*v20;
    uint64_t v22 = (char *)v20[1];
    if (*v20 == a3
      || result == a3 && v22 == a3
      || ((uint64_t)v21 <= (uint64_t)a3 ? (BOOL v23 = (uint64_t)v22 <= (uint64_t)a3) : (BOOL v23 = 1), !v23))
    {
      uint64_t v27 = *(void **)(v11 + 24 * v12 + 16);
      id v28 = v27;
      goto LABEL_39;
    }
    if (v12)
    {
      uint64_t v24 = v12 - 1;
      if (v24 >= v9) {
        goto LABEL_49;
      }
      uint64_t v25 = *(char **)(v11 + 24 * v24 + 8);
    }
    else
    {
      uint64_t v25 = 0;
    }
    if ((uint64_t)v21 >= (uint64_t)v25)
    {
      uint64_t v27 = 0;
      uint64_t v21 = v25;
      goto LABEL_39;
    }
    goto LABEL_48;
  }
  uint64_t v21 = 0;
LABEL_35:
  uint64_t result = (char *)[v4 range];
  if (__OFADD__(result, v26))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if ((uint64_t)&result[v26] < (uint64_t)v21)
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    return result;
  }
  uint64_t v27 = 0;
LABEL_39:
  *a1 = v27;
  return v21;
}

void sub_100907C78(uint64_t a1)
{
  uint64_t v1 = a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v1 < a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_10090059C(a1, v1, v8);
  uint64_t v2 = (char *)v8[4];
  uint64_t v3 = (char *)v8[5];
  uint64_t v4 = (char *)v8[3];

  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = sub_10103A300(KeyPath, v4, v2, v3);
  LOBYTE(v3) = v7;
  swift_release();

  if ((v3 & 1) == 0) {
    return;
  }
  if (!*(void *)(v6 + 16))
  {
LABEL_9:
    __break(1u);
    return;
  }
  sub_1006F23FC(v6, 1);
}

void sub_100907ED0(uint64_t a1, int a2)
{
  int v37 = a2;
  uint64_t v41 = a1;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  char v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v16 = &v36[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v39 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v40 = v2;
  uint64_t v17 = *(void *)&v2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v17) {
    goto LABEL_24;
  }
  (*(void (**)(__n128))(*(void *)v17 + 760))(v14);
  sub_100919454((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v38 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16);
  v38(v7, v16, v3);
  sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v18 = (void *)CRAttributedString.attributedString.getter();
  uint64_t v19 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v19(v7, v3);
  uint64_t v20 = (uint64_t)[v18 length];

  if (v20 >= 1 && (v41 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = *(void *)&v40[v39];
    if (!v21)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    (*(void (**)(void))(*(void *)v21 + 760))();
    sub_100919454((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    v38(v7, v16, v3);
    sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v22 = (void *)CRAttributedString.attributedString.getter();
    v19(v7, v3);
    id v23 = [v22 length];

    if ((uint64_t)v23 < v41) {
      return;
    }
    uint64_t v24 = v40;
    uint64_t v25 = *(void *)&v40[v39];
    if (!v25)
    {
LABEL_26:
      __break(1u);
      return;
    }
    (*(void (**)(void))(*(void *)v25 + 760))();
    sub_100919454((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    v38(v7, v16, v3);
    sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v26 = (void *)CRAttributedString.attributedString.getter();
    v19(v7, v3);
    id v27 = [v26 length];

    id v28 = (char *)v41;
    if (v27 == (id)v41) {
      id v28 = (char *)[v24 previousCharacterIndex:v41];
    }
    if (sub_1001CA378((uint64_t)[v24 characterAtIndex:v28]))
    {
      uint64_t v29 = (char *)[v24 rangeOfNearestWhitespaceBeforeCharIndex:v28 includingBreaks:1];
      if (v29 != (char *)NSNotFound.getter()) {
        id v28 = v29;
      }
    }
    uint64_t v30 = (char *)[v24 wordAtCharIndex:v28 includePreviousWord:1];
    uint64_t v32 = v31;
    uint64_t v33 = NSNotFound.getter();
    BOOL v34 = v30 == (char *)v33;
    if (v30 == (char *)v33) {
      uint64_t v35 = v28;
    }
    else {
      uint64_t v35 = v30;
    }
    if (!v34 && (v37 & 1) != 0)
    {
      uint64_t v41 = (uint64_t)&v30[v32];
      if (__OFADD__(v30, v32))
      {
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      uint64_t v35 = v30;
    }
    if (!__OFSUB__(v41, v35)) {
      return;
    }
    __break(1u);
    goto LABEL_23;
  }
}

void sub_100908464(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v32 = a2;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLWPStorageCRDTData(0);
  *(void *)&double v16 = __chkstk_darwin(v14 - 8, v15).n128_u64[0];
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = [v2 range:v16];
  uint64_t v37 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v19)
  {
LABEL_23:
    __break(1u);
    return;
  }
  uint64_t v30 = 0;
  (*(void (**)(void))(*(void *)v19 + 760))();
  uint64_t v35 = v10;
  sub_100919454((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  BOOL v34 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v34(v9, v18, v5);
  sub_100918D58((uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v20 = (void *)CRAttributedString.attributedString.getter();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v36 = v6 + 8;
  uint64_t v33 = v21;
  v21(v9, v5);
  id v22 = [v20 length];

  if ((uint64_t)v22 > a1 && sub_1001CA378((uint64_t)[v3 characterAtIndex:a1]))
  {
    id v23 = (char *)a1;
    if ((uint64_t)v31 >= a1) {
      goto LABEL_14;
    }
    id v23 = (char *)a1;
    while (1)
    {
      uint64_t v24 = (uint64_t)(v23 - 1);
      id v25 = [v3 characterAtIndex:v23 - 1];
      if ((sub_1001CA378((uint64_t)v25) & 1) == 0 && ((v32 & 1) == 0 || !sub_10091A210((uint64_t)v25))) {
        break;
      }
      --v23;
      if ((uint64_t)v31 >= v24)
      {
        id v23 = v31;
        break;
      }
    }
LABEL_14:
    while (1)
    {
      uint64_t v26 = *(void *)&v3[v37];
      if (!v26) {
        break;
      }
      (*(void (**)(void))(*(void *)v26 + 760))();
      sub_100919454((uint64_t)&v13[*(int *)(v35 + 20)], (uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
      v34(v9, v18, v5);
      sub_100918D58((uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
      id v27 = (void *)CRAttributedString.attributedString.getter();
      v33(v9, v5);
      id v28 = [v27 length];

      if (a1 >= (uint64_t)v28
        || (id v29 = [v3 characterAtIndex:a1], (sub_1001CA378((uint64_t)v29) & 1) == 0)
        && ((v32 & 1) == 0 || !sub_10091A210((uint64_t)v29)))
      {
        if (!__OFSUB__(a1, v23)) {
          return;
        }
        __break(1u);
        break;
      }
      ++a1;
    }
    __break(1u);
    goto LABEL_23;
  }
}

void sub_100908AA8(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges) & 1) == 0) {
    sub_1008FF790();
  }
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphRanges);
  if (*(void *)(v3 + 16) > a1)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (__OFSUB__(*(void *)(v3 + 16 * a1 + 40), *(void *)(v3 + 16 * a1 + 32)))
    {
      __break(1u);
    }
  }
}

void sub_100908B68(uint64_t a1)
{
  uint64_t v2 = (uint64_t)[v1 paragraphIndexAtCharIndex:a1];
  if ((v1[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges] & 1) == 0) {
    sub_1008FF790();
  }
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphRanges];
  if (v2 < *(void *)(v3 + 16))
  {
    if (v2 < 0)
    {
      __break(1u);
    }
    else if (__OFSUB__(*(void *)(v3 + 16 * v2 + 40), *(void *)(v3 + 16 * v2 + 32)))
    {
      __break(1u);
    }
  }
}

void sub_100908C44(uint64_t a1, Swift::Int a2, Swift::Int a3)
{
  v58.length = a3;
  v58.location = a2;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  uint64_t v60 = *(double **)(v55 - 8);
  __chkstk_darwin(v55, v8);
  unint64_t v56 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016879D0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v64 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v18 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v19);
  uint64_t v62 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v25 - 8, v26);
  id v28 = (char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1005057FC(&qword_1016879E0);
  uint64_t v29 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v30);
  __n128 v34 = __chkstk_darwin(v31, v32);
  uint64_t v65 = (char *)&v54 - v35;
  if (a1 == 6)
  {
    uint64_t v61 = v33;
    uint64_t v36 = *(void *)(v59 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
    if (v36)
    {
      (*(void (**)(__n128))(*(void *)v36 + 760))(v34);
      sub_100919454((uint64_t)&v24[*(int *)(v21 + 20)], (uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v24, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v38 = v62;
      uint64_t v37 = v63;
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v62, v28, v63);
      sub_100918D58((uint64_t)v28, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v39 = v61;
      CRAttributedString.runs.getter();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v38, v37);
      uint64_t v54 = v29;
      (*(void (**)(char *, void, uint64_t))(v29 + 32))(v65, v39, v66);
      uint64_t v40 = v64;
      CRAttributedString.Runs.next()();
      uint64_t v62 = *(char **)(v11 + 48);
      uint64_t v63 = v11 + 48;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v62)(v40, 1, v10) == 1)
      {
        uint64_t v60 = _swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v61 = *(void (**)(void, void, void))(v11 + 32);
        uint64_t v41 = v60 + 6;
        uint64_t v42 = (void (**)(char *, uint64_t))(v11 + 8);
        uint64_t v60 = _swiftEmptyArrayStorage;
        uint64_t v44 = v55;
        uint64_t v43 = (uint64_t)v56;
        uint64_t v57 = v14;
        v61(v14, v40, v10);
        while (1)
        {
          swift_getKeyPath();
          sub_100913630();
          CRAttributedString.Runs.Run.subscript.getter();
          swift_release();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v41)(v7, 1, v44) == 1)
          {
            (*v42)(v14, v10);
            sub_100522F00((uint64_t)v7, (uint64_t *)&unk_10167BE90);
          }
          else
          {
            sub_1009197F0((uint64_t)v7, v43);
            uint64_t v46 = (uint64_t *)(v43 + *(int *)(v44 + 24));
            uint64_t v47 = *v46;
            uint64_t v48 = v46[1];
            swift_bridgeObjectRetain();
            sub_1009068B8(v47, v48);
            swift_bridgeObjectRelease();
            __C::_NSRange_optional v69 = _NSRange.intersection(_:)(v58);
            if (v69.is_nil)
            {
              sub_100918D58(v43, type metadata accessor for CRLWPHyperlinkSmartFieldData);
              uint64_t v53 = v57;
              (*v42)(v57, v10);
              uint64_t v14 = v53;
            }
            else
            {
              uint64_t v68 = v44;
              BOOL v49 = sub_1005767BC((uint64_t *)&v67);
              sub_100919454(v43, (uint64_t)v49, type metadata accessor for CRLWPHyperlinkSmartFieldData);
              uint64_t v50 = (swift_isUniquelyReferenced_nonNull_native() & 1) != 0
                  ? v60
                  : sub_100F63E88(0, *((void *)v60 + 2) + 1, 1, v60);
              unint64_t v52 = *((void *)v50 + 2);
              unint64_t v51 = *((void *)v50 + 3);
              uint64_t v43 = (uint64_t)v56;
              if (v52 >= v51 >> 1) {
                uint64_t v50 = sub_100F63E88((double *)(v51 > 1), v52 + 1, 1, v50);
              }
              uint64_t v14 = v57;
              *((void *)v50 + 2) = v52 + 1;
              uint64_t v60 = v50;
              sub_100575CE8(&v67, &v50[4 * v52 + 4]);
              sub_100918D58(v43, type metadata accessor for CRLWPHyperlinkSmartFieldData);
              (*v42)(v14, v10);
            }
          }
          uint64_t v45 = v64;
          CRAttributedString.Runs.next()();
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v62)(v45, 1, v10) == 1) {
            break;
          }
          v61(v14, v45, v10);
        }
      }
      (*(void (**)(char *, uint64_t))(v54 + 8))(v65, v66);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100909484(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2 == 6)
  {
    uint64_t v5 = a1 + 1;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
    }
    else if (v5 >= a1)
    {
      sub_10090059C(a1, v5, v16);
      uint64_t v7 = (char *)v16[4];
      uint64_t v8 = (char *)v16[5];
      uint64_t v9 = (char *)v16[3];

      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v11 = (void *)sub_101041474(KeyPath, v9, v7, v8);
      LOBYTE(v8) = v12;
      swift_release();

      if ((v8 & 1) == 0) {
        goto LABEL_7;
      }
      if (v11[2])
      {
        uint64_t v13 = (void *)v11[4];
        id v14 = v13;
        sub_10083E3A0(v11, 1);
        uint64_t v11 = v13;
LABEL_7:
        if (v11)
        {
          if (a3)
          {
            *a3 = [v11 range];
            a3[1] = v15;
          }
        }
        else
        {
          [v3 hyperlinkFieldAtCharIndex:a1 effectiveRange:a3];
        }
        return;
      }
LABEL_15:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_1009097AC(uint64_t result, void *a2)
{
  uint64_t v4 = result;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) & 1) == 0) {
    uint64_t result = sub_1008FDB6C();
  }
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= v4) {
    return 0;
  }
  if (!a2)
  {
    if (v4 < 0)
    {
      __break(1u);
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
LABEL_10:
    if (v6 > (unint64_t)v4)
    {
      char v12 = *(void **)(v5 + 56 * v4 + 48);
      id v13 = v12;
      return (uint64_t)v12;
    }
    goto LABEL_14;
  }
  if (v4 < 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = v5 + 56 * v4;
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(v7 + 40);
  BOOL v10 = __OFSUB__(v9, v8);
  uint64_t v11 = v9 - v8;
  if (!v10)
  {
    *a2 = v8;
    a2[1] = v11;
    uint64_t v6 = *(void *)(v5 + 16);
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_10090996C(uint64_t a1, uint64_t *a2)
{
  NSNotFound.getter();
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges) & 1) == 0) {
    sub_1008FF790();
  }
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphRanges);
  unint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    goto LABEL_16;
  }
  unint64_t v7 = 0;
  uint64_t v8 = v5 + 32;
  uint64_t v9 = v6;
  do
  {
    if (__OFSUB__(v9, v7))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      return;
    }
    unint64_t v10 = v7 + (uint64_t)(v9 - v7) / 2;
    if (__OFADD__(v7, (uint64_t)(v9 - v7) / 2)) {
      goto LABEL_22;
    }
    if (v10 >= v6) {
      goto LABEL_23;
    }
    if (*(void *)(v8 + 16 * v10 + 8) <= a1) {
      unint64_t v7 = v10 + 1;
    }
    else {
      uint64_t v9 = v7 + (uint64_t)(v9 - v7) / 2;
    }
  }
  while (v7 != v9);
  if (v9 >= (uint64_t)v6)
  {
    uint64_t v16 = (uint64_t *)(v8 + 16 * (v6 - 1));
    uint64_t v12 = *v16;
    uint64_t v17 = v16[1];
    BOOL v14 = __OFSUB__(v17, v12);
    uint64_t v15 = v17 - v12;
    if (!v14) {
      goto LABEL_18;
    }
    goto LABEL_24;
  }
  uint64_t v11 = (uint64_t *)(v8 + 16 * v9);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  BOOL v14 = __OFSUB__(v13, v12);
  uint64_t v15 = v13 - v12;
  if (!v14) {
    goto LABEL_18;
  }
  __break(1u);
LABEL_16:
  uint64_t v12 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v15 = 0;
LABEL_18:
  if (a2)
  {
    *a2 = v12;
    a2[1] = v15;
  }
}

uint64_t sub_100909AF8(uint64_t result, uint64_t *a2)
{
  uint64_t v4 = result;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) & 1) == 0) {
    uint64_t result = sub_1008FDB6C();
  }
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns);
  unint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
LABEL_16:
    uint64_t v17 = 0;
    uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v16 = 0;
    if (a2) {
      goto LABEL_20;
    }
    return (uint64_t)v17;
  }
  unint64_t v7 = 0;
  uint64_t v8 = v5 + 32;
  uint64_t v9 = v5 + 40;
  uint64_t v10 = *(void *)(v5 + 16);
  do
  {
    if (__OFSUB__(v10, v7))
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    unint64_t v11 = v7 + (uint64_t)(v10 - v7) / 2;
    if (__OFADD__(v7, (uint64_t)(v10 - v7) / 2)) {
      goto LABEL_23;
    }
    if (v11 >= v6) {
      goto LABEL_24;
    }
    if (*(void *)(v9 + 56 * v11) <= v4) {
      unint64_t v7 = v11 + 1;
    }
    else {
      uint64_t v10 = v7 + (uint64_t)(v10 - v7) / 2;
    }
  }
  while (v7 != v10);
  if (v10 < (uint64_t)v6)
  {
    uint64_t v12 = 56 * v10;
    uint64_t v13 = (uint64_t *)(v8 + 56 * v10);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = v14 - v15;
    if (__OFSUB__(v14, v15))
    {
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_19;
  }
  uint64_t v12 = 56 * v6 - 56;
  uint64_t v15 = *(void *)(v8 + v12);
  uint64_t v18 = *(void *)(v8 + v12 + 8);
  uint64_t v16 = v18 - v15;
  if (__OFSUB__(v18, v15))
  {
LABEL_25:
    __break(1u);
    return result;
  }
LABEL_19:
  uint64_t v17 = *(void **)(v8 + v12 + 16);
  id v19 = v17;
  if (!a2) {
    return (uint64_t)v17;
  }
LABEL_20:
  *a2 = v15;
  a2[1] = v16;
  return (uint64_t)v17;
}

uint64_t sub_100909E00(uint64_t a1)
{
  if ((v1[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] & 1) == 0) {
    sub_1008FDB6C();
  }
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns];
  if (*(void *)(v3 + 16) <= a1) {
    return 0;
  }
  if (a1 < 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v4 = (void *)(v3 + 56 * a1);
  uint64_t v5 = (void *)v4[7];
  if (!v5) {
    return 0;
  }
  unint64_t v6 = (void *)v4[6];
  unint64_t v7 = v4[8];
  id v8 = v5;
  id v9 = v6;
  unint64_t v10 = (unint64_t)[v1 listNumberAtParIndex:a1];
  id v11 = v8;
  uint64_t v12 = sub_1007520A0();

  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_16;
  }
  if (v7 >= *(void *)(v12 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v13 = *(void *)(v12 + 8 * v7 + 32);
  swift_bridgeObjectRelease();
  if ((v10 & 0x8000000000000000) == 0 && !HIDWORD(v10))
  {
    id v14 = [self crlwp_stringForValue:v10 withListNumberFormat:v13 includeFormatting:1];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v16;
    }

    return 0;
  }
LABEL_18:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10090A05C(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) & 1) == 0) {
    sub_1008FDB6C();
  }
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__listRuns);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 1;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v3 + 32;
  uint64_t result = 1;
  while (1)
  {
    id v8 = *(void **)(v6 + 48 * v5 + 40);
    uint64_t v9 = v8[2];
    if (!v9) {
      goto LABEL_5;
    }
    uint64_t v10 = v8[4];
    if (v10 == a1) {
      break;
    }
    if (v9 != 1)
    {
      if (v8[5] == a1) {
        goto LABEL_18;
      }
      if (v9 != 2)
      {
        uint64_t v11 = 6;
        while (1)
        {
          uint64_t v12 = v11 - 3;
          if (__OFADD__(v11 - 4, 1)) {
            break;
          }
          if (v8[v11] == a1) {
            goto LABEL_18;
          }
          ++v11;
          if (v12 == v9) {
            goto LABEL_5;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
LABEL_5:
    if (++v5 == v4) {
      return result;
    }
  }
  uint64_t v10 = a1;
LABEL_18:
  uint64_t v13 = *(void *)(v6 + 48 * v5 + 32);
  if (__OFSUB__(v13, 1))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  uint64_t result = v13;
  if (v10 < a1)
  {
    uint64_t v14 = v9 - 1;
    uint64_t v15 = v9 - 1 + v13;
    uint64_t v16 = v8 + 5;
    while (v14)
    {
      if (result == 0x7FFFFFFFFFFFFFFFLL) {
        goto LABEL_28;
      }
      uint64_t v17 = *v16++;
      ++result;
      --v14;
      if (v17 >= a1) {
        return result;
      }
    }
    return v15;
  }
  return result;
}

uint64_t sub_10090A210(uint64_t result, void *a2)
{
  uint64_t v4 = result;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) & 1) == 0) {
    uint64_t result = sub_1008FDB6C();
  }
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= v4) {
    return 0;
  }
  if (!a2)
  {
    if (v4 < 0)
    {
      __break(1u);
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
LABEL_10:
    if (v6 > (unint64_t)v4)
    {
      uint64_t v12 = *(void **)(v5 + 56 * v4 + 56);
      id v13 = v12;
      return (uint64_t)v12;
    }
    goto LABEL_14;
  }
  if (v4 < 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = v5 + 56 * v4;
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(v7 + 40);
  BOOL v10 = __OFSUB__(v9, v8);
  uint64_t v11 = v9 - v8;
  if (!v10)
  {
    *a2 = v8;
    a2[1] = v11;
    uint64_t v6 = *(void *)(v5 + 16);
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_10090A3F4(uint64_t result, void *a2)
{
  uint64_t v4 = result;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) & 1) == 0) {
    uint64_t result = sub_1008FDB6C();
  }
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= v4) {
    return 0;
  }
  if (!a2)
  {
    if (v4 < 0)
    {
      __break(1u);
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
LABEL_10:
    if (v6 > (unint64_t)v4) {
      return *(void *)(v5 + 56 * v4 + 64);
    }
    goto LABEL_13;
  }
  if (v4 < 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = v5 + 56 * v4;
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(void *)(v7 + 40);
  BOOL v10 = __OFSUB__(v9, v8);
  uint64_t v11 = v9 - v8;
  if (!v10)
  {
    *a2 = v8;
    a2[1] = v11;
    uint64_t v6 = *(void *)(v5 + 16);
    goto LABEL_10;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_10090A504(uint64_t a1, void *a2)
{
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) & 1) == 0) {
    sub_1008FDB6C();
  }
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__listRuns);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    return 1;
  }
  uint64_t v7 = 0;
  uint64_t v8 = v5 + 32;
  uint64_t result = 1;
  while (1)
  {
    BOOL v10 = *(void **)(v8 + 48 * v7 + 40);
    uint64_t v11 = v10[2];
    if (v11)
    {
      if (v10[4] == a1) {
        goto LABEL_16;
      }
      if (v11 != 1) {
        break;
      }
    }
LABEL_5:
    if (++v7 == v6) {
      return result;
    }
  }
  if (v10[5] != a1)
  {
    if (v11 != 2)
    {
      uint64_t v12 = 6;
      while (1)
      {
        uint64_t v13 = v12 - 3;
        if (__OFADD__(v12 - 4, 1)) {
          break;
        }
        if (v10[v12] == a1) {
          goto LABEL_16;
        }
        ++v12;
        if (v13 == v11) {
          goto LABEL_5;
        }
      }
      __break(1u);
      goto LABEL_22;
    }
    goto LABEL_5;
  }
LABEL_16:
  uint64_t v14 = v8 + 48 * v7;
  uint64_t result = *(void *)(v14 + 32);
  if (!a2) {
    return result;
  }
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = *(void *)(v8 + 48 * v7 + 24);
  BOOL v17 = __OFSUB__(v16, v15);
  uint64_t v18 = v16 - v15;
  if (!v17)
  {
    *a2 = v15;
    a2[1] = v18;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

void sub_10090A6A4(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v17)
  {
    (*(void (**)(__n128))(*(void *)v17 + 760))(v14);
    sub_100919454((uint64_t)&v11[*(int *)(v8 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v16, v3);
    sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v18 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    id v19 = [v18 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 characterAtIndex:a1];
  }
  else
  {
    __break(1u);
  }
}

void sub_10090A990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101687AE0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10090664C(a1, a2);
  BOOL v19 = __OFADD__(v17, v18);
  uint64_t v20 = v17 + v18;
  if (v19)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v20 < v17)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v21 = sub_10090059C(v17, v20, &v26);
  uint64_t v22 = v26;
  uint64_t v23 = *(void *)&v26[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v23)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  (*(void (**)(id))(*(void *)v23 + 760))(v21);
  sub_100919454((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v12, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_1005057FC((uint64_t *)&unk_10167BC20);
  CRAttributedString.subscript.getter();
  sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v24 = (void *)CRAttributedString.Substring.attributedString.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  id v25 = [v24 string];

  if (v25)
  {

    long long v29 = v27;
    uint64_t v30 = v28;
    sub_1006436E8((id *)&v29);
    String.init(_:)(v25);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_10090ACD8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)&v2[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hyperlinkRuns] + 16)) {
    return 1;
  }
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 0;
  uint64_t v7 = (unsigned __int8 *)(v6 + 16);
  _DWORD v10[4] = sub_100919950;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(void *)"";
  void v10[2] = sub_10090AE1C;
  v10[3] = &unk_10151A750;
  uint64_t v8 = _Block_copy(v10);
  swift_retain();
  swift_release();
  [v2 enumerateSmartFieldsWithAttributeKind:6 inRange:a1 usingBlock:a2];
  _Block_release(v8);
  swift_beginAccess();
  uint64_t v3 = *v7;
  swift_release();
  return v3;
}

uint64_t sub_10090AE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v11[3] = swift_getObjectType();
  v11[0] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  v9(v11, a3, a4, a5);
  swift_release();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
}

void sub_10090AF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v21)
  {
    (*(void (**)(__n128))(*(void *)v21 + 760))(v18);
    sub_100919454((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v20, v7);
    sub_100918D58((uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v22 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    id v23 = [v22 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v24 getCharacters:a1 range:a2];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10090B2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v49 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49, v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v50, v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPStorageCRDTData(0);
  *(void *)&double v14 = __chkstk_darwin(v12 - 8, v13).n128_u64[0];
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1;
  uint64_t v47 = a1;
  if (a1 >= 1)
  {
    char v18 = sub_1001CA378([v2 characterAtIndex:a1 - 1]);
    uint64_t v17 = v47;
    if ((v18 & 1) == 0)
    {
      uint64_t v48 = (char *)OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
      uint64_t v45 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v46 = (void (**)(char *, char *, uint64_t))(v5 + 16);
      uint64_t v17 = v47;
      while (1)
      {
        uint64_t v3 = (uint64_t)[v2 wordAtCharIndex:v17 - 1 includePreviousWord:0];
        if (v3 == NSNotFound.getter()) {
          break;
        }
        if (v3 < 1)
        {
          uint64_t v17 = v3;
          break;
        }
        uint64_t v19 = v5;
        uint64_t v20 = v2;
        uint64_t v21 = *(void *)&v48[(void)v2];
        if (!v21) {
          goto LABEL_19;
        }
        (*(void (**)(void))(*(void *)v21 + 760))();
        sub_100919454((uint64_t)&v11[*(int *)(v50 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
        sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
        uint64_t v22 = v49;
        (*v46)(v8, v16, v49);
        sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
        id v23 = (void *)CRAttributedString.attributedString.getter();
        (*v45)(v8, v22);
        id v24 = [v23 string];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v25 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        LODWORD(v24) = [v25 crlwp_isHyphenationAtCharacterIndex:v3 - 1];

        uint64_t v17 = v3;
        uint64_t v2 = v20;
        uint64_t v5 = v19;
        if (v24)
        {
          uint64_t v17 = v3 - 1;
          if (v3 != 1) {
            continue;
          }
        }
        break;
      }
    }
  }
  uint64_t v46 = (void (**)(char *, char *, uint64_t))OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v48 = (char *)v2;
  uint64_t v26 = *(void *)((char *)v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v26)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v47 += v44;
  (*(void (**)(void))(*(void *)v26 + 760))();
  sub_100919454((uint64_t)&v11[*(int *)(v50 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v27 = v49;
  uint64_t v45 = *(void (***)(char *, uint64_t))(v5 + 16);
  ((void (*)(char *, char *, uint64_t))v45)(v8, v16, v49);
  sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v28 = (void *)CRAttributedString.attributedString.getter();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v5 + 8);
  v43(v8, v27);
  uint64_t v44 = (uint64_t)[v28 length];

  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = v47;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  uint64_t v30 = *(uint64_t *)((char *)v46 + (void)v48);
  if (!v30)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v3 = inited;
  (*(void (**)(void))(*(void *)v30 + 760))();
  sub_100919454((uint64_t)&v11[*(int *)(v50 + 20)], (uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPShapeItemCRDTData);
  ((void (*)(char *, char *, uint64_t))v45)(v8, v16, v27);
  sub_100918D58((uint64_t)v16, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v31 = (void *)CRAttributedString.attributedString.getter();
  v43(v8, v27);
  id v32 = [v31 length];

  *(void *)(v3 + 96) = &type metadata for Int;
  *(void *)(v3 + 104) = &protocol witness table for Int;
  *(void *)(v3 + 72) = v32;
  uint64_t v33 = (char *)v47;
  if (v44 >= v47)
  {
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    __n128 v34 = (char *)[v48 wordAtCharIndex:v33 includePreviousWord:0];
    uint64_t v36 = v35;
    uint64_t v37 = NSNotFound.getter();
    uint64_t v38 = &v34[v36];
    if (v34 == (char *)v37) {
      uint64_t v38 = v33;
    }
    if (!__OFSUB__(v38, v17)) {
      return v17;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_22:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"rangeByExpanding(toIncludePartialWords:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2007, (uint64_t)"Illegal range past end of storage: %lu vs %lu", 45, 2u, v3);
  sub_100586FD4(v3, (uint64_t)"Illegal range past end of storage: %lu vs %lu");
  sub_1005871AC(v3, (uint64_t)"rangeByExpanding(toIncludePartialWords:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2007);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v40, v41);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10090BAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v16 = __chkstk_darwin(v14 - 8, v15);
  char v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v19)
  {
    (*(void (**)(__n128))(*(void *)v19 + 760))(v16);
    sub_100919454((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v18, v5);
    sub_100918D58((uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v20 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    id v21 = [v20 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v22 crlwp_isAllWhitespaceInRange:a1, a2];
  }
  else
  {
    __break(1u);
  }
}

double sub_10090BDAC@<D0>(uint64_t *a1@<X8>)
{
  sub_1008EE72C((char *)*v1, (uint64_t)v12);
  a1[3] = (uint64_t)&type metadata for CRLWPTextPresetData;
  a1[4] = sub_100842C40();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;
  long long v4 = v24;
  *(_OWORD *)(v3 + 208) = v23;
  *(_OWORD *)(v3 + 224) = v4;
  *(_OWORD *)(v3 + 240) = v25;
  *(void *)(v3 + 256) = v26;
  long long v5 = v20;
  *(_OWORD *)(v3 + 144) = v19;
  *(_OWORD *)(v3 + 160) = v5;
  long long v6 = v22;
  *(_OWORD *)(v3 + 176) = v21;
  *(_OWORD *)(v3 + 192) = v6;
  long long v7 = v16;
  *(_OWORD *)(v3 + 80) = v15;
  *(_OWORD *)(v3 + 96) = v7;
  long long v8 = v18;
  *(_OWORD *)(v3 + 112) = v17;
  *(_OWORD *)(v3 + 128) = v8;
  long long v9 = v12[1];
  *(_OWORD *)(v3 + 16) = v12[0];
  *(_OWORD *)(v3 + 32) = v9;
  double result = *(double *)&v13;
  long long v11 = v14;
  *(_OWORD *)(v3 + 48) = v13;
  *(_OWORD *)(v3 + 64) = v11;
  return result;
}

BOOL sub_10090BE58(char a1)
{
  return (a1 & 0xFB) == 0;
}

id sub_10090BE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v7 = v6;
  id result = [v7 range];
  if (!a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (!a5)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  id v15 = result;
  uint64_t v16 = v14;
  id v17 = objc_allocWithZone((Class)CRLWPSearch);
  swift_bridgeObjectRetain();
  sub_1005173A0(a5);
  swift_unknownObjectRetain();
  id v18 = v7;
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = a5;
  void aBlock[5] = a6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1006EC7D8;
  aBlock[3] = &unk_10151A700;
  long long v20 = _Block_copy(aBlock);
  id v21 = [v17 initWithString:v19 options:a3 hitBlock:v20 storage:v18 range:v15 searchCanvasDelegate:a4];

  swift_unknownObjectRelease();
  _Block_release(v20);
  swift_release();
  sub_10090C11C(v21);
  if ([v21 isComplete])
  {

    return 0;
  }
  return v21;
}

id sub_10090C11C(void *a1)
{
  id v3 = [a1 storageChangeCount];
  if (v3 == [v1 changeCount])
  {
    long long v4 = (char *)[v1 range];
    uint64_t v6 = v5;
    long long v7 = (char *)[a1 range];
    if (v4 > v7 || &v4[v6] < &v7[v8])
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"continueWP(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2168, (uint64_t)"Expected search range to be within storage range.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v23) = 2;
      id v21 = "Expected search range to be within storage range.";
      uint64_t v22 = 49;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"continueWP(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2168);
    }
    id v10 = [v1 range:v21, v22, v23];
    NSUInteger v12 = v11;
    v27.location = (NSUInteger)[a1 range];
    v27.length = v13;
    v26.location = (NSUInteger)v10;
    v26.length = v12;
    NSRange v15 = NSIntersectionRange(v26, v27);
    id result = (id)v15.location;
    NSRange v24 = v15;
    if ((uint64_t)v15.length >= 1)
    {
      id result = [v1 wpKind];
      if (result != 7)
      {
        NSString v16 = [a1 searchedString];
        if (!v16)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v16 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        id v17 = [a1 string];
        id v18 = [v16 crl_rangeOfString:v17 options:[a1 options] updatingSearchRange:&v24];
        uint64_t v20 = v19;

        if (v18 != (id)NSNotFound.getter()) {
          [a1 foundHitWithRange:v18, v20];
        }
        return [a1 setRange:v24.location, v24.length];
      }
    }
  }
  else
  {
    return [a1 setRange:0x7FFFFFFFFFFFFFFFLL, 0];
  }
  return result;
}

void sub_10090C3F8(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = (void *)v2;
    id v6 = a1;
    sub_10090C11C(v3);
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    sub_10050BF48(0, &qword_101687B30);
    sub_1005057FC(&qword_101687B38);
    sub_1005057FC(&qword_101672B50);
    swift_dynamicCast();
    *(void *)(inited + 96) = sub_10050BF48(0, &qword_101687B40);
    *(void *)(inited + 104) = sub_10062E0F4(&qword_101687B48, &qword_101687B40);
    *(void *)(inited + 72) = a1;
    id v5 = a1;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"continue(_:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2156, (uint64_t)"Expected search class of type %@, instead recieved %@.", 54, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"continue(_:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2156);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
}

id sub_10090C66C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101687B10);
  __chkstk_darwin(v4 - 8, v5);
  long long v7 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  NSUInteger v11 = (char *)&v102 - v10;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_1016837D0);
  __chkstk_darwin(v12 - 8, v13);
  NSRange v15 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v102 - v18;
  uint64_t v120 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v20 = *(void *)(v120 - 8);
  __chkstk_darwin(v120, v21);
  uint64_t v119 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v118, v23);
  uint64_t v117 = (char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v116 = (uint64_t)&v102 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = [objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup()) init];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  id v30 = (id)Strong;
  type metadata accessor for CRLWPShapeItem();
  uint64_t v31 = swift_dynamicCastClass();
  if (!v31)
  {

LABEL_7:
    sub_1005057FC((uint64_t *)&unk_101672B40);
    initeCGFloat d = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = type metadata accessor for CRLWPStorage();
    *(void *)(inited + 64) = sub_100912338((unint64_t *)&unk_101687B20, v36, (void (*)(uint64_t))type metadata accessor for CRLWPStorage);
    *(void *)(inited + 32) = v2;
    uint64_t v37 = v2;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandForReplaceAll(with:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2189, (uint64_t)"Text storage has no parent info: %@", 35, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"commandForReplaceAll(with:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2189);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    return v28;
  }
  uint64_t v32 = v31;
  if (![v2 canUserReplaceText])
  {
LABEL_37:

    return v28;
  }
  uint64_t v109 = v32;
  unint64_t v33 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v123 = (unint64_t)_swiftEmptyArrayStorage;
  id v121 = [v2 range];
  uint64_t v122 = v34;
  if (v34 < 1)
  {
LABEL_31:
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v101 >= 1) {
        goto LABEL_33;
      }
    }
    else if (*(uint64_t *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_33:
      unint64_t v98 = swift_bridgeObjectRetain();
      sub_100E17A64(v98);
      swift_beginAccess();
      unint64_t v99 = swift_bridgeObjectRetain();
      sub_1006E1FE0(v99);
      swift_endAccess();
      id result = (id)swift_bridgeObjectRelease();
      if (!a1) {
        goto LABEL_51;
      }
      if (v33 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease_n();
        if (v100 < 0)
        {
          _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
        }
      }
      else
      {
        uint64_t v100 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
      }
      [a1 appendReplacementCount:v100];
      goto LABEL_37;
    }

    swift_bridgeObjectRelease();
    return v28;
  }
  uint64_t v106 = v19;
  uint64_t v107 = v15;
  uint64_t v104 = v11;
  uint64_t v105 = v7;
  id v110 = v30;
  id v108 = v28;
  unint64_t v114 = (void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v115 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v113 = (void (**)(char *, uint64_t))(v20 + 8);
  while (1)
  {
    uint64_t v40 = *(void *)&v2[v115];
    if (!v40) {
      goto LABEL_45;
    }
    Swift::String v41 = v2;
    id v42 = v121;
    uint64_t v43 = (uint64_t)v117;
    (*(void (**)(void))(*(void *)v40 + 760))();
    uint64_t v44 = v116;
    sub_100919454(v43 + *(int *)(v118 + 20), v116, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58(v43, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v45 = *v114;
    uint64_t v47 = v119;
    uint64_t v46 = v120;
    (*v114)(v119, v44, v120);
    sub_100918D58(v44, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v48 = (void *)CRAttributedString.attributedString.getter();
    uint64_t v49 = *v113;
    (*v113)(v47, v46);
    id v50 = [v48 length];

    if ((uint64_t)v42 >= (uint64_t)v50)
    {
LABEL_30:
      unint64_t v33 = v123;
      id v28 = v108;
      id v30 = v110;
      goto LABEL_31;
    }
    if (!a1) {
      goto LABEL_46;
    }
    id v51 = [a1 findString];
    if (!v51) {
      goto LABEL_47;
    }
    unint64_t v52 = v51;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v53 = a1;
    id v54 = [a1 options];
    uint64_t v55 = *(void *)&v41[v115];
    if (!v55) {
      goto LABEL_48;
    }
    id v56 = v54;
    uint64_t v57 = (uint64_t)v117;
    (*(void (**)(void))(*(void *)v55 + 760))();
    uint64_t v58 = v116;
    sub_100919454(v57 + *(int *)(v118 + 20), v116, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58(v57, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v60 = v119;
    uint64_t v59 = v120;
    v45(v119, v58, v120);
    sub_100918D58(v58, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v61 = (void *)CRAttributedString.attributedString.getter();
    v49(v60, v59);
    id v62 = [v61 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v63 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v64 = String._bridgeToObjectiveC()();
    id v65 = [v63 crl_rangeOfString:v64 searchOptions:v56 updatingSearchRange:&v121];
    uint64_t v67 = v66;
    swift_bridgeObjectRelease();

    a1 = v53;
    uint64_t v2 = v41;
    if (v65 != (id)NSNotFound.getter())
    {
      id v68 = [objc_allocWithZone((Class)CRLWPSelection) initWithRange:v65, v67];
      if (v68) {
        break;
      }
    }
LABEL_11:
    if (v122 <= 0) {
      goto LABEL_30;
    }
  }
  uint64_t v39 = v68;
  id v69 = [objc_allocWithZone((Class)CRLWPSearchReference) initWithStorage:v41 selection:v68 selectionPath:0];
  if (!v69)
  {
LABEL_10:

    goto LABEL_11;
  }
  id v70 = v69;
  if (([v69 isReplaceable] & 1) == 0)
  {
    uint64_t v38 = v39;
    uint64_t v39 = v70;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v111 = v70;
  id result = [v53 replaceString];
  if (!result) {
    goto LABEL_50;
  }
  id v112 = result;
  uint64_t v72 = *(void *)&v41[v115];
  if (v72)
  {
    uint64_t v73 = (uint64_t)v117;
    (*(void (**)(void))(*(void *)v72 + 760))();
    uint64_t v74 = v116;
    sub_100919454(v73 + *(int *)(v118 + 20), v116, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58(v73, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v76 = v119;
    uint64_t v75 = v120;
    v45(v119, v74, v120);
    sub_100918D58(v74, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v77 = (void *)CRAttributedString.attributedString.getter();
    v49(v76, v75);
    id v78 = [v77 string];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v79 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    a1 = v53;
    id v80 = [v53 options];
    id v81 = v112;
    id v82 = [v112 crl_stringByCapitalizingToMatchString:v79 range:v65 searchOptions:v67];

    if (v82)
    {
      uint64_t v83 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v112 = v84;

      uint64_t v85 = NSNotFound.getter();
      uint64_t v86 = (uint64_t)v107;
      uint64_t v87 = (uint64_t)v106;
      if (v65 == (id)v85) {
        goto LABEL_43;
      }
      uint64_t v103 = v83;
      BOOL v88 = __OFADD__(v65, v67);
      uint64_t v89 = (uint64_t)v65 + v67;
      if (v88) {
        goto LABEL_44;
      }
      uint64_t v2 = v41;
      uint64_t v90 = sub_1005057FC((uint64_t *)&unk_101683740);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v87, 1, 1, v90);
      uint64_t v91 = sub_1005057FC(&qword_101687A90);
      uint64_t v92 = (uint64_t)v104;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v104, 1, 1, v91);
      sub_100522E9C(v87, v86, (uint64_t *)&unk_1016837D0);
      uint64_t v93 = (uint64_t)v105;
      sub_100522E9C(v92, (uint64_t)v105, (uint64_t *)&unk_101687B10);
      id v94 = objc_allocWithZone((Class)type metadata accessor for CRLWPReplaceTextCommand(0));
      id v95 = v110;
      id v96 = sub_1007A8FA0(v109, (uint64_t)v65, v89, v103, (uint64_t)v112, 0, v86, v93);
      sub_100522F00(v92, (uint64_t *)&unk_101687B10);
      sub_100522F00(v87, (uint64_t *)&unk_1016837D0);
      id v97 = v96;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v123 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      uint64_t v38 = v111;
    }
    else
    {
      uint64_t v38 = v39;
      uint64_t v39 = v111;
      uint64_t v2 = v41;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_10090D450()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 1;
  }
  uint64_t v1 = (void *)Strong;
  type metadata accessor for CRLBoardItem(0);
  while (1)
  {
    id v3 = (void *)swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xF8);
      uint64_t v5 = swift_unknownObjectRetain();
      char v6 = v4(v5);
      swift_unknownObjectRelease();
      if (v6) {
        break;
      }
    }
    id v2 = [v1 parentInfo];
    swift_unknownObjectRelease();
    uint64_t v1 = v2;
    if (!v2) {
      return 1;
    }
  }
  swift_unknownObjectRelease();
  return 0;
}

void sub_10090D54C(CFIndex a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v35 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)&v32 - v22;
  uint64_t v36 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v37 = v1;
  uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v24) {
    goto LABEL_13;
  }
  (*(void (**)(__n128))(*(void *)v24 + 760))(v21);
  sub_100919454((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v23, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v34(v10, v23, v3);
  sub_100918D58((uint64_t)v23, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v25 = (void *)CRAttributedString.attributedString.getter();
  unint64_t v33 = *(void (**)(char *, uint64_t))(v4 + 8);
  v33(v10, v3);
  id v26 = [v25 length];

  if (a1 < 0 || (uint64_t)v26 < a1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"nextCharacterIndex(_:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2255, (uint64_t)"Character index is outside storage bounds", 41, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"nextCharacterIndex(_:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2255);
    if ((uint64_t)v26 <= a1) {
      return;
    }
  }
  else if ((uint64_t)v26 <= a1)
  {
    return;
  }
  uint64_t v27 = *(void *)(v37 + v36);
  if (!v27)
  {
LABEL_14:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(void *)v27 + 760))();
  sub_100919454((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
  id v28 = v35;
  v34(v35, v18, v3);
  sub_100918D58((uint64_t)v18, type metadata accessor for CRLWPStorageCRDTData);
  long long v29 = (void *)CRAttributedString.attributedString.getter();
  v33(v28, v3);
  id v30 = (__CFString *)[v29 string];

  if (!v30)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v30 = (__CFString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  CFRange RangeOfComposedCharactersAtIndex = CFStringGetRangeOfComposedCharactersAtIndex(v30, a1);

  if (__OFADD__(RangeOfComposedCharactersAtIndex.location, RangeOfComposedCharactersAtIndex.length))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
}

void sub_10090DA34(uint64_t a1)
{
  uint64_t v54 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v48 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v19 = __chkstk_darwin(v17, v18);
  __n128 v21 = (char *)&v44 - v20;
  uint64_t v22 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v53 = v1;
  uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v23)
  {
    __break(1u);
    goto LABEL_14;
  }
  (*(void (**)(__n128))(*(void *)v23 + 760))(v19);
  sub_100919454((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v21, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v24(v9, v21, v2);
  sub_100918D58((uint64_t)v21, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v25 = (void *)CRAttributedString.attributedString.getter();
  id v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v50 = v3 + 8;
  id v51 = v26;
  v26(v9, v2);
  id v52 = [v25 length];

  sub_1005057FC((uint64_t *)&unk_101672B40);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v54;
  uint64_t v47 = v22;
  uint64_t v28 = *(void *)(v53 + v22);
  if (!v28)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v29 = v10;
  id v30 = (void *)inited;
  (*(void (**)(void))(*(void *)v28 + 760))();
  uint64_t v46 = v29;
  sub_100919454((uint64_t)&v13[*(int *)(v29 + 20)], (uint64_t)v21, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v45 = (void (*)(char *, uint64_t, uint64_t))v24;
  v24(v9, v21, v2);
  sub_100918D58((uint64_t)v21, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v31 = (void *)CRAttributedString.attributedString.getter();
  uint64_t v44 = v2;
  uint64_t v32 = v2;
  unint64_t v33 = v51;
  v51(v9, v32);
  id v34 = [v31 length];

  v30[12] = &type metadata for Int;
  v30[13] = &protocol witness table for Int;
  v30[9] = v34;
  uint64_t v35 = v54;
  if (v54 < 0 || (uint64_t)v52 < v54)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"previousCharacterIndex(_:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2271, (uint64_t)"Character index is outside storage bounds %lu / %lu", 51, 2u, (uint64_t)v30);
    sub_1005598CC((uint64_t)v30, (uint64_t)"previousCharacterIndex(_:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 2271);
  }
  uint64_t v36 = swift_bridgeObjectRelease();
  CFIndex v37 = v35 - 1;
  if (v35 >= 1 && (uint64_t)v52 >= v35)
  {
    uint64_t v38 = *(void *)(v53 + v47);
    if (v38)
    {
      (*(void (**)(uint64_t))(*(void *)v38 + 760))(v36);
      uint64_t v39 = v48;
      sub_100919454((uint64_t)&v13[*(int *)(v46 + 20)], v48, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v40 = v49;
      uint64_t v41 = v44;
      v45(v49, v39, v44);
      sub_100918D58(v39, type metadata accessor for CRLWPStorageCRDTData);
      id v42 = (void *)CRAttributedString.attributedString.getter();
      v33(v40, v41);
      uint64_t v43 = (__CFString *)[v42 string];

      if (!v43)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = (__CFString *)String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      CFStringGetRangeOfComposedCharactersAtIndex(v43, v37);

      return;
    }
LABEL_15:
    __break(1u);
  }
}

uint64_t sub_10090E0B4(uint64_t a1, char a2, char a3)
{
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v21)
  {
    (*(void (**)(__n128))(*(void *)v21 + 760))(v18);
    sub_100919454((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v20, v7);
    sub_100918D58((uint64_t)v20, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v22 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    id v23 = [v22 string];

    NSString v24 = v23;
    NSString v25 = v23;
    if (!v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    if ((a1 & 0x8000000000000000) == 0)
    {
      id v26 = v23;
      id v27 = [v24 crl_range];
      uint64_t v29 = v28;

      id v30 = [v25 crlwp_rangeOfWordAtCharacterIndex:a1 range:v27 includePreviousWord:(a2 & 1) includeHyphenation:(a3 & 1)];
      return (uint64_t)v30;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10090E464()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[0] = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v36[0], v5);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101683740);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (void *)((char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v15 = &_swiftEmptySetSingleton;
  uint64_t v17 = (uint64_t)v15 + *(int *)(v16 + 44);
  sub_1005D3BF8();
  CRAttributedString.Attributes.init()();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100CB8180(v37, 0x656D614E746E6F66, 0xE800000000000000);
  swift_bridgeObjectRelease();
  v36[6] = &type metadata for CRLWPCharacterScope;
  v36[7] = &type metadata for CRLWPFontNameAttribute;
  v36[8] = sub_10083E550();
  v36[9] = KeyPath;
  swift_getKeyPath();
  swift_retain();
  v37[0] = sub_100B149FC(0x63697465766C6548, 0xE900000000000061);
  v37[1] = v19;
  char v38 = 0;
  sub_1005057FC((uint64_t *)&unk_1016836C0);
  sub_10091307C();
  CRAttributedString.Attributes.subscript.setter();
  swift_release();
  uint64_t v20 = swift_getKeyPath();
  sub_100CB8180(v37, 0x657A6953746E6F66, 0xE800000000000000);
  swift_bridgeObjectRelease();
  v36[2] = &type metadata for CRLWPCharacterScope;
  v36[3] = &type metadata for CRLWPFontSizeAttribute;
  void v36[4] = sub_10083E4FC();
  v36[5] = v20;
  swift_getKeyPath();
  LODWORD(v37[0]) = 1096810496;
  BYTE4(v37[0]) = 0;
  sub_10083E5B0();
  uint64_t v21 = v36[1];
  uint64_t v22 = CRAttributedString.Attributes.subscript.setter();
  uint64_t v23 = *(void *)(v21 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v23)
  {
    (*(void (**)(uint64_t))(*(void *)v23 + 760))(v22);
    sub_100919454((uint64_t)&v7[*(int *)(v36[0] + 20)], (uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
    sub_100918D58((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v11, v0);
    sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
    NSString v24 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    uint64_t v25 = (uint64_t)[v24 length];

    if ((v25 & 0x8000000000000000) == 0)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v27 = (void *)Strong;
        swift_getObjectType();
        uint64_t v28 = swift_conformsToProtocol2();
        if (v28) {
          uint64_t v29 = v28;
        }
        else {
          uint64_t v29 = 0;
        }
        if (v28) {
          id v30 = v27;
        }
        else {
          id v30 = 0;
        }
        if (v30)
        {
          uint64_t ObjectType = swift_getObjectType();
          char v32 = sub_100FC1058(ObjectType, v29);

          if ((v32 & 1) == 0)
          {
LABEL_16:
            sub_100522F00((uint64_t)v15, (uint64_t *)&unk_101683740);
            return;
          }
        }
        else
        {
        }
      }
      sub_1008F8540(0, v25, v21);
      if ((v35 & 1) == 0)
      {
        sub_10090614C(v17, v33, v34);
        *(unsigned char *)(v21 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
      }
      goto LABEL_16;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t destroy for CRLEditableBezierPathSourceData.Node()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLWPStorage.ListRun(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLWPStorage.ListRun(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLWPStorage.ListRun(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLEditableBezierPathSourceData.Node(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLEditableBezierPathSourceData.Node(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPStorage.ListRun()
{
  return &type metadata for CRLWPStorage.ListRun;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLWPStorage.HyperlinkRun(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void destroy for CRLWPStorage.HyperlinkRun(uint64_t a1)
{
}

void *assignWithCopy for CRLWPStorage.HyperlinkRun(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = (void *)a2[2];
  id v4 = (void *)a1[2];
  a1[2] = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for CRLWPStorage.HyperlinkRun(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for CRLWPStorage.HyperlinkRun()
{
  return &type metadata for CRLWPStorage.HyperlinkRun;
}

void destroy for CRLWPStorage.ParagraphStyleRun(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for CRLWPStorage.ParagraphStyleRun(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 16);
  id v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v6 = v3;
  id v7 = v4;
  return a1;
}

uint64_t assignWithCopy for CRLWPStorage.ParagraphStyleRun(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  id v7 = *(void **)(a1 + 24);
  uint64_t v8 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v8;
  id v9 = v8;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v10;
  return a1;
}

__n128 initializeWithCopy for CRLBezierPathPointData(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CRLWPStorage.ParagraphStyleRun(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPStorage.ParagraphStyleRun(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPStorage.ParagraphStyleRun(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPStorage.ParagraphStyleRun()
{
  return &type metadata for CRLWPStorage.ParagraphStyleRun;
}

ValueMetadata *type metadata accessor for CRLWPStorage.CharacterStyleRun()
{
  return &type metadata for CRLWPStorage.CharacterStyleRun;
}

ValueMetadata *type metadata accessor for CRLWPWritingDirectionAttribute()
{
  return &type metadata for CRLWPWritingDirectionAttribute;
}

ValueMetadata *type metadata accessor for CRLWPParagraphAlignmentAttribute()
{
  return &type metadata for CRLWPParagraphAlignmentAttribute;
}

ValueMetadata *type metadata accessor for CRLWPHyperlinkAttribute()
{
  return &type metadata for CRLWPHyperlinkAttribute;
}

ValueMetadata *type metadata accessor for CRLWPParagraphLevelAttribute()
{
  return &type metadata for CRLWPParagraphLevelAttribute;
}

ValueMetadata *type metadata accessor for CRLWPListStartAttribute()
{
  return &type metadata for CRLWPListStartAttribute;
}

ValueMetadata *type metadata accessor for CRLWPListStyleTypeAttribute()
{
  return &type metadata for CRLWPListStyleTypeAttribute;
}

ValueMetadata *type metadata accessor for CRLWPCharacterFillAttribute()
{
  return &type metadata for CRLWPCharacterFillAttribute;
}

ValueMetadata *type metadata accessor for CRLWPFontNameAttribute()
{
  return &type metadata for CRLWPFontNameAttribute;
}

ValueMetadata *type metadata accessor for CRLWPParagraphScope()
{
  return &type metadata for CRLWPParagraphScope;
}

ValueMetadata *type metadata accessor for CRLWPCharacterScope()
{
  return &type metadata for CRLWPCharacterScope;
}

ValueMetadata *type metadata accessor for CRLWPListStyleType()
{
  return &type metadata for CRLWPListStyleType;
}

void sub_10090EF00()
{
  sub_100910744(319, &qword_1016871A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for CRAttributedString.Attributes);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_10090EFB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 36);
    id v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1005057FC((uint64_t *)&unk_1016836C0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_10090F084(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10090F100(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_10090F184(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_10090F21C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_10090F29C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_10090F32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10090F340);
}

uint64_t sub_10090F340(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016836C0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10090F3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10090F408);
}

void *sub_10090F408(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016836C0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CRLWPAttributeDictionary()
{
  return sub_100568E70();
}

ValueMetadata *type metadata accessor for CRLWPStrikethroughAttribute()
{
  return &type metadata for CRLWPStrikethroughAttribute;
}

ValueMetadata *type metadata accessor for CRLWPUnderlineAttribute()
{
  return &type metadata for CRLWPUnderlineAttribute;
}

ValueMetadata *type metadata accessor for CRLWPFontItalicAttribute()
{
  return &type metadata for CRLWPFontItalicAttribute;
}

ValueMetadata *type metadata accessor for CRLWPFontBoldAttribute()
{
  return &type metadata for CRLWPFontBoldAttribute;
}

void *sub_10090F50C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_1005057FC(&qword_101672E90);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)((char *)v4 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    *(void *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10090F6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10090F79C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1005057FC(&qword_101672E90);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10090F8F0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_1005057FC(&qword_101672E90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10090FAC8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1005057FC(&qword_101672E90);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_10090FC08(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1005057FC(&qword_101672E90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10090FDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10090FDDC);
}

uint64_t sub_10090FDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672E90);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10090FEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10090FEBC);
}

uint64_t sub_10090FEBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_101672E90);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLWPHyperlinkSmartFieldData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101687200);
}

void sub_10090FFA4()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for CRLWPFontSizeAttribute()
{
  return &type metadata for CRLWPFontSizeAttribute;
}

uint64_t *sub_100910064(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167BC20);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100910160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100910204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1009102B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100910368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100910410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009104C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009104D4);
}

uint64_t sub_1009104D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100910598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009105AC);
}

uint64_t sub_1009105AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLWPStorageCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016872A8);
}

void sub_10091068C()
{
  sub_100910744(319, (unint64_t *)&unk_1016872B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))&type metadata accessor for CRAttributedString);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100910744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1005D3BF8();
    unint64_t v7 = a3(a1, &type metadata for CRLTextAttributeScope, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *sub_1009107A8()
{
  uint64_t v1 = [objc_allocWithZone((Class)type metadata accessor for CRLWPParagraphStyle()) init];
  uint64_t v2 = sub_10091420C(v0);
  uint64_t v3 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName];
  *uint64_t v3 = v2;
  v3[1] = v4;
  swift_bridgeObjectRelease();
  sub_100914624((uint64_t)v0);
  int v5 = &v1[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize];
  *(_DWORD *)int v5 = v6;
  v5[4] = 0;
  v1[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold] = sub_1009148C8((uint64_t)v0) & 1;
  v1[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic] = sub_100914B64((uint64_t)v0) & 1;
  uint64_t v7 = sub_100914E00(v0);
  uint64_t v8 = &v1[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline];
  *(void *)uint64_t v8 = v7;
  v8[8] = 0;
  uint64_t v9 = sub_100915190(v0);
  unint64_t v10 = &v1[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough];
  *(void *)unint64_t v10 = v9;
  v10[8] = 0;
  id v11 = sub_100915524(v0);
  unint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill];
  *(void *)&v1[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill] = v11;

  *(void *)&v1[OBJC_IVAR____TtC8Freeform19CRLWPParagraphStyle_alignment] = sub_100915C0C(v0);
  return v1;
}

uint64_t sub_1009108EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, uint64_t a7, double **a8)
{
  uint64_t result = NSNotFound.getter();
  if (result == a5) {
    return result;
  }
  unint64_t v12 = (char *)a6 + a5;
  if (__OFADD__(a5, a6))
  {
    __break(1u);
    goto LABEL_9;
  }
  a8 += 2;
  swift_beginAccess();
  a6 = *a8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a8 = a6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    a6 = sub_100F627B8(0, *((void *)a6 + 2) + 1, 1, a6);
    *a8 = a6;
  }
  unint64_t v15 = *((void *)a6 + 2);
  unint64_t v14 = *((void *)a6 + 3);
  if (v15 >= v14 >> 1)
  {
    a6 = sub_100F627B8((double *)(v14 > 1), v15 + 1, 1, a6);
    *a8 = a6;
  }
  *((void *)a6 + 2) = v15 + 1;
  uint64_t v16 = &a6[2 * v15];
  *((void *)v16 + 4) = a5;
  *((void *)v16 + 5) = v12;
  return swift_endAccess();
}

uint64_t sub_1009109DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  swift_retain();
  v12(v13, v15, a3, a4, a5, a6, a7);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100910A9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (*(void *)result)
  {
    uint64_t v7 = *a4;
    id v8 = *(id *)result;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100F646C8(0, *(void *)(v7 + 16) + 1, 1, (double *)v7);
      uint64_t v7 = result;
      *a4 = result;
    }
    unint64_t v10 = *(void *)(v7 + 16);
    unint64_t v9 = *(void *)(v7 + 24);
    if (v10 >= v9 >> 1)
    {
      uint64_t result = (uint64_t)sub_100F646C8((double *)(v9 > 1), v10 + 1, 1, (double *)v7);
      uint64_t v7 = result;
    }
    *(void *)(v7 + 16) = v10 + 1;
    id v11 = (void *)(v7 + 24 * v10);
    void v11[4] = a2;
    v11[5] = a3;
    v11[6] = v8;
    *a4 = v7;
  }
  return result;
}

char *sub_100910B6C(char *a1, char *a2, uint64_t a3, char a4)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = sub_10103EFE4(KeyPath, a1, a2, (char *)a3);
  char v12 = v11;
  swift_release();
  if (v12)
  {
    if (!*(void *)(v10 + 16))
    {
      __break(1u);
      goto LABEL_17;
    }
    float v4 = *(float *)(v10 + 32);
    sub_1006F23FC(v10, 1);
  }
  else
  {
    float v4 = *(float *)&v10;
  }
  uint64_t v13 = swift_getKeyPath();
  a3 = sub_10103B9D8(v13, a1, a2, (char *)a3);
  char v15 = v14;
  swift_release();
  if ((v15 & 1) == 0) {
    goto LABEL_10;
  }
  if ((a3 & 0xC000000000000001) == 0)
  {
    if (!*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      JUMPOUT(0x100910D2CLL);
    }
    id v16 = *(id *)(a3 + 32);
    goto LABEL_9;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  sub_10083E3A0((void *)a3, 1);
LABEL_9:
  sub_10083E3A0((void *)a3, 1);
  a3 = (uint64_t)v16;
LABEL_10:
  id v17 = [(id)a3 referenceColor];

  switch(a4)
  {
    case 1:
      uint64_t v19 = sub_10075292C(v17, v4);
      break;
    case 2:
      *(float *)&double v18 = v4;
      uint64_t v19 = sub_100752A94(v17, v18);
      break;
    case 3:
      *(float *)&double v18 = v4;
      uint64_t v19 = sub_100752C00(v17, v18);
      break;
    default:
      uint64_t v19 = sub_1007527C8(v17, v4);
      break;
  }
  uint64_t v20 = v19;

  return v20;
}

uint64_t sub_100910D3C(uint64_t a1)
{
  uint64_t v89 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v85 = *(void (***)(char *, uint64_t))(v89 - 8);
  __chkstk_darwin(v89, v2);
  BOOL v88 = (char *)v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v87 = (char *)v81 - v6;
  uint64_t v7 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  id v95 = (char *)v81 - v13;
  uint64_t v100 = sub_1005057FC(&qword_1016879D0);
  uint64_t v90 = *(void (***)(char *, uint64_t))(v100 - 8);
  __chkstk_darwin(v100, v14);
  unint64_t v98 = (char *)v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  id v97 = (char *)v81 - v18;
  __chkstk_darwin(v19, v20);
  id v94 = (char *)v81 - v21;
  __chkstk_darwin(v22, v23);
  unint64_t v99 = (char *)v81 - v24;
  uint64_t v93 = sub_1005057FC(&qword_1016879D8);
  __chkstk_darwin(v93, v25);
  uint64_t v92 = (char *)v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_1016879E0);
  uint64_t v91 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v28);
  uint64_t v86 = (char *)v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1005057FC(&qword_1016879E8);
  __chkstk_darwin(v82, v30);
  uint64_t v83 = (char *)v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1005057FC(&qword_1016879F0);
  __chkstk_darwin(v84, v32);
  uint64_t v96 = (uint64_t)v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC((uint64_t *)&unk_10167BC20);
  v81[1] = a1;
  uint64_t v34 = (void *)CRAttributedString.attributedString.getter();
  id v35 = [v34 string];

  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  uint64_t v39 = (void *)CRAttributedString.attributedString.getter();
  id v40 = [v39 string];

  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v42;

  if (v36 == v41 && v38 == v43)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v45 = 0;
    if ((v44 & 1) == 0) {
      return v45 & 1;
    }
  }
  uint64_t v46 = v83;
  CRAttributedString.runs.getter();
  uint64_t v47 = &v46[*(int *)(v82 + 52)];
  CRAttributedString.runs.getter();
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
  uint64_t v49 = v86;
  v48(v86, v46, v27);
  sub_100523288(&qword_1016879F8, &qword_1016879E0);
  uint64_t v50 = v96;
  dispatch thunk of Sequence.makeIterator()();
  v48(v49, v47, v27);
  uint64_t v51 = v84;
  uint64_t v91 = v50 + *(int *)(v84 + 52);
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v86 = (char *)*(int *)(v51 + 56);
  v86[v50] = 0;
  uint64_t v52 = sub_100523288(&qword_101687A00, &qword_1016879E0);
  uint64_t v53 = (char *)(v90 + 6);
  uint64_t v54 = (void (**)(char *, char *, uint64_t))(v90 + 4);
  uint64_t v84 = v52;
  ++v85;
  ++v90;
  uint64_t v55 = v100;
  uint64_t v83 = v53;
  while (1)
  {
    id v56 = v95;
    dispatch thunk of IteratorProtocol.next()();
    uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))v53;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v53)(v56, 1, v55) == 1)
    {
      uint64_t v10 = v56;
LABEL_15:
      uint64_t v78 = v96;
      sub_100522F00((uint64_t)v10, &qword_1016879C8);
      char v45 = 1;
      v86[v78] = 1;
      goto LABEL_18;
    }
    uint64_t v58 = *v54;
    (*v54)(v99, v56, v55);
    dispatch thunk of IteratorProtocol.next()();
    if (v57(v10, 1, v55) == 1)
    {
      (*v90)(v99, v55);
      goto LABEL_15;
    }
    uint64_t v59 = v27;
    uint64_t v60 = v94;
    v58(v94, v10, v100);
    uint64_t v61 = v92;
    id v62 = &v92[*(int *)(v93 + 48)];
    v58(v92, v99, v100);
    v58(v62, v60, v100);
    v58(v97, v61, v100);
    v58(v98, v62, v100);
    uint64_t v63 = v100;
    uint64_t v64 = CRAttributedString.Runs.Run.range.getter();
    uint64_t v66 = v65;
    if (v64 != CRAttributedString.Runs.Run.range.getter() || v66 != v67) {
      break;
    }
    id v68 = v10;
    id v69 = v87;
    id v70 = v97;
    CRAttributedString.Runs.Run.attributes.getter();
    uint64_t v71 = v88;
    uint64_t v72 = v98;
    CRAttributedString.Runs.Run.attributes.getter();
    sub_1005D3BF8();
    char v45 = static CRAttributedString.Attributes.== infix(_:_:)();
    uint64_t v73 = *v85;
    uint64_t v74 = v71;
    uint64_t v75 = v89;
    (*v85)(v74, v89);
    v73(v69, v75);
    uint64_t v76 = *v90;
    uint64_t v77 = v72;
    uint64_t v55 = v100;
    (*v90)(v77, v100);
    v76(v70, v55);
    if ((v45 & 1) == 0) {
      goto LABEL_17;
    }
    uint64_t v78 = v96;
    uint64_t v10 = v68;
    uint64_t v27 = v59;
    uint64_t v53 = v83;
    if (v86[v96]) {
      goto LABEL_18;
    }
  }
  NSString v79 = *v90;
  (*v90)(v98, v63);
  v79(v97, v63);
  char v45 = 0;
LABEL_17:
  uint64_t v78 = v96;
LABEL_18:
  sub_100522F00(v78, &qword_1016879F0);
  return v45 & 1;
}

uint64_t sub_1009115D0()
{
  qword_10171AE88 = 97;
  unk_10171AE90 = 0xE100000000000000;
  qword_10171AE98 = swift_getKeyPath();
  unk_10171AEA0 = 98;
  qword_10171AEA8 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171AEB0 = result;
  return result;
}

uint64_t sub_100911628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __chkstk_darwin(a1, a2);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v16 - v10;
  char v13 = sub_100910D3C(v12);
  sub_100919454(a1, (uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
  sub_100919454(a2, (uint64_t)v7, type metadata accessor for CRLWPStorageCRDTData);
  if (v13) {
    char v14 = sub_100910D3C((uint64_t)&v11[*(int *)(a3 + 20)]);
  }
  else {
    char v14 = 0;
  }
  sub_100918D58((uint64_t)v7, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v11, type metadata accessor for CRLWPStorageCRDTData);
  return v14 & 1;
}

uint64_t sub_100911758@<X0>(void *a1@<X8>)
{
  if (qword_10166F458 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_10171AE90;
  uint64_t v4 = qword_10171AE98;
  uint64_t v3 = unk_10171AEA0;
  uint64_t v5 = qword_10171AEA8;
  uint64_t v6 = qword_10171AEB0;
  *a1 = qword_10171AE88;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_1009117F8(uint64_t a1)
{
  uint64_t v2 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return static CRStruct_2.fieldKeys.getter(a1, v2);
}

uint64_t sub_100911868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1005D3BF8();
  CRAttributedString.init()();
  uint64_t result = CRAttributedString.init(_:)();
  *(void *)(a2 + *(int *)(a1 + 24)) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_1009118E0(uint64_t a1)
{
  uint64_t v2 = sub_100912338(&qword_101687300, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100911950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.actionUndoingDifference(from:)(a1, a2, v4);
}

uint64_t sub_1009119D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.apply(_:)(a1, a2, v4);
}

uint64_t sub_100911A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.hasDelta(from:)(a1, a2, v4);
}

uint64_t sub_100911AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.delta(_:from:)(a1, a2, a3, v6);
}

uint64_t sub_100911B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100911BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.merge(delta:)(a1, a2, v4);
}

uint64_t sub_100911C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100911CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100911D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100911E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100911E98()
{
  sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.needToFinalizeTimestamps()();
}

uint64_t sub_100911F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100911F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.merge(_:)(a1, a2, v4);
}

uint64_t sub_100912008()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_10091208C()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100912120()
{
  return CRStruct_2.init(from:)();
}

uint64_t sub_1009121A4()
{
  return CRStruct_2.encode(to:)();
}

uint64_t sub_100912220(uint64_t a1)
{
  uint64_t v2 = sub_100912338((unint64_t *)&unk_101687A80, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);

  return CRStruct_2.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1009122A0()
{
  return sub_100912338(&qword_1016872F0, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
}

uint64_t sub_1009122EC()
{
  return sub_100912338(&qword_1016872F8, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
}

uint64_t sub_100912338(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100912380()
{
  return sub_100912338(&qword_101687300, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
}

uint64_t sub_1009123CC()
{
  return sub_100523288(&qword_101687308, (uint64_t *)&unk_101687310);
}

uint64_t sub_100912408()
{
  return sub_100912338(&qword_1016754A0, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
}

uint64_t sub_100912454()
{
  return sub_100912338(&qword_101687320, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
}

uint64_t sub_1009124A0()
{
  return sub_100523288(&qword_101687328, (uint64_t *)&unk_10167BC20);
}

uint64_t sub_1009124DC()
{
  return sub_100912338(&qword_101687330, 255, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
}

unint64_t sub_10091252C()
{
  unint64_t result = qword_101687338;
  if (!qword_101687338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687338);
  }
  return result;
}

void *sub_100912580()
{
  return &protocol witness table for Float;
}

void *sub_10091258C()
{
  return &protocol witness table for Float;
}

void *sub_100912598()
{
  return &protocol witness table for Float;
}

_UNKNOWN **sub_1009125A4()
{
  return &off_10151A4E8;
}

unint64_t sub_1009125B0(uint64_t a1)
{
  unint64_t result = sub_10083E5B0();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009125D8()
{
  return sub_100912338(&qword_101687390, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
}

uint64_t sub_100912624()
{
  return sub_100912338(&qword_101687398, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
}

uint64_t sub_100912670()
{
  return sub_100912338(&qword_1016873A0, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
}

uint64_t sub_1009126BC()
{
  return sub_100912338(&qword_1016873A8, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
}

uint64_t sub_100912708()
{
  return sub_100912338(&qword_1016873B0, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
}

unint64_t sub_100912758()
{
  unint64_t result = qword_1016873B8;
  if (!qword_1016873B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016873B8);
  }
  return result;
}

unint64_t sub_1009127B0()
{
  unint64_t result = qword_1016873C0;
  if (!qword_1016873C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016873C0);
  }
  return result;
}

unint64_t sub_100912808()
{
  unint64_t result = qword_1016873C8;
  if (!qword_1016873C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016873C8);
  }
  return result;
}

unint64_t sub_100912860()
{
  unint64_t result = qword_1016873D0;
  if (!qword_1016873D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016873D0);
  }
  return result;
}

unint64_t sub_1009128B8()
{
  unint64_t result = qword_1016873D8;
  if (!qword_1016873D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016873D8);
  }
  return result;
}

unint64_t sub_100912910()
{
  unint64_t result = qword_1016873E0;
  if (!qword_1016873E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016873E0);
  }
  return result;
}

uint64_t sub_100912964()
{
  return sub_100523288(&qword_1016873E8, &qword_1016873F0);
}

uint64_t sub_1009129A0()
{
  return sub_100912338(&qword_1016873F8, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
}

uint64_t sub_1009129EC()
{
  return sub_100912338(&qword_101687400, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
}

uint64_t sub_100912A38(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100912338(&qword_101687408, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
  uint64_t result = sub_100912338(&qword_101687410, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100912AC8()
{
  unint64_t result = qword_101687418;
  if (!qword_101687418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687418);
  }
  return result;
}

void *sub_100912B1C()
{
  return &protocol witness table for Bool;
}

void *sub_100912B28()
{
  return &protocol witness table for Bool;
}

void *sub_100912B34()
{
  return &protocol witness table for Bool;
}

unint64_t sub_100912B40(uint64_t a1)
{
  unint64_t result = sub_100843254();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100912B6C()
{
  unint64_t result = qword_101687470;
  if (!qword_101687470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687470);
  }
  return result;
}

unint64_t sub_100912BC0(uint64_t a1)
{
  unint64_t result = sub_100843200();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100912BEC()
{
  unint64_t result = qword_1016874C8;
  if (!qword_1016874C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016874C8);
  }
  return result;
}

uint64_t sub_100912C40()
{
  return sub_100523288((unint64_t *)&unk_1016874D0, &qword_10167BDF8);
}

uint64_t sub_100912C7C()
{
  return sub_100523288(&qword_1016874E0, &qword_10167BDF8);
}

uint64_t sub_100912CB8()
{
  return sub_100912338(&qword_1016874E8, 255, type metadata accessor for CRLWPUnderline);
}

unint64_t sub_100912D04(uint64_t a1)
{
  unint64_t result = sub_1008431AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100912D30()
{
  unint64_t result = qword_101687540;
  if (!qword_101687540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687540);
  }
  return result;
}

uint64_t sub_100912D84()
{
  return sub_100523288(&qword_101687548, &qword_101687550);
}

uint64_t sub_100912DC0()
{
  return sub_100523288(&qword_101687558, &qword_101687550);
}

uint64_t sub_100912DFC()
{
  return sub_100912338(&qword_101687560, 255, type metadata accessor for CRLWPStrikethru);
}

unint64_t sub_100912E48(uint64_t a1)
{
  unint64_t result = sub_100843158();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100912E74()
{
  unint64_t result = qword_1016875B8;
  if (!qword_1016875B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016875B8);
  }
  return result;
}

unint64_t sub_100912ECC()
{
  unint64_t result = qword_1016875C0;
  if (!qword_1016875C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016875C0);
  }
  return result;
}

unint64_t sub_100912F24()
{
  unint64_t result = qword_1016875C8;
  if (!qword_1016875C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016875C8);
  }
  return result;
}

unint64_t sub_100912F7C()
{
  unint64_t result = qword_1016875D0;
  if (!qword_1016875D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016875D0);
  }
  return result;
}

uint64_t sub_100912FD0()
{
  return sub_100523288(&qword_1016875D8, &qword_1016875E0);
}

uint64_t sub_10091300C()
{
  return sub_100523288(&qword_1016875E8, &qword_1016875E0);
}

void *sub_100913048()
{
  return &protocol witness table for String;
}

unint64_t sub_100913054(uint64_t a1)
{
  unint64_t result = sub_10091307C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10091307C()
{
  unint64_t result = qword_101687638;
  if (!qword_101687638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687638);
  }
  return result;
}

unint64_t sub_1009130D4()
{
  unint64_t result = qword_101687640;
  if (!qword_101687640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687640);
  }
  return result;
}

unint64_t sub_10091312C()
{
  unint64_t result = qword_101687648;
  if (!qword_101687648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687648);
  }
  return result;
}

unint64_t sub_100913184()
{
  unint64_t result = qword_101687650;
  if (!qword_101687650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687650);
  }
  return result;
}

uint64_t sub_1009131D8()
{
  return sub_10062E0F4(&qword_101687658, (unint64_t *)&qword_101687660);
}

unint64_t sub_10091321C(uint64_t a1)
{
  unint64_t result = sub_100913244();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100913244()
{
  unint64_t result = qword_1016876B0;
  if (!qword_1016876B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016876B0);
  }
  return result;
}

unint64_t sub_10091329C()
{
  unint64_t result = qword_1016876B8;
  if (!qword_1016876B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016876B8);
  }
  return result;
}

uint64_t sub_1009132F0()
{
  return sub_100523288((unint64_t *)&unk_1016876C0, &qword_10167BDC8);
}

uint64_t sub_10091332C()
{
  return sub_100523288(&qword_1016876D0, &qword_10167BDC8);
}

_UNKNOWN **sub_100913368()
{
  return &off_10151A4F8;
}

unint64_t sub_100913374(uint64_t a1)
{
  unint64_t result = sub_10083E210();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1009133A0()
{
  unint64_t result = qword_101687728;
  if (!qword_101687728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687728);
  }
  return result;
}

void *sub_1009133F4()
{
  return &protocol witness table for Int;
}

void *sub_100913400()
{
  return &protocol witness table for Int;
}

void *sub_10091340C()
{
  return &protocol witness table for Int;
}

unint64_t sub_100913418(uint64_t a1)
{
  unint64_t result = sub_10083BD58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100913444()
{
  unint64_t result = qword_101687780;
  if (!qword_101687780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687780);
  }
  return result;
}

unint64_t sub_100913498(uint64_t a1)
{
  unint64_t result = sub_10083BCB0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1009134C4()
{
  unint64_t result = qword_1016877D8;
  if (!qword_1016877D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016877D8);
  }
  return result;
}

uint64_t sub_100913518()
{
  return sub_100912338(&qword_101687410, 255, (void (*)(uint64_t))type metadata accessor for CRLWPHyperlinkSmartFieldData);
}

unint64_t sub_100913568()
{
  unint64_t result = qword_1016877E0;
  if (!qword_1016877E0)
  {
    sub_100522D34(&qword_1016877E8);
    sub_10062E0F4(&qword_1016877F0, &qword_1016877F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016877E0);
  }
  return result;
}

unint64_t sub_100913608(uint64_t a1)
{
  unint64_t result = sub_100913630();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100913630()
{
  unint64_t result = qword_101687848;
  if (!qword_101687848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687848);
  }
  return result;
}

unint64_t sub_100913688()
{
  unint64_t result = qword_101687850;
  if (!qword_101687850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687850);
  }
  return result;
}

uint64_t sub_1009136DC()
{
  return sub_100523288(&qword_101687858, &qword_101687860);
}

uint64_t sub_100913718()
{
  return sub_100523288(&qword_101687868, &qword_101687860);
}

uint64_t sub_100913754()
{
  return sub_100912338(&qword_101687870, 255, type metadata accessor for CRLWPParagraphAlignment);
}

unint64_t sub_1009137A0(uint64_t a1)
{
  unint64_t result = sub_100842B0C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1009137CC()
{
  unint64_t result = qword_1016878C8;
  if (!qword_1016878C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016878C8);
  }
  return result;
}

uint64_t sub_100913820()
{
  return sub_100523288((unint64_t *)&unk_1016878D0, &qword_10167BE18);
}

uint64_t sub_10091385C()
{
  return sub_100523288(&qword_1016878E0, &qword_10167BE18);
}

uint64_t sub_100913898()
{
  return sub_100912338(&qword_1016878E8, 255, type metadata accessor for CRLWPWritingDirection);
}

unint64_t sub_1009138E4(uint64_t a1)
{
  unint64_t result = sub_100842A00();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10091390C()
{
  return sub_100912338(&qword_101687940, 255, (void (*)(uint64_t))type metadata accessor for CRLWPCharacterStyle);
}

uint64_t sub_100913958()
{
  return sub_10062E0F4(&qword_1016877F0, &qword_1016877F8);
}

uint64_t sub_10091399C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167BEA0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101672E90);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v21 = (char *)&v48 - v20;
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v48 - v23;
  char v25 = *((unsigned char *)a1 + 8);
  uint64_t v54 = *a1;
  char v55 = v25;
  char v26 = *((unsigned char *)a2 + 8);
  uint64_t v52 = *a2;
  char v53 = v26;
  sub_1006F2468();
  if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v48 = v8;
  uint64_t v27 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  uint64_t v28 = a1;
  uint64_t v29 = v27;
  uint64_t v30 = *(int *)(v27 + 20);
  uint64_t v49 = v28;
  sub_100522E9C((uint64_t)v28 + v30, (uint64_t)v24, &qword_101672E90);
  uint64_t v50 = v29;
  uint64_t v51 = a2;
  sub_100522E9C((uint64_t)a2 + *(int *)(v29 + 20), (uint64_t)v21, &qword_101672E90);
  uint64_t v31 = (uint64_t)&v12[*(int *)(v9 + 48)];
  sub_100522E9C((uint64_t)v24, (uint64_t)v12, &qword_101672E90);
  sub_100522E9C((uint64_t)v21, v31, &qword_101672E90);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v32((uint64_t)v12, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v21, &qword_101672E90);
    sub_100522F00((uint64_t)v24, &qword_101672E90);
    if (v32(v31, 1, v4) == 1)
    {
      sub_100522F00((uint64_t)v12, &qword_101672E90);
      goto LABEL_11;
    }
    goto LABEL_7;
  }
  sub_100522E9C((uint64_t)v12, (uint64_t)v17, &qword_101672E90);
  if (v32(v31, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v21, &qword_101672E90);
    sub_100522F00((uint64_t)v24, &qword_101672E90);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
LABEL_7:
    sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10167BEA0);
LABEL_8:
    char v33 = 0;
    return v33 & 1;
  }
  uint64_t v35 = v5;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v37 = v48;
  v36(v48, v31, v4);
  sub_100912338((unint64_t *)&qword_10167BEB8, 255, (void (*)(uint64_t))&type metadata accessor for URL);
  char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v35 + 8);
  v39(v37, v4);
  sub_100522F00((uint64_t)v21, &qword_101672E90);
  sub_100522F00((uint64_t)v24, &qword_101672E90);
  v39(v17, v4);
  sub_100522F00((uint64_t)v12, &qword_101672E90);
  if ((v38 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v41 = v49;
  uint64_t v40 = v50;
  uint64_t v42 = *(int *)(v50 + 24);
  uint64_t v43 = *(uint64_t *)((char *)v49 + v42);
  uint64_t v44 = *(uint64_t *)((char *)v49 + v42 + 8);
  char v45 = v51;
  uint64_t v46 = (uint64_t *)((char *)v51 + v42);
  if (v43 == *v46 && v44 == v46[1] || (v47 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v33 = 0, (v47 & 1) != 0)) {
    char v33 = sub_100ED60AC(*(uint64_t *)((char *)v41 + *(int *)(v40 + 28)), *(uint64_t *)((char *)v45 + *(int *)(v40 + 28)));
  }
  return v33 & 1;
}

id sub_100913E24(void *a1, uint64_t a2, void *a3)
{
  uint64_t v7 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData] = 0;
  uint64_t v8 = (uint64_t)&v3[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride];
  sub_1005C6DF0((uint64_t)v19);
  sub_10051B3EC((uint64_t)v19, v8, &qword_10168D670);
  uint64_t v9 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_geometry;
  id v10 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  uint64_t v11 = v3;
  *(void *)&v3[v9] = [v10 initWithSize:100.0, 100.0];
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage_attributedMarkedText] = 0;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange] = 0;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRange] = 0;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage_selectedMarkedTextRangeFromOS] = 0;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextStyle] = 0;
  swift_unknownObjectWeakInit();
  v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage_isSupported] = 1;
  uint64_t v12 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_layoutClass;
  *(void *)&v11[v12] = type metadata accessor for CRLWPLayout();
  uint64_t v13 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_repClass;
  *(void *)&v11[v13] = sub_10050BF48(0, &qword_101684070);
  uint64_t v14 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_editorClass;
  *(void *)&v11[v14] = type metadata accessor for CRLWPEditor();
  v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidRanges] = 0;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphRanges] = _swiftEmptyArrayStorage;
  v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties] = 0;
  uint64_t v15 = OBJC_IVAR____TtC8Freeform12CRLWPStorage__coreTextAttributedString;
  *(void *)&v11[v15] = [objc_allocWithZone((Class)NSAttributedString) init];
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage__characterStyleRuns] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage__paragraphStyleRuns] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage__hyperlinkRuns] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage__listRuns] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLWPStorage_store] = a1;
  *(void *)&v3[v7] = a2;
  id v16 = a1;
  swift_retain();
  swift_release();
  sub_10051B3EC(v8, (uint64_t)v20, &qword_10168D670);
  sub_10051B3EC((uint64_t)a3, v8, &qword_10168D670);
  sub_1008EF10C(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
  sub_1008EF10C(v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);

  sub_1008EF10C(a3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for CRLWPStorage();
  return [super init];
}

uint64_t sub_1009140C4(uint64_t a1, unint64_t a2, char a3)
{
  if (a3) {
    return 0x63697465766C6548;
  }
  unint64_t v3 = 0xD000000000000029;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v3 = 0xD000000000000023;
      break;
    case 2uLL:
    case 7uLL:
    case 8uLL:
      unint64_t v3 = 0xD000000000000024;
      break;
    case 3uLL:
      unint64_t v3 = 0xD000000000000026;
      break;
    case 4uLL:
      unint64_t v3 = 0xD000000000000025;
      break;
    case 5uLL:
      unint64_t v3 = 0xD000000000000027;
      break;
    case 6uLL:
      unint64_t v3 = 0xD000000000000023;
      break;
    default:
      unint64_t v3 = a1;
      break;
  }
  sub_10051B3D8(a1, a2);
  return v3;
}

uint64_t sub_10091420C(char *a1)
{
  uint64_t v2 = 0x63697465766C6548;
  uint64_t v3 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return v2;
  }
  sub_10051B3EC((uint64_t)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride], (uint64_t)v88, &qword_10168D670);
  sub_10051B3EC((uint64_t)v88, (uint64_t)v89, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v89);
  if (result != 1)
  {
    sub_10051B3EC((uint64_t)v88, (uint64_t)&v61, &qword_10168D670);
    uint64_t v56 = v85;
    uint64_t v57 = v87;
    int v54 = v84;
    int v55 = v86;
    uint64_t v52 = v81;
    uint64_t v53 = v83;
    int v51 = v82;
    uint64_t v50 = v79;
    int v49 = v80;
    long long v47 = v73;
    long long v48 = v72;
    long long v45 = v75;
    long long v46 = v74;
    long long v42 = v77;
    long long v43 = v76;
    long long v41 = v78;
    uint64_t v44 = v70;
    id v10 = a1;
    int v40 = v71;
    uint64_t v11 = v68;
    char v12 = v69;
    char v13 = v67;
    char v14 = v66;
    int v15 = v64;
    char v16 = v65;
    uint64_t v17 = v61;
    unint64_t v18 = v62;
    int v19 = v63;
    id v58 = v10;
    id v20 = v10;
    unsigned __int8 v21 = v40;
    uint64_t v22 = v44;
    long long v24 = v41;
    long long v23 = v42;
    long long v25 = v43;
    long long v27 = v45;
    long long v26 = v46;
    long long v29 = v47;
    long long v28 = v48;
    unsigned __int8 v30 = v49;
    uint64_t v31 = v50;
    unsigned __int8 v32 = v51;
    uint64_t v34 = v52;
    uint64_t v33 = v53;
    unsigned __int8 v36 = v54;
    unsigned __int8 v35 = v55;
    uint64_t v38 = v56;
    uint64_t v37 = v57;
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (v8)
  {
    (*(void (**)(void))(*(void *)v8 + 760))();
    uint64_t v9 = a1;
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v59, (uint64_t)v60, &qword_10168D670);
    sub_100918D58((uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)v60, (uint64_t)&v61, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v61) == 1)
    {

      return v2;
    }
    id v58 = a1;
    uint64_t v37 = v87;
    uint64_t v38 = v85;
    unsigned __int8 v35 = v86;
    uint64_t v33 = v83;
    unsigned __int8 v36 = v84;
    uint64_t v34 = v81;
    unsigned __int8 v32 = v82;
    uint64_t v31 = v79;
    unsigned __int8 v30 = v80;
    long long v28 = v72;
    long long v29 = v73;
    long long v26 = v74;
    long long v27 = v75;
    long long v25 = v76;
    long long v23 = v77;
    long long v24 = v78;
    uint64_t v22 = v70;
    unsigned __int8 v21 = v71;
    uint64_t v11 = v68;
    char v12 = v69;
    char v13 = v67;
    char v14 = v66;
    int v15 = v64;
    char v16 = v65;
    uint64_t v17 = v61;
    unint64_t v18 = v62;
    int v19 = v63;
LABEL_8:
    uint64_t v61 = v17;
    unint64_t v62 = v18;
    unsigned __int8 v63 = v19;
    int v64 = v15;
    char v65 = v16;
    char v66 = v14;
    char v67 = v13;
    uint64_t v68 = v11;
    char v69 = v12;
    uint64_t v70 = v22;
    unsigned __int8 v71 = v21;
    long long v72 = v28;
    long long v73 = v29;
    long long v74 = v26;
    long long v75 = v27;
    long long v76 = v25;
    long long v77 = v23;
    long long v78 = v24;
    uint64_t v79 = v31;
    unsigned __int8 v80 = v30;
    uint64_t v81 = v34;
    unsigned __int8 v82 = v32;
    uint64_t v83 = v33;
    unsigned __int8 v84 = v36;
    uint64_t v85 = v38;
    unsigned __int8 v86 = v35;
    uint64_t v87 = v37;
    sub_10051B3B0(v17, v18, v19);
    sub_1008EF10C(v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
    sub_10089B210((uint64_t)&v61);
    if (v19 == 255)
    {

      return 0x63697465766C6548;
    }
    else
    {
      uint64_t v2 = sub_1009140C4(v17, v18, v19 & 1);
      sub_10051AC88(v17, v18, v19);
    }
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_100914624(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  uint64_t result = __chkstk_darwin(v2, v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1) {
    return result;
  }
  sub_10051B3EC(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride, (uint64_t)v11, &qword_10168D670);
  sub_10051B3EC((uint64_t)v11, (uint64_t)v12, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v12);
  if (result != 1)
  {
    sub_10051B3EC((uint64_t)v11, (uint64_t)v10, &qword_10168D670);
LABEL_7:
    sub_1008EF10C(v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
    return sub_10089B210((uint64_t)v10);
  }
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v7)
  {
    __break(1u);
    return result;
  }
  (*(void (**)(void))(*(void *)v7 + 760))();
  swift_retain();
  sub_1005057FC(&qword_1016879C0);
  CRRegister.wrappedValue.getter();
  sub_10051B3EC((uint64_t)v8, (uint64_t)v9, &qword_10168D670);
  sub_100918D58((uint64_t)v6, type metadata accessor for CRLWPShapeItemCRDTData);
  swift_release();
  sub_10051B3EC((uint64_t)v9, (uint64_t)v10, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v10);
  if (result != 1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1009148C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1) {
    return 0;
  }
  sub_10051B3EC(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride, (uint64_t)v12, &qword_10168D670);
  sub_10051B3EC((uint64_t)v12, (uint64_t)v13, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v13);
  if (result == 1)
  {
    uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
    if (!v7)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void))(*(void *)v7 + 760))();
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)v9, (uint64_t)v10, &qword_10168D670);
    sub_100918D58((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)v10, (uint64_t)v11, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)v11) == 1) {
      return 0;
    }
  }
  else
  {
    sub_10051B3EC((uint64_t)v12, (uint64_t)v11, &qword_10168D670);
  }
  int v8 = v11[25];
  sub_1008EF10C(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
  sub_10089B210((uint64_t)v11);
  if (v8 == 2) {
    return 0;
  }
  return v8 & 1;
}

uint64_t sub_100914B64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1) {
    return 0;
  }
  sub_10051B3EC(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride, (uint64_t)v12, &qword_10168D670);
  sub_10051B3EC((uint64_t)v12, (uint64_t)v13, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v13);
  if (result == 1)
  {
    uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
    if (!v7)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void))(*(void *)v7 + 760))();
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)v9, (uint64_t)v10, &qword_10168D670);
    sub_100918D58((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)v10, (uint64_t)v11, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)v11) == 1) {
      return 0;
    }
  }
  else
  {
    sub_10051B3EC((uint64_t)v12, (uint64_t)v11, &qword_10168D670);
  }
  int v8 = v11[26];
  sub_1008EF10C(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
  sub_10089B210((uint64_t)v11);
  if (v8 == 2) {
    return 0;
  }
  return v8 & 1;
}

uint64_t sub_100914E00(char *a1)
{
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  sub_10051B3EC((uint64_t)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride], (uint64_t)v82, &qword_10168D670);
  sub_10051B3EC((uint64_t)v82, (uint64_t)v83, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v83);
  if (result == 1)
  {
    uint64_t v7 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v7)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void))(*(void *)v7 + 760))();
    int v8 = a1;
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v54, (uint64_t)v55, &qword_10168D670);
    sub_100918D58((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)v55, (uint64_t)&v56, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v56) == 1)
    {

      return 0;
    }
    uint64_t v35 = v81;
    uint64_t v33 = v79;
    unsigned __int8 v31 = v80;
    uint64_t v34 = v77;
    unsigned __int8 v32 = v78;
    uint64_t v30 = v75;
    unsigned __int8 v29 = v76;
    uint64_t v28 = v73;
    unsigned __int8 v27 = v74;
    long long v25 = v66;
    long long v26 = v67;
    long long v23 = v68;
    long long v24 = v69;
    long long v21 = v70;
    long long v22 = v71;
    long long v18 = v72;
    uint64_t v20 = v64;
    char v9 = v65;
    uint64_t v10 = v62;
    int v11 = v63;
    char v12 = v61;
    char v13 = v60;
    int v14 = v58;
    char v15 = v59;
    long long v19 = v56;
    char v16 = v57;
  }
  else
  {
    sub_10051B3EC((uint64_t)v82, (uint64_t)&v56, &qword_10168D670);
    uint64_t v52 = v79;
    uint64_t v53 = v81;
    uint64_t v51 = v77;
    int v49 = v78;
    int v50 = v80;
    uint64_t v48 = v75;
    int v47 = v76;
    uint64_t v46 = v73;
    int v45 = v74;
    long long v43 = v67;
    long long v44 = v66;
    long long v41 = v69;
    long long v42 = v68;
    long long v38 = v71;
    long long v39 = v70;
    uint64_t v40 = v64;
    char v9 = v65;
    uint64_t v10 = v62;
    int v11 = v63;
    char v12 = v61;
    char v13 = v60;
    int v14 = v58;
    char v15 = v59;
    long long v36 = v56;
    long long v37 = v72;
    char v16 = v57;
    uint64_t v17 = a1;
    long long v19 = v36;
    long long v18 = v37;
    uint64_t v20 = v40;
    long long v22 = v38;
    long long v21 = v39;
    long long v24 = v41;
    long long v23 = v42;
    long long v26 = v43;
    long long v25 = v44;
    unsigned __int8 v27 = v45;
    uint64_t v28 = v46;
    unsigned __int8 v29 = v47;
    uint64_t v30 = v48;
    unsigned __int8 v32 = v49;
    unsigned __int8 v31 = v50;
    uint64_t v34 = v51;
    uint64_t v33 = v52;
    uint64_t v35 = v53;
  }
  long long v56 = v19;
  char v57 = v16;
  int v58 = v14;
  char v59 = v15;
  char v60 = v13;
  char v61 = v12;
  uint64_t v62 = v10;
  unsigned __int8 v63 = v11;
  uint64_t v64 = v20;
  char v65 = v9;
  long long v66 = v25;
  long long v67 = v26;
  long long v68 = v23;
  long long v69 = v24;
  long long v70 = v21;
  long long v71 = v22;
  long long v72 = v18;
  uint64_t v73 = v28;
  unsigned __int8 v74 = v27;
  uint64_t v75 = v30;
  unsigned __int8 v76 = v29;
  uint64_t v77 = v34;
  unsigned __int8 v78 = v32;
  uint64_t v79 = v33;
  unsigned __int8 v80 = v31;
  uint64_t v81 = v35;
  sub_1008EF10C(v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
  sub_10089B210((uint64_t)&v56);

  if (v11 == 255) {
    return 0;
  }
  if (v11) {
    return 0;
  }
  else {
    return v10;
  }
}

uint64_t sub_100915190(char *a1)
{
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  sub_10051B3EC((uint64_t)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride], (uint64_t)v83, &qword_10168D670);
  sub_10051B3EC((uint64_t)v83, (uint64_t)v84, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v84);
  if (result == 1)
  {
    uint64_t v7 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v7)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void))(*(void *)v7 + 760))();
    int v8 = a1;
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v55, (uint64_t)v56, &qword_10168D670);
    sub_100918D58((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)v56, (uint64_t)&v57, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v57) == 1)
    {

      return 0;
    }
    uint64_t v36 = v82;
    uint64_t v34 = v80;
    unsigned __int8 v31 = v81;
    uint64_t v35 = v78;
    unsigned __int8 v32 = v79;
    uint64_t v30 = v76;
    unsigned __int8 v29 = v77;
    uint64_t v28 = v74;
    unsigned __int8 v27 = v75;
    long long v25 = v67;
    long long v26 = v68;
    long long v23 = v69;
    long long v24 = v70;
    long long v21 = v71;
    long long v22 = v72;
    long long v18 = v73;
    uint64_t v33 = v65;
    int v9 = v66;
    uint64_t v20 = v63;
    char v11 = v64;
    char v12 = v62;
    char v13 = v61;
    int v14 = v59;
    char v15 = v60;
    long long v19 = v57;
    char v16 = v58;
  }
  else
  {
    sub_10051B3EC((uint64_t)v83, (uint64_t)&v57, &qword_10168D670);
    uint64_t v52 = v80;
    uint64_t v53 = v78;
    uint64_t v54 = v82;
    int v50 = v79;
    int v51 = v81;
    uint64_t v49 = v76;
    int v48 = v77;
    uint64_t v47 = v74;
    int v46 = v75;
    long long v43 = v68;
    long long v44 = v67;
    long long v41 = v70;
    long long v42 = v69;
    long long v39 = v72;
    long long v40 = v71;
    uint64_t v45 = v65;
    int v9 = v66;
    uint64_t v10 = v63;
    char v11 = v64;
    char v12 = v62;
    char v13 = v61;
    int v14 = v59;
    char v15 = v60;
    long long v37 = v57;
    long long v38 = v73;
    char v16 = v58;
    uint64_t v17 = a1;
    long long v19 = v37;
    long long v18 = v38;
    uint64_t v20 = v10;
    long long v22 = v39;
    long long v21 = v40;
    long long v24 = v41;
    long long v23 = v42;
    long long v26 = v43;
    long long v25 = v44;
    unsigned __int8 v27 = v46;
    uint64_t v28 = v47;
    unsigned __int8 v29 = v48;
    uint64_t v30 = v49;
    unsigned __int8 v32 = v50;
    unsigned __int8 v31 = v51;
    uint64_t v33 = v45;
    uint64_t v34 = v52;
    uint64_t v35 = v53;
    uint64_t v36 = v54;
  }
  long long v57 = v19;
  char v58 = v16;
  int v59 = v14;
  char v60 = v15;
  char v61 = v13;
  char v62 = v12;
  uint64_t v63 = v20;
  char v64 = v11;
  uint64_t v65 = v33;
  unsigned __int8 v66 = v9;
  long long v67 = v25;
  long long v68 = v26;
  long long v69 = v23;
  long long v70 = v24;
  long long v71 = v21;
  long long v72 = v22;
  long long v73 = v18;
  uint64_t v74 = v28;
  unsigned __int8 v75 = v27;
  uint64_t v76 = v30;
  unsigned __int8 v77 = v29;
  uint64_t v78 = v35;
  unsigned __int8 v79 = v32;
  uint64_t v80 = v34;
  unsigned __int8 v81 = v31;
  uint64_t v82 = v36;
  sub_1008EF10C(v83, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
  sub_10089B210((uint64_t)&v57);

  if (v9 == 255) {
    return 0;
  }
  if (v9) {
    return 0;
  }
  else {
    return v33;
  }
}

id sub_100915524(char *a1)
{
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
LABEL_12:
    id v54 = [self blackColor];
    return v54;
  }
  sub_10051B3EC((uint64_t)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride], (uint64_t)v131, &qword_10168D670);
  sub_10051B3EC((uint64_t)v131, (uint64_t)v132, &qword_10168D670);
  id result = (id)sub_1005DF0EC((uint64_t)v132);
  if (result == 1)
  {
    uint64_t v7 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v7)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void))(*(void *)v7 + 760))();
    int v8 = a1;
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v86, (uint64_t)&v87, &qword_10168D670);
    sub_100918D58((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)&v87, (uint64_t)&v99, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v99) == 1)
    {

      goto LABEL_12;
    }
    uint64_t v30 = v130;
    uint64_t v31 = v128;
    unsigned __int8 v29 = v129;
    uint64_t v28 = v126;
    unsigned __int8 v27 = v127;
    uint64_t v26 = v124;
    unsigned __int8 v24 = v125;
    unsigned __int8 v25 = v123;
    uint64_t v34 = v109;
    uint64_t v74 = v110;
    id v75 = a1;
    uint64_t v78 = v112;
    uint64_t v79 = v111;
    uint64_t v77 = v113;
    uint64_t v80 = v114;
    uint64_t v37 = v115;
    uint64_t v38 = v116;
    uint64_t v35 = v117;
    uint64_t v32 = v118;
    uint64_t v36 = v119;
    uint64_t v33 = v120;
    uint64_t v81 = v121;
    long long v20 = v122;
    uint64_t v10 = v107;
    char v11 = v108;
    uint64_t v23 = v105;
    char v22 = v106;
    char v14 = v104;
    char v15 = v103;
    int v16 = v101;
    char v17 = v102;
    long long v21 = v99;
    char v18 = v100;
  }
  else
  {
    sub_10051B3EC((uint64_t)v131, (uint64_t)&v99, &qword_10168D670);
    uint64_t v72 = v128;
    uint64_t v73 = v130;
    int v71 = v129;
    uint64_t v70 = v126;
    int v69 = v127;
    uint64_t v68 = v124;
    int v66 = v123;
    int v67 = v125;
    uint64_t v74 = v110;
    uint64_t v79 = v111;
    int v9 = a1;
    uint64_t v78 = v112;
    uint64_t v76 = v109;
    uint64_t v77 = v113;
    uint64_t v65 = v115;
    uint64_t v64 = v116;
    uint64_t v83 = v117;
    uint64_t v85 = v118;
    uint64_t v82 = v119;
    uint64_t v84 = v120;
    uint64_t v80 = v114;
    uint64_t v81 = v121;
    uint64_t v10 = v107;
    char v11 = v108;
    uint64_t v12 = v105;
    char v13 = v106;
    char v14 = v104;
    char v15 = v103;
    int v16 = v101;
    char v17 = v102;
    long long v62 = v99;
    long long v63 = v122;
    char v18 = v100;
    id v75 = v9;
    id v19 = v9;
    long long v21 = v62;
    long long v20 = v63;
    char v22 = v13;
    uint64_t v23 = v12;
    unsigned __int8 v25 = v66;
    unsigned __int8 v24 = v67;
    uint64_t v26 = v68;
    unsigned __int8 v27 = v69;
    uint64_t v28 = v70;
    unsigned __int8 v29 = v71;
    uint64_t v31 = v72;
    uint64_t v30 = v73;
    uint64_t v33 = v84;
    uint64_t v32 = v85;
    uint64_t v34 = v76;
    uint64_t v36 = v82;
    uint64_t v35 = v83;
    uint64_t v38 = v64;
    uint64_t v37 = v65;
  }
  uint64_t v82 = v36;
  uint64_t v83 = v35;
  uint64_t v84 = v33;
  uint64_t v85 = v32;
  long long v99 = v21;
  char v100 = v18;
  int v101 = v16;
  char v102 = v17;
  char v103 = v15;
  char v104 = v14;
  uint64_t v105 = v23;
  char v106 = v22;
  uint64_t v107 = v10;
  char v108 = v11;
  uint64_t v39 = v34;
  uint64_t v109 = v34;
  uint64_t v40 = v74;
  uint64_t v110 = v74;
  uint64_t v42 = v78;
  uint64_t v41 = v79;
  uint64_t v111 = v79;
  uint64_t v112 = v78;
  uint64_t v43 = v77;
  uint64_t v113 = v77;
  uint64_t v45 = v80;
  uint64_t v44 = v81;
  uint64_t v114 = v80;
  uint64_t v115 = v37;
  uint64_t v116 = v38;
  uint64_t v117 = v35;
  uint64_t v118 = v32;
  uint64_t v119 = v36;
  uint64_t v120 = v33;
  uint64_t v121 = v81;
  long long v122 = v20;
  unsigned __int8 v123 = v25;
  uint64_t v124 = v26;
  unsigned __int8 v125 = v24;
  uint64_t v126 = v28;
  unsigned __int8 v127 = v27;
  uint64_t v128 = v31;
  unsigned __int8 v129 = v29;
  uint64_t v73 = v20;
  uint64_t v130 = v30;
  uint64_t v46 = v34;
  uint64_t v47 = v37;
  uint64_t v48 = v38;
  sub_10051B2E8(v46, v74, v79, v78, v77, v80, v37, v38, v35, v32, v36, v33, v81);
  sub_1008EF10C(v131, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
  sub_10089B210((uint64_t)&v99);
  if (!v44)
  {

    goto LABEL_12;
  }
  uint64_t v49 = v39;
  uint64_t v50 = v41;
  uint64_t v76 = v49;
  sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
  int v87 = v41;
  char v88 = BYTE4(v41) & 1;
  uint64_t v89 = v42;
  uint64_t v90 = v43;
  uint64_t v80 = v45;
  uint64_t v91 = v45;
  uint64_t v92 = v47;
  uint64_t v93 = v48;
  uint64_t v94 = v83;
  uint64_t v95 = v85;
  uint64_t v96 = v82;
  uint64_t v97 = v84;
  uint64_t v98 = v81;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v51 = sub_1007B0B84((uint64_t)&v87);
  if (v40)
  {
    uint64_t v55 = v40;
    uint64_t v78 = v42;
    uint64_t v79 = v50;
    uint64_t v77 = v43;
    uint64_t v56 = v84;
    uint64_t v57 = v85;
    uint64_t v59 = v82;
    uint64_t v58 = v83;
    if (qword_10166FB80 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v60 = (id)static OS_os_log.persistence;
    uint64_t v61 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v60, (uint64_t)&_mh_execute_header, v61, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)&_swiftEmptyArrayStorage);

    id v53 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v51];
    sub_10051ABBC(v76, v55, v79, v78, v77, v80, v47, v48, v58, v57, v59, v56, v81);
  }
  else
  {
    uint64_t v52 = v40;
    id v53 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v51];

    sub_10051ABBC(v76, v52, v50, v42, v43, v80, v47, v48, v83, v85, v82, v84, v81);
  }

  return v53;
}

uint64_t sub_100915C0C(char *a1)
{
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 4;
  }
  sub_10051B3EC((uint64_t)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride], (uint64_t)v84, &qword_10168D670);
  sub_10051B3EC((uint64_t)v84, (uint64_t)v85, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v85);
  if (result == 1)
  {
    uint64_t v7 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v7)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void))(*(void *)v7 + 760))();
    int v8 = a1;
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v56, (uint64_t)v57, &qword_10168D670);
    sub_100918D58((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)v57, (uint64_t)&v58, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v58) == 1)
    {

      return 4;
    }
    uint64_t v36 = v83;
    uint64_t v37 = v81;
    unsigned __int8 v35 = v82;
    uint64_t v34 = v79;
    unsigned __int8 v33 = v80;
    uint64_t v31 = v77;
    unsigned __int8 v29 = v78;
    uint64_t v32 = v75;
    int v30 = v76;
    long long v28 = v68;
    long long v26 = v69;
    long long v27 = v70;
    long long v25 = v71;
    long long v23 = v72;
    long long v24 = v73;
    long long v19 = v74;
    uint64_t v22 = v66;
    char v9 = v67;
    uint64_t v10 = v64;
    char v11 = v65;
    char v12 = v63;
    char v13 = v62;
    int v14 = v60;
    char v21 = v61;
    long long v20 = v58;
    char v18 = v59;
  }
  else
  {
    sub_10051B3EC((uint64_t)v84, (uint64_t)&v58, &qword_10168D670);
    uint64_t v54 = v83;
    uint64_t v55 = v81;
    int v53 = v82;
    uint64_t v52 = v79;
    int v51 = v80;
    uint64_t v49 = v77;
    uint64_t v50 = v75;
    int v47 = v76;
    int v48 = v78;
    long long v45 = v69;
    long long v46 = v68;
    long long v44 = v70;
    long long v41 = v72;
    long long v42 = v71;
    long long v39 = v74;
    long long v40 = v73;
    uint64_t v43 = v66;
    char v9 = v67;
    uint64_t v10 = v64;
    char v11 = v65;
    char v12 = v63;
    char v13 = v62;
    int v14 = v60;
    char v15 = v61;
    long long v38 = v58;
    char v16 = v59;
    char v17 = a1;
    char v18 = v16;
    long long v20 = v38;
    long long v19 = v39;
    char v21 = v15;
    uint64_t v22 = v43;
    long long v24 = v40;
    long long v23 = v41;
    long long v25 = v42;
    long long v27 = v44;
    long long v26 = v45;
    long long v28 = v46;
    int v30 = v47;
    unsigned __int8 v29 = v48;
    uint64_t v31 = v49;
    uint64_t v32 = v50;
    unsigned __int8 v33 = v51;
    uint64_t v34 = v52;
    unsigned __int8 v35 = v53;
    uint64_t v36 = v54;
    uint64_t v37 = v55;
  }
  long long v58 = v20;
  char v59 = v18;
  int v60 = v14;
  char v61 = v21;
  char v62 = v13;
  char v63 = v12;
  uint64_t v64 = v10;
  char v65 = v11;
  uint64_t v66 = v22;
  char v67 = v9;
  long long v68 = v28;
  long long v69 = v26;
  long long v70 = v27;
  long long v71 = v25;
  long long v72 = v23;
  long long v73 = v24;
  long long v74 = v19;
  uint64_t v75 = v32;
  unsigned __int8 v76 = v30;
  uint64_t v77 = v31;
  unsigned __int8 v78 = v29;
  uint64_t v79 = v34;
  unsigned __int8 v80 = v33;
  uint64_t v81 = v37;
  unsigned __int8 v82 = v35;
  uint64_t v83 = v36;
  sub_1008EF10C(v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
  sub_10089B210((uint64_t)&v58);

  if (v30 == 255) {
    return 4;
  }
  if (v30) {
    return 4;
  }
  else {
    return v32;
  }
}

uint64_t sub_100915FA8(char *a1)
{
  uint64_t v2 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return -1;
  }
  sub_10051B3EC((uint64_t)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride], (uint64_t)v83, &qword_10168D670);
  sub_10051B3EC((uint64_t)v83, (uint64_t)v84, &qword_10168D670);
  uint64_t result = sub_1005DF0EC((uint64_t)v84);
  if (result == 1)
  {
    uint64_t v7 = *(void *)&a1[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (!v7)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(void))(*(void *)v7 + 760))();
    int v8 = a1;
    swift_retain();
    sub_1005057FC(&qword_1016879C0);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v55, (uint64_t)v56, &qword_10168D670);
    sub_100918D58((uint64_t)v5, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    sub_10051B3EC((uint64_t)v56, (uint64_t)&v57, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v57) == 1)
    {

      return -1;
    }
    uint64_t v34 = v82;
    uint64_t v35 = v80;
    unsigned __int8 v33 = v81;
    uint64_t v32 = v78;
    unsigned __int8 v30 = v79;
    uint64_t v54 = v76;
    int v31 = v77;
    uint64_t v29 = v74;
    unsigned __int8 v28 = v75;
    long long v27 = v67;
    long long v25 = v68;
    long long v26 = v69;
    long long v24 = v70;
    long long v22 = v71;
    long long v23 = v72;
    long long v18 = v73;
    uint64_t v21 = v65;
    char v9 = v66;
    uint64_t v10 = v63;
    char v11 = v64;
    char v12 = v62;
    char v13 = v61;
    int v20 = v59;
    char v15 = v60;
    long long v19 = v57;
    char v16 = v58;
  }
  else
  {
    sub_10051B3EC((uint64_t)v83, (uint64_t)&v57, &qword_10168D670);
    uint64_t v52 = v80;
    uint64_t v53 = v82;
    int v51 = v81;
    uint64_t v50 = v78;
    uint64_t v54 = v76;
    int v48 = v77;
    int v49 = v79;
    uint64_t v47 = v74;
    int v46 = v75;
    long long v44 = v68;
    long long v45 = v67;
    long long v43 = v69;
    long long v40 = v71;
    long long v41 = v70;
    long long v38 = v73;
    long long v39 = v72;
    uint64_t v42 = v65;
    char v9 = v66;
    uint64_t v10 = v63;
    char v11 = v64;
    char v12 = v62;
    char v13 = v61;
    int v14 = v59;
    char v15 = v60;
    long long v37 = v57;
    char v16 = v58;
    char v17 = a1;
    long long v19 = v37;
    long long v18 = v38;
    int v20 = v14;
    uint64_t v21 = v42;
    long long v23 = v39;
    long long v22 = v40;
    long long v24 = v41;
    long long v26 = v43;
    long long v25 = v44;
    long long v27 = v45;
    unsigned __int8 v28 = v46;
    uint64_t v29 = v47;
    int v31 = v48;
    unsigned __int8 v30 = v49;
    uint64_t v32 = v50;
    unsigned __int8 v33 = v51;
    uint64_t v35 = v52;
    uint64_t v34 = v53;
  }
  long long v57 = v19;
  char v58 = v16;
  int v59 = v20;
  char v60 = v15;
  char v61 = v13;
  char v62 = v12;
  uint64_t v63 = v10;
  char v64 = v11;
  uint64_t v65 = v21;
  char v66 = v9;
  long long v67 = v27;
  long long v68 = v25;
  long long v69 = v26;
  long long v70 = v24;
  long long v71 = v22;
  long long v72 = v23;
  long long v73 = v18;
  uint64_t v74 = v29;
  unsigned __int8 v75 = v28;
  uint64_t v36 = v54;
  uint64_t v76 = v54;
  unsigned __int8 v77 = v31;
  uint64_t v78 = v32;
  unsigned __int8 v79 = v30;
  uint64_t v80 = v35;
  unsigned __int8 v81 = v33;
  uint64_t v82 = v34;
  sub_1008EF10C(v83, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
  sub_10089B210((uint64_t)&v57);

  if (v31 == 255) {
    return -1;
  }
  if (v31) {
    return -1;
  }
  else {
    return v36;
  }
}

id sub_100916348(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  uint64_t v9 = sub_1009068B8(*(void *)(a1 + *(int *)(v8 + 24)), *(void *)(a1 + *(int *)(v8 + 24) + 8));
  uint64_t v11 = v10;
  sub_100522E9C(a1 + *(int *)(v8 + 20), (uint64_t)v7, &qword_101672E90);
  uint64_t v25 = v9;
  id v12 = [a2 stringEquivalentFromRange:v9, v11];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13);
  swift_bridgeObjectRetain();
  char v17 = 0;
  if (v15 != 1)
  {
    URL._bridgeToObjectiveC()(v16);
    char v17 = v18;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
  }
  id v19 = objc_allocWithZone((Class)CRLWPHyperlinkField);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [v19 initWithURL:v17 range:v25 displayText:v11 uuidString:v20];

  return v22;
}

void *sub_100916564()
{
  swift_getKeyPath();
  sub_1005057FC((uint64_t *)&unk_1016836C0);
  sub_1008431AC();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  if (BYTE8(v71) != 255)
  {
    char v0 = BYTE8(v71) & 1;
    BYTE8(v71) &= 1u;
    *(void *)&long long v67 = 0;
    BYTE8(v67) = 0;
    type metadata accessor for CRLWPUnderline(0);
    sub_100912338((unint64_t *)&unk_10167BE00, 255, type metadata accessor for CRLWPUnderline);
    if ((static CRExtensible.== infix(_:_:)() & 1) == 0)
    {
      BYTE8(v71) = v0;
      uint64_t v1 = NSUnderlineStyleAttributeName;
      sub_1005057FC(&qword_10167BDF8);
      CRExtensible.rawValue.getter();
      id v2 = [objc_allocWithZone((Class)NSNumber) initWithInteger:(void)v67];
      uint64_t v73 = sub_10050BF48(0, (unint64_t *)&qword_101684330);
      *(void *)&long long v71 = v2;
      sub_100575CE8(&v71, &v67);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v66[0] = _swiftEmptyDictionarySingleton;
      sub_100972E2C(&v67, v1, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
  }
  swift_getKeyPath();
  sub_100843158();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  if (BYTE8(v71) != 255)
  {
    uint64_t v4 = v71;
    char v5 = BYTE8(v71) & 1;
    BYTE8(v71) &= 1u;
    *(void *)&long long v67 = 0;
    BYTE8(v67) = 0;
    type metadata accessor for CRLWPStrikethru(0);
    sub_100912338(&qword_10167BDF0, 255, type metadata accessor for CRLWPStrikethru);
    if ((static CRExtensible.== infix(_:_:)() & 1) == 0)
    {
      *(void *)&long long v71 = v4;
      BYTE8(v71) = v5;
      uint64_t v6 = NSStrikethroughStyleAttributeName;
      sub_1005057FC(&qword_101687550);
      CRExtensible.rawValue.getter();
      id v7 = [objc_allocWithZone((Class)NSNumber) initWithInteger:(void)v67];
      uint64_t v73 = sub_10050BF48(0, (unint64_t *)&qword_101684330);
      *(void *)&long long v71 = v7;
      sub_100575CE8(&v71, &v67);
      char v8 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v66[0] = _swiftEmptyDictionarySingleton;
      sub_100972E2C(&v67, v6, v8);

      swift_bridgeObjectRelease();
    }
  }
  swift_getKeyPath();
  sub_100913244();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  if (v82)
  {
    uint64_t v63 = v82;
    uint64_t v61 = v71;
    uint64_t v9 = v72;
    uint64_t v64 = *((void *)&v71 + 1);
    uint64_t v11 = v73;
    uint64_t v10 = v74;
    uint64_t v12 = v75;
    uint64_t v13 = v76;
    uint64_t v15 = v77;
    uint64_t v14 = v78;
    uint64_t v17 = v79;
    uint64_t v16 = v80;
    uint64_t v18 = v81;
    sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
    uint64_t v59 = v9;
    LODWORD(v71) = v9;
    BYTE4(v71) = BYTE4(v9) & 1;
    uint64_t v60 = v11;
    *((void *)&v71 + 1) = v11;
    uint64_t v72 = v10;
    uint64_t v19 = v14;
    uint64_t v20 = v10;
    uint64_t v62 = v12;
    uint64_t v73 = v12;
    uint64_t v74 = v13;
    uint64_t v21 = v15;
    uint64_t v75 = v15;
    uint64_t v76 = v19;
    uint64_t v22 = v13;
    uint64_t v77 = v17;
    uint64_t v78 = v16;
    uint64_t v79 = v18;
    uint64_t v80 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v23 = sub_1007B0B84((uint64_t)&v71);
    uint64_t v24 = v23;
    if (v64)
    {
      if (qword_10166FB80 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v26 = (id)static OS_os_log.persistence;
      uint64_t v27 = static os_log_type_t.info.getter();
      sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

      id v25 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v24];
      sub_10051ABBC(v61, v64, v59, v60, v20, v62, v22, v21, v19, v17, v16, v18, v63);
    }
    else
    {
      id v25 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v23];

      sub_10051ABBC(v61, v64, v59, v60, v20, v62, v13, v21, v19, v17, v16, v18, v63);
    }
    self;
    unsigned __int8 v28 = (void *)swift_dynamicCastObjCClass();
    if (v28)
    {
      id v29 = v25;
      unsigned __int8 v30 = NSForegroundColorAttributeName;
      id v31 = [v28 UIColor];
      uint64_t v69 = sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
      *(void *)&long long v67 = v31;
      sub_100575CE8(&v67, v66);
      char v32 = swift_isUniquelyReferenced_nonNull_native();
      unsigned __int8 v65 = _swiftEmptyDictionarySingleton;
      sub_100972E2C(v66, v30, v32);

      swift_bridgeObjectRelease();
    }
    else
    {
      id v33 = [v25 referenceColor];
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = NSForegroundColorAttributeName;
        id v36 = [v34 UIColor];
        uint64_t v69 = sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
        *(void *)&long long v67 = v36;
        sub_100575CE8(&v67, v66);
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        unsigned __int8 v65 = _swiftEmptyDictionarySingleton;
        sub_100972E2C(v66, v35, v37);

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
  }
  swift_getKeyPath();
  sub_10091307C();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  unint64_t v38 = *((void *)&v67 + 1);
  uint64_t v39 = v67;
  int v40 = v68;
  swift_getKeyPath();
  sub_10083E5B0();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  float v41 = *(float *)v66;
  int v42 = BYTE4(v66[0]);
  swift_getKeyPath();
  sub_100843254();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  swift_getKeyPath();
  sub_100843200();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  char v43 = v70;
  if (v40 != 255)
  {
    int v44 = v40 & 1;
LABEL_26:
    if (v42) {
      double v46 = 18.0;
    }
    else {
      double v46 = v41;
    }
    id v47 = [self sharedInstance];
    *(void *)&long long v67 = v39;
    *((void *)&v67 + 1) = v38;
    unsigned __int8 v68 = v44;
    sub_1005057FC(&qword_1016875E0);
    CRExtensible.rawValue.getter();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v49 = [v47 fontForPostscriptName:v48];

    uint64_t v50 = (const __CTFont *)[v49 platformFont];
    if (v44)
    {
      sub_10051ACA0(v39, v38, 1);
      CTFontSymbolicTraits v51 = 0;
    }
    else
    {
      sub_10051ACA0(v39, v38, 0);
      CTFontSymbolicTraits v51 = 0;
      if (v38 >= 9) {
        CTFontSymbolicTraits v51 = v43 & 1 | (2 * (v65 & 1));
      }
    }
    CopyWithchar SymbolicTraits = CTFontCreateCopyWithSymbolicTraits(v50, v46, 0, v51, v51);
    if (CopyWithSymbolicTraits)
    {
      CTFontRef v53 = CopyWithSymbolicTraits;
      type metadata accessor for CTFont(0);
      uint64_t v69 = v54;
      *(void *)&long long v67 = v53;
      sub_100575CE8(&v67, v66);
      uint64_t v55 = NSFontAttributeName;
      uint64_t v56 = v53;
      char v57 = swift_isUniquelyReferenced_nonNull_native();
      sub_100972E2C(v66, v55, v57);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    return _swiftEmptyDictionarySingleton;
  }
  int v44 = 0;
  if (v65 == 2) {
    int v45 = v42;
  }
  else {
    int v45 = 0;
  }
  unint64_t v38 = 0xE900000000000061;
  uint64_t v39 = 0x63697465766C6548;
  if (v45 != 1 || v70 != 2) {
    goto LABEL_26;
  }
  return _swiftEmptyDictionarySingleton;
}

id sub_100916F3C()
{
  sub_10083E34C();
  swift_getKeyPath();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_1016836C0);
  sub_100913244();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  if (!v32) {
    return 0;
  }
  uint64_t v18 = v20;
  uint64_t v19 = v26;
  uint64_t v0 = v31;
  uint64_t v14 = v21;
  sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
  LODWORD(v20) = v22;
  uint64_t v16 = v22;
  uint64_t v17 = v23;
  uint64_t v1 = v32;
  BYTE4(v20) = BYTE4(v22) & 1;
  uint64_t v21 = v23;
  uint64_t v22 = v24;
  uint64_t v2 = v24;
  uint64_t v3 = v25;
  uint64_t v23 = v25;
  uint64_t v4 = v29;
  uint64_t v5 = v26;
  uint64_t v24 = v26;
  uint64_t v25 = v27;
  uint64_t v6 = v27;
  uint64_t v15 = v28;
  uint64_t v26 = v28;
  uint64_t v27 = v29;
  uint64_t v7 = v30;
  uint64_t v28 = v30;
  uint64_t v29 = v31;
  uint64_t v30 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v8 = sub_1007B0B84((uint64_t)&v20);
  if (v14)
  {
    if (qword_10166FB80 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v11 = (id)static OS_os_log.persistence;
    uint64_t v12 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

    id v10 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v8];
    sub_10051ABBC(v18, v14, v16, v17, v2, v3, v19, v6, v15, v4, v7, v0, v1);
  }
  else
  {
    uint64_t v9 = v5;
    id v10 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v8];

    sub_10051ABBC(v18, v14, v16, v17, v2, v3, v9, v6, v15, v4, v7, v0, v1);
  }
  return v10;
}

unsigned char *sub_100917214()
{
  uint64_t v0 = (objc_class *)type metadata accessor for CRLWPCharacterStyle();
  uint64_t v1 = &selRef_i_join;
  uint64_t v2 = [objc_allocWithZone(v0) init];
  swift_getKeyPath();
  sub_10083E4A8();
  swift_getKeyPath();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_1016836C0);
  sub_100843254();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  swift_release();
  v2[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold] = v26;
  swift_getKeyPath();
  sub_10083E454();
  swift_getKeyPath();
  sub_100843200();
  swift_retain();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  swift_release();
  v2[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic] = v26;
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v24 = sub_10083E400();
  uint64_t v25 = KeyPath;
  swift_getKeyPath();
  sub_1008431AC();
  swift_retain();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  swift_release();
  if (v27 == 255)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = v26;
    if (v27) {
      uint64_t v4 = 0;
    }
  }
  uint64_t v5 = &v2[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline];
  *(void *)uint64_t v5 = v4;
  v5[8] = v27 == 255;
  uint64_t v6 = swift_getKeyPath();
  __chkstk_darwin(v6, v7);
  sub_10083E3AC();
  swift_getKeyPath();
  sub_100843158();
  swift_retain();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  swift_release();
  if (v27 == 255)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = v26;
    if (v27) {
      uint64_t v8 = 0;
    }
  }
  uint64_t v9 = &v2[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough];
  *(void *)uint64_t v9 = v8;
  v9[8] = v27 == 255;
  uint64_t v10 = swift_getKeyPath();
  __chkstk_darwin(v10, v11);
  sub_10083E550();
  swift_getKeyPath();
  sub_10091307C();
  swift_retain();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  if (v28 == 255)
  {
    swift_release();
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v12 = sub_1009140C4(v26, v27, v28 & 1);
    uint64_t v14 = v13;
    uint64_t v1 = &selRef_i_join;
    sub_10051AC88(v26, v27, v28);
    swift_release();
  }
  uint64_t v15 = (uint64_t *)&v2[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName];
  uint64_t *v15 = v12;
  v15[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_getKeyPath();
  __chkstk_darwin(v16, v17);
  sub_10083E4FC();
  swift_getKeyPath();
  sub_10083E5B0();
  swift_retain();
  CRAttributedString.Attributes.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v18 = &v2[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize];
  *(_DWORD *)uint64_t v18 = v26;
  v18[4] = BYTE4(v26);
  swift_getKeyPath();
  id v19 = sub_100916F3C();
  swift_release();
  uint64_t v20 = *(void **)&v2[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill];
  *(void *)&v2[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill] = v19;

  id v21 = [objc_allocWithZone(v0) CRLWPUnderlineAttributeWithColor:v24 width:v25];
  char v22 = sub_100BCAC7C((uint64_t)v2, (uint64_t)v21);

  if (v22)
  {

    return 0;
  }
  return v2;
}

int64_t sub_100917728(int64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v4 = *(void *)(a3 + 16);
  if (v4 <= a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v5 = result;
  if ((uint64_t)a2 < result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((uint64_t)v4 < result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (result < 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v6 = a2 - result;
  if (a2 == result)
  {
LABEL_21:
    double v20 = _swiftEmptyArrayStorage[2];
    swift_release();
    return *(void *)&v20 == 0;
  }
  if (a2 > result)
  {
    uint64_t v7 = *(void *)(a3 + 56 * a2 + 64);
    swift_bridgeObjectRetain();
    uint64_t v8 = 56 * v5;
    do
    {
      uint64_t v13 = a3 + v8;
      uint64_t v14 = *(void **)(a3 + v8 + 56);
      if (*(void *)(a3 + v8 + 64) < v7 || v14 == 0)
      {
        long long v22 = *(_OWORD *)(a3 + v8 + 64);
        long long v21 = *(_OWORD *)(v13 + 32);
        uint64_t v16 = *(void **)(v13 + 48);
        char v17 = *(unsigned char *)(v13 + 80);
        id v18 = v14;
        id v19 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB724(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
        }
        double v10 = _swiftEmptyArrayStorage[2];
        double v9 = _swiftEmptyArrayStorage[3];
        long long v11 = v22;
        if (*(void *)&v10 >= *(void *)&v9 >> 1)
        {
          sub_1006BB724(*(void *)&v9 > 1uLL, *(void *)&v10 + 1, 1);
          long long v11 = v22;
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v10 + 1;
        uint64_t v12 = &_swiftEmptyArrayStorage[7 * *(void *)&v10];
        *((_OWORD *)v12 + 2) = v21;
        *((void *)v12 + 6) = v19;
        *((void *)v12 + 7) = v14;
        *((_OWORD *)v12 + 4) = v11;
        *((unsigned char *)v12 + 80) = v17;
      }
      v8 += 56;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1009178DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  double v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPStorageCRDTData(0);
  __n128 v17 = __chkstk_darwin(v15 - 8, v16);
  id v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v20) {
    goto LABEL_10;
  }
  (*(void (**)(__n128))(*(void *)v20 + 760))(v17);
  sub_100919454((uint64_t)&v14[*(int *)(v11 + 20)], (uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  sub_100918D58((uint64_t)v14, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v19, v6);
  sub_100918D58((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v21 = CRAttributedString.count.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if (v21 >= (a1 & ~(a1 >> 63))) {
    uint64_t v22 = a1 & ~(a1 >> 63);
  }
  else {
    uint64_t v22 = v21;
  }
  if (v21 >= (a2 & ~(a2 >> 63))) {
    uint64_t v23 = a2 & ~(a2 >> 63);
  }
  else {
    uint64_t v23 = v21;
  }
  if (v23 < v22)
  {
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

uint64_t sub_100917B40(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v155 = a5;
  uint64_t v153 = a4;
  uint64_t v138 = a3;
  uint64_t v141 = a1;
  uint64_t v143 = sub_1005057FC(&qword_1016879D0);
  uint64_t v152 = *(void *)(v143 - 8);
  __chkstk_darwin(v143, v8);
  long long v142 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = (void *)sub_1005057FC(&qword_101687AE0);
  uint64_t v133 = (void (**)(char *, uint64_t))*(v137 - 1);
  __chkstk_darwin(v137, v14);
  uint64_t v136 = (char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_1005057FC(&qword_1016879E0);
  uint64_t v130 = *(void *)(v150 - 8);
  __chkstk_darwin(v150, v16);
  *(void *)&long long v135 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  char v149 = (char *)&v125 - v20;
  uint64_t v21 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v151 = (uint64_t)&v125 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  uint64_t v128 = *(void *)(v147 - 8);
  __chkstk_darwin(v147, v24);
  uint64_t v154 = (uint64_t)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_1005057FC((uint64_t *)&unk_10167BE70);
  uint64_t v145 = *(void *)(v156 - 8);
  __chkstk_darwin(v156, v26);
  char v148 = (uint64_t *)((char *)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  __chkstk_darwin(v28 - 8, v29);
  int v146 = (char *)&v125 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  long long v140 = (char *)&v125 - v33;
  uint64_t v34 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v127 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v35);
  char v37 = (char *)&v125 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v38, v39);
  float v41 = (char *)&v125 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v42, v43);
  int v45 = (char *)&v125 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132, v46);
  unsigned __int8 v129 = (char *)&v125 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v50 = __chkstk_darwin(v48, v49).n128_u64[0];
  uint64_t v52 = (char *)&v125 - v51;
  long long v159 = _swiftEmptyArrayStorage;
  id v53 = [a2 characterCount:v50];
  uint64_t v139 = a2;
  uint64_t v54 = *(void *)&a2[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  long long v144 = a6;
  if (v53)
  {
    if (v54)
    {
      (*(void (**)(void))(*(void *)v54 + 760))();
      sub_100919454((uint64_t)&v41[*(int *)(v38 + 20)], (uint64_t)v45, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v41, type metadata accessor for CRLWPShapeItemCRDTData);
      (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v129, v45, v132);
      sub_100918D58((uint64_t)v45, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v55 = v136;
      CRAttributedString.subscript.getter();
      uint64_t v56 = v135;
      char v57 = v137;
      CRAttributedString.Substring.runs.getter();
      v133[1](v55, (uint64_t)v57);
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(v149, v56, v150);
      CRAttributedString.Runs.next()();
      char v58 = *(void **)(v152 + 48);
      uint64_t v59 = v143;
      uint64_t v138 = v152 + 48;
      uint64_t v137 = v58;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v58)(v13, 1, v143) == 1)
      {
LABEL_4:
        (*(void (**)(char *, uint64_t))(v130 + 8))(v149, v150);
        sub_1008FB7F0();
        (*(void (**)(char *, uint64_t))(v131 + 8))(v129, v132);
        a6 = v144;
LABEL_7:
        uint64_t v70 = *((void *)v159 + 2);
        uint64_t v71 = v147;
        uint64_t v72 = v148;
        uint64_t v73 = (uint64_t)v146;
        if (v70)
        {
          uint64_t v74 = *(unsigned __int8 *)(v145 + 80);
          uint64_t v143 = (uint64_t)v159;
          uint64_t v75 = (uint64_t)v159 + ((v74 + 32) & ~v74);
          uint64_t v76 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
          uint64_t v77 = *(char **)(v145 + 72);
          char v149 = v77;
          uint64_t v150 = v128 + 48;
          do
          {
            sub_100522E9C(v75, (uint64_t)v72, (uint64_t *)&unk_10167BE70);
            sub_100522E9C((uint64_t)v72 + *(int *)(v156 + 36), v73, (uint64_t *)&unk_10167BE90);
            if ((*v76)(v73, 1, v71) == 1)
            {
              sub_100522F00(v73, (uint64_t *)&unk_10167BE90);
              uint64_t v78 = *v72;
              uint64_t v157 = 0;
              uint64_t v158 = 0;

              uint64_t v79 = *a6;
              uint64_t v80 = a6[1];
              if (v157 < *a6) {
                uint64_t v79 = v157;
              }
              if (v158 + v157 > v80) {
                uint64_t v80 = v158 + v157;
              }
              if (v80 < v79)
              {
                __break(1u);
LABEL_47:
                __break(1u);
LABEL_48:
                __break(1u);
LABEL_49:
                __break(1u);
LABEL_50:
                __break(1u);
              }
              *a6 = v79;
              a6[1] = v80;
            }
            else
            {
              uint64_t v81 = v73;
              uint64_t v82 = v154;
              sub_1009197F0(v81, v154);
              uint64_t v83 = v139;
              uint64_t v84 = sub_1009068B8(*(void *)(v82 + *(int *)(v71 + 24)), *(void *)(v82 + *(int *)(v71 + 24) + 8));
              uint64_t v86 = v85;
              uint64_t v87 = v151;
              sub_100522E9C(v82 + *(int *)(v71 + 20), v151, &qword_101672E90);
              uint64_t v152 = v86;
              uint64_t v153 = v84;
              id v88 = [v83 stringEquivalentFromRange:v84, v86];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v89 = type metadata accessor for URL();
              uint64_t v90 = *(void *)(v89 - 8);
              LODWORD(v87) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v87, 1, v89);
              swift_bridgeObjectRetain();
              uint64_t v92 = 0;
              if (v87 != 1)
              {
                uint64_t v93 = v151;
                URL._bridgeToObjectiveC()(v91);
                uint64_t v92 = v94;
                (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v93, v89);
              }
              id v95 = objc_allocWithZone((Class)CRLWPHyperlinkField);
              NSString v96 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              NSString v97 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v98 = [v95 initWithURL:v92 range:v153 displayText:v152 uuidString:v96];

              uint64_t v72 = v148;
              uint64_t v99 = *v148;
              uint64_t v157 = 0;
              uint64_t v158 = 0;

              a6 = v144;
              uint64_t v100 = *v144;
              uint64_t v101 = v144[1];
              if (v157 < *v144) {
                uint64_t v100 = v157;
              }
              if (v158 + v157 > v101) {
                uint64_t v101 = v158 + v157;
              }
              if (v101 < v100) {
                goto LABEL_47;
              }
              *long long v144 = v100;
              a6[1] = v101;

              sub_100918D58(v154, type metadata accessor for CRLWPHyperlinkSmartFieldData);
              uint64_t v73 = (uint64_t)v146;
              uint64_t v71 = v147;
              uint64_t v77 = v149;
              uint64_t v76 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v150;
            }
            sub_100522F00((uint64_t)v72, (uint64_t *)&unk_10167BE70);
            v75 += (uint64_t)v77;
            --v70;
          }
          while (v70);
        }
        return swift_bridgeObjectRelease();
      }
      uint64_t v136 = *(char **)(v152 + 32);
      v152 += 32;
      uint64_t v133 = (void (**)(char *, uint64_t))(v152 - 24);
      long long v135 = xmmword_10117E810;
      uint64_t v134 = v13;
      ((void (*)(char *, char *, uint64_t))v136)(v142, v13, v59);
      while (1)
      {
        sub_1005057FC(&qword_101687AE8);
        uint64_t v104 = *(void *)(v145 + 72);
        unint64_t v105 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
        uint64_t v106 = swift_allocObject();
        *(_OWORD *)(v106 + 16) = v135;
        uint64_t v107 = (uint64_t *)(v106 + v105);
        uint64_t v153 = CRAttributedString.Runs.Run.range.getter();
        uint64_t v109 = v108;
        __chkstk_darwin(v153, v108);
        sub_10091989C();
        swift_getKeyPath();
        uint64_t v110 = v143;
        sub_100913630();
        uint64_t v111 = v142;
        swift_retain();
        uint64_t v112 = (uint64_t)v140;
        CRAttributedString.Runs.Run.subscript.getter();
        swift_release();
        *uint64_t v107 = v153;
        v107[1] = v109;
        sub_10051B3EC(v112, v106 + v105 + *(int *)(v156 + 36), (uint64_t *)&unk_10167BE90);
        uint64_t v113 = *(void *)(v106 + 16);
        unint64_t v114 = (unint64_t)v159;
        int64_t v115 = *((void *)v159 + 2);
        int64_t v116 = v115 + v113;
        if (__OFADD__(v115, v113)) {
          goto LABEL_48;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v116 <= *(void *)(v114 + 24) >> 1)
        {
          if (!v113) {
            goto LABEL_27;
          }
        }
        else
        {
          if (v115 <= v116) {
            int64_t v118 = v115 + v113;
          }
          else {
            int64_t v118 = v115;
          }
          unint64_t v114 = sub_100F62A44(isUniquelyReferenced_nonNull_native, v118, 1, v114);
          long long v159 = (double *)v114;
          if (!v113) {
            goto LABEL_27;
          }
        }
        uint64_t v119 = *(void *)(v114 + 16);
        if ((*(void *)(v114 + 24) >> 1) - v119 < v113) {
          goto LABEL_49;
        }
        unint64_t v120 = v114 + v105 + v119 * v104;
        if ((unint64_t)v107 < v120 + v113 * v104 && v120 < (unint64_t)v107 + v113 * v104) {
          goto LABEL_53;
        }
        swift_arrayInitWithCopy();
        uint64_t v122 = *(void *)(v114 + 16);
        BOOL v123 = __OFADD__(v122, v113);
        uint64_t v124 = v122 + v113;
        if (v123) {
          goto LABEL_50;
        }
        *(void *)(v114 + 16) = v124;
LABEL_27:
        swift_bridgeObjectRelease();
        (*v133)(v111, v110);
        char v103 = v134;
        CRAttributedString.Runs.next()();
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v137)(v103, 1, v110) == 1) {
          goto LABEL_4;
        }
        ((void (*)(char *, char *, uint64_t))v136)(v111, v103, v110);
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v153 = v34;
    if (v54)
    {
      (*(void (**)(void))(*(void *)v54 + 760))();
      sub_100919454((uint64_t)&v41[*(int *)(v38 + 20)], (uint64_t)v45, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v41, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v60 = &v45[*(int *)(v42 + 20)];
      uint64_t v61 = v131;
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v131 + 16);
      uint64_t v126 = v52;
      uint64_t v63 = v132;
      v62(v52, v60, v132);
      sub_100918D58((uint64_t)v45, type metadata accessor for CRLWPStorageCRDTData);
      CRAttributedString.attributes(at:effectiveRange:)();
      sub_1005057FC(&qword_101687AE8);
      unint64_t v64 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_10117E810;
      char v66 = (void *)(v65 + v64);
      __chkstk_darwin(v65, v67);
      sub_10091989C();
      swift_getKeyPath();
      sub_100913630();
      swift_retain();
      uint64_t v68 = (uint64_t)v140;
      uint64_t v69 = v153;
      CRAttributedString.Attributes.subscript.getter();
      swift_release();
      void *v66 = 0;
      v66[1] = 0;
      sub_10051B3EC(v68, v65 + v64 + *(int *)(v156 + 36), (uint64_t *)&unk_10167BE90);
      sub_1006E1C64(v65);
      (*(void (**)(char *, uint64_t))(v127 + 8))(v37, v69);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v126, v63);
      goto LABEL_7;
    }
  }
  __break(1u);
LABEL_53:

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100918BCC(uint64_t a1)
{
  __n128 v1 = __chkstk_darwin(a1, a1);
  (*(void (**)(char *, __n128))(v3 + 16))((char *)&v5 - v2, v1);
  return swift_setAtWritableKeyPath();
}

uint64_t type metadata accessor for CRLWPAttributeValue()
{
  return sub_100568E70();
}

uint64_t sub_100918CD8()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255) {
    sub_10051ACA0(*(void *)(v0 + 16), *(void *)(v0 + 24), v1 & 1);
  }
  if (*(void *)(v0 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 264, 7);
}

uint64_t sub_100918D58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100918DB8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, Swift::Int a5, char a6)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v10 = sub_1005057FC(&qword_101687A90);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v25 - v16;
  *(uint64_t *)((char *)&v25 - v16) = (uint64_t)&_swiftEmptySetSingleton;
  sub_1005D3BF8();
  CRAttributedString.Attributes.init()();
  uint64_t v29 = &type metadata for CRLWPParagraphScope;
  uint64_t v30 = &type metadata for CRLWPParagraphAlignmentAttribute;
  unint64_t v18 = sub_1005F2218();
  unint64_t v31 = v18;
  uint64_t v32 = a4;
  uint64_t result = swift_getKeyPath();
  uint64_t v26 = a1;
  if (*(void *)&a1[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage])
  {
    uint64_t v20 = result;
    if (a6) {
      a5 = 4;
    }
    swift_retain();
    sub_100CB8180(&v33, 0xD000000000000012, 0x80000001012356A0);
    uint64_t v21 = swift_bridgeObjectRelease();
    __chkstk_darwin(v21, v22);
    *(&v25 - 4) = (uint64_t)&type metadata for CRLWPParagraphScope;
    *(&v25 - 3) = (uint64_t)&type metadata for CRLWPParagraphAlignmentAttribute;
    *(&v25 - 2) = v18;
    *(&v25 - 1) = v20;
    swift_getKeyPath();
    Swift::Int v33 = a5;
    LOBYTE(v34) = 0;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_100842B0C();
    CRAttributedString.Attributes.subscript.setter();
    sub_100522E9C((uint64_t)v17, (uint64_t)v13, &qword_101687A90);
    id v23 = objc_allocWithZone((Class)sub_1005057FC((uint64_t *)&unk_1016836E0));
    uint64_t v24 = sub_10083D5DC(v26, v27, v28, (uint64_t)v13);
    sub_100522F00((uint64_t)v17, &qword_101687A90);
    return v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100919000(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, int a6)
{
  int v26 = a6;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v9 = sub_1005057FC(&qword_101687A90);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13, v14);
  uint64_t v16 = &v25[-v15];
  *(void *)&v25[-v15] = &_swiftEmptySetSingleton;
  sub_1005D3BF8();
  CRAttributedString.Attributes.init()();
  uint64_t v29 = &type metadata for CRLWPParagraphScope;
  uint64_t v30 = &type metadata for CRLWPListStyleTypeAttribute;
  unint64_t v17 = sub_10083E1BC();
  unint64_t v31 = v17;
  uint64_t v32 = a4;
  uint64_t result = swift_getKeyPath();
  if (*(void *)&a1[OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage])
  {
    uint64_t v19 = result;
    swift_retain();
    sub_100CB8180(&v33, 0x6C7974537473696CLL, 0xE900000000000065);
    uint64_t v20 = swift_bridgeObjectRelease();
    __chkstk_darwin(v20, v21);
    *(void *)&v25[-32] = &type metadata for CRLWPParagraphScope;
    *(void *)&v25[-24] = &type metadata for CRLWPListStyleTypeAttribute;
    *(void *)&v25[-16] = v17;
    *(void *)&v25[-8] = v19;
    swift_getKeyPath();
    Swift::Int v22 = 3;
    if ((v26 & 1) == 0) {
      Swift::Int v22 = a5;
    }
    Swift::Int v33 = v22;
    LOBYTE(v34) = 0;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_10083E210();
    CRAttributedString.Attributes.subscript.setter();
    sub_100522E9C((uint64_t)v16, (uint64_t)v12, &qword_101687A90);
    id v23 = objc_allocWithZone((Class)sub_1005057FC((uint64_t *)&unk_1016836E0));
    uint64_t v24 = sub_10083D5DC(a1, v27, v28, (uint64_t)v12);
    sub_100522F00((uint64_t)v16, &qword_101687A90);
    return v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t _s8Freeform25CRLiCloudConnectionStatusO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_100919254()
{
  unint64_t result = qword_101687A08;
  if (!qword_101687A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687A08);
  }
  return result;
}

uint64_t sub_1009192A8(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 4) {
    return 4;
  }
  else {
    return 0x2010003u >> (8 * (a1 + 1));
  }
}

uint64_t sub_1009192CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100919454(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1009194BC()
{
  unint64_t result = qword_101687A60;
  if (!qword_101687A60)
  {
    sub_100522D34(&qword_101687A18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687A60);
  }
  return result;
}

uint64_t sub_100919530()
{
  return swift_getAtKeyPath();
}

uint64_t sub_10091953C()
{
  return 8;
}

uint64_t sub_100919548()
{
  return swift_release();
}

uint64_t sub_100919550(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10091955C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, (uint64_t *)&unk_101683808) & 1;
}

uint64_t sub_100919580(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, (uint64_t *)&unk_101683808);
}

void *sub_10091958C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1009195A0()
{
  return 32;
}

uint64_t sub_1009195AC(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return swift_retain();
}

__n128 sub_1009195D4(__n128 *a1, uint64_t a2)
{
  *(void *)a2 = a1[1].n128_u64[1];
  __n128 result = *a1;
  *(void *)(a2 + 24) = a1[1].n128_u64[0];
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1009195F4()
{
  return 8;
}

uint64_t sub_100919600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, (uint64_t *)&unk_101683850) & 1;
}

uint64_t sub_100919624(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, (uint64_t *)&unk_101683850);
}

uint64_t sub_100919634()
{
  return 8;
}

uint64_t sub_100919640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, &qword_101683730) & 1;
}

uint64_t sub_100919664(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, &qword_101683730);
}

uint64_t sub_100919674()
{
  return 8;
}

uint64_t sub_100919680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, (uint64_t *)&unk_101687AD0) & 1;
}

uint64_t sub_1009196A4(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, (uint64_t *)&unk_101687AD0);
}

uint64_t sub_1009196B4()
{
  return 8;
}

uint64_t sub_1009196C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, &qword_1016838E8) & 1;
}

uint64_t sub_1009196E4(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, &qword_1016838E8);
}

uint64_t sub_1009196F4()
{
  return 8;
}

uint64_t sub_100919700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, (uint64_t *)&unk_101683910) & 1;
}

uint64_t sub_100919724(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, (uint64_t *)&unk_101683910);
}

uint64_t sub_100919734()
{
  return 8;
}

uint64_t sub_100919740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, &qword_101683920) & 1;
}

uint64_t sub_100919764(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, &qword_101683920);
}

uint64_t sub_100919774()
{
  return 8;
}

uint64_t sub_100919780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, (uint64_t *)&unk_1016838F0) & 1;
}

uint64_t sub_1009197A4(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, (uint64_t *)&unk_1016838F0);
}

uint64_t sub_1009197B4()
{
  return 8;
}

uint64_t sub_1009197C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, &qword_101683900) & 1;
}

uint64_t sub_1009197E4(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, &qword_101683900);
}

uint64_t sub_1009197F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10091985C()
{
  return 24;
}

uint64_t sub_100919868(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return swift_retain();
}

__n128 sub_100919888(__n128 *a1, uint64_t a2)
{
  *(void *)a2 = a1[1].n128_u64[0];
  __n128 result = *a1;
  *(__n128 *)(a2 + 8) = *a1;
  return result;
}

unint64_t sub_10091989C()
{
  unint64_t result = qword_101687AF0;
  if (!qword_101687AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687AF0);
  }
  return result;
}

uint64_t sub_1009198F0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100919928(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100919938()
{
  return swift_release();
}

uint64_t sub_100919940()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100919950(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 16) = 1;
  *a4 = 1;
  return result;
}

uint64_t sub_1009199A0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009199D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, uint64_t a7)
{
  return sub_1009108EC(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t sub_1009199E8()
{
  return 24;
}

void sub_1009199FC(uint64_t a1, unint64_t a2, unint64_t a3, char *a4, char *a5)
{
  uint64_t v61 = a5;
  unint64_t v62 = a3;
  uint64_t v63 = a4;
  unint64_t v65 = a2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  __chkstk_darwin(v6 - 8, v7);
  char v66 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  uint64_t v60 = *(char **)(v67 - 8);
  __chkstk_darwin(v67, v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016879D0);
  uint64_t v73 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_1016879C8);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v20 = *(void *)(v70 - 8);
  __chkstk_darwin(v70, v21);
  uint64_t v69 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v23, v24);
  int v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v27 - 8, v28);
  uint64_t v30 = (char *)&v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1005057FC(&qword_1016879E0);
  __chkstk_darwin(v72, v31);
  Swift::Int v33 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v37 = __chkstk_darwin(v34, v35);
  uint64_t v71 = (char *)&v59 - v38;
  if (a1 == 6)
  {
    uint64_t v59 = v36;
    unint64_t v64 = v11;
    uint64_t v39 = *(void *)&v63[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v39)
    {
      (*(void (**)(__n128))(*(void *)v39 + 760))(v37);
      sub_100919454((uint64_t)&v26[*(int *)(v23 + 20)], (uint64_t)v30, type metadata accessor for CRLWPStorageCRDTData);
      sub_100918D58((uint64_t)v26, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v40 = v69;
      uint64_t v41 = v70;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v69, v30, v70);
      sub_100918D58((uint64_t)v30, type metadata accessor for CRLWPStorageCRDTData);
      CRAttributedString.runs.getter();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v40, v41);
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v71, v33, v72);
      CRAttributedString.Runs.next()();
      uint64_t v69 = *(char **)(v73 + 48);
      uint64_t v70 = v73 + 48;
      int v42 = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v19, 1, v12);
      uint64_t v43 = v63;
      uint64_t v45 = (uint64_t)v66;
      uint64_t v44 = v67;
      if (v42 != 1)
      {
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
        uint64_t v46 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
        v62 += v65;
        uint64_t v60 = v61 + 16;
        v73 += 32;
        uint64_t v47 = (void (**)(char *, uint64_t))(v73 - 24);
        v68(v15, v19, v12);
        while (1)
        {
          swift_getKeyPath();
          sub_100913630();
          CRAttributedString.Runs.Run.subscript.getter();
          swift_release();
          if ((*v46)(v45, 1, v44) == 1)
          {
            (*v47)(v15, v12);
            sub_100522F00(v45, (uint64_t *)&unk_10167BE90);
          }
          else
          {
            uint64_t v48 = v45;
            uint64_t v49 = (uint64_t)v64;
            sub_1009197F0(v48, (uint64_t)v64);
            double v50 = (uint64_t *)(v49 + *(int *)(v44 + 24));
            uint64_t v51 = *v50;
            uint64_t v52 = v50[1];
            swift_bridgeObjectRetain();
            unint64_t v53 = sub_1009068B8(v51, v52);
            uint64_t v55 = v54;
            swift_bridgeObjectRelease();
            if (v53 >= v65 && v62 >= v53 + v55)
            {
              char v74 = 0;
              id v75 = sub_100916348(v49, v43);
              id v57 = v75;
              sub_1005057FC(&qword_1016877E8);
              uint64_t v58 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
              (*((void (**)(char *, uint64_t, unint64_t, uint64_t, char *))v61 + 2))(v61, v58, v53, v55, &v74);
              swift_unknownObjectRelease();
              sub_100918D58(v49, type metadata accessor for CRLWPHyperlinkSmartFieldData);
              (*v47)(v15, v12);

              if (v74) {
                break;
              }
              uint64_t v43 = v63;
            }
            else
            {
              sub_100918D58(v49, type metadata accessor for CRLWPHyperlinkSmartFieldData);
              (*v47)(v15, v12);
            }
            uint64_t v45 = (uint64_t)v66;
            uint64_t v44 = v67;
          }
          CRAttributedString.Runs.next()();
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v69)(v19, 1, v12) == 1) {
            break;
          }
          v68(v15, v19, v12);
        }
      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v71, v72);
    }
    else
    {
      _Block_release(v61);
      __break(1u);
    }
  }
}

uint64_t sub_10091A17C(char *a1, char **a2, void *a3)
{
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) & 1) == 0) {
    sub_1008FDB6C();
  }
  uint64_t v7 = *(void *)(v3 + *a3);
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_100907A04(&v12, v7, a1);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t result = v12;
  if (a2)
  {
    if (__OFSUB__(v10, v8))
    {
      __break(1u);
    }
    else
    {
      *a2 = v8;
      a2[1] = (char *)(v10 - (void)v8);
    }
  }
  return result;
}

uint64_t sub_10091A210(uint64_t a1)
{
  int v1 = a1;
  LODWORD(result) = sub_1001CA284(a1);
  if (v1 == 8232) {
    return 1;
  }
  else {
    return result;
  }
}

uint64_t sub_10091A240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10091A2A8()
{
  return 8;
}

uint64_t sub_10091A2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, &qword_101683700) & 1;
}

uint64_t sub_10091A2D8(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, &qword_101683700);
}

uint64_t sub_10091A2E8()
{
  return 8;
}

uint64_t sub_10091A2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, &qword_101687BC8) & 1;
}

uint64_t sub_10091A318(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, &qword_101687BC8);
}

uint64_t sub_10091A328()
{
  return 8;
}

uint64_t sub_10091A334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FAA00(a1, a2, a3, &qword_101687BC0) & 1;
}

uint64_t sub_10091A358(uint64_t a1, uint64_t a2)
{
  return sub_10091A364(a1, a2, &qword_101687BC0);
}

uint64_t sub_10091A364(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t sub_10091A3A8()
{
  return sub_1008F1B54();
}

uint64_t sub_10091A3B0(uint64_t a1)
{
  swift_retain();
  sub_100918BCC(a1);

  return swift_release();
}

uint64_t sub_10091A408()
{
  return 40;
}

uint64_t sub_10091A414(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return swift_retain();
}

__n128 sub_10091A43C(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 16);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_10091A454()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10091A48C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100902938(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_10091A494()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10091A4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100F89548(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_10091A4B4()
{
  return 24;
}

BOOL sub_10091A4C8()
{
  return (CharacterSet.contains(_:)() & 1) == 0;
}

uint64_t sub_10091A500()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10091A510()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10091A528()
{
  return 32;
}

void *sub_10091A53C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLWPStorage.SubstorageAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for CRLWPStorage.SubstorageAttributes(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for CRLWPStorage.SubstorageAttributes(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for CRLWPStorage.SubstorageAttributes()
{
  return &type metadata for CRLWPStorage.SubstorageAttributes;
}

uint64_t sub_10091A674()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10091A710(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 16) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 16) & ~v5, ((unint64_t)a2 + v5 + 16) & ~v5);
  }
  return v3;
}

uint64_t sub_10091A7F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

_OWORD *sub_10091A834(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_10091A8A4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_10091A91C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_10091A98C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_10091A9FC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_10091AB78(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 16) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x10091ADACLL);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 16] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t type metadata accessor for CRLWPStorage.SubstorageAttributes.SingleAttributeRun()
{
  return sub_100568E70();
}

uint64_t sub_10091ADEC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_10091AE84(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v5) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_10091B000(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_bridgeObjectRelease();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_10091B100(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_10091B23C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[v7] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

void *sub_10091B458(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_10091B590(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_10091B7A8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_10091B8DC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x10091BAA4);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_10091BACC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_10091BB84(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

unsigned char *_s8Freeform18CRLWPListStyleTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10091BD28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPHyperlinkSmartFieldData.CodingKeys()
{
  return &type metadata for CRLWPHyperlinkSmartFieldData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLWPSmartFieldDataType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10091BDFCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPSmartFieldDataType()
{
  return &type metadata for CRLWPSmartFieldDataType;
}

unint64_t sub_10091BE38()
{
  unint64_t result = qword_101687D28;
  if (!qword_101687D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687D28);
  }
  return result;
}

unint64_t sub_10091BE90()
{
  unint64_t result = qword_101687D30;
  if (!qword_101687D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687D30);
  }
  return result;
}

unint64_t sub_10091BEE8()
{
  unint64_t result = qword_101687D38;
  if (!qword_101687D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687D38);
  }
  return result;
}

unint64_t sub_10091BF40()
{
  unint64_t result = qword_101687D40;
  if (!qword_101687D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687D40);
  }
  return result;
}

uint64_t sub_10091BF94(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

unint64_t sub_10091BF9C()
{
  unint64_t result = qword_101687D80;
  if (!qword_101687D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101687D80);
  }
  return result;
}

uint64_t sub_10091C108@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v3 - 8, v4);
  unsigned int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10077F98C(v1 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v6);
  int v7 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store);
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
  uint64_t v9 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  unsigned int v10 = *(void **)&v7[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v10)
  {
    id v11 = *(id *)&v7[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v12 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    unsigned int v13 = v7;
    id v14 = sub_100EAFDE4((uint64_t)v13);

    uint64_t v15 = *(void **)&v7[v9];
    *(void *)&v7[v9] = v14;
    id v11 = v14;

    unsigned int v10 = 0;
  }
  int v16 = *(os_unfair_lock_s **)(v8 + 16);
  id v17 = v10;
  os_unfair_lock_unlock(v16);
  sub_100EA7CA0((uint64_t)v6, 0, 3, 0, 0, a1);

  return sub_100671108((uint64_t)v6);
}

uint64_t sub_10091C24C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData;
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for CRLAssetData() + 20));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10091C298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

BOOL sub_10091C30C()
{
  uint64_t v1 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10077F98C(v0 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v4);
  uint64_t v9 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store);
  uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  uint64_t v11 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  id v12 = *(void **)&v9[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v12)
  {
    id v13 = *(id *)&v9[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v14 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v15 = v9;
    id v16 = sub_100EAFDE4((uint64_t)v15);

    id v17 = *(void **)&v9[v11];
    *(void *)&v9[v11] = v16;
    id v13 = v16;

    id v12 = 0;
  }
  char v18 = *(os_unfair_lock_s **)(v10 + 16);
  id v19 = v12;
  os_unfair_lock_unlock(v18);
  sub_100EA7CA0((uint64_t)v4, 0, 3, 0, 0, v8);

  sub_100671108((uint64_t)v4);
  uint64_t v20 = type metadata accessor for URL();
  BOOL v21 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v8, 1, v20) == 1;
  sub_1005CCBB8((uint64_t)v8);
  return v21;
}

void sub_10091C4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v55 = a2;
  uint64_t v49 = a1;
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v52 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v52, v8);
  uint64_t v51 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  double v50 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v16 - 8, v17);
  id v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10077F98C(v4 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v15);
  uint64_t v20 = *(char **)(v4 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store);
  uint64_t v21 = *(void *)&v20[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 16));
  uint64_t v22 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v23 = *(void **)&v20[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v23)
  {
    id v24 = *(id *)&v20[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v25 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    int v26 = v20;
    id v27 = sub_100EAFDE4((uint64_t)v26);

    uint64_t v28 = *(void **)&v20[v22];
    *(void *)&v20[v22] = v27;
    id v24 = v27;

    uint64_t v23 = 0;
  }
  uint64_t v29 = *(os_unfair_lock_s **)(v21 + 16);
  id v30 = v23;
  os_unfair_lock_unlock(v29);
  sub_100EA7CA0((uint64_t)v15, 0, 3, 0, 0, v19);

  sub_100671108((uint64_t)v15);
  uint64_t v31 = type metadata accessor for URL();
  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v19, 1, v31);
  sub_1005CCBB8((uint64_t)v19);
  if (v32 == 1)
  {
    uint64_t v33 = type metadata accessor for TaskPriority();
    uint64_t v34 = (uint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v50, 1, 1, v33);
    uint64_t v36 = v51;
    uint64_t v35 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v51, v49, v52);
    unint64_t v37 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v38 = (v7 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = (char *)swift_allocObject();
    *((void *)v39 + 2) = 0;
    *((void *)v39 + 3) = 0;
    *((void *)v39 + 4) = v5;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v39[v37], v36, v35);
    uint64_t v40 = v54;
    *(void *)&v39[v38] = v55;
    uint64_t v41 = &v39[(v38 + 15) & 0xFFFFFFFFFFFFFFF8];
    *(void *)uint64_t v41 = v53;
    *((void *)v41 + 1) = v40;
    swift_retain();
    swift_retain();
    sub_1005912D0(v34, (uint64_t)&unk_101687EE8, (uint64_t)v39);
    swift_release();
  }
  else if ((v55 & 2) != 0)
  {
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v54;
    *(void *)(v42 + 16) = v53;
    *(void *)(v42 + 24) = v43;
    aBlock[4] = sub_10080D4E4;
    void aBlock[5] = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    aBlock[3] = &unk_10151ACD8;
    uint64_t v44 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v45 = v44;
    if (+[NSThread isMainThread])
    {
      v45[2](v45);
    }
    else
    {
      id v46 = &_dispatch_main_q;
      id v47 = &_dispatch_main_q;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v45);
    }
    _Block_release(v45);
  }
}

uint64_t sub_10091C9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[8] = a4;
  sub_1005057FC(&qword_101672E90);
  v8[13] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for UUID();
  v8[14] = v9;
  v8[15] = *(void *)(v9 - 8);
  v8[16] = swift_task_alloc();
  return _swift_task_switch(sub_10091CAA4, 0, 0);
}

uint64_t sub_10091CAA4()
{
  uint64_t v1 = *(char **)(v0[8] + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store);
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  uint64_t v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager];
  if (!v4)
  {
    uint64_t v5 = v1;
    uint64_t v4 = sub_100678E6C(v5);

    *(void *)&v1[v3] = v4;
    swift_retain();
    swift_release();
  }
  v0[17] = v4;
  v0[18] = v4;
  uint64_t v7 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[8];
  uint64_t v10 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_unlock(v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, v8);
  return _swift_task_switch(sub_10091CBC4, v4, 0);
}

uint64_t sub_10091CBC4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10091CC70;
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[13];
  return sub_100EA869C(v3, v2, 0, 0, 3);
}

uint64_t sub_10091CC70()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_10091CD80, v2, 0);
}

uint64_t sub_10091CD80()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = type metadata accessor for URL();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  sub_1005CCBB8(v1);
  if (v3 == 1)
  {
    uint64_t v5 = v0[11];
    uint64_t v4 = v0[12];
    uint64_t v7 = v0[9];
    uint64_t v6 = v0[10];
    sub_100675DE4(v0[16]);
    sub_100676024(v7, v6, v5, v4);
    swift_release();
  }
  else if ((v0[10] & 2) != 0)
  {
    uint64_t v9 = v0[11];
    uint64_t v8 = v0[12];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v8;
    v0[6] = sub_100528194;
    v0[7] = v10;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = *(void *)"";
    v0[4] = sub_100679958;
    v0[5] = &unk_10151AD28;
    uint64_t v11 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    uint64_t v12 = v11;
    if (+[NSThread isMainThread])
    {
      v12[2](v12);
    }
    else
    {
      id v13 = &_dispatch_main_q;
      id v14 = &_dispatch_main_q;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);
    }
    _Block_release(v12);
  }
  swift_release();
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10091CFB4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3, v6);
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  id v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = 0;
  *((void *)v13 + 3) = 0;
  *((void *)v13 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v13[v12], (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain();
  sub_1005912D0((uint64_t)v10, (uint64_t)&unk_101687ED8, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_10091D184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  _OWORD v5[3] = a5;
  uint64_t v6 = type metadata accessor for UUID();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return _swift_task_switch(sub_10091D244, 0, 0);
}

uint64_t sub_10091D244()
{
  uint64_t v1 = *(char **)(v0[2] + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store);
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  uint64_t v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager];
  if (!v4)
  {
    uint64_t v5 = v1;
    uint64_t v4 = sub_100678E6C(v5);

    *(void *)&v1[v3] = v4;
    swift_retain();
    swift_release();
  }
  v0[7] = v4;
  uint64_t v7 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v8 = v0[4];
  uint64_t v9 = v0[2];
  uint64_t v10 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_unlock(v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, v8);
  return _swift_task_switch(sub_10091D364, v4, 0);
}

uint64_t sub_10091D364()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  sub_100671ACC(v1, v0[3]);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10091D400()
{
  return sub_10091D440((uint64_t)&unk_10151AC48, (uint64_t)&unk_1016727E8);
}

uint64_t sub_10091D420()
{
  return sub_10091D440((uint64_t)&unk_10151AC20, (uint64_t)&unk_101672800);
}

uint64_t sub_10091D440(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  v28[1] = a1;
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v29 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6, v9);
  v28[0] = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  id v13 = (char *)v28 - v12;
  id v14 = *(char **)(v2 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store);
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 16));
  uint64_t v16 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  if (*(void *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager])
  {
    uint64_t v17 = *(void *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager];
  }
  else
  {
    uint64_t v18 = v14;
    uint64_t v17 = sub_100678E6C(v18);

    *(void *)&v14[v16] = v17;
    swift_retain();
    swift_release();
  }
  id v19 = *(os_unfair_lock_s **)(v15 + 16);
  swift_retain();
  os_unfair_lock_unlock(v19);
  uint64_t v20 = v2 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21(v13, v20, v6);
  uint64_t v22 = type metadata accessor for TaskPriority();
  uint64_t v23 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v29, 1, 1, v22);
  uint64_t v24 = v28[0];
  v21((char *)v28[0], (uint64_t)v13, v6);
  unint64_t v25 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  int v26 = (char *)swift_allocObject();
  *((void *)v26 + 2) = 0;
  *((void *)v26 + 3) = 0;
  *((void *)v26 + 4) = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(&v26[v25], v24, v6);
  swift_retain();
  sub_1005912D0(v23, v30, (uint64_t)v26);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
}

void sub_10091D700()
{
  sub_100671108(v0 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData);
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store);
}

uint64_t sub_10091D740()
{
  sub_100671108(v0 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData);

  return swift_deallocClassInstance();
}

uint64_t sub_10091D7B4()
{
  return type metadata accessor for CRLAssetBackedAssetStorage();
}

uint64_t type metadata accessor for CRLAssetBackedAssetStorage()
{
  uint64_t result = qword_101687DB8;
  if (!qword_101687DB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10091D808()
{
  uint64_t result = type metadata accessor for CRLAssetData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10091D8B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_10091D184(a1, v5, v6, v7, v8);
}

uint64_t sub_10091D9AC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10091DAA8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = *(void *)((char *)v1 + v6);
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = (void *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  void *v15 = v2;
  v15[1] = sub_100528D08;
  return sub_10091C9AC(a1, v7, v8, v9, v11, v10, v13, v14);
}

uint64_t sub_10091DBF4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10091DC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10091DC3C()
{
  return swift_release();
}

uint64_t sub_10091E328()
{
  uint64_t v0 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PersonNameComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007014C4((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, &qword_101687FD0);
LABEL_8:
    uint64_t v12 = sub_100701F80();
    unint64_t v14 = v16;
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
  uint64_t v9 = self;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v11 = [v9 localizedStringFromPersonNameComponents:isa style:1 options:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  if ((v14 & 0x2000000000000000) != 0) {
    uint64_t v15 = HIBYTE(v14) & 0xF;
  }
  else {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_9:
  id v17 = [self mainBundle];
  NSString v18 = String._bridgeToObjectiveC()();
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v17 localizedStringForKey:v18 value:v19 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10117E810;
  *(void *)(v21 + 56) = &type metadata for String;
  *(void *)(v21 + 64) = sub_100528BE4();
  *(void *)(v21 + 32) = v12;
  *(void *)(v21 + 40) = v14;
  uint64_t v22 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v22;
}

id sub_10091E650()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage___participantColor;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage___participantColor);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage___participantColor);
  }
  else
  {
    id v4 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_followingParticipant) collaboratorColorForType:2];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10091E6D0()
{
  uint64_t v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [self systemFontOfSize:13.0 weight:UIFontWeightMedium];
  if ([self isIncreaseContrastEnabled])
  {
    id v3 = sub_10091E650();
    id v4 = [v3 UIColor];

    id v5 = [v4 CGColor];
    id v6 = [objc_allocWithZone((Class)CRLColor) initWithCGColor:v5];

    [v6 brightnessComponent];
    double v8 = v7;

    if (v8 > 0.5)
    {
      id v9 = [v0 blackColor];

      id v1 = v9;
    }
  }
  sub_1005057FC((uint64_t *)&unk_101687FB0);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v11 = sub_10050BF48(0, (unint64_t *)&qword_101695490);
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  *(void *)(inited + 104) = sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
  *(void *)(inited + 80) = v1;
  uint64_t v12 = NSFontAttributeName;
  id v13 = v2;
  unint64_t v14 = NSForegroundColorAttributeName;
  id v15 = v1;
  sub_100A38A68(inited);
  sub_10091E328();
  id v16 = objc_allocWithZone((Class)NSAttributedString);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v16 initWithString:v17 attributes:isa];

  return v19;
}

void *sub_10091E974()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101687FA0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v39 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_10168A8B0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  id v9 = (char *)&v39 - v8;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_1016725A0);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UIButton.Configuration();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  NSString v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v39 - v21;
  static UIButton.Configuration.tinted()();
  swift_bridgeObjectRetain();
  UIButton.Configuration.title.setter();
  uint64_t v23 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.cornerRadius.setter();
  v23(v41, 0);
  uint64_t v24 = self;
  id v25 = [v24 whiteColor];
  UIButton.Configuration.baseForegroundColor.setter();
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v26 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v13, 0, 1, v26);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&unk_101672590);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v22, v14);
  id v28 = v27;
  uint64_t v29 = (void *)UIButton.init(configuration:primaryAction:)();
  [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v30 = [v24 blackColor];
  id v31 = [v30 colorWithAlphaComponent:0.3];

  UIButton.configuration.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14))
  {
    sub_100522E9C((uint64_t)v9, (uint64_t)v40, &qword_10168A8B0);
    UIButton.configuration.setter();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
    sub_100522F00((uint64_t)v9, &qword_10168A8B0);
  }
  else
  {
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v32;
    *(void *)(v33 + 24) = v31;
    uint64_t v34 = (char *)v31;
    uint64_t v35 = v39;
    uint64_t v40 = v34;
    UIConfigurationColorTransformer.init(_:)();
    uint64_t v36 = type metadata accessor for UIConfigurationColorTransformer();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    unint64_t v37 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
    UIBackgroundConfiguration.backgroundColorTransformer.setter();
    v37(v41, 0);
    UIButton.configuration.setter();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
  }
  return v29;
}

uint64_t sub_10091EF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  [self systemFontOfSize:11.0 weight:UIFontWeightBold];
  sub_100522B9C();
  return AttributeContainer.subscript.setter();
}

void sub_10091EFEC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void (**)(void))(Strong + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler);
    sub_1005173A0((uint64_t)v2);

    if (v2)
    {
      v2();
      sub_1005174AC((uint64_t)v2);
    }
  }
}

id sub_10091F078(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    if ([Strong state] == (id)1)
    {
      id v5 = [self blackColor];
      id v6 = [v5 colorWithAlphaComponent:0.5];

      return v6;
    }
    else
    {
      id v8 = a3;

      return v8;
    }
  }
  else
  {
    return a3;
  }
}

void sub_10091F170()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView;
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView), "subviews"));
  uint64_t v4 = sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (!v6) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_10;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v5 + 8 * i + 32);
    }
    id v9 = v8;
    [v8 removeFromSuperview];
  }
LABEL_10:
  id v93 = (id)v4;
  swift_bridgeObjectRelease_n();
  id v10 = [objc_allocWithZone((Class)CNAvatarViewController) init];
  uint64_t v11 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_followingParticipant)
                 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
  if (v11)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_101177E70;
    *(void *)(v12 + 32) = v11;
    v96[0] = v12;
    specialized Array._endMutation()();
    sub_10050BF48(0, (unint64_t *)&qword_10167C580);
    id v13 = v11;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v10 setContacts:isa];
  }
  uint64_t v92 = v10;
  id v15 = [v10 view];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)(v1 + v2) addSubview:v15];
  id v16 = [v15 leadingAnchor];
  id v17 = [*(id *)(v1 + v2) leadingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:8.0];

  [v18 setActive:1];
  id v19 = [v15 widthAnchor];
  id v20 = [v19 constraintEqualToConstant:26.0];

  [v20 setActive:1];
  id v21 = [v15 heightAnchor];
  id v22 = [v21 constraintEqualToConstant:26.0];

  [v22 setActive:1];
  id v23 = [v15 centerYAnchor];
  id v24 = [*(id *)(v1 + v2) centerYAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  [v25 setActive:1];
  id v26 = [objc_allocWithZone((Class)UIStackView) init];
  [v26 setAlignment:3];
  [v26 setAxis:1];
  [v26 setDistribution:1];
  [v26 setSpacing:3.0];
  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v27 = v2;
  [*(id *)(v1 + v2) addSubview:v26];
  id v28 = sub_10091FFE8();
  [v28 setNumberOfLines:2];
  id v29 = sub_10091E6D0();
  if (v29)
  {
    id v30 = v29;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLPersistentFollowHUDController.swift", 107, 2, 245, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v88) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLPersistentFollowHUDController.swift", 107, 2, 245);
    id v31 = objc_allocWithZone((Class)NSAttributedString);
    NSString v32 = String._bridgeToObjectiveC()();
    id v30 = [v31 initWithString:v32 invalid nil found when unwrapping value:39 v88];
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v34 = (void *)Strong;
    sub_100B25FB8(v28, 1);
  }
  [v28 setAttributedText:v30];
  id v35 = [v26 leadingAnchor];
  id v36 = [v15 trailingAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36 constant:8.0];

  [v37 setActive:1];
  id v38 = [v26 heightAnchor];
  id v39 = [v38 constraintEqualToConstant:24.0];

  [v39 setActive:1];
  id v40 = [v26 centerYAnchor];
  id v41 = [*(id *)(v1 + v27) centerYAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41];

  [v42 setActive:1];
  [v26 addArrangedSubview:v28];
  [v26 setShowsLargeContentViewer:1];
  id v43 = v26;
  uint64_t v91 = v30;
  NSString v44 = [v30 string];
  uint64_t v90 = v15;
  if (!v44)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v43 setLargeContentTitle:v44];

  id v45 = [objc_allocWithZone((Class)UILargeContentViewerInteraction) initWithDelegate:v1];
  [v43 addInteraction:v45];

  [v28 setTextAlignment:0];
  id v46 = sub_10091E974();
  [v46 setIsAccessibilityElement:1];
  id v47 = v46;
  uint64_t v89 = v28;
  NSString v48 = String._bridgeToObjectiveC()();
  [v47 setAccessibilityLabel:v48];

  UIAccessibilityTraits v49 = UIAccessibilityTraitButton;
  id v50 = v47;
  unint64_t v51 = (unint64_t)[v50 accessibilityTraits];
  if ((v49 & ~v51) != 0) {
    UIAccessibilityTraits v52 = v49;
  }
  else {
    UIAccessibilityTraits v52 = 0;
  }
  [v50 setAccessibilityTraits:v52 | v51];

  [v50 setShowsLargeContentViewer:1];
  NSString v53 = String._bridgeToObjectiveC()();
  [v50 setLargeContentTitle:v53];

  id v54 = [objc_allocWithZone((Class)UILargeContentViewerInteraction) initWithDelegate:v1];
  [v50 addInteraction:v54];

  [*(id *)(v1 + v27) addSubview:v50];
  id v55 = [v50 leadingAnchor];
  id v56 = [v43 trailingAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56 constant:8.0];

  [v57 setActive:1];
  id v58 = [v50 trailingAnchor];
  id v59 = [*(id *)(v1 + v27) trailingAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59 constant:-8.0];

  [v60 setActive:1];
  id v61 = [v50 heightAnchor];
  id v62 = [v61 constraintEqualToConstant:24.0];

  [v62 setActive:1];
  id v63 = [v50 centerYAnchor];
  id v64 = [*(id *)(v1 + v27) centerYAnchor];
  id v65 = [v63 constraintEqualToAnchor:v64];

  [v65 setActive:1];
  id v66 = [*(id *)(v1 + v27) leadingAnchor];
  uint64_t v67 = OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_containerView;
  id v68 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_containerView) leadingAnchor];
  id v69 = [v66 constraintEqualToAnchor:v68];

  [v69 setActive:1];
  id v70 = [*(id *)(v1 + v27) heightAnchor];
  id v71 = [v70 constraintEqualToConstant:40.0];

  [v71 setActive:1];
  id v72 = [*(id *)(v1 + v27) topAnchor];
  id v73 = [*(id *)(v1 + v67) topAnchor];
  id v74 = [v72 constraintEqualToAnchor:v73];

  [v74 setActive:1];
  id v75 = [*(id *)(v1 + v27) trailingAnchor];
  id v76 = [*(id *)(v1 + v67) trailingAnchor];
  id v77 = [v75 constraintEqualToAnchor:v76];

  [v77 setActive:1];
  uint64_t v78 = OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_height;
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_height) = 0x404C000000000000;
  id v79 = [*(id *)(v1 + v67) heightAnchor];
  id v80 = [v79 constraintEqualToConstant:*(double *)(v1 + v78)];

  [v80 setActive:1];
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  uint64_t v81 = *(void **)(v1 + v67);
  v96[3] = v93;
  v96[0] = v81;
  memset(v95, 0, sizeof(v95));
  double v82 = *(double *)(v1 + v78);
  id v83 = v81;
  id v84 = sub_1009D1E6C(v96, 8, 0, v95, 8, 1.0, v82);
  uint64_t v85 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_heightConstraint);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_heightConstraint) = v84;

  id v86 = [*(id *)(v1 + v27) layer];
  [v86 setMasksToBounds:0];

  id v87 = [*(id *)(v1 + v27) layer];
  [v87 setCornerCurve:kCACornerCurveContinuous];

  id v94 = [*(id *)(v1 + v27) layer];
  [v94 setCornerRadius:20.0];
}

id sub_10091FFE8()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage____label;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage____label);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage____label);
  }
  else
  {
    sub_10091E328();
    uint64_t v4 = (void *)sub_100EBD9C4();
    swift_bridgeObjectRelease();
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1009201A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLPersistentFollowHUDController();
  return [super dealloc];
}

uint64_t sub_100920328()
{
  return type metadata accessor for CRLPersistentFollowHUDController();
}

uint64_t type metadata accessor for CRLPersistentFollowHUDController()
{
  uint64_t result = qword_101687F88;
  if (!qword_101687F88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10092037C()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

char *sub_1009205BC(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v14 = objc_allocWithZone((Class)type metadata accessor for CRLPersistentFollowHUDController());
  id v15 = (char *)sub_1009208AC(a1, a2, a3, (uint64_t)a4, v14);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  id v16 = (double *)&v15[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_canvasWidth];
  *id v16 = a7;
  *((unsigned char *)v16 + 8) = 0;
  id v17 = (uint64_t *)&v15[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler];
  uint64_t v18 = *(void *)&v15[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler];
  *id v17 = a5;
  v17[1] = a6;
  id v19 = v15;
  sub_1005173A0(a5);
  uint64_t v20 = sub_1005174AC(v18);
  if ((v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_setupDone] & 1) == 0)
  {
    v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_setupDone] = 1;
    sub_100E38C64(v20);
    uint64_t v21 = OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView;
    id v22 = *(id *)&v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView];
    id v23 = sub_10091FFE8();
    [v22 addSubview:v23];

    [*(id *)&v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_containerView] addSubview:*(void *)&v19[v21]];
    sub_10091F170();
  }
  uint64_t v24 = sub_10091E328();
  uint64_t v26 = v25;
  sub_1005174AC(a5);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v27 = (uint64_t *)&v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_accessibilityAnnouncement];
  *uint64_t v27 = v24;
  v27[1] = v26;
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1009207AC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1009207E4()
{
}

uint64_t sub_1009207EC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_10092082C(uint64_t a1)
{
  return sub_10091F078(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100920840()
{
  return 8;
}

uint64_t sub_10092084C()
{
  return swift_release();
}

uint64_t sub_100920854(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100920868(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100920874()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1009208AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_type] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_minimumShowDuration] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_maximumShowDuration] = 0;
  uint64_t v7 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_timeStartedShowing];
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hideTimer] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_showing] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_animating] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hiding] = 0;
  id v9 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_accessibilityAnnouncement];
  *id v9 = 0;
  v9[1] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_swipable] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_swipeGestureRecognizer] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hideOnTouch] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_setupDone] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_height] = 0x4045000000000000;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_width] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_heightConstraint] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_constraints] = _swiftEmptyArrayStorage;
  swift_unknownObjectWeakInit();
  id v10 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler];
  *id v10 = 0;
  v10[1] = 0;
  uint64_t v11 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_canvasWidth];
  *(void *)uint64_t v11 = 0;
  v11[8] = 1;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage___participantColor] = 0;
  uint64_t v12 = (uint64_t *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopFollowingString];
  id v13 = self;
  uint64_t v14 = a5;
  id v15 = [v13 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  *uint64_t v12 = v19;
  v12[1] = v21;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign();
  *(void *)&v14[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_followingParticipant] = a2;
  swift_unknownObjectWeakAssign();
  id v22 = objc_allocWithZone((Class)UIView);
  id v23 = a2;
  id v24 = [v22 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v14[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView] = v24;
  id v25 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v14[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_containerView] = v25;
  swift_unknownObjectWeakAssign();

  v27.receiver = v14;
  v27.super_class = (Class)type metadata accessor for CRLPersistentFollowHUDController();
  return [super init];
}

void sub_100920C2C(uint64_t a1, char a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    sub_100927720();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v20;
    uint64_t v19 = v21;
    uint64_t v4 = v22;
    uint64_t v5 = v23;
    unint64_t v6 = v24;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v19 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
  }
  int64_t v18 = (unint64_t)(v4 + 64) >> 6;
  uint64_t v10 = a2 & 1;
  if (v3 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v6)
    {
      uint64_t v11 = (v6 - 1) & v6;
      unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
      uint64_t v13 = v5;
      goto LABEL_29;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v15 >= v18) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v19 + 8 * v15);
    uint64_t v13 = v5 + 1;
    if (!v16)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v18) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v19 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v18) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v19 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v18) {
            goto LABEL_32;
          }
          unint64_t v16 = *(void *)(v19 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v5 + 5;
            if (v5 + 5 >= v18) {
              goto LABEL_32;
            }
            unint64_t v16 = *(void *)(v19 + 8 * v13);
            if (!v16)
            {
              uint64_t v17 = v5 + 6;
              while (v18 != v17)
              {
                unint64_t v16 = *(void *)(v19 + 8 * v17++);
                if (v16)
                {
                  uint64_t v13 = v17 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_29:
    id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_32;
    }
    while (1)
    {
      [v14 setActive:v10];

      uint64_t v5 = v13;
      unint64_t v6 = v11;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_10050BF48(0, (unint64_t *)&qword_101674200);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v14 = v25;
        swift_unknownObjectRelease();
        uint64_t v13 = v5;
        uint64_t v11 = v6;
        if (v25) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

id sub_100920F08()
{
  uint64_t v1 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8ListItem____lazy_storage___listViewController;
  objc_super v2 = *(void **)(v0
                + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8ListItem____lazy_storage___listViewController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController8ListItem____lazy_storage___listViewController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)_s8ListItemC18ListViewControllerCMa()) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_100920F78()
{
  qword_10171AF40 = 0x407C200000000000;
}

void sub_100920F8C()
{
  qword_10171AF48 = 0x404E000000000000;
}

void sub_100920F9C()
{
  qword_10171AF50 = 0;
}

void sub_100920FA8()
{
  qword_10171AF58 = 0;
}

void sub_100920FB4()
{
  qword_10171AF60 = 0x4024000000000000;
}

void sub_100920FC4()
{
  qword_10171AF68 = 0x4010000000000000;
}

void sub_100920FD4()
{
  qword_10171AF70 = sub_100067CF8(4.0);
  qword_10171AF78 = v0;
  qword_10171AF80 = v1;
  qword_10171AF88 = v2;
}

id sub_10092100C(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_whiteColor, &qword_10171AF90);
}

void sub_100921020()
{
  qword_10171AF98 = 0x4048000000000000;
}

id sub_100921030()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.15];
  qword_10171AFA0 = (uint64_t)result;
  return result;
}

void sub_100921074()
{
  qword_10171AFA8 = 0x4014000000000000;
}

CALayerCornerCurve sub_100921084()
{
  qword_10171AFB0 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

id sub_10092109C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.08];
  qword_10171AFB8 = (uint64_t)result;
  return result;
}

double sub_1009210DC()
{
  double result = 0.0;
  xmmword_10171AFC0 = xmmword_1011762C0;
  return result;
}

void sub_1009210F0()
{
  qword_10171AFD0 = 0x3FF0000000000000;
}

void sub_100921100()
{
  qword_10171AFD8 = 0x3FF0000000000000;
}

void sub_100921110()
{
  qword_10171AFE0 = 0x4022000000000000;
}

void sub_100921120()
{
  qword_10171AFE8 = 0x4024000000000000;
}

void sub_100921130()
{
  qword_10171AFF0 = 0x4000000000000000;
}

UIFontTextStyle sub_100921140()
{
  qword_10171AFF8 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

UIFontWeight sub_100921158()
{
  UIFontWeight result = UIFontWeightRegular;
  qword_10171B000 = *(void *)&UIFontWeightRegular;
  return result;
}

id sub_100921170(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_labelColor, &qword_10171B008);
}

UIFontTextStyle sub_100921184()
{
  qword_10171B010 = (uint64_t)UIFontTextStyleFootnote;
  return UIFontTextStyleFootnote;
}

UIFontWeight sub_10092119C()
{
  UIFontWeight result = UIFontWeightRegular;
  qword_10171B018 = *(void *)&UIFontWeightRegular;
  return result;
}

id sub_1009211B4(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10171B020);
}

UIFontTextStyle sub_1009211C8()
{
  qword_10171B028 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

UIFontWeight sub_1009211E0()
{
  UIFontWeight result = UIFontWeightRegular;
  qword_10171B030 = *(void *)&UIFontWeightRegular;
  return result;
}

id sub_1009211F8(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10171B038);
}

void sub_10092120C()
{
  qword_10171B040 = 0x4059000000000000;
}

void sub_10092121C()
{
  qword_10171B048 = 0x4032000000000000;
}

void sub_10092122C()
{
  qword_10171B050 = 0x4014000000000000;
}

uint64_t sub_10092123C()
{
  uint64_t v1 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController____lazy_storage___textLayoutBuilder;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController____lazy_storage___textLayoutBuilder];
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    _s8ListItemC17TextLayoutBuilderCMa();
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 24) = 0u;
    *(_OWORD *)(v3 + 40) = 0u;
    *(_OWORD *)(v3 + 56) = 0u;
    *(_OWORD *)(v3 + 72) = 0u;
    *(_OWORD *)(v3 + 88) = 0u;
    *(_OWORD *)(v3 + 104) = 0u;
    *(_OWORD *)(v3 + 120) = 0u;
    *(_OWORD *)(v3 + 136) = 0u;
    *(_OWORD *)(v3 + 152) = 0u;
    *(_OWORD *)(v3 + 168) = 0u;
    *(_OWORD *)(v3 + 184) = 0u;
    *(_OWORD *)(v3 + 200) = 0u;
    *(_OWORD *)(v3 + 216) = 0u;
    *(_OWORD *)(v3 + 232) = 0u;
    *(void *)(v3 + 16) = v0;
    *(void *)&v0[v1] = v3;
    id v4 = v0;
    swift_retain();
    sub_100927A6C(1);
  }
  sub_100927A7C(v2);
  return v3;
}

id sub_1009212F4()
{
  sub_100D202B0();
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView);
  [v1 addLayoutGuide:*(void *)(v0+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_textLayoutGuide)];
  [v1 addLayoutGuide:*(void *)(v0+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_primaryRowLayoutGuide)];
  [v1 addLayoutGuide:*(void *)(v0+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_secondaryRowLayoutGuide)];
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_tertiaryRowLayoutGuide);

  return [v1 addLayoutGuide:v2];
}

void sub_10092139C()
{
  sub_1009213A4(v0);
}

void sub_1009213A4(uint64_t a1)
{
  id v31 = [*(id *)(a1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView) layer];
  uint64_t v2 = *(void **)(a1
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView);
  id v3 = [v2 layer];
  id v4 = [*(id *)(a1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView) layer];
  id v32 = [*(id *)(a1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView) layer];
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton);
  int v6 = *(unsigned __int8 *)(v5
                          + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_size);
  *(unsigned char *)(v5 + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_size) = 0;
  if (v6 == 1) {
    sub_100D23B4C();
  }
  [v2 setContentMode:1];
  LODWORD(v7) = 1148846080;
  [v2 setContentCompressionResistancePriority:0 forAxis:v7];
  if (qword_10166ED90 != -1) {
    swift_once();
  }
  id v8 = [(id)qword_10171A168 CGColor];
  [v3 setBackgroundColor:v8];

  if (qword_10166F498 != -1) {
    swift_once();
  }
  id v30 = v3;
  id v9 = [(id)qword_10171AF90 CGColor];
  [v4 setBackgroundColor:v9];

  [v4 setMasksToBounds:1];
  if (qword_10166F4B0 != -1) {
    swift_once();
  }
  [v4 setCornerRadius:*(double *)&qword_10171AFA8];
  if (qword_10166F4B8 != -1) {
    swift_once();
  }
  [v4 setCornerCurve:qword_10171AFB0];
  if (qword_10166F4A8 != -1) {
    swift_once();
  }
  id v10 = [(id)qword_10171AFA0 CGColor];
  [v4 setBorderColor:v10];

  [v4 setBorderWidth:0.5];
  [v32 setMasksToBounds:0];
  [v32 setCornerRadius:*(double *)&qword_10171AFA8];
  if (qword_10166F4D8 != -1) {
    swift_once();
  }
  [v32 setShadowRadius:*(double *)&qword_10171AFD8];
  if (qword_10166F4C0 != -1) {
    swift_once();
  }
  id v11 = [(id)qword_10171AFB8 CGColor];
  [v32 setShadowColor:v11];

  if (qword_10166F4C8 != -1) {
    swift_once();
  }
  [v32 setShadowOffset:xmmword_10171AFC0];
  if (qword_10166F4D0 != -1) {
    swift_once();
  }
  HIDWORD(v12) = HIDWORD(qword_10171AFD0);
  *(float *)&double v12 = *(double *)&qword_10171AFD0;
  [v32 setShadowOpacity:v12];
  uint64_t v13 = *(void **)(a1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel);
  if (qword_10166F4F8 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_10171AFF8;
  if (qword_10166F500 != -1) {
    swift_once();
  }
  int64_t v15 = self;
  id v16 = [v15 preferredFontDescriptorWithTextStyle:v14];
  uint64_t v17 = self;
  [v16 pointSize];
  id v18 = [v17 systemFontOfSize:];

  [v13 setFont:v18];
  if (qword_10166F508 != -1) {
    swift_once();
  }
  [v13 setTextColor:qword_10171B008];
  uint64_t v19 = *(void **)(a1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
  if (qword_10166F510 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_10171B010;
  if (qword_10166F518 != -1) {
    swift_once();
  }
  id v21 = [v15 preferredFontDescriptorWithTextStyle:v20];
  [v21 pointSize];
  id v22 = [v17 systemFontOfSize:];

  [v19 setFont:v22];
  if (qword_10166F520 != -1) {
    swift_once();
  }
  [v19 setTextColor:qword_10171B020];
  LODWORD(v23) = 1132068864;
  [v19 setContentCompressionResistancePriority:0 forAxis:v23];
  unint64_t v24 = *(void **)(a1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  if (qword_10166F528 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10171B028;
  if (qword_10166F530 != -1) {
    swift_once();
  }
  id v26 = [v15 preferredFontDescriptorWithTextStyle:v25];
  [v26 pointSize];
  id v27 = [v17 systemFontOfSize:];

  [v24 setFont:v27];
  if (qword_10166F538 != -1) {
    swift_once();
  }
  [v24 setTextColor:qword_10171B038];
  LODWORD(v28) = 1148846080;
  [v24 setContentHuggingPriority:0 forAxis:v28];
  LODWORD(v29) = 1148846080;
  [v24 setContentCompressionResistancePriority:0 forAxis:v29];
}

void sub_100921C48()
{
  uint64_t v1 = v0;
  type metadata accessor for UILayoutPriority(0);
  sub_10053BFE0();
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge);
  id v3 = [v2 leadingAnchor];
  id v4 = *(void **)(v1
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView);
  id v5 = [v4 leadingAnchor];
  if (qword_10166F470 != -1) {
    swift_once();
  }
  id v6 = [v3 constraintEqualToAnchor:v5 constant:*(double *)&qword_10171AF50];

  id v7 = [v2 centerYAnchor];
  id v8 = [v4 centerYAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v105 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v11 = v105 + 2;
    if (!__OFADD__(v105, 2))
    {
LABEL_5:
      sub_101044ABC(v11, 1);
      specialized Array._endMutation()();
      id v6 = v6;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_6;
      }
      goto LABEL_55;
    }
  }
  else
  {
    uint64_t v10 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v11 = v10 + 2;
    if (!__OFADD__(v10, 2)) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_55:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_6:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v12 = v9;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton);
  id v14 = [v13 centerYAnchor];
  id v15 = [v4 centerYAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  id v17 = [v13 leadingAnchor];
  id v18 = [v2 trailingAnchor];
  if (qword_10166F480 != -1) {
    swift_once();
  }
  id v19 = [v17 constraintEqualToAnchor:v18 constant:*(double *)&qword_10171AF60];

  uint64_t v20 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isInMultipleSelectionModeConstraint);
  *(void *)(v1
            + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isInMultipleSelectionModeConstraint) = v19;

  id v21 = [v13 leadingAnchor];
  id v22 = [v4 leadingAnchor];
  if (qword_10166F478 != -1) {
    swift_once();
  }
  id v23 = [v21 constraintEqualToAnchor:v22 constant:*(double *)&qword_10171AF58];

  unint64_t v24 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isNotInMultipleSelectionModeConstraint);
  *(void *)(v1
            + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isNotInMultipleSelectionModeConstraint) = v23;
  id v25 = v23;

  LODWORD(v26) = v114;
  [v25 setPriority:v26];
  id v27 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView);
  id v28 = [v27 leadingAnchor];
  id v29 = [v13 trailingAnchor];
  if (qword_10166F488 != -1) {
    swift_once();
  }
  id v30 = [v28 constraintEqualToAnchor:v29 constant:*(double *)&qword_10171AF68];

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    id v106 = v25;
    id v107 = v16;
    id v108 = v30;
    swift_bridgeObjectRetain();
    uint64_t v109 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v35 = v109 + 3;
    if (!__OFADD__(v109, 3))
    {
LABEL_16:
      sub_101044ABC(v35, 1);
      specialized Array._endMutation()();
      id v16 = v16;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_17;
      }
      goto LABEL_59;
    }
  }
  else
  {
    uint64_t v31 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v32 = v25;
    id v33 = v16;
    id v34 = v30;
    uint64_t v35 = v31 + 3;
    if (!__OFADD__(v31, 3)) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_59:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_17:
  id v112 = v27;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v36 = v25;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v37 = v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  if (qword_10166F468 != -1) {
    swift_once();
  }
  id v113 = v4;
  double v38 = *(double *)&qword_10171AF48;
  if (qword_10166F4A0 != -1) {
    swift_once();
  }
  uint64_t v110 = v37;
  uint64_t v111 = v16;
  double v39 = (v38 - *(double *)&qword_10171AF98) * 0.5;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101198A30;
  uint64_t v41 = v1;
  id v42 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView);
  id v43 = [v42 widthAnchor];
  id v44 = [v42 heightAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 multiplier:1.77777778];

  *(void *)(inited + 32) = v45;
  id v46 = [v42 topAnchor];
  id v47 = *(void **)(v41
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView);
  id v48 = [v47 topAnchor];
  if (qword_10166F490 != -1) {
    swift_once();
  }
  id v49 = [v46 constraintEqualToAnchor:v48 constant:*(double *)&qword_10171AF70];

  *(void *)(inited + 40) = v49;
  id v50 = [v42 leadingAnchor];
  id v51 = [v47 leadingAnchor];
  uint64_t v52 = qword_10171AF78;
  uint64_t v53 = qword_10171AF88;
  if (sub_1003E8750()) {
    double v54 = *(double *)&v52;
  }
  else {
    double v54 = *(double *)&v53;
  }
  id v55 = [v50 constraintEqualToAnchor:v51 constant:v54];

  *(void *)(inited + 48) = v55;
  id v56 = [v47 trailingAnchor];
  id v57 = [v42 trailingAnchor];
  uint64_t v58 = qword_10171AF78;
  uint64_t v59 = qword_10171AF88;
  if (sub_1003E8750()) {
    double v60 = *(double *)&v59;
  }
  else {
    double v60 = *(double *)&v58;
  }
  id v61 = [v56 constraintEqualToAnchor:v57 constant:v60];

  *(void *)(inited + 56) = v61;
  id v62 = [v47 bottomAnchor];
  id v63 = [v42 bottomAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63 constant:*(double *)&qword_10171AF80];

  *(void *)(inited + 64) = v64;
  id v65 = [v47 heightAnchor];
  id v66 = [v65 constraintEqualToConstant:*(double *)&qword_10171AF98];

  *(void *)(inited + 72) = v66;
  id v67 = [v112 topAnchor];
  id v68 = [v47 topAnchor];
  id v69 = [v67 constraintEqualToAnchor:v68];

  *(void *)(inited + 80) = v69;
  id v70 = [v112 leadingAnchor];
  id v71 = [v47 leadingAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71];

  *(void *)(inited + 88) = v72;
  id v73 = [v112 trailingAnchor];
  id v74 = [v47 trailingAnchor];
  id v75 = [v73 constraintEqualToAnchor:v74];

  *(void *)(inited + 96) = v75;
  id v76 = [v112 bottomAnchor];
  id v77 = [v47 bottomAnchor];
  id v78 = [v76 constraintEqualToAnchor:v77];

  *(void *)(inited + 104) = v78;
  id v79 = [v112 centerYAnchor];
  id v80 = [v113 centerYAnchor];
  id v81 = [v79 constraintEqualToAnchor:v80];

  *(void *)(inited + 112) = v81;
  id v82 = [v112 topAnchor];
  id v83 = [v113 topAnchor];
  id v84 = [v82 constraintGreaterThanOrEqualToAnchor:v83 constant:v39];

  *(void *)(inited + 120) = v84;
  id v85 = [v113 bottomAnchor];
  id v86 = [v112 bottomAnchor];
  id v87 = [v85 constraintGreaterThanOrEqualToAnchor:v86 constant:v39];

  *(void *)(inited + 128) = v87;
  specialized Array._endMutation()();
  unint64_t v88 = inited;
  if (inited >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v89 = *(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v89)
  {
    if (v89 < 1)
    {
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    uint64_t v90 = 0;
    do
    {
      if ((v88 & 0xC000000000000001) != 0) {
        id v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v91 = *(id *)(v88 + 8 * v90 + 32);
      }
      id v93 = v91;
      ++v90;
      LODWORD(v92) = v114;
      [v91 setPriority:v92];
    }
    while (v89 != v90);
    swift_bridgeObjectRelease();
  }
  sub_1006E0CA0(v88);
  id v94 = *(void **)(v41
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  id v95 = [v94 centerYAnchor];
  id v96 = [v113 centerYAnchor];
  id v97 = [v95 constraintEqualToAnchor:v96];

  id v98 = [v113 trailingAnchor];
  id v99 = [v94 trailingAnchor];
  if (qword_10166F548 != -1) {
    swift_once();
  }
  id v100 = [v98 constraintEqualToAnchor:v99 constant:*(double *)&qword_10171B048];

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v101 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v101, 2))
  {
    __break(1u);
    goto LABEL_63;
  }
  sub_101044ABC(v101 + 2, 1);
  specialized Array._endMutation()();
  id v97 = v97;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_63:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v102 = v100;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  char v103 = self;
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v103 activateConstraints:isa];
}

void sub_100922BE8()
{
  uint64_t v1 = v0;
  sub_1009213A4(v0);
  sub_100D24E68();
  sub_100D23B4C();
  sub_100D21110();
  id v2 = [self sharedApplication];
  id v3 = [v2 preferredContentSizeCategory];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7) {
    goto LABEL_8;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
    if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
    {
LABEL_8:
      swift_bridgeObjectRelease_n();
      goto LABEL_9;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;
      if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v24)
      {

        uint64_t v14 = 2;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v25) {
          uint64_t v14 = 2;
        }
        else {
          uint64_t v14 = 1;
        }
      }
      goto LABEL_10;
    }
  }
LABEL_9:

  uint64_t v14 = 2;
LABEL_10:
  id v15 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
  id v16 = *(void **)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  id v17 = objc_retain(*(id *)(v1
                          + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel));
  id v18 = v15;
  id v19 = v16;
  [v17 setNumberOfLines:v14];
  [v18 setNumberOfLines:v14];
  [v19 setNumberOfLines:v14];

  sub_100923334(0);
}

uint64_t sub_100922E90()
{
  uint64_t result = sub_10092123C();
  if (!result)
  {
    __break(1u);
    goto LABEL_26;
  }
  char v2 = sub_100925190();
  swift_release();
  if (v2)
  {
    uint64_t result = sub_10092123C();
    if (!result)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    char v3 = sub_100924E44();
    swift_release();
    if (v3)
    {
      uint64_t v4 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
      if (!swift_unknownObjectWeakLoadStrong()
        || (uint64_t v5 = *(void *)(v4 + 8),
            uint64_t ObjectType = swift_getObjectType(),
            uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 168))(ObjectType, v5),
            uint64_t v9 = v8,
            swift_unknownObjectRelease(),
            !v9))
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
      }
      swift_bridgeObjectRetain();
      v10._countAndFlagsBits = 2108704;
      v10._object = (void *)0xE300000000000000;
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      if (!swift_unknownObjectWeakLoadStrong()
        || (uint64_t v11 = *(void *)(v4 + 8),
            uint64_t v12 = swift_getObjectType(),
            uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 216))(v12, v11),
            id v15 = v14,
            swift_unknownObjectRelease(),
            !v15))
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = 0;
        id v15 = (void *)0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      v16._countAndFlagsBits = v13;
      v16._object = v15;
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = sub_10092123C();
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  char v18 = sub_100925190();
  swift_release();
  if (v18)
  {
    uint64_t v19 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
    if (!swift_unknownObjectWeakLoadStrong()) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  uint64_t result = sub_10092123C();
  if (result)
  {
    char v20 = sub_100924E44();
    swift_release();
    uint64_t v19 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (v20)
    {
      if (!Strong) {
        goto LABEL_23;
      }
      uint64_t v22 = *(void *)(v19 + 8);
      uint64_t v23 = swift_getObjectType();
      uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 168))(v23, v22);
      goto LABEL_22;
    }
    if (!Strong) {
      goto LABEL_23;
    }
LABEL_21:
    uint64_t v26 = *(void *)(v19 + 8);
    uint64_t v27 = swift_getObjectType();
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 216))(v27, v26);
LABEL_22:
    uint64_t v17 = v24;
    uint64_t v28 = v25;
    swift_unknownObjectRelease();
    if (v28) {
      return v17;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_100923148()
{
  uint64_t v1 = v0;
  char v2 = *(void **)(v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  uint64_t v3 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v4 = *(void *)(v3 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        (*(void (**)(uint64_t, uint64_t))(v4 + 168))(ObjectType, v4),
        uint64_t v7 = v6,
        swift_unknownObjectRelease(),
        !v7))
  {
    swift_bridgeObjectRelease();
  }
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v8];

  if (sub_10092123C())
  {
    char v9 = sub_100924E44();
    swift_release();
    if (v9)
    {
      Swift::String v10 = *(void **)(v1
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
      sub_100922E90();
      id v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v10 setText:v11];
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100923334(char a1)
{
  if (sub_10092123C())
  {
    char v3 = sub_100924E44();
    swift_release();
    uint64_t v4 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_didUseCompactLayout;
    int v5 = *(unsigned __int8 *)(v1
                            + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_didUseCompactLayout);
    BOOL v8 = v5 == 2;
    int v6 = v5 & 1;
    int v7 = v3 & 1;
    BOOL v8 = !v8 && v7 == v6;
    if (v8) {
      goto LABEL_8;
    }
    if (sub_10092123C())
    {
      sub_1009238E8();
      sub_100923B0C();
      sub_10092464C();
      sub_100924890(a1 & 1);
      sub_100924C2C();
      swift_release();
      char v9 = *(void **)(v1
                    + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
      sub_100922E90();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v9 setText:v10];

LABEL_8:
      *(unsigned char *)(v1 + v4) = v7;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100923480()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode);
}

id sub_100923494(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode;
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode) = a1;
  [*(id *)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge) setHidden:(a1 & 1) == 0];
  id result = *(id *)(v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isInMultipleSelectionModeConstraint);
  if (result)
  {
    uint64_t v4 = *(unsigned __int8 *)(v1 + v2);
    return [result setActive:v4];
  }
  return result;
}

id sub_100923520()
{
  *(void *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController____lazy_storage___textLayoutBuilder] = 1;
  uint64_t v1 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_textLayoutGuide;
  id v2 = objc_allocWithZone((Class)UILayoutGuide);
  char v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_primaryRowLayoutGuide;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v5 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_secondaryRowLayoutGuide;
  *(void *)&v3[v5] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v6 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_tertiaryRowLayoutGuide;
  *(void *)&v3[v6] = [objc_allocWithZone((Class)UILayoutGuide) init];
  *(void *)&v3[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isInMultipleSelectionModeConstraint] = 0;
  *(void *)&v3[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isNotInMultipleSelectionModeConstraint] = 0;
  v3[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_didUseCompactLayout] = 2;

  v8.receiver = v3;
  v8.super_class = (Class)_s8ListItemC18ListViewControllerCMa();
  return [super init];
}

id sub_100923650(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController____lazy_storage___textLayoutBuilder] = 1;
  uint64_t v3 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_textLayoutGuide;
  id v4 = objc_allocWithZone((Class)UILayoutGuide);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_primaryRowLayoutGuide;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v7 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_secondaryRowLayoutGuide;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v8 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_tertiaryRowLayoutGuide;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UILayoutGuide) init];
  *(void *)&v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isInMultipleSelectionModeConstraint] = 0;
  *(void *)&v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isNotInMultipleSelectionModeConstraint] = 0;
  v5[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_didUseCompactLayout] = 2;

  v11.receiver = v5;
  v11.super_class = (Class)_s8ListItemC18ListViewControllerCMa();
  [super initWithCoder:a1];

  return v9;
}

void sub_1009237A4()
{
  sub_100927A6C(*(void *)(v0
                          + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController____lazy_storage___textLayoutBuilder));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_textLayoutGuide));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_primaryRowLayoutGuide));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_secondaryRowLayoutGuide));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_tertiaryRowLayoutGuide));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isInMultipleSelectionModeConstraint));
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_isNotInMultipleSelectionModeConstraint);
}

id sub_100923834(uint64_t a1)
{
  return sub_100927134(a1, _s8ListItemC18ListViewControllerCMa);
}

uint64_t sub_1009238E8()
{
  uint64_t v1 = v0;
  objc_super v11 = &_swiftEmptySetSingleton;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v3 = sub_100925270();
  uint64_t v4 = sub_10050BF48(0, (unint64_t *)&qword_101674200);
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 32) = v3;
  id v5 = sub_100925374();
  *(void *)(inited + 88) = v4;
  *(void *)(inited + 64) = v5;
  id v6 = sub_10092543C();
  *(void *)(inited + 120) = v4;
  *(void *)(inited + 96) = v6;
  uint64_t v7 = sub_10092725C(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_10057D530((unint64_t)v7);
  if (sub_100924E44()) {
    id v8 = sub_100925644();
  }
  else {
    id v8 = sub_100925540();
  }
  sub_100CBADE8(&v10, v8);

  sub_100923A18(v1, (uint64_t *)&v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100923A18(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  initeCGFloat d = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1011807A0;
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = sub_100925270();
  *(void *)(inited + 40) = sub_100925374();
  *(void *)(inited + 48) = sub_10092543C();
  *(void *)(inited + 56) = sub_100925540();
  *(void *)(inited + 64) = sub_100925644();
  specialized Array._endMutation()();
  uint64_t v4 = sub_100CDE144(inited);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v5 = sub_101022584(v2, v4);
  sub_100920C2C((uint64_t)v5, 0);
  swift_bridgeObjectRelease();
  sub_100920C2C(v2, 1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100923B0C()
{
  uint64_t v1 = v0;
  id v78 = &_swiftEmptySetSingleton;
  unint64_t v2 = (unint64_t)sub_1009244AC();
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
LABEL_47:
    uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
    if (v51 < 0) {
      __break(1u);
    }
    uint64_t v4 = v51;
    uint64_t v67 = v1;
    if (v51) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v67 = v0;
    if (v4)
    {
LABEL_3:
      uint64_t v75 = v4 - 1;
      sub_10050BF48(0, &qword_1016885E0);
      uint64_t v5 = 0;
      uint64_t v6 = *(void *)(v1 + 16);
      uint64_t v71 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_primaryRowLayoutGuide;
      uint64_t v69 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_secondaryRowLayoutGuide;
      uint64_t v68 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_tertiaryRowLayoutGuide;
      unint64_t v74 = v3 & 0xC000000000000001;
      uint64_t v66 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v7 = (id *)(v3 + 40);
      uint64_t v72 = v4;
      unint64_t v73 = v3;
      uint64_t v70 = v6;
      do
      {
        uint64_t v10 = v5 + 1;
        if (v74)
        {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v5 < v75)
          {
            id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (v5 <= 0) {
              goto LABEL_13;
            }
LABEL_15:
            id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_19;
          }
          id v12 = 0;
          if (v5 > 0) {
            goto LABEL_15;
          }
        }
        else
        {
          id v11 = *(v7 - 1);
          if (v5 < v75)
          {
            id v12 = *v7;
            id v13 = *v7;
            if (v5 <= 0)
            {
LABEL_13:
              id v76 = 0;
              goto LABEL_21;
            }
LABEL_17:
            if ((unint64_t)(v5 - 1) >= *(void *)(v66 + 16))
            {
              __break(1u);
              goto LABEL_47;
            }
            id v14 = *(v7 - 2);
LABEL_19:
            id v76 = v14;
            goto LABEL_21;
          }
          id v12 = 0;
          if (v5 > 0) {
            goto LABEL_17;
          }
        }
        id v76 = 0;
LABEL_21:
        id v15 = *(void **)(v6 + v71);
        id v16 = v11;
        id v17 = v15;
        LOBYTE(v15) = static NSObject.== infix(_:_:)();

        if (v15)
        {
          sub_1005057FC((uint64_t *)&unk_10167BEF0);
          initeCGFloat d = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
          uint64_t v19 = sub_1009258B4();
          *(void *)(inited + 56) = sub_1005057FC(&qword_1016885D8);
          uint64_t v20 = v1;
          *(void *)(inited + 32) = v19;
          id v21 = sub_100925930();
          *(void *)(inited + 88) = sub_10050BF48(0, (unint64_t *)&qword_101674200);
          *(void *)(inited + 64) = v21;
          uint64_t v22 = sub_10092725C(inited);
          swift_setDeallocating();
          swift_arrayDestroy();
          sub_10057D530((unint64_t)v22);
          if (v12)
          {
            uint64_t v6 = v70;
            id v23 = *(id *)(v70 + v69);
            id v24 = v12;
            char v25 = static NSObject.== infix(_:_:)();

            if (v25)
            {
              uint64_t v1 = v67;
              id v8 = sub_1009259F4();
              sub_100CBADE8(&v77, v8);

              unint64_t v3 = v73;
            }
            else
            {
              uint64_t v26 = *(void **)(v70 + v68);
              id v27 = v24;
              id v28 = v26;
              char v29 = static NSObject.== infix(_:_:)();

              uint64_t v1 = v67;
              unint64_t v3 = v73;
              if (v29)
              {
                id v30 = sub_100925AF8();
                sub_100CBADE8(&v77, v30);
              }
              else
              {
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateRowLayoutGuides()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-ListItem.swift", 108, 2, 945, (uint64_t)"Unknown layout guide", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
                uint64_t v1 = v67;
                sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateRowLayoutGuides()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-ListItem.swift", 108, 2, 945);
              }
            }
            uint64_t v9 = v72;
            goto LABEL_6;
          }
          id v46 = sub_100925BFC();
          sub_100CBADE8(&v77, v46);

          goto LABEL_35;
        }
        uint64_t v31 = *(void **)(v6 + v69);
        id v32 = v16;
        id v33 = v31;
        LOBYTE(v31) = static NSObject.== infix(_:_:)();

        if (v31)
        {
          unint64_t v34 = sub_100925CC0();
          sub_10057D530(v34);
          if (v76)
          {
            uint64_t v6 = v70;
            if (v12) {
              goto LABEL_29;
            }
LABEL_39:
            id v48 = sub_100925F04();
            sub_100CBADE8(&v77, v48);

LABEL_40:
            id v49 = v77;
          }
          else
          {
            id v47 = sub_100925D3C();
            sub_100CBADE8(&v77, v47);

            uint64_t v6 = v70;
            if (!v12) {
              goto LABEL_39;
            }
LABEL_29:
            uint64_t v35 = *(void **)(v6 + v68);
            id v36 = v12;
            id v37 = v35;
            LOBYTE(v35) = static NSObject.== infix(_:_:)();

            if (v35)
            {
              id v38 = sub_100925E00();
              sub_100CBADE8(&v77, v38);

              goto LABEL_40;
            }
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateRowLayoutGuides()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-ListItem.swift", 108, 2, 962, (uint64_t)"Unknown layout guide", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateRowLayoutGuides()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-ListItem.swift", 108, 2, 962);

            id v49 = v76;
          }

          goto LABEL_44;
        }
        double v39 = *(void **)(v6 + v68);
        id v40 = v32;
        id v41 = v39;
        LOBYTE(v39) = static NSObject.== infix(_:_:)();

        if ((v39 & 1) == 0)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateRowLayoutGuides()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-ListItem.swift", 108, 2, 976, (uint64_t)"Unknown layout guide", 20, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateRowLayoutGuides()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-ListItem.swift", 108, 2, 976);

LABEL_44:
          uint64_t v9 = v72;
          unint64_t v3 = v73;
          goto LABEL_6;
        }
        sub_1005057FC((uint64_t *)&unk_10167BEF0);
        uint64_t v42 = swift_initStackObject();
        *(_OWORD *)(v42 + 16) = xmmword_10117D8C0;
        uint64_t v43 = sub_100926154();
        *(void *)(v42 + 56) = sub_1005057FC(&qword_1016885D8);
        uint64_t v20 = v1;
        *(void *)(v42 + 32) = v43;
        id v44 = sub_100926294();
        *(void *)(v42 + 88) = sub_10050BF48(0, (unint64_t *)&qword_101674200);
        *(void *)(v42 + 64) = v44;
        id v45 = sub_10092725C(v42);
        swift_setDeallocating();
        swift_arrayDestroy();
        sub_10057D530((unint64_t)v45);
        if (!v76)
        {
          id v50 = sub_1009261D0();
          sub_100CBADE8(&v77, v50);

LABEL_35:
          goto LABEL_36;
        }

LABEL_36:
        uint64_t v1 = v20;
        uint64_t v9 = v72;
        unint64_t v3 = v73;
        uint64_t v6 = v70;
LABEL_6:
        ++v7;
        uint64_t v5 = v10;
      }
      while (v9 != v10);
    }
  }
  uint64_t v52 = *(void *)(v1 + 16);
  id v53 = objc_retain(*(id *)(v52
                          + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_primaryRowLayoutGuide));
  char v54 = sub_100ED5CD4((uint64_t)v53, v3);

  if (v54)
  {
    id v55 = objc_retain(*(id *)(v52
                            + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController8ListItem18ListViewController_secondaryRowLayoutGuide));
    char v56 = sub_100ED5CD4((uint64_t)v55, v3);
    swift_bridgeObjectRelease();

    if ((v56 & 1) == 0)
    {
      sub_1005057FC((uint64_t *)&unk_10167BEF0);
      uint64_t v57 = swift_initStackObject();
      *(_OWORD *)(v57 + 16) = xmmword_10117D8C0;
      id v58 = sub_100925FC8();
      uint64_t v59 = sub_10050BF48(0, (unint64_t *)&qword_101674200);
      *(void *)(v57 + 56) = v59;
      *(void *)(v57 + 32) = v58;
      id v60 = sub_100926090();
      *(void *)(v57 + 88) = v59;
      *(void *)(v57 + 64) = v60;
      id v61 = sub_10092725C(v57);
      swift_setDeallocating();
      swift_arrayDestroy();
      sub_10057D530((unint64_t)v61);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v62 = (uint64_t)v78;
  swift_bridgeObjectRetain();
  id v63 = sub_100925744();
  swift_bridgeObjectRetain();
  id v64 = sub_101022584(v62, (uint64_t)v63);
  sub_100920C2C((uint64_t)v64, 0);
  swift_bridgeObjectRelease();
  sub_100920C2C(v62, 1);
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}