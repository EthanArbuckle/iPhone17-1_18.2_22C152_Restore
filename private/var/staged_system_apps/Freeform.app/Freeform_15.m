uint64_t sub_100CFA59C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100CFA604(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100CFA664(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100CFA6AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100CFA714()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PKStroke();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace;
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace);
  if (!result)
  {
    v43 = (char *)v37 - v9;
    v12 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                            + 288);
    uint64_t v13 = swift_retain();
    v14 = (void *)v12(v13);
    swift_release();
    [v14 transform];
    uint64_t v15 = v45;
    uint64_t v16 = v46;
    uint64_t v17 = v47;
    uint64_t v18 = v48;
    uint64_t v19 = v49;
    uint64_t v20 = v50;

    uint64_t v21 = sub_100CF2164();
    if (v21)
    {
      uint64_t v22 = v21;
      int64_t v23 = *(void *)(v21 + 16);
      if (v23)
      {
        uint64_t v38 = v10;
        uint64_t v39 = v0;
        v44 = _swiftEmptyArrayStorage;
        sub_1006BBB84(0, v23, 0);
        v25 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
        uint64_t v24 = v3 + 16;
        uint64_t v26 = *(unsigned __int8 *)(v24 + 64);
        v37[1] = v22;
        uint64_t v40 = (v26 + 32) & ~v26;
        v41 = v25;
        uint64_t v27 = v22 + v40;
        uint64_t v28 = v24;
        uint64_t v29 = *(void *)(v24 + 56);
        v30 = (void (**)(char *, uint64_t))(v28 - 8);
        uint64_t v42 = v28;
        v31 = (void (**)(char *, char *, uint64_t))(v28 + 16);
        do
        {
          v41(v6, v27, v2);
          Class isa = PKStroke._bridgeToObjectiveC()().super.isa;
          uint64_t v45 = v15;
          uint64_t v46 = v16;
          uint64_t v47 = v17;
          uint64_t v48 = v18;
          uint64_t v49 = v19;
          uint64_t v50 = v20;
          id v33 = [(objc_class *)isa crl_strokeByAppendingTransform:&v45];

          static PKStroke._unconditionallyBridgeFromObjectiveC(_:)();
          (*v30)(v6, v2);
          v34 = v44;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1006BBB84(0, *((void *)v34 + 2) + 1, 1);
            v34 = v44;
          }
          unint64_t v36 = *((void *)v34 + 2);
          unint64_t v35 = *((void *)v34 + 3);
          if (v36 >= v35 >> 1)
          {
            sub_1006BBB84(v35 > 1, v36 + 1, 1);
            v34 = v44;
          }
          *((void *)v34 + 2) = v36 + 1;
          (*v31)((char *)v34 + v40 + v36 * v29, v43, v2);
          v44 = v34;
          v27 += v29;
          --v23;
        }
        while (v23);
        swift_bridgeObjectRelease();
        uint64_t v10 = v38;
        uint64_t v1 = v39;
      }
      else
      {
        swift_bridgeObjectRelease();
        v34 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      v34 = 0;
    }
    *(void *)(v1 + v10) = v34;
    swift_bridgeObjectRelease();
    return *(void *)(v1 + v10);
  }
  return result;
}

id sub_100CFAACC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUnknownLayout();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUnknownLayout()
{
  return self;
}

double *sub_100CFAB24(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  v61 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v66 - 8);
  uint64_t v7 = __chkstk_darwin(v66, v6);
  uint64_t v50 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v49 = (char *)&v48 - v10;
  uint64_t v60 = sub_1005057FC(&qword_10169A270);
  uint64_t v12 = __chkstk_darwin(v60, v11);
  v59 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  v58 = (char *)&v48 - v16;
  __chkstk_darwin(v15, v17);
  v57 = (char *)&v48 - v18;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v52 = a1 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  uint64_t v64 = v5;
  uint64_t v65 = v5 + 32;
  uint64_t v55 = v5 + 56;
  uint64_t v56 = v5 + 16;
  int64_t v53 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v54 = v5 + 48;
  uint64_t v63 = a1;
  uint64_t result = (double *)swift_bridgeObjectRetain();
  int64_t v24 = 0;
  v51 = _swiftEmptyArrayStorage;
  uint64_t v25 = v64;
  uint64_t v26 = v66;
  uint64_t v27 = (uint64_t)v58;
  while (1)
  {
    if (v22)
    {
      uint64_t v67 = (v22 - 1) & v22;
      int64_t v68 = v24;
      unint64_t v28 = __clz(__rbit64(v22)) | (v24 << 6);
      goto LABEL_5;
    }
    int64_t v36 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v36 >= v53) {
      goto LABEL_30;
    }
    unint64_t v37 = *(void *)(v52 + 8 * v36);
    int64_t v38 = v24 + 1;
    if (!v37)
    {
      int64_t v38 = v24 + 2;
      if (v24 + 2 >= v53) {
        goto LABEL_30;
      }
      unint64_t v37 = *(void *)(v52 + 8 * v38);
      if (!v37)
      {
        int64_t v38 = v24 + 3;
        if (v24 + 3 >= v53) {
          goto LABEL_30;
        }
        unint64_t v37 = *(void *)(v52 + 8 * v38);
        if (!v37)
        {
          int64_t v38 = v24 + 4;
          if (v24 + 4 >= v53) {
            goto LABEL_30;
          }
          unint64_t v37 = *(void *)(v52 + 8 * v38);
          if (!v37) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v67 = (v37 - 1) & v37;
    int64_t v68 = v38;
    unint64_t v28 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_5:
    uint64_t v29 = v63;
    uint64_t v30 = *(void *)(v63 + 48);
    uint64_t v62 = *(void *)(v25 + 72);
    v31 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
    uint64_t v32 = (uint64_t)v57;
    v31(v57, v30 + v62 * v28, v26);
    *(void *)(v32 + *(int *)(v60 + 48)) = *(void *)(*(void *)(v29 + 56) + 8 * v28);
    sub_10051B3EC(v32, v27, &qword_10169A270);
    id v33 = v59;
    v31(v59, v27, v26);
    v34 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v35 = (uint64_t)v61;
    v34(v61, v33, v26);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v35, 0, 1, v26);
    swift_retain();
    sub_100522F00(v27, &qword_10169A270);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v35, 1, v26) == 1)
    {
      uint64_t result = (double *)sub_100522F00(v35, (uint64_t *)&unk_101674520);
    }
    else
    {
      uint64_t v40 = v62;
      uint64_t v41 = v35;
      uint64_t v42 = v49;
      uint64_t v43 = v66;
      v34(v49, (char *)v41, v66);
      v34(v50, v42, v43);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v51 = (double *)sub_100F617D8(0, *((void *)v51 + 2) + 1, 1, (unint64_t)v51);
      }
      unint64_t v45 = *((void *)v51 + 2);
      unint64_t v44 = *((void *)v51 + 3);
      if (v45 >= v44 >> 1) {
        v51 = (double *)sub_100F617D8(v44 > 1, v45 + 1, 1, (unint64_t)v51);
      }
      uint64_t v46 = v50;
      uint64_t v47 = v51;
      *((void *)v51 + 2) = v45 + 1;
      uint64_t result = (double *)((uint64_t (*)(char *, char *, uint64_t))v34)((char *)v47+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ v45 * v40, v46, v66);
    }
    int64_t v24 = v68;
    unint64_t v22 = v67;
  }
  uint64_t v39 = v24 + 5;
  if (v24 + 5 >= v53)
  {
LABEL_30:
    swift_release();
    return v51;
  }
  unint64_t v37 = *(void *)(v52 + 8 * v39);
  if (v37)
  {
    int64_t v38 = v24 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v38 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v38 >= v53) {
      goto LABEL_30;
    }
    unint64_t v37 = *(void *)(v52 + 8 * v38);
    ++v39;
    if (v37) {
      goto LABEL_24;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100CFB070(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v59 = sub_1005057FC(&qword_10169A270);
  uint64_t v6 = __chkstk_darwin(v59, v5);
  uint64_t v58 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  v57 = (char *)&v46 - v10;
  __chkstk_darwin(v9, v11);
  uint64_t v56 = (char *)&v46 - v12;
  uint64_t v65 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v14);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = _swiftEmptyArrayStorage;
  if (!v17) {
    return (uint64_t)v18;
  }
  uint64_t v66 = v3;
  uint64_t v67 = _swiftEmptyArrayStorage;
  sub_1006BB544(0, v17, 0);
  uint64_t result = sub_10058EAB4(a3);
  uint64_t v21 = result;
  uint64_t v22 = 0;
  uint64_t v23 = a3 + 64;
  uint64_t v54 = v16;
  uint64_t v55 = v13 + 16;
  uint64_t v51 = v13 + 32;
  uint64_t v52 = v13;
  char v24 = *(unsigned char *)(a3 + 32);
  uint64_t v47 = a3 + 80;
  int64_t v48 = v17;
  uint64_t v53 = a3;
  uint64_t v49 = v20;
  uint64_t v50 = a3 + 64;
  uint64_t v25 = v65;
  while ((v21 & 0x8000000000000000) == 0 && v21 < 1 << v24)
  {
    unint64_t v27 = (unint64_t)v21 >> 6;
    if ((*(void *)(v23 + 8 * ((unint64_t)v21 >> 6)) & (1 << v21)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(a3 + 36) != v20) {
      goto LABEL_28;
    }
    uint64_t v62 = v22;
    uint64_t v63 = 1 << v21;
    uint64_t v28 = v59;
    uint64_t v29 = *(int *)(v59 + 48);
    uint64_t v30 = *(void *)(a3 + 48);
    uint64_t v64 = *(void *)(v13 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v32 = v56;
    v31(v56, v30 + v64 * v21, v25);
    uint64_t v33 = *(void *)(*(void *)(a3 + 56) + 8 * v21);
    *(void *)&v32[v29] = v33;
    uint64_t v34 = (uint64_t)v57;
    v31(v57, (uint64_t)v32, v25);
    *(void *)(v34 + *(int *)(v28 + 48)) = v33;
    uint64_t v35 = v58;
    sub_10051B3EC(v34, v58, &qword_10169A270);
    swift_retain_n();
    uint64_t v36 = (uint64_t)v32;
    unint64_t v37 = v54;
    sub_100522F00(v36, &qword_10169A270);
    uint64_t v38 = v66;
    v60(v35);
    sub_100522F00(v35, &qword_10169A270);
    uint64_t v18 = v67;
    uint64_t v66 = v38;
    if (v38)
    {
      swift_release();
      return (uint64_t)v18;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1006BB544(0, *((void *)v18 + 2) + 1, 1);
      uint64_t v18 = v67;
    }
    unint64_t v40 = *((void *)v18 + 2);
    unint64_t v39 = *((void *)v18 + 3);
    if (v40 >= v39 >> 1)
    {
      sub_1006BB544(v39 > 1, v40 + 1, 1);
      uint64_t v18 = v67;
    }
    *((void *)v18 + 2) = v40 + 1;
    uint64_t v13 = v52;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v52 + 32))((unint64_t)v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ v40 * v64, v37, v65);
    uint64_t v67 = v18;
    a3 = v53;
    char v24 = *(unsigned char *)(v53 + 32);
    unint64_t v26 = 1 << v24;
    if (v21 >= 1 << v24) {
      goto LABEL_29;
    }
    uint64_t v23 = v50;
    uint64_t v41 = *(void *)(v50 + 8 * v27);
    if ((v41 & v63) == 0) {
      goto LABEL_30;
    }
    LODWORD(v20) = v49;
    if (*(_DWORD *)(v53 + 36) != v49) {
      goto LABEL_31;
    }
    unint64_t v42 = v41 & (-2 << (v21 & 0x3F));
    if (v42)
    {
      unint64_t v26 = __clz(__rbit64(v42)) | v21 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v43 = v27 + 1;
      unint64_t v44 = (v26 + 63) >> 6;
      if (v27 + 1 < v44)
      {
        unint64_t v45 = *(void *)(v50 + 8 * v43);
        if (v45)
        {
LABEL_23:
          unint64_t v26 = __clz(__rbit64(v45)) + (v43 << 6);
        }
        else
        {
          while (v44 - 2 != v27)
          {
            unint64_t v45 = *(void *)(v47 + 8 * v27++);
            if (v45)
            {
              unint64_t v43 = v27 + 1;
              goto LABEL_23;
            }
          }
        }
      }
    }
    uint64_t v22 = v62 + 1;
    uint64_t v21 = v26;
    if (v62 + 1 == v48) {
      return (uint64_t)v18;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

double *sub_100CFB4D8(void (*a1)(double *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    sub_1006BB924(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v14 = *i;
      swift_bridgeObjectRetain();
      a1(&v15, &v14);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      double v10 = v15;
      uint64_t v16 = v6;
      unint64_t v12 = *((void *)v6 + 2);
      unint64_t v11 = *((void *)v6 + 3);
      if (v12 >= v11 >> 1)
      {
        sub_1006BB924(v11 > 1, v12 + 1, 1);
        uint64_t v6 = v16;
      }
      *((void *)v6 + 2) = v12 + 1;
      v6[v12 + 4] = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100CFB604(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  type metadata accessor for CRLBoardCRDTData(0);
  v2[17] = swift_task_alloc();
  type metadata accessor for UUID();
  v2[18] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_100CFB6EC, 0, 0);
}

uint64_t sub_100CFB6EC()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v7, v3, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v8 = (uint64_t *)(*(void *)(v4 + v6) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  swift_bridgeObjectRetain();
  sub_100753370(v2, v9, v10, v1);
  uint64_t v11 = swift_task_alloc();
  v0[20] = v11;
  *(void *)(v11 + 16) = v5;
  *(void *)(v11 + 24) = v1;
  unint64_t v12 = (void *)swift_task_alloc();
  v0[21] = v12;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_10169A2A0);
  *unint64_t v12 = v0;
  v12[1] = sub_100CFB8E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000014, 0x8000000101284640, sub_100D1E788, v11, v13);
}

uint64_t sub_100CFB8E0()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100CFBAF0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100CFB9FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100CFB9FC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  long long v8 = *(_OWORD *)(v0 + 32);
  long long v9 = *(_OWORD *)(v0 + 16);
  long long v6 = *(_OWORD *)(v0 + 64);
  long long v7 = *(_OWORD *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 80);
  char v3 = *(unsigned char *)(v0 + 88);
  sub_100D1A69C(*(void *)(v0 + 152), type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)uint64_t v1 = v9;
  *(_OWORD *)(v1 + 16) = v8;
  *(_OWORD *)(v1 + 32) = v7;
  *(_OWORD *)(v1 + 48) = v6;
  *(void *)(v1 + 64) = v2;
  *(unsigned char *)(v1 + 72) = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100CFBAF0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_task_dealloc();
  sub_100D1A69C(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100CFBB94(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (uint64_t)&v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  unint64_t v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v13, v7, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v7, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  LOBYTE(v7) = static UUID.== infix(_:_:)();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v8);
  if ((v7 & 1) == 0)
  {
    uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap);
    swift_beginAccess();
    uint64_t v15 = *v14;
    if (*(void *)(*v14 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_100955FC8(a1);
      if (v17)
      {
        uint64_t v2 = *(void *)(*(void *)(v15 + 56) + 16 * v16);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        return v2;
      }
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  swift_unknownObjectRetain();
  return v2;
}

uint64_t sub_100CFBDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v57 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169A280);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v46 - v14;
  sub_100522E9C(a1, (uint64_t)&v60, &qword_101672BF0);
  if (!*((void *)&v61 + 1))
  {
    sub_100522F00((uint64_t)&v60, &qword_101672BF0);
    return 0;
  }
  sub_1005057FC(&qword_10169A288);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(a2 + 16) != *(void *)(v59[0] + 16))
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v55 = v59[0];
  uint64_t v56 = v7;
  uint64_t v54 = v4;
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v47 = a2 + 64;
  uint64_t v17 = -1;
  uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
  v46[1] = ~v18;
  if (-v18 < 64) {
    uint64_t v17 = ~(-1 << -(char)v18);
  }
  unint64_t v19 = v17 & v16;
  int64_t v48 = (unint64_t)(63 - v18) >> 6;
  uint64_t v49 = v57 + 16;
  uint64_t v52 = (void (**)(uint64_t, uint64_t))(v57 + 8);
  uint64_t v53 = (void (**)(uint64_t, char *, uint64_t))(v57 + 32);
  v46[0] = v48 - 1;
  uint64_t v50 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  while (1)
  {
    int64_t v22 = v21;
    if (v19)
    {
      uint64_t v58 = (v19 - 1) & v19;
      unint64_t v23 = __clz(__rbit64(v19)) | (v21 << 6);
      int64_t v24 = v21;
      uint64_t v25 = v54;
LABEL_9:
      uint64_t v26 = v50;
      (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v11, *(void *)(v50 + 48) + *(void *)(v57 + 72) * v23, v25);
      uint64_t v27 = *(void *)(v26 + 56);
      uint64_t v28 = sub_1005057FC(&qword_10169A100);
      uint64_t v29 = *(void **)(v27 + 8 * v23);
      *(void *)&v11[*(int *)(v28 + 48)] = v29;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v11, 0, 1, v28);
      id v30 = v29;
      int64_t v21 = v24;
      uint64_t v31 = (uint64_t)v56;
      goto LABEL_28;
    }
    int64_t v24 = v21 + 1;
    uint64_t v31 = (uint64_t)v56;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    uint64_t v25 = v54;
    if (v24 < v48)
    {
      unint64_t v32 = *(void *)(v47 + 8 * v24);
      if (v32) {
        goto LABEL_13;
      }
      int64_t v33 = v21 + 2;
      ++v21;
      if (v22 + 2 < v48)
      {
        unint64_t v32 = *(void *)(v47 + 8 * v33);
        if (v32) {
          goto LABEL_16;
        }
        int64_t v21 = v22 + 2;
        if (v22 + 3 < v48)
        {
          unint64_t v32 = *(void *)(v47 + 8 * (v22 + 3));
          if (v32)
          {
            v24 += 2;
            goto LABEL_13;
          }
          int64_t v33 = v22 + 4;
          int64_t v21 = v22 + 3;
          if (v22 + 4 < v48) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v34 = sub_1005057FC(&qword_10169A100);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v11, 1, 1, v34);
    uint64_t v58 = 0;
LABEL_28:
    sub_10051B3EC((uint64_t)v11, (uint64_t)v15, &qword_10169A280);
    uint64_t v35 = sub_1005057FC(&qword_10169A100);
    int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v15, 1, v35);
    uint64_t v37 = v55;
    if (v36 == 1)
    {
      sub_10052E1EC();
      swift_bridgeObjectRelease();
      return 1;
    }
    uint64_t v51 = v22;
    uint64_t v38 = *(void **)&v15[*(int *)(v35 + 48)];
    (*v53)(v31, v15, v25);
    if (*(void *)(v37 + 16) && (unint64_t v39 = sub_100955FC8(v31), (v40 & 1) != 0))
    {
      sub_1005498A4(*(void *)(v37 + 56) + 40 * v39, (uint64_t)&v60);
    }
    else
    {
      uint64_t v62 = 0;
      long long v60 = 0u;
      long long v61 = 0u;
    }
    (*v52)(v31, v25);
    uint64_t v41 = *((void *)&v61 + 1);
    if (!*((void *)&v61 + 1))
    {

      swift_bridgeObjectRelease();
      sub_100522F00((uint64_t)&v60, &qword_10169A290);
      sub_10052E1EC();
      return 0;
    }
    uint64_t v42 = v62;
    sub_10050F848(&v60, *((uint64_t *)&v61 + 1));
    v59[3] = type metadata accessor for CRLBoardItem(0);
    v59[0] = v38;
    unint64_t v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 8);
    id v44 = v38;
    char v45 = v43(v59, v41, v42);

    sub_100522F00((uint64_t)v59, &qword_101672BF0);
    uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v60);
    unint64_t v19 = v58;
    if ((v45 & 1) == 0)
    {
      sub_10052E1EC();
      goto LABEL_36;
    }
  }
  unint64_t v32 = *(void *)(v47 + 8 * v33);
  if (v32)
  {
LABEL_16:
    int64_t v24 = v33;
LABEL_13:
    uint64_t v58 = (v32 - 1) & v32;
    unint64_t v23 = __clz(__rbit64(v32)) + (v24 << 6);
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v24 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v24 >= v48)
    {
      int64_t v21 = v46[0];
      goto LABEL_27;
    }
    unint64_t v32 = *(void *)(v47 + 8 * v24);
    ++v33;
    if (v32) {
      goto LABEL_13;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_100CFC3E4(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_100D1A04C(a1, (uint64_t)sub_100CD6060, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100CFC470(uint64_t a1, uint64_t a2)
{
  char v13 = 1;
  uint64_t v14 = 0;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = &v13;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = &v14;
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = sub_100D1E6E4;
  v6[3] = v5;
  aBlock[4] = sub_100659320;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(id *)"";
  aBlock[2] = sub_1006D9628;
  aBlock[3] = &unk_10152A760;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v8 = [ObjCClassFromMetadata crl_catchExceptionsInBlock:v7 error:aBlock];
  _Block_release(v7);
  id v9 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_10;
  }
  if (!v8)
  {
    _convertNSErrorToError(_:)();

    goto LABEL_6;
  }
  if (!v14)
  {
    if ((v13 & 1) == 0) {
      return swift_release();
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  swift_errorRetain();
LABEL_6:
  swift_willThrow();
  swift_errorRelease();
  return swift_release();
}

void *sub_100CFC684(unsigned char *a1, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t result = a2(&v4);
  *a1 = 0;
  return result;
}

char *sub_100CFC700(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6)
{
  id v13 = objc_allocWithZone(v6);
  uint64_t v14 = sub_100D1ABB4(a1, a2, a3, a4, a5, a6);

  swift_release();
  swift_release();
  swift_release();

  return v14;
}

NSString sub_100CFC79C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C3B0 = (uint64_t)result;
  return result;
}

NSString sub_100CFC7D4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C3B8 = (uint64_t)result;
  return result;
}

id sub_100CFC80C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166FE50, (void **)&qword_10171C3B0, (void **)&qword_10171C3C0);
}

id sub_100CFC85C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166FE58, (void **)&qword_10171C3B8, (void **)&qword_10171C3C8);
}

uint64_t sub_100CFC9A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v15, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v16 = (uint64_t *)(*(void *)(v1 + v14) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v9, v17, v18, (uint64_t)v13);
  uint64_t v30 = UUID.uuidString.getter();
  uint64_t v31 = v19;
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = 58;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = v30;
  uint64_t v22 = v31;
  unint64_t v23 = (uint64_t *)&v13[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  uint64_t v24 = *v23;
  uint64_t v25 = (void *)v23[1];
  uint64_t v30 = v21;
  uint64_t v31 = v22;
  swift_bridgeObjectRetain();
  v26._countAndFlagsBits = v24;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  uint64_t v27 = v30;
  sub_100D1A69C((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  return v27;
}

Class sub_100CFCC20()
{
  type metadata accessor for UUID();
  type metadata accessor for CRLBoardItem(0);
  sub_100D15428((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  v0.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v0.super.isa;
}

uint64_t sub_100CFCD4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(char **)&v0[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  uint64_t v8 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  id v9 = *(double **)&v7[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  uint64_t v10 = v7;
  if (!v9)
  {
    sub_100846AB0();
    id v9 = *(double **)&v7[v8];
  }
  if (v9) {
    unint64_t v11 = (unint64_t)v9;
  }
  else {
    unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();

  swift_bridgeObjectRetain();
  if (v11 >> 62)
  {
    sub_1005057FC(&qword_101673060);
    uint64_t v12 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    uint64_t v12 = v11;
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = v12;
  id v13 = [self standardUserDefaults];
  unsigned int v14 = [v13 BOOLForKey:@"CRLScenesDebugView"];

  if (v14)
  {
    uint64_t v15 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v16 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v15 + *(int *)(v16 + 36), v2);
    uint64_t v17 = v1;
    unint64_t v18 = (unint64_t)sub_1005C2550((uint64_t)v6, (uint64_t)v17);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    swift_bridgeObjectRetain();
    if (v18 >> 62)
    {
      sub_1005057FC(&qword_101673060);
      unint64_t v19 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      unint64_t v19 = v18;
    }
    swift_bridgeObjectRelease();
    sub_1006E219C(v19);
    return v22;
  }
  return v12;
}

uint64_t sub_100CFD0B8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  unint64_t v19 = (char *)&v46 - v18;
  __chkstk_darwin(v20, v21);
  unint64_t v23 = (char *)&v46 - v22;
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v46 - v26;
  sub_100522E9C(a1, (uint64_t)v50, &qword_101672BF0);
  if (!v51)
  {
    sub_100522F00((uint64_t)v50, &qword_101672BF0);
    goto LABEL_9;
  }
  type metadata accessor for CRLBoard(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    char v44 = 0;
    return v44 & 1;
  }
  if (v49 == v2)
  {

    char v44 = 1;
  }
  else
  {
    int64_t v48 = v49;
    uint64_t v28 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v29 = *(void *)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v47 = type metadata accessor for CRLBoardCRDTData;
    sub_100D1E720(v29, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    uint64_t v46 = sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100D1A69C((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v30 = (uint64_t *)(*(void *)&v2[v28] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v31 = *v30;
    unint64_t v32 = v30[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v11, v31, v32, (uint64_t)v27);
    uint64_t v33 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v34 = *(void *)&v48[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v34, (uint64_t)v7, v47);
    swift_retain();
    CRRegister.wrappedValue.getter();
    sub_100D1A69C((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v35 = *(void *)&v48[v33];
    int v36 = v48;
    uint64_t v37 = (uint64_t *)(v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v38 = *v37;
    unint64_t v39 = v37[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v11, v38, v39, (uint64_t)v23);
    LOBYTE(v38) = static UUID.== infix(_:_:)();
    sub_100D1E720((uint64_t)v27, (uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    sub_100D1E720((uint64_t)v23, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    if (v38)
    {
      uint64_t v40 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v41 = *(void *)&v19[v40];
      uint64_t v42 = *(void *)&v19[v40 + 8];
      unint64_t v43 = &v15[v40];
      if (v41 == *(void *)v43 && v42 == *((void *)v43 + 1)) {
        char v44 = 1;
      }
      else {
        char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    else
    {
      char v44 = 0;
    }
    sub_100D1A69C((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    sub_100D1A69C((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);

    sub_100D1A69C((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
    sub_100D1A69C((uint64_t)v27, type metadata accessor for CRLBoardIdentifier);
  }
  return v44 & 1;
}

uint64_t sub_100CFD518(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v30[-v9];
  sub_100522E9C(a1, (uint64_t)v32, &qword_101672BF0);
  uint64_t v11 = v33;
  if (v33)
  {
    uint64_t v12 = sub_10050F848(v32, v33);
    uint64_t v13 = *(void *)(v11 - 8);
    __n128 v14 = __chkstk_darwin(v12, v12);
    uint64_t v16 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *, __n128))(v13 + 16))(v16, v14);
    uint64_t v17 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v16, v11);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v32);
  }
  else
  {
    uint64_t v17 = 0;
  }
  unsigned int v18 = [v1 isEqual:v17];
  swift_unknownObjectRelease();
  if (!v18) {
    goto LABEL_12;
  }
  sub_100522E9C(a1, (uint64_t)v32, &qword_101672BF0);
  if (!v33)
  {
    sub_100522F00((uint64_t)v32, &qword_101672BF0);
    goto LABEL_12;
  }
  type metadata accessor for CRLBoard(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    char v28 = 0;
    return v28 & 1;
  }
  unint64_t v19 = v31;
  uint64_t v20 = *(void *)&v31[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  uint64_t v21 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v21, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  uint64_t v22 = v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v22, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  swift_retain();
  LOBYTE(v22) = sub_101056788((uint64_t)v10, (uint64_t)v6);
  sub_100D1A69C((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
  sub_100D1A69C((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  swift_release();
  if ((v22 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v23 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer]
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  uint64_t v24 = *(void *)(*(void *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer]
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  uint64_t v25 = sub_1005057FC(&qword_10169A278);
  uint64_t v33 = v25;
  v32[0] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v24) = sub_100CFBDDC((uint64_t)v32, v23);
  swift_bridgeObjectRelease();
  sub_100522F00((uint64_t)v32, &qword_101672BF0);
  if ((v24 & 1) == 0)
  {
LABEL_11:

    goto LABEL_12;
  }
  uint64_t v26 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer]
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  uint64_t v27 = *(void *)(*(void *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer]
                  + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  uint64_t v33 = v25;
  v32[0] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v28 = sub_100CFBDDC((uint64_t)v32, v26);

  swift_bridgeObjectRelease();
  sub_100522F00((uint64_t)v32, &qword_101672BF0);
  return v28 & 1;
}

uint64_t sub_100CFD920(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    id v7 = a1;
  }
  char v8 = a4(v10);

  sub_100522F00((uint64_t)v10, &qword_101672BF0);
  return v8 & 1;
}

Swift::Int sub_100CFD9E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init()();
  uint64_t v14 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v15, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v16 = (uint64_t *)(*(void *)(v1 + v14) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v9, v17, v18, (uint64_t)v13);
  sub_100D15428((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_100D1A69C((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  long long v28 = v23;
  long long v29 = v24;
  uint64_t v30 = v25;
  long long v26 = v21;
  long long v27 = v22;
  return Hasher.finalize()();
}

uint64_t sub_100CFE010(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v9, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v11 = v14[2];
  uint64_t v10 = v14[3];
  sub_100D1A69C((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
  if (v11 == a1 && v10 == a2) {
    return swift_bridgeObjectRelease();
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    swift_beginAccess();
    v14[0] = a1;
    v14[1] = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    CRRegister.wrappedValue.setter();
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void sub_100CFE220(uint64_t a1, uint64_t a2, int a3, int a4)
{
  LODWORD(v560) = a4;
  int v563 = a3;
  uint64_t v566 = a1;
  uint64_t v7 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v7 - 8, v8);
  v535 = (char *)&v484 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  v538 = (char *)&v484 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v531 = (uint64_t)&v484 - v16;
  __chkstk_darwin(v15, v17);
  uint64_t v534 = (uint64_t)&v484 - v18;
  uint64_t v19 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v536 = (uint64_t)&v484 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v533 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v533, v22);
  uint64_t v537 = (uint64_t)&v484 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005057FC((uint64_t *)&unk_10169A1B0);
  uint64_t v26 = __chkstk_darwin(v24 - 8, v25);
  uint64_t v542 = (uint64_t)&v484 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v28);
  v541 = (char *)&v484 - v29;
  uint64_t v30 = sub_1005057FC(&qword_101697398);
  __chkstk_darwin(v30 - 8, v31);
  v540 = (char *)&v484 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v552 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  uint64_t v528 = *(void *)(v552 - 8);
  __chkstk_darwin(v552, v33);
  *(void *)&long long v546 = (char *)&v484 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1005057FC((uint64_t *)&unk_10169A1C0);
  uint64_t v37 = __chkstk_darwin(v35 - 8, v36);
  v549 = (char *)&v484 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v39);
  uint64_t v548 = (uint64_t)&v484 - v40;
  uint64_t v539 = sub_1005057FC((uint64_t *)&unk_1016A8B60);
  v527 = *(void (***)(char *, void, uint64_t))(v539 - 8);
  __chkstk_darwin(v539, v41);
  v529 = (char *)&v484 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v544 = sub_1005057FC(&qword_10169A1D0);
  v526 = *(void (***)(void, void))(v544 - 8);
  __chkstk_darwin(v544, v43);
  v543 = (char *)&v484 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v550 = sub_1005057FC((uint64_t *)&unk_10169A1D8);
  v525 = *(char **)(v550 - 8);
  __chkstk_darwin(v550, v45);
  v551 = (char *)&v484 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v49 = __chkstk_darwin(v47 - 8, v48);
  uint64_t v530 = (uint64_t)&v484 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v49, v51);
  uint64_t v554 = (uint64_t)&v484 - v53;
  uint64_t v55 = __chkstk_darwin(v52, v54);
  uint64_t v559 = (uint64_t)&v484 - v56;
  __chkstk_darwin(v55, v57);
  uint64_t v59 = (char *)&v484 - v58;
  v556 = (void *)type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v556, v60);
  uint64_t v62 = (char *)&v484 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v565 = type metadata accessor for UUID();
  uint64_t v564 = *(void *)(v565 - 8);
  uint64_t v64 = __chkstk_darwin(v565, v63);
  v545 = (char *)&v484 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v64, v66);
  v532 = (char *)&v484 - v68;
  uint64_t v70 = __chkstk_darwin(v67, v69);
  v553 = (void (**)(char *, char *, uint64_t))((char *)&v484 - v71);
  uint64_t v73 = __chkstk_darwin(v70, v72);
  v561 = (char *)&v484 - v74;
  uint64_t v524 = v75;
  __chkstk_darwin(v73, v76);
  uint64_t v567 = (uint64_t)&v484 - v77;
  id v78 = [self standardUserDefaults];
  NSString v79 = String._bridgeToObjectiveC()();
  unsigned int v80 = [v78 BOOLForKey:v79];

  if (v80)
  {
    sub_100D1E34C();
    swift_allocError();
    _OWORD *v81 = xmmword_10118C770;
LABEL_30:
    swift_willThrow();
    return;
  }
  v562 = v62;
  v522 = (uint64_t (*)(uint64_t, uint64_t))a2;
  v558 = v4;
  uint64_t v82 = *(void *)&v4[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
  uint64_t v521 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas;
  if (*(void *)(*(void *)(v82 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedItemDatas) + 16)
    || *(void *)(*(void *)(v82 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_addedItemDatas) + 16)
    || (uint64_t v83 = v82 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds,
        swift_beginAccess(),
        *(void *)(*(void *)v83 + 16)))
  {
    uint64_t v84 = swift_bridgeObjectRetain();
    v85 = sub_100CFAB24(v84);
    swift_bridgeObjectRelease();
    uint64_t v86 = swift_bridgeObjectRetain();
    v87 = sub_100CFAB24(v86);
    v547 = v5;
    swift_bridgeObjectRelease();
    if (qword_10166FBD0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    v88 = (void *)static OS_os_log.boardItemLifecycle;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    uint64_t v90 = sub_1005057FC(&qword_101683E60);
    *(void *)(inited + 56) = v90;
    uint64_t v91 = sub_100523288(&qword_10169A1E8, &qword_101683E60);
    *(void *)(inited + 32) = v85;
    *(void *)(inited + 96) = v90;
    *(void *)(inited + 104) = v91;
    *(void *)(inited + 64) = v91;
    *(void *)(inited + 72) = v87;
    v92 = (uint64_t *)(v82 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_removedNewlyCreatedItemIds);
    swift_beginAccess();
    uint64_t v93 = *v92;
    *(void *)(inited + 136) = sub_1005057FC(&qword_10169A1F0);
    *(void *)(inited + 144) = sub_100523288(&qword_10169A1F8, &qword_10169A1F0);
    *(void *)(inited + 112) = v93;
    id v94 = v88;
    v555 = v87;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v95 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v94, (uint64_t)&_mh_execute_header, v95, (uint64_t)"🚖 mergeDatabaseChanges() hasSignificantChanges: pendingchanges, removedItemKeys: %{public}@, addedItemKeys: %{public}@, removedNewlyCreatedKeys: %{public}@", 158, 0, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    v547 = v5;
    v555 = _swiftEmptyArrayStorage;
  }
  uint64_t v96 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue;
  v97 = *(NSObject **)(v82 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  uint64_t v98 = swift_allocObject();
  *(void *)(v98 + 16) = sub_100D1C224;
  *(void *)(v98 + 24) = v82;
  *(void *)&long long v577 = sub_100659320;
  *((void *)&v577 + 1) = v98;
  *(void *)&long long v575 = _NSConcreteStackBlock;
  *((void *)&v575 + 1) = *(void *)"";
  *(void *)&long long v576 = sub_1006D9628;
  *((void *)&v576 + 1) = &unk_10152A678;
  v99 = _Block_copy(&v575);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v97, v99);
  _Block_release(v99);
  LOBYTE(v97) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t v100 = (uint64_t)v562;
  if (v97)
  {
    __break(1u);
  }
  else
  {
    v101 = (uint64_t *)(v82 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_processingQueue);
    swift_beginAccess();
    uint64_t v102 = *v101;
    unint64_t v103 = (unint64_t)*v101 >> 62;
    v519 = v101;
    uint64_t v520 = v82;
    uint64_t v518 = v96;
    if (!v103)
    {
      if (!*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v204 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v204)
  {
LABEL_12:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"mergeDatabaseChanges(_:transaction:squelchLogs:undoable:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 272, (uint64_t)"If we have unprocessed items while we're about to mergeDatabaseChanges() they might not be considered for created/undeleted pending items.", 138, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v482) = 2;
    v480 = "If we have unprocessed items while we're about to mergeDatabaseChanges() they might not be considered for cre"
           "ated/undeleted pending items.";
    uint64_t v481 = 138;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"mergeDatabaseChanges(_:transaction:squelchLogs:undoable:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 272);
  }
LABEL_13:
  if (v563)
  {
    if (qword_10166FBD0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    v104 = (void *)static OS_os_log.boardItemLifecycle;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v105 = swift_initStackObject();
    *(_OWORD *)(v105 + 16) = xmmword_10117E810;
    uint64_t v106 = *(void *)&v558[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v106, v100, type metadata accessor for CRLBoardCRDTData);
    id v107 = v104;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    uint64_t v108 = v567;
    CRRegister.wrappedValue.getter();
    sub_100D1A69C(v100, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v109 = UUID.uuidString.getter();
    uint64_t v111 = v110;
    (*(void (**)(uint64_t, uint64_t))(v564 + 8))(v108, v565);
    *(void *)(v105 + 56) = &type metadata for String;
    *(void *)(v105 + 64) = sub_100528BE4();
    *(void *)(v105 + 32) = v109;
    *(void *)(v105 + 40) = v111;
    uint64_t v112 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v107, (uint64_t)&_mh_execute_header, v112, (uint64_t)"🚖 mergeDatabaseChanges() logs squelched. Board: %{public}@", 61, 0, v105);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  uint64_t v113 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v114 = v558;
  uint64_t v115 = *(void *)&v558[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v115, v100, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  uint64_t v116 = sub_1005057FC(&qword_101674550);
  uint64_t v117 = v567;
  uint64_t v557 = v116;
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v100, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v523 = v113;
  v118 = (uint64_t *)(*(void *)&v114[v113] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v120 = *v118;
  unint64_t v119 = v118[1];
  swift_bridgeObjectRetain();
  sub_100753370(v117, v120, v119, (uint64_t)v59);
  uint64_t v121 = v566;
  swift_beginAccess();
  uint64_t v122 = *(void *)(v121 + 16);
  swift_bridgeObjectRetain();
  sub_100950B44((uint64_t)v59, v122, (uint64_t)v578);
  swift_bridgeObjectRelease();
  sub_100D1A69C((uint64_t)v59, type metadata accessor for CRLBoardIdentifier);
  sub_10051B3EC((uint64_t)v578, (uint64_t)v579, &qword_10169A200);
  uint64_t v123 = v579[0];
  if (v579[0])
  {
    uint64_t v124 = v579[1];
    uint64_t v125 = v579[2];
    v126 = v114;
    v127 = (void *)v579[3];
    char v128 = v580;
    uint64_t v129 = sub_10050BF48(0, &qword_10169A248);
    __chkstk_darwin(v129, v130);
    *(&v484 - 8) = v123;
    *(&v484 - 7) = v124;
    *(&v484 - 6) = v125;
    *(&v484 - 5) = (uint64_t)v127;
    LOBYTE(v480) = v128;
    uint64_t v481 = (uint64_t)v126;
    v482 = v522;
    LOBYTE(v483) = (_BYTE)v560;
    v131 = v547;
    sub_100CFC470((uint64_t)sub_100D1E690, (uint64_t)(&v484 - 10));
    v132 = v131;
    if (v131)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();

      return;
    }
    swift_release();
    swift_release();
    swift_release();

    v114 = v126;
    uint64_t v100 = (uint64_t)v562;
  }
  else
  {
    v132 = v547;
  }
  v571[0] = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v133 = v523;
  uint64_t v134 = *(void *)&v114[v523] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  v547 = type metadata accessor for CRLBoardCRDTData;
  sub_100D1E720(v134, v100, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  v135 = v561;
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v100, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v136 = v567;
  sub_100CB4BC8(v567, v135);
  v516 = *(void (**)(uint64_t, uint64_t))(v564 + 8);
  uint64_t v517 = v564 + 8;
  v516(v136, v565);
  uint64_t v137 = *(void *)(v520 + v521);
  swift_bridgeObjectRetain();
  uint64_t v138 = sub_100CFB070((void (*)(uint64_t))sub_1006A91E0, 0, v137);
  v515 = v132;
  uint64_t v139 = sub_100CDCB64(v138);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v140 = (uint64_t)v562;
  swift_beginAccess();
  uint64_t v141 = swift_bridgeObjectRetain();
  uint64_t v521 = sub_100ED8C0C(v141, v139);
  uint64_t v142 = *(void *)&v114[v133] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v142, v140, v547);
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v140, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  v143 = v114;
  v144 = (uint64_t *)(*(void *)&v114[v133] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v146 = *v144;
  unint64_t v145 = v144[1];
  swift_bridgeObjectRetain();
  uint64_t v147 = v559;
  sub_100753370(v136, v146, v145, v559);
  uint64_t v148 = v566;
  swift_beginAccess();
  uint64_t v149 = *(void *)(v148 + 24);
  if (!*(void *)(v149 + 16)) {
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  unint64_t v150 = sub_1009563EC(v147);
  if ((v151 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_29:
    sub_100D1A69C(v147, type metadata accessor for CRLBoardIdentifier);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100D1E34C();
    swift_allocError();
    void *v170 = 0;
    v170[1] = 0;
    goto LABEL_30;
  }
  uint64_t v152 = *(void *)(*(void *)(v149 + 56) + 8 * v150);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_100D1A69C(v147, type metadata accessor for CRLBoardIdentifier);
  v153 = v143;
  uint64_t v154 = *(void *)&v143[v523] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v154, v140, type metadata accessor for CRLBoardCRDTData);
  uint64_t v155 = v567;
  CRRegister.wrappedValue.getter();
  uint64_t v156 = sub_100D1A69C(v140, type metadata accessor for CRLBoardCRDTData);
  uint64_t v559 = v152;
  v157 = v561;
  (*(void (**)(uint64_t))(**(void **)(v152 + 16) + 256))(v156);
  LOBYTE(v154) = static UUID.== infix(_:_:)();
  v158 = v157;
  uint64_t v159 = v565;
  v160 = v516;
  v516((uint64_t)v158, v565);
  v160(v155, v159);
  if ((v154 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100D1E34C();
    swift_allocError();
    void *v171 = 0xD000000000000023;
    v171[1] = 0x8000000101284270;
    swift_willThrow();
LABEL_32:
    swift_release();
    return;
  }
  uint64_t v161 = v559;
  v162 = *(uint64_t (**)(uint64_t))(v559 + 16);
  v163 = *(void **)&v153[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  swift_retain();
  v164 = v163;
  v165 = v515;
  sub_10103405C((uint64_t)v164, (uint64_t)&off_101518040);
  uint64_t v166 = v161;
  if (v165)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v167 = *(void *)&v164[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v168 = *(void (**)(uint64_t (*)(uint64_t)))(*(void *)v167 + 432);
  swift_retain();
  v168(v162);
  uint64_t v169 = (uint64_t)v522;
  (*(void (**)(uint64_t (*)(uint64_t)))(*(void *)v167 + 424))(v162);
  sub_10068307C(*((void *)v162 + 3), *((void *)v162 + 4), *((void *)v162 + 5), *((void *)v162 + 2));
  swift_release();
  sub_101023724((uint64_t)v164, (uint64_t)&off_101518040, v560);

  v172 = v561;
  (*(void (**)(void))(*(void *)v162 + 256))();
  swift_beginAccess();
  uint64_t v173 = v567;
  sub_100CB4BC8(v567, v172);
  swift_endAccess();
  v516(v173, v565);
  sub_100D02A04(v166, (uint64_t)v571, v521, v563 & 1, v558, v169, v560);
  v515 = v162;
  uint64_t v174 = v523;
  uint64_t v175 = *(void *)&v558[v523] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v175, v140, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v140, type metadata accessor for CRLBoardCRDTData);
  v176 = v558;
  swift_release();
  v177 = (uint64_t *)(*(void *)&v176[v174] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v179 = *v177;
  unint64_t v178 = v177[1];
  swift_bridgeObjectRetain();
  uint64_t v180 = v173;
  uint64_t v181 = v554;
  sub_100753370(v180, v179, v178, v554);
  uint64_t v182 = v566;
  swift_beginAccess();
  uint64_t v183 = *(void *)(v182 + 32);
  if (!*(void *)(v183 + 16))
  {
LABEL_39:
    sub_100D1A69C(v181, type metadata accessor for CRLBoardIdentifier);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100D1E34C();
    swift_allocError();
    void *v202 = 0;
    v202[1] = 0;
    swift_willThrow();
    swift_release();
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  unint64_t v184 = sub_1009563EC(v181);
  if ((v185 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  uint64_t v186 = *(void *)(*(void *)(v183 + 56) + 8 * v184);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_100D1A69C(v181, type metadata accessor for CRLBoardIdentifier);
  uint64_t v187 = *(void *)&v176[v523] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v187, v140, type metadata accessor for CRLBoardCRDTData);
  type metadata accessor for CRLBoardRootContainerAffinityCRDTData(0);
  uint64_t v188 = v567;
  CRRegister.wrappedValue.getter();
  uint64_t v189 = sub_100D1A69C(v140, type metadata accessor for CRLBoardCRDTData);
  v190 = v561;
  (*(void (**)(uint64_t))(**(void **)(v186 + 16) + 256))(v189);
  LOBYTE(v187) = static UUID.== infix(_:_:)();
  v191 = v190;
  uint64_t v192 = v188;
  uint64_t v193 = v565;
  v194 = v516;
  v516((uint64_t)v191, v565);
  v194(v192, v193);
  if ((v187 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100D1E34C();
    swift_allocError();
    void *v203 = 0xD00000000000003CLL;
    v203[1] = 0x80000001012842A0;
    swift_willThrow();
    swift_release();
    swift_release();
    goto LABEL_32;
  }
  v195 = *(void **)(v186 + 16);
  v196 = *(void **)&v176[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer];
  swift_retain();
  v197 = v196;
  sub_10103405C((uint64_t)v197, (uint64_t)&off_101518040);
  uint64_t v198 = v186;
  uint64_t v199 = *(void *)&v197[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  v200 = *(void (**)(void *))(*(void *)v199 + 432);
  swift_retain();
  v200(v195);
  uint64_t v201 = (uint64_t)v522;
  (*(void (**)(void *))(*(void *)v199 + 424))(v195);
  sub_10068307C(v195[3], v195[4], v195[5], v195[2]);
  swift_release();
  sub_101023724((uint64_t)v197, (uint64_t)&off_101518040, v560);

  v205 = *(void (**)(void))(*v195 + 256);
  v206 = v561;
  v498 = v195;
  v205();
  swift_beginAccess();
  sub_100CB4BC8(v192, v206);
  swift_endAccess();
  v516(v192, v565);
  uint64_t v499 = v198;
  sub_100D02A04(v198, (uint64_t)v571, v521, v563 & 1, v558, v201, v560);
  v547 = 0;
  v570 = &_swiftEmptySetSingleton;
  v207 = v558;
  uint64_t v208 = v523;
  uint64_t v209 = *(void *)&v558[v523] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v210 = v209;
  uint64_t v211 = (uint64_t)v562;
  sub_100D1E720(v210, (uint64_t)v562, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  uint64_t v212 = v567;
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v211, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  v213 = (uint64_t *)(*(void *)&v207[v208] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v215 = *v213;
  unint64_t v214 = v213[1];
  swift_bridgeObjectRetain();
  sub_100753370(v212, v215, v214, v530);
  uint64_t v216 = v566;
  swift_beginAccess();
  uint64_t v217 = *(void *)(v216 + 40);
  if (!*(void *)(v217 + 16)) {
    goto LABEL_122;
  }
  swift_bridgeObjectRetain();
  unint64_t v218 = sub_1009563EC(v530);
  if ((v219 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_122:
    sub_100D1A69C(v530, type metadata accessor for CRLBoardIdentifier);
    swift_bridgeObjectRelease();
    goto LABEL_123;
  }
  uint64_t v220 = *(void *)(*(void *)(v217 + 56) + 8 * v218);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_100D1A69C(v530, type metadata accessor for CRLBoardIdentifier);
  uint64_t v221 = *(void *)&v558[OBJC_IVAR____TtC8Freeform8CRLBoard_freehandDrawingBucketManager];
  uint64_t v222 = *(void *)(v221 + 16);
  uint64_t v223 = swift_beginAccess();
  uint64_t v488 = v220;
  uint64_t v224 = *(void *)(v220 + 16);
  __chkstk_darwin(v223, v225);
  v482 = sub_100D1E3B0;
  uint64_t v483 = v222;
  swift_retain();
  swift_bridgeObjectRetain();
  v226 = v547;
  sub_100FD5C3C((void (*)(void *))sub_100D1E3B8, (uint64_t)&v480, v224);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v485 = v221;
  uint64_t v227 = *(void *)(v221 + 16);
  *(void *)&long long v575 = &_swiftEmptyDictionarySingleton;
  uint64_t v228 = swift_beginAccess();
  uint64_t v229 = *(void *)(v227 + 16);
  uint64_t v231 = __chkstk_darwin(v228, v230);
  __chkstk_darwin(v231, v232);
  v482 = sub_100D1E3D4;
  uint64_t v483 = v233;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100FD5C3C((void (*)(void *))sub_100D1E7DC, (uint64_t)&v480, v229);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v234 = sub_100D1A46C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_100BE386C, 0, v575);
  v547 = v226;
  swift_bridgeObjectRelease();
  int64_t v500 = 0;
  uint64_t v235 = *(void *)(v234 + 64);
  uint64_t v489 = v234 + 64;
  uint64_t v236 = 1 << *(unsigned char *)(v234 + 32);
  uint64_t v237 = -1;
  if (v236 < 64) {
    uint64_t v237 = ~(-1 << v236);
  }
  unint64_t v497 = v237 & v235;
  uint64_t v495 = v234;
  uint64_t v496 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
  int64_t v490 = (unint64_t)(v236 + 63) >> 6;
  v493 = (void (**)(char *, uint64_t))(v527 + 1);
  v513 = (id *)(v564 + 32);
  v514 = (char **)(v526 + 2);
  ++v526;
  v527 = (void (**)(char *, void, uint64_t))(v564 + 16);
  v510 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v528 + 56);
  uint64_t v511 = v524 + 32;
  v509 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v528 + 48);
  v501 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v564 + 48);
  v494 = (void (**)(char *, uint64_t))(v525 + 8);
  long long v492 = xmmword_10117DF40;
  long long v487 = xmmword_101177E70;
  long long v486 = xmmword_10117E810;
LABEL_50:
  if (v497)
  {
    unint64_t v238 = __clz(__rbit64(v497));
    v497 &= v497 - 1;
    unint64_t v239 = v238 | (v500 << 6);
    goto LABEL_63;
  }
  BOOL v240 = __OFADD__(v500++, 1);
  if (v240) {
    goto LABEL_210;
  }
  if (v500 >= v490) {
    goto LABEL_135;
  }
  unint64_t v241 = *(void *)(v489 + 8 * v500);
  if (!v241)
  {
    int64_t v242 = v500 + 1;
    if (v500 + 1 < v490)
    {
      unint64_t v241 = *(void *)(v489 + 8 * v242);
      if (v241) {
        goto LABEL_61;
      }
      int64_t v242 = v500 + 2;
      if (v500 + 2 >= v490) {
        goto LABEL_135;
      }
      unint64_t v241 = *(void *)(v489 + 8 * v242);
      if (v241)
      {
LABEL_61:
        int64_t v500 = v242;
        goto LABEL_62;
      }
      int64_t v242 = v500 + 3;
      if (v500 + 3 < v490)
      {
        unint64_t v241 = *(void *)(v489 + 8 * v242);
        if (v241) {
          goto LABEL_61;
        }
        while (1)
        {
          int64_t v500 = v242 + 1;
          if (__OFADD__(v242, 1)) {
            goto LABEL_212;
          }
          if (v500 >= v490) {
            break;
          }
          unint64_t v241 = *(void *)(v489 + 8 * v500);
          ++v242;
          if (v241) {
            goto LABEL_62;
          }
        }
      }
    }
LABEL_135:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v391 = *(void *)(v485 + 16);
    swift_beginAccess();
    int64_t v392 = 0;
    uint64_t v393 = *(void *)(v391 + 16);
    uint64_t v394 = v393 + 64;
    uint64_t v395 = 1 << *(unsigned char *)(v393 + 32);
    uint64_t v396 = -1;
    if (v395 < 64) {
      uint64_t v396 = ~(-1 << v395);
    }
    unint64_t v397 = v396 & *(void *)(v393 + 64);
    int64_t v398 = (unint64_t)(v395 + 63) >> 6;
    while (1)
    {
      if (v397)
      {
        unint64_t v399 = __clz(__rbit64(v397));
        v397 &= v397 - 1;
        unint64_t v400 = v399 | (v392 << 6);
      }
      else
      {
        BOOL v240 = __OFADD__(v392++, 1);
        if (v240) {
          goto LABEL_209;
        }
        if (v392 >= v398) {
          goto LABEL_158;
        }
        unint64_t v402 = *(void *)(v394 + 8 * v392);
        if (!v402)
        {
          int64_t v403 = v392 + 1;
          if (v392 + 1 >= v398) {
            goto LABEL_158;
          }
          unint64_t v402 = *(void *)(v394 + 8 * v403);
          if (v402) {
            goto LABEL_150;
          }
          int64_t v403 = v392 + 2;
          if (v392 + 2 >= v398) {
            goto LABEL_158;
          }
          unint64_t v402 = *(void *)(v394 + 8 * v403);
          if (v402) {
            goto LABEL_150;
          }
          int64_t v403 = v392 + 3;
          if (v392 + 3 >= v398) {
            goto LABEL_158;
          }
          unint64_t v402 = *(void *)(v394 + 8 * v403);
          if (v402)
          {
LABEL_150:
            int64_t v392 = v403;
          }
          else
          {
            int64_t v405 = v392 + 4;
            if (v392 + 4 >= v398) {
              goto LABEL_158;
            }
            unint64_t v402 = *(void *)(v394 + 8 * v405);
            v392 += 4;
            if (!v402)
            {
              while (1)
              {
                int64_t v392 = v405 + 1;
                if (__OFADD__(v405, 1)) {
                  goto LABEL_213;
                }
                if (v392 >= v398) {
                  break;
                }
                unint64_t v402 = *(void *)(v394 + 8 * v392);
                ++v405;
                if (v402) {
                  goto LABEL_151;
                }
              }
LABEL_158:
              swift_release();
LABEL_123:
              uint64_t v566 = sub_100CDCB64((uint64_t)v555);
              swift_bridgeObjectRelease();
              swift_beginAccess();
              uint64_t v380 = swift_bridgeObjectRetain();
              v560 = (void *)sub_100C314A4(v380);
              unint64_t v381 = sub_100A38F20((uint64_t)_swiftEmptyArrayStorage);
              uint64_t v382 = *v519;
              if ((unint64_t)*v519 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v383 = _CocoaArrayWrapper.endIndex.getter();
                if (v383) {
                  goto LABEL_125;
                }
              }
              else
              {
                uint64_t v383 = *(void *)((v382 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
                if (v383)
                {
LABEL_125:
                  if (v383 < 1) {
                    goto LABEL_211;
                  }
                  uint64_t v384 = 0;
                  do
                  {
                    if ((v382 & 0xC000000000000001) != 0) {
                      specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      swift_retain();
                    }
                    swift_beginAccess();
                    uint64_t v385 = swift_bridgeObjectRetain();
                    uint64_t v386 = sub_1006B3E34(v385);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    *(void *)&long long v575 = v381;
                    v388 = v547;
                    sub_100D19B04(v386, (uint64_t)sub_100D19A60, 0, isUniquelyReferenced_nonNull_native, (void (*)(void *__return_ptr, void *, uint64_t *))sub_100D1A6FC, 0);
                    v547 = v388;
                    if (v388) {
                      goto LABEL_214;
                    }
                    ++v384;
                    unint64_t v389 = v575;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_release();
                    swift_bridgeObjectRelease();
                    unint64_t v381 = v389;
                  }
                  while (v383 != v384);
LABEL_162:
                  swift_bridgeObjectRelease();
                  uint64_t v408 = sub_100C314A4(v389);
                  v409 = (uint64_t *)(v520 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_realTimePeerCreatedItemDatas);
                  swift_beginAccess();
                  uint64_t v410 = *v409;
                  swift_bridgeObjectRetain();
                  v411 = v547;
                  uint64_t v412 = sub_100CFB070((void (*)(uint64_t))sub_1006A91E0, 0, v410);
                  v547 = v411;
                  uint64_t v413 = sub_100CDCB64(v412);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v414 = sub_100ED8C0C(v413, v408);
                  if (*(void *)(v571[0] + 16) <= v560[2] >> 3)
                  {
                    *(void *)&long long v575 = v560;
                    sub_1010295C8(v571[0]);
                    swift_bridgeObjectRelease();
                    v415 = (void *)v575;
                  }
                  else
                  {
                    v415 = sub_10102AA0C(v571[0], (uint64_t)v560);
                    swift_bridgeObjectRelease();
                  }
                  if (*(void *)(v566 + 16) <= v415[2] >> 3)
                  {
                    *(void *)&long long v575 = v415;
                    sub_1010295C8(v566);
                    swift_bridgeObjectRelease();
                    v416 = (void *)v575;
                  }
                  else
                  {
                    v416 = sub_10102AA0C(v566, (uint64_t)v415);
                    swift_bridgeObjectRelease();
                  }
                  if (*(void *)(v414 + 16) <= v416[2] >> 3)
                  {
                    *(void *)&long long v575 = v416;
                    sub_1010295C8(v414);
                    swift_bridgeObjectRelease();
                    v560 = (void *)v575;
                  }
                  else
                  {
                    v560 = sub_10102AA0C(v414, (uint64_t)v416);
                    swift_bridgeObjectRelease();
                  }
                  v417 = v558;
                  sub_100BE31D0((uint64_t)v570);
                  swift_bridgeObjectRelease();
                  uint64_t v418 = 0;
                  uint64_t v419 = v560[7];
                  uint64_t v550 = (uint64_t)(v560 + 7);
                  uint64_t v420 = 1 << *((unsigned char *)v560 + 32);
                  uint64_t v421 = -1;
                  if (v420 < 64) {
                    uint64_t v421 = ~(-1 << v420);
                  }
                  unint64_t v422 = v421 & v419;
                  v551 = (char *)((unint64_t)(v420 + 63) >> 6);
                  v555 = (double *)(v564 + 16);
                  v556 = (void *)(v564 + 56);
                  uint64_t v554 = v564 + 48;
                  v553 = (void (**)(char *, char *, uint64_t))(v564 + 32);
                  long long v544 = xmmword_10117D8C0;
                  long long v546 = xmmword_10117DF40;
                  uint64_t v423 = (uint64_t)v522;
                  v424 = v538;
                  uint64_t v425 = v565;
                  while (2)
                  {
                    if (v422)
                    {
                      unint64_t v451 = __clz(__rbit64(v422));
                      v422 &= v422 - 1;
                      unint64_t v452 = v451 | (v418 << 6);
                    }
                    else
                    {
                      uint64_t v453 = v418 + 1;
                      if (__OFADD__(v418, 1))
                      {
                        __break(1u);
                        goto LABEL_207;
                      }
                      if (v453 >= (uint64_t)v551) {
                        goto LABEL_203;
                      }
                      unint64_t v454 = *(void *)(v550 + 8 * v453);
                      ++v418;
                      if (!v454)
                      {
                        uint64_t v418 = v453 + 1;
                        if (v453 + 1 >= (uint64_t)v551) {
                          goto LABEL_203;
                        }
                        unint64_t v454 = *(void *)(v550 + 8 * v418);
                        if (!v454)
                        {
                          uint64_t v418 = v453 + 2;
                          if (v453 + 2 >= (uint64_t)v551) {
                            goto LABEL_203;
                          }
                          unint64_t v454 = *(void *)(v550 + 8 * v418);
                          if (!v454)
                          {
                            uint64_t v455 = v453 + 3;
                            if (v455 >= (uint64_t)v551)
                            {
LABEL_203:
                              ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v556)(v538, 1, 1, v565);
LABEL_204:
                              swift_release();
                              uint64_t v476 = v520;
                              v477 = *(NSObject **)(v520 + v518);
                              uint64_t v478 = swift_allocObject();
                              *(void *)(v478 + 16) = sub_100D1C490;
                              *(void *)(v478 + 24) = v476;
                              *(void *)&long long v577 = sub_100659320;
                              *((void *)&v577 + 1) = v478;
                              *(void *)&long long v575 = _NSConcreteStackBlock;
                              *((void *)&v575 + 1) = *(void *)"";
                              *(void *)&long long v576 = sub_1006D9628;
                              *((void *)&v576 + 1) = &unk_10152A6C8;
                              v479 = _Block_copy(&v575);
                              swift_retain();
                              swift_retain();
                              swift_release();
                              dispatch_sync(v477, v479);
                              _Block_release(v479);
                              LOBYTE(v477) = swift_isEscapingClosureAtFileLocation();
                              swift_release();
                              swift_release();
                              swift_release();
                              swift_release();
                              swift_release();
                              swift_release();
                              if ((v477 & 1) == 0) {
                                return;
                              }
                              goto LABEL_208;
                            }
                            unint64_t v454 = *(void *)(v550 + 8 * v455);
                            if (!v454)
                            {
                              while (1)
                              {
                                uint64_t v418 = v455 + 1;
                                if (__OFADD__(v455, 1)) {
                                  break;
                                }
                                if (v418 >= (uint64_t)v551) {
                                  goto LABEL_203;
                                }
                                unint64_t v454 = *(void *)(v550 + 8 * v418);
                                ++v455;
                                if (v454) {
                                  goto LABEL_193;
                                }
                              }
LABEL_207:
                              __break(1u);
LABEL_208:
                              __break(1u);
LABEL_209:
                              __break(1u);
LABEL_210:
                              __break(1u);
LABEL_211:
                              __break(1u);
LABEL_212:
                              __break(1u);
LABEL_213:
                              __break(1u);
LABEL_214:
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              __break(1u);
                              return;
                            }
                            uint64_t v418 = v455;
                          }
                        }
                      }
LABEL_193:
                      unint64_t v422 = (v454 - 1) & v454;
                      unint64_t v452 = __clz(__rbit64(v454)) + (v418 << 6);
                      v417 = v558;
                      uint64_t v423 = (uint64_t)v522;
                      v424 = v538;
                      uint64_t v425 = v565;
                    }
                    uint64_t v456 = v564;
                    (*(void (**)(char *, unint64_t, uint64_t))(v564 + 16))(v424, v560[6] + *(void *)(v564 + 72) * v452, v425);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v456 + 56))(v424, 0, 1, v425);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v456 + 48))(v424, 1, v425) == 1) {
                      goto LABEL_204;
                    }
                    (*v553)(v545, v424, v425);
                    Class isa = UUID._bridgeToObjectiveC()().super.isa;
                    v458 = [v417 getBoardItemForUUID:isa];

                    if (v458)
                    {
                      uint64_t v566 = v422;
                      if ((v563 & 1) == 0)
                      {
                        uint64_t v552 = v418;
                        if (qword_10166FBD0 != -1) {
                          swift_once();
                        }
                        swift_beginAccess();
                        v426 = (void *)static OS_os_log.boardItemLifecycle;
                        sub_1005057FC((uint64_t *)&unk_101672B40);
                        uint64_t v427 = swift_initStackObject();
                        *(_OWORD *)(v427 + 16) = v546;
                        v428 = *(void (**)(void))((swift_isaMask & *v458) + 0x88);
                        v549 = v426;
                        uint64_t v429 = v567;
                        v428();
                        uint64_t v430 = UUID.uuidString.getter();
                        uint64_t v432 = v431;
                        uint64_t v433 = v565;
                        v516(v429, v565);
                        *(void *)(v427 + 56) = &type metadata for String;
                        unint64_t v434 = sub_100528BE4();
                        *(void *)(v427 + 64) = v434;
                        *(void *)(v427 + 32) = v430;
                        uint64_t v548 = v427 + 32;
                        *(void *)(v427 + 40) = v432;
                        v435 = v458;
                        id v436 = [v435 description];
                        uint64_t v437 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                        uint64_t v439 = v438;

                        *(void *)(v427 + 96) = &type metadata for String;
                        *(void *)(v427 + 104) = v434;
                        *(void *)(v427 + 72) = v437;
                        *(void *)(v427 + 80) = v439;
                        v440 = v558;
                        uint64_t v441 = *(void *)&v558[v523] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
                        swift_beginAccess();
                        uint64_t v442 = v441;
                        uint64_t v443 = (uint64_t)v562;
                        sub_100D1E720(v442, (uint64_t)v562, type metadata accessor for CRLBoardCRDTData);
                        swift_retain();
                        v444 = v561;
                        CRRegister.wrappedValue.getter();
                        sub_100D1A69C(v443, type metadata accessor for CRLBoardCRDTData);
                        swift_release();
                        uint64_t v445 = UUID.uuidString.getter();
                        uint64_t v447 = v446;
                        v516((uint64_t)v444, v433);
                        *(void *)(v427 + 136) = &type metadata for String;
                        *(void *)(v427 + 144) = v434;
                        *(void *)(v427 + 112) = v445;
                        *(void *)(v427 + 120) = v447;
                        v417 = v440;
                        uint64_t v425 = v433;
                        uint64_t v448 = static os_log_type_t.default.getter();
                        id v449 = v549;
                        sub_100BAC898((uint64_t)v549, (uint64_t)&_mh_execute_header, v448, (uint64_t)"🚖 ⭕ mergeDatabaseChanges() deleted %{public}@%{public}@. Board: %{public}@", 79, 0, v427);
                        swift_setDeallocating();
                        sub_1005057FC(&qword_101672B50);
                        swift_arrayDestroy();

                        uint64_t v423 = (uint64_t)v522;
                        v424 = v538;
                        uint64_t v418 = v552;
                      }
                      v450 = v458;
                      sub_101031278(v450, 0, 0, v423);

                      goto LABEL_176;
                    }
                    if ((v563 & 1) == 0)
                    {
                      uint64_t v566 = v422;
                      uint64_t v552 = v418;
                      if (qword_10166FBD0 != -1) {
                        swift_once();
                      }
                      swift_beginAccess();
                      v459 = (void *)static OS_os_log.boardItemLifecycle;
                      sub_1005057FC((uint64_t *)&unk_101672B40);
                      uint64_t v460 = swift_initStackObject();
                      *(_OWORD *)(v460 + 16) = v544;
                      v450 = v459;
                      uint64_t v461 = UUID.uuidString.getter();
                      uint64_t v463 = v462;
                      *(void *)(v460 + 56) = &type metadata for String;
                      unint64_t v464 = sub_100528BE4();
                      *(void *)(v460 + 32) = v461;
                      *(void *)(v460 + 64) = v464;
                      *(void *)(v460 + 40) = v463;
                      v465 = v558;
                      uint64_t v466 = *(void *)&v558[v523] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
                      swift_beginAccess();
                      uint64_t v467 = v466;
                      uint64_t v468 = (uint64_t)v562;
                      sub_100D1E720(v467, (uint64_t)v562, type metadata accessor for CRLBoardCRDTData);
                      swift_retain();
                      uint64_t v469 = v567;
                      CRRegister.wrappedValue.getter();
                      sub_100D1A69C(v468, type metadata accessor for CRLBoardCRDTData);
                      swift_release();
                      uint64_t v470 = UUID.uuidString.getter();
                      uint64_t v472 = v471;
                      uint64_t v473 = v469;
                      uint64_t v474 = v565;
                      v516(v473, v565);
                      *(void *)(v460 + 96) = &type metadata for String;
                      *(void *)(v460 + 104) = v464;
                      *(void *)(v460 + 72) = v470;
                      *(void *)(v460 + 80) = v472;
                      v417 = v465;
                      uint64_t v425 = v474;
                      uint64_t v475 = static os_log_type_t.error.getter();
                      sub_100BAC898((uint64_t)v450, (uint64_t)&_mh_execute_header, v475, (uint64_t)"🚖 ⭕ ERROR: Unable to remove item %{public}@. Board %{public}@", 66, 0, v460);
                      swift_setDeallocating();
                      sub_1005057FC(&qword_101672B50);
                      swift_arrayDestroy();
                      uint64_t v423 = (uint64_t)v522;
                      v424 = v538;
                      uint64_t v418 = v552;
LABEL_176:

                      unint64_t v422 = v566;
                    }
                    v516((uint64_t)v545, v425);
                    continue;
                  }
                }
              }
              unint64_t v389 = v381;
              goto LABEL_162;
            }
          }
        }
LABEL_151:
        unint64_t v404 = __clz(__rbit64(v402));
        unint64_t v397 = (v402 - 1) & v402;
        unint64_t v400 = v404 + (v392 << 6);
      }
      uint64_t v401 = *(void *)(*(void *)(v393 + 56) + 8 * v400);
      *(unsigned char *)(v401 + *(void *)(*(void *)v401 + 136)) = 0;
    }
  }
LABEL_62:
  unint64_t v497 = (v241 - 1) & v241;
  unint64_t v239 = __clz(__rbit64(v241)) + (v500 << 6);
LABEL_63:
  uint64_t v243 = *(void *)(*(void *)(v495 + 56) + 8 * v239);
  uint64_t v244 = v243 + *(void *)(*(void *)v243 + 120);
  swift_beginAccess();
  v245 = *v514;
  v246 = v543;
  uint64_t v528 = v244;
  uint64_t v247 = v244;
  uint64_t v248 = v544;
  v525 = v245;
  ((void (*)(char *, uint64_t, void))v245)(v543, v247, v544);
  uint64_t v249 = sub_100523288(&qword_10169A210, (uint64_t *)&unk_1016A8B60);
  swift_retain();
  v250 = v529;
  uint64_t v524 = v249;
  Capsule<>.root.getter();
  v512 = (void (*)(char *, uint64_t))*v526;
  v512(v246, v248);
  uint64_t v251 = v539;
  CRDictionary.makeIterator()();
  (*v493)(v250, v251);
  uint64_t v252 = *(void *)v243;
  uint64_t v530 = *(void *)(*(void *)v243 + 136);
  uint64_t v253 = *(void *)(v252 + 128);
  uint64_t v554 = v243;
  v505 = (void *)(v243 + v253);
  v254 = v516;
  while (2)
  {
    v255 = v513;
    while (1)
    {
      while (1)
      {
        uint64_t v256 = (uint64_t)v549;
        CRDictionary.Iterator.next()();
        uint64_t v257 = v256;
        uint64_t v258 = v548;
        sub_10051B3EC(v257, v548, (uint64_t *)&unk_10169A1C0);
        uint64_t v259 = sub_1005057FC(&qword_10169A218);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v259 - 8) + 48))(v258, 1, v259) == 1)
        {
          (*v494)(v551, v550);
          swift_release();
          goto LABEL_50;
        }
        uint64_t v566 = v258 + *(int *)(v259 + 48);
        v260 = v553;
        uint64_t v261 = v565;
        v556 = *v255;
        ((void (*)(void, uint64_t, uint64_t))v556)(v553, v258, v565);
        v262 = (uint64_t (*)(uint64_t, void, uint64_t))*v527;
        v263 = v561;
        (*v527)(v561, v260, v261);
        swift_beginAccess();
        v264 = v263;
        uint64_t v265 = v567;
        sub_100CB4BC8(v567, v264);
        swift_endAccess();
        v254(v265, v261);
        if (*(unsigned char *)(v554 + v530) != 1)
        {
          v254((uint64_t)v260, v261);
          goto LABEL_113;
        }
        v266 = v543;
        uint64_t v267 = v544;
        ((void (*)(char *, uint64_t, void))v525)(v543, v528, v544);
        uint64_t v268 = v262(v265, v260, v261);
        __chkstk_darwin(v268, v269);
        v271 = (uint64_t *)((char *)&v484 - ((v270 + 15) & 0xFFFFFFFFFFFFFFF0));
        uint64_t v272 = v552;
        uint64_t *v271 = v261;
        v271[1] = v272;
        v271[2] = sub_100D15428(&qword_10169A228, (void (*)(uint64_t))&type metadata accessor for UUID);
        v271[3] = sub_100D15428((unint64_t *)&unk_10169A230, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
        ((void (*)(uint64_t *, uint64_t, uint64_t))v556)(v271 + 4, v265, v261);
        swift_getKeyPath();
        uint64_t v273 = (uint64_t)v541;
        Capsule<>.subscript.getter();
        uint64_t v274 = v267;
        swift_release();
        uint64_t v275 = v267;
        v276 = v512;
        v512(v266, v275);
        uint64_t v277 = v542;
        sub_100522E9C(v273, v542, (uint64_t *)&unk_10169A1B0);
        uint64_t v278 = sub_1005057FC(&qword_10169A220);
        uint64_t v279 = *(void *)(v278 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v279 + 48))(v277, 1, v278) == 1)
        {
          sub_100522F00(v273, (uint64_t *)&unk_10169A1B0);
          sub_100522F00(v277, (uint64_t *)&unk_10169A1B0);
          uint64_t v280 = 1;
          v281 = v558;
          uint64_t v282 = (uint64_t)v540;
        }
        else
        {
          ((void (*)(char *, uint64_t, uint64_t))v525)(v266, v528, v274);
          sub_100523288(&qword_10169A240, (uint64_t *)&unk_1016A8B60);
          uint64_t v282 = (uint64_t)v540;
          Ref.subscript.getter();
          v276(v266, v274);
          sub_100522F00(v273, (uint64_t *)&unk_10169A1B0);
          (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v277, v278);
          uint64_t v280 = 0;
          v281 = v558;
        }
        uint64_t v283 = v552;
        (*v510)(v282, v280, 1, v552);
        int v284 = (*v509)(v282, 1, v283);
        v255 = v513;
        if (v284 != 1) {
          break;
        }
        v254 = v516;
        v516((uint64_t)v553, v565);
        sub_100522F00(v282, &qword_101697398);
        (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v566, v278);
      }
      uint64_t v503 = v279;
      uint64_t v504 = v278;
      sub_100D1D0E4(v282, v546, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
      *(void *)&long long v506 = v505[1];
      uint64_t v285 = v505[4];
      *(void *)&long long v507 = v505[3];
      *(void *)&long long v508 = v285;
      Class v286 = UUID._bridgeToObjectiveC()().super.isa;
      v287 = [v281 getBoardItemForUUID:v286];

      if (v287)
      {
        type metadata accessor for CRLFreehandDrawingShapeItem();
        uint64_t v288 = swift_dynamicCastClass();
        if (v288)
        {
          uint64_t v289 = v288;
          uint64_t v290 = v552;
          uint64_t v291 = v546;
          sub_100522E9C(v546 + *(int *)(v552 + 20), v537, &qword_1016892B0);
          uint64_t v292 = v291 + *(int *)(v290 + 24);
          uint64_t v293 = v536;
          uint64_t v294 = sub_100D1E720(v292, v536, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
          (*(void (**)(uint64_t))((swift_isaMask & *v287) + 0x358))(v294);
          uint64_t v296 = v295;
          uint64_t ObjectType = swift_getObjectType();
          v298 = *(uint64_t (**)(uint64_t, uint64_t))(v296 + 32);
          v556 = v287;
          uint64_t v299 = v298(ObjectType, v296);
          swift_unknownObjectRelease();
          type metadata accessor for CRLFreehandDrawingShapeItemData(0);
          uint64_t v300 = swift_allocObject();
          sub_100D1D0E4(v293, v300 + *(void *)(*(void *)v300 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
          *(void *)(v300 + qword_10169E700) = 0;
          sub_10051B3EC(v537, v300 + *(void *)(*(void *)v300 + 632), &qword_1016892B0);
          v301 = sub_10068B398(v506, v507, v508, v299);
          v302 = v547;
          sub_10103405C(v289, (uint64_t)&off_101518040);
          v547 = v302;
          if (v302) {
            goto LABEL_133;
          }
          uint64_t v303 = *(void *)(v289 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          v304 = *(void (**)(void *))(*(void *)v303 + 432);
          swift_retain();
          v304(v301);
          (*(void (**)(void *))(*(void *)v303 + 424))(v301);
          uint64_t v305 = v301[5];
          uint64_t v306 = v301[2];
          *(_OWORD *)(v303 + 24) = *(_OWORD *)(v301 + 3);
          *(void *)(v303 + 40) = v305;
          if (v306)
          {
            uint64_t v307 = *(void *)(v303 + 16);
            if ((v307 & 1) == 0) {
              *(void *)(v303 + 16) = v307 | 1;
            }
          }
          sub_10068B460();
          if ((v306 & 4) != 0)
          {
            uint64_t v308 = *(void *)(v303 + 16);
            if ((v308 & 4) == 0) {
              *(void *)(v303 + 16) = v308 | 4;
            }
          }
          if ((v306 & 2) != 0)
          {
            uint64_t v309 = *(void *)(v303 + 16);
            if ((v309 & 2) == 0) {
              *(void *)(v303 + 16) = v309 | 2;
            }
          }
          swift_release();
          v310 = v547;
          sub_101023724(v289, (uint64_t)&off_101518040, v560);
          v547 = v310;
          if (v310)
          {
LABEL_133:
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            id v390 = v556;

            swift_release();
            swift_release();
            swift_release();
            sub_100D1A69C(v546, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
            v516((uint64_t)v553, v565);
            goto LABEL_134;
          }
          id v311 = v556;

          swift_release();
        }
        else
        {
          v315 = v287;
          if (qword_10166F9C8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v316 = (id)static OS_os_log.crlDefault;
          uint64_t v317 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v316, (uint64_t)&_mh_execute_header, v317, (uint64_t)"Tried to merge freehand drawing shape data to non freehand drawing shape item.", 78, 2, (uint64_t)_swiftEmptyArrayStorage);
        }
        sub_100D1A69C(v546, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
        v254 = v516;
        v516((uint64_t)v553, v565);
        goto LABEL_112;
      }
      uint64_t v502 = v546 + *(int *)(v552 + 20);
      sub_1005057FC(&qword_101686808);
      uint64_t v312 = (uint64_t)v535;
      CRRegister.wrappedValue.getter();
      uint64_t v313 = v534;
      sub_100522E9C(v312, v534, (uint64_t *)&unk_101674520);
      sub_100D1A69C(v312, type metadata accessor for CRLShapeItemParentAffinity);
      v314 = *v501;
      if ((*v501)(v313, 1, v565) == 1)
      {
        sub_100522F00(v313, (uint64_t *)&unk_101674520);
        goto LABEL_101;
      }
      ((void (*)(char *, uint64_t, uint64_t))v556)(v532, v313, v565);
      Class v318 = UUID._bridgeToObjectiveC()().super.isa;
      v319 = [v281 getBoardItemForUUID:v318];

      v556 = v319;
      if (v319) {
        break;
      }
LABEL_100:
      v516((uint64_t)v532, v565);
LABEL_101:
      if ((v563 & 1) == 0)
      {
        if (qword_10166FBD0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        v339 = (void *)static OS_os_log.boardItemLifecycle;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v340 = swift_initStackObject();
        *(_OWORD *)(v340 + 16) = v492;
        v556 = v339;
        uint64_t v341 = UUID.uuidString.getter();
        uint64_t v343 = v342;
        *(void *)(v340 + 56) = &type metadata for String;
        unint64_t v344 = sub_100528BE4();
        *(void *)(v340 + 32) = v341;
        uint64_t v504 = v340 + 32;
        *(void *)(v340 + 64) = v344;
        *(void *)(v340 + 40) = v343;
        uint64_t v345 = (uint64_t)v535;
        CRRegister.wrappedValue.getter();
        uint64_t v346 = v531;
        sub_100522E9C(v345, v531, (uint64_t *)&unk_101674520);
        sub_100D1A69C(v345, type metadata accessor for CRLShapeItemParentAffinity);
        if (v314(v346, 1, v565) == 1)
        {
          sub_100522F00(v531, (uint64_t *)&unk_101674520);
          v347 = (uint64_t *)(v340 + 72);
          *(void *)(v340 + 96) = &type metadata for String;
          *(void *)(v340 + 104) = v344;
          goto LABEL_108;
        }
        uint64_t v348 = v531;
        uint64_t v349 = UUID.uuidString.getter();
        unint64_t v351 = v350;
        v516(v348, v565);
        v347 = (uint64_t *)(v340 + 72);
        *(void *)(v340 + 96) = &type metadata for String;
        *(void *)(v340 + 104) = v344;
        if (v351)
        {
          uint64_t *v347 = v349;
        }
        else
        {
LABEL_108:
          uint64_t *v347 = 7104878;
          unint64_t v351 = 0xE300000000000000;
        }
        *(void *)(v340 + 80) = v351;
        uint64_t v352 = *(void *)&v558[v523] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        uint64_t v353 = v352;
        uint64_t v354 = (uint64_t)v562;
        sub_100D1E720(v353, (uint64_t)v562, type metadata accessor for CRLBoardCRDTData);
        swift_retain();
        uint64_t v355 = v567;
        CRRegister.wrappedValue.getter();
        sub_100D1A69C(v354, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        uint64_t v356 = UUID.uuidString.getter();
        uint64_t v358 = v357;
        v516(v355, v565);
        *(void *)(v340 + 136) = &type metadata for String;
        *(void *)(v340 + 144) = v344;
        *(void *)(v340 + 112) = v356;
        *(void *)(v340 + 120) = v358;
        uint64_t v359 = static os_log_type_t.default.getter();
        id v360 = v556;
        sub_100BAC898((uint64_t)v556, (uint64_t)&_mh_execute_header, v359, (uint64_t)"🚖 mergeDatabaseChanges() found orphaned stroke %{public}@ missing parent %{public}@. Board: %{public}@", 105, 0, v340);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
      }
      uint64_t v361 = v537;
      sub_100522E9C(v502, v537, &qword_1016892B0);
      uint64_t v362 = v546;
      uint64_t v363 = v536;
      sub_100D1E720(v546 + *(int *)(v552 + 24), v536, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
      type metadata accessor for CRLFreehandDrawingShapeItemData(0);
      uint64_t v364 = swift_allocObject();
      sub_100D1D0E4(v363, v364 + *(void *)(*(void *)v364 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
      *(void *)(v364 + qword_10169E700) = 0;
      sub_10051B3EC(v361, v364 + *(void *)(*(void *)v364 + 632), &qword_1016892B0);
      v365 = sub_10068B398(v506, v507, v508, 2);
      v366 = *(void **)&v558[v496];
      v367 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem());
      *(void *)&v367[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
      *(void *)&v367[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
      *(void *)&v367[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
      *(void *)&v367[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v366;
      *(void *)&v367[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v365;
      v368 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
      v569.receiver = v367;
      v569.super_class = v368;
      id v369 = v366;
      swift_retain();
      v370 = [super init];
      sub_101031F00(v370, 0, 1, (uint64_t)v522);

      v371 = *(void (**)(uint64_t))(**(void **)&v370[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                            + 256);
      v372 = v370;
      uint64_t v373 = swift_retain();
      v374 = v561;
      v371(v373);

      swift_release();
      uint64_t v375 = v567;
      sub_100CB4BC8(v567, v374);
      swift_release();

      uint64_t v376 = v565;
      v254 = v516;
      v516(v375, v565);
      uint64_t v377 = v362;
LABEL_111:
      sub_100D1A69C(v377, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
      v254((uint64_t)v553, v376);
LABEL_112:
      v255 = v513;
LABEL_113:
      uint64_t v378 = sub_1005057FC(&qword_10169A220);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v378 - 8) + 8))(v566, v378);
    }
    type metadata accessor for CRLContainerItem(0);
    if (!swift_dynamicCastClass())
    {

      goto LABEL_100;
    }
    if (sub_1006E3E24((uint64_t)v553, v521))
    {

      uint64_t v379 = v565;
      v254 = v516;
      v516((uint64_t)v532, v565);
      sub_100D1A69C(v546, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
      v254((uint64_t)v553, v379);
      (*(void (**)(uint64_t, uint64_t))(v503 + 8))(v566, v504);
      continue;
    }
    break;
  }
  uint64_t v320 = v537;
  sub_100522E9C(v502, v537, &qword_1016892B0);
  uint64_t v321 = v536;
  sub_100D1E720(v546 + *(int *)(v552 + 24), v536, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  type metadata accessor for CRLFreehandDrawingShapeItemData(0);
  uint64_t v322 = swift_allocObject();
  sub_100D1D0E4(v321, v322 + *(void *)(*(void *)v322 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
  *(void *)(v322 + qword_10169E700) = 0;
  sub_10051B3EC(v320, v322 + *(void *)(*(void *)v322 + 632), &qword_1016892B0);
  v323 = sub_10068B398(v506, v507, v508, 2);
  v324 = *(void **)&v558[v496];
  v325 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem());
  *(void *)&v325[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
  *(void *)&v325[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
  *(void *)&v325[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(void *)&v325[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v324;
  *(void *)&v325[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v323;
  v326 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v568.receiver = v325;
  v568.super_class = v326;
  id v327 = v324;
  swift_retain();
  v328 = [super init];
  v329 = *(uint64_t (**)(uint64_t))(**(void **)&v328[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                           + 288);
  uint64_t v330 = swift_retain();
  v331 = (void *)v329(v330);
  swift_release();
  [v331 transform];
  long long v507 = v573;
  long long v508 = v572;
  long long v506 = v574;

  long long v575 = v508;
  long long v576 = v507;
  long long v577 = v506;
  if (!sub_1001ACE20((double *)&v575))
  {
    swift_release();

    goto LABEL_115;
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v332 = swift_allocObject();
  *(_OWORD *)(v332 + 16) = v487;
  *(void *)(v332 + 32) = v328;
  *(void *)&long long v572 = v332;
  specialized Array._endMutation()();
  uint64_t v333 = v572;
  v334 = v328;
  uint64_t v335 = NSNotFound.getter();
  sub_1005057FC((uint64_t *)&unk_101683E00);
  uint64_t v336 = swift_initStackObject();
  *(_OWORD *)(v336 + 16) = v486;
  *(void *)(v336 + 32) = v335;
  *(void *)(v336 + 40) = v333;
  unint64_t v337 = sub_100A45CB0((void *)v336);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_10169DFA0);
  swift_arrayDestroy();
  v338 = v547;
  sub_10084BFA8(v337, (uint64_t)v522);
  v547 = v338;
  if (!v338)
  {
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_115:
    uint64_t v376 = v565;
    v254 = v516;
    v516((uint64_t)v532, v565);
    uint64_t v377 = v546;
    goto LABEL_111;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v406 = v565;
  v407 = (void (*)(void (**)(char *, char *, uint64_t), uint64_t))v516;
  v516((uint64_t)v532, v565);
  sub_100D1A69C(v546, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  v407(v553, v406);
LABEL_134:
  (*v494)(v551, v550);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v503 + 8))(v566, v504);
}

void sub_100D026FC(uint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v28 = a4;
  uint64_t v29 = a3;
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)a1[3];
  uint64_t v7 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v24 - v13;
  id v15 = v6;
  sub_100F8570C(v6);
  uint64_t v30 = a2;
  uint64_t v25 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v16 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  uint64_t v27 = v5;
  uint64_t v17 = v5 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v17, (uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
  uint64_t v18 = v16 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v18, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  sub_100D15428(&qword_101699700, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  uint64_t v26 = v7;
  char v19 = CRStruct_6.hasDelta(from:)();
  sub_100D1A69C((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  sub_100D1A69C((uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  if (v19)
  {
    uint64_t v20 = v31;
    sub_10103405C(v30, (uint64_t)&off_10152A280);
    if (!v20)
    {
      uint64_t v21 = v30;
      uint64_t v22 = *(void *)(v30 + v25);
      sub_100D1E720(v17, (uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
      swift_beginAccess();
      swift_retain();
      CRStruct_6.merge(_:)();
      sub_100D1A69C((uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
      swift_endAccess();
      uint64_t v23 = *(void *)(v27 + 40);
      *(_OWORD *)(v22 + 24) = *(_OWORD *)(v27 + 24);
      *(void *)(v22 + 40) = v23;
      sub_101048A8C();
      swift_release();
      sub_101023724(v21, (uint64_t)&off_10152A280, v28);
    }
  }
}

uint64_t sub_100D02A04(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char *a5, uint64_t a6, unsigned int a7)
{
  uint64_t v8 = v7;
  unsigned int v168 = a7;
  uint64_t v169 = a6;
  uint64_t v178 = a3;
  uint64_t v179 = a5;
  int v175 = a4;
  uint64_t v177 = a2;
  uint64_t v10 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v159 = (char *)v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v13 = *(void *)(v162 - 8);
  __chkstk_darwin(v162, v14);
  uint64_t v161 = (char *)v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v16 - 8, v17);
  v164 = (char *)v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v173 = (uint64_t)v152 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for UUID();
  unint64_t v22 = *(void *)(v182 - 8);
  uint64_t v24 = __chkstk_darwin(v182, v23);
  uint64_t v155 = (char *)v152 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24, v26);
  uint64_t v29 = (char *)v152 - v28;
  uint64_t v31 = __chkstk_darwin(v27, v30);
  uint64_t v181 = (char *)v152 - v32;
  __chkstk_darwin(v31, v33);
  uint64_t v183 = (char *)v152 - v34;
  swift_beginAccess();
  unint64_t v35 = *(void *)(a1 + 24);
  unint64_t v186 = v35;
  if (v35 >> 62)
  {
LABEL_52:
    swift_bridgeObjectRetain_n();
    uint64_t v151 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v174 = v8;
    if (v151) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v174 = v7;
  if (!v36) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  uint64_t v37 = (void (**)(char *, uint64_t))(v22 + 8);
  v163 = (unsigned int (**)(uint64_t, uint64_t, char *))(v22 + 48);
  uint64_t v171 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  v160 = (void (**)(const char *, uint64_t, char *))(v22 + 32);
  v157 = (void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v158 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
  uint64_t v156 = (void (**)(char *, uint64_t))(v13 + 8);
  long long v170 = xmmword_10117DF40;
  long long v154 = xmmword_10117D8C0;
  long long v153 = xmmword_10118E4B0;
  v165 = v29;
  v176 = (void (**)(char *, uint64_t))(v22 + 8);
  while (1)
  {
    unint64_t v22 = v35 >> 62;
    if (v35 >> 62) {
      break;
    }
    if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
LABEL_6:
    if ((v35 & 0xC000000000000001) != 0)
    {
      uint64_t v184 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!v22) {
        goto LABEL_9;
      }
    }
    else
    {
      if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_50;
      }
      uint64_t v184 = *(void *)(v35 + 32);
      swift_retain();
      if (!v22)
      {
LABEL_9:
        uint64_t v13 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_15;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_15:
    if (!v13) {
      goto LABEL_51;
    }
    sub_100F4CA88(0, 1);
    uint64_t v40 = *(void *)(v184 + 16);
    uint64_t v41 = *(void (**)(void))(*(void *)v40 + 256);
    uint64_t v8 = (const char *)(*(void *)v40 + 256);
    uint64_t v42 = swift_retain();
    uint64_t v43 = v181;
    ((void (*)(uint64_t))v41)(v42);
    swift_beginAccess();
    uint64_t v29 = v183;
    sub_100CB4BC8((uint64_t)v183, v43);
    swift_endAccess();
    uint64_t v44 = *v37;
    uint64_t v45 = (char *)v182;
    (*v37)(v29, v182);
    swift_beginAccess();
    uint64_t v46 = v44;
    unint64_t v47 = swift_bridgeObjectRetain();
    uint64_t v48 = sub_1006E1A64(v47);
    ((void (*)(uint64_t))v41)(v48);
    LOBYTE(v44) = sub_1006E3E24((uint64_t)v29, v178);
    uint64_t v49 = ((uint64_t (*)(char *, char *))v46)(v29, v45);
    if (v44)
    {
      if ((v175 & 1) == 0)
      {
        uint64_t v180 = v46;
        if (qword_10166FBD0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v54 = (void *)static OS_os_log.boardItemLifecycle;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v170;
        v172 = v54;
        uint64_t v56 = (uint64_t)v183;
        v41();
        uint64_t v57 = UUID.uuidString.getter();
        uint64_t v59 = v58;
        uint64_t v60 = v56;
        uint64_t v29 = (char *)v182;
        v180((char *)v60, v182);
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v61 = sub_100528BE4();
        *(void *)(inited + 64) = v61;
        *(void *)(inited + 32) = v57;
        uint64_t v8 = (const char *)(inited + 32);
        *(void *)(inited + 40) = v59;
        uint64_t v185 = v40;
        type metadata accessor for CRLBoardItemData();
        swift_retain();
        uint64_t v62 = String.init<A>(describing:)();
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v61;
        *(void *)(inited + 72) = v62;
        *(void *)(inited + 80) = v63;
        uint64_t v64 = *(void *)&v179[v171] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        uint64_t v65 = v64;
        uint64_t v66 = v173;
        sub_100D1E720(v65, v173, type metadata accessor for CRLBoardCRDTData);
        swift_retain();
        sub_1005057FC(&qword_101674550);
        uint64_t v67 = v181;
        CRRegister.wrappedValue.getter();
        sub_100D1A69C(v66, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        uint64_t v68 = UUID.uuidString.getter();
        uint64_t v70 = v69;
        uint64_t v71 = v67;
        uint64_t v37 = v176;
        v180(v71, (uint64_t)v29);
        *(void *)(inited + 136) = &type metadata for String;
        *(void *)(inited + 144) = v61;
        *(void *)(inited + 112) = v68;
        *(void *)(inited + 120) = v70;
        uint64_t v72 = static os_log_type_t.default.getter();
        id v73 = v172;
        sub_100BAC898((uint64_t)v172, (uint64_t)&_mh_execute_header, v72, (uint64_t)"🚖 mergeDatabaseChanges() ignoring %{public}@%{public}@ because it is pending deletion, or is a realTimePeerDeletedItemIds. Board: %{public}@", 143, 0, inited);
        swift_release();
        swift_release();
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
LABEL_31:
        swift_arrayDestroy();

        goto LABEL_32;
      }
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v50 = (uint64_t)v183;
      ((void (*)(uint64_t))v41)(v49);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      v46((char *)v50, (uint64_t)v45);
      uint64_t v29 = v45;
      uint64_t v52 = [v179 getBoardItemForUUID:isa];

      if (v52)
      {
        uint64_t v53 = (char *)v174;
        (*(void (**)(uint64_t, uint64_t, void))((swift_isaMask & *v52) + 0x1E8))(v40, v169, v168);
        uint64_t v29 = v53;
        if (v53)
        {
          swift_release();
          swift_release();

          return swift_bridgeObjectRelease();
        }
        uint64_t v174 = 0;
        if ((v175 & 1) == 0)
        {
          uint64_t v180 = v46;
          if (qword_10166FBD0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v75 = (void *)static OS_os_log.boardItemLifecycle;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v76 = swift_initStackObject();
          *(_OWORD *)(v76 + 16) = v170;
          uint64_t v77 = *(void (**)(void))((swift_isaMask & *v52) + 0x88);
          uint64_t v167 = v75;
          uint64_t v78 = (uint64_t)v183;
          v77();
          uint64_t v79 = UUID.uuidString.getter();
          uint64_t v81 = v80;
          v180((char *)v78, v182);
          *(void *)(v76 + 56) = &type metadata for String;
          unint64_t v82 = sub_100528BE4();
          *(void *)(v76 + 64) = v82;
          *(void *)(v76 + 32) = v79;
          v172 = (char *)(v76 + 32);
          *(void *)(v76 + 40) = v81;
          uint64_t v83 = v52;
          id v166 = v83;
          id v84 = [v83 description];
          uint64_t v8 = (const char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v86 = v85;

          *(void *)(v76 + 96) = &type metadata for String;
          *(void *)(v76 + 104) = v82;
          *(void *)(v76 + 72) = v8;
          *(void *)(v76 + 80) = v86;
          uint64_t v87 = *(void *)&v179[v171] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
          swift_beginAccess();
          uint64_t v88 = v87;
          uint64_t v89 = v173;
          sub_100D1E720(v88, v173, type metadata accessor for CRLBoardCRDTData);
          swift_retain();
          sub_1005057FC(&qword_101674550);
          uint64_t v29 = v181;
          CRRegister.wrappedValue.getter();
          sub_100D1A69C(v89, type metadata accessor for CRLBoardCRDTData);
          swift_release();
          uint64_t v90 = UUID.uuidString.getter();
          uint64_t v92 = v91;
          uint64_t v37 = v176;
          v180(v29, v182);
          *(void *)(v76 + 136) = &type metadata for String;
          *(void *)(v76 + 144) = v82;
          *(void *)(v76 + 112) = v90;
          *(void *)(v76 + 120) = v92;
          uint64_t v93 = static os_log_type_t.default.getter();
          id v73 = v167;
          sub_100BAC898((uint64_t)v167, (uint64_t)&_mh_execute_header, v93, (uint64_t)"🚖 mergeDatabaseChanges() modified %{public}@%{public}@. Board: %{public}@", 76, 0, v76);
          swift_release();

          swift_release();
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          goto LABEL_31;
        }
        swift_release();

        swift_release();
        uint64_t v37 = v176;
      }
      else
      {
        uint64_t v74 = (uint64_t)v164;
        (*(void (**)(void))(*(void *)v40 + 264))();
        if ((*v163)(v74, 1, v29) == 1)
        {
          swift_release();
          swift_release();
          sub_100522F00(v74, (uint64_t *)&unk_101674520);
          uint64_t v37 = v176;
        }
        else
        {
          (*v160)(v165, v74, v29);
          Class v94 = UUID._bridgeToObjectiveC()().super.isa;
          uint64_t v95 = v179;
          uint64_t v96 = (char *)[v179 getContainerItemForUUID:v94];

          uint64_t v29 = (char *)v174;
          v172 = v96;
          if (v96)
          {
            uint64_t v167 = sub_1009F3230(v40, *(void **)&v95[v158]);
            uint64_t v97 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
            type metadata accessor for CRLContainerItemData(0);
            uint64_t v98 = *(void *)swift_dynamicCastClassUnconditional();
            uint64_t v99 = (uint64_t)v159;
            (*(void (**)(void))(v98 + 680))();
            uint64_t v100 = v161;
            uint64_t v101 = v162;
            (*v157)(v161, v99, v162);
            sub_100D1A69C(v99, type metadata accessor for CRLContainerItemCRDTData);
            uint64_t v8 = v165;
            if ((v175 & 1) == 0)
            {
              uint64_t v180 = v46;
              if (qword_10166FBD0 != -1) {
                swift_once();
              }
              swift_beginAccess();
              uint64_t v102 = (void *)static OS_os_log.boardItemLifecycle;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t v103 = swift_initStackObject();
              *(_OWORD *)(v103 + 16) = v153;
              id v104 = v172;
              uint64_t v105 = *(void (**)(uint64_t))(**(void **)&v172[v97] + 256);
              id v166 = v102;
              id v106 = v104;
              uint64_t v107 = swift_retain();
              uint64_t v108 = (uint64_t)v183;
              v105(v107);

              swift_release();
              uint64_t v109 = UUID.uuidString.getter();
              uint64_t v111 = v110;
              uint64_t v112 = v182;
              v180((char *)v108, v182);
              *(void *)(v103 + 56) = &type metadata for String;
              unint64_t v113 = sub_100528BE4();
              *(void *)(v103 + 64) = v113;
              *(void *)(v103 + 32) = v109;
              v152[1] = v103 + 32;
              *(void *)(v103 + 40) = v111;
              id v114 = v106;
              id v115 = [v114 description];
              uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v118 = v117;

              *(void *)(v103 + 96) = &type metadata for String;
              *(void *)(v103 + 104) = v113;
              *(void *)(v103 + 72) = v116;
              *(void *)(v103 + 80) = v118;
              unint64_t v119 = v167;
              uint64_t v120 = v181;
              (*(void (**)(void))((swift_isaMask & *v167) + 0x88))();
              uint64_t v121 = UUID.uuidString.getter();
              uint64_t v123 = v122;
              uint64_t v124 = v112;
              uint64_t v125 = v180;
              v180(v120, v124);
              *(void *)(v103 + 136) = &type metadata for String;
              *(void *)(v103 + 144) = v113;
              *(void *)(v103 + 112) = v121;
              *(void *)(v103 + 120) = v123;
              id v126 = v119;
              id v127 = [v126 description];
              uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v130 = v129;

              *(void *)(v103 + 176) = &type metadata for String;
              *(void *)(v103 + 184) = v113;
              *(void *)(v103 + 152) = v128;
              *(void *)(v103 + 160) = v130;
              uint64_t v46 = v125;
              uint64_t v131 = *(void *)&v179[v171] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
              swift_beginAccess();
              uint64_t v132 = v131;
              uint64_t v133 = v173;
              sub_100D1E720(v132, v173, type metadata accessor for CRLBoardCRDTData);
              swift_retain();
              sub_1005057FC(&qword_101674550);
              uint64_t v134 = v155;
              CRRegister.wrappedValue.getter();
              sub_100D1A69C(v133, type metadata accessor for CRLBoardCRDTData);
              swift_release();
              uint64_t v135 = UUID.uuidString.getter();
              uint64_t v137 = v136;
              v125(v134, v182);
              *(void *)(v103 + 216) = &type metadata for String;
              *(void *)(v103 + 224) = v113;
              *(void *)(v103 + 192) = v135;
              *(void *)(v103 + 200) = v137;
              uint64_t v138 = static os_log_type_t.default.getter();
              id v139 = v166;
              sub_100BAC898((uint64_t)v166, (uint64_t)&_mh_execute_header, v138, (uint64_t)"🚖 🟢 mergeDatabaseChanges() parent %{public}@%{public}@ created %{public}@%{public}@. Board: %{public}@", 108, 0, v103);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              uint64_t v29 = (char *)v174;
              uint64_t v100 = v161;
              uint64_t v101 = v162;
              uint64_t v8 = v165;
            }
            uint64_t v140 = CROrderedSet.index(where:)();
            uint64_t v142 = v167;
            sub_10084BE7C(v167, v140, v141 & 1, v169);
            if (v29)
            {

              swift_release();
              swift_release();
              (*v156)(v100, v101);
              v46((char *)v8, v182);
              return swift_bridgeObjectRelease();
            }
            uint64_t v174 = 0;

            swift_release();
            swift_release();
            (*v156)(v100, v101);
            uint64_t v37 = v176;
            v46((char *)v8, v182);
          }
          else
          {
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v143 = swift_initStackObject();
            *(_OWORD *)(v143 + 16) = v154;
            uint64_t v144 = (uint64_t)v183;
            v41();
            uint64_t v145 = UUID.uuidString.getter();
            uint64_t v147 = v146;
            uint64_t v37 = v176;
            v46((char *)v144, v182);
            *(void *)(v143 + 56) = &type metadata for String;
            unint64_t v148 = sub_100528BE4();
            *(void *)(v143 + 64) = v148;
            *(void *)(v143 + 32) = v145;
            *(void *)(v143 + 40) = v147;
            uint64_t v29 = (char *)v165;
            uint64_t v149 = UUID.uuidString.getter();
            *(void *)(v143 + 96) = &type metadata for String;
            *(void *)(v143 + 104) = v148;
            *(void *)(v143 + 72) = v149;
            *(void *)(v143 + 80) = v150;
            uint64_t v8 = "mergeDatabaseChanges(_:transaction:squelchLogs:undoable:)";
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"mergeDatabaseChanges(_:transaction:squelchLogs:undoable:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 339, (uint64_t)"Unable to create item %@ because expected parent %@ does not exist.", 67, 2u, v143);
            sub_1005598CC(v143, (uint64_t)"mergeDatabaseChanges(_:transaction:squelchLogs:undoable:)", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 339);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            v46(v29, v182);
          }
        }
      }
    }
LABEL_32:
    unint64_t v35 = v186;
    if (v186 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v13) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v13) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v38)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_49;
    }
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100D03D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(void *)a2 + 256))(v6);
  LOBYTE(a2) = static UUID.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  return a2 & 1;
}

uint64_t sub_100D03E8C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v62 = a3;
  unint64_t v56 = a2;
  uint64_t v55 = a1;
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v57 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v63 = (uint64_t)&v53 - v9;
  uint64_t v10 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for UUID();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v14);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v17 - 8, v18);
  unint64_t v61 = (uint64_t *)((char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v53 - v22;
  uint64_t v24 = v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  uint64_t v60 = v24;
  sub_100522E9C(v24, (uint64_t)v23, (uint64_t *)&unk_10169A1A0);
  uint64_t v25 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v58 = *(void *)(v25 - 8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t))(v58 + 48);
  uint64_t v59 = v25;
  if (v26(v23, 1) != 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enterRealTimeSyncSession(globallyScopedOwnerName:localParticipantUUID:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 460, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enterRealTimeSyncSession(globallyScopedOwnerName:localParticipantUUID:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 460);
  }
  sub_100522F00((uint64_t)v23, (uint64_t *)&unk_10169A1A0);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v27 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v54 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v29 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v53 = type metadata accessor for CRLBoardCRDTData;
  sub_100D1E720(v29, (uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
  id v30 = v27;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  uint64_t v31 = v3;
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v32 = UUID.uuidString.getter();
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v16, v65);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v32;
  *(void *)(inited + 40) = v34;
  uint64_t v35 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v35, (uint64_t)"CRLBoard: Entering real time collaboration session for board %{public}@", 71, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v36 = *(void *)(v31 + v54) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v36, (uint64_t)v13, v53);
  swift_retain();
  uint64_t v37 = v31;
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  unint64_t v38 = v56;
  swift_bridgeObjectRetain();
  uint64_t v39 = v63;
  sub_100753370((uint64_t)v16, v55, v38, v63);
  uint64_t v40 = v57;
  sub_100D1E720(v39, v57, type metadata accessor for CRLBoardIdentifier);
  uint64_t v41 = *(char **)(v31 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v42 = *(void (**)(uint64_t))(**(void **)&v41[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v43 = v41;
  uint64_t v44 = swift_retain();
  v42(v44);

  swift_release();
  type metadata accessor for CRLBoardChangeSet(0);
  swift_allocObject();
  uint64_t v45 = sub_1006A9C50(v40, (uint64_t)v16, 1);
  uint64_t v66 = *(void *)(v45 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_uncommittedChangeAvailablePublisher);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1005057FC(&qword_10167AAC0);
  sub_100523288(&qword_10169A020, &qword_10167AAC0);
  uint64_t v46 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(v31 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable) = v46;
  swift_release();
  uint64_t v47 = v59;
  uint64_t v48 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))((char *)v61 + *(int *)(v59 + 20), v62, v65);
  *uint64_t v48 = v45;
  uint64_t v49 = *(int *)(v47 + 24);
  type metadata accessor for CRLCollaborationParticipantCollection(0);
  swift_allocObject();
  swift_retain();
  *(uint64_t *)((char *)v48 + v49) = sub_10070A9D8();
  Date.init()();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v58 + 56))(v48, 0, 1, v47);
  uint64_t v50 = v60;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v48, v50, (uint64_t *)&unk_10169A1A0);
  swift_endAccess();
  id v51 = [self defaultCenter];
  if (qword_10166FE60 != -1) {
    swift_once();
  }
  [v51 postNotificationName:qword_10171C3C0 object:v37];
  swift_release();

  return sub_100D1A69C(v39, type metadata accessor for CRLBoardIdentifier);
}

void sub_100D04768(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1005057FC(&qword_10169A028);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v21 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = (char *)Strong;
    v30[1] = *(void *)(Strong + *a3);
    uint64_t v24 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v25 = *(void *)(Strong + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
        + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v25, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100D1A69C((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v26 = (uint64_t *)(*(void *)&v23[v24] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v16, v27, v28, (uint64_t)v20);
    uint64_t v29 = *(int *)(v5 + 48);
    sub_100D1D0E4((uint64_t)v20, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    v8[v29] = v21;
    PassthroughSubject.send(_:)();
    sub_100522F00((uint64_t)v8, &qword_10169A028);
  }
}

uint64_t sub_100D04B30()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v5);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (id *)((char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  uint64_t v48 = v21;
  sub_100522E9C(v21, (uint64_t)v15, (uint64_t *)&unk_10169A1A0);
  uint64_t v47 = v17;
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v49 = v16;
  if (v22(v15, 1, v16) == 1) {
    return sub_100522F00((uint64_t)v15, (uint64_t *)&unk_10169A1A0);
  }
  uint64_t v46 = v12;
  uint64_t v50 = v20;
  sub_100D1D0E4((uint64_t)v15, (uint64_t)v20, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v24 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v26 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v26, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  id v27 = v24;
  uint64_t v28 = v0;
  id v29 = v27;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v30 = UUID.uuidString.getter();
  uint64_t v32 = v31;
  (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v52);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v30;
  *(void *)(inited + 40) = v32;
  uint64_t v33 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v33, (uint64_t)"CRLBoard: Exiting real time collaboration session for board %{public}@", 70, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v34 = OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable;
  if (*(void *)(v28 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  uint64_t v35 = v50;
  *(void *)(v28 + v34) = 0;
  swift_release();
  uint64_t v36 = (char *)*v35;
  uint64_t v37 = (void *)static OS_os_log.realTimeSync;
  swift_retain();
  id v38 = v37;
  uint64_t v39 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v39, (uint64_t)"CRLBoardChangeSet clearChanges()", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v40 = *(NSObject **)&v36[OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue];
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v36;
  *(void *)(v41 + 24) = 0;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_100D1E7A0;
  *(void *)(v42 + 24) = v41;
  aBlock[4] = sub_100659320;
  aBlock[5] = v42;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1006D9628;
  aBlock[3] = &unk_10152A628;
  uint64_t v43 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v40, v43);
  _Block_release(v43);
  LOBYTE(v43) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  if (v43)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v44 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v46, 1, 1, v49);
  uint64_t v45 = v48;
  swift_beginAccess();
  sub_1006063BC(v44, v45, (uint64_t *)&unk_10169A1A0);
  swift_endAccess();
  uint64_t v36 = (char *)[self defaultCenter];
  if (qword_10166FE60 != -1) {
LABEL_11:
  }
    swift_once();
  [v36 postNotificationName:qword_10171C3C0 object:v28];

  return sub_100D1A69C((uint64_t)v50, type metadata accessor for CRLBoard.RealTimeSessionInfo);
}

void sub_100D052A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = type metadata accessor for CRLBoardScenesCRDTData(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v14 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  id v15 = v13;
  uint64_t v16 = v14;
  sub_10103405C((uint64_t)v15, (uint64_t)&off_101518040);
  if (v4)
  {
  }
  else
  {
    id v27 = v12;
    uint64_t v17 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    uint64_t v18 = *(double **)&v16[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    if (!v18)
    {
      sub_100846AB0();
      uint64_t v18 = *(double **)&v16[v17];
    }
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    sub_10084D2E4((unint64_t)v19, a2, a3);
    swift_bridgeObjectRelease();
    sub_101023724((uint64_t)v15, (uint64_t)&off_101518040, 2u);

    uint64_t v20 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
    uint64_t v21 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v22 = type metadata accessor for CRLBoardCRDTData(0);
    uint64_t v23 = (uint64_t)v27;
    sub_100D1E720(v21 + *(int *)(v22 + 36), (uint64_t)v27, type metadata accessor for CRLBoardScenesCRDTData);
    uint64_t v24 = v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v25 = v24 + *(int *)(v22 + 36);
    swift_retain();
    sub_100D1E260(v23, v25);
    swift_endAccess();
    swift_release();
  }
}

char *sub_100D05560()
{
  uint64_t v1 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
  uint64_t v36 = v0;
  long long v37 = *(_OWORD *)(v13 + 24);
  uint64_t v14 = *(void *)(v13 + 40);
  uint64_t v15 = v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v15, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
  uint64_t v16 = v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName;
  uint64_t v17 = *(void *)(v13 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v38 = *(void *)(v16 + 8);
  uint64_t v18 = v38;
  type metadata accessor for CRLBoardData(0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 7;
  *(_OWORD *)(v19 + 24) = v37;
  *(void *)(v19 + 40) = v14;
  sub_100D1D0E4((uint64_t)v12, v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
  uint64_t v20 = (void *)(v19 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  *uint64_t v20 = v17;
  v20[1] = v18;
  type metadata accessor for CRLContainerItemData(0);
  uint64_t v21 = swift_dynamicCastClassUnconditional();
  uint64_t v22 = v21 + *(void *)(*(void *)v21 + 632);
  swift_beginAccess();
  sub_100522E9C(v22, (uint64_t)v8, (uint64_t *)&unk_101683E10);
  uint64_t v23 = *(void *)swift_dynamicCastClassUnconditional();
  (*(void (**)(void))(v23 + 680))();
  uint64_t v24 = swift_allocObject();
  sub_100D1D0E4((uint64_t)v4, v24 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
  sub_10051B3EC((uint64_t)v8, v24 + *(void *)(*(void *)v24 + 632), (uint64_t *)&unk_101683E10);
  *(void *)&long long v37 = sub_10068B398(0x1000000000000, 0x2000400000000, 0x1000000000000, 4);
  uint64_t v25 = v36;
  uint64_t v26 = swift_dynamicCastClassUnconditional();
  uint64_t v27 = v26 + *(void *)(*(void *)v26 + 632);
  swift_beginAccess();
  sub_100522E9C(v27, (uint64_t)v8, (uint64_t *)&unk_101683E10);
  uint64_t v28 = *(void *)swift_dynamicCastClassUnconditional();
  (*(void (**)(void))(v28 + 680))();
  uint64_t v29 = swift_allocObject();
  sub_100D1D0E4((uint64_t)v4, v29 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
  sub_10051B3EC((uint64_t)v8, v29 + *(void *)(*(void *)v29 + 632), (uint64_t *)&unk_101683E10);
  uint64_t v30 = sub_10068B398(0x1000000000000, 0x2000400000000, 0x1000000000000, 4);
  uint64_t v31 = *(void **)(v25 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  LODWORD(v29) = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported);
  objc_allocWithZone((Class)type metadata accessor for CRLBoard(0));
  swift_bridgeObjectRetain();
  id v32 = v31;
  uint64_t v33 = sub_100D1ABB4(v32, v19, v37, (uint64_t)v30, 0, v29);

  swift_release();
  swift_release();
  swift_release();
  return v33;
}

uint64_t sub_100D05A78(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v68 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)sub_1005057FC((uint64_t *)&unk_10169A110);
  uint64_t v65 = (char *)*((void *)v7 - 1);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v64, v11);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v61 - v16;
  uint64_t v18 = sub_1005057FC(&qword_10169A108);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLBoard(0);
  uint64_t v71 = a1;
  uint64_t v22 = swift_dynamicCastClass();
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v67 = v2;
    uint64_t v66 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v24, (uint64_t)v17, type metadata accessor for CRLBoardCRDTData);
    uint64_t v25 = *(void *)(v23 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v25, (uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    sub_100D15428(&qword_101699700, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
    swift_unknownObjectRetain();
    CRStruct_6.actionUndoingDifference(from:)();
    sub_100D1A69C((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    uint64_t v64 = (uint64_t)v17;
    sub_100D1A69C((uint64_t)v17, type metadata accessor for CRLBoardCRDTData);
    if ((*((unsigned int (**)(char *, uint64_t, int *))v65 + 6))(v21, 1, v7) == 1)
    {
      sub_100522F00((uint64_t)v21, &qword_10169A108);
      uint64_t v26 = _swiftEmptyDictionarySingleton;
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_100956360(2);
      char v29 = v28;
      swift_bridgeObjectRelease();
      if (v29)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v73[0] = _swiftEmptyDictionarySingleton;
        uint64_t v32 = v69;
        uint64_t v31 = v70;
        uint64_t v33 = v68;
        uint64_t v34 = v64;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10097BF7C();
          uint64_t v26 = *(void **)&v73[0];
        }
        sub_100575CE8((_OWORD *)(v26[7] + 32 * v27), &v74);
        sub_100587A98(v27, (uint64_t)v26);
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v74 = 0u;
        long long v75 = 0u;
        uint64_t v32 = v69;
        uint64_t v31 = v70;
        uint64_t v33 = v68;
        uint64_t v34 = v64;
      }
      uint64_t v54 = v66;
      sub_100522F00((uint64_t)&v74, &qword_101672BF0);
    }
    else
    {
      uint64_t v35 = v7[12];
      uint64_t v36 = (uint64_t)&v21[v35];
      uint64_t v37 = v7[16];
      uint64_t v38 = (uint64_t)&v21[v37];
      uint64_t v39 = v7[20];
      unint64_t v61 = &v21[v39];
      uint64_t v40 = v7[24];
      uint64_t v62 = &v21[v40];
      uint64_t v41 = v7[28];
      uint64_t v63 = &v21[v41];
      uint64_t v42 = (uint64_t)&v10[v35];
      uint64_t v65 = &v10[v35];
      uint64_t v43 = (uint64_t)&v10[v37];
      uint64_t v44 = (uint64_t)&v10[v39];
      uint64_t v45 = (uint64_t)&v10[v40];
      uint64_t v46 = (uint64_t)&v10[v41];
      sub_10051B3EC((uint64_t)v21, (uint64_t)v10, &qword_101679B78);
      sub_10051B3EC(v36, v42, (uint64_t *)&unk_10169A120);
      sub_10051B3EC(v38, v43, &qword_101679B88);
      sub_10051B3EC((uint64_t)v61, v44, &qword_10169A130);
      sub_10051B3EC((uint64_t)v62, v45, &qword_10169A138);
      sub_10051B3EC((uint64_t)v63, v46, (uint64_t *)&unk_10169A140);
      *((void *)&v75 + 1) = v7;
      uint64_t v47 = sub_1005767BC((uint64_t *)&v74);
      uint64_t v48 = (uint64_t)v47 + v7[12];
      uint64_t v49 = (uint64_t)v47 + v7[16];
      uint64_t v50 = (uint64_t)v47 + v7[20];
      uint64_t v51 = (uint64_t)v47 + v7[24];
      uint64_t v52 = (uint64_t)v47 + v7[28];
      sub_10051B3EC((uint64_t)v10, (uint64_t)v47, &qword_101679B78);
      sub_10051B3EC((uint64_t)v65, v48, (uint64_t *)&unk_10169A120);
      sub_10051B3EC(v43, v49, &qword_101679B88);
      sub_10051B3EC(v44, v50, &qword_10169A130);
      sub_10051B3EC(v45, v51, &qword_10169A138);
      sub_10051B3EC(v46, v52, (uint64_t *)&unk_10169A140);
      sub_100575CE8(&v74, v73);
      char v53 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v72 = _swiftEmptyDictionarySingleton;
      sub_1009720A8(v73, 2, v53);
      uint64_t v26 = v72;
      swift_bridgeObjectRelease();
      uint64_t v32 = v69;
      uint64_t v31 = v70;
      uint64_t v33 = v68;
      uint64_t v34 = v64;
      uint64_t v54 = v66;
    }
    uint64_t v55 = *(void *)(v67 + v54) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v55, v34, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100D1A69C(v34, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    unint64_t v56 = sub_100ED26C8((uint64_t)v26);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    type metadata accessor for CRLTransactableUndoingMutations(0);
    uint64_t v57 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v57 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id, v33, v31);
    *(void *)(v57 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values) = v56;
    return v57;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 538, (uint64_t)"Tried to undo from mismatched type", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 538);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v59, v60);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100D06294()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v156 = *(void *)(v1 - 8);
  uint64_t v157 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v155 = (char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_1005057FC(&qword_10169A150);
  uint64_t v162 = *(void *)(v164 - 8);
  __chkstk_darwin(v164, v4);
  uint64_t v150 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  unint64_t v148 = (char *)&v141 - v8;
  __chkstk_darwin(v9, v10);
  uint64_t v149 = (char *)&v141 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v147 = (char *)&v141 - v14;
  __chkstk_darwin(v15, v16);
  uint64_t v146 = (uint64_t)&v141 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v163 = (uint64_t)&v141 - v20;
  uint64_t v161 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v161, v21);
  uint64_t v23 = (char *)&v141 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  unint64_t v27 = (char *)&v141 - v26;
  uint64_t v28 = sub_1005057FC((uint64_t *)&unk_10169A158);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v31 = (char *)&v141 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)&v141 - v34;
  type metadata accessor for CRLBoard(0);
  uint64_t v36 = swift_dynamicCastClass();
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v154 = v0;
    uint64_t v151 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v38 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v38, (uint64_t)v27, type metadata accessor for CRLBoardCRDTData);
    uint64_t v153 = v37;
    uint64_t v39 = *(void *)(v37 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v39, (uint64_t)v23, type metadata accessor for CRLBoardCRDTData);
    sub_100D15428((unint64_t *)&unk_10169A0E0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
    swift_unknownObjectRetain();
    CRType.observableDifference(from:)();
    sub_100D1A69C((uint64_t)v23, type metadata accessor for CRLBoardCRDTData);
    sub_100D1A69C((uint64_t)v27, type metadata accessor for CRLBoardCRDTData);
    sub_100522E9C((uint64_t)v35, (uint64_t)v31, (uint64_t *)&unk_10169A158);
    uint64_t v40 = (int *)v164;
    int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v162 + 48))(v31, 1, v164);
    uint64_t v42 = (uint64_t)v27;
    uint64_t v152 = v35;
    if (v41 == 1)
    {
      sub_100522F00((uint64_t)v31, (uint64_t *)&unk_10169A158);
      uint64_t v43 = _swiftEmptyArrayStorage;
      uint64_t v45 = v156;
      uint64_t v44 = v157;
      uint64_t v47 = v154;
      uint64_t v46 = v155;
      uint64_t v48 = v153;
      if (!*(void *)&_swiftEmptyArrayStorage[2]) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v49 = v40;
      uint64_t v145 = v27;
      uint64_t v50 = v40[12];
      uint64_t v51 = v163;
      uint64_t v52 = v163 + v50;
      uint64_t v53 = v40[16];
      uint64_t v54 = v163 + v53;
      uint64_t v55 = v40[20];
      uint64_t v56 = v163 + v55;
      uint64_t v160 = v163 + v53;
      uint64_t v161 = v163 + v55;
      uint64_t v57 = v40[24];
      uint64_t v58 = v163 + v57;
      uint64_t v59 = v40[28];
      uint64_t v162 = v163 + v59;
      uint64_t v60 = (uint64_t)&v31[v50];
      uint64_t v61 = (uint64_t)&v31[v53];
      uint64_t v62 = v49;
      uint64_t v63 = (uint64_t)&v31[v55];
      uint64_t v144 = &v31[v57];
      uint64_t v158 = &v31[v59];
      sub_10051B3EC((uint64_t)v31, v163, &qword_10167D310);
      sub_10051B3EC(v60, v52, &qword_10169A168);
      sub_10051B3EC(v61, v54, &qword_10167D310);
      sub_10051B3EC(v63, v56, &qword_10169A170);
      uint64_t v64 = v58;
      sub_10051B3EC((uint64_t)v144, v58, &qword_10169A178);
      uint64_t v65 = v162;
      sub_10051B3EC((uint64_t)v158, v162, &qword_10169A180);
      uint64_t v66 = v146 + v62[12];
      uint64_t v67 = v146 + v62[16];
      uint64_t v68 = v146 + v62[20];
      uint64_t v69 = v146 + v62[24];
      uint64_t v70 = v146 + v62[28];
      uint64_t v71 = v51;
      uint64_t v72 = v146;
      sub_100522E9C(v71, v146, &qword_10167D310);
      uint64_t v158 = (char *)v52;
      sub_100522E9C(v52, v66, &qword_10169A168);
      uint64_t v142 = v67;
      sub_100522E9C(v160, v67, &qword_10167D310);
      sub_100522E9C(v161, v68, &qword_10169A170);
      uint64_t v159 = v64;
      sub_100522E9C(v64, v69, &qword_10169A178);
      sub_100522E9C(v65, v70, &qword_10169A180);
      uint64_t v73 = type metadata accessor for CRValueObservableDifference();
      uint64_t v74 = *(void *)(v73 - 8);
      long long v75 = *(char **)(v74 + 48);
      uint64_t v76 = v74 + 48;
      unsigned int v77 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v75)(v72, 1, v73);
      uint64_t v144 = v75;
      uint64_t v143 = v76;
      if (v77 == 1)
      {
        sub_100522F00(v70, &qword_10169A180);
        sub_100522F00(v69, &qword_10169A178);
        sub_100522F00(v68, &qword_10169A170);
        sub_100522F00(v142, &qword_10167D310);
        sub_100522F00(v66, &qword_10169A168);
        sub_100522F00(v72, &qword_10167D310);
        uint64_t v43 = _swiftEmptyArrayStorage;
        uint64_t v78 = (int *)v164;
        uint64_t v79 = v159;
        uint64_t v80 = (uint64_t)v147;
      }
      else
      {
        sub_100522F00(v72, &qword_10167D310);
        sub_100522F00(v70, &qword_10169A180);
        sub_100522F00(v69, &qword_10169A178);
        sub_100522F00(v68, &qword_10169A170);
        sub_100522F00(v142, &qword_10167D310);
        sub_100522F00(v66, &qword_10169A168);
        uint64_t v43 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v82 = *((void *)v43 + 2);
        unint64_t v81 = *((void *)v43 + 3);
        uint64_t v80 = (uint64_t)v147;
        if (v82 >= v81 >> 1) {
          uint64_t v43 = sub_100F61B70((double *)(v81 > 1), v82 + 1, 1, v43);
        }
        uint64_t v78 = (int *)v164;
        uint64_t v79 = v159;
        *((void *)v43 + 2) = v82 + 1;
        uint64_t v83 = &v43[2 * v82];
        *((void *)v83 + 4) = 25705;
        v83[5] = -1.15172193e164;
      }
      uint64_t v84 = v80 + v78[12];
      uint64_t v85 = v80 + v78[16];
      uint64_t v86 = v80 + v78[20];
      uint64_t v87 = v80 + v78[24];
      uint64_t v88 = v80 + v78[28];
      sub_100522E9C(v163, v80, &qword_10167D310);
      sub_100522E9C((uint64_t)v158, v84, &qword_10169A168);
      sub_100522E9C(v160, v85, &qword_10167D310);
      sub_100522E9C(v161, v86, &qword_10169A170);
      sub_100522E9C(v79, v87, &qword_10169A178);
      sub_100522E9C(v162, v88, &qword_10169A180);
      uint64_t v89 = sub_1005057FC(&qword_10169A188);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 48))(v84, 1, v89) == 1)
      {
        uint64_t v90 = v73;
        sub_100522F00(v88, &qword_10169A180);
        sub_100522F00(v87, &qword_10169A178);
        sub_100522F00(v86, &qword_10169A170);
        sub_100522F00(v85, &qword_10167D310);
        sub_100522F00(v84, &qword_10169A168);
        sub_100522F00(v80, &qword_10167D310);
        uint64_t v46 = v155;
        uint64_t v91 = (int *)v164;
        uint64_t v92 = (uint64_t)v149;
      }
      else
      {
        sub_100522F00(v84, &qword_10169A168);
        sub_100522F00(v88, &qword_10169A180);
        sub_100522F00(v87, &qword_10169A178);
        sub_100522F00(v86, &qword_10169A170);
        sub_100522F00(v85, &qword_10167D310);
        sub_100522F00(v80, &qword_10167D310);
        uint64_t v90 = v73;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v43 = sub_100F61B70(0, *((void *)v43 + 2) + 1, 1, v43);
        }
        uint64_t v46 = v155;
        uint64_t v91 = (int *)v164;
        unint64_t v94 = *((void *)v43 + 2);
        unint64_t v93 = *((void *)v43 + 3);
        uint64_t v92 = (uint64_t)v149;
        if (v94 >= v93 >> 1)
        {
          uint64_t v137 = sub_100F61B70((double *)(v93 > 1), v94 + 1, 1, v43);
          uint64_t v92 = (uint64_t)v149;
          uint64_t v43 = v137;
        }
        *((void *)v43 + 2) = v94 + 1;
        uint64_t v95 = &v43[2 * v94];
        v95[4] = -2.31584178e77;
        *((void *)v95 + 5) = 0x8000000101283FA0;
      }
      uint64_t v96 = v92 + v91[12];
      uint64_t v97 = v92 + v91[16];
      uint64_t v98 = v92 + v91[20];
      uint64_t v99 = v92 + v91[24];
      uint64_t v100 = v92 + v91[28];
      sub_100522E9C(v163, v92, &qword_10167D310);
      sub_100522E9C((uint64_t)v158, v96, &qword_10169A168);
      sub_100522E9C(v160, v97, &qword_10167D310);
      sub_100522E9C(v161, v98, &qword_10169A170);
      sub_100522E9C(v159, v99, &qword_10169A178);
      sub_100522E9C(v162, v100, &qword_10169A180);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v144)(v97, 1, v90) == 1)
      {
        sub_100522F00(v100, &qword_10169A180);
        sub_100522F00(v99, &qword_10169A178);
        sub_100522F00(v98, &qword_10169A170);
        sub_100522F00(v97, &qword_10167D310);
        sub_100522F00(v96, &qword_10169A168);
        sub_100522F00(v92, &qword_10167D310);
        uint64_t v101 = (int *)v164;
        uint64_t v102 = (uint64_t)v148;
        uint64_t v103 = v159;
      }
      else
      {
        sub_100522F00(v97, &qword_10167D310);
        sub_100522F00(v100, &qword_10169A180);
        sub_100522F00(v99, &qword_10169A178);
        sub_100522F00(v98, &qword_10169A170);
        sub_100522F00(v96, &qword_10169A168);
        sub_100522F00(v92, &qword_10167D310);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v102 = (uint64_t)v148;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v43 = sub_100F61B70(0, *((void *)v43 + 2) + 1, 1, v43);
        }
        uint64_t v101 = (int *)v164;
        uint64_t v103 = v159;
        unint64_t v106 = *((void *)v43 + 2);
        unint64_t v105 = *((void *)v43 + 3);
        if (v106 >= v105 >> 1) {
          uint64_t v43 = sub_100F61B70((double *)(v105 > 1), v106 + 1, 1, v43);
        }
        *((void *)v43 + 2) = v106 + 1;
        uint64_t v107 = &v43[2 * v106];
        *((void *)v107 + 4) = 0x656C746974;
        v107[5] = -3.24180904e178;
      }
      uint64_t v108 = v102 + v101[12];
      uint64_t v109 = v102 + v101[16];
      uint64_t v110 = v102 + v101[20];
      uint64_t v111 = v102 + v101[24];
      uint64_t v112 = v102 + v101[28];
      sub_100522E9C(v163, v102, &qword_10167D310);
      sub_100522E9C((uint64_t)v158, v108, &qword_10169A168);
      sub_100522E9C(v160, v109, &qword_10167D310);
      sub_100522E9C(v161, v110, &qword_10169A170);
      sub_100522E9C(v103, v111, &qword_10169A178);
      sub_100522E9C(v162, v112, &qword_10169A180);
      uint64_t v113 = sub_1005057FC(&qword_10169A190);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48))(v110, 1, v113) == 1)
      {
        sub_100522F00(v112, &qword_10169A180);
        sub_100522F00(v111, &qword_10169A178);
        sub_100522F00(v110, &qword_10169A170);
        sub_100522F00(v109, &qword_10167D310);
        sub_100522F00(v108, &qword_10169A168);
        sub_100522F00(v102, &qword_10167D310);
        uint64_t v114 = (uint64_t)v150;
        id v115 = (int *)v164;
      }
      else
      {
        sub_100522F00(v110, &qword_10169A170);
        sub_100522F00(v112, &qword_10169A180);
        sub_100522F00(v111, &qword_10169A178);
        sub_100522F00(v109, &qword_10167D310);
        sub_100522F00(v108, &qword_10169A168);
        sub_100522F00(v102, &qword_10167D310);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v43 = sub_100F61B70(0, *((void *)v43 + 2) + 1, 1, v43);
        }
        id v115 = (int *)v164;
        unint64_t v117 = *((void *)v43 + 2);
        unint64_t v116 = *((void *)v43 + 3);
        uint64_t v114 = (uint64_t)v150;
        if (v117 >= v116 >> 1)
        {
          uint64_t v138 = sub_100F61B70((double *)(v116 > 1), v117 + 1, 1, v43);
          uint64_t v114 = (uint64_t)v150;
          uint64_t v43 = v138;
        }
        *((void *)v43 + 2) = v117 + 1;
        uint64_t v118 = &v43[2 * v117];
        v118[4] = 2.22866467e252;
        v118[5] = -3.30793415e228;
      }
      uint64_t v119 = v114 + v115[12];
      uint64_t v120 = v114 + v115[16];
      uint64_t v121 = v114 + v115[20];
      uint64_t v122 = v114 + v115[24];
      uint64_t v123 = v114 + v115[28];
      uint64_t v124 = v163;
      sub_100522E9C(v163, v114, &qword_10167D310);
      sub_100522E9C((uint64_t)v158, v119, &qword_10169A168);
      sub_100522E9C(v160, v120, &qword_10167D310);
      sub_100522E9C(v161, v121, &qword_10169A170);
      sub_100522E9C(v159, v122, &qword_10169A178);
      sub_100522E9C(v162, v123, &qword_10169A180);
      uint64_t v125 = sub_1005057FC(&qword_10169A198);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 48))(v123, 1, v125) == 1)
      {
        sub_100522F00(v124, &qword_10169A150);
        sub_100522F00(v123, &qword_10169A180);
        sub_100522F00(v122, &qword_10169A178);
        sub_100522F00(v121, &qword_10169A170);
        sub_100522F00(v120, &qword_10167D310);
        sub_100522F00(v119, &qword_10169A168);
        sub_100522F00(v114, &qword_10167D310);
        uint64_t v45 = v156;
        uint64_t v44 = v157;
        uint64_t v48 = v153;
        uint64_t v47 = v154;
        uint64_t v42 = (uint64_t)v145;
        if (!*((void *)v43 + 2))
        {
LABEL_39:
          swift_bridgeObjectRelease();
          id v127 = _swiftEmptyDictionarySingleton;
          goto LABEL_40;
        }
      }
      else
      {
        sub_100522F00(v123, &qword_10169A180);
        sub_100522F00(v122, &qword_10169A178);
        sub_100522F00(v121, &qword_10169A170);
        sub_100522F00(v120, &qword_10167D310);
        sub_100522F00(v119, &qword_10169A168);
        sub_100522F00(v114, &qword_10167D310);
        char v128 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v48 = v153;
        if ((v128 & 1) == 0) {
          uint64_t v43 = sub_100F61B70(0, *((void *)v43 + 2) + 1, 1, v43);
        }
        uint64_t v45 = v156;
        uint64_t v44 = v157;
        uint64_t v129 = v163;
        uint64_t v42 = (uint64_t)v145;
        uint64_t v47 = v154;
        unint64_t v131 = *((void *)v43 + 2);
        unint64_t v130 = *((void *)v43 + 3);
        if (v131 >= v130 >> 1) {
          uint64_t v43 = sub_100F61B70((double *)(v130 > 1), v131 + 1, 1, v43);
        }
        *((void *)v43 + 2) = v131 + 1;
        uint64_t v132 = &v43[2 * v131];
        *((void *)v132 + 4) = 0x73656E656373;
        v132[5] = -2.12455197e183;
        sub_100522F00(v129, &qword_10169A150);
        if (!*((void *)v43 + 2)) {
          goto LABEL_39;
        }
      }
    }
    char v126 = swift_isUniquelyReferenced_nonNull_native();
    v165 = _swiftEmptyDictionarySingleton;
    sub_100972448((uint64_t)v43, 2, v126);
    id v127 = v165;
    swift_bridgeObjectRelease();
LABEL_40:
    uint64_t v133 = *(void *)(v47 + v151) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v133, v42, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100D1A69C(v42, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    sub_100522F00((uint64_t)v152, (uint64_t *)&unk_10169A158);
    type metadata accessor for CRLTransactableObservableDeltas(0);
    uint64_t v134 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v134 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_id, v46, v44);
    *(void *)(v134 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_invalidationKeys) = v127;
    uint64_t v135 = (uint64_t *)(v134 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_snapshot);
    uint64_t *v135 = v48;
    v135[1] = (uint64_t)&off_10152A280;
    return v134;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createObservableDeltas(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 549, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createObservableDeltas(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 549);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v139, v140);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100D07604(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v82 = a2;
  uint64_t v5 = sub_1005057FC(&qword_10169A108);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v70 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v73 = (char *)&v61 - v10;
  uint64_t v74 = sub_1005057FC((uint64_t *)&unk_10169A110);
  uint64_t v72 = *(void *)(v74 - 8);
  __chkstk_darwin(v74, v11);
  uint64_t v71 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v69, v13);
  uint64_t v15 = (uint64_t)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v23 = __chkstk_darwin(v21, v22);
  uint64_t v25 = (char *)&v61 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))((char *)&v61 - v24, a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_id, v16, v23);
  uint64_t v68 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v26 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v26, v15, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v15, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  LOBYTE(v15) = static UUID.== infix(_:_:)();
  unint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v27(v20, v16);
  v27(v25, v16);
  if ((v15 & 1) == 0)
  {
    sub_100895BA8();
    swift_allocError();
    *uint64_t v36 = 3;
    return swift_willThrow();
  }
  uint64_t v28 = v75;
  uint64_t result = sub_10103405C(v3, (uint64_t)&off_10152A280);
  if (!v28)
  {
    uint64_t v30 = v3;
    uint64_t v31 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess();
    uint64_t v32 = *v31;
    if (*(void *)(*v31 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v33 = sub_100956360(2);
      uint64_t v34 = (int *)v74;
      if (v35)
      {
        sub_100522E9C(*(void *)(v32 + 56) + 32 * v33, (uint64_t)&v76, &qword_101672BF0);
      }
      else
      {
        uint64_t v76 = 0;
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        uint64_t v79 = 1;
      }
      swift_bridgeObjectRelease();
      if (v79 != 1)
      {
        sub_10051B3EC((uint64_t)&v76, (uint64_t)v80, &qword_101672BF0);
        uint64_t v37 = v73;
        if (v81)
        {
          int v40 = swift_dynamicCast();
          uint64_t v41 = v72;
          uint64_t v42 = *(void (**)(char *, void, uint64_t, int *))(v72 + 56);
          v42(v37, v40 ^ 1u, 1, v34);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v41 + 48))(v37, 1, v34) != 1)
          {
            uint64_t v43 = v34[12];
            uint64_t v44 = v71 + v43;
            uint64_t v45 = v34[16];
            uint64_t v46 = v71 + v45;
            uint64_t v66 = v71 + v45;
            uint64_t v47 = v34[20];
            uint64_t v48 = v71 + v47;
            uint64_t v65 = v71 + v47;
            uint64_t v49 = v34[24];
            uint64_t v72 = v71 + v49;
            uint64_t v50 = v34[28];
            uint64_t v75 = v71 + v50;
            uint64_t v67 = (void (*)(uint64_t, void, uint64_t, int *))v42;
            uint64_t v51 = v34;
            uint64_t v52 = (uint64_t)&v37[v43];
            uint64_t v62 = &v37[v45];
            uint64_t v53 = (uint64_t)v37;
            uint64_t v54 = (uint64_t)&v37[v47];
            uint64_t v63 = v53 + v49;
            uint64_t v64 = v53 + v50;
            sub_10051B3EC(v53, v71, &qword_101679B78);
            sub_10051B3EC(v52, v44, (uint64_t *)&unk_10169A120);
            sub_10051B3EC((uint64_t)v62, v46, &qword_101679B88);
            sub_10051B3EC(v54, v48, &qword_10169A130);
            sub_10051B3EC(v63, v72, &qword_10169A138);
            sub_10051B3EC(v64, v75, (uint64_t *)&unk_10169A140);
            uint64_t v73 = *(char **)(v30 + v68);
            uint64_t v55 = v70;
            uint64_t v56 = v70 + v51[12];
            uint64_t v57 = v30;
            uint64_t v58 = v70 + v51[16];
            uint64_t v59 = v70 + v51[20];
            uint64_t v64 = v70 + v51[24];
            uint64_t v68 = v70 + v51[28];
            sub_100522E9C(v71, v70, &qword_101679B78);
            sub_100522E9C(v44, v56, (uint64_t *)&unk_10169A120);
            uint64_t v60 = v58;
            uint64_t v30 = v57;
            sub_100522E9C(v66, v60, &qword_101679B88);
            sub_100522E9C(v65, v59, &qword_10169A130);
            sub_100522E9C(v72, v64, &qword_10169A138);
            sub_100522E9C(v75, v68, (uint64_t *)&unk_10169A140);
            v67(v55, 0, 1, v51);
            swift_beginAccess();
            sub_100D15428(&qword_101699700, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
            swift_retain();
            CRStruct_6.apply(_:)();
            sub_100522F00(v55, &qword_10169A108);
            swift_endAccess();
            swift_release();
            uint64_t v38 = (uint64_t *)&unk_10169A110;
            uint64_t v39 = v71;
            goto LABEL_13;
          }
LABEL_12:
          uint64_t v38 = &qword_10169A108;
          uint64_t v39 = (uint64_t)v37;
LABEL_13:
          sub_100522F00(v39, v38);
          return sub_101023724(v30, (uint64_t)&off_10152A280, 2u);
        }
        sub_100522F00((uint64_t)v80, &qword_101672BF0);
LABEL_11:
        (*(void (**)(char *, uint64_t, uint64_t, int *))(v72 + 56))(v37, 1, 1, v34);
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v76 = 0;
      uint64_t v77 = 0;
      uint64_t v78 = 0;
      uint64_t v79 = 1;
      uint64_t v34 = (int *)v74;
    }
    sub_100522F00((uint64_t)&v76, (uint64_t *)&unk_1016725E0);
    uint64_t v37 = v73;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_100D07DDC(char a1)
{
  swift_retain();
  unint64_t v3 = sub_100A394EC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v4 = sub_100F6E744(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_100CDCB64((uint64_t)v4);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v9 = v5;
  if (a1)
  {
    id v6 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
    uint64_t v7 = sub_10084663C(1);

    sub_10057CB20(v7);
    return v9;
  }
  return v5;
}

uint64_t sub_100D08044()
{
  uint64_t v45 = sub_1005057FC(&qword_10169A100);
  __chkstk_darwin(v45, v1);
  uint64_t v44 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v4);
  uint64_t v42 = (char *)&v40 - v5;
  __chkstk_darwin(v6, v7);
  uint64_t v43 = (char *)&v40 - v8;
  uint64_t v9 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                 + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v40 = v9 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v41 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v46 = v9;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v15 = 0;
  uint64_t v16 = (uint64_t)v42;
  uint64_t v17 = v44;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      int64_t v47 = v15;
      unint64_t v19 = v18 | (v15 << 6);
      goto LABEL_5;
    }
    int64_t v35 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v35 >= v41) {
      goto LABEL_26;
    }
    unint64_t v36 = *(void *)(v40 + 8 * v35);
    int64_t v37 = v15 + 1;
    if (!v36)
    {
      int64_t v37 = v15 + 2;
      if (v15 + 2 >= v41) {
        goto LABEL_26;
      }
      unint64_t v36 = *(void *)(v40 + 8 * v37);
      if (!v36)
      {
        int64_t v37 = v15 + 3;
        if (v15 + 3 >= v41) {
          goto LABEL_26;
        }
        unint64_t v36 = *(void *)(v40 + 8 * v37);
        if (!v36)
        {
          int64_t v37 = v15 + 4;
          if (v15 + 4 >= v41) {
            goto LABEL_26;
          }
          unint64_t v36 = *(void *)(v40 + 8 * v37);
          if (!v36)
          {
            int64_t v37 = v15 + 5;
            if (v15 + 5 >= v41) {
              goto LABEL_26;
            }
            unint64_t v36 = *(void *)(v40 + 8 * v37);
            if (!v36)
            {
              uint64_t v38 = v15 + 6;
              if (v15 + 6 >= v41)
              {
LABEL_26:
                uint64_t v39 = 0;
                goto LABEL_27;
              }
              unint64_t v36 = *(void *)(v40 + 8 * v38);
              if (!v36)
              {
                while (1)
                {
                  int64_t v37 = v38 + 1;
                  if (__OFADD__(v38, 1)) {
                    goto LABEL_29;
                  }
                  if (v37 >= v41) {
                    goto LABEL_26;
                  }
                  unint64_t v36 = *(void *)(v40 + 8 * v37);
                  ++v38;
                  if (v36) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v37 = v15 + 6;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v13 = (v36 - 1) & v36;
    int64_t v47 = v37;
    unint64_t v19 = __clz(__rbit64(v36)) + (v37 << 6);
LABEL_5:
    uint64_t v20 = v46;
    uint64_t v21 = *(void *)(v46 + 48);
    uint64_t v22 = type metadata accessor for UUID();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = v23;
    uint64_t v25 = v21 + *(void *)(v23 + 72) * v19;
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v27 = (uint64_t)v43;
    v26(v43, v25, v22);
    uint64_t v28 = *(void **)(*(void *)(v20 + 56) + 8 * v19);
    uint64_t v29 = v45;
    *(void *)(v27 + *(int *)(v45 + 48)) = v28;
    sub_10051B3EC(v27, v16, &qword_10169A100);
    uint64_t v30 = *(int *)(v29 + 48);
    v26(v17, v16, v22);
    uint64_t v31 = *(void **)(v16 + v30);
    *(void *)&v17[v30] = v31;
    uint64_t v32 = *(uint64_t (**)(void))((swift_isaMask & *v31) + 0x350);
    id v33 = v28;
    uint64_t v34 = v31;
    LOBYTE(v32) = v32();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v22);
    uint64_t result = sub_100522F00(v16, &qword_10169A100);
    int64_t v15 = v47;
    if ((v32 & 1) == 0)
    {
      uint64_t v39 = 1;
LABEL_27:
      swift_release();
      swift_bridgeObjectRelease();
      return v39;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100D0846C()
{
  uint64_t v45 = sub_1005057FC(&qword_10169A100);
  __chkstk_darwin(v45, v1);
  uint64_t v44 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v4);
  uint64_t v42 = (char *)&v40 - v5;
  __chkstk_darwin(v6, v7);
  uint64_t v43 = (char *)&v40 - v8;
  uint64_t v9 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                 + OBJC_IVAR____TtC8Freeform16CRLContainerItem_items);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v40 = v9 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v41 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v46 = v9;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v15 = 0;
  uint64_t v16 = (uint64_t)v42;
  uint64_t v17 = v44;
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      int64_t v47 = v15;
      unint64_t v19 = v18 | (v15 << 6);
      goto LABEL_5;
    }
    int64_t v35 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v35 >= v41) {
      goto LABEL_26;
    }
    unint64_t v36 = *(void *)(v40 + 8 * v35);
    int64_t v37 = v15 + 1;
    if (!v36)
    {
      int64_t v37 = v15 + 2;
      if (v15 + 2 >= v41) {
        goto LABEL_26;
      }
      unint64_t v36 = *(void *)(v40 + 8 * v37);
      if (!v36)
      {
        int64_t v37 = v15 + 3;
        if (v15 + 3 >= v41) {
          goto LABEL_26;
        }
        unint64_t v36 = *(void *)(v40 + 8 * v37);
        if (!v36)
        {
          int64_t v37 = v15 + 4;
          if (v15 + 4 >= v41) {
            goto LABEL_26;
          }
          unint64_t v36 = *(void *)(v40 + 8 * v37);
          if (!v36)
          {
            int64_t v37 = v15 + 5;
            if (v15 + 5 >= v41) {
              goto LABEL_26;
            }
            unint64_t v36 = *(void *)(v40 + 8 * v37);
            if (!v36)
            {
              uint64_t v38 = v15 + 6;
              if (v15 + 6 >= v41)
              {
LABEL_26:
                uint64_t v39 = 0;
                goto LABEL_27;
              }
              unint64_t v36 = *(void *)(v40 + 8 * v38);
              if (!v36)
              {
                while (1)
                {
                  int64_t v37 = v38 + 1;
                  if (__OFADD__(v38, 1)) {
                    goto LABEL_29;
                  }
                  if (v37 >= v41) {
                    goto LABEL_26;
                  }
                  unint64_t v36 = *(void *)(v40 + 8 * v37);
                  ++v38;
                  if (v36) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v37 = v15 + 6;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v13 = (v36 - 1) & v36;
    int64_t v47 = v37;
    unint64_t v19 = __clz(__rbit64(v36)) + (v37 << 6);
LABEL_5:
    uint64_t v20 = v46;
    uint64_t v21 = *(void *)(v46 + 48);
    uint64_t v22 = type metadata accessor for UUID();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = v23;
    uint64_t v25 = v21 + *(void *)(v23 + 72) * v19;
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v27 = (uint64_t)v43;
    v26(v43, v25, v22);
    uint64_t v28 = *(void **)(*(void *)(v20 + 56) + 8 * v19);
    uint64_t v29 = v45;
    *(void *)(v27 + *(int *)(v45 + 48)) = v28;
    sub_10051B3EC(v27, v16, &qword_10169A100);
    uint64_t v30 = *(int *)(v29 + 48);
    v26(v17, v16, v22);
    uint64_t v31 = *(void **)(v16 + v30);
    *(void *)&v17[v30] = v31;
    uint64_t v32 = *(uint64_t (**)(void))((swift_isaMask & *v31) + 0x1D8);
    id v33 = v28;
    uint64_t v34 = v31;
    LOBYTE(v32) = v32();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v22);
    uint64_t result = sub_100522F00(v16, &qword_10169A100);
    int64_t v15 = v47;
    if (v32)
    {
      uint64_t v39 = 1;
LABEL_27:
      swift_release();
      swift_bridgeObjectRelease();
      return v39;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100D08894()
{
  uint64_t v1 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v6 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + 24);
  id v7 = [objc_allocWithZone((Class)CRLDocumentModelEnumerator) initWithRootModelObject:*(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer) flags:0 filter:0];
  unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
  NSEnumerator.makeIterator()();
  sub_100D15428(&qword_10169A0F8, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  dispatch thunk of IteratorProtocol.next()();
  while (v20)
  {
    sub_100575CE8(&v19, v18);
    sub_100522D7C((uint64_t)v18, (uint64_t)v16);
    type metadata accessor for CRLBoardItemBase(0);
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v17 = 0;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v18);
    if (v17)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    dispatch thunk of IteratorProtocol.next()();
  }
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
  unint64_t v9 = v21;
  if (!(v21 >> 62))
  {
    uint64_t v10 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_12;
    }
LABEL_23:

    swift_bridgeObjectRelease();
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_23;
  }
LABEL_12:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        unint64_t v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v13 = (char *)*(id *)(v9 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)&v13[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      swift_retain();

      if (*(unsigned char *)(v15 + 16))
      {
        unint64_t v12 = *(void *)(v15 + 24);
        swift_release();
        if (v12 > v6) {
          unint64_t v6 = v12;
        }
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_100D08BEC()
{
  uint64_t v1 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v6 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + 32);
  id v7 = [objc_allocWithZone((Class)CRLDocumentModelEnumerator) initWithRootModelObject:*(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer) flags:0 filter:0];
  unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
  NSEnumerator.makeIterator()();
  sub_100D15428(&qword_10169A0F8, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  dispatch thunk of IteratorProtocol.next()();
  while (v22)
  {
    sub_100575CE8(&v21, v20);
    sub_100522D7C((uint64_t)v20, (uint64_t)v18);
    type metadata accessor for CRLBoardItemBase(0);
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v19 = 0;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
    if (v19)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    dispatch thunk of IteratorProtocol.next()();
  }
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
  unint64_t v9 = v23;
  if (!(v23 >> 62))
  {
    uint64_t v10 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_12;
    }
LABEL_23:

    swift_bridgeObjectRelease();
    return v6;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_23;
  }
LABEL_12:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0) {
        uint64_t v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v14 = (char *)*(id *)(v9 + 8 * i + 32);
      }
      uint64_t v15 = v14;
      uint64_t v16 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      unint64_t v17 = *(void *)(*(void *)&v14[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 24);
      if (sub_1002094A4() >= v17)
      {
        uint64_t v12 = *(void *)&v15[v16];
        swift_retain();

        unint64_t v13 = *(void *)(v12 + 32);
        swift_release();
        if (v13 > v6) {
          unint64_t v6 = v13;
        }
      }
      else
      {
      }
    }
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_100D08F68@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v95 = a3;
  uint64_t v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v77 - v14;
  uint64_t v94 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v16 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  if (a2)
  {
    sub_100D1E720(v16, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
    sub_100D15428((unint64_t *)&unk_10169A0E0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    CRType.copy(renamingReferences:)();
    sub_100D1A69C((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  }
  else
  {
    sub_100D1E720(v16, (uint64_t)v15, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v17, (uint64_t)qword_10171A2D8);
  sub_100D15428((unint64_t *)&unk_10169A0D0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
  uint64_t v18 = CRDT.serializedData(_:version:)();
  if (v4)
  {
    sub_100D1A69C((uint64_t)v15, type metadata accessor for CRLBoardCRDTData);
    return swift_release();
  }
  else
  {
    uint64_t v93 = v18;
    unint64_t v92 = v19;
    sub_100D1A69C((uint64_t)v15, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v21 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
    uint64_t v22 = *(uint64_t (**)(uint64_t, void))(**(void **)(*(void *)(v5
                                                                              + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)
                                                                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                    + 456);
    swift_retain();
    uint64_t v90 = v22(a1, a2 & 1);
    unint64_t v91 = v23;
    swift_release();
    uint64_t v24 = *(uint64_t (**)(uint64_t, void))(**(void **)(*(void *)(v5 + v21)
                                                                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                    + 464);
    swift_retain();
    uint64_t v25 = v24(a1, a2 & 1);
    unint64_t v27 = v26;
    swift_release();
    uint64_t v87 = v21;
    uint64_t v88 = v25;
    unint64_t v89 = v27;
    uint64_t v28 = OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer;
    uint64_t v29 = *(uint64_t (**)(uint64_t, void))(**(void **)(*(void *)(v5
                                                                              + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer)
                                                                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                    + 456);
    swift_retain();
    uint64_t v30 = v29(a1, a2 & 1);
    unint64_t v32 = v31;
    swift_release();
    uint64_t v86 = v30;
    id v33 = *(uint64_t (**)(uint64_t, void))(**(void **)(*(void *)(v5 + v28)
                                                                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                    + 464);
    swift_retain();
    uint64_t v34 = v33(a1, a2 & 1);
    unint64_t v36 = v35;
    swift_release();
    uint64_t v37 = v93;
    uint64_t v82 = v28;
    sub_1005057FC(&qword_10167F3E0);
    uint64_t inited = swift_initStackObject();
    unint64_t v85 = v36;
    uint64_t v39 = v34;
    uint64_t v40 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10118E4B0;
    *(unsigned char *)(inited + 32) = 0;
    unint64_t v41 = v92;
    *(void *)(inited + 40) = v37;
    *(void *)(inited + 48) = v41;
    *(unsigned char *)(inited + 56) = 1;
    uint64_t v42 = v90;
    *(void *)(inited + 64) = v90;
    uint64_t v43 = v37;
    unint64_t v44 = v91;
    *(void *)(v40 + 72) = v91;
    *(unsigned char *)(v40 + 80) = 2;
    unint64_t v45 = v32;
    uint64_t v46 = v88;
    unint64_t v47 = v89;
    *(void *)(v40 + 88) = v88;
    *(void *)(v40 + 96) = v47;
    *(unsigned char *)(v40 + 104) = 3;
    *(void *)(v40 + 112) = v86;
    *(void *)(v40 + 120) = v45;
    *(unsigned char *)(v40 + 128) = 4;
    unint64_t v48 = v85;
    *(void *)(v40 + 136) = v39;
    *(void *)(v40 + 144) = v48;
    sub_100510D4C(v43, v41);
    sub_100510D4C(v42, v44);
    sub_100510D4C(v46, v47);
    unint64_t v84 = v45;
    sub_100510D4C(v86, v45);
    uint64_t v83 = v39;
    uint64_t v49 = v39;
    unint64_t v50 = v85;
    sub_100510D4C(v49, v85);
    unint64_t v81 = sub_100A396E0(v40);
    uint64_t v51 = v87;
    uint64_t v52 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v5 + v87)
                                                          + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                            + 568);
    uint64_t v53 = swift_retain();
    uint64_t v54 = v52(v53);
    swift_release();
    uint64_t v55 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v5 + v51)
                                                          + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                            + 576);
    uint64_t v56 = swift_retain();
    uint64_t v57 = v55(v56);
    swift_release();
    uint64_t v58 = sub_100CFC3E4(v57, v54);
    unint64_t v59 = sub_100A394EC((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v78 = sub_100CFC3E4(v58, v59);
    uint64_t v60 = *(void **)(v5 + v94);
    uint64_t v94 = v60[3];
    uint64_t v62 = v60[4];
    uint64_t v61 = v60[5];
    uint64_t v80 = v62;
    uint64_t v79 = v61;
    uint64_t v63 = *(char **)(v5 + v51);
    uint64_t v64 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    uint64_t v65 = *(double **)&v63[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    uint64_t v66 = v63;
    if (!v65)
    {
      sub_100846AB0();
      uint64_t v65 = *(double **)&v63[v64];
    }
    if (v65) {
      uint64_t v67 = v65;
    }
    else {
      uint64_t v67 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();

    uint64_t v68 = *(char **)(v5 + v82);
    uint64_t v69 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    uint64_t v70 = *(double **)&v68[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    uint64_t v71 = v68;
    if (!v70)
    {
      sub_100846AB0();
      uint64_t v70 = *(double **)&v68[v69];
    }
    if (v70) {
      uint64_t v72 = v70;
    }
    else {
      uint64_t v72 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();

    uint64_t v96 = v67;
    sub_1006E0C70((unint64_t)v72);
    uint64_t v73 = sub_100590170((unint64_t)v96);
    sub_100510084(v93, v92);
    sub_100510084(v90, v91);
    sub_100510084(v88, v89);
    sub_100510084(v86, v84);
    sub_100510084(v83, v50);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v74 = v95;
    uint64_t v75 = v80;
    *uint64_t v95 = v94;
    v74[1] = v75;
    v74[2] = v79;
    *(_OWORD *)(v74 + 3) = xmmword_1011B1FA0;
    uint64_t v76 = v78;
    v74[5] = v81;
    v74[6] = v76;
    v74[7] = (uint64_t)v73;
  }
  return result;
}

void sub_100D099D0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v45 = type metadata accessor for UUID();
  uint64_t v44 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v5);
  uint64_t v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardScenesCRDTData(0);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v16 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v17 = type metadata accessor for CRLBoardCRDTData(0);
  sub_100D1E720(v16 + *(int *)(v17 + 36), (uint64_t)v14, type metadata accessor for CRLBoardScenesCRDTData);
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_101699FC0);
  uint64_t v51 = a1;
  CRDictionary.subscript.getter();
  uint64_t v18 = v48;
  uint64_t v19 = v49;
  sub_100D1A69C((uint64_t)v14, type metadata accessor for CRLBoardScenesCRDTData);
  swift_release();
  if (v19)
  {
    uint64_t v42 = v18;
    uint64_t v20 = *(void *)(a2 + v15) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v20 + *(int *)(v17 + 36), (uint64_t)v11, type metadata accessor for CRLBoardScenesCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101699FD0);
    uint64_t v21 = v51;
    CRDictionary.subscript.getter();
    if (v50)
    {
      uint64_t v22 = v48;
      uint64_t v23 = v49;
      swift_bridgeObjectRelease();
      sub_100D1A69C((uint64_t)v11, type metadata accessor for CRLBoardScenesCRDTData);
      swift_release();
      uint64_t v24 = v44;
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
      unint64_t v26 = v43;
      uint64_t v27 = v45;
      v25(v43, v21, v45);
      uint64_t v28 = (objc_class *)type metadata accessor for CRLSceneInfo();
      uint64_t v29 = (char *)objc_allocWithZone(v28);
      *(void *)&v29[OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo] = 0;
      *(void *)&v29[OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass] = 0;
      uint64_t v30 = v29;
      ObservationRegistrar.init()();
      v25(&v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID], (uint64_t)v26, v27);
      unint64_t v31 = &v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name];
      *(void *)unint64_t v31 = v42;
      *((void *)v31 + 1) = v19;
      unint64_t v32 = (double *)&v30[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
      *unint64_t v32 = *(float *)&v22;
      v32[1] = *((float *)&v22 + 1);
      v32[2] = *(float *)&v23;
      void v32[3] = *((float *)&v23 + 1);

      v47.receiver = v30;
      v47.super_class = v28;
      id v33 = [super init];
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v27);
      goto LABEL_8;
    }
    sub_100D1A69C((uint64_t)v11, type metadata accessor for CRLBoardScenesCRDTData);
    swift_bridgeObjectRelease();
    swift_release();
  }
  if (qword_10166FAF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v34 = (void *)static OS_os_log.crlScenes;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v36 = v34;
  uint64_t v37 = UUID.uuidString.getter();
  uint64_t v39 = v38;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v37;
  *(void *)(inited + 40) = v39;
  uint64_t v40 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v40, (uint64_t)"Failed creating scene info with UUID %{public}", 46, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v33 = 0;
LABEL_8:
  *uint64_t v46 = v33;
}

uint64_t sub_100D09F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v7 = v6;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v12 = type metadata accessor for CRLSceneDataValue(0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(v7 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v23 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v22 + *(int *)(v23 + 36), v17);
  uint64_t v24 = CROrderedSet.count.getter();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  uint64_t v25 = sub_100D1B648(v24);
  uint64_t v27 = v26;
  swift_beginAccess();
  uint64_t v28 = type metadata accessor for UUID();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
  uint64_t v30 = v34;
  v29(v16, v34, v28);
  unint64_t v31 = (uint64_t *)&v16[*(int *)(v13 + 28)];
  *unint64_t v31 = v25;
  v31[1] = v27;
  unint64_t v32 = (double *)&v16[*(int *)(v13 + 32)];
  *unint64_t v32 = a3;
  v32[1] = a4;
  v32[2] = a5;
  void v32[3] = a6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10066A780((uint64_t)v16);
  sub_100D1A69C((uint64_t)v16, type metadata accessor for CRLSceneDataValue);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v29)(v35, v30, v28);
}

id sub_100D0A33C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v44 = type metadata accessor for UUID();
  uint64_t v43 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v4);
  uint64_t v42 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardScenesCRDTData(0);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v16 = type metadata accessor for CRLBoardCRDTData(0);
  sub_100D1E720(v15 + *(int *)(v16 + 36), (uint64_t)v13, type metadata accessor for CRLBoardScenesCRDTData);
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_101699FC0);
  uint64_t v45 = a1;
  CRDictionary.subscript.getter();
  uint64_t v17 = v47;
  uint64_t v18 = v48;
  sub_100D1A69C((uint64_t)v13, type metadata accessor for CRLBoardScenesCRDTData);
  swift_release();
  if (v18)
  {
    uint64_t v19 = *(void *)(v2 + v14) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v19 + *(int *)(v16 + 36), (uint64_t)v10, type metadata accessor for CRLBoardScenesCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101699FD0);
    uint64_t v20 = v45;
    CRDictionary.subscript.getter();
    if (v49)
    {
      uint64_t v21 = v47;
      uint64_t v22 = v48;
      swift_bridgeObjectRelease();
      sub_100D1A69C((uint64_t)v10, type metadata accessor for CRLBoardScenesCRDTData);
      swift_release();
      uint64_t v23 = v43;
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
      uint64_t v25 = v42;
      uint64_t v26 = v44;
      v24(v42, v20, v44);
      uint64_t v27 = (objc_class *)type metadata accessor for CRLSceneInfo();
      uint64_t v28 = (char *)objc_allocWithZone(v27);
      *(void *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo] = 0;
      *(void *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass] = 0;
      uint64_t v29 = v28;
      ObservationRegistrar.init()();
      v24(&v29[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID], (uint64_t)v25, v26);
      uint64_t v30 = &v29[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name];
      *(void *)uint64_t v30 = v17;
      *((void *)v30 + 1) = v18;
      unint64_t v31 = (double *)&v29[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
      *unint64_t v31 = *(float *)&v21;
      v31[1] = *((float *)&v21 + 1);
      v31[2] = *(float *)&v22;
      v31[3] = *((float *)&v22 + 1);

      v46.receiver = v29;
      v46.super_class = v27;
      id v32 = [super init];
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v26);
      return v32;
    }
    sub_100D1A69C((uint64_t)v10, type metadata accessor for CRLBoardScenesCRDTData);
    swift_bridgeObjectRelease();
    swift_release();
  }
  if (qword_10166FAF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v33 = (void *)static OS_os_log.crlScenes;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v35 = v33;
  uint64_t v36 = UUID.uuidString.getter();
  uint64_t v38 = v37;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v36;
  *(void *)(inited + 40) = v38;
  uint64_t v39 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Failed retrieving scene data with UUID %{public}", 48, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return 0;
}

uint64_t sub_100D0AF90(double *a1)
{
  uint64_t v62 = (void (*)(uint64_t, uint64_t))type metadata accessor for UUID();
  uint64_t v3 = *((void *)v62 - 1);
  __chkstk_darwin(v62, v4);
  uint64_t v60 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v61 = (char *)&v60 - v8;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_10169A0B0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v76 = (unint64_t)a1;
  uint64_t v78 = a1;
  uint64_t v75 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v19 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v73 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v20 = v19 + *(int *)(v73 + 36);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v66 = v10 + 16;
  uint64_t v65 = v21;
  v21(v13, v20, v9);
  uint64_t v74 = v1;
  uint64_t v22 = v1;
  uint64_t v23 = sub_1005C2550((uint64_t)v13, (uint64_t)v22);
  uint64_t v63 = 0;
  uint64_t v64 = v22;

  uint64_t v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v67 = v13;
  uint64_t v69 = v9;
  uint64_t v68 = v10 + 8;
  v24(v13, v9);
  uint64_t v77 = v23;
  sub_1005057FC(&qword_10168A520);
  sub_100523288(&qword_10169A0C0, &qword_10168A520);
  sub_100D15428(&qword_10169A0C8, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
  BidirectionalCollection<>.difference<A>(from:)();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(CollectionDifference.insertions.getter() + 16);
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(CollectionDifference.removals.getter() + 16);
  swift_bridgeObjectRelease();
  if (v25 != v26)
  {
    uint64_t v62 = (void (*)(uint64_t, uint64_t))v24;
    uint64_t v38 = v74;
    uint64_t v72 = v14;
    uint64_t v70 = v18;
    uint64_t v71 = v15;
    if (qword_10166FAF8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v39 = (void *)static OS_os_log.crlScenes;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    type metadata accessor for CRLSceneInfo();
    id v41 = v39;
    uint64_t v42 = Array.description.getter();
    uint64_t v44 = v43;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v45 = sub_100528BE4();
    *(void *)(inited + 32) = v42;
    *(void *)(inited + 64) = v45;
    *(void *)(inited + 40) = v44;
    uint64_t v46 = *(void *)&v38[v75] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v47 = (uint64_t)v67;
    uint64_t v48 = v69;
    v65(v67, v46 + *(int *)(v73 + 36), v69);
    uint64_t v49 = v64;
    sub_1005C2550(v47, (uint64_t)v49);

    v62(v47, v48);
    uint64_t v50 = Array.description.getter();
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v45;
    *(void *)(inited + 72) = v50;
    *(void *)(inited + 80) = v52;
    uint64_t v53 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v41, (uint64_t)&_mh_execute_header, v53, (uint64_t)"Reordered scene infos (%{public}@) do not match existing scene infos (%{public}@).", 82, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    char v54 = 0;
    uint64_t v15 = v71;
    uint64_t v18 = v70;
    uint64_t v14 = v72;
    goto LABEL_21;
  }
  uint64_t v27 = *(char **)&v74[v75];
  unint64_t v28 = v76;
  if (v76 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  uint64_t v30 = _swiftEmptyArrayStorage;
  if (!v29)
  {
LABEL_20:
    swift_beginAccess();
    char v54 = sub_10066AFB0((uint64_t)v30);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_21:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    return v54 & 1;
  }
  uint64_t v78 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1006BB544(0, v29 & ~(v29 >> 63), 0);
  if ((v29 & 0x8000000000000000) == 0)
  {
    uint64_t v74 = v27;
    uint64_t v70 = v18;
    uint64_t v71 = v15;
    uint64_t v72 = v14;
    uint64_t v30 = v78;
    if ((v28 & 0xC000000000000001) != 0)
    {
      uint64_t v32 = 0;
      uint64_t v75 = v3 + 32;
      id v33 = v62;
      uint64_t v34 = v61;
      do
      {
        uint64_t v35 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        (*(void (**)(char *, uint64_t, void (*)(uint64_t, uint64_t)))(v3 + 16))(v34, v35 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v33);
        swift_unknownObjectRelease();
        uint64_t v78 = v30;
        unint64_t v37 = *((void *)v30 + 2);
        unint64_t v36 = *((void *)v30 + 3);
        if (v37 >= v36 >> 1)
        {
          sub_1006BB544(v36 > 1, v37 + 1, 1);
          uint64_t v30 = v78;
        }
        ++v32;
        *((void *)v30 + 2) = v37 + 1;
        (*(void (**)(unint64_t, char *, void (*)(uint64_t, uint64_t)))(v3 + 32))((unint64_t)v30+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v37, v34, v33);
      }
      while (v29 != v32);
    }
    else
    {
      uint64_t v55 = (void *)(v28 + 32);
      unint64_t v76 = *(void *)(v3 + 16);
      uint64_t v56 = v62;
      uint64_t v57 = v60;
      do
      {
        ((void (*)(char *, uint64_t, void (*)(uint64_t, uint64_t)))v76)(v57, *v55 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v56);
        uint64_t v78 = v30;
        unint64_t v59 = *((void *)v30 + 2);
        unint64_t v58 = *((void *)v30 + 3);
        if (v59 >= v58 >> 1)
        {
          sub_1006BB544(v58 > 1, v59 + 1, 1);
          uint64_t v57 = v60;
          uint64_t v30 = v78;
        }
        *((void *)v30 + 2) = v59 + 1;
        (*(void (**)(unint64_t, char *, void (*)(uint64_t, uint64_t)))(v3 + 32))((unint64_t)v30+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v59, v57, v56);
        ++v55;
        --v29;
      }
      while (v29);
    }
    uint64_t v14 = v72;
    uint64_t v15 = v71;
    uint64_t v18 = v70;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

id sub_100D0BA80()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoard(0);
  return [super dealloc];
}

uint64_t sub_100D0BC18()
{
  return type metadata accessor for CRLBoard(0);
}

uint64_t type metadata accessor for CRLBoard(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101699EC8);
}

void sub_100D0BC40()
{
  sub_100D0BD48();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100D0BD48()
{
  if (!qword_101699ED8)
  {
    type metadata accessor for CRLBoard.RealTimeSessionInfo(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101699ED8);
    }
  }
}

uint64_t type metadata accessor for CRLBoard.RealTimeSessionInfo(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101699F70);
}

uint64_t sub_100D0BDC0()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v5, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  return swift_release();
}

uint64_t sub_100D0BECC()
{
  return swift_retain();
}

uint64_t sub_100D0BEDC(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_transactionContext) = a1;
  return swift_release();
}

uint64_t sub_100D0BEF4()
{
  uint64_t v1 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v5, (uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v4, type metadata accessor for CRLBoardCRDTData);
  return swift_release();
}

char *sub_100D0BFFC()
{
  return sub_100D05560();
}

uint64_t sub_100D0C024(uint64_t a1, uint64_t a2)
{
  return sub_100D07604(a1, a2);
}

uint64_t sub_100D0C040()
{
  swift_retain();
  sub_101048A8C();
  swift_release();
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_opportunisticallyBuiltAffectedItemSetIncludingParents) = _swiftEmptyDictionarySingleton;

  return swift_bridgeObjectRelease();
}

uint64_t sub_100D0C0AC()
{
  uint64_t v1 = *v0;
  type metadata accessor for UUID();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  Class v3 = Array._bridgeToObjectiveC()().super.isa;
  id v4 = [v1 resolveAncestorsFor:isa ignoringIds:v3];

  type metadata accessor for CRLBoardItem(0);
  sub_100D15428((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  return v5;
}

uint64_t sub_100D0C190()
{
  return swift_retain();
}

double sub_100D0C1C8@<D0>(uint64_t a1@<X0>, char a2@<W1>, _OWORD *a3@<X8>)
{
  sub_100D08F68(a1, a2, (uint64_t *)v8);
  if (!v3)
  {
    long long v6 = v8[1];
    *a3 = v8[0];
    a3[1] = v6;
    double result = *(double *)&v9;
    long long v7 = v10;
    a3[2] = v9;
    a3[3] = v7;
  }
  return result;
}

uint64_t sub_100D0C20C(uint64_t a1)
{
  return sub_100CFD518(a1) & 1;
}

id sub_100D0C264(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  long long v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = a1;
  if (sub_100CFBB94((uint64_t)v10))
  {
    a4(0);
    uint64_t v12 = (void *)swift_dynamicCastClass();

    if (!v12) {
      swift_unknownObjectRelease();
    }
  }
  else
  {

    uint64_t v12 = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

  return v12;
}

uint64_t sub_100D0C3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v34 = a2;
  uint64_t v7 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v16, v10, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v10, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  sub_100D15428((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  LOBYTE(v10) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t result = v17(v15, v11);
  if ((v10 & 1) == 0)
  {
    if (a1)
    {
      uint64_t v19 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap);
      swift_beginAccess();
      uint64_t v20 = *v19;
      uint64_t v21 = *(void *)(*v19 + 16);
      swift_unknownObjectRetain();
      if (v21)
      {
        swift_bridgeObjectRetain();
        unint64_t v22 = sub_100955FC8(a3);
        if (v23)
        {
          uint64_t v24 = *(void *)(*(void *)(v20 + 56) + 16 * v22);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          if (v24 == a1)
          {
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v32 = v24;
            if (qword_10166F9C8 != -1) {
              swift_once();
            }
            swift_beginAccess();
            uint64_t v25 = (void *)static OS_os_log.crlDefault;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_10117E810;
            id v33 = v25;
            uint64_t v31 = UUID.uuidString.getter();
            uint64_t v30 = v27;
            *(void *)(inited + 56) = &type metadata for String;
            *(void *)(inited + 64) = sub_100528BE4();
            *(void *)(inited + 32) = v31;
            *(void *)(inited + 40) = v30;
            uint64_t v28 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v28, (uint64_t)"Overwriting an existing object in objectUUIDMap with a different instance for the same UUID %@.", 95, 2, inited);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();
            swift_unknownObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a3, v11);
      swift_beginAccess();
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v35 = *v19;
      *uint64_t v19 = 0x8000000000000000;
      sub_100971D88(a1, v34, (uint64_t)v15, isUniquelyReferenced_nonNull_native);
      *uint64_t v19 = v35;
      swift_bridgeObjectRelease();
      v17(v15, v11);
    }
    else
    {
      swift_beginAccess();
      sub_10095AE74(a3);
    }
    swift_endAccess();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100D0C848(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLBoardItem(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v12 = result;
    type metadata accessor for CRLTransactableHashableWrapper();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = &off_101518040;
    uint64_t v14 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_fixupData);
    swift_beginAccess();
    uint64_t v15 = *v14;
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    char v16 = sub_1006E4038(v13, v15);
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_4;
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
    sub_100D0C3A0(a1, a2, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v18 = v14[1];
    swift_bridgeObjectRetain();
    char v19 = sub_1006E4038(v13, v18);
    swift_bridgeObjectRelease();
    if (v19)
    {
LABEL_4:
      swift_unknownObjectRelease();
    }
    else
    {
      swift_beginAccess();
      swift_retain();
      sub_100CB4EEC(&v21, v13);
      swift_endAccess();
      swift_release();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100D0CA80(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v13, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  uint64_t v31 = type metadata accessor for CRLSharedBoardMetadataCRDTData(0);
  swift_retain();
  uint64_t v30 = sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.getter();
  LODWORD(v13) = v33;
  sub_100D1A69C((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
  uint64_t result = swift_release();
  if (v13 == 1)
  {
    sub_10103405C(v2, (uint64_t)&off_10152A280);
    uint64_t v27 = a1;
    if (qword_10166FB70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v25 = (uint64_t (*)(uint64_t))static OS_os_log.boardStore;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v28 = v2;
    uint64_t v16 = *(void *)(v2 + v12) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v26 = type metadata accessor for CRLBoardCRDTData;
    sub_100D1E720(v16, (uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
    uint64_t v24 = v25;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    uint64_t v25 = type metadata accessor for CRLBoardCRDTData;
    sub_100D1A69C((uint64_t)v11, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v17 = UUID.uuidString.getter();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v4);
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v17;
    *(void *)(inited + 40) = v19;
    uint64_t v20 = v28;
    uint64_t v21 = static os_log_type_t.default.getter();
    unint64_t v22 = v24;
    sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Marking board as not discardable: %{public}@", 44, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v23 = *(void *)(v20 + v12) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v23, (uint64_t)v11, v26);
    swift_retain();
    CRRegister.wrappedValue.getter();
    LODWORD(v17) = v33;
    sub_100D1A69C((uint64_t)v11, v25);
    if (v17 == 1)
    {
      swift_beginAccess();
      char v32 = 0;
      CRRegister.wrappedValue.setter();
      swift_endAccess();
    }
    swift_release();
    return sub_101023724(v20, (uint64_t)&off_10152A280, 2u);
  }
  return result;
}

uint64_t sub_100D0D028()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v122 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v121 = (char *)&v111 - v6;
  uint64_t inited = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(inited - 8);
  __chkstk_darwin(inited, v9);
  char v126 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v132 = (char *)&v111 - v13;
  __chkstk_darwin(v14, v15);
  id v127 = (char *)&v111 - v16;
  uint64_t v133 = v0;
  uint64_t v17 = &v0[OBJC_IVAR____TtC8Freeform8CRLBoard_fixupData];
  swift_beginAccess();
  uint64_t v112 = v17;
  unint64_t v18 = *(void *)v17;
  if ((*(void *)v17 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_100D15428((unint64_t *)&qword_10169A0A0, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    unint64_t v18 = v137;
    uint64_t v125 = v138;
    uint64_t v19 = v139;
    uint64_t v20 = v140;
    unint64_t v21 = v141;
  }
  else
  {
    uint64_t v22 = -1 << *(unsigned char *)(v18 + 32);
    uint64_t v23 = *(void *)(v18 + 56);
    uint64_t v125 = (uint64_t (*)(uint64_t, uint64_t))(v18 + 56);
    uint64_t v19 = ~v22;
    uint64_t v24 = -v22;
    if (v24 < 64) {
      uint64_t v25 = ~(-1 << v24);
    }
    else {
      uint64_t v25 = -1;
    }
    unint64_t v21 = v25 & v23;
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
  }
  uint64_t v120 = v18 & 0x7FFFFFFFFFFFFFFFLL;
  unint64_t v116 = (char *)v19;
  uint64_t v129 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v123 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v124 = (char *)((unint64_t)(v19 + 64) >> 6);
  uint64_t v134 = (uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v119 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v128 = inited;
  uint64_t v26 = (uint64_t)v121;
  unint64_t v130 = v18;
  while (1)
  {
    if ((v18 & 0x8000000000000000) != 0)
    {
      uint64_t v30 = __CocoaSet.Iterator.next()();
      if (!v30) {
        goto LABEL_42;
      }
      uint64_t v136 = v30;
      type metadata accessor for CRLTransactableHashableWrapper();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v31 = v142;
      swift_unknownObjectRelease();
      uint64_t v29 = v20;
      uint64_t v27 = v21;
      if (!v31) {
        goto LABEL_42;
      }
      goto LABEL_30;
    }
    if (v21)
    {
      uint64_t v27 = (v21 - 1) & v21;
      unint64_t v28 = __clz(__rbit64(v21)) | (v20 << 6);
      uint64_t v29 = v20;
      goto LABEL_29;
    }
    uint64_t v32 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fixUp()", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1087, (uint64_t)"Unable to find the parent of child %@%@ with parentUUID %@", 58, 2u, inited);
      sub_100586FD4(inited, (uint64_t)"Unable to find the parent of child %@%@ with parentUUID %@");
      sub_1005871AC(inited, (uint64_t)"fixUp()", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1087);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v109, v110);
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    if (v32 >= (uint64_t)v124) {
      goto LABEL_42;
    }
    unint64_t v33 = *((void *)v125 + v32);
    uint64_t v29 = v20 + 1;
    if (!v33)
    {
      uint64_t v29 = v20 + 2;
      if (v20 + 2 >= (uint64_t)v124) {
        goto LABEL_42;
      }
      unint64_t v33 = *((void *)v125 + v29);
      if (!v33)
      {
        uint64_t v29 = v20 + 3;
        if (v20 + 3 >= (uint64_t)v124) {
          goto LABEL_42;
        }
        unint64_t v33 = *((void *)v125 + v29);
        if (!v33)
        {
          uint64_t v29 = v20 + 4;
          if (v20 + 4 >= (uint64_t)v124) {
            goto LABEL_42;
          }
          unint64_t v33 = *((void *)v125 + v29);
          if (!v33) {
            break;
          }
        }
      }
    }
LABEL_28:
    uint64_t v27 = (v33 - 1) & v33;
    unint64_t v28 = __clz(__rbit64(v33)) + (v29 << 6);
LABEL_29:
    uint64_t v35 = *(void *)(*(void *)(v18 + 48) + 8 * v28);
    swift_retain();
    if (!v35) {
      goto LABEL_42;
    }
LABEL_30:
    type metadata accessor for CRLBoardItem(0);
    unint64_t v36 = (void *)swift_dynamicCastClass();
    if (v36)
    {
      unint64_t v37 = v36;
      unint64_t v131 = v27;
      uint64_t v38 = *(void (**)(uint64_t))((swift_isaMask & *v36) + 0xB8);
      uint64_t v39 = swift_unknownObjectRetain_n();
      v38(v39);
      uint64_t inited = v128;
      if ((*v129)(v26, 1, v128) == 1)
      {
        swift_release();
        swift_unknownObjectRelease_n();
        sub_100522F00(v26, (uint64_t *)&unk_101674520);
        goto LABEL_39;
      }
      (*v123)(v127, v26, inited);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      id v41 = [v133 getContainerItemForUUID:isa];

      if (v41)
      {
        uint64_t v42 = (uint64_t)v132;
        (*(void (**)(void))((swift_isaMask & *v37) + 0x88))();
        sub_100849694(v42, 1);

        uint64_t v43 = v42;
        uint64_t v26 = (uint64_t)v121;
        (*v134)(v43, inited);
      }
      uint64_t v44 = (char *)[v37 parentContainerItem];
      if (v44)
      {
        uint64_t v117 = v29;
        unint64_t v45 = *(void (**)(uint64_t))(**(void **)&v44[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                             + 256);
        uint64_t v46 = v44;
        uint64_t v47 = swift_retain();
        uint64_t v48 = (uint64_t)v132;
        v45(v47);
        id v118 = v46;

        swift_release();
        sub_100D15428((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v49 = v127;
        char v50 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v51 = *v134;
        uint64_t v52 = (*v134)(v48, inited);
        if (v50)
        {
          v51((uint64_t)v49, inited);
          swift_release();

          swift_unknownObjectRelease_n();
        }
        else
        {
          (*(void (**)(uint64_t))((swift_isaMask & *v37) + 0x88))(v52);
          id v53 = v118;
          sub_100849694(v48, 1);

          swift_release();
          swift_unknownObjectRelease_n();
          v51(v48, inited);
          v51((uint64_t)v49, inited);
        }
        uint64_t v20 = v117;
        unint64_t v21 = v131;
        uint64_t v26 = (uint64_t)v121;
        unint64_t v18 = v130;
      }
      else
      {
        (*v134)((uint64_t)v127, inited);
        swift_release();
        swift_unknownObjectRelease_n();
LABEL_39:
        uint64_t v20 = v29;
        unint64_t v18 = v130;
        unint64_t v21 = v131;
      }
    }
    else
    {
      swift_release();
      uint64_t v20 = v29;
      unint64_t v21 = v27;
    }
  }
  uint64_t v34 = (char *)(v20 + 5);
  while (v124 != v34)
  {
    unint64_t v33 = *((void *)v125 + (void)v34++);
    if (v33)
    {
      uint64_t v29 = (uint64_t)(v34 - 1);
      goto LABEL_28;
    }
  }
LABEL_42:
  sub_10052E1EC();
  unint64_t v54 = *((void *)v112 + 1);
  if ((v54 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_100D15428((unint64_t *)&qword_10169A0A0, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    unint64_t v54 = (unint64_t)v142;
    uint64_t v119 = v143;
    uint64_t v55 = v144;
    unint64_t v56 = v145;
    unint64_t v57 = v146;
  }
  else
  {
    uint64_t v58 = -1 << *(unsigned char *)(v54 + 32);
    uint64_t v59 = *(void *)(v54 + 56);
    uint64_t v119 = (char *)(v54 + 56);
    uint64_t v60 = ~v58;
    uint64_t v61 = -v58;
    if (v61 < 64) {
      uint64_t v62 = ~(-1 << v61);
    }
    else {
      uint64_t v62 = -1;
    }
    unint64_t v57 = v62 & v59;
    swift_bridgeObjectRetain();
    uint64_t v55 = v60;
    unint64_t v56 = 0;
  }
  uint64_t v111 = v55;
  uint64_t v117 = v54 & 0x7FFFFFFFFFFFFFFFLL;
  id v118 = (id)((unint64_t)(v55 + 64) >> 6);
  long long v113 = xmmword_10117DF40;
  unint64_t v116 = (char *)&type metadata for Swift.AnyObject + 8;
  id v127 = (char *)v54;
  while (2)
  {
    if ((v54 & 0x8000000000000000) != 0)
    {
      uint64_t v66 = __CocoaSet.Iterator.next()();
      if (!v66) {
        goto LABEL_86;
      }
      uint64_t v135 = v66;
      type metadata accessor for CRLTransactableHashableWrapper();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v67 = v136;
      swift_unknownObjectRelease();
      unint64_t v65 = v56;
      uint64_t v63 = v57;
      if (!v67) {
        goto LABEL_86;
      }
      goto LABEL_72;
    }
    if (v57)
    {
      uint64_t v63 = (v57 - 1) & v57;
      unint64_t v64 = __clz(__rbit64(v57)) | (v56 << 6);
      unint64_t v65 = v56;
LABEL_71:
      uint64_t v67 = *(void *)(*(void *)(v54 + 48) + 8 * v64);
      swift_retain();
      if (!v67) {
        goto LABEL_86;
      }
LABEL_72:
      unint64_t v130 = v63;
      unint64_t v131 = v65;
      uint64_t v72 = *(void *)(v67 + 16);
      uint64_t v71 = *(void *)(v67 + 24);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v71 + 32);
      swift_unknownObjectRetain();
      uint64_t v75 = v132;
      v74(ObjectType, v71);
      Class v76 = UUID._bridgeToObjectiveC()().super.isa;
      uint64_t v77 = *v134;
      (*v134)((uint64_t)v75, inited);
      uint64_t v78 = [v133 getBoardItemForUUID:v76 v111];

      if (v78)
      {
        uint64_t v79 = (uint64_t)v122;
        (*(void (**)(void))((swift_isaMask & *v78) + 0xB8))();
        if ((*v129)(v79, 1, inited) == 1)
        {
          sub_100522F00(v79, (uint64_t *)&unk_101674520);
          if (v78 == *(void **)&v133[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer])
          {
            *(void *)((char *)v78 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems) = 0;
            unint64_t v105 = v78;
            swift_bridgeObjectRelease();
            *(void *)((char *)v105 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs) = 0;
            swift_bridgeObjectRelease();
            *(void *)((char *)v105 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs) = 0;
            swift_release();
            swift_unknownObjectRelease();

            swift_bridgeObjectRelease();
          }
          else
          {
            swift_release();
            swift_unknownObjectRelease();
          }
        }
        else
        {
          uint64_t v120 = v72;
          ((void (*)(void))*v123)();
          uint64_t v124 = (char *)[v78 parentContainerItem];
          Class v80 = UUID._bridgeToObjectiveC()().super.isa;
          uint64_t v121 = (char *)[v133 getContainerItemForUUID:v80];

          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v81 = inited;
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v113;
          uint64_t v82 = *(void (**)(void))((swift_isaMask & *v78) + 0x88);
          uint64_t v83 = v132;
          uint64_t v114 = (swift_isaMask & *v78) + 136;
          id v115 = v82;
          v82();
          uint64_t v84 = UUID.uuidString.getter();
          unint64_t v85 = v77;
          uint64_t v87 = v86;
          uint64_t v125 = v85;
          v85((uint64_t)v83, v81);
          *(void *)(inited + 56) = &type metadata for String;
          unint64_t v88 = sub_100528BE4();
          *(void *)(inited + 32) = v84;
          *(void *)(inited + 64) = v88;
          *(void *)(inited + 40) = v87;
          unint64_t v89 = v78;
          id v90 = [v89 description];
          uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v93 = v92;

          *(void *)(inited + 96) = &type metadata for String;
          *(void *)(inited + 104) = v88;
          *(void *)(inited + 72) = v91;
          *(void *)(inited + 80) = v93;
          uint64_t v94 = UUID.uuidString.getter();
          *(void *)(inited + 136) = &type metadata for String;
          *(void *)(inited + 144) = v88;
          *(void *)(inited + 112) = v94;
          *(void *)(inited + 120) = v95;
          if (!v121) {
            goto LABEL_89;
          }
          uint64_t v96 = v121;
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();
          uint64_t v97 = v124;
          if (v124)
          {
            uint64_t v98 = *(void (**)(void))(**(void **)&v124[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
            swift_retain();
            uint64_t v99 = v97;
            uint64_t v100 = (uint64_t)v132;
            v98();
            swift_release();
            uint64_t v101 = sub_100CFBB94(v100);
            uint64_t v102 = v125;
            v125(v100, v128);
            uint64_t v103 = swift_unknownObjectRelease();
            if (v101)
            {
              if (v99 == v96)
              {
                *(void *)&v99[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
                swift_bridgeObjectRelease();
                *(void *)&v99[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
                swift_bridgeObjectRelease();
                *(void *)&v99[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;

                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v104 = (uint64_t)v132;
                ((void (*)(uint64_t))v115)(v103);
                sub_100849694(v104, 1);

                v102(v104, v128);
              }
            }
            else
            {
            }
            uint64_t v97 = v124;
          }
          unint64_t v106 = v96;
          sub_1008488B0(v89, 1);

          swift_release();
          swift_unknownObjectRelease();

          uint64_t inited = v128;
          v125((uint64_t)v126, v128);
        }
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
      }
      unint64_t v57 = v130;
      unint64_t v56 = v131;
      unint64_t v54 = (unint64_t)v127;
      continue;
    }
    break;
  }
  uint64_t v68 = v56 + 1;
  if (__OFADD__(v56, 1)) {
    goto LABEL_88;
  }
  if (v68 >= (uint64_t)v118) {
    goto LABEL_86;
  }
  unint64_t v69 = *(void *)&v119[8 * v68];
  unint64_t v65 = v56 + 1;
  if (v69) {
    goto LABEL_70;
  }
  unint64_t v65 = v56 + 2;
  if ((uint64_t)(v56 + 2) >= (uint64_t)v118) {
    goto LABEL_86;
  }
  unint64_t v69 = *(void *)&v119[8 * v65];
  if (v69) {
    goto LABEL_70;
  }
  unint64_t v65 = v56 + 3;
  if ((uint64_t)(v56 + 3) >= (uint64_t)v118) {
    goto LABEL_86;
  }
  unint64_t v69 = *(void *)&v119[8 * v65];
  if (v69) {
    goto LABEL_70;
  }
  unint64_t v65 = v56 + 4;
  if ((uint64_t)(v56 + 4) >= (uint64_t)v118) {
    goto LABEL_86;
  }
  unint64_t v69 = *(void *)&v119[8 * v65];
  if (v69)
  {
LABEL_70:
    uint64_t v63 = (v69 - 1) & v69;
    unint64_t v64 = __clz(__rbit64(v69)) + (v65 << 6);
    goto LABEL_71;
  }
  uint64_t v70 = (void *)(v56 + 5);
  while (v118 != v70)
  {
    unint64_t v69 = *(void *)&v119[8 * (void)v70];
    uint64_t v70 = (char *)v70 + 1;
    if (v69)
    {
      unint64_t v65 = (unint64_t)v70 - 1;
      goto LABEL_70;
    }
  }
LABEL_86:
  sub_10052E1EC();
  uint64_t v107 = v112;
  *(void *)uint64_t v112 = &_swiftEmptySetSingleton;
  *((void *)v107 + 1) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_100D0E0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v150 = a2;
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v171 = (uint64_t)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v166 = (char *)&v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v155 = (char *)&v150 - v13;
  __chkstk_darwin(v14, v15);
  long long v170 = (char *)&v150 - v16;
  __chkstk_darwin(v17, v18);
  int v175 = (char *)&v150 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v150 - v22;
  __chkstk_darwin(v24, v25);
  v172 = (char *)&v150 - v26;
  uint64_t v27 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v27 - 8, v28);
  v165 = (char *)&v150 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  uint64_t v158 = (char *)&v150 - v32;
  __chkstk_darwin(v33, v34);
  uint64_t v174 = (char *)&v150 - v35;
  unint64_t v182 = (unint64_t)&_swiftEmptySetSingleton;
  unint64_t v183 = (unint64_t)&_swiftEmptySetSingleton;
  unint64_t v36 = *(void **)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  uint64_t v173 = v2;
  unint64_t v37 = *(void **)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer];
  uint64_t v38 = *(char **)(a1 + 16);
  uint64_t v39 = v7;
  uint64_t v176 = v7;
  unsigned int v168 = v23;
  uint64_t v151 = v8;
  id v152 = v37;
  id v159 = v36;
  uint64_t v154 = (void (**)(char *, uint64_t, uint64_t))a1;
  if (v38)
  {
    id v41 = *(char **)(v8 + 16);
    uint64_t v40 = (char **)(v8 + 16);
    uint64_t v169 = v41;
    uint64_t v42 = (char *)(a1 + ((*((unsigned __int8 *)v40 + 64) + 32) & ~(unint64_t)*((unsigned __int8 *)v40 + 64)));
    int64_t v43 = (int64_t)v40[7];
    uint64_t v44 = v40 + 5;
    uint64_t v167 = (unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 4);
    uint64_t v161 = (void (**)(char *, char *, uint64_t))(v40 + 2);
    int64_t v162 = v43;
    uint64_t v160 = v40 - 1;
    uint64_t v157 = v36;
    uint64_t v156 = v37;
    unint64_t v45 = v40;
    swift_bridgeObjectRetain();
    uint64_t v46 = (void (*)(char *, char *, uint64_t))v169;
    uint64_t v47 = v174;
    uint64_t v48 = v172;
    uint64_t v163 = v44;
    uint64_t v177 = v45;
    ((void (*)(char *, char *, uint64_t))v169)(v174, v42, v7);
    while (1)
    {
      *(void *)&long long v164 = *v44;
      ((void (*)(char *, void, uint64_t, uint64_t))v164)(v47, 0, 1, v7);
      if ((*v167)(v47, 1, v7) == 1) {
        goto LABEL_16;
      }
      uint64_t v178 = v42;
      uint64_t v179 = v38;
      (*v161)(v48, v47, v7);
      char v50 = v48;
      uint64_t v51 = v46;
      uint64_t v52 = *(void (**)(uint64_t))(**(void **)&v157[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                           + 256);
      id v53 = v157;
      uint64_t v54 = swift_retain();
      v52(v54);
      uint64_t v55 = v175;

      swift_release();
      char v56 = static UUID.== infix(_:_:)();
      unint64_t v57 = *v160;
      ((void (*)(char *, uint64_t))*v160)(v23, v7);
      v51(v55, v50, v7);
      if (v56) {
        break;
      }
      uint64_t v58 = *(void (**)(uint64_t))(**(void **)(v156 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 256);
      uint64_t v59 = swift_retain();
      v58(v59);
      uint64_t v60 = v175;
      swift_release();
      char v61 = static UUID.== infix(_:_:)();
      ((void (*)(char *, uint64_t))v57)(v23, v7);
      ((void (*)(char *, uint64_t))v57)(v60, v7);
      uint64_t v44 = v163;
      uint64_t v49 = v179;
      if (v61) {
        goto LABEL_4;
      }
      uint64_t v62 = v172;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      id v64 = [v173 getBoardItemForUUID:isa];

      uint64_t v47 = v174;
      if (v64)
      {
        sub_100CB7040(v184, v64);
      }
      ((void (*)(char *, uint64_t))v57)(v62, v176);
      uint64_t v48 = v62;
LABEL_5:
      uint64_t v42 = &v178[v162];
      uint64_t v38 = v49 - 1;
      uint64_t v7 = v176;
      uint64_t v23 = v168;
      uint64_t v46 = (void (*)(char *, char *, uint64_t))v169;
      if (!v38)
      {
        uint64_t v39 = v176;
        unint64_t v65 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v164;
        goto LABEL_15;
      }
      ((void (*)(char *, char *, uint64_t))v169)(v47, v42, v176);
    }
    ((void (*)(char *, uint64_t))v57)(v55, v7);
    uint64_t v44 = v163;
    uint64_t v49 = v179;
LABEL_4:
    uint64_t v48 = v172;
    ((void (*)(char *, uint64_t))v57)(v172, v7);
    uint64_t v47 = v174;
    goto LABEL_5;
  }
  unint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  id v66 = v36;
  id v67 = v37;
  swift_bridgeObjectRetain();
  uint64_t v47 = v174;
LABEL_15:
  uint64_t v7 = v39;
  v65(v47, 1, 1, v39);
LABEL_16:
  swift_bridgeObjectRelease();
  unint64_t v68 = v182;
  if ((v182 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v69 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v69 = *(void *)(v182 + 16);
  }
  uint64_t v70 = v7;
  if (!v69)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
LABEL_100:
      uint64_t v146 = _CocoaArrayWrapper.endIndex.getter();
      id v73 = v152;
      if (v146)
      {
        sub_100508DCC((unint64_t)_swiftEmptyArrayStorage);
        Swift::Int v144 = v147;

        return (void *)v144;
      }
LABEL_103:

      return &_swiftEmptySetSingleton;
    }
LABEL_96:

    return &_swiftEmptySetSingleton;
  }
  int v153 = 0;
  uint64_t v169 = (char *)OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v177 = (char **)(v151 + 8);
  uint64_t v167 = (unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48);
  uint64_t v154 = (void (**)(char *, uint64_t, uint64_t))(v151 + 32);
  long long v164 = xmmword_10117DF40;
  uint64_t v160 = (char **)((char *)&type metadata for Swift.AnyObject + 8);
LABEL_22:
  if ((v68 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
    if (v71)
    {
      unint64_t v182 = (unint64_t)&_swiftEmptySetSingleton;
      __CocoaSet.makeIterator()();
      type metadata accessor for CRLBoardItem(0);
      sub_100D15428((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
      Set.Iterator.init(_cocoa:)();
      unint64_t v68 = (unint64_t)v184[0];
      uint64_t v163 = v184[1];
      uint64_t v72 = (uint64_t)v184[2];
      id v73 = v184[3];
      id v74 = v184[4];
      goto LABEL_30;
    }
LABEL_93:
    if (v153)
    {
      uint64_t v142 = v150;
      swift_bridgeObjectRetain();
      uint64_t v143 = swift_bridgeObjectRetain();
      Swift::Int v144 = sub_100D1DD34(v143, v142);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return (void *)v144;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1181, (uint64_t)"resolveParentHierarchy didn't find root, maybe in a loop? or maybe rootContainer was sent as only input param", 109, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1181);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
      goto LABEL_100;
    }
    goto LABEL_96;
  }
  if (!*(void *)(v68 + 16)) {
    goto LABEL_93;
  }
  id v73 = 0;
  unint64_t v182 = (unint64_t)&_swiftEmptySetSingleton;
  uint64_t v75 = -1 << *(unsigned char *)(v68 + 32);
  uint64_t v76 = *(void *)(v68 + 56);
  uint64_t v163 = (void *)(v68 + 56);
  uint64_t v72 = ~v75;
  uint64_t v77 = -v75;
  if (v77 < 64) {
    uint64_t v78 = ~(-1 << v77);
  }
  else {
    uint64_t v78 = -1;
  }
  id v74 = (id)(v78 & v76);
LABEL_30:
  uint64_t v157 = (char *)v72;
  uint64_t v161 = (void (**)(char *, char *, uint64_t))(v68 & 0x7FFFFFFFFFFFFFFFLL);
  int64_t v162 = (unint64_t)(v72 + 64) >> 6;
  v172 = (char *)v68;
LABEL_31:
  unint64_t v79 = (unint64_t)v74;
  while (1)
  {
    while (1)
    {
      if ((v68 & 0x8000000000000000) != 0)
      {
        uint64_t v87 = __CocoaSet.Iterator.next()();
        if (!v87) {
          goto LABEL_21;
        }
        uint64_t v180 = v87;
        type metadata accessor for CRLBoardItem(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        unint64_t v88 = v181[0];
        swift_unknownObjectRelease();
        uint64_t v86 = (char *)v73;
        uint64_t v84 = v79;
        if (!v88) {
          goto LABEL_21;
        }
      }
      else
      {
        if (v79)
        {
          uint64_t v84 = (v79 - 1) & v79;
          unint64_t v85 = __clz(__rbit64(v79)) | ((void)v73 << 6);
          uint64_t v86 = (char *)v73;
        }
        else
        {
          uint64_t v89 = (uint64_t)v73 + 1;
          if (__OFADD__(v73, 1))
          {
            __break(1u);
            goto LABEL_103;
          }
          if (v89 >= v162) {
            goto LABEL_21;
          }
          unint64_t v90 = v163[v89];
          uint64_t v86 = (char *)v73 + 1;
          if (!v90)
          {
            uint64_t v86 = (char *)v73 + 2;
            if ((uint64_t)v73 + 2 >= v162) {
              goto LABEL_21;
            }
            unint64_t v90 = v163[(void)v86];
            if (!v90)
            {
              uint64_t v86 = (char *)v73 + 3;
              if ((uint64_t)v73 + 3 >= v162) {
                goto LABEL_21;
              }
              unint64_t v90 = v163[(void)v86];
              if (!v90)
              {
                uint64_t v86 = (char *)v73 + 4;
                if ((uint64_t)v73 + 4 >= v162) {
                  goto LABEL_21;
                }
                unint64_t v90 = v163[(void)v86];
                if (!v90)
                {
                  uint64_t v91 = (char *)v73 + 5;
                  while ((char *)v162 != v91)
                  {
                    unint64_t v90 = v163[(void)v91++];
                    if (v90)
                    {
                      uint64_t v86 = v91 - 1;
                      goto LABEL_54;
                    }
                  }
LABEL_21:
                  sub_10052E1EC();
                  unint64_t v68 = v182;
                  goto LABEL_22;
                }
              }
            }
          }
LABEL_54:
          uint64_t v84 = (v90 - 1) & v90;
          unint64_t v85 = __clz(__rbit64(v90)) + ((void)v86 << 6);
        }
        unint64_t v88 = *(id *)(*(void *)(v68 + 48) + 8 * v85);
        if (!v88) {
          goto LABEL_21;
        }
      }
      uint64_t v178 = (char *)v84;
      uint64_t v179 = v86;
      uint64_t v92 = *(void (**)(void))((swift_isaMask & *v88) + 0x88);
      uint64_t v93 = v88;
      v92();
      uint64_t v94 = *(void *)&v169[(void)v173] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v95 = v94;
      uint64_t v96 = v171;
      sub_100D1E720(v95, v171, type metadata accessor for CRLBoardCRDTData);
      swift_retain();
      sub_1005057FC(&qword_101674550);
      uint64_t v97 = v170;
      CRRegister.wrappedValue.getter();
      sub_100D1A69C(v96, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      LOBYTE(v96) = static UUID.== infix(_:_:)();
      uint64_t v98 = v97;
      uint64_t v99 = (void (*)(char *, uint64_t))*v177;
      ((void (*)(char *, uint64_t))*v177)(v98, v70);
      v99(v23, v70);
      if (v96) {
        goto LABEL_67;
      }
      int v175 = (char *)type metadata accessor for CRLBoardItem(0);
      uint64_t v100 = swift_dynamicCastClass();
      if (!v100)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_getParentOf(transactable:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1315, (uint64_t)"unknown type", 12, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_getParentOf(transactable:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1315);
LABEL_67:

        goto LABEL_68;
      }
      uint64_t v101 = (void *)v100;
      if (swift_unknownObjectWeakLoadStrong())
      {

        break;
      }
      uint64_t v174 = (char *)v99;
      unint64_t v106 = *(void (**)(uint64_t))((swift_isaMask & *v101) + 0xB8);
      uint64_t v107 = swift_unknownObjectRetain();
      uint64_t v108 = (uint64_t)v158;
      v106(v107);
      uint64_t v70 = v176;
      if ((*v167)((char *)v108, 1, v176) == 1)
      {

        sub_100522F00(v108, (uint64_t *)&unk_101674520);
        uint64_t v99 = (void (*)(char *, uint64_t))v174;
        goto LABEL_67;
      }
      unint64_t v131 = v155;
      (*v154)(v155, v108, v70);
      Class v132 = UUID._bridgeToObjectiveC()().super.isa;
      id v133 = [v173 getBoardItemForUUID:v132];

      uint64_t v99 = (void (*)(char *, uint64_t))v174;
      ((void (*)(char *, uint64_t))v174)(v131, v70);

      uint64_t v23 = v168;
      if (v133) {
        break;
      }
LABEL_68:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v164;
      Swift::String v110 = (char *)v99;
      uint64_t v111 = v166;
      v92();
      uint64_t v112 = UUID.uuidString.getter();
      uint64_t v114 = v113;
      uint64_t v174 = v110;
      ((void (*)(char *, uint64_t))v110)(v111, v176);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v115 = sub_100528BE4();
      *(void *)(inited + 32) = v112;
      int v175 = (char *)(inited + 32);
      *(void *)(inited + 64) = v115;
      *(void *)(inited + 40) = v114;
      unint64_t v116 = v93;
      id v117 = [v116 description];
      uint64_t v118 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v120 = v119;

      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v115;
      *(void *)(inited + 72) = v118;
      *(void *)(inited + 80) = v120;
      uint64_t v121 = v176;
      uint64_t v122 = (uint64_t)v165;
      (*(void (**)(void))((swift_isaMask & *v116) + 0xB8))();
      if ((*v167)((char *)v122, 1, v121) == 1)
      {
        sub_100522F00(v122, (uint64_t *)&unk_101674520);
        Class v80 = (uint64_t *)(inited + 112);
        *(void *)(inited + 136) = &type metadata for String;
        *(void *)(inited + 144) = v115;
        uint64_t v81 = v168;
        uint64_t v82 = v121;
LABEL_33:
        *Class v80 = 7104878;
        unint64_t v83 = 0xE300000000000000;
        goto LABEL_34;
      }
      uint64_t v123 = UUID.uuidString.getter();
      unint64_t v83 = v124;
      uint64_t v82 = v121;
      ((void (*)(uint64_t, uint64_t))v174)(v122, v121);
      Class v80 = (uint64_t *)(inited + 112);
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v115;
      if (!v83)
      {
        uint64_t v81 = v168;
        goto LABEL_33;
      }
      *Class v80 = v123;
      uint64_t v81 = v168;
LABEL_34:
      *(void *)(inited + 120) = v83;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1175, (uint64_t)"BoardItem %{public}@%{public}@ has no parentItem for parentUUID %{public}@", 74, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1175);

      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      unint64_t v79 = (unint64_t)v178;
      id v73 = v179;
      uint64_t v23 = v81;
      unint64_t v68 = (unint64_t)v172;
      uint64_t v70 = v82;
    }
    uint64_t v102 = swift_dynamicCastClass();
    if (!v102) {
      break;
    }
    uint64_t v103 = (void *)v102;
    unint64_t v104 = v183;
    unint64_t v68 = (unint64_t)v172;
    if ((v183 & 0xC000000000000001) != 0)
    {
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      char v105 = __CocoaSet.contains(_:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if ((v105 & 1) == 0) {
        goto LABEL_89;
      }
      swift_unknownObjectRelease_n();

      unint64_t v79 = (unint64_t)v178;
      id v73 = v179;
    }
    else
    {
      if (!*(void *)(v183 + 16))
      {
        swift_unknownObjectRetain();
LABEL_89:
        swift_unknownObjectRetain();
        sub_100CB7040(v181, v103);

        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        char v141 = static NSObject.== infix(_:_:)();
        id v74 = v178;
        if (v141)
        {
          swift_unknownObjectRelease_n();

          int v153 = 1;
        }
        else
        {
          sub_100CB7040(v181, v103);

          swift_unknownObjectRelease();
        }
        id v73 = v179;
        goto LABEL_31;
      }
      Swift::Int v125 = *(void *)(v183 + 40);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      Swift::Int v126 = NSObject._rawHashValue(seed:)(v125);
      uint64_t v127 = -1 << *(unsigned char *)(v104 + 32);
      unint64_t v128 = v126 & ~v127;
      uint64_t v174 = (char *)(v104 + 56);
      if (((*(void *)(v104 + 56 + ((v128 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v128) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v70 = v176;
        goto LABEL_89;
      }
      id v129 = *(id *)(*(void *)(v104 + 48) + 8 * v128);
      char v130 = static NSObject.== infix(_:_:)();

      if (v130)
      {
        swift_unknownObjectRelease_n();

        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v156 = ~v127;
        unint64_t v134 = (v128 + 1) & ~v127;
        if (((*(void *)&v174[(v134 >> 3) & 0xFFFFFFFFFFFFFF8] >> v134) & 1) == 0) {
          goto LABEL_88;
        }
        id v135 = *(id *)(*(void *)(v104 + 48) + 8 * v134);
        char v136 = static NSObject.== infix(_:_:)();

        if ((v136 & 1) == 0)
        {
          for (unint64_t i = v134 + 1; ; unint64_t i = v138 + 1)
          {
            unint64_t v138 = i & v156;
            if (((*(void *)&v174[(v138 >> 3) & 0xFFFFFFFFFFFFFF8] >> v138) & 1) == 0) {
              break;
            }
            id v139 = *(id *)(*(void *)(v104 + 48) + 8 * v138);
            char v140 = static NSObject.== infix(_:_:)();

            if (v140) {
              goto LABEL_80;
            }
          }
LABEL_88:
          swift_bridgeObjectRelease();
          uint64_t v70 = v176;
          uint64_t v23 = v168;
          goto LABEL_89;
        }
LABEL_80:

        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
      }
      unint64_t v79 = (unint64_t)v178;
      id v73 = v179;
      uint64_t v70 = v176;
      uint64_t v23 = v168;
    }
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1162, (uint64_t)"Found a non board item parent somehow", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Found a non board item parent somehow");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"resolveAncestors(for:ignoringIds:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1162);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v148, v149);
  uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100D0F5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v101 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v100 = (char *)&v89 - v11;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v102 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16)) {
    return &_swiftEmptySetSingleton;
  }
  id v15 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  unint64_t v16 = sub_100957780((uint64_t)v15);
  if ((v17 & 1) == 0)
  {

    return &_swiftEmptySetSingleton;
  }
  uint64_t v93 = a2;
  uint64_t v91 = a1;
  uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  id v92 = v15;

  uint64_t v98 = v6 + 16;
  uint64_t v99 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v97 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v96 = (uint64_t (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v90 = v6;
  uint64_t v95 = (void (**)(char *, uint64_t))(v6 + 8);
  while (2)
  {
    unint64_t v19 = v18 & 0xC000000000000001;
    LODWORD(v103) = (v18 & 0xC000000000000001) != 0;
    uint64_t v94 = v18 + 80;
    while (1)
    {
      if (v19)
      {
        if (__CocoaSet.count.getter() >= 2) {
          goto LABEL_80;
        }
        unint64_t v25 = __CocoaSet.startIndex.getter();
        uint64_t v20 = v26;
        __CocoaSet.endIndex.getter();
        char v27 = static __CocoaSet.Index.== infix(_:_:)();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v28 = v25;
        if (v27) {
          goto LABEL_6;
        }
      }
      else
      {
        if (*(void *)(v18 + 16) > 1uLL) {
          goto LABEL_80;
        }
        char v29 = *(unsigned char *)(v18 + 32);
        uint64_t v28 = 1 << v29;
        unint64_t v30 = *(void *)(v18 + 56);
        if (v30)
        {
          uint64_t v31 = 0;
        }
        else
        {
          unsigned int v44 = v29 & 0x3F;
          if (v44 < 7) {
            goto LABEL_5;
          }
          unint64_t v30 = *(void *)(v18 + 64);
          if (v30)
          {
            uint64_t v31 = 1;
          }
          else
          {
            if (v44 < 8) {
              goto LABEL_5;
            }
            unint64_t v30 = *(void *)(v18 + 72);
            if (!v30)
            {
              uint64_t v46 = 0;
              unint64_t v47 = (unint64_t)(v28 + 63) >> 6;
              if (v47 <= 3) {
                unint64_t v47 = 3;
              }
              unint64_t v48 = v47 - 3;
              while (v48 != v46)
              {
                unint64_t v30 = *(void *)(v94 + 8 * v46++);
                if (v30)
                {
                  uint64_t v31 = v46 + 2;
                  goto LABEL_16;
                }
              }
LABEL_5:
              uint64_t v20 = *(unsigned int *)(v18 + 36);
              swift_bridgeObjectRetain();
LABEL_6:
              sub_10056A4C4(v28, v20, v19 != 0);
              swift_bridgeObjectRelease();
              if (!v19) {
                goto LABEL_22;
              }
              goto LABEL_7;
            }
            uint64_t v31 = 2;
          }
        }
LABEL_16:
        unint64_t v25 = __clz(__rbit64(v30)) + (v31 << 6);
        uint64_t v20 = *(unsigned int *)(v18 + 36);
        swift_bridgeObjectRetain();
        if (v25 == v28) {
          goto LABEL_6;
        }
      }
      sub_100666E14(v25, v20, (char)v103, v18);
      uint64_t v33 = v32;
      sub_10056A4C4(v25, v20, v19 != 0);
      swift_bridgeObjectRelease();
      type metadata accessor for CRLGroupItem();
      uint64_t v34 = swift_dynamicCastClass();
      if (!v34) {
        break;
      }
      uint64_t v35 = v34;
      unint64_t v36 = *(uint64_t (**)(uint64_t))(**(void **)(v34 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                              + 312);
      id v37 = v33;
      uint64_t v38 = swift_retain();
      char v39 = v36(v38);

      swift_release();
      if (v39)
      {
        swift_bridgeObjectRelease();
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_101177E70;
        *(void *)(inited + 32) = v35;
        unint64_t v104 = inited;
        specialized Array._endMutation()();
        unint64_t v70 = v104;
        if (v104 >> 62)
        {
          id v82 = v37;
          swift_bridgeObjectRetain();
          uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v83) {
            goto LABEL_75;
          }
LABEL_66:
          sub_100508DCC(v70);
          uint64_t v18 = v73;
        }
        else
        {
          uint64_t v71 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v72 = v37;
          if (v71) {
            goto LABEL_66;
          }
LABEL_75:
          uint64_t v18 = (uint64_t)&_swiftEmptySetSingleton;
        }
        swift_bridgeObjectRelease();

        goto LABEL_80;
      }

      if (!v19) {
        goto LABEL_22;
      }
LABEL_7:
      uint64_t v21 = __CocoaSet.startIndex.getter();
      uint64_t v23 = v22;
      __CocoaSet.endIndex.getter();
      char v24 = static __CocoaSet.Index.== infix(_:_:)();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        goto LABEL_51;
      }
LABEL_8:
      sub_10056A4C4(v21, v23, v19 != 0);
      swift_bridgeObjectRelease();
    }

    if (v19) {
      goto LABEL_7;
    }
LABEL_22:
    char v40 = *(unsigned char *)(v18 + 32);
    uint64_t v21 = 1 << v40;
    unint64_t v41 = *(void *)(v18 + 56);
    if (v41)
    {
      uint64_t v42 = 0;
      goto LABEL_24;
    }
    unsigned int v45 = v40 & 0x3F;
    if (v45 < 7) {
      goto LABEL_50;
    }
    unint64_t v41 = *(void *)(v18 + 64);
    if (v41)
    {
      uint64_t v42 = 1;
      goto LABEL_24;
    }
    if (v45 < 8)
    {
LABEL_50:
      uint64_t v23 = *(unsigned int *)(v18 + 36);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    unint64_t v41 = *(void *)(v18 + 72);
    if (!v41)
    {
      uint64_t v49 = 0;
      unint64_t v50 = (unint64_t)(v21 + 63) >> 6;
      if (v50 <= 3) {
        unint64_t v50 = 3;
      }
      unint64_t v51 = v50 - 3;
      while (v51 != v49)
      {
        unint64_t v41 = *(void *)(v94 + 8 * v49++);
        if (v41)
        {
          uint64_t v42 = v49 + 2;
          goto LABEL_24;
        }
      }
      goto LABEL_50;
    }
    uint64_t v42 = 2;
LABEL_24:
    unint64_t v43 = __clz(__rbit64(v41)) + (v42 << 6);
    uint64_t v23 = *(unsigned int *)(v18 + 36);
    swift_bridgeObjectRetain();
    if (v43 == v21) {
      goto LABEL_8;
    }
    uint64_t v21 = v43;
LABEL_51:
    char v52 = v19 != 0;
    sub_100666E14(v21, v23, (char)v103, v18);
    uint64_t v54 = v53;
    sub_10056A4C4(v21, v23, v52);
    swift_bridgeObjectRelease_n();
    uint64_t v55 = *(void *)(v93 + 16);
    char v56 = v99;
    if (v55)
    {
      unint64_t v89 = (unint64_t)v99 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v57 = v93 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
      uint64_t v94 = *(void *)(v90 + 72);
      uint64_t v103 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 16);
      swift_bridgeObjectRetain();
      uint64_t v58 = v102;
      while (1)
      {
        v103(v58, v57, v5);
        uint64_t v59 = *v56;
        (*v56)(v58, 0, 1, v5);
        if ((*v97)(v58, 1, v5) == 1) {
          break;
        }
        uint64_t v60 = v100;
        uint64_t v61 = (*v96)(v100, v58, v5);
        uint64_t v62 = v101;
        (*(void (**)(uint64_t))((swift_isaMask & *v54) + 0x88))(v61);
        char v63 = static UUID.== infix(_:_:)();
        id v64 = *v95;
        (*v95)(v62, v5);
        v64(v60, v5);
        if (v63)
        {
          swift_bridgeObjectRelease();
          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t v74 = swift_initStackObject();
          *(_OWORD *)(v74 + 16) = xmmword_101177E70;
          *(void *)(v74 + 32) = v54;
          unint64_t v104 = v74;
          specialized Array._endMutation()();
          unint64_t v75 = v104;
          if (v104 >> 62)
          {
            uint64_t v84 = v54;
            swift_bridgeObjectRetain();
            uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v85) {
              goto LABEL_69;
            }
          }
          else
          {
            uint64_t v76 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
            uint64_t v77 = v54;
            if (v76) {
              goto LABEL_69;
            }
          }
          uint64_t v18 = (uint64_t)&_swiftEmptySetSingleton;
          goto LABEL_79;
        }
        v57 += v94;
        --v55;
        uint64_t v58 = v102;
        char v56 = v99;
        if (!v55) {
          goto LABEL_58;
        }
      }
    }
    else
    {
      uint64_t v59 = *v99;
      swift_bridgeObjectRetain();
      uint64_t v58 = v102;
LABEL_58:
      v59(v58, 1, 1, v5);
    }
    swift_bridgeObjectRelease();
    uint64_t v65 = v91;
    if (*(void *)(v91 + 16))
    {
      id v66 = v54;
      unint64_t v67 = sub_100957780((uint64_t)v66);
      if (v68)
      {
        uint64_t v18 = *(void *)(*(void *)(v65 + 56) + 8 * v67);
        swift_bridgeObjectRetain();

        continue;
      }
    }
    break;
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v79 = swift_initStackObject();
  *(_OWORD *)(v79 + 16) = xmmword_101177E70;
  *(void *)(v79 + 32) = v54;
  unint64_t v104 = v79;
  specialized Array._endMutation()();
  unint64_t v75 = v104;
  if (v104 >> 62)
  {
    uint64_t v87 = v54;
    swift_bridgeObjectRetain();
    uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v88) {
      goto LABEL_83;
    }
LABEL_69:
    sub_100508DCC(v75);
    uint64_t v18 = v78;
  }
  else
  {
    uint64_t v80 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v81 = v54;
    if (v80) {
      goto LABEL_69;
    }
LABEL_83:
    uint64_t v18 = (uint64_t)&_swiftEmptySetSingleton;
  }
LABEL_79:
  swift_bridgeObjectRelease();

LABEL_80:
  return (void *)v18;
}

uint64_t sub_100D100B4(uint64_t a1)
{
  uint64_t v138 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v138 - 8);
  __chkstk_darwin(v138, v4);
  unint64_t v137 = &v123[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v123[-v8];
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v10 - 8, v11);
  char v136 = &v123[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13, v14);
  unint64_t v16 = &v123[-v15];
  char v140 = v1;
  char v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  unint64_t v147 = (unint64_t)&_swiftEmptySetSingleton;
  uint64_t v18 = *(void *)(a1 + 16);
  id v126 = v17;
  id v135 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v3;
  *(void *)&long long v134 = a1;
  if (v18)
  {
    uint64_t v20 = *(char **)(v3 + 16);
    unint64_t v19 = v3 + 16;
    uint64_t v21 = a1 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
    id v142 = *(id *)(v19 + 56);
    uint64_t v143 = v20;
    uint64_t v22 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v23 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 32);
    char v141 = (void (*)(unsigned char *, uint64_t))(v19 + 16);
    unint64_t v144 = v19;
    id v139 = (void (**)(unsigned char *, uint64_t))(v19 - 8);
    id v24 = v17;
    swift_bridgeObjectRetain();
    id v133 = (void (**)(unsigned char *, uint64_t))((v19 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000);
    while (1)
    {
      uint64_t v25 = v138;
      ((void (*)(unsigned char *, uint64_t, uint64_t))v143)(v16, v21, v138);
      uint64_t v26 = *v22;
      (*v22)(v16, 0, 1, v25);
      if ((*v23)(v16, 1, v25) == 1) {
        break;
      }
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))v141)(v9, v16, v25);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*v139)(v9, v25);
      id v28 = [v140 getBoardItemForUUID:isa];

      if (v28)
      {
        sub_100CB7040(v148, v28);
      }
      v21 += (uint64_t)v142;
      if (!--v18)
      {
        v26(v16, 1, 1, v138);
        break;
      }
    }
  }
  else
  {
    char v29 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    id v30 = v17;
    swift_bridgeObjectRetain();
    v29(v16, 1, 1, v138);
  }
  swift_bridgeObjectRelease();
  unint64_t v31 = v147;
  if ((v147 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)(v147 + 16);
  }
  uint64_t v33 = v138;
  if (!v32)
  {
    swift_bridgeObjectRelease();
    unint64_t v120 = sub_100A3C924((uint64_t)_swiftEmptyArrayStorage);

LABEL_91:
    swift_bridgeObjectRelease();
    return v120;
  }
  int v124 = 0;
  id v133 = (void (**)(unsigned char *, uint64_t))(v135 + 1);
  v135 += 6;
  uint64_t v127 = _swiftEmptyDictionarySingleton;
  long long v134 = xmmword_10117DF40;
  long long v125 = xmmword_101177E70;
  id v129 = (char *)&type metadata for Swift.AnyObject + 8;
LABEL_15:
  if ((v31 & 0xC000000000000001) == 0)
  {
    if (*(void *)(v31 + 16))
    {
      unint64_t v36 = 0;
      unint64_t v147 = (unint64_t)&_swiftEmptySetSingleton;
      uint64_t v38 = -1 << *(unsigned char *)(v31 + 32);
      uint64_t v39 = *(void *)(v31 + 56);
      Class v132 = (void *)(v31 + 56);
      uint64_t v35 = ~v38;
      uint64_t v40 = -v38;
      if (v40 < 64) {
        uint64_t v41 = ~(-1 << v40);
      }
      else {
        uint64_t v41 = -1;
      }
      unint64_t v37 = v41 & v39;
      goto LABEL_23;
    }
    goto LABEL_87;
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = __CocoaSet.count.getter();
  swift_bridgeObjectRelease();
  if (!v34)
  {
LABEL_87:
    if (v124)
    {

      swift_bridgeObjectRelease();
      return (uint64_t)v127;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"parentMapOfItems(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1260, (uint64_t)"resolveToSiblings didn't find root, maybe in a loop?", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"parentMapOfItems(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1260);
    swift_bridgeObjectRelease();
    unint64_t v120 = sub_100A3C924((uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_91;
  }
  unint64_t v147 = (unint64_t)&_swiftEmptySetSingleton;
  __CocoaSet.makeIterator()();
  type metadata accessor for CRLBoardItem(0);
  sub_100D15428((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
  Set.Iterator.init(_cocoa:)();
  unint64_t v31 = (unint64_t)v148[0];
  Class v132 = v148[1];
  uint64_t v35 = (uint64_t)v148[2];
  unint64_t v36 = (char *)v148[3];
  unint64_t v37 = (unint64_t)v148[4];
LABEL_23:
  uint64_t v128 = v35;
  uint64_t v130 = v31 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v131 = (unint64_t)(v35 + 64) >> 6;
  id v139 = (void (**)(unsigned char *, uint64_t))v31;
  while (2)
  {
    while (1)
    {
      id v42 = v36;
      while (1)
      {
        if ((v31 & 0x8000000000000000) != 0)
        {
          unint64_t v48 = (void *)__CocoaSet.Iterator.next()();
          if (!v48) {
            goto LABEL_14;
          }
          v145[0] = v48;
          type metadata accessor for CRLBoardItem(0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v49 = v146[0];
          swift_unknownObjectRelease();
          unint64_t v36 = (char *)v42;
          uint64_t v46 = v37;
          if (!v49) {
            goto LABEL_14;
          }
        }
        else
        {
          if (v37)
          {
            uint64_t v46 = (v37 - 1) & v37;
            unint64_t v47 = __clz(__rbit64(v37)) | ((void)v42 << 6);
            unint64_t v36 = (char *)v42;
          }
          else
          {
            uint64_t v50 = (uint64_t)v42 + 1;
            if (__OFADD__(v42, 1))
            {
              __break(1u);
LABEL_93:
              __break(1u);
LABEL_94:
              __break(1u);
LABEL_95:
              __break(1u);
              goto LABEL_96;
            }
            if (v50 >= v131) {
              goto LABEL_14;
            }
            unint64_t v51 = v132[v50];
            unint64_t v36 = (char *)v42 + 1;
            if (!v51)
            {
              unint64_t v36 = (char *)v42 + 2;
              if ((uint64_t)v42 + 2 >= v131) {
                goto LABEL_14;
              }
              unint64_t v51 = v132[(void)v36];
              if (!v51)
              {
                unint64_t v36 = (char *)v42 + 3;
                if ((uint64_t)v42 + 3 >= v131) {
                  goto LABEL_14;
                }
                unint64_t v51 = v132[(void)v36];
                if (!v51)
                {
                  unint64_t v36 = (char *)v42 + 4;
                  if ((uint64_t)v42 + 4 >= v131) {
                    goto LABEL_14;
                  }
                  unint64_t v51 = v132[(void)v36];
                  if (!v51)
                  {
                    char v52 = (char *)v42 + 5;
                    while ((char *)v131 != v52)
                    {
                      unint64_t v51 = v132[(void)v52++];
                      if (v51)
                      {
                        unint64_t v36 = v52 - 1;
                        goto LABEL_47;
                      }
                    }
LABEL_14:
                    sub_10052E1EC();
                    unint64_t v31 = v147;
                    goto LABEL_15;
                  }
                }
              }
            }
LABEL_47:
            uint64_t v46 = (v51 - 1) & v51;
            unint64_t v47 = __clz(__rbit64(v51)) + ((void)v36 << 6);
          }
          id v49 = *(id *)(*(void *)(v31 + 48) + 8 * v47);
          if (!v49) {
            goto LABEL_14;
          }
        }
        id v53 = v49;
        id v54 = sub_100D1A71C(v53, v140);

        unint64_t v144 = v46;
        if (v54) {
          break;
        }
        uint64_t v143 = v36;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v134;
        char v56 = v137;
        (*(void (**)(void))((swift_isaMask & *v53) + 0x88))();
        uint64_t v57 = UUID.uuidString.getter();
        uint64_t v59 = v58;
        char v141 = *v133;
        v141(v56, v33);
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v60 = sub_100528BE4();
        *(void *)(inited + 32) = v57;
        id v142 = (id)(inited + 32);
        *(void *)(inited + 64) = v60;
        *(void *)(inited + 40) = v59;
        uint64_t v61 = v53;
        id v62 = [v61 description];
        uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v65 = v64;

        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v60;
        *(void *)(inited + 72) = v63;
        *(void *)(inited + 80) = v65;
        uint64_t v66 = (uint64_t)v136;
        uint64_t v67 = v138;
        (*(void (**)(void))((swift_isaMask & *v61) + 0xB8))();
        if ((*v135)(v66, 1, v67) == 1)
        {
          sub_100522F00(v66, (uint64_t *)&unk_101674520);
          unint64_t v43 = (uint64_t *)(inited + 112);
          *(void *)(inited + 136) = &type metadata for String;
          *(void *)(inited + 144) = v60;
LABEL_26:
          unint64_t v31 = (unint64_t)v139;
          uint64_t v44 = v67;
          uint64_t *v43 = 7104878;
          unint64_t v45 = 0xE300000000000000;
          goto LABEL_27;
        }
        uint64_t v68 = UUID.uuidString.getter();
        unint64_t v45 = v69;
        v141((unsigned char *)v66, v67);
        unint64_t v43 = (uint64_t *)(inited + 112);
        *(void *)(inited + 136) = &type metadata for String;
        *(void *)(inited + 144) = v60;
        if (!v45) {
          goto LABEL_26;
        }
        uint64_t v44 = v67;
        uint64_t *v43 = v68;
        unint64_t v31 = (unint64_t)v139;
LABEL_27:
        *(void *)(inited + 120) = v45;
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"parentMapOfItems(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1254, (uint64_t)"BoardItem %{public}@%{public}@ has no parentItem for parentUUID %{public}@", 74, 2u, inited);
        sub_1005598CC(inited, (uint64_t)"parentMapOfItems(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1254);

        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
        id v42 = v143;
        unint64_t v37 = v144;
        uint64_t v33 = v44;
      }
      uint64_t v70 = type metadata accessor for CRLBoardItem(0);
      uint64_t v71 = swift_dynamicCastClass();
      if (!v71) {
        goto LABEL_97;
      }
      id v72 = (char *)v71;
      uint64_t v73 = v127[2];
      swift_unknownObjectRetain();
      char v141 = (void (*)(unsigned char *, uint64_t))v70;
      if (v73) {
        break;
      }
LABEL_61:
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v90 = swift_initStackObject();
      *(_OWORD *)(v90 + 16) = v125;
      *(void *)(v90 + 32) = v53;
      v146[0] = (id)v90;
      specialized Array._endMutation()();
      unint64_t v91 = (unint64_t)v146[0];
      if ((unint64_t)v146[0] >> 62)
      {
        uint64_t v100 = v53;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v101)
        {
LABEL_63:
          sub_100508DCC(v91);
          id v142 = v94;
          goto LABEL_73;
        }
      }
      else
      {
        uint64_t v92 = *(void *)(((unint64_t)v146[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v93 = v53;
        swift_unknownObjectRetain();
        if (v92) {
          goto LABEL_63;
        }
      }
      id v142 = &_swiftEmptySetSingleton;
LABEL_73:
      swift_bridgeObjectRelease();
      uint64_t v102 = v127;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v146[0] = v102;
      uint64_t v143 = v72;
      unint64_t v105 = sub_100957780((uint64_t)v72);
      uint64_t v106 = v102[2];
      BOOL v107 = (v104 & 1) == 0;
      uint64_t v108 = v106 + v107;
      if (__OFADD__(v106, v107)) {
        goto LABEL_93;
      }
      char v109 = v104;
      if (v102[3] >= v108)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_10098523C();
        }
      }
      else
      {
        sub_10096FB44(v108, isUniquelyReferenced_nonNull_native);
        unint64_t v110 = sub_100957780((uint64_t)v143);
        if ((v109 & 1) != (v111 & 1)) {
          goto LABEL_98;
        }
        unint64_t v105 = v110;
      }
      uint64_t v112 = v146[0];
      uint64_t v127 = v146[0];
      if (v109)
      {
        uint64_t v113 = *((void *)v146[0] + 7);
        swift_bridgeObjectRelease();
        *(void *)(v113 + 8 * v105) = v142;
        uint64_t v114 = v143;
      }
      else
      {
        *((void *)v146[0] + (v105 >> 6) + 8) |= 1 << v105;
        uint64_t v115 = 8 * v105;
        id v116 = v142;
        uint64_t v114 = v143;
        *(void *)(v112[6] + v115) = v143;
        *(void *)(v112[7] + v115) = v116;
        uint64_t v117 = v112[2];
        BOOL v98 = __OFADD__(v117, 1);
        uint64_t v118 = v117 + 1;
        if (v98) {
          goto LABEL_94;
        }
        v112[2] = v118;
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      if (static NSObject.== infix(_:_:)())
      {
        swift_unknownObjectRelease_n();

        int v124 = 1;
      }
      else
      {
        sub_100CB7040(v146, v114);

        swift_unknownObjectRelease();
      }
      unint64_t v37 = v144;
    }
    swift_unknownObjectRetain();
    uint64_t v74 = v127;
    unint64_t v75 = sub_100957780((uint64_t)v72);
    if ((v76 & 1) == 0)
    {
      swift_unknownObjectRelease();
      goto LABEL_61;
    }
    unint64_t v77 = *(void *)(v74[7] + 8 * v75);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    v146[0] = (id)v77;
    id v142 = v53;
    sub_100CB7040(v145, v142);

    uint64_t v143 = (char *)v146[0];
    swift_unknownObjectRetain();
    char v78 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = (uint64_t)v72;
    char v80 = v78;
    v145[0] = v74;
    uint64_t v81 = v79;
    unint64_t v83 = sub_100957780(v79);
    uint64_t v84 = v74[2];
    BOOL v85 = (v82 & 1) == 0;
    uint64_t v86 = v84 + v85;
    if (__OFADD__(v84, v85)) {
      goto LABEL_95;
    }
    char v87 = v82;
    if (v74[3] >= v86)
    {
      if ((v80 & 1) == 0) {
        sub_10098523C();
      }
    }
    else
    {
      sub_10096FB44(v86, v80);
      unint64_t v88 = sub_100957780(v81);
      if ((v87 & 1) != (v89 & 1)) {
        goto LABEL_98;
      }
      unint64_t v83 = v88;
    }
    uint64_t v95 = v145[0];
    uint64_t v127 = v145[0];
    if (v87)
    {
      uint64_t v96 = *((void *)v145[0] + 7);
      swift_bridgeObjectRelease();
      *(void *)(v96 + 8 * v83) = v143;
LABEL_70:

      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v33 = v138;
      unint64_t v37 = v144;
      continue;
    }
    break;
  }
  *((void *)v145[0] + (v83 >> 6) + 8) |= 1 << v83;
  *(void *)(v95[6] + 8 * v83) = v81;
  *(void *)(v95[7] + 8 * v83) = v143;
  uint64_t v97 = v95[2];
  BOOL v98 = __OFADD__(v97, 1);
  uint64_t v99 = v97 + 1;
  if (!v98)
  {
    v95[2] = v99;
    swift_unknownObjectRetain();
    goto LABEL_70;
  }
LABEL_96:
  __break(1u);
LABEL_97:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"parentMapOfItems(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1234, (uint64_t)"Found a non board item parent somehow", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Found a non board item parent somehow");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"parentMapOfItems(from:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1234);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v121, v122);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
LABEL_98:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_100D110BC()
{
  return [v0 fixUp];
}

id sub_100D110CC()
{
  return [v0 shouldEnsureParentsOfCreatedObjects];
}

uint64_t sub_100D110F0(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  type metadata accessor for CRLBoardCRDTData(0);
  v2[7] = swift_task_alloc();
  type metadata accessor for UUID();
  v2[8] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_100D111D8, 0, 0);
}

uint64_t sub_100D111D8()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[5];
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v8, v3, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v3, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v9 = (uint64_t *)(*(void *)(v4 + v7) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  swift_bridgeObjectRetain();
  sub_100753370(v2, v10, v11, v1);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[10] = v12;
  v12[2] = v6;
  v12[3] = v1;
  v12[4] = v5;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[11] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100D113C0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v13, 0, 0, 0xD000000000000028, 0x8000000101283C50, sub_100D1D1A8, v12, (char *)&type metadata for () + 8);
}

uint64_t sub_100D113C0()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100D1157C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100D114DC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100D114DC()
{
  sub_100D1A69C(*(void *)(v0 + 72), type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100D1157C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_task_dealloc();
  sub_100D1A69C(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100D11620()
{
  v1[21] = v0;
  type metadata accessor for CRLBoardCRDTData(0);
  v1[22] = swift_task_alloc();
  type metadata accessor for UUID();
  v1[23] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v1[24] = swift_task_alloc();
  return _swift_task_switch(sub_100D11708, 0, 0);
}

uint64_t sub_100D11708()
{
  if (sub_1006A9B34())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
    return v1(1);
  }
  else
  {
    uint64_t v4 = v0[23];
    uint64_t v3 = v0[24];
    uint64_t v6 = v0[21];
    uint64_t v5 = v0[22];
    uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
    uint64_t v8 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v9 = *(void *)(v6 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D1E720(v9, v5, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100D1A69C(v5, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v10 = (uint64_t *)(*(void *)(v6 + v8) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_100753370(v4, v11, v12, v3);
    uint64_t v13 = swift_task_alloc();
    v0[25] = v13;
    *(void *)(v13 + 16) = v7;
    *(void *)(v13 + 24) = v3;
    uint64_t v14 = (void *)swift_task_alloc();
    v0[26] = v14;
    void *v14 = v0;
    v14[1] = sub_100D11968;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 28, 0, 0, 0xD00000000000002ELL, 0x8000000101283CA0, sub_100D1D650, v13, &type metadata for Bool);
  }
}

uint64_t sub_100D11968()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100D11B24;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100D11A84;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100D11A84()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 224);
  sub_100D1A69C(*(void *)(v0 + 192), type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100D11B24()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_task_dealloc();
  sub_100D1A69C(v1, type metadata accessor for CRLBoardIdentifier);
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Failed to check if board hasUnsyncedChanges %@", 46, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9(0);
}

uint64_t sub_100D11E74(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  id v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *id v4 = v2;
  v4[1] = sub_100D11F1C;
  return sub_100D11620();
}

uint64_t sub_100D11F1C(char a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 24);
  id v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_100D12064(uint64_t (*a1)(void, void), uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101699FF0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardDataStoreChangeSet(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  uint64_t v32 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v35 = (uint64_t)&v30 - v13;
  uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
  uint64_t v15 = *(void *)&v2[OBJC_IVAR____TtC8Freeform8CRLBoard_freehandDrawingBucketManager];
  uint64_t v40 = (void *)type metadata accessor for CRLBoard(0);
  uint64_t v41 = (uint64_t (*)())&off_10152A260;
  aBlock[0] = v2;
  uint64_t v16 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue;
  uint64_t v36 = v14;
  uint64_t v37 = v15;
  uint64_t v38 = aBlock;
  unint64_t v31 = v2;
  OS_dispatch_queue.sync<A>(execute:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  uint64_t v17 = v8;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t result = sub_100522F00((uint64_t)v6, (uint64_t *)&unk_101699FF0);
    if (v34) {
      return v34(0, 0);
    }
  }
  else
  {
    sub_100D1D0E4((uint64_t)v6, v35, type metadata accessor for CRLBoardDataStoreChangeSet);
    unint64_t v19 = *(NSObject **)(v14 + v16);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_100D1C224;
    *(void *)(v20 + 24) = v14;
    uint64_t v41 = sub_1006591F0;
    uint64_t v42 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_1006D9628;
    uint64_t v40 = &unk_10152A330;
    uint64_t v21 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v19, v21);
    _Block_release(v21);
    LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v19)
    {
      __break(1u);
    }
    else
    {
      uint64_t v22 = v31;
      uint64_t v23 = v32;
      uint64_t v24 = v35;
      sub_100D1E720(v35, v32, type metadata accessor for CRLBoardDataStoreChangeSet);
      unint64_t v25 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      uint64_t v26 = (void *)swift_allocObject();
      uint64_t v27 = v33;
      uint64_t v28 = (uint64_t)v34;
      v26[2] = v22;
      v26[3] = v28;
      v26[4] = v27;
      sub_100D1D0E4(v23, (uint64_t)v26 + v25, type metadata accessor for CRLBoardDataStoreChangeSet);
      char v29 = v22;
      sub_1005173A0(v28);
      sub_100C7CAA4(v24, (uint64_t)sub_100D1C3FC, (uint64_t)v26);
      swift_release();
      return sub_100D1A69C(v24, type metadata accessor for CRLBoardDataStoreChangeSet);
    }
  }
  return result;
}

uint64_t sub_100D124C4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101699680);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __n128 v6 = __chkstk_darwin(v2, v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v6);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_100D12064((uint64_t (*)(void, void))sub_100D1D514, v8);
  return swift_release();
}

uint64_t sub_100D12604(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_1005057FC(&qword_101699680);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_1005057FC(&qword_101699680);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_100D127DC(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_100D12854, 0, 0);
}

uint64_t sub_100D12854()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100D12950;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD000000000000019, 0x8000000101283C80, sub_100D1D478, v2, &type metadata for Bool);
}

uint64_t sub_100D12950()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100D12AEC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100D12A6C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100D12A6C()
{
  uint64_t v1 = *(void *)(v0 + 24);

  (*(void (**)(uint64_t, void, void))(v1 + 16))(v1, *(unsigned __int8 *)(v0 + 56), 0);
  _Block_release(*(const void **)(v0 + 24));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100D12AEC()
{
  uint64_t v1 = *(void *)(v0 + 24);

  swift_task_dealloc();
  uint64_t v2 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  (*(void (**)(uint64_t, void, void *))(v1 + 16))(v1, 0, v2);

  _Block_release(*(const void **)(v0 + 24));
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100D12B9C(uint64_t a1, uint64_t isEscapingClosureAtFileLocation, void (*a3)(uint64_t, void), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  unint64_t v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v16 = isEscapingClosureAtFileLocation;
    swift_errorRetain();
    if (qword_10166FB70 != -1) {
      goto LABEL_52;
    }
    goto LABEL_3;
  }
  uint64_t v67 = v19;
  uint64_t v72 = v10;
  uint64_t v32 = *(void *)(*(void *)(isEscapingClosureAtFileLocation
                              + OBJC_IVAR____TtC8Freeform8CRLBoard_freehandDrawingBucketManager)
                  + 16);
  swift_beginAccess();
  int64_t v33 = 0;
  uint64_t v34 = *(void *)(v32 + 16);
  uint64_t v35 = v34 + 64;
  uint64_t v36 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & *(void *)(v34 + 64);
  int64_t v39 = (unint64_t)(v36 + 63) >> 6;
  while (1)
  {
    if (v38)
    {
      unint64_t v40 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
      unint64_t v41 = v40 | (v33 << 6);
      goto LABEL_11;
    }
    int64_t v43 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v43 >= v39) {
      goto LABEL_29;
    }
    unint64_t v44 = *(void *)(v35 + 8 * v43);
    ++v33;
    if (!v44)
    {
      int64_t v33 = v43 + 1;
      if (v43 + 1 >= v39) {
        goto LABEL_29;
      }
      unint64_t v44 = *(void *)(v35 + 8 * v33);
      if (!v44)
      {
        int64_t v33 = v43 + 2;
        if (v43 + 2 >= v39) {
          goto LABEL_29;
        }
        unint64_t v44 = *(void *)(v35 + 8 * v33);
        if (!v44)
        {
          int64_t v33 = v43 + 3;
          if (v43 + 3 >= v39) {
            goto LABEL_29;
          }
          unint64_t v44 = *(void *)(v35 + 8 * v33);
          if (!v44) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v38 = (v44 - 1) & v44;
    unint64_t v41 = __clz(__rbit64(v44)) + (v33 << 6);
LABEL_11:
    uint64_t v42 = *(void *)(*(void *)(v34 + 56) + 8 * v41);
    *(unsigned char *)(v42 + *(void *)(*(void *)v42 + 136)) = 0;
  }
  int64_t v45 = v43 + 4;
  if (v45 >= v39)
  {
LABEL_29:
    p_aBlock = *(void ****)(a5 + *(int *)(type metadata accessor for CRLBoardDataStoreChangeSet(0) + 52));
    unint64_t v69 = v14;
    uint64_t v71 = a3;
    uint64_t v68 = a4;
    uint64_t v73 = isEscapingClosureAtFileLocation;
    uint64_t v70 = v11;
    if (!p_aBlock)
    {
      a4 = 0;
      goto LABEL_44;
    }
    if ((unint64_t)p_aBlock >> 62) {
      goto LABEL_57;
    }
    uint64_t v47 = *(void *)(((unint64_t)p_aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_32;
  }
  unint64_t v44 = *(void *)(v35 + 8 * v45);
  if (v44)
  {
    int64_t v33 = v45;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v33 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      break;
    }
    if (v33 >= v39) {
      goto LABEL_29;
    }
    unint64_t v44 = *(void *)(v35 + 8 * v33);
    ++v45;
    if (v44) {
      goto LABEL_28;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  swift_once();
LABEL_3:
  swift_beginAccess();
  uint64_t v20 = (void *)static OS_os_log.boardStore;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v22 = v20;
  uint64_t v23 = Error.localizedDescription.getter();
  uint64_t v25 = v24;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v23;
  *(void *)(inited + 40) = v25;
  uint64_t v26 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Saving board change set failed with error %@", 44, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v27 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges);
  uint64_t v28 = *(NSObject **)(v27 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_100D1C490;
  *(void *)(v29 + 24) = v27;
  char v80 = sub_100659320;
  uint64_t v81 = v29;
  aBlock = _NSConcreteStackBlock;
  uint64_t v77 = *(void *)"";
  char v78 = sub_1006D9628;
  uint64_t v79 = &unk_10152A470;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v28, v30);
  _Block_release(v30);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v28 & 1) == 0)
  {
    if (a3)
    {
      swift_errorRetain();
      a3(a1, 1);
      swift_errorRelease();
    }
    return swift_errorRelease();
  }
  __break(1u);
  while (2)
  {
    swift_once();
LABEL_45:
    swift_beginAccess();
    id v55 = (id)static OS_os_log.realTimeSync;
    uint64_t v56 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"CRLBoardChangeSet clearChanges()", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v15 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue;
    uint64_t v57 = *(NSObject **)(v29 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = v29;
    *(void *)(v58 + 24) = a4;
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = sub_100D1C478;
    *(void *)(v59 + 24) = v58;
    char v80 = sub_100659320;
    uint64_t v81 = v59;
    p_aBlock = &aBlock;
    aBlock = _NSConcreteStackBlock;
    uint64_t v77 = *(void *)"";
    char v78 = sub_1006D9628;
    uint64_t v79 = &unk_10152A3D0;
    unint64_t v60 = _Block_copy(&aBlock);
    uint64_t v16 = v81;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v57, v60);
    _Block_release(v60);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
      goto LABEL_56;
    }
    uint64_t v61 = *(NSObject **)(v29 + v15);
    uint64_t v62 = swift_allocObject();
    *(void *)(v62 + 16) = sub_100D1C490;
    *(void *)(v62 + 24) = v29;
    char v80 = sub_100659320;
    uint64_t v81 = v62;
    aBlock = _NSConcreteStackBlock;
    uint64_t v77 = *(void *)"";
    char v78 = sub_1006D9628;
    uint64_t v79 = &unk_10152A420;
    char isEscapingClosureAtFileLocation = (uint64_t)_Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v61, (dispatch_block_t)isEscapingClosureAtFileLocation);
    _Block_release((const void *)isEscapingClosureAtFileLocation);
    LOBYTE(v61) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v61)
    {
LABEL_56:
      __break(1u);
LABEL_57:
      swift_bridgeObjectRetain();
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_32:
      unint64_t v48 = _swiftEmptyArrayStorage;
      if (v47)
      {
        aBlock = (void **)_swiftEmptyArrayStorage;
        uint64_t result = sub_1006BB544(0, v47 & ~(v47 >> 63), 0);
        if (v47 < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v49 = 0;
        unint64_t v48 = (double *)aBlock;
        unint64_t v75 = p_aBlock;
        unint64_t v74 = (unint64_t)p_aBlock & 0xC000000000000001;
        uint64_t v50 = v15;
        unint64_t v51 = v67;
        do
        {
          if (v74)
          {
            uint64_t v52 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v52 = (uint64_t)v75[v49 + 4];
            swift_retain();
          }
          (*(void (**)(void))(*(void *)v52 + 256))();
          swift_release();
          aBlock = (void **)v48;
          unint64_t v54 = *((void *)v48 + 2);
          unint64_t v53 = *((void *)v48 + 3);
          if (v54 >= v53 >> 1)
          {
            sub_1006BB544(v53 > 1, v54 + 1, 1);
            unint64_t v48 = (double *)aBlock;
          }
          ++v49;
          *((void *)v48 + 2) = v54 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))((unint64_t)v48+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v54, v51, v50);
        }
        while (v47 != v49);
        char isEscapingClosureAtFileLocation = v73;
      }
      a4 = sub_100CDCB64((uint64_t)v48);
      swift_bridgeObjectRelease();
LABEL_44:
      uint64_t v29 = *(void *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges);
      if (qword_10166FBA0 != -1) {
        continue;
      }
      goto LABEL_45;
    }
    break;
  }
  if (v71) {
    v71(1, 0);
  }
  uint64_t v63 = v69;
  static Date.now.getter();
  Date.timeIntervalSince1970.getter();
  uint64_t v65 = v64;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v63, v72);
  *(void *)(v73 + OBJC_IVAR____TtC8Freeform8CRLBoard_lastSaveChangesTime) = v65;
  return result;
}

char *sub_100D135E4(char *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = *(void **)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
  uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_data];
  type metadata accessor for CRLContainerItemData(0);
  uint64_t v12 = swift_dynamicCastClassUnconditional();
  uint64_t v5 = swift_dynamicCastClassUnconditional();
  uint64_t v6 = *(void **)(*(void *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
  int v7 = a1[OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported];
  id v8 = objc_allocWithZone(ObjectType);
  id v13 = v6;
  id v9 = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_100D1ABB4(v9, v4, v12, v5, v6, v7);

  swift_release();
  swift_release();
  swift_release();

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

void *sub_100D13860()
{
  uint64_t v90 = type metadata accessor for PKDrawing();
  uint64_t v81 = *(void *)(v90 - 8);
  __chkstk_darwin(v90, v1);
  char v89 = &v80[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for PKStroke();
  uint64_t v96 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  *(void *)&CGFloat a = &v80[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v103 = &v80[-v9];
  __chkstk_darwin(v10, v11);
  char v104 = &v80[-v12];
  id v13 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  CGFloat v14 = COERCE_DOUBLE(sub_100D1451C((uint64_t)v13));

  *(double *)&unint64_t v15 = COERCE_DOUBLE([objc_allocWithZone((Class)NSMutableDictionary) init]);
  uint64_t v115 = _swiftEmptyArrayStorage;
  if (*(void *)&v14 >> 62) {
    goto LABEL_57;
  }
  uint64_t v16 = *(void *)((*(void *)&v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v16)
  {
    id v88 = (id)v15;
    *(double *)&unint64_t v15 = 0.0;
    unint64_t v87 = *(void *)&v14 & 0xC000000000000001;
    uint64_t v83 = *(void *)&v14 & 0xFFFFFFFFFFFFFF8;
    uint64_t v82 = *(void *)&v14 + 32;
    uint64_t v107 = v96 + 16;
    uint64_t v102 = (void (**)(unsigned char *, uint64_t))(v96 + 8);
    uint64_t v106 = (void (**)(char *, CGFloat, uint64_t))(v96 + 32);
    uint64_t v84 = (void (**)(unsigned char *, uint64_t))(v81 + 8);
    uint64_t v17 = &selRef_taggerStateOutsideCore;
    uint64_t v108 = v3;
    CGFloat v105 = a;
    double v86 = v14;
    uint64_t v85 = v16;
    while (1)
    {
      if (v87)
      {
        id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v29 = (char *)(v15 + 1);
        if (__OFADD__(v15, 1)) {
          goto LABEL_55;
        }
      }
      else
      {
        if (v15 >= *(void *)(v83 + 16)) {
          goto LABEL_56;
        }
        id v28 = *(id *)(v82 + 8 * v15);
        uint64_t v29 = (char *)(v15 + 1);
        if (__OFADD__(v15, 1)) {
          goto LABEL_55;
        }
      }
      uint64_t v93 = v29;
      CGFloat v14 = COERCE_DOUBLE(v28);
      CGFloat a = COERCE_DOUBLE(sub_100543298());
      CGFloat v92 = v14;

      if (*(void *)&a >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((*(void *)&a & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      CGFloat v91 = *(double *)&v15;
      if (v30) {
        break;
      }
      uint64_t v18 = _swiftEmptyArrayStorage;
LABEL_5:
      swift_bridgeObjectRelease();
      uint64_t v19 = swift_bridgeObjectRetain();
      sub_1006E3594(v19);
      t1.CGFloat a = 1.04272732e-306;
      t1.CGFloat b = -1.39234638e188;
      t2.CGFloat a = v91;
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      CGFloat a = t1.a;
      CGFloat b = t1.b;
      *(void *)&t1.CGFloat a = v18;
      swift_bridgeObjectRetain();
      sub_1005057FC(&qword_101699FD8);
      sub_100523288((unint64_t *)&unk_101699FE0, &qword_101699FD8);
      id v22 = v89;
      PKDrawing.init<A>(strokes:)();
      uint64_t v23 = PKDrawing.dataRepresentation()();
      unint64_t v25 = v24;
      uint64_t v26 = v22;
      uint64_t v3 = v108;
      (*v84)(v26, v90);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100510084(v23, v25);
      t1.CGFloat a = a;
      t1.CGFloat b = b;
      swift_bridgeObjectRetain();
      [v88 __swift_setObject:isa forKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      unint64_t v15 = (unint64_t)v93;
      CGFloat v14 = v86;
      if (v93 == (void *)v85)
      {
        swift_bridgeObjectRelease();
        unint64_t v69 = v115;
        unint64_t v15 = (unint64_t)v88;
        goto LABEL_59;
      }
    }
    unint64_t v31 = 0;
    unint64_t v99 = *(void *)&a & 0xC000000000000001;
    uint64_t v95 = *(void *)&a & 0xFFFFFFFFFFFFFF8;
    uint64_t v94 = *(void *)&a + 32;
    uint64_t v18 = _swiftEmptyArrayStorage;
    double v98 = a;
    uint64_t v97 = v30;
    while (1)
    {
      if (v99)
      {
        double v32 = COERCE_DOUBLE(specialized _ArrayBuffer._getElementSlowPath(_:)());
      }
      else
      {
        if (v31 >= *(void *)(v95 + 16)) {
          goto LABEL_54;
        }
        *(void *)&double v32 = *(id *)(v94 + 8 * v31);
      }
      CGFloat v14 = v32;
      if (__OFADD__(v31++, 1)) {
        break;
      }
      type metadata accessor for CRLFreehandDrawingShapeItem();
      *(double *)&uint64_t v34 = COERCE_DOUBLE(swift_dynamicCastClass());
      if (*(double *)&v34 == 0.0)
      {

        if (v31 == v30) {
          goto LABEL_5;
        }
      }
      else
      {
        unint64_t v15 = v34;
        unint64_t v101 = v31;
        id v100 = *(id *)&v14;
        double d = 1.0;
        CGFloat ty = 0.0;
        uint64_t v37 = (void *)v15;
        CGFloat tx = 0.0;
        CGFloat c = 0.0;
        CGFloat v40 = 0.0;
        double v41 = 1.0;
        while (1)
        {
          uint64_t v42 = *(uint64_t (**)(void))((swift_isaMask & *v37) + 0xE0);
          int64_t v43 = v37;
          unint64_t v44 = (void *)v42();
          [v44 v17[226]];
          long long v111 = *(_OWORD *)&t1.a;
          long long v110 = *(_OWORD *)&t1.c;
          long long v109 = *(_OWORD *)&t1.tx;

          t1.CGFloat a = v41;
          t1.CGFloat b = v40;
          t1.CGFloat c = c;
          t1.double d = d;
          t1.CGFloat tx = tx;
          t1.CGFloat ty = ty;
          *(_OWORD *)&t2.CGFloat a = v111;
          *(_OWORD *)&t2.CGFloat c = v110;
          *(_OWORD *)&t2.CGFloat tx = v109;
          CGAffineTransformConcat(&v112, &t1, &t2);
          double v41 = v112.a;
          CGFloat v40 = v112.b;
          CGFloat c = v112.c;
          double d = v112.d;
          CGFloat tx = v112.tx;
          CGFloat ty = v112.ty;
          uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

          if (!Strong) {
            break;
          }

          type metadata accessor for CRLBoardItem(0);
          uint64_t v37 = (void *)swift_dynamicCastClass();
          if (!v37) {
            goto LABEL_28;
          }
        }
        uint64_t Strong = v43;
LABEL_28:

        CGFloat v14 = *(double *)&v15;
        uint64_t v46 = sub_100CF2164();
        if (v46)
        {
          uint64_t v47 = v46;
          int64_t v48 = *(void *)(v46 + 16);
          if (v48)
          {
            *(void *)&t2.CGFloat a = _swiftEmptyArrayStorage;
            sub_1006BBB84(0, v48, 0);
            unint64_t v49 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
            *(void *)&long long v109 = v47;
            *(void *)&long long v111 = v49;
            unint64_t v15 = v47 + v49;
            uint64_t v50 = *(void *)(v96 + 72);
            *(void *)&long long v110 = *(void *)(v96 + 16);
            do
            {
              unint64_t v51 = v103;
              ((void (*)(unsigned char *, unint64_t, uint64_t))v110)(v103, v15, v3);
              Class v52 = PKStroke._bridgeToObjectiveC()().super.isa;
              t1.CGFloat a = v41;
              t1.CGFloat b = v40;
              t1.CGFloat c = c;
              t1.double d = d;
              t1.CGFloat tx = tx;
              t1.CGFloat ty = ty;
              id v53 = [(objc_class *)v52 crl_strokeByAppendingTransform:&t1];

              static PKStroke._unconditionallyBridgeFromObjectiveC(_:)();
              (*v102)(v51, v3);
              CGFloat v14 = t2.a;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1006BBB84(0, *(void *)(*(void *)&v14 + 16) + 1, 1);
                CGFloat v14 = t2.a;
              }
              unint64_t v55 = *(void *)(*(void *)&v14 + 16);
              unint64_t v54 = *(void *)(*(void *)&v14 + 24);
              uint64_t v56 = v104;
              if (v55 >= v54 >> 1)
              {
                sub_1006BBB84(v54 > 1, v55 + 1, 1);
                uint64_t v56 = v104;
                CGFloat v14 = t2.a;
              }
              *(void *)(*(void *)&v14 + 16) = v55 + 1;
              unint64_t v57 = *(void *)&v14 + v111 + v55 * v50;
              uint64_t v3 = v108;
              ((void (*)(unint64_t, unsigned char *, uint64_t))*v106)(v57, v56, v108);
              t2.CGFloat a = v14;
              v15 += v50;
              --v48;
            }
            while (v48);
            swift_bridgeObjectRelease();
            uint64_t v17 = &selRef_taggerStateOutsideCore;
          }
          else
          {
            swift_bridgeObjectRelease();
            CGFloat v14 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
          }
          uint64_t v59 = *(void *)(*(void *)&v14 + 16);
          CGFloat v60 = v105;
          if (v59)
          {
            unint64_t v61 = (*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
            unint64_t v15 = *(void *)&v14 + v61;
            uint64_t v62 = *(void *)(v96 + 72);
            uint64_t v63 = *(void (**)(void, unint64_t, uint64_t))(v96 + 16);
            swift_bridgeObjectRetain();
            do
            {
              v63(*(void *)&v60, v15, v3);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v18 = (double *)sub_100F64E4C(0, *((void *)v18 + 2) + 1, 1, (unint64_t)v18);
              }
              unint64_t v65 = *((void *)v18 + 2);
              unint64_t v64 = *((void *)v18 + 3);
              if (v65 >= v64 >> 1) {
                uint64_t v18 = (double *)sub_100F64E4C(v64 > 1, v65 + 1, 1, (unint64_t)v18);
              }
              *((void *)v18 + 2) = v65 + 1;
              uint64_t v66 = (char *)v18 + v61 + v65 * v62;
              CGFloat v60 = v105;
              uint64_t v3 = v108;
              (*v106)(v66, COERCE_CGFLOAT(*(void *)&v105), v108);
              v15 += v62;
              --v59;
            }
            while (v59);
            id v67 = v100;

            swift_bridgeObjectRelease();
            uint64_t v17 = &selRef_taggerStateOutsideCore;
          }
          else
          {
            id v68 = v100;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          id v58 = v100;
        }
        CGFloat a = v98;
        uint64_t v30 = v97;
        unint64_t v31 = v101;
        if (v101 == v97) {
          goto LABEL_5;
        }
      }
    }
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  unint64_t v69 = _swiftEmptyArrayStorage;
LABEL_59:
  *(void *)&t1.CGFloat a = v69;
  sub_1005057FC(&qword_101699FD8);
  sub_100523288((unint64_t *)&unk_101699FE0, &qword_101699FD8);
  uint64_t v70 = v89;
  PKDrawing.init<A>(strokes:)();
  uint64_t v71 = PKDrawing.dataRepresentation()();
  unint64_t v73 = v72;
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v70, v90);
  Class v74 = Data._bridgeToObjectiveC()().super.isa;
  sub_100510084(v71, v73);
  strcpy((char *)&t1, "MergedDrawing");
  HIWORD(t1.b) = -4864;
  [v15 __swift_setObject:v74 forKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];

  swift_unknownObjectRelease();
  unint64_t v75 = self;
  t1.CGFloat a = 0.0;
  id v76 = [v75 archivedDataWithRootObject:v15 requiringSecureCoding:1 error:&t1];
  id v77 = *(id *)&t1.a;
  if (v76)
  {
    char v78 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    char v78 = v77;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v78;
}

double *sub_100D1451C(uint64_t a1)
{
  unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v4 = *(double **)(a1 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  if (!v4)
  {
    sub_100846AB0();
    uint64_t v4 = *(double **)(a1 + v3);
  }
  if (v4) {
    unint64_t v2 = (unint64_t)v4;
  }
  if (!(v2 >> 62))
  {
    uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (double *)swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_7;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = (double *)swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_21;
  }
LABEL_7:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v2 + 8 * i + 32);
      }
      uint64_t v10 = v9;
      type metadata accessor for CRLFreehandDrawingItem();
      if (swift_dynamicCastClass())
      {
        id v8 = v10;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        type metadata accessor for CRLContainerItem(0);
        if (swift_dynamicCastClass())
        {
          unint64_t v11 = sub_100D1451C();
          sub_1006E2010(v11);
        }
      }
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100D147A8()
{
  return type metadata accessor for CRLImmutableBoard(0);
}

uint64_t type metadata accessor for CRLImmutableBoard(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101699F08);
}

uint64_t sub_100D147D0()
{
  return swift_updateClassMetadata2();
}

id sub_100D149C4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

ValueMetadata *type metadata accessor for FixupBookkeepingData()
{
  return &type metadata for FixupBookkeepingData;
}

uint64_t *sub_100D14A44(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v7 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    CGFloat v14 = (char *)v7 + v13;
    unint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for Date();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_retain();
    v17(v14, v15, v16);
  }
  return v7;
}

uint64_t sub_100D14B94(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_100D14C60(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  unint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_retain();
  v15(v12, v13, v14);
  return a1;
}

void *sub_100D14D64(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

void *sub_100D14E64(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *sub_100D14F40(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_release();
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_100D15030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100D15044);
}

uint64_t sub_100D15044(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100D15170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100D15184);
}

void *sub_100D15184(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_100D152B0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100D15388(uint64_t a1)
{
  uint64_t result = sub_100D15428((unint64_t *)&unk_101699FB0, (void (*)(uint64_t))type metadata accessor for CRLBoard);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100D153E0()
{
  return sub_100D15428((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_100D15428(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100D15470()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (objc_class *)type metadata accessor for CRLBoard(0);
  v32.receiver = v0;
  v32.super_class = v15;
  [super description];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  uint64_t v33 = v17;
  uint64_t v34 = v19;
  v20._countAndFlagsBits = 8250;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  uint64_t v21 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v22 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v22, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v23 = (uint64_t *)(*(void *)&v1[v21] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v10, v24, v25, (uint64_t)v14);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v14, v6);
  sub_100D1A69C((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
  uint64_t v26 = UUID.uuidString.getter();
  id v28 = v27;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v29._countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_100D1574C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10169A1D0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(a3 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(a3 + 16) + 16) && (sub_100955F14(a1), (v12 & 1) != 0))
  {
    uint64_t v13 = a2 + *(void *)(*(void *)a2 + 120);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v13, v6);
    swift_retain();
    sub_100CE2978();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    uint64_t v14 = sub_1006B1714(0);
    *((unsigned char *)v14 + *(void *)(*v14 + 136)) = 1;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    sub_100972960((uint64_t)v14, a1, isUniquelyReferenced_nonNull_native);
    *uint64_t v11 = v18;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  return swift_release();
}

uint64_t sub_100D15958(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a3;
  *a3 = 0x8000000000000000;
  sub_100972960(a2, a1, isUniquelyReferenced_nonNull_native);
  *a3 = v8;

  return swift_bridgeObjectRelease();
}

uint64_t sub_100D159E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v38 = (char *)a1;
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3, v6);
  uint64_t v7 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169A1D0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  char v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_10169A1B0);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v36 = (uint64_t)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v33 - v18;
  uint64_t v20 = v2 + *(void *)(*(void *)v2 + 120);
  swift_beginAccess();
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v34 = v20;
  v33(v12, v20, v8);
  uint64_t v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v7, v38, v3);
  __chkstk_darwin(v21, v22);
  uint64_t v23 = (uint64_t *)((char *)&v33 - ((v5 + 47) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v23 = v3;
  uint64_t v37 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  v23[1] = v37;
  v23[2] = sub_100D15428(&qword_10169A228, (void (*)(uint64_t))&type metadata accessor for UUID);
  v23[3] = sub_100D15428((unint64_t *)&unk_10169A230, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 32))(v23 + 4, v7, v3);
  swift_getKeyPath();
  sub_100523288(&qword_10169A210, (uint64_t *)&unk_1016A8B60);
  Capsule<>.subscript.getter();
  swift_release();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v35 = v9 + 8;
  v24(v12, v8);
  unint64_t v38 = v19;
  uint64_t v25 = (uint64_t)v19;
  uint64_t v26 = v36;
  sub_100522E9C(v25, v36, (uint64_t *)&unk_10169A1B0);
  uint64_t v27 = sub_1005057FC(&qword_10169A220);
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_10169A1B0);
    sub_100522F00(v26, (uint64_t *)&unk_10169A1B0);
    uint64_t v29 = 1;
    uint64_t v30 = v39;
  }
  else
  {
    v33(v12, v34, v8);
    sub_1005057FC((uint64_t *)&unk_1016A8B60);
    sub_100523288(&qword_10169A240, (uint64_t *)&unk_1016A8B60);
    uint64_t v31 = v39;
    Ref.subscript.getter();
    v24(v12, v8);
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_10169A1B0);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    uint64_t v29 = 0;
    uint64_t v30 = v31;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v30, v29, 1);
}

uint64_t sub_100D15ED4()
{
  return CRDictionary.subscript.getter();
}

uint64_t sub_100D15F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 32);
  uint64_t v7 = *(void *)(a4 + a3 - 16);
  uint64_t v8 = type metadata accessor for Ref();
  uint64_t v9 = type metadata accessor for Optional();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v23 - v12;
  __n128 v16 = __chkstk_darwin(v14, v15);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))((char *)v23 - v17, a3, v6, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v20 = swift_getWitnessTable();
  long long v21 = *(_OWORD *)(v7 + 8);
  v23[0] = v6;
  v23[1] = v8;
  long long v24 = v21;
  uint64_t v25 = WitnessTable;
  uint64_t v26 = v20;
  type metadata accessor for CRDictionary();
  return CRDictionary.subscript.setter();
}

uint64_t sub_100D16184(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v12 < 0) {
      uint64_t v13 = *v1;
    }
    else {
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    char v14 = __CocoaSet.contains(_:)();
    swift_release();
    if (v14)
    {
      uint64_t v15 = sub_100D18FE4(v13, a1);
      swift_bridgeObjectRelease();
      return v15;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v39 = v1;
  Hasher.init(_seed:)();
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v50 = v11;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v16 + 32);
  swift_bridgeObjectRetain();
  uint64_t v48 = v16;
  uint64_t v49 = v17;
  uint64_t v46 = v16 + 32;
  uint64_t v47 = ObjectType;
  int64_t v45 = v19;
  v19(ObjectType, v16);
  uint64_t v20 = v50;
  sub_100D15428((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v21 = v4 + 8;
  unint64_t v44 = v22;
  v22(v20, v3);
  Swift::Int v23 = Hasher._finalize()();
  uint64_t v24 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v25 = v23 & ~v24;
  uint64_t v43 = v12 + 56;
  if (((*(void *)(v12 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v40 = ~v24;
  uint64_t v41 = v12;
  uint64_t v42 = v8;
  uint64_t v26 = v50;
  while (1)
  {
    uint64_t v27 = *(void *)(*(void *)(*(void *)(v12 + 48) + 8 * v25) + 24);
    uint64_t v28 = swift_getObjectType();
    uint64_t v29 = v21;
    uint64_t v30 = v3;
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v27 + 32);
    swift_retain();
    v31(v28, v27);
    uint64_t v3 = v30;
    uint64_t v21 = v29;
    objc_super v32 = v42;
    v45(v47, v48);
    char v33 = static UUID.== infix(_:_:)();
    uint64_t v34 = v44;
    v44(v32, v3);
    v34(v26, v3);
    swift_release();
    if (v33) {
      break;
    }
    uint64_t v12 = v41;
    unint64_t v25 = (v25 + 1) & v40;
    if (((*(void *)(v43 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = v39;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = *v36;
  uint64_t v51 = *v36;
  *uint64_t v36 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100CCC8F4();
    uint64_t v38 = v51;
  }
  uint64_t v15 = *(void *)(*(void *)(v38 + 48) + 8 * v25);
  sub_100DA0410(v25);
  *uint64_t v36 = v51;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100D16510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100D15428((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v32 = a1;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10;
  uint64_t v31 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v27 = v2;
    uint64_t v28 = v6;
    uint64_t v29 = a2;
    uint64_t v30 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v16 = v6 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    while (1)
    {
      uint64_t v19 = v14;
      v15(v9, *(void *)(v14 + 48) + v18 * v13, v5);
      sub_100D15428((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v9, v5);
      if (v20) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v14 = v19;
      if (((*(void *)(v31 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 1;
        uint64_t v6 = v28;
        a2 = v29;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v22;
    uint64_t v33 = *v22;
    *uint64_t v22 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100CCC8D4();
      uint64_t v24 = v33;
    }
    uint64_t v6 = v28;
    a2 = v29;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 32))(v29, *(void *)(v24 + 48) + v18 * v13, v5);
    sub_100DA0724(v13);
    *uint64_t v22 = v33;
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
}

uint64_t sub_100D167F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100CCD340();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_100DA076C(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_100D16980(unint64_t a1, unint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v9 = *v4;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_100B8174C((int)&v31, a1, a2, a3, a4);
  unint64_t v10 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v9 + 32));
  if (((*(void *)(v9 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v28 = -1 << *(unsigned char *)(v9 + 32);
  uint64_t v29 = v4;
  uint64_t v11 = *(void *)(v9 + 48) + 32 * v10;
  unint64_t v12 = a2;
  id v13 = *(id *)v11;
  uint64_t v14 = *(void **)(v11 + 8);
  uint64_t v15 = *(void *)(v11 + 16);
  unsigned __int8 v16 = *(unsigned char *)(v11 + 24);
  sub_10053BB6C(*(id *)v11, v14, v15, v16);
  unint64_t v30 = v12;
  LOBYTE(v12) = sub_100B834D0((unint64_t)v13, (unint64_t)v14, v15, v16, a1, v12, a3, a4);
  sub_10053BBA0(v13, v14, v15, v16);
  if ((v12 & 1) == 0)
  {
    unint64_t v10 = (v10 + 1) & ~v28;
    for (uint64_t i = (v10 >> 3) & 0xFFFFFFFFFFFFFF8;
          ((*(void *)(v9 + 56 + i) >> v10) & 1) != 0;
          uint64_t i = (v10 >> 3) & 0xFFFFFFFFFFFFFF8)
    {
      uint64_t v21 = *(void *)(v9 + 48) + 32 * v10;
      id v22 = *(id *)v21;
      Swift::Int v23 = *(void **)(v21 + 8);
      uint64_t v24 = *(void *)(v21 + 16);
      unsigned __int8 v25 = *(unsigned char *)(v21 + 24);
      sub_10053BB6C(*(id *)v21, v23, v24, v25);
      char v26 = sub_100B834D0((unint64_t)v22, (unint64_t)v23, v24, v25, a1, v30, a3, a4);
      sub_10053BBA0(v22, v23, v24, v25);
      if (v26) {
        goto LABEL_3;
      }
      unint64_t v10 = (v10 + 1) & ~v28;
    }
    goto LABEL_10;
  }
LABEL_3:
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v29;
  uint64_t v31 = *v29;
  *uint64_t v29 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100CCD708();
    uint64_t v18 = v31;
  }
  uint64_t v19 = *(void *)(*(void *)(v18 + 48) + 32 * v10);
  sub_100DA0934(v10);
  *uint64_t v29 = v31;
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_100D16BE8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *v1;
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v6 = a1;
    char v7 = __CocoaSet.contains(_:)();

    if (v7)
    {
      uint64_t v8 = sub_100D198BC(v5, (uint64_t)v6, sub_100CBCD54, (void (*)(void))type metadata accessor for CRLCollaborationParticipant, (void (*)(unint64_t))sub_100DA0B60);
      swift_bridgeObjectRelease();
      return v8;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v9 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v10 = NSObject._rawHashValue(seed:)(v9);
  uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    goto LABEL_15;
  }
  type metadata accessor for CRLCollaborationParticipant(0);
  id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
  char v14 = static NSObject.== infix(_:_:)();

  if ((v14 & 1) == 0)
  {
    uint64_t v15 = ~v11;
    do
    {
      unint64_t v12 = (v12 + 1) & v15;
      if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_15;
      }
      id v16 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
      char v17 = static NSObject.== infix(_:_:)();
    }
    while ((v17 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v2;
  uint64_t v21 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100CCDB34();
    uint64_t v19 = v21;
  }
  uint64_t v8 = *(void *)(*(void *)(v19 + 48) + 8 * v12);
  sub_100DA0B60(v12);
  *uint64_t v2 = v21;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100D16DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  unint64_t v12 = (char *)&v36 - v11;
  __chkstk_darwin(v13, v14);
  id v16 = (char *)&v36 - v15;
  uint64_t v38 = v2;
  uint64_t v17 = *v2;
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_100D15428((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v40 = type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v18 = Hasher._finalize()();
  uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
  unint64_t v20 = v18 & ~v19;
  uint64_t v21 = v17;
  uint64_t v42 = v17 + 56;
  if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(a2, v31, 1, v5);
  }
  uint64_t v36 = v5;
  uint64_t v37 = a2;
  uint64_t v41 = ~v19;
  uint64_t v22 = *(void *)(v39 + 72);
  while (1)
  {
    uint64_t v23 = v21;
    sub_100D1E720(*(void *)(v21 + 48) + v22 * v20, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    char v24 = static UUID.== infix(_:_:)();
    sub_100D1E720((uint64_t)v16, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_100D1E720(a1, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    if ((v24 & 1) == 0)
    {
      sub_100D1A69C((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      sub_100D1A69C((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      sub_100D1A69C((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_4;
    }
    uint64_t v25 = *(int *)(v40 + 20);
    uint64_t v26 = *(void *)&v12[v25];
    uint64_t v27 = *(void *)&v12[v25 + 8];
    uint64_t v28 = &v8[v25];
    if (v26 == *(void *)v28 && v27 == *((void *)v28 + 1)) {
      break;
    }
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100D1A69C((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    sub_100D1A69C((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
    sub_100D1A69C((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    if (v30) {
      goto LABEL_15;
    }
LABEL_4:
    unint64_t v20 = (v20 + 1) & v41;
    uint64_t v21 = v23;
    if (((*(void *)(v42 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = 1;
      uint64_t v5 = v36;
      a2 = v37;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(a2, v31, 1, v5);
    }
  }
  sub_100D1A69C((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
  sub_100D1A69C((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
  sub_100D1A69C((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v32 = v38;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v34 = *v32;
  uint64_t v43 = *v32;
  *uint64_t v32 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100CCD6C0();
    uint64_t v34 = v43;
  }
  a2 = v37;
  sub_100D1D0E4(*(void *)(v34 + 48) + v22 * v20, v37, type metadata accessor for CRLBoardIdentifier);
  sub_100DA0B64(v20);
  *uint64_t v32 = v43;
  swift_bridgeObjectRelease();
  uint64_t v31 = 0;
  uint64_t v5 = v36;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(a2, v31, 1, v5);
}

Swift::Int sub_100D17218@<X0>(double a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, Swift::UInt64 a5@<D0>)
{
  uint64_t v11 = *v5;
  Hasher.init(_seed:)();
  Swift::UInt64 v12 = *(void *)&a1;
  Swift::UInt64 v13 = *(void *)&a2;
  if (a3)
  {
    Swift::UInt64 v12 = qword_1011B2200[*(void *)&a1];
    Swift::UInt64 v13 = v12;
  }
  if ((v12 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v14 = v12;
  }
  else {
    Swift::UInt64 v14 = 0;
  }
  Hasher._combine(_:)(v14);
  if ((v13 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v15 = v13;
  }
  else {
    Swift::UInt64 v15 = 0;
  }
  Hasher._combine(_:)(v15);
  if ((a5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v16 = a5;
  }
  else {
    Swift::UInt64 v16 = 0;
  }
  Hasher._combine(_:)(v16);
  Swift::Int result = Hasher._finalize()();
  uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v19 = result & ~v18;
  long long v20 = 0uLL;
  if ((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
  {
    uint64_t v21 = ~v18;
    while (1)
    {
      uint64_t v22 = *(void *)(v11 + 48) + 32 * v19;
      if (*(unsigned char *)(v22 + 16) == 1)
      {
        uint64_t v23 = &dbl_1011B2228[*(void *)v22];
        double v24 = *v23;
      }
      else
      {
        uint64_t v23 = (double *)(v22 + 8);
        double v24 = *(double *)v22;
      }
      double v25 = a1;
      double v26 = a2;
      if (a3)
      {
        double v25 = dbl_1011B2228[*(void *)&a1];
        double v26 = v25;
      }
      BOOL v27 = v24 == v25 && *v23 == v26;
      if (v27 && *(double *)(v22 + 24) == *(double *)&a5) {
        break;
      }
      unint64_t v19 = (v19 + 1) & v21;
      if (((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        goto LABEL_27;
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *v5;
    uint64_t v36 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100CCDCD4();
      uint64_t v33 = v36;
    }
    uint64_t v34 = *(void *)(v33 + 48) + 32 * v19;
    long long v35 = *(_OWORD *)v34;
    uint64_t v29 = *(unsigned __int8 *)(v34 + 16);
    uint64_t v30 = *(void *)(v34 + 24);
    sub_100DA0EC0(v19);
    *uint64_t v5 = v36;
    Swift::Int result = swift_bridgeObjectRelease();
    long long v20 = v35;
    char v31 = 0;
  }
  else
  {
LABEL_27:
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    char v31 = 1;
  }
  *(_OWORD *)a4 = v20;
  *(void *)(a4 + 16) = v29;
  *(void *)(a4 + 24) = v30;
  *(unsigned char *)(a4 + 32) = v31;
  return result;
}

uint64_t sub_100D17414()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = __CocoaSet.contains(_:)();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_100D19388();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  type metadata accessor for CalculateExpression();
  sub_100D15428((unint64_t *)&unk_10167BEE0, (void (*)(uint64_t))&type metadata accessor for CalculateExpression);
  swift_bridgeObjectRetain();
  uint64_t v4 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = ~v5;
  sub_100D15428(&qword_101671300, (void (*)(uint64_t))&type metadata accessor for CalculateExpression);
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v0;
  uint64_t v11 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100CCDE84();
    uint64_t v10 = v11;
  }
  uint64_t v3 = *(void *)(*(void *)(v10 + 48) + 8 * v6);
  sub_100DA10BC(v6);
  *uint64_t v0 = v11;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100D17634(Swift::UInt a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0) {
      uint64_t v4 = *v1;
    }
    else {
      uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    char v5 = __CocoaSet.contains(_:)();
    swift_release();
    if (v5)
    {
      uint64_t v6 = sub_100D1956C(v4, a1);
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = ~v8;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = Strong;
      uint64_t v13 = swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectRelease();
      if (v13)
      {
        swift_unknownObjectRelease();
        if (v12 == v13) {
          break;
        }
      }
    }
    unint64_t v9 = (v9 + 1) & v10;
    if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v1;
  uint64_t v17 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100CCDE90();
    uint64_t v15 = v17;
  }
  uint64_t v6 = *(void *)(*(void *)(v15 + 48) + 8 * v9);
  sub_100DA12AC(v9);
  *uint64_t v1 = v17;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100D177FC(void *a1)
{
  char v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *v1;
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v6 = a1;
    char v7 = __CocoaSet.contains(_:)();

    if (v7)
    {
      uint64_t v8 = sub_100D19710(v5, (uint64_t)v6, sub_100CBD3B4, (unint64_t *)&qword_101674210, (uint64_t)CKRecordZoneID_ptr, (void (*)(unint64_t))sub_100DA0B60);
      swift_bridgeObjectRelease();
      return v8;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v9 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v10 = NSObject._rawHashValue(seed:)(v9);
  uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    goto LABEL_15;
  }
  sub_10050BF48(0, (unint64_t *)&qword_101674210);
  id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
  char v14 = static NSObject.== infix(_:_:)();

  if ((v14 & 1) == 0)
  {
    uint64_t v15 = ~v11;
    do
    {
      unint64_t v12 = (v12 + 1) & v15;
      if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_15;
      }
      id v16 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
      char v17 = static NSObject.== infix(_:_:)();
    }
    while ((v17 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v2;
  uint64_t v21 = *v2;
  *char v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100CCDE9C();
    uint64_t v19 = v21;
  }
  uint64_t v8 = *(void *)(*(void *)(v19 + 48) + 8 * v12);
  sub_100DA0B60(v12);
  *char v2 = v21;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100D17A0C(void *a1)
{
  char v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *v1;
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v6 = a1;
    char v7 = __CocoaSet.contains(_:)();

    if (v7)
    {
      uint64_t v8 = sub_100D19710(v5, (uint64_t)v6, sub_100CBD3D0, (unint64_t *)&qword_101674200, (uint64_t)NSLayoutConstraint_ptr, (void (*)(unint64_t))sub_100DA0B60);
      swift_bridgeObjectRelease();
      return v8;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v9 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v10 = NSObject._rawHashValue(seed:)(v9);
  uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    goto LABEL_15;
  }
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
  char v14 = static NSObject.== infix(_:_:)();

  if ((v14 & 1) == 0)
  {
    uint64_t v15 = ~v11;
    do
    {
      unint64_t v12 = (v12 + 1) & v15;
      if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_15;
      }
      id v16 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
      char v17 = static NSObject.== infix(_:_:)();
    }
    while ((v17 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v2;
  uint64_t v21 = *v2;
  *char v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100CCDEA8();
    uint64_t v19 = v21;
  }
  uint64_t v8 = *(void *)(*(void *)(v19 + 48) + 8 * v12);
  sub_100DA0B60(v12);
  *char v2 = v21;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100D17C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  Swift::Int v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100D15428(&qword_101699918, (void (*)(uint64_t))&type metadata accessor for UTType);
  swift_bridgeObjectRetain();
  uint64_t v32 = a1;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10;
  uint64_t v31 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    BOOL v27 = v2;
    uint64_t v28 = v6;
    uint64_t v29 = a2;
    uint64_t v30 = ~v12;
    char v17 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v16 = v6 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    while (1)
    {
      uint64_t v19 = v14;
      v15(v9, *(void *)(v14 + 48) + v18 * v13, v5);
      sub_100D15428((unint64_t *)&qword_101693BF0, (void (*)(uint64_t))&type metadata accessor for UTType);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v9, v5);
      if (v20) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v14 = v19;
      if (((*(void *)(v31 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 1;
        uint64_t v6 = v28;
        a2 = v29;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v22;
    uint64_t v33 = *v22;
    *uint64_t v22 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100CCDEB4();
      uint64_t v24 = v33;
    }
    uint64_t v6 = v28;
    a2 = v29;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 32))(v29, *(void *)(v24 + 48) + v18 * v13, v5);
    sub_100DA1458(v13);
    *uint64_t v22 = v33;
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
}

uint64_t sub_100D17EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  Swift::Int v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v2;
  uint64_t v10 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_100720168();
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v22 = v5;
    uint64_t v23 = a2;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v6 + 72);
    while (1)
    {
      sub_100D1E720(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for CRLSELibraryViewModel.Item);
      char v16 = sub_100723608((uint64_t)v9, a1);
      sub_100D1A69C((uint64_t)v9, type metadata accessor for CRLSELibraryViewModel.Item);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = 1;
        uint64_t v5 = v22;
        a2 = v23;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v17, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v18;
    uint64_t v25 = *v18;
    *uint64_t v18 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100CCDED4();
      uint64_t v20 = v25;
    }
    a2 = v23;
    sub_100D1D0E4(*(void *)(v20 + 48) + v15 * v13, v23, type metadata accessor for CRLSELibraryViewModel.Item);
    sub_100DA14A0(v13);
    *uint64_t v18 = v25;
    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
    uint64_t v5 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v17, 1, v5);
}

uint64_t sub_100D1815C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v87 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v85 = (uint64_t)&v78 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v78 - v13;
  __chkstk_darwin(v15, v16);
  uint64_t v86 = (uint64_t)&v78 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v84 = (uint64_t)&v78 - v20;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v78 - v23;
  uint64_t v96 = sub_1005057FC(&qword_101691F00);
  __chkstk_darwin(v96, v25);
  BOOL v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v30);
  uint64_t v90 = (char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  uint64_t v91 = (uint64_t)&v78 - v34;
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v78 - v37;
  uint64_t v79 = v2;
  uint64_t v39 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  uint64_t v97 = a1;
  sub_100AF7288();
  Swift::Int v40 = Hasher._finalize()();
  uint64_t v41 = -1 << *(unsigned char *)(v39 + 32);
  unint64_t v42 = v40 & ~v41;
  uint64_t v43 = v39;
  uint64_t v88 = v39 + 56;
  if (((*(void *)(v39 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v72 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(a2, v72, 1, v28);
  }
  uint64_t v81 = a2;
  uint64_t v93 = ~v41;
  uint64_t v80 = v29;
  uint64_t v94 = *(void *)(v29 + 72);
  char v89 = v24;
  uint64_t v44 = (uint64_t)v90;
  uint64_t v45 = v88;
  uint64_t v83 = v28;
  uint64_t v82 = v14;
  uint64_t v95 = v43;
  while (1)
  {
    uint64_t v46 = *(void *)(v43 + 48);
    unint64_t v92 = v94 * v42;
    sub_100D1E720(v46 + v94 * v42, (uint64_t)v38, type metadata accessor for CRLSpotlightManager.ChangeType);
    uint64_t v47 = (uint64_t)&v27[*(int *)(v96 + 48)];
    sub_100D1E720((uint64_t)v38, (uint64_t)v27, type metadata accessor for CRLSpotlightManager.ChangeType);
    sub_100D1E720(v97, v47, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_100D1E720((uint64_t)v27, v44, type metadata accessor for CRLSpotlightManager.ChangeType);
    EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
    uint64_t v49 = v44;
    if (EnumCaseMultiPayload == 1)
    {
      sub_100D1D0E4(v47, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
      char v50 = static UUID.== infix(_:_:)();
      uint64_t v51 = v85;
      sub_100D1E720(v44, v85, type metadata accessor for CRLBoardIdentifier);
      uint64_t v52 = v87;
      sub_100D1E720((uint64_t)v14, v87, type metadata accessor for CRLBoardIdentifier);
      if (v50)
      {
        uint64_t v53 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v54 = *(void *)(v51 + v53);
        uint64_t v55 = *(void *)(v51 + v53 + 8);
        uint64_t v56 = (void *)(v52 + v53);
        if (v54 == *v56 && v55 == v56[1])
        {
          uint64_t v73 = v52;
          uint64_t v64 = v51;
          uint64_t v28 = v83;
          goto LABEL_29;
        }
        char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100D1A69C(v52, type metadata accessor for CRLBoardIdentifier);
        sub_100D1A69C(v51, type metadata accessor for CRLBoardIdentifier);
        sub_100D1A69C((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
        sub_100D1A69C(v44, type metadata accessor for CRLBoardIdentifier);
        uint64_t v28 = v83;
        uint64_t v24 = v89;
        if (v58) {
          goto LABEL_30;
        }
      }
      else
      {
        sub_100D1A69C(v52, type metadata accessor for CRLBoardIdentifier);
        sub_100D1A69C(v51, type metadata accessor for CRLBoardIdentifier);
        sub_100D1A69C((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
        sub_100D1A69C(v44, type metadata accessor for CRLBoardIdentifier);
        uint64_t v28 = v83;
        uint64_t v24 = v89;
      }
      goto LABEL_24;
    }
LABEL_3:
    sub_100D1A69C(v49, type metadata accessor for CRLBoardIdentifier);
    sub_100522F00((uint64_t)v27, &qword_101691F00);
LABEL_4:
    sub_100D1A69C((uint64_t)v38, type metadata accessor for CRLSpotlightManager.ChangeType);
    unint64_t v42 = (v42 + 1) & v93;
    uint64_t v43 = v95;
    if (((*(void *)(v45 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v72 = 1;
      a2 = v81;
      goto LABEL_33;
    }
  }
  uint64_t v59 = v91;
  sub_100D1E720((uint64_t)v27, v91, type metadata accessor for CRLSpotlightManager.ChangeType);
  int v60 = swift_getEnumCaseMultiPayload();
  uint64_t v49 = v59;
  uint64_t v44 = (uint64_t)v90;
  if (v60 == 1) {
    goto LABEL_3;
  }
  sub_100D1D0E4(v47, (uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
  uint64_t v61 = v91;
  char v62 = static UUID.== infix(_:_:)();
  uint64_t v63 = (uint64_t)v24;
  uint64_t v64 = v84;
  sub_100D1E720(v61, v84, type metadata accessor for CRLBoardIdentifier);
  uint64_t v65 = v86;
  sub_100D1E720(v63, v86, type metadata accessor for CRLBoardIdentifier);
  if ((v62 & 1) == 0)
  {
    sub_100D1A69C(v65, type metadata accessor for CRLBoardIdentifier);
    sub_100D1A69C(v64, type metadata accessor for CRLBoardIdentifier);
    sub_100D1A69C(v63, type metadata accessor for CRLBoardIdentifier);
    sub_100D1A69C(v61, type metadata accessor for CRLBoardIdentifier);
    uint64_t v24 = (char *)v63;
    uint64_t v14 = v82;
    uint64_t v44 = (uint64_t)v90;
    uint64_t v45 = v88;
LABEL_24:
    sub_100D1A69C((uint64_t)v27, type metadata accessor for CRLSpotlightManager.ChangeType);
    goto LABEL_4;
  }
  uint64_t v66 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v67 = *(void *)(v64 + v66);
  uint64_t v68 = *(void *)(v64 + v66 + 8);
  unint64_t v69 = (void *)(v65 + v66);
  if (v67 != *v69 || v68 != v69[1])
  {
    char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100D1A69C(v65, type metadata accessor for CRLBoardIdentifier);
    sub_100D1A69C(v64, type metadata accessor for CRLBoardIdentifier);
    uint64_t v24 = v89;
    sub_100D1A69C((uint64_t)v89, type metadata accessor for CRLBoardIdentifier);
    sub_100D1A69C(v91, type metadata accessor for CRLBoardIdentifier);
    uint64_t v14 = v82;
    uint64_t v44 = (uint64_t)v90;
    uint64_t v45 = v88;
    if (v71) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
  uint64_t v73 = v65;
  uint64_t v14 = v89;
  uint64_t v44 = v91;
LABEL_29:
  sub_100D1A69C(v73, type metadata accessor for CRLBoardIdentifier);
  sub_100D1A69C(v64, type metadata accessor for CRLBoardIdentifier);
  sub_100D1A69C((uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
  sub_100D1A69C(v44, type metadata accessor for CRLBoardIdentifier);
LABEL_30:
  sub_100D1A69C((uint64_t)v27, type metadata accessor for CRLSpotlightManager.ChangeType);
  sub_100D1A69C((uint64_t)v38, type metadata accessor for CRLSpotlightManager.ChangeType);
  swift_bridgeObjectRelease();
  Class v74 = v79;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v76 = *v74;
  uint64_t v98 = *v74;
  *Class v74 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_100CCE27C();
    uint64_t v76 = v98;
  }
  a2 = v81;
  sub_100D1D0E4(*(void *)(v76 + 48) + v92, v81, type metadata accessor for CRLSpotlightManager.ChangeType);
  sub_100DA1CD4(v42);
  *Class v74 = v98;
  swift_bridgeObjectRelease();
  uint64_t v72 = 0;
LABEL_33:
  uint64_t v29 = v80;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(a2, v72, 1, v28);
}

uint64_t sub_100D189F4(uint64_t a1)
{
  char v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = static Hasher._hash(seed:_:)();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *char v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100CCE53C();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_100DA210C(v7);
  *char v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100D18B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100D15428(&qword_101672918, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  swift_bridgeObjectRetain();
  uint64_t v32 = a1;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10;
  uint64_t v31 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    BOOL v27 = v2;
    uint64_t v28 = v6;
    uint64_t v29 = a2;
    uint64_t v30 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v16 = v6 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    while (1)
    {
      uint64_t v19 = v14;
      v15(v9, *(void *)(v14 + 48) + v18 * v13, v5);
      sub_100D15428(&qword_10169A040, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v9, v5);
      if (v20) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v14 = v19;
      if (((*(void *)(v31 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 1;
        uint64_t v6 = v28;
        a2 = v29;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v22;
    uint64_t v33 = *v22;
    *uint64_t v22 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100CCE6D4();
      uint64_t v24 = v33;
    }
    uint64_t v6 = v28;
    a2 = v29;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 32))(v29, *(void *)(v24 + 48) + v18 * v13, v5);
    sub_100DA2294(v13);
    *uint64_t v22 = v33;
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
}

uint64_t sub_100D18DE0(void *a1)
{
  char v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *v1;
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v6 = a1;
    char v7 = __CocoaSet.contains(_:)();

    if (v7)
    {
      uint64_t v8 = sub_100D198BC(v5, (uint64_t)v6, sub_100CBD598, (void (*)(void))type metadata accessor for CRLSceneInfo, (void (*)(unint64_t))sub_100DA0B60);
      swift_bridgeObjectRelease();
      return v8;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v9 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v10 = NSObject._rawHashValue(seed:)(v9);
  uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    goto LABEL_15;
  }
  type metadata accessor for CRLSceneInfo();
  id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
  char v14 = static NSObject.== infix(_:_:)();

  if ((v14 & 1) == 0)
  {
    uint64_t v15 = ~v11;
    do
    {
      unint64_t v12 = (v12 + 1) & v15;
      if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_15;
      }
      id v16 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
      char v17 = static NSObject.== infix(_:_:)();
    }
    while ((v17 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v2;
  uint64_t v21 = *v2;
  *char v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100CCE9A4();
    uint64_t v19 = v21;
  }
  uint64_t v8 = *(void *)(*(void *)(v19 + 48) + 8 * v12);
  sub_100DA0B60(v12);
  *char v2 = v21;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100D18FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  Swift::Int v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  unint64_t v12 = (char *)&v34 - v11;
  uint64_t v34 = v2;
  swift_bridgeObjectRelease();
  uint64_t v13 = __CocoaSet.count.getter();
  uint64_t v14 = swift_unknownObjectRetain();
  Swift::Int v15 = sub_100CBC850(v14, v13);
  Swift::Int v45 = v15;
  Hasher.init(_seed:)();
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v16 + 32);
  swift_retain();
  uint64_t v40 = v17;
  uint64_t v41 = v16;
  uint64_t v38 = ObjectType;
  uint64_t v39 = v16 + 32;
  uint64_t v37 = v19;
  v19(ObjectType, v16);
  sub_100D15428((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  char v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v42 = v5 + 8;
  uint64_t v43 = v4;
  v20(v12, v4);
  Swift::Int v21 = Hasher._finalize()();
  uint64_t v22 = -1 << *(unsigned char *)(v15 + 32);
  unint64_t v23 = v21 & ~v22;
  Swift::Int v44 = v15;
  Swift::Int v36 = v15 + 56;
  if ((*(void *)(v15 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
  {
    uint64_t v35 = ~v22;
    while (1)
    {
      uint64_t v24 = *(void *)(*(void *)(*(void *)(v44 + 48) + 8 * v23) + 24);
      uint64_t v25 = swift_getObjectType();
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v24 + 32);
      swift_retain();
      v26(v25, v24);
      v37(v38, v41);
      char v27 = static UUID.== infix(_:_:)();
      uint64_t v28 = v43;
      v20(v9, v43);
      v20(v12, v28);
      swift_release();
      if (v27) {
        break;
      }
      unint64_t v23 = (v23 + 1) & v35;
      if (((*(void *)(v36 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    uint64_t v29 = *(void *)(*(void *)(v45 + 48) + 8 * v23);
    sub_100DA0410(v23);
    v37(v38, v41);
    uint64_t v30 = *(void *)(v29 + 24);
    uint64_t v31 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v30 + 32))(v31, v30);
    LOBYTE(v30) = static UUID.== infix(_:_:)();
    uint64_t v32 = v43;
    v20(v9, v43);
    v20(v12, v32);
    if (v30)
    {
      Swift::Int *v34 = v45;
      return v29;
    }
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100D19388()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = __CocoaSet.count.getter();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = sub_100CBCF70(v2, v1);
  uint64_t v10 = v3;
  type metadata accessor for CalculateExpression();
  sub_100D15428((unint64_t *)&unk_10167BEE0, (void (*)(uint64_t))&type metadata accessor for CalculateExpression);
  swift_retain();
  uint64_t v4 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if ((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = ~v5;
    sub_100D15428(&qword_101671300, (void (*)(uint64_t))&type metadata accessor for CalculateExpression);
    while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
    {
      unint64_t v6 = (v6 + 1) & v7;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    uint64_t v8 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
    sub_100DA10BC(v6);
    if (dispatch thunk of static Equatable.== infix(_:_:)())
    {
      *uint64_t v0 = v10;
      return v8;
    }
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100D1956C(uint64_t a1, Swift::UInt a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = __CocoaSet.count.getter();
  uint64_t v6 = swift_unknownObjectRetain();
  Swift::Int v7 = sub_100CBD1AC(v6, v5);
  Swift::Int v19 = v7;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    swift_retain();
    while (1)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v13 = Strong;
        uint64_t v14 = swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectRelease();
        if (v14)
        {
          swift_unknownObjectRelease();
          if (v13 == v14) {
            break;
          }
        }
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_13;
      }
    }
    swift_release();
    uint64_t v15 = *(void *)(*(void *)(v7 + 48) + 8 * v10);
    sub_100DA12AC(v10);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      goto LABEL_14;
    }
    uint64_t v17 = result;
    uint64_t v18 = swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_unknownObjectRelease();
    if (!v18) {
      goto LABEL_14;
    }
    swift_unknownObjectRelease();
    if (v17 == v18)
    {
      *uint64_t v3 = v19;
      return v15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_13:
  uint64_t result = swift_release();
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_100D19710(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  unint64_t v10 = v6;
  swift_bridgeObjectRelease();
  uint64_t v11 = __CocoaSet.count.getter();
  uint64_t v12 = swift_unknownObjectRetain();
  uint64_t v13 = a3(v12, v11);
  uint64_t v25 = v13;
  Swift::Int v14 = *(void *)(v13 + 40);
  swift_retain();
  Swift::Int v15 = NSObject._rawHashValue(seed:)(v14);
  uint64_t v16 = -1 << *(unsigned char *)(v13 + 32);
  unint64_t v17 = v15 & ~v16;
  if ((*(void *)(v13 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
  {
    sub_10050BF48(0, a4);
    id v18 = *(id *)(*(void *)(v13 + 48) + 8 * v17);
    char v19 = static NSObject.== infix(_:_:)();

    if (v19)
    {
LABEL_6:
      swift_release();
      uint64_t v23 = *(void *)(*(void *)(v13 + 48) + 8 * v17);
      a6(v17);
      if (static NSObject.== infix(_:_:)())
      {
        *unint64_t v10 = v25;
        return v23;
      }
      __break(1u);
    }
    else
    {
      uint64_t v20 = ~v16;
      while (1)
      {
        unint64_t v17 = (v17 + 1) & v20;
        if (((*(void *)(v13 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
          break;
        }
        id v21 = *(id *)(*(void *)(v13 + 48) + 8 * v17);
        char v22 = static NSObject.== infix(_:_:)();

        if (v22) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100D198BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), void (*a4)(void), void (*a5)(unint64_t))
{
  uint64_t v9 = v5;
  swift_bridgeObjectRelease();
  uint64_t v10 = __CocoaSet.count.getter();
  uint64_t v11 = swift_unknownObjectRetain();
  uint64_t v12 = a3(v11, v10);
  uint64_t v24 = v12;
  Swift::Int v13 = *(void *)(v12 + 40);
  swift_retain();
  Swift::Int v14 = NSObject._rawHashValue(seed:)(v13);
  uint64_t v15 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v16 = v14 & ~v15;
  if ((*(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
  {
    a4(0);
    id v17 = *(id *)(*(void *)(v12 + 48) + 8 * v16);
    char v18 = static NSObject.== infix(_:_:)();

    if (v18)
    {
LABEL_6:
      swift_release();
      uint64_t v22 = *(void *)(*(void *)(v12 + 48) + 8 * v16);
      a5(v16);
      if (static NSObject.== infix(_:_:)())
      {
        *uint64_t v9 = v24;
        return v22;
      }
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v15;
      while (1)
      {
        unint64_t v16 = (v16 + 1) & v19;
        if (((*(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v12 + 48) + 8 * v16);
        char v21 = static NSObject.== infix(_:_:)();

        if (v21) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100D19A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(int *)(sub_1005057FC(&qword_10169A270) + 48);
  uint64_t v5 = *(int *)(sub_1005057FC((uint64_t *)&unk_10169A260) + 48);
  uint64_t v6 = *(void *)(a1 + v4);
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  *(void *)(a2 + v5) = v6;

  return swift_retain();
}

uint64_t sub_100D19B04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void *__return_ptr, void *, uint64_t *), uint64_t a6)
{
  void (*v50)(void *__return_ptr, void *, uint64_t *);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  void v55[2];
  void v56[8];
  uint64_t v57;

  uint64_t v51 = a6;
  uint64_t v7 = v6;
  char v50 = a5;
  uint64_t v54 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v13);
  uint64_t v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_10167AAE0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = ~v20;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v23 = -v20;
  v56[1] = a1;
  v56[2] = a1 + 64;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  else {
    uint64_t v24 = -1;
  }
  v56[3] = v21;
  v56[4] = 0;
  v56[5] = v24 & v22;
  v56[6] = a2;
  v56[7] = a3;
  v47[2] = a1;
  swift_bridgeObjectRetain();
  v47[1] = a3;
  swift_retain();
  sub_100F27C20((uint64_t)v19);
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_10169A260);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10052E1EC();
    return swift_release();
  }
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v48 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v49 = v12;
  while (1)
  {
    uint64_t v31 = *(int *)(v25 + 48);
    v53(v15, v19, v54);
    uint64_t v32 = *(void *)&v19[v31];
    unint64_t v57 = v32;
    uint64_t v33 = *(void **)v7;
    unint64_t v35 = sub_100955FC8((uint64_t)v15);
    uint64_t v36 = v33[2];
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      goto LABEL_26;
    }
    char v39 = v34;
    if (v33[3] < v38) {
      break;
    }
    if (a4)
    {
      if (v34) {
        goto LABEL_17;
      }
    }
    else
    {
      sub_10097C6F8();
      if (v39) {
        goto LABEL_17;
      }
    }
LABEL_7:
    char v27 = *(void **)v7;
    *(void *)(*(void *)v7 + 8 * (v35 >> 6) + 64) |= 1 << v35;
    v53((char *)(v27[6] + *(void *)(v49 + 72) * v35), v15, v54);
    *(void *)(v27[7] + 8 * v35) = v32;
    uint64_t v28 = v27[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_24;
    }
    v27[2] = v30;
LABEL_9:
    sub_100F27C20((uint64_t)v19);
    uint64_t v25 = sub_1005057FC((uint64_t *)&unk_10169A260);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v19, 1, v25) == 1) {
      goto LABEL_5;
    }
  }
  sub_10095FB94(v38, a4 & 1);
  unint64_t v40 = sub_100955FC8((uint64_t)v15);
  if ((v39 & 1) != (v41 & 1)) {
    goto LABEL_25;
  }
  unint64_t v35 = v40;
  if ((v39 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_17:
  v56[0] = *(void *)(*(void *)(*(void *)v7 + 56) + 8 * v35);
  swift_retain();
  uint64_t v42 = v52;
  v50(v55, v56, &v57);
  if (!v42)
  {
    uint64_t v52 = 0;
    swift_release();
    swift_release();
    (*v48)(v15, v54);
    uint64_t v43 = *(void *)(*(void *)v7 + 56);
    uint64_t v44 = v55[0];
    swift_release();
    *(void *)(v43 + 8 * v35) = v44;
    goto LABEL_9;
  }
  swift_release();
  v56[0] = v42;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*v48)(v15, v54);
    sub_10052E1EC();
    swift_release();
    return swift_errorRelease();
  }
LABEL_26:
  v55[0] = 0;
  v55[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v45._object = (void *)0x8000000101274430;
  v45._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v45);
  _print_unlocked<A, B>(_:_:)();
  v46._countAndFlagsBits = 39;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100D1A04C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v63 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v55 = (uint64_t)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v54 = (uint64_t)v53 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v53 - v18;
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101684F70);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (void *)((char *)v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v25 = ~v24;
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v27 = -v24;
  uint64_t v56 = a1;
  uint64_t v57 = a1 + 64;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  uint64_t v58 = v25;
  uint64_t v59 = 0;
  uint64_t v60 = v28 & v26;
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  v53[1] = a1;
  swift_bridgeObjectRetain();
  v53[0] = a3;
  swift_retain();
  sub_100F27C3C((uint64_t)v23);
  uint64_t v29 = sub_1005057FC(&qword_10169A0F0);
  for (int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29);
        ;
        int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_10052E1EC();
      return swift_release();
    }
    uint64_t v36 = *v23;
    uint64_t v35 = v23[1];
    uint64_t v37 = (uint64_t)v19;
    sub_10051B3EC((uint64_t)v23 + *(int *)(v29 + 48), (uint64_t)v19, (uint64_t *)&unk_101674520);
    uint64_t v38 = *(void **)a5;
    unint64_t v40 = sub_100955F50(v36, v35);
    uint64_t v41 = v38[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      break;
    }
    char v44 = v39;
    if (v38[3] >= v43)
    {
      if (a4)
      {
        uint64_t v47 = *(void **)a5;
        if (v39) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_10097CD24();
        uint64_t v47 = *(void **)a5;
        if (v44) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1009609B8(v43, a4 & 1);
      unint64_t v45 = sub_100955F50(v36, v35);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_22;
      }
      unint64_t v40 = v45;
      uint64_t v47 = *(void **)a5;
      if (v44)
      {
LABEL_5:
        uint64_t v31 = v47[7];
        unint64_t v32 = *(void *)(v63 + 72) * v40;
        uint64_t v33 = v55;
        sub_100522E9C(v31 + v32, v55, (uint64_t *)&unk_101674520);
        uint64_t v34 = v54;
        sub_100522E9C(v33, v54, (uint64_t *)&unk_101674520);
        sub_100522F00(v33, (uint64_t *)&unk_101674520);
        uint64_t v19 = (char *)v37;
        sub_100522F00(v37, (uint64_t *)&unk_101674520);
        swift_bridgeObjectRelease();
        sub_1006063BC(v34, *(void *)(*(void *)a5 + 56) + v32, (uint64_t *)&unk_101674520);
        goto LABEL_6;
      }
    }
    v47[(v40 >> 6) + 8] |= 1 << v40;
    uint64_t v48 = (uint64_t *)(v47[6] + 16 * v40);
    *uint64_t v48 = v36;
    v48[1] = v35;
    uint64_t v19 = (char *)v37;
    sub_10051B3EC(v37, v47[7] + *(void *)(v63 + 72) * v40, (uint64_t *)&unk_101674520);
    uint64_t v49 = v47[2];
    BOOL v50 = __OFADD__(v49, 1);
    uint64_t v51 = v49 + 1;
    if (v50) {
      goto LABEL_21;
    }
    v47[2] = v51;
LABEL_6:
    sub_100F27C3C((uint64_t)v23);
    uint64_t v29 = sub_1005057FC(&qword_10169A0F0);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100D1A46C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  sub_1005057FC((uint64_t *)&unk_10169A250);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v25 = a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v9 = a3 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  int64_t v22 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v23 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    uint64_t v19 = *(void *)(*(void *)(v25 + 48) + 8 * i);
    uint64_t v27 = *(void *)(*(void *)(v25 + 56) + 8 * i);
    swift_retain();
    a1(&v26, &v27);
    uint64_t result = swift_release();
    if (v3)
    {
      swift_release();
      return (uint64_t)v6;
    }
    *(void *)(v23 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v19;
    *(void *)(v6[7] + 8 * i) = v26;
    uint64_t v20 = v6[2];
    BOOL v16 = __OFADD__(v20, 1);
    uint64_t v21 = v20 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v21;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v16 = __OFADD__(v7++, 1);
    if (v16) {
      goto LABEL_27;
    }
    if (v7 >= v22) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v9 + 8 * v7);
    if (!v17) {
      break;
    }
LABEL_15:
    unint64_t v13 = (v17 - 1) & v17;
  }
  int64_t v18 = v7 + 1;
  if (v7 + 1 >= v22) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 2;
  if (v7 + 2 >= v22) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 3;
  if (v7 + 3 >= v22) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_14:
    int64_t v7 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v22) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v9 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100D1A69C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100D1A6FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

id sub_100D1A71C(void *a1, char *a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  int64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v37 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v36 - v18;
  __n128 v22 = __chkstk_darwin(v20, v21);
  uint64_t v24 = (char *)&v36 - v23;
  (*(void (**)(__n128))((swift_isaMask & *a1) + 0x88))(v22);
  id v38 = a2;
  uint64_t v25 = *(void *)&a2[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v25, v11, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C(v11, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  LOBYTE(v11) = static UUID.== infix(_:_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26(v19, v12);
  v26(v24, v12);
  id v27 = 0;
  if ((v11 & 1) == 0)
  {
    type metadata accessor for CRLBoardItem(0);
    uint64_t v28 = swift_dynamicCastClass();
    if (v28)
    {
      uint64_t v29 = (void *)v28;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong) {
        return (id)Strong;
      }
      uint64_t v31 = *(void (**)(uint64_t))((swift_isaMask & *v29) + 0xB8);
      uint64_t v32 = swift_unknownObjectRetain();
      v31(v32);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) != 1)
      {
        uint64_t v34 = v37;
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v37, v7, v12);
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        id v27 = [v38 getBoardItemForUUID:isa];

        v26(v34, v12);
        return v27;
      }

      sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674520);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_getParentOf(transactable:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1315, (uint64_t)"unknown type", 12, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_getParentOf(transactable:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 1315);
    }
    return 0;
  }
  return v27;
}

char *sub_100D1ABB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6)
{
  int64_t v7 = v6;
  int v61 = a6;
  uint64_t v65 = a5;
  uint64_t v63 = a4;
  uint64_t v11 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = &v60[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for UUID();
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = &v60[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v64 = &v60[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21, v23);
  uint64_t v62 = &v60[-v24];
  *(void *)&v6[OBJC_IVAR____TtC8Freeform8CRLBoard_transactionContext] = 0;
  uint64_t v25 = &v6[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo];
  uint64_t v26 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *(void *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap] = _swiftEmptyDictionarySingleton;
  id v27 = &v7[OBJC_IVAR____TtC8Freeform8CRLBoard_fixupData];
  *(void *)id v27 = &_swiftEmptySetSingleton;
  *((void *)v27 + 1) = &_swiftEmptySetSingleton;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_cancellables] = &_swiftEmptySetSingleton;
  uint64_t v28 = OBJC_IVAR____TtC8Freeform8CRLBoard_opportunisticallyBuiltAffectedItemSetIncludingParents;
  *(void *)&v7[v28] = sub_100A45BA8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v29 = OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedChangeAvailablePublisher;
  sub_1005057FC(&qword_10169A000);
  swift_allocObject();
  uint64_t v30 = v7;
  *(void *)&v7[v29] = PassthroughSubject.init()();
  uint64_t v31 = OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedRealTimeChangesAvailablePublisher;
  swift_allocObject();
  *(void *)&v30[v31] = PassthroughSubject.init()();
  uint64_t v32 = OBJC_IVAR____TtC8Freeform8CRLBoard_changeSummaryPublisher;
  sub_1005057FC(&qword_10169A008);
  swift_allocObject();
  *(void *)&v30[v32] = PassthroughSubject.init()();
  *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimePendingChangesCancellable] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_store] = a1;
  *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_data] = a2;
  v30[OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported] = v61;
  uint64_t v33 = (objc_class *)type metadata accessor for CRLRootContainerItem(0);
  id v34 = objc_allocWithZone(v33);
  id v35 = a1;
  swift_retain();
  swift_retain();
  id v36 = sub_100850114((uint64_t)v35, a3);
  uint64_t v37 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
  *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer] = v36;
  id v38 = objc_allocWithZone(v33);
  id v39 = v35;
  uint64_t v40 = v63;
  swift_retain();
  *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer] = sub_100850114((uint64_t)v39, v40);
  uint64_t v41 = a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v41, (uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v14, type metadata accessor for CRLBoardCRDTData);
  uint64_t v42 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  unint64_t v43 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
  swift_bridgeObjectRetain();
  char v44 = v62;
  sub_100753370((uint64_t)v18, v42, v43, (uint64_t)v62);
  unint64_t v45 = v64;
  sub_100D1E720((uint64_t)v44, (uint64_t)v64, type metadata accessor for CRLBoardIdentifier);
  char v46 = *(char **)&v30[v37];
  uint64_t v47 = *(void (**)(uint64_t))(**(void **)&v46[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v48 = v46;
  uint64_t v49 = swift_retain();
  v47(v49);

  swift_release();
  type metadata accessor for CRLBoardChangeSet(0);
  swift_allocObject();
  *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges] = sub_1006A9C50((uint64_t)v45, (uint64_t)v18, 0);
  type metadata accessor for CRLFreehandDrawingShapeItemBucketManager();
  uint64_t v50 = swift_allocObject();
  sub_1005057FC((uint64_t *)&unk_10169A010);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = _swiftEmptyDictionarySingleton;
  *(void *)(v51 + 24) = _swiftEmptyDictionarySingleton;
  *(void *)(v50 + 16) = v51;
  *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_freehandDrawingBucketManager] = v50;
  type metadata accessor for CRLActiveBoardShareState();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v53 = *(void **)(v52 + 16);
  uint64_t v54 = v65;
  *(void *)(v52 + 16) = v65;
  id v55 = v54;

  *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] = v52;
  *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLBoard_lastSaveChangesTime] = 0;

  uint64_t v56 = (objc_class *)type metadata accessor for CRLBoard(0);
  v67.receiver = v30;
  v67.super_class = v56;
  uint64_t v57 = (char *)[super init];
  swift_unknownObjectWeakAssign();
  uint64_t v66 = *(void *)(*(void *)&v57[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges]
                  + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_uncommittedChangeAvailablePublisher);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v58 = v57;
  swift_retain();
  sub_1005057FC(&qword_10167AAC0);
  sub_100523288(&qword_10169A020, &qword_10167AAC0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  sub_100D1A69C((uint64_t)v44, type metadata accessor for CRLBoardIdentifier);
  return v58;
}

void sub_100D1B274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  int64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D1E720(v18, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D1A69C((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  sub_100D15428((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  LOBYTE(v18) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  if ((v18 & 1) == 0)
  {
    swift_beginAccess();
    sub_10095AE74((uint64_t)v16);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  v19(v16, v8);
  type metadata accessor for CRLBoardItem(0);
  uint64_t v20 = swift_dynamicCastClass();
  if (v20)
  {
    uint64_t v21 = v20;
    type metadata accessor for CRLTransactableHashableWrapper();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = &off_101518040;
    swift_beginAccess();
    swift_unknownObjectRetain_n();
    swift_retain();
    sub_100CB4EEC(&v26, v22);
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    sub_100D16184(v22);
    swift_endAccess();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_10050BF48(0, (unint64_t *)&qword_10167B170);
    uint64_t v23 = (void *)static OS_os_log.default.getter();
    uint64_t v24 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Trying to remove non-boardItem transactable.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100D1B648(uint64_t a1)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_10117E810;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(result + 56) = &type metadata for Int;
    *(void *)(result + 64) = &protocol witness table for Int;
    *(void *)(result + 32) = a1 + 1;
    uint64_t v7 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_100D1B798(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v64 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v64, v6);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a3)
  {
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v10 & 1) == 0) {
        goto LABEL_61;
      }
LABEL_4:
      uint64_t v11 = *(void *)(a2 + 16);
      if (!v11) {
        return result;
      }
      uint64_t v12 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v13 = (void *)(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
      swift_bridgeObjectRetain();
      uint64_t v63 = a2;
      uint64_t v14 = (uint64_t *)(a2 + 40);
      long long v62 = xmmword_10117E810;
      break;
  }
  do
  {
    uint64_t v16 = *(v14 - 1);
    uint64_t v15 = *v14;
    BOOL v17 = v16 == 0x656C746974 && v15 == 0xE500000000000000;
    if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v18 = *(void *)(v65 + v12) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100D1E720(v18, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
      sub_1005057FC(&qword_101674450);
      CRRegister.wrappedValue.getter();
      uint64_t v19 = v68;
      uint64_t v20 = v69;
      sub_100D1A69C((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
      uint64_t v70 = &type metadata for String;
      uint64_t v68 = v19;
      uint64_t v69 = v20;
      swift_beginAccess();
      sub_100522E9C((uint64_t)&v68, (uint64_t)v67, &qword_101672BF0);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = (void *)*v13;
      uint64_t v22 = v66;
      *uint64_t v13 = 0x8000000000000000;
      unint64_t v24 = sub_1009563E8();
      uint64_t v25 = v22[2];
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        type metadata accessor for CRLChangeProperty(0);
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
LABEL_61:
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 609, (uint64_t)"Invalid CRLTransactablePropertyMapKeys key for CRLBoard", 55, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Invalid CRLTransactablePropertyMapKeys key for CRLBoard");
        sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 609);
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v60, v61);
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x100D1C174);
      }
      char v28 = v23;
      if (v22[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_10097C320();
        }
      }
      else
      {
        sub_10095F04C(v27, isUniquelyReferenced_nonNull_native);
        uint64_t v29 = sub_1009563E8();
        if ((v28 & 1) != (v30 & 1)) {
          goto LABEL_60;
        }
        unint64_t v24 = v29;
      }
      uint64_t v31 = v66;
      if (v28) {
        goto LABEL_18;
      }
      v66[(v24 >> 6) + 8] |= 1 << v24;
      *(void *)(v31[6] + 8 * v24) = 2;
      sub_10051B3EC((uint64_t)v67, v31[7] + 32 * v24, &qword_101672BF0);
      uint64_t v32 = v31[2];
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (v33) {
        goto LABEL_55;
      }
LABEL_20:
      v31[2] = v34;
      goto LABEL_21;
    }
    BOOL v35 = v16 == 0x7453747265736E69 && v15 == 0xEF61746144656C79;
    if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v70 = &type metadata for Bool;
      LOBYTE(v68) = 1;
      swift_beginAccess();
      sub_100522E9C((uint64_t)&v68, (uint64_t)v67, &qword_101672BF0);
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = (void *)*v13;
      uint64_t v37 = v66;
      *uint64_t v13 = 0x8000000000000000;
      unint64_t v24 = sub_1009563E8();
      uint64_t v39 = v37[2];
      BOOL v40 = (v38 & 1) == 0;
      uint64_t v41 = v39 + v40;
      if (__OFADD__(v39, v40)) {
        goto LABEL_56;
      }
      char v42 = v38;
      if (v37[3] >= v41)
      {
        if ((v36 & 1) == 0) {
          sub_10097C320();
        }
      }
      else
      {
        sub_10095F04C(v41, v36);
        uint64_t v43 = sub_1009563E8();
        if ((v42 & 1) != (v44 & 1)) {
          goto LABEL_60;
        }
        unint64_t v24 = v43;
      }
      uint64_t v31 = v66;
      if ((v42 & 1) == 0)
      {
        v66[(v24 >> 6) + 8] |= 1 << v24;
        *(void *)(v31[6] + 8 * v24) = 3;
        sub_10051B3EC((uint64_t)v67, v31[7] + 32 * v24, &qword_101672BF0);
        uint64_t v45 = v31[2];
        BOOL v33 = __OFADD__(v45, 1);
        uint64_t v34 = v45 + 1;
        if (v33) {
          goto LABEL_57;
        }
        goto LABEL_20;
      }
LABEL_18:
      sub_1006063BC((uint64_t)v67, v31[7] + 32 * v24, &qword_101672BF0);
LABEL_21:
      *uint64_t v13 = v31;
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_100522F00((uint64_t)&v68, &qword_101672BF0);
      goto LABEL_22;
    }
    if (v16 == 0x73656E656373 && v15 == 0xE600000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v46 = *(void *)(v65 + v12) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v47 = v46 + *(int *)(v64 + 36);
      uint64_t v70 = (void *)type metadata accessor for CRLBoardScenesCRDTData(0);
      uint64_t v48 = sub_1005767BC(&v68);
      sub_100D1E720(v47, (uint64_t)v48, type metadata accessor for CRLBoardScenesCRDTData);
      swift_beginAccess();
      sub_100522E9C((uint64_t)&v68, (uint64_t)v67, &qword_101672BF0);
      char v49 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = (void *)*v13;
      uint64_t v50 = v66;
      *uint64_t v13 = 0x8000000000000000;
      unint64_t v24 = sub_1009563E8();
      uint64_t v52 = v50[2];
      BOOL v53 = (v51 & 1) == 0;
      uint64_t v54 = v52 + v53;
      if (__OFADD__(v52, v53)) {
        goto LABEL_58;
      }
      char v55 = v51;
      if (v50[3] >= v54)
      {
        if ((v49 & 1) == 0) {
          sub_10097C320();
        }
      }
      else
      {
        sub_10095F04C(v54, v49);
        uint64_t v56 = sub_1009563E8();
        if ((v55 & 1) != (v57 & 1)) {
          goto LABEL_60;
        }
        unint64_t v24 = v56;
      }
      uint64_t v31 = v66;
      if ((v55 & 1) == 0)
      {
        v66[(v24 >> 6) + 8] |= 1 << v24;
        *(void *)(v31[6] + 8 * v24) = 53;
        sub_10051B3EC((uint64_t)v67, v31[7] + 32 * v24, &qword_101672BF0);
        uint64_t v58 = v31[2];
        BOOL v33 = __OFADD__(v58, 1);
        uint64_t v34 = v58 + 1;
        if (v33) {
          goto LABEL_59;
        }
        goto LABEL_20;
      }
      goto LABEL_18;
    }
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v62;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v16;
    *(void *)(inited + 40) = v15;
    swift_bridgeObjectRetain();
    sub_1005598CC(inited, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoard.swift", 80, 2, 605);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
LABEL_22:
    v14 += 2;
    --v11;
  }
  while (v11);
  return swift_bridgeObjectRelease();
}

unint64_t sub_100D1C19C()
{
  unint64_t result = qword_10169ABB0;
  if (!qword_10169ABB0)
  {
    sub_10050BF48(255, (unint64_t *)&qword_10168D3C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ABB0);
  }
  return result;
}

uint64_t sub_100D1C204@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006AD0F8(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), a1);
}

void sub_100D1C224()
{
  sub_1006AA5B4(v0);
}

uint64_t sub_100D1C22C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D1C23C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100D1C24C()
{
  return swift_release();
}

uint64_t sub_100D1C254()
{
  uint64_t v1 = type metadata accessor for CRLBoardDataStoreChangeSet(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);

  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  uint64_t v4 = v2 | 7;
  uint64_t v5 = (v2 + 40) & ~v2;
  uint64_t v6 = v5 + v3;
  uint64_t v7 = v0 + v5;
  uint64_t v8 = v0 + v5 + *(int *)(v1 + 20);
  uint64_t v9 = type metadata accessor for UUID();
  char v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  v10(v7 + *(int *)(v1 + 24), v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v4);
}

uint64_t sub_100D1C3FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardDataStoreChangeSet(0) - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = (void (*)(uint64_t, void))v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100D12B9C(a1, v4, v5, v6, v7);
}

uint64_t sub_100D1C478()
{
  return sub_1006AA0CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100D1C480()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100D1C490()
{
  sub_1006AA720(v0);
}

uint64_t sub_100D1C498()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D1C4A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

char *sub_100D1C4B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v129 = a4;
  uint64_t v130 = a3;
  uint64_t v127 = a2;
  id v131 = a1;
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v128 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  int v124 = (char *)&v112 - v9;
  uint64_t v143 = type metadata accessor for CRLContainerItemCRDTData(0) - 8;
  uint64_t v11 = __chkstk_darwin(v143, v10);
  uint64_t v140 = (uint64_t)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  id v139 = (char *)&v112 - v14;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v123 = *(void *)(v15 - 8);
  uint64_t v16 = v123;
  uint64_t v18 = __chkstk_darwin(v15, v17);
  id v126 = (char *)&v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  long long v125 = (char *)&v112 - v22;
  __chkstk_darwin(v21, v23);
  uint64_t v145 = (uint64_t)&v112 - v24;
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  uint64_t v137 = (uint64_t)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v112 - v30;
  uint64_t v138 = type metadata accessor for CRLBoardItemParentAffinity() - 8;
  uint64_t v33 = __chkstk_darwin(v138, v32);
  BOOL v35 = (char *)&v112 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v36);
  uint64_t v136 = (uint64_t)&v112 - v37;
  uint64_t v38 = sub_1005057FC((uint64_t *)&unk_101683E10);
  uint64_t v40 = __chkstk_darwin(v38 - 8, v39);
  uint64_t v134 = (uint64_t)&v112 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40, v42);
  uint64_t v133 = (uint64_t)&v112 - v43;
  id v44 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) init];
  unint64_t v144 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v132 = v15;
  v144(v31, 1, 1, v15);
  uint64_t v115 = v16 + 56;
  [v44 position];
  float v46 = v45;
  float v48 = v47;
  [v44 size];
  float v50 = v49;
  float v52 = v51;
  [v44 angle];
  float v54 = v53;
  LODWORD(v142) = [v44 widthValid];
  LODWORD(v141) = [v44 heightValid];
  unsigned __int8 v55 = [v44 horizontalFlip];
  unsigned __int8 v56 = [v44 verticalFlip];
  uint64_t v114 = v31;
  uint64_t v57 = v137;
  sub_100522E9C((uint64_t)v31, v137, (uint64_t *)&unk_101674520);
  v144(v35, 1, 1, v15);
  uint64_t v58 = v138;
  *(void *)&v35[*(int *)(v138 + 32)] = _swiftEmptyDictionarySingleton;
  sub_1006063BC(v57, (uint64_t)v35, (uint64_t *)&unk_101674520);
  uint64_t v59 = &v35[*(int *)(v58 + 28)];
  *(float *)uint64_t v59 = v46;
  *((float *)v59 + 1) = v48;
  *((float *)v59 + 2) = v50;
  *((float *)v59 + 3) = v52;
  *((float *)v59 + 4) = v54;
  v59[20] = (char)v142;
  v59[21] = v141;
  v59[22] = v55;
  v59[23] = v56;
  *((void *)v59 + 3) = _swiftEmptyDictionarySingleton;
  CKRecordID v121 = v35;
  Swift::String v122 = type metadata accessor for CRLBoardItemParentAffinity;
  uint64_t v60 = v136;
  sub_100D1D0E4((uint64_t)v35, v136, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
  sub_10051A41C(v147);
  sub_10051B3EC((uint64_t)v147, (uint64_t)v146, (uint64_t *)&unk_101683E20);
  uint64_t v61 = v145;
  UUID.init()();
  uint64_t v62 = v133;
  sub_100FC2584(v61, v60, 0, 0, 0, 0xE000000000000000, (uint64_t)v146, v133);
  uint64_t v63 = (uint64_t)v139;
  *(void *)&v139[*(int *)(v143 + 28)] = _swiftEmptyDictionarySingleton;
  uint64_t v120 = sub_100D15428((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v64 = v132;
  CROrderedSet.init()();
  uint64_t v65 = v134;
  sub_100522E9C(v62, v134, (uint64_t *)&unk_101683E10);
  uint64_t v119 = type metadata accessor for CRLContainerItemCRDTData;
  uint64_t v66 = v140;
  sub_100D1E720(v63, v140, type metadata accessor for CRLContainerItemCRDTData);
  uint64_t v141 = 0x2000400000000;

  uint64_t v118 = type metadata accessor for CRLContainerItemCRDTData;
  sub_100D1A69C(v63, type metadata accessor for CRLContainerItemCRDTData);
  sub_100522F00(v62, (uint64_t *)&unk_101683E10);
  uint64_t v116 = type metadata accessor for CRLContainerItemData(0);
  uint64_t v67 = swift_allocObject();
  uint64_t v117 = type metadata accessor for CRLContainerItemCRDTData;
  sub_100D1D0E4(v66, v67 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
  sub_10051B3EC(v65, v67 + *(void *)(*(void *)v67 + 632), (uint64_t *)&unk_101683E10);
  uint64_t v135 = 0x1000000000000;
  id v142 = sub_10068B398(0x1000000000000, 0x2000400000000, 0x1000000000000, 4);
  id v68 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) init];
  uint64_t v69 = (uint64_t)v114;
  v144(v114, 1, 1, v64);
  [v68 position];
  float v71 = v70;
  float v73 = v72;
  [v68 size];
  float v75 = v74;
  float v77 = v76;
  [v68 angle];
  float v79 = v78;
  unsigned int v113 = [v68 widthValid];
  unsigned int v112 = [v68 heightValid];
  LOBYTE(v63) = [v68 horizontalFlip];
  LOBYTE(v65) = [v68 verticalFlip];
  uint64_t v80 = v137;
  sub_100522E9C(v69, v137, (uint64_t *)&unk_101674520);
  uint64_t v81 = (uint64_t)v121;
  v144(v121, 1, 1, v64);
  uint64_t v82 = v138;
  *(void *)(v81 + *(int *)(v138 + 32)) = _swiftEmptyDictionarySingleton;
  sub_1006063BC(v80, v81, (uint64_t *)&unk_101674520);
  uint64_t v83 = v81 + *(int *)(v82 + 28);
  *(float *)uint64_t v83 = v71;
  *(float *)(v83 + 4) = v73;
  *(float *)(v83 + 8) = v75;
  *(float *)(v83 + 12) = v77;
  *(float *)(v83 + 16) = v79;
  *(unsigned char *)(v83 + 20) = v113;
  *(unsigned char *)(v83 + 21) = v112;
  *(unsigned char *)(v83 + 22) = v63;
  *(unsigned char *)(v83 + 23) = v65;
  *(void *)(v83 + 24) = _swiftEmptyDictionarySingleton;
  uint64_t v84 = v136;
  sub_100D1D0E4(v81, v136, (uint64_t (*)(void))v122);
  sub_100522F00(v69, (uint64_t *)&unk_101674520);
  uint64_t v85 = v145;
  UUID.init()();
  uint64_t v86 = v133;
  sub_100FC2584(v85, v84, 0, 0, 0, 0xE000000000000000, (uint64_t)v146, v133);
  uint64_t v87 = (uint64_t)v139;
  *(void *)&v139[*(int *)(v143 + 28)] = _swiftEmptyDictionarySingleton;
  uint64_t v88 = v132;
  CROrderedSet.init()();
  uint64_t v89 = v134;
  sub_100522E9C(v86, v134, (uint64_t *)&unk_101683E10);
  uint64_t v90 = v140;
  sub_100D1E720(v87, v140, v119);

  sub_100D1A69C(v87, v118);
  sub_100522F00(v86, (uint64_t *)&unk_101683E10);
  uint64_t v91 = swift_allocObject();
  sub_100D1D0E4(v90, v91 + qword_10171BE80, v117);
  sub_10051B3EC(v89, v91 + *(void *)(*(void *)v91 + 632), (uint64_t *)&unk_101683E10);
  unint64_t v92 = sub_10068B398(v135, v141, v135, 4);
  uint64_t v93 = v85;
  uint64_t v94 = v127;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v93, v127, v88);
  uint64_t v95 = (uint64_t)v142 + *(void *)(*v142 + 632);
  swift_beginAccess();
  sub_100522E9C(v95, v86, (uint64_t *)&unk_101683E10);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  uint64_t v96 = (uint64_t)v125;
  CRRegister.wrappedValue.getter();
  sub_100522F00(v86, (uint64_t *)&unk_101683E10);
  swift_release();
  uint64_t v97 = (uint64_t)v92 + *(void *)(*v92 + 632);
  swift_beginAccess();
  sub_100522E9C(v97, v86, (uint64_t *)&unk_101683E10);
  swift_retain();
  CRRegister.wrappedValue.getter();
  sub_100522F00(v86, (uint64_t *)&unk_101683E10);
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v98 = (uint64_t)v124;
  sub_1010490B8(v145, v96);
  uint64_t v99 = v98;
  uint64_t v100 = v128;
  sub_100D1E720(v98, v128, type metadata accessor for CRLBoardCRDTData);
  unint64_t v101 = (uint64_t *)(v94 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v103 = *v101;
  uint64_t v102 = v101[1];
  type metadata accessor for CRLBoardData(0);
  char v104 = (void *)swift_allocObject();
  uint64_t v105 = v135;
  v104[2] = 7;
  v104[3] = v105;
  v104[4] = v141;
  v104[5] = v105;
  sub_100D1D0E4(v100, (uint64_t)v104 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
  uint64_t v106 = (void *)((char *)v104 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  *uint64_t v106 = v103;
  v106[1] = v102;
  uint64_t v107 = qword_101670140;
  swift_bridgeObjectRetain();
  if (v107 != -1) {
    swift_once();
  }
  if (!sub_100E1B718((void *)qword_10169E5C0)) {
    sub_100E1B9C8();
  }
  id v108 = objc_allocWithZone((Class)type metadata accessor for CRLBoard(0));
  id v109 = v131;
  long long v110 = sub_100D1ABB4(v109, (uint64_t)v104, (uint64_t)v142, (uint64_t)v92, 0, 0);

  swift_release();
  swift_release();
  swift_release();
  sub_100D1A69C(v99, type metadata accessor for CRLBoardCRDTData);
  return v110;
}

uint64_t sub_100D1D0E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100D1D14C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100D1D184(char *a1)
{
  sub_100D04768(a1, v1, &OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedChangeAvailablePublisher);
}

uint64_t sub_100D1D1A8(uint64_t a1)
{
  return sub_100C77988(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

char *sub_100D1D1B4(void *a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone((Class)type metadata accessor for CRLImmutableBoard(0));
  uint64_t v8 = a1;
  uint64_t v9 = sub_100D135E4(v8);
  uint64_t v10 = (objc_class *)type metadata accessor for CRLUUIDRemapHelper();
  uint64_t v11 = objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_objectUUIDMap] = _swiftEmptyDictionarySingleton;
  *(void *)&v11[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap] = _swiftEmptyDictionarySingleton;
  v11[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs] = 0;
  v17.receiver = v11;
  v17.super_class = v10;
  id v12 = [super init];
  sub_100D15428(&qword_10167F6C0, (void (*)(uint64_t))type metadata accessor for CRLImmutableBoard);
  uint64_t v13 = v9;
  swift_unknownObjectRetain();
  UUID.init()();
  type metadata accessor for CRLTransactionContext(0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = sub_100794154((uint64_t)v13, 0, 0, (uint64_t)v6, 0, v14);

  sub_100D052A0((uint64_t)v8, v15, (uint64_t)v12);
  if (v1)
  {

    swift_release();
  }
  else
  {
    (*(void (**)(void))(*(void *)v15 + 720))();

    swift_release();
    swift_release();
  }
  return v13;
}

uint64_t sub_100D1D3C4()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100528D08;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_10169A048 + dword_10169A048);
  return v5(v2, v3);
}

uint64_t sub_100D1D478(uint64_t a1)
{
  return sub_100D124C4(a1);
}

uint64_t sub_100D1D480()
{
  uint64_t v1 = sub_1005057FC(&qword_101699680);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100D1D514(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  sub_1005057FC(&qword_101699680);

  return sub_100D12604(a1, v3);
}

uint64_t sub_100D1D59C()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  char v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100528488;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_10169A070 + dword_10169A070);
  return v5(v2, v3);
}

uint64_t sub_100D1D650(uint64_t a1)
{
  return sub_100C70E28(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_100D1D658(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a2;
  double v45 = a1;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  __chkstk_darwin(v10, v11);
  unsigned __int8 v56 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v62 = (char *)&v42 - v16;
  uint64_t v50 = 0;
  int64_t v17 = 0;
  uint64_t v48 = a3;
  uint64_t v20 = *(void *)(a3 + 56);
  uint64_t v19 = a3 + 56;
  uint64_t v18 = v20;
  uint64_t v21 = 1 << *(unsigned char *)(v19 - 24);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v18;
  uint64_t v43 = v19;
  int64_t v44 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v57 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v58 = v15 + 16;
  unsigned __int8 v55 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v46 = v15;
  uint64_t v47 = a4;
  uint64_t v60 = (void (**)(char *, uint64_t))(v15 + 8);
  unint64_t v61 = v15 + 56;
  if ((v22 & v18) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  int64_t v29 = v17 + 1;
  if (__OFADD__(v17, 1)) {
    goto LABEL_34;
  }
  if (v29 >= v44) {
    goto LABEL_32;
  }
  unint64_t v30 = *(void *)(v43 + 8 * v29);
  ++v17;
  if (!v30)
  {
    int64_t v17 = v29 + 1;
    if (v29 + 1 >= v44) {
      goto LABEL_32;
    }
    unint64_t v30 = *(void *)(v43 + 8 * v17);
    if (!v30)
    {
      int64_t v17 = v29 + 2;
      if (v29 + 2 >= v44) {
        goto LABEL_32;
      }
      unint64_t v30 = *(void *)(v43 + 8 * v17);
      if (!v30)
      {
        int64_t v31 = v29 + 3;
        if (v31 < v44)
        {
          unint64_t v30 = *(void *)(v43 + 8 * v31);
          if (!v30)
          {
            while (1)
            {
              int64_t v17 = v31 + 1;
              if (__OFADD__(v31, 1)) {
                goto LABEL_35;
              }
              if (v17 >= v44) {
                goto LABEL_32;
              }
              unint64_t v30 = *(void *)(v43 + 8 * v17);
              ++v31;
              if (v30) {
                goto LABEL_23;
              }
            }
          }
          int64_t v17 = v31;
          goto LABEL_23;
        }
LABEL_32:
        uint64_t v41 = v48;
        swift_retain();
        sub_10052BE64(v45, v42, v50, v41);
        return;
      }
    }
  }
LABEL_23:
  uint64_t v27 = (v30 - 1) & v30;
  for (unint64_t i = __clz(__rbit64(v30)) + (v17 << 6); ; unint64_t i = v26 | (v17 << 6))
  {
    uint64_t v32 = *(void *)(v48 + 48);
    unint64_t v51 = i;
    uint64_t v33 = *(void **)(v32 + 8 * i);
    uint64_t v34 = *(void (**)(void *))((swift_isaMask & *v33) + 0x88);
    float v52 = v33;
    v34(v52);
    uint64_t v35 = *(void *)(a4 + 16);
    unint64_t v53 = v27;
    int64_t v54 = v17;
    if (v35)
    {
      unint64_t v49 = v61 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v36 = a4 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
      uint64_t v59 = *(void *)(v46 + 72);
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v37(v9, v36, v10);
        uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v61;
        (*(void (**)(char *, void, uint64_t, uint64_t))v61)(v9, 0, 1, v10);
        if ((*v57)(v9, 1, v10) == 1) {
          break;
        }
        uint64_t v38 = v56;
        (*v55)(v56, v9, v10);
        sub_100D15428((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v40 = *v60;
        (*v60)(v38, v10);
        if (v39)
        {
          a4 = v47;
          swift_bridgeObjectRelease();
          v40(v62, v10);

          unint64_t v23 = v53;
          int64_t v17 = v54;
          if (v53) {
            goto LABEL_9;
          }
          goto LABEL_10;
        }
        v36 += v59;
        if (!--v35) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v61;
      swift_bridgeObjectRetain();
LABEL_6:
      v24(v9, 1, 1, v10);
    }
    a4 = v47;
    swift_bridgeObjectRelease();
    (*v60)(v62, v10);

    *(unint64_t *)((char *)v45 + ((v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v51;
    BOOL v25 = __OFADD__(v50++, 1);
    unint64_t v23 = v53;
    int64_t v17 = v54;
    if (v25) {
      break;
    }
    if (!v53) {
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v26 = __clz(__rbit64(v23));
    uint64_t v27 = (v23 - 1) & v23;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_100D1DB68(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v10);
    bzero((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_100D1D658((unint64_t *)((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v12 = v11;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v8);
    swift_bridgeObjectRetain();
    sub_100D1D658((unint64_t *)v13, v7, a1, a2);
    uint64_t v12 = v14;
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

Swift::Int sub_100D1DD34(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v41 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v47 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  unint64_t v53 = (char *)v40 - v15;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = &_swiftEmptySetSingleton;
    unsigned __int8 v56 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    uint64_t v45 = __CocoaSet.makeIterator()();
    uint64_t v16 = __CocoaSet.Iterator.next()();
    if (v16)
    {
      uint64_t v17 = v16;
      v40[1] = v3;
      uint64_t v43 = type metadata accessor for CRLBoardItem(0);
      uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      uint64_t v49 = v41 + 16;
      uint64_t v46 = (void (**)(char *, char *, uint64_t))(v41 + 32);
      float v52 = (void (**)(char *, uint64_t))(v41 + 8);
      uint64_t v42 = (char *)&type metadata for Swift.AnyObject + 8;
      unint64_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v40[2] = (v41 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v44 = a2;
      uint64_t v18 = v47;
      do
      {
        uint64_t v54 = v17;
        uint64_t v25 = swift_dynamicCast();
        (*(void (**)(uint64_t))((swift_isaMask & *v55) + 0x88))(v25);
        uint64_t v26 = *(void *)(a2 + 16);
        if (v26)
        {
          unint64_t v27 = a2 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
          uint64_t v50 = *(void *)(v41 + 72);
          uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v41 + 16);
          swift_bridgeObjectRetain();
          while (1)
          {
            v28(v9, v27, v10);
            int64_t v29 = *v51;
            (*v51)(v9, 0, 1, v10);
            if ((*v48)(v9, 1, v10) == 1) {
              break;
            }
            (*v46)(v18, v9, v10);
            sub_100D15428((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
            int64_t v31 = *v52;
            (*v52)(v18, v10);
            if (v30)
            {
              a2 = v44;
              swift_bridgeObjectRelease();
              v31(v53, v10);

              goto LABEL_7;
            }
            v27 += v50;
            if (!--v26) {
              goto LABEL_15;
            }
          }
        }
        else
        {
          int64_t v29 = *v51;
          swift_bridgeObjectRetain();
LABEL_15:
          v29(v9, 1, 1, v10);
        }
        a2 = v44;
        swift_bridgeObjectRelease();
        (*v52)(v53, v10);
        uint64_t v32 = v55;
        uint64_t v33 = v56;
        unint64_t v34 = v56[2];
        if (v56[3] <= v34)
        {
          sub_100CBF18C(v34 + 1);
          uint64_t v33 = v56;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(v33[5]);
        uint64_t v20 = v33 + 7;
        uint64_t v21 = -1 << *((unsigned char *)v33 + 32);
        unint64_t v22 = result & ~v21;
        unint64_t v23 = v22 >> 6;
        if (((-1 << v22) & ~v33[(v22 >> 6) + 7]) != 0)
        {
          unint64_t v24 = __clz(__rbit64((-1 << v22) & ~v33[(v22 >> 6) + 7])) | v22 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v35 = 0;
          unint64_t v36 = (unint64_t)(63 - v21) >> 6;
          do
          {
            if (++v23 == v36 && (v35 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v37 = v23 == v36;
            if (v23 == v36) {
              unint64_t v23 = 0;
            }
            v35 |= v37;
            uint64_t v38 = v20[v23];
          }
          while (v38 == -1);
          unint64_t v24 = __clz(__rbit64(~v38)) + (v23 << 6);
        }
        *(void *)((char *)v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
        *(void *)(v33[6] + 8 * v24) = v32;
        ++v33[2];
LABEL_7:
        uint64_t v17 = __CocoaSet.Iterator.next()();
      }
      while (v17);
      uint64_t v2 = v56;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v39 = sub_100D1DB68(a1, a2);
    if (!v3) {
      return v39;
    }
  }
  return (Swift::Int)v2;
}

uint64_t sub_100D1E260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardScenesCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100D1E2C8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D1E308()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100D1E318(char *a1)
{
  sub_100D04768(a1, v1, &OBJC_IVAR____TtC8Freeform8CRLBoard_uncommittedRealTimeChangesAvailablePublisher);
}

uint64_t sub_100D1E33C()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100D1E34C()
{
  unint64_t result = qword_10169A208;
  if (!qword_10169A208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A208);
  }
  return result;
}

uint64_t sub_100D1E3A0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D1E3B0(uint64_t a1, uint64_t a2)
{
  return sub_100D1574C(a1, a2, v2);
}

uint64_t sub_100D1E3B8(void *a1)
{
  return sub_1006B2EF8(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_100D1E3D4(uint64_t a1, uint64_t a2)
{
  return sub_100D15958(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t sub_100D1E3DC(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 16) + 8);
}

uint64_t sub_100D1E3E8(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 16) + 16);
}

uint64_t sub_100D1E3F4()
{
  return sub_100D1E424();
}

uint64_t sub_100D1E40C()
{
  return sub_100D1E424();
}

uint64_t sub_100D1E424()
{
  type metadata accessor for Ref();

  return swift_getWitnessTable();
}

unint64_t sub_100D1E474(void *a1)
{
  return ((*(void *)(*(void *)(*a1 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
}

uint64_t sub_100D1E4D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + a1 - 32) - 8) + 8))();
}

__n128 sub_100D1E504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + a1 - 32) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t))v5)(a2, a1);
  unint64_t v6 = (*(void *)(v5 + 48) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  __n128 result = *(__n128 *)(v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v7;
  *(__n128 *)(v8 + 16) = result;
  return result;
}

uint64_t sub_100D1E588()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_100D1E5D4()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

__n128 sub_100D1E60C(__n128 *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1->n128_u64[0] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  (*(void (**)(uint64_t, unint64_t))(v4 + 32))(a2, (unint64_t)a1->n128_u64+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  unint64_t v6 = (__n128 *)(a2 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  __n128 result = a1[1];
  __n128 *v6 = *a1;
  v6[1] = result;
  return result;
}

void sub_100D1E690()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  long long v4 = *(_OWORD *)(v0 + 16);
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  char v7 = v3;
  sub_100D026FC((uint64_t *)&v4, *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_100D1E6D4()
{
  return _swift_deallocObject(v0, 48, 7);
}

void *sub_100D1E6E4()
{
  return sub_100CFC684(*(unsigned char **)(v0 + 16), *(void *(**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_100D1E6F0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D1E700(uint64_t a1)
{
  return sub_100D03D6C(a1, v1) & 1;
}

uint64_t sub_100D1E720(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100D1E788(uint64_t a1)
{
  return sub_100C71820(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

ValueMetadata *type metadata accessor for CRLBoard.CRLBoardError()
{
  return &type metadata for CRLBoard.CRLBoardError;
}

uint64_t sub_100D1E7DC(void *a1)
{
  return sub_100D1E3B8(a1);
}

void sub_100D1E7F4(uint64_t a1, uint64_t a2, int a3)
{
  sub_100CFE220(*(void *)(v3 + OBJC_IVAR____TtC8Freeform30CRLCommandMergeDatabaseChanges_fetchResult), a2, 0, a3);
}

uint64_t sub_100D1E860()
{
  return swift_release();
}

id sub_100D1E870()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandMergeDatabaseChanges();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommandMergeDatabaseChanges()
{
  return self;
}

unint64_t sub_100D1E8DC()
{
  unint64_t result = qword_10169A2E0;
  if (!qword_10169A2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A2E0);
  }
  return result;
}

unint64_t sub_100D1E934()
{
  unint64_t result = qword_10169A2E8;
  if (!qword_10169A2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A2E8);
  }
  return result;
}

uint64_t sub_100D1E988()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100D1E9A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100D1E9C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v66 = type metadata accessor for InputConnectionBehavior();
  uint64_t v69 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v1);
  uint64_t v65 = &v48[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v64 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v63 = &v48[-v8];
  uint64_t v9 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v62 = &v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v12 - 8, v13);
  unint64_t v61 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = &v48[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = type metadata accessor for Locale();
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v22 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v24 = type metadata accessor for LocalizedStringResource();
  uint64_t v58 = v24;
  uint64_t v68 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v25);
  __chkstk_darwin(v26, v27);
  uint64_t v57 = &v48[-v28];
  uint64_t v60 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  char v30 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 104);
  v30(v19, enum case for LocalizedStringResource.BundleDescription.main(_:), v15);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = v29;
  unsigned int v49 = v29;
  uint64_t v51 = v15;
  v30(v19, v29, v15);
  uint64_t v50 = v30;
  uint64_t v52 = v16 + 104;
  uint64_t v32 = v61;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v33 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v68 + 56);
  v68 += 56;
  uint64_t v59 = v33;
  v33(v32, 0, 1, v24);
  uint64_t v34 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v62, 1, 1, v34);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v30(v19, v31, v15);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  char v35 = v63;
  IntentDialog.init(_:)();
  uint64_t v36 = type metadata accessor for IntentDialog();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  unint64_t v53 = v38;
  uint64_t v54 = v37 + 56;
  v38(v35, 0, 1, v36);
  v38(v64, 1, 1, v36);
  unsigned int v55 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v39 = *(void (**)(void))(v69 + 104);
  v69 += 104;
  unsigned __int8 v56 = (void (*)(unsigned char *, void, uint64_t))v39;
  v39(v65);
  sub_100D20210((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t v40 = v61;
  *uint64_t v67 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v62 = (unsigned char *)sub_1005057FC(&qword_10169A308);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v41 = v49;
  uint64_t v42 = v51;
  uint64_t v43 = v50;
  v50(v19, v49, v51);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v43(v19, v41, v42);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v59(v40, 0, 1, v58);
  char v72 = 0;
  uint64_t v44 = v53;
  v53(v63, 1, 1, v36);
  v44(v64, 1, 1, v36);
  v56(v65, v55, v66);
  sub_1009991F4();
  uint64_t v45 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  uint64_t v46 = v67;
  v67[1] = v45;
  sub_1005057FC(&qword_101673B50);
  unint64_t v70 = 0xD00000000000001FLL;
  unint64_t v71 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  void v46[2] = result;
  v46[6] = (uint64_t)&type metadata for CRLFavoriteBoardIntentPerformer;
  v46[7] = (uint64_t)&off_10152B808;
  return result;
}

uint64_t sub_100D1F314(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  type metadata accessor for CRLBoardIdentifier(0);
  v2[22] = swift_task_alloc();
  v2[23] = type metadata accessor for CRLBoardEntity();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v2[26] = v3;
  v2[27] = *(void *)(v3 - 8);
  v2[28] = swift_task_alloc();
  return _swift_task_switch(sub_100D1F440, 0, 0);
}

uint64_t sub_100D1F440()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 168);
  swift_beginAccess();
  id v2 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  IntentParameter.wrappedValue.getter();
  *(void *)(v0 + 232) = *v1;
  char v3 = *(unsigned char *)(v0 + 256);
  IntentParameter.wrappedValue.getter();
  AppDependency.wrappedValue.getter();
  *(void *)(v0 + 104) = &type metadata for CRLBoardLibraryProvidingDependency;
  *(void *)(v0 + 112) = &off_10152F7D0;
  uint64_t v7 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_10169ACC8 + dword_10169ACC8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100D1F5B4;
  uint64_t v5 = *(void *)(v0 + 200);
  return v7(v3, v5, v0 + 80);
}

uint64_t sub_100D1F5B4(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_100568A20(*(void *)(v4 + 200), (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    uint64_t v5 = sub_100D1F834;
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 200);
    *(unsigned char *)(v4 + 258) = a1 & 1;
    sub_100568A20(v6, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4 + 80);
    uint64_t v5 = sub_100D1F720;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100D1F720()
{
  char v1 = *(unsigned char *)(v0 + 258);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v5 = *(void *)(v0 + 192);
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 257) = v1;
  EntityProperty.wrappedValue.setter();
  sub_100568A20(v5, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  static IntentResult.result<>()();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100D1F834()
{
  uint64_t v19 = v0;
  uint64_t v1 = v0[21];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 10));
  sub_100D201A8(v1, (uint64_t)(v0 + 2));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t type = v3;
    uint64_t v4 = v0[24];
    uint64_t v5 = v0[22];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412546;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v6 + 12) = 2080;
    IntentParameter.wrappedValue.getter();
    sub_100540CFC(v4, v5);
    sub_100568A20(v4, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    uint64_t v9 = sub_100753038();
    unint64_t v11 = v10;
    sub_100568A20(v5, type metadata accessor for CRLBoardIdentifier);
    v0[19] = sub_100E04348(v9, v11, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100D201E0((uint64_t)(v0 + 2));
    _os_log_impl((void *)&_mh_execute_header, v2, type, "Error changing favorite status: %@ - %s", (uint8_t *)v6, 0x16u);
    sub_1005057FC(&qword_101678028);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    sub_100D201E0((uint64_t)(v0 + 2));
  }
  uint64_t v13 = v0[27];
  uint64_t v12 = v0[28];
  uint64_t v14 = v0[26];
  type metadata accessor for _PrebuiltAppIntentError();
  sub_100D20210((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
  swift_allocError();
  static _UnrecoverableError.unknownError.getter();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100D1FBB0()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171C430);
  sub_100556B74(v9, (uint64_t)qword_10171C430);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100D1FDA8()
{
  uint64_t v0 = sub_1005057FC(&qword_10169A320);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_10169A328);
  __chkstk_darwin(v2, v3);
  sub_100D20154();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_10169A330);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 32;
  v5._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_10169A338);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100D1FF84@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166FE70 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171C430);
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100D20030(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_100D1F314(a1);
}

uint64_t sub_100D200CC(uint64_t a1)
{
  unint64_t v2 = sub_100D20154();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLFavoriteBoardIntent_v2()
{
  return &type metadata for CRLFavoriteBoardIntent_v2;
}

uint64_t sub_100D20118()
{
  return sub_100523288(&qword_10169A2F8, &qword_10169A300);
}

unint64_t sub_100D20154()
{
  unint64_t result = qword_10169A310;
  if (!qword_10169A310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10169A310);
  }
  return result;
}

uint64_t sub_100D201A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100D201E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100D20210(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100D20258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100D20284@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

void sub_100D202B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UICellConfigurationState();
  uint64_t v79 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2, v3).n128_u64[0];
  Swift::String v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v0 view:v4];
  if (!v7) {
    goto LABEL_28;
  }
  uint64_t v8 = v7;
  id v9 = [v7 layer];

  unint64_t v10 = *(void **)((char *)v0
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dropShadowView);
  id v11 = [v10 layer];
  id v85 = *(id *)((char *)v0
              + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView);
  id v12 = [v85 layer];
  id v13 = [v0 view];
  if (!v13)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v14 = v13;
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];

  [v9 setMasksToBounds:0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setMasksToBounds:0];
  id v15 = [v0 view];
  if (!v15)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v16 = v15;
  id v82 = v9;
  uint64_t v83 = v2;
  id v81 = v11;
  uint64_t v84 = v6;
  [v15 addSubview:v10];

  id v17 = v85;
  [v85 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v80 = v12;
  [v12 setMasksToBounds:1];
  id v18 = [v0 view];
  if (!v18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v19 = v18;
  [v18 addSubview:v17];

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10117E9C0;
  id v21 = [v10 topAnchor];
  id v22 = [v17 topAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v20 + 32) = v23;
  id v24 = [v10 leadingAnchor];
  id v25 = [v17 leadingAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  *(void *)(v20 + 40) = v26;
  id v27 = [v10 trailingAnchor];
  id v28 = [v17 trailingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v20 + 48) = v29;
  id v30 = [v10 bottomAnchor];
  id v31 = [v17 bottomAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v20 + 56) = v32;
  id v33 = [v17 topAnchor];
  id v34 = [v1 view];
  if (!v34)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  char v35 = v34;
  id v36 = [v34 topAnchor];

  id v37 = [v33 constraintEqualToAnchor:v36];
  *(void *)(v20 + 64) = v37;
  id v38 = [v17 leadingAnchor];
  id v39 = [v1 view];
  if (!v39)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v40 = v39;
  id v41 = [v39 leadingAnchor];

  id v42 = [v38 constraintEqualToAnchor:v41];
  *(void *)(v20 + 72) = v42;
  id v43 = [v17 trailingAnchor];
  id v44 = [v1 view];
  if (!v44)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v45 = v44;
  id v46 = [v44 trailingAnchor];

  id v47 = [v43 constraintEqualToAnchor:v46];
  *(void *)(v20 + 80) = v47;
  id v48 = [v17 bottomAnchor];
  id v49 = [v1 view];
  if (!v49)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  uint64_t v50 = v49;
  id v51 = [v49 bottomAnchor];

  id v52 = [v48 constraintEqualToAnchor:v51];
  *(void *)(v20 + 88) = v52;
  unint64_t v88 = v20;
  specialized Array._endMutation()();
  unint64_t v53 = v88;
  if (!(v88 >> 62))
  {
    uint64_t v54 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v54) {
      goto LABEL_11;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v59 = v83;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
  if (!v54) {
    goto LABEL_19;
  }
LABEL_11:
  type metadata accessor for UILayoutPriority(0);
  if (v54 < 1)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v55 = 0;
  do
  {
    if ((v53 & 0xC000000000000001) != 0) {
      id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v56 = *(id *)(v53 + 8 * v55 + 32);
    }
    uint64_t v57 = v56;
    ++v55;
    int v86 = 1065353216;
    int v87 = 1148846080;
    sub_10053BFE0();
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v58) = v88;
    [v57 setPriority:v58];
  }
  while (v54 != v55);
  swift_bridgeObjectRelease();
  uint64_t v59 = v83;
  id v17 = v85;
LABEL_20:
  uint64_t v60 = self;
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v60 activateConstraints:isa];

  uint64_t v62 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView);
  [v62 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v17 addSubview:v62];
  uint64_t v63 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView);
  [v63 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v62 addSubview:v63];
  uint64_t v64 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView);
  [v64 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v62 addSubview:v64];
  uint64_t v65 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel);
  [v65 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v65 setLineBreakMode:4];
  [v17 addSubview:v65];
  uint64_t v66 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  [v66 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v66 setLineBreakMode:4];
  [v17 addSubview:v66];
  uint64_t v67 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
  [v67 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v67 setLineBreakMode:4];
  [v17 addSubview:v67];
  uint64_t v68 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton);
  [v68 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v17 addSubview:v68];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  unint64_t v70 = v84;
  if (Strong)
  {
    self;
    unint64_t v71 = (void *)swift_dynamicCastObjCClass();
    if (v71)
    {
      id v72 = [v71 _bridgedConfigurationState];
      static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

      char v73 = UICellConfigurationState.isEditing.getter();
      (*(void (**)(void))((swift_isaMask & *v1) + 0x168))(v73 & 1);
      double v74 = *(void **)((char *)v1
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge);
      [v74 setTranslatesAutoresizingMaskIntoConstraints:0];
      [v85 addSubview:v74];
      float v75 = *(void **)((char *)v1
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView);
      [v75 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v76 = [v1 view];
      if (v76)
      {
        float v77 = v76;
        [v76 addSubview:v75];

        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v70, v59);
        return;
      }
      goto LABEL_36;
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"prepareAndAddSubviews()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2, 773, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"prepareAndAddSubviews()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2, 773);
}

void sub_100D20D7C()
{
  (*(void (**)(void))((swift_isaMask & *v0) + 0x1C8))();
  sub_100D24E68();
  sub_100D23B4C();

  sub_100D21110();
}

uint64_t sub_100D20E08()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v2 = *(void *)(v1 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 144))(ObjectType, v2),
        uint64_t v6 = v5,
        swift_unknownObjectRelease(),
        !v6))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_100D20E98()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v2 = *(void *)(v1 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 168))(ObjectType, v2),
        uint64_t v6 = v5,
        swift_unknownObjectRelease(),
        !v6))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_100D20F28()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v2 = *(void *)(v1 + 8),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 216))(ObjectType, v2),
        uint64_t v6 = v5,
        swift_unknownObjectRelease(),
        !v6))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

void sub_100D20FB8(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView);
  *(void *)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView) = a1;
  id v9 = a1;
  if (v3) {
    [v3 removeFromSuperview];
  }
  uint64_t v4 = *(void **)(v1 + v2);
  if (v4)
  {
    id v5 = v4;
    [v5 setBackgroundStyle:1];
    [v5 setHorizontalAlignment:1];
    uint64_t v6 = *(void **)(v1
                  + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView);
    [v6 addSubview:v5];
    sub_1009E32D0(v6, v5);
    LODWORD(v7) = 1148846080;
    [v5 setContentCompressionResistancePriority:0 forAxis:v7];
    LODWORD(v8) = 1148846080;
    [v5 setContentCompressionResistancePriority:1 forAxis:v8];

    uint64_t v3 = v9;
    id v9 = v5;
  }
}

uint64_t sub_100D210D0()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode);
}

id sub_100D210E0(char a1)
{
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode) = a1;
  return [*(id *)(v1+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge) setHidden:(a1 & 1) == 0];
}

void sub_100D21110()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char *)v0 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    unsigned __int8 v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 336))(ObjectType, v3);
    swift_unknownObjectRelease();
    if (v5)
    {
      id v6 = [*(id *)((char *)v0+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel) font];
      if (v6)
      {
        double v7 = v6;
        id v8 = [v6 fontDescriptor];

        [v8 pointSize];
        double v10 = v9;
      }
      else
      {
        double v10 = 0.0;
      }
      if (qword_10166FE80 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_10171C450;
      id v12 = self;
      id v13 = [v12 configurationWithPointSize:v11 weight:v10];
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_101177E70;
      if (qword_10166FE78 != -1) {
        swift_once();
      }
      id v15 = (void *)qword_10171C448;
      *(void *)(v14 + 32) = qword_10171C448;
      specialized Array._endMutation()();
      sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
      id v16 = v15;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v18 = [v12 configurationWithPaletteColors:isa];

      id v19 = [v13 configurationByApplyingConfiguration:v18];
      unint64_t v36 = (unint64_t)[objc_allocWithZone((Class)NSTextAttachment) init];
      uint64_t v20 = self;
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v22 = [v20 systemImageNamed:v21];

      id v23 = [v22 imageByApplyingSymbolConfiguration:v19];
      [(id)v36 setImage:v23];
    }
    else
    {
      unint64_t v36 = v5;
    }
  }
  else
  {
    unint64_t v36 = 0;
  }
  (*(void (**)(void))((swift_isaMask & *v1) + 0x178))();
  id v24 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithString:v25];

  id v27 = (id)v36;
  if (v36)
  {
    id v28 = (id)v36;
    int v29 = sub_1003E86EC();
    id v30 = objc_allocWithZone((Class)NSAttributedString);
    NSString v31 = String._bridgeToObjectiveC()();
    id v32 = [v30 initWithString:v31];

    if (v29)
    {
      [v26 insertAttributedString:v32 atIndex:0];

      id v33 = [self attributedStringWithAttachment:v28];
      [v26 insertAttributedString:v33 atIndex:0];
    }
    else
    {
      [v26 appendAttributedString:v32];

      id v33 = [self attributedStringWithAttachment:v28];
      [v26 appendAttributedString:v33];
    }

    id v27 = (id)v36;
  }
  id v37 = v27;
  id v34 = *(void **)((char *)v1
                 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel);
  id v35 = v26;
  [v34 setAttributedText:v35];
}

void sub_100D2163C()
{
  uint64_t v1 = *(void **)((char *)v0
                + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel);
  (*(void (**)(void))((swift_isaMask & *v0) + 0x188))();
  id v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v2];
}

void sub_100D216E4()
{
  uint64_t v1 = v0;
  _s8GridItemCMa();
  if (swift_dynamicCastClass())
  {
    id v2 = v0;
    id v3 = sub_1005D52AC();
    id v4 = *(id *)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
    *(void *)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController] = v3;
    id v5 = v3;
    if (!v4) {
      goto LABEL_9;
    }
    id v4 = v4;
    [v4 removeFromParentViewController];
    id v6 = [v4 view];
    if (v6)
    {
LABEL_8:
      double v9 = v6;
      [v6 removeFromSuperview];

      goto LABEL_9;
    }
    __break(1u);
  }
  _s8ListItemCMa();
  if (!swift_dynamicCastClass()) {
    goto LABEL_13;
  }
  double v7 = v0;
  id v8 = sub_100920F08();
  id v4 = *(id *)&v7[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  *(void *)&v7[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController] = v8;
  id v5 = v8;
  if (v4)
  {
    id v4 = v4;
    [v4 removeFromParentViewController];
    id v6 = [v4 view];
    if (v6) {
      goto LABEL_8;
    }
    __break(1u);
LABEL_13:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
LABEL_9:
  sub_100D21DD4();

  sub_100D21DD4();
}

void sub_100D21888(char a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for AppEntityVisualState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  double v10 = *(void **)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (v10)
  {
    uint64_t v11 = *(void (**)(void))((swift_isaMask & *v10) + 0x168);
    id v12 = v10;
    v11(a1 & 1);

    id v13 = v2;
    [v13 isSelected];
    [v13 isHighlighted];
    uint64_t v14 = *(void **)&v2[v9];
    if (v14)
    {
      (*(void (**)(void))((swift_isaMask & *v14) + 0x160))();
      AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)();

      UIView.updateAppEntityAnnotation(with:)();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100D21A60(uint64_t a1@<X8>)
{
  uint64_t v3 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v4)
  {
    id v5 = [*(id *)(v4+ OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView) superview];
    if (!v5)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"thumbnailFrameInItem", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2, 186, (uint64_t)"Thumbnail image view has no superview, so we can't determine a rect for the zoom animation.", 91, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"thumbnailFrameInItem", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2, 186);
      uint64_t v8 = 0;
      uint64_t v10 = 0;
      uint64_t v12 = 0;
      uint64_t v14 = 0;
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(v1 + v3);
    if (v6)
    {
      [*(id *)(v6 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView) frame];
      [v5 convertRect:v1 toCoordinateSpace:];
      uint64_t v8 = v7;
      uint64_t v10 = v9;
      uint64_t v12 = v11;
      uint64_t v14 = v13;

LABEL_6:
      *(void *)a1 = v8;
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v14;
      *(unsigned char *)(a1 + 32) = v5 == 0;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100D21BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle + 8);
  *uint64_t v3 = a1;
  v3[1] = a2;
  if (a2)
  {
    if (v5)
    {
      BOOL v6 = v4 == a1 && v5 == a2;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  else if (!v5)
  {
    return;
  }
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v7)
  {
    id v8 = v7;
    sub_100D21110();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_100D21CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText + 8);
  *uint64_t v3 = a1;
  v3[1] = a2;
  if (a2)
  {
    if (v5)
    {
      BOOL v6 = v4 == a1 && v5 == a2;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  else if (!v5)
  {
    return;
  }
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v7)
  {
    id v8 = *(void (**)(void))((swift_isaMask & *v7) + 0x190);
    uint64_t v9 = v7;
    v8();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_100D21DD4()
{
  id v10 = [v0 contentView];
  uint64_t v1 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  *(void *)(v2 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem + 8) = &off_10152AA10;
  swift_unknownObjectWeakAssign();
  uint64_t v3 = *(void **)&v0[v1];
  if (!v3)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  [v3 loadViewIfNeeded];
  uint64_t v4 = *(void **)&v0[v1];
  if (!v4)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v5 = [v4 view];
  if (v5)
  {
    BOOL v6 = v5;
    [v10 addSubview:v5];
    id v7 = [v10 layer];
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v8 = [v0 contentView];
    sub_1009E32D0(v0, v8);

    sub_1009E32D0(v10, v6);
    [v7 setMasksToBounds:0];

    uint64_t v9 = v7;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"didUpdateViewController()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2, 389, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didUpdateViewController()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLFolderViewController-Item.swift", 104, 2, 389);
    uint64_t v9 = v10;
  }
}

unsigned char *sub_100D21FD4(char a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected) = a1;
  int v3 = a1 & 1;
  uint64_t result = *(unsigned char **)(v1
                     + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge);
  int v5 = result[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked];
  result[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = a1;
  if (v5 != v3) {
    return [result setNeedsDisplay];
  }
  return result;
}

id sub_100D2201C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item];
  uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_dimsThumbnail] = 0;
  uint64_t v11 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle];
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText];
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText];
  *uint64_t v13 = 0;
  v13[1] = 0;
  uint64_t v14 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName];
  void *v14 = 0;
  v14[1] = 0;
  uint64_t v15 = &v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_folderName];
  *uint64_t v15 = 0;
  v15[1] = 0;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite] = 0;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_canShowFavoriteButton] = 1;
  v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState] = 0;
  *(void *)&v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController] = 0;
  v18.receiver = v4;
  v18.super_class = (Class)_s4ItemCMa();
  [super initWithFrame:a1, a2, a3, a4];
  sub_100D216E4();

  return v16;
}

id sub_100D22248(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AppEntityVisualState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)_s4ItemCMa();
  v17.receiver = v2;
  v17.super_class = v9;
  [super setSelected:a1 & 1];
  uint64_t v11 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v2 isSelected];
    (*(void (**)(id))((swift_isaMask & *v13) + 0x120))(v14);

    uint64_t v15 = v2;
    [v15 isSelected];
    id result = [v15 isHighlighted];
    id v16 = *(void **)&v2[v11];
    if (v16)
    {
      (*(void (**)(void))((swift_isaMask & *v16) + 0x160))();
      AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)();

      UIView.updateAppEntityAnnotation(with:)();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_100D22460(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)_s4ItemCMa();
  return [super *a3];
}

id sub_100D224F8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AppEntityVisualState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)_s4ItemCMa();
  v17.receiver = v2;
  v17.super_class = v9;
  id result = [super setHighlighted:a1 & 1];
  uint64_t v11 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController];
  if (v12)
  {
    uint64_t v13 = v12;
    unsigned __int8 v14 = [v2 isHighlighted];
    *((unsigned char *)v13 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isHighlighted) = v14;
    (*(void (**)(void))((swift_isaMask & *v13) + 0x1C8))();

    uint64_t v15 = v2;
    [v15 isSelected];
    id result = [v15 isHighlighted];
    id v16 = *(void **)&v2[v11];
    if (v16)
    {
      (*(void (**)(void))((swift_isaMask & *v16) + 0x160))();
      AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)();

      UIView.updateAppEntityAnnotation(with:)();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100D22710(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName + 8);
  if (!v5)
  {
    if (!a2) {
      return;
    }
LABEL_10:
    uint64_t v7 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController;
    id v8 = *(void **)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
    if (v8)
    {
      uint64_t v9 = *(void **)((char *)v8
                    + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel);
      uint64_t v10 = *(void (**)(void))((swift_isaMask & *v8) + 0x198);
      uint64_t v11 = v8;
      v10();
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v9 setText:v12];

      uint64_t v13 = *(void **)(v3 + v7);
      if (v13)
      {
        id v14 = [v13 view];
        if (v14)
        {
          id v15 = v14;
          [v14 setNeedsUpdateConstraints];

          return;
        }
LABEL_18:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  if (!a2) {
    goto LABEL_10;
  }
  BOOL v6 = *(void *)(v2 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName) == a1
    && v5 == a2;
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_10;
  }
}

void sub_100D22880()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v1)
  {
    uint64_t v2 = *(unsigned char **)(v1 + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton);
    int v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite);
    uint64_t v4 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite;
    v2[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite] = v3;
    uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView];
    uint64_t v6 = v3 ^ 1u;
    id v8 = v2;
    [v5 setHidden:v6];
    if (v2[v4] == 1) {
      char v7 = v8[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow] ^ 1;
    }
    else {
      char v7 = 1;
    }
    [*(id *)&v8[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView] setHidden:v7 & 1];
  }
  else
  {
    __break(1u);
  }
}

id sub_100D22970(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_secondaryLabelColor, &qword_10171C448);
}

UIImageSymbolWeight sub_100D22984()
{
  UIImageSymbolWeight result = UIImageSymbolWeightForFontWeight(UIFontWeightMedium);
  qword_10171C450 = result;
  return result;
}

char *sub_100D229B0()
{
  *(void *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dropShadowView;
  uint64_t v2 = (objc_class *)type metadata accessor for CRLShadowView();
  id v3 = objc_allocWithZone(v2);
  uint64_t v4 = v0;
  *(void *)&v0[v1] = [v3 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v5 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView;
  *(void *)&v4[v5] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v6 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView;
  *(void *)&v4[v6] = [objc_allocWithZone((Class)_s4ItemC14ViewControllerC18ThumbnailImageViewCMa()) init];
  uint64_t v7 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView;
  *(void *)&v4[v7] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView;
  *(void *)&v4[v8] = [objc_allocWithZone(v2) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton;
  *(void *)&v4[v9] = [objc_allocWithZone((Class)_s4ItemC14ViewControllerC14FavoriteButtonCMa()) init];
  uint64_t v10 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView;
  *(void *)&v4[v10] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v4[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView] = 0;
  v4[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected] = 0;
  v4[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isHighlighted] = 0;
  v4[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail] = 0;
  uint64_t v11 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge;
  *(void *)&v4[v11] = [objc_allocWithZone((Class)_s4ItemC14ViewControllerC19SelectionStateBadgeCMa()) init];
  v4[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode] = 0;
  uint64_t v12 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel;
  id v13 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  swift_bridgeObjectRetain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setText:v14];

  *(void *)&v4[v12] = v13;
  uint64_t v15 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel;
  id v16 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setText:v17];

  *(void *)&v4[v15] = v16;
  uint64_t v18 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  swift_bridgeObjectRetain();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 setText:v20];

  *(void *)&v4[v18] = v19;
  *(void *)&v4[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_overrideTraitCollection] = 0;

  v23.receiver = v4;
  v23.super_class = (Class)_s4ItemC14ViewControllerCMa();
  NSString v21 = [super initWithNibName:0 bundle:0];
  *(void *)(*(void *)&v21[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton]
            + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_accessibilityDelegate
            + 8) = &off_10152A9C0;
  swift_unknownObjectWeakAssign();
  return v21;
}

void sub_100D22E3C()
{
  v10.receiver = v0;
  v10.super_class = (Class)_s4ItemC14ViewControllerCMa();
  [super viewDidLoad];
  uint64_t v2 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x1C0))(v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x1C8))(v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x1D0))(v3);
  (*(void (**)(uint64_t))((swift_isaMask & *v0) + 0x1D8))(v4);
  id v5 = [self defaultCenter];
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9[4] = sub_100D28280;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = *(void *)"";
  v9[2] = sub_1005E5680;
  v9[3] = &unk_10152ABD8;
  uint64_t v7 = _Block_copy(v9);
  swift_release();
  id v8 = [v5 addObserverForName:UIContentSizeCategoryDidChangeNotification object:0 queue:0 usingBlock:v7];
  _Block_release(v7);
  swift_unknownObjectRelease();
}

void sub_100D23088()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x1D8))();
  }
}

void sub_100D2315C()
{
}

void sub_100D231B8()
{
}

id sub_100D23354(uint64_t a1)
{
  return sub_100D27174(a1, _s4ItemC14ViewControllerC8ItemViewCMa);
}

id sub_100D234D8(uint64_t a1)
{
  return sub_100D27174(a1, _s4ItemC14ViewControllerC18ThumbnailImageViewCMa);
}

UIFontTextStyle sub_100D234F0()
{
  qword_10169A340 = (uint64_t)UIFontTextStyleCaption1;
  return UIFontTextStyleCaption1;
}

UIFontTextStyle sub_100D23508()
{
  qword_10169A348 = (uint64_t)UIFontTextStyleFootnote;
  return UIFontTextStyleFootnote;
}

id sub_100D23520(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_systemRedColor, &qword_10169A350);
}

id sub_100D23534(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_whiteColor, &qword_10169A358);
}

char *sub_100D23548()
{
  swift_getObjectType();
  uint64_t v1 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView;
  id v2 = objc_allocWithZone((Class)UIImageView);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v4 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v3[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_accessibilityDelegate
               + 8] = 0;
  swift_unknownObjectWeakInit();
  v3[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite] = 0;
  v3[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow] = 0;
  v3[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_size] = 1;

  v42.receiver = v3;
  v42.super_class = (Class)_s4ItemC14ViewControllerC14FavoriteButtonCMa();
  id v5 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v5 setUserInteractionEnabled:0];
  sub_1005057FC((uint64_t *)&unk_10168D9A0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117D8C0;
  *(void *)(v6 + 32) = type metadata accessor for UITraitAccessibilityContrast();
  *(void *)(v6 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  *(void *)(v6 + 48) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v6 + 56) = &protocol witness table for UITraitUserInterfaceStyle;
  uint64_t v7 = (char *)v5;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  id v8 = *(void **)&v7[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView];
  uint64_t v9 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView;
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v8 setHidden:1];
  [v7 addSubview:v8];
  uint64_t v10 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView;
  uint64_t v11 = *(void **)&v7[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setHidden:1];
  LODWORD(v12) = 1148846080;
  [v11 setContentCompressionResistancePriority:0 forAxis:v12];
  LODWORD(v13) = 1148846080;
  [v11 setContentHuggingPriority:0 forAxis:v13];
  [v7 addSubview:v11];
  sub_100D23B4C();
  id v14 = [v11 topAnchor];
  id v15 = [v7 topAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  id v17 = [*(id *)&v7[v10] leadingAnchor];
  id v18 = [v7 leadingAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  id v20 = [*(id *)&v7[v10] trailingAnchor];
  id v21 = [v7 trailingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  id v23 = [*(id *)&v7[v10] bottomAnchor];
  id v24 = [v7 bottomAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_101181A80;
  *(void *)(v26 + 32) = v16;
  *(void *)(v26 + 40) = v19;
  *(void *)(v26 + 48) = v22;
  *(void *)(v26 + 56) = v25;
  uint64_t v27 = v9;
  id v28 = *(void **)&v7[v9];
  id v41 = v16;
  id v40 = v19;
  id v29 = v22;
  id v30 = v25;
  id v31 = [v28 centerXAnchor];
  id v32 = [*(id *)&v7[v10] centerXAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  *(void *)(v26 + 64) = v33;
  id v34 = [*(id *)&v7[v27] centerYAnchor];
  id v35 = [*(id *)&v7[v10] centerYAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v26 + 72) = v36;
  specialized Array._endMutation()();
  id v37 = self;
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v37 activateConstraints:isa];

  return v7;
}

void sub_100D23B4C()
{
  uint64_t v1 = v0;
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_size) & 1) != 0)
  {
    if (qword_10166FE90 != -1) {
      swift_once();
    }
    id v2 = &qword_10169A348;
  }
  else
  {
    if (qword_10166FE88 != -1) {
      swift_once();
    }
    id v2 = &qword_10169A340;
  }
  id v31 = (id)*v2;
  id v3 = [self preferredFontForTextStyle:v31];
  [v3 pointSize];
  double v5 = v4;

  uint64_t v6 = *(void **)(v1
                + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView);
  uint64_t v7 = self;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 systemImageNamed:v8];

  [v6 setImage:v9];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_101177E70;
  if (qword_10166FEA0 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_10169A358;
  *(void *)(v10 + 32) = qword_10169A358;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
  id v12 = v11;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = self;
  id v15 = [v14 configurationWithPaletteColors:isa];

  id v16 = [v14 configurationWithPointSize:9 weight:v5 + 1.0];
  id v17 = [v15 configurationByApplyingConfiguration:v16];

  [v6 setPreferredSymbolConfiguration:v17];
  id v18 = *(void **)(v1
                 + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView);
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v7 systemImageNamed:v19];

  [v18 setImage:v20];
  uint64_t v21 = v1
      + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_accessibilityDelegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v22 = *(void *)(v21 + 8);
    uint64_t ObjectType = swift_getObjectType();
    if (qword_10166FE98 != -1) {
      swift_once();
    }
    id v24 = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8))(v1, qword_10169A350, ObjectType, v22);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_10166FE98 != -1) {
      swift_once();
    }
    id v24 = (id)qword_10169A350;
  }
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_101177E70;
  *(void *)(v25 + 32) = v24;
  specialized Array._endMutation()();
  id v26 = v24;
  Class v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v28 = [v14 configurationWithPaletteColors:v27];

  id v29 = [v14 configurationWithPointSize:4 weight:v5];
  id v30 = [v28 configurationByApplyingConfiguration:v29];

  [v18 setPreferredSymbolConfiguration:v30];
}

id sub_100D2405C(uint64_t a1)
{
  return sub_100D27174(a1, _s4ItemC14ViewControllerC14FavoriteButtonCMa);
}

UIFontTextStyle sub_100D240D0()
{
  qword_10169A360 = (uint64_t)UIFontTextStyleTitle2;
  return UIFontTextStyleTitle2;
}

UIImageSymbolWeight sub_100D240E8()
{
  UIImageSymbolWeight result = UIImageSymbolWeightForFontWeight(UIFontWeightRegular);
  qword_10169A368 = result;
  return result;
}

id sub_100D24114(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_whiteColor, &qword_10169A370);
}

void sub_100D24128()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self colorNamed:v0];

  if (v1) {
    qword_10169A378 = (uint64_t)v1;
  }
  else {
    __break(1u);
  }
}

id sub_100D241A4()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.8];
  qword_10169A380 = (uint64_t)result;
  return result;
}

id sub_100D241E4()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.5];
  qword_10169A388 = (uint64_t)result;
  return result;
}

void sub_100D24220()
{
  qword_10169A390 = 0;
  *(void *)algn_10169A398 = 0;
}

void sub_100D24230()
{
  qword_10169A3A0 = 0x4000000000000000;
}

void sub_100D24240()
{
  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = 0;
  id v1 = v0;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = self;
  id v4 = [v3 systemImageNamed:v2];

  if (v4)
  {
    uint64_t v5 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseCheckedImage;
    if (qword_10166FEB8 != -1) {
      swift_once();
    }
    id v6 = [v4 imageWithTintColor:qword_10169A370];

    *(void *)&v1[v5] = v6;
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v3 systemImageNamed:v7];

    if (v8)
    {
      uint64_t v9 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseUncheckedImage;
      id v10 = [v8 imageWithTintColor:qword_10169A370];

      *(void *)&v1[v9] = v10;
      *(void *)&v1[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage] = 0;
      *(void *)&v1[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage] = 0;

      v19.receiver = v1;
      v19.super_class = (Class)_s4ItemC14ViewControllerC19SelectionStateBadgeCMa();
      [super initWithFrame:0.0, 0.0, 0.0, 0.0];
      sub_100D24E68();
      id v12 = self;
      id v13 = v11;
      id v14 = [v12 clearColor];
      [v13 setBackgroundColor:v14];

      LODWORD(v15) = 1148846080;
      [v13 setContentCompressionResistancePriority:0 forAxis:v15];
      LODWORD(v16) = 1148846080;
      [v13 setContentCompressionResistancePriority:1 forAxis:v16];
      LODWORD(v17) = 1148846080;
      [v13 setContentHuggingPriority:0 forAxis:v17];
      LODWORD(v18) = 1148846080;
      [v13 setContentHuggingPriority:1 forAxis:v18];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

CGFloat sub_100D24558()
{
  id v1 = *(void **)(v0
                + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage);
  double v2 = 0.0;
  double v3 = 0.0;
  double v4 = 0.0;
  if (v1)
  {
    id v5 = v1;
    [v5 size];
    double v7 = v6;
    double v9 = v8;
    [v5 alignmentRectInsets];
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;

    double v4 = v7 - (v13 + v17);
    double v3 = v9 - (v11 + v15);
  }
  double v18 = *(void **)(v0
                 + OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage);
  double v19 = 0.0;
  if (v18)
  {
    id v20 = v18;
    [v20 size];
    double v22 = v21;
    double v24 = v23;
    [v20 alignmentRectInsets];
    double v26 = v25;
    double v28 = v27;
    double v30 = v29;
    double v32 = v31;

    double v19 = v22 - (v28 + v32);
    double v2 = v24 - (v26 + v30);
  }
  v37.origin.x = 0.0;
  v37.origin.y = 0.0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  v37.size.width = v4;
  v37.size.height = v3;
  double v35 = v2;
  CGRect v38 = CGRectUnion(v37, *(CGRect *)(&v19 - 2));
  return v38.size.width;
}

void sub_100D2468C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  id v5 = v4;
  uint64_t v10 = type metadata accessor for CGPathFillRule();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  double v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = (objc_class *)_s4ItemC14ViewControllerC19SelectionStateBadgeCMa();
  v71.receiver = v4;
  v71.super_class = v15;
  [super drawRect:a1, a2, a3, a4];
  double v16 = UIGraphicsGetCurrentContext();
  if (v16)
  {
    double v17 = v16;
    uint64_t v18 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage;
    double v19 = *(void **)&v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage];
    if (v19)
    {
      [v19 size];
      double v21 = v20;
      double v23 = v22;
      v73.origin.x = a1;
      v73.origin.CGFloat y = a2;
      v73.size.width = a3;
      v73.size.height = a4;
      CGFloat Width = CGRectGetWidth(v73);
      v74.origin.CGFloat y = a2;
      double v25 = Width * 0.5 - v21 * 0.5;
      CGFloat v67 = a1;
      CGFloat v68 = a3;
      v74.origin.x = a1;
      CGFloat y = v74.origin.y;
      v74.size.width = a3;
      CGFloat v69 = a4;
      v74.size.height = a4;
      double v27 = CGRectGetHeight(v74) * 0.5 - v21 * 0.5;
      v75.origin.x = v25;
      v75.origin.CGFloat y = v27;
      v75.size.width = v21;
      v75.size.height = v23;
      CGFloat v28 = CGRectGetWidth(v75) * 0.21 * 0.5;
      v76.origin.x = v25;
      v76.origin.CGFloat y = v27;
      v76.size.width = v21;
      v76.size.height = v23;
      CGFloat v29 = CGRectGetWidth(v76);
      double v66 = 0.21;
      CGFloat v30 = v29 * 0.21 * 0.5;
      v77.origin.x = v25;
      v77.origin.CGFloat y = v27;
      v77.size.width = v21;
      v77.size.height = v23;
      CGRect v78 = CGRectInset(v77, v28, v30);
      double v31 = CGPathCreateWithEllipseInRect(v78, 0);
      if (qword_10166FEC8 != -1) {
        swift_once();
      }
      double v32 = (CGColor *)[(id)qword_10169A380 CGColor];
      CGContextSetFillColorWithColor(v17, v32);

      CGContextAddPath(v17, v31);
      uint64_t v33 = enum case for CGPathFillRule.evenOdd(_:);
      uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
      v65(v14, enum case for CGPathFillRule.evenOdd(_:), v10);
      CGContextRef.fillPath(using:)();
      uint64_t v64 = *(void (**)(char *, uint64_t))(v11 + 8);
      v64(v14, v10);
      CGContextSaveGState(v17);
      if (qword_10166FED8 != -1) {
        swift_once();
      }
      CGFloat v34 = *(double *)&qword_10169A390;
      CGFloat v35 = *(double *)algn_10169A398;
      if (qword_10166FEE0 != -1) {
        swift_once();
      }
      unint64_t v70 = v31;
      CGFloat v36 = *(double *)&qword_10169A3A0;
      if (qword_10166FED0 != -1) {
        swift_once();
      }
      CGRect v37 = (CGColor *)[(id)qword_10169A388 CGColor];
      v72.width = v34;
      v72.height = v35;
      CGContextSetShadowWithColor(v17, v72, v36, v37);

      CGRect v38 = *(void **)&v5[v18];
      if (v38)
      {
        uint64_t v39 = qword_10166FEB8;
        id v40 = v38;
        if (v39 != -1) {
          swift_once();
        }
        id v41 = (void *)qword_10169A370;
        v79.origin.x = v25;
        v79.origin.CGFloat y = v27;
        v79.size.width = v21;
        v79.size.height = v23;
        CGContextBeginTransparencyLayerWithRect(v17, v79, 0);
        UIGraphicsPushContext(v17);
        [v40 drawInRect:v25, v27, v21, v23];
        UIGraphicsPopContext();
        CGContextSetBlendMode(v17, kCGBlendModeSourceIn);
        objc_super v42 = (CGColor *)[v41 CGColor];
        CGContextSetFillColorWithColor(v17, v42);

        v80.origin.x = v25;
        v80.origin.CGFloat y = v27;
        v80.size.width = v21;
        v80.size.height = v23;
        CGContextFillRect(v17, v80);
        CGContextEndTransparencyLayer(v17);

        CGContextRestoreGState(v17);
        if (v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] != 1) {
          goto LABEL_20;
        }
        id v43 = *(void **)&v5[v18];
        if (v43)
        {
          [v43 size];
          double v45 = v44;
          double v47 = v46;
          CGFloat v48 = v67;
          CGFloat v49 = v68;
          v81.origin.x = v67;
          v81.origin.CGFloat y = y;
          v81.size.width = v68;
          CGFloat v50 = v69;
          v81.size.height = v69;
          double v51 = CGRectGetWidth(v81) * 0.5 - v45 * 0.5;
          v82.origin.x = v48;
          v82.origin.CGFloat y = y;
          v82.size.width = v49;
          v82.size.height = v50;
          double v52 = CGRectGetHeight(v82) * 0.5 - v45 * 0.5;
          v83.origin.x = v51;
          v83.origin.CGFloat y = v52;
          v83.size.width = v45;
          v83.size.height = v47;
          CGFloat v53 = CGRectGetWidth(v83);
          double v54 = v66;
          CGFloat v55 = v53 * v66 * 0.5;
          v84.origin.x = v51;
          v84.origin.CGFloat y = v52;
          v84.size.width = v45;
          v84.size.height = v47;
          CGFloat v56 = CGRectGetWidth(v84) * v54 * 0.5;
          v85.origin.x = v51;
          v85.origin.CGFloat y = v52;
          v85.size.width = v45;
          v85.size.height = v47;
          CGRect v86 = CGRectInset(v85, v55, v56);
          uint64_t v57 = CGPathCreateWithEllipseInRect(v86, 0);
          if (qword_10166FEC0 != -1) {
            swift_once();
          }
          double v58 = (CGColor *)[(id)qword_10169A378 CGColor];
          CGContextSetFillColorWithColor(v17, v58);

          CGContextAddPath(v17, v57);
          v65(v14, v33, v10);
          CGContextRef.fillPath(using:)();
          v64(v14, v10);
          uint64_t v59 = *(void **)&v5[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage];
          if (v59)
          {
            uint64_t v60 = (void *)qword_10169A370;
            id v61 = v59;
            v87.origin.x = v51;
            v87.origin.CGFloat y = v52;
            v87.size.width = v45;
            v87.size.height = v47;
            CGContextBeginTransparencyLayerWithRect(v17, v87, 0);
            UIGraphicsPushContext(v17);
            [v61 drawInRect:v51, v52, v45, v47];
            UIGraphicsPopContext();
            CGContextSetBlendMode(v17, kCGBlendModeSourceIn);
            uint64_t v62 = (CGColor *)[v60 CGColor];
            CGContextSetFillColorWithColor(v17, v62);

            v88.origin.x = v51;
            v88.origin.CGFloat y = v52;
            v88.size.width = v45;
            v88.size.height = v47;
            CGContextFillRect(v17, v88);
            CGContextEndTransparencyLayer(v17);

LABEL_20:
            return;
          }
LABEL_25:
          __break(1u);
          return;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
}

void sub_100D24E68()
{
  if (qword_10166FEB0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10169A368;
  double v2 = self;
  id v3 = [v2 configurationWithWeight:v1];
  if (qword_10166FEA8 != -1) {
    swift_once();
  }
  id v4 = [v2 configurationWithTextStyle:qword_10169A360];
  id v5 = [v3 configurationByApplyingConfiguration:v4];

  id v6 = [v0 traitCollection];
  id v11 = [v5 configurationWithTraitCollection:v6];

  id v7 = [*(id *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseCheckedImage] imageByApplyingSymbolConfiguration:v11];
  double v8 = *(void **)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage];
  *(void *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage] = v7;

  id v9 = [*(id *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseUncheckedImage] imageByApplyingSymbolConfiguration:v11];
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage];
  *(void *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage] = v9;

  [v0 invalidateIntrinsicContentSize];
}

void sub_100D25058()
{
}

id sub_100D25084(uint64_t a1)
{
  return sub_100D27174(a1, _s4ItemC14ViewControllerC19SelectionStateBadgeCMa);
}

id sub_100D2513C(uint64_t a1)
{
  return sub_100D27174(a1, _s4ItemC14ViewControllerCMa);
}

uint64_t sub_100D25284()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v71 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v73 = (uint64_t)&v70 - v12;
  __chkstk_darwin(v13, v14);
  double v16 = (char *)&v70 - v15;
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v17 - 8, v18);
  double v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  double v24 = (char *)&v70 - v23;
  double v25 = (objc_class *)_s4ItemCMa();
  v75.receiver = v1;
  v75.super_class = v25;
  [super accessibilityLabel];
  CGSize v72 = v9;
  if (!v26) {
    goto LABEL_9;
  }
  double v27 = v26;
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v30 = v29;

  uint64_t v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    double v32 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  unint64_t v70 = v1;
  double v32 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v34 = *((void *)v32 + 2);
  unint64_t v33 = *((void *)v32 + 3);
  if (v34 >= v33 >> 1) {
    double v32 = sub_100F61B70((double *)(v33 > 1), v34 + 1, 1, v32);
  }
  *((void *)v32 + 2) = v34 + 1;
  CGFloat v35 = &v32[2 * v34];
  *((void *)v35 + 4) = v28;
  *((void *)v35 + 5) = v30;
  uint64_t v1 = v70;
LABEL_10:
  uint64_t v36 = (uint64_t)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item];
  swift_beginAccess();
  sub_1005FCAC8(v36, (uint64_t)v24);
  CGRect v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v37(v24, 1, v5))
  {
    sub_1007E6ED8((uint64_t)v24);
  }
  else
  {
    sub_10076F9F8((uint64_t)v24, (uint64_t)v16);
    sub_1007E6ED8((uint64_t)v24);
    uint64_t v38 = sub_100DD56F8();
    unint64_t v70 = v39;
    sub_1007E70FC((uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
    id v40 = v1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v32 = sub_100F61B70(0, *((void *)v32 + 2) + 1, 1, v32);
    }
    unint64_t v42 = *((void *)v32 + 2);
    unint64_t v41 = *((void *)v32 + 3);
    if (v42 >= v41 >> 1) {
      double v32 = sub_100F61B70((double *)(v41 > 1), v42 + 1, 1, v32);
    }
    *((void *)v32 + 2) = v42 + 1;
    id v43 = &v32[2 * v42];
    double v44 = v70;
    *((void *)v43 + 4) = v38;
    *((void *)v43 + 5) = v44;
    uint64_t v1 = v40;
  }
  sub_1005FCAC8(v36, (uint64_t)v20);
  if (v37(v20, 1, v5))
  {
    sub_1007E6ED8((uint64_t)v20);
  }
  else
  {
    uint64_t v45 = v73;
    sub_10076F9F8((uint64_t)v20, v73);
    sub_1007E6ED8((uint64_t)v20);
    uint64_t v46 = (uint64_t)v72;
    sub_10076F9F8(v45, (uint64_t)v72);
    EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v48 = v46;
        uint64_t v46 = v71;
        sub_1007A4808(v48, v71, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        uint64_t v49 = sub_100DD4C48();
        uint64_t v51 = v50;
        double v52 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      }
      else
      {
        double v54 = (uint64_t *)(v46 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
        uint64_t v49 = *v54;
        uint64_t v51 = v54[1];
        double v52 = type metadata accessor for CRLBoardIdentifier;
      }
      sub_1007E70FC(v46, v52);
    }
    else
    {
      uint64_t v49 = sub_100DD8CAC();
      uint64_t v51 = v53;
    }
    sub_1007E70FC(v45, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v32 = sub_100F61B70(0, *((void *)v32 + 2) + 1, 1, v32);
    }
    unint64_t v56 = *((void *)v32 + 2);
    unint64_t v55 = *((void *)v32 + 3);
    if (v56 >= v55 >> 1) {
      double v32 = sub_100F61B70((double *)(v55 > 1), v56 + 1, 1, v32);
    }
    *((void *)v32 + 2) = v56 + 1;
    uint64_t v57 = &v32[2 * v56];
    *((void *)v57 + 4) = v49;
    *((void *)v57 + 5) = v51;
  }
  uint64_t v58 = *(void *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText + 8];
  if (v58)
  {
    uint64_t v59 = *(void *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v32 = sub_100F61B70(0, *((void *)v32 + 2) + 1, 1, v32);
    }
    unint64_t v61 = *((void *)v32 + 2);
    unint64_t v60 = *((void *)v32 + 3);
    if (v61 >= v60 >> 1) {
      double v32 = sub_100F61B70((double *)(v60 > 1), v61 + 1, 1, v32);
    }
    *((void *)v32 + 2) = v61 + 1;
    uint64_t v62 = &v32[2 * v61];
    *((void *)v62 + 4) = v59;
    *((void *)v62 + 5) = v58;
  }
  uint64_t v63 = *(void *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName + 8];
  if (v63)
  {
    uint64_t v64 = *(void *)&v1[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v32 = sub_100F61B70(0, *((void *)v32 + 2) + 1, 1, v32);
    }
    unint64_t v66 = *((void *)v32 + 2);
    unint64_t v65 = *((void *)v32 + 3);
    if (v66 >= v65 >> 1) {
      double v32 = sub_100F61B70((double *)(v65 > 1), v66 + 1, 1, v32);
    }
    *((void *)v32 + 2) = v66 + 1;
    CGFloat v67 = &v32[2 * v66];
    *((void *)v67 + 4) = v64;
    *((void *)v67 + 5) = v63;
  }
  CGRect v74 = v32;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_10056547C();
  uint64_t v68 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v68;
}

uint64_t sub_100D25904()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
    uint64_t v7 = sub_1005057FC(&qword_101670F30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 5, 5, v7);
    LOBYTE(v6) = sub_100DDC744(v6, (uint64_t)v4);
    sub_1007E70FC((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    swift_unknownObjectRelease();
    if (v6) {
      return 0;
    }
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite) != 1) {
    return 0;
  }
  id v8 = [self mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v12;
}

id sub_100D25AFC(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_100D25B7C()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v6 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  uint64_t v7 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 5, 5, v7);
  LOBYTE(v6) = sub_100DDC744(v6, (uint64_t)v4);
  sub_1007E70FC((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v6 & 1) != 0
    || *(unsigned char *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState) == 1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  int v10 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite);
  id v11 = [self mainBundle];
  if (v10 == 1)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    NSString v15 = String._bridgeToObjectiveC()();
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v11 localizedStringForKey:v15 value:v16 table:0];

    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_unknownObjectRelease();
  }
  return v8;
}

double *sub_100D25E90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  NSString v9 = (char *)&v41 - v8;
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  NSString v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = _swiftEmptyArrayStorage;
  uint64_t v51 = _swiftEmptyArrayStorage;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return v14;
  }
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  type metadata accessor for CRLBoardLibrary();
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_unknownObjectRelease();
    return v14;
  }
  uint64_t v16 = v15;
  double v44 = v13;
  uint64_t v17 = v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item;
  swift_beginAccess();
  sub_1005FCAC8(v17, (uint64_t)v9);
  uint64_t v18 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v19 = *(unsigned int (**)(const char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  if (v19(v9, 1, v18) == 1)
  {
    swift_unknownObjectRelease();
    sub_1007E6ED8((uint64_t)v9);
    return _swiftEmptyArrayStorage;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    swift_unknownObjectRelease();
    uint64_t v39 = type metadata accessor for CRLBoardLibraryViewModel.Item;
LABEL_17:
    sub_1007E70FC((uint64_t)v9, v39);
    return _swiftEmptyArrayStorage;
  }
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t)v9;
  NSString v9 = v44;
  sub_1007A4808(v20, (uint64_t)v44, type metadata accessor for CRLBoardIdentifier);
  if (!swift_unknownObjectWeakLoadStrong())
  {
    swift_unknownObjectRelease();
    uint64_t v39 = type metadata accessor for CRLBoardIdentifier;
    goto LABEL_17;
  }
  sub_1005FCAC8(v17, (uint64_t)v5);
  uint64_t v21 = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v5, 1, v18);
  if (v21 == 1)
  {
    __break(1u);
    JUMPOUT(0x100D265D0);
  }
  unint64_t v23 = *(void *)(*(void *)(v16 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                  + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (uint64_t)v44;
  *(&v41 - 2) = v44;
  swift_bridgeObjectRetain();
  double v25 = (char *)sub_100ED4F9C((uint64_t (*)(id *))sub_1007E7080, (uint64_t)(&v41 - 4), v23);
  swift_bridgeObjectRelease();
  id v26 = sub_100D863B4((uint64_t)v5, v25);
  swift_unknownObjectRelease();

  sub_1007E70FC((uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v48 = *((void *)v26 + 2);
  if (v48)
  {
    id v47 = self;
    double v27 = self;
    uint64_t v45 = v50;
    id v46 = v27;
    swift_bridgeObjectRetain();
    uint64_t v28 = 0;
    unint64_t v42 = "plus.square.on.square";
    id v43 = "en the view options menu.";
    unint64_t v41 = "Freeform.ViewController";
    do
    {
      unint64_t v29 = v26;
      char v30 = *((unsigned char *)v26 + v28 + 32);
      sub_10101AB28();
      id v31 = [v47 configurationWithPointSize:30.0 v41, v42, v43];
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v33 = [v46 systemImageNamed:v32 withConfiguration:v31];

      uint64_t v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v34;
      *(unsigned char *)(v35 + 24) = v30;
      id v36 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v50[2] = sub_100D283DC;
      v50[3] = v35;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      v50[0] = sub_100E16228;
      v50[1] = &unk_10152ACC8;
      uint64_t v38 = _Block_copy(aBlock);
      [v36 initWithName:v37 image:v33 actionHandler:v38];

      _Block_release(v38);
      swift_release();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v51 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      ++v28;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v26 = v29;
    }
    while (v48 != v28);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    id v14 = v51;
    uint64_t v24 = (uint64_t)v44;
  }
  else
  {
    swift_unknownObjectRelease();
    id v14 = _swiftEmptyArrayStorage;
  }
  sub_1007E70FC(v24, type metadata accessor for CRLBoardIdentifier);
  swift_bridgeObjectRelease();
  return v14;
}

BOOL sub_100D26600(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    type metadata accessor for MainActor();
    id v10 = Strong;
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = &protocol witness table for MainActor;
    *(void *)(v12 + 32) = v10;
    *(unsigned char *)(v12 + 40) = a3;
    sub_1005912D0((uint64_t)v7, (uint64_t)&unk_10169A5D8, v12);
    swift_release();
  }
  return Strong != 0;
}

uint64_t sub_100D26760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 208) = a5;
  *(void *)(v5 + 144) = a4;
  sub_1005057FC((uint64_t *)&unk_101676310);
  *(void *)(v5 + 152) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 160) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 168) = v7;
  *(void *)(v5 + 176) = v6;
  return _swift_task_switch(sub_100D2682C, v7, v6);
}

uint64_t sub_100D2682C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 184) = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 144) + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item;
    swift_beginAccess();
    sub_1005FCAC8(v3, v2);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1007E5DF8;
    uint64_t v5 = *(void *)(v0 + 152);
    char v6 = *(unsigned char *)(v0 + 208);
    return sub_100D84394(v6, v5);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_100D26960()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
    uint64_t v11 = sub_1005057FC(&qword_101670F30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 5, 5, v11);
    LOBYTE(v10) = sub_100DDC744(v10, (uint64_t)v8);
    sub_1007E70FC((uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    if ((v10 & 1) == 0
      && *((unsigned char *)v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState) != 1)
    {
      uint64_t v14 = type metadata accessor for TaskPriority();
      uint64_t v12 = 1;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
      type metadata accessor for MainActor();
      id v15 = v0;
      uint64_t v16 = static MainActor.shared.getter();
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v16;
      v17[3] = &protocol witness table for MainActor;
      v17[4] = v15;
      sub_1005912D0((uint64_t)v4, (uint64_t)&unk_10169A5C8, (uint64_t)v17);
      swift_unknownObjectRelease();
      swift_release();
      return v12;
    }
    swift_unknownObjectRelease();
  }
  return 0;
}

uint64_t sub_100D26B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  sub_1005057FC(&qword_101672BB0);
  v4[6] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101676310);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = type metadata accessor for MainActor();
  v4[13] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[14] = v7;
  v4[15] = v6;
  return _swift_task_switch(sub_100D26D04, v7, v6);
}

uint64_t sub_100D26D04()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[16] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[11];
    uint64_t v3 = v0[5] + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item;
    swift_beginAccess();
    sub_1005FCAC8(v3, v2);
    v0[17] = static MainActor.shared.getter();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100D26E48, v5, v4);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100D26E48()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  swift_release();
  sub_1005FCAC8(v2, v1);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v6 = *(void *)(v0 + 80);
  if (v5 == 1)
  {
    sub_1007E6ED8(v6);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 72);
    sub_1007A4808(v6, v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1005057FC(&qword_10169B510);
    unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10117E810;
    sub_10076F9F8(v8, v10 + v9);
    uint64_t v11 = sub_100DD85D8(v10);
    uint64_t v12 = sub_100CDDF48((uint64_t)v11);
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 16))
    {
      uint64_t v13 = *(void *)(v0 + 48);
      id v14 = *(id *)(v0 + 128);
      char v15 = sub_100DB4CF0(v12, (uint64_t)v14);
      swift_unknownObjectRelease();
      uint64_t v16 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      uint64_t v18 = static MainActor.shared.getter();
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = &protocol witness table for MainActor;
      *(void *)(v19 + 32) = v17;
      *(void *)(v19 + 40) = v12;
      *(unsigned char *)(v19 + 48) = v15 & 1;
      swift_release();
      sub_1005912D0(v13, (uint64_t)&unk_1016819E0, v19);
      swift_release();
      [v14 setEditing:0 animated:1];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = *(void *)(v0 + 72);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1007E70FC(v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  sub_1007E6ED8(*(void *)(v0 + 88));
  swift_unknownObjectRelease();
  uint64_t v21 = *(void *)(v0 + 112);
  uint64_t v22 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_1007E6948, v21, v22);
}

id sub_100D27158()
{
  return sub_100D27174(0, _s4ItemCMa);
}

id sub_100D27174(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_100D2726C()
{
  return _s4ItemCMa();
}

uint64_t _s4ItemCMa()
{
  uint64_t result = qword_10169A3E8;
  if (!qword_10169A3E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100D272C0()
{
  sub_10057351C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t _s4ItemC14ViewControllerCMa()
{
  return self;
}

uint64_t _s4ItemC14ViewControllerC8ItemViewCMa()
{
  return self;
}

uint64_t _s4ItemC14ViewControllerC18ThumbnailImageViewCMa()
{
  return self;
}

uint64_t _s4ItemC14ViewControllerC14FavoriteButtonCMa()
{
  return self;
}

uint64_t _s4ItemC14ViewControllerC19SelectionStateBadgeCMa()
{
  return self;
}

unsigned char *_s4ItemC14ViewControllerC14FavoriteButtonC4SizeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100D2750CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4ItemC14ViewControllerC14FavoriteButtonC4SizeOMa()
{
  return &_s4ItemC14ViewControllerC14FavoriteButtonC4SizeON;
}

unsigned char *_s4ItemC16BoardAccessStateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100D27610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4ItemC16BoardAccessStateOMa()
{
  return &_s4ItemC16BoardAccessStateON;
}

unint64_t sub_100D2764C()
{
  unint64_t result = qword_10169A5B0;
  if (!qword_10169A5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A5B0);
  }
  return result;
}

unint64_t sub_100D276A4()
{
  unint64_t result = qword_10169A5B8;
  if (!qword_10169A5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10169A5B8);
  }
  return result;
}

uint64_t sub_100D276F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item;
  swift_beginAccess();
  return sub_1005FCAC8(v3, a1);
}

void sub_100D2774C(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v2)
  {
    id v3 = objc_retain(*(id *)(v2
                           + OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView));
    [v3 setImage:a1];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100D277C8@<X0>(uint64_t a1@<X8>)
{
  sub_100D21A60((uint64_t)v3);
  return sub_1005FCB30((uint64_t)v3, a1);
}

uint64_t sub_100D27808()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x228))();
}

uint64_t sub_100D27844(uint64_t a1, uint64_t a2)
{
  return sub_1007E6D64(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle);
}

uint64_t sub_100D27854(uint64_t a1, uint64_t a2)
{
  return sub_1007E6D64(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText);
}

uint64_t sub_100D27860(uint64_t a1, uint64_t a2)
{
  return sub_1007E6D64(a1, a2, &OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName);
}

void sub_100D2786C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController);
  if (v1) {
    (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x160))();
  }
  else {
    __break(1u);
  }
}

uint64_t sub_100D278DC()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState);
}

id sub_100D278EC()
{
  _s8GridItemCMa();
  return [v0 isKindOfClass:swift_getObjCClassFromMetadata()];
}

id sub_100D27920(uint64_t a1, void *a2)
{
  return sub_100D2794C(a2);
}

void sub_100D27928()
{
}

id sub_100D2794C(void *a1)
{
  uint64_t v2 = v1;
  id v3 = &v1[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v4 = *((void *)v3 + 1);
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 408))(ObjectType, v4))
    {
      if ([self isIncreaseContrastEnabled])
      {
        id v6 = [v2 traitCollection];
        id v7 = [v6 userInterfaceStyle];

        if (v7 == (id)2)
        {
          id v8 = [self currentTraitCollection];
          unint64_t v9 = (void *)UITraitCollection.modifyingTraits(_:)();

          id v10 = [a1 resolvedColorWithTraitCollection:v9];
          swift_unknownObjectRelease();

          return v10;
        }
      }
    }
    swift_unknownObjectRelease();
  }

  return a1;
}

void sub_100D27AC0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_item];
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_dimsThumbnail] = 0;
  id v3 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardTitle];
  *id v3 = 0;
  v3[1] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_lastEditedTimestampText];
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxLastEditedTimestampText];
  *uint64_t v5 = 0;
  v5[1] = 0;
  id v6 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_collaboratorName];
  void *v6 = 0;
  v6[1] = 0;
  id v7 = &v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_folderName];
  *id v7 = 0;
  v7[1] = 0;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_isFavorite] = 0;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_canShowFavoriteButton] = 1;
  v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_boardAccessState] = 0;
  *(void *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_crlaxDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController4Item_viewController] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100D27C1C()
{
  *(void *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_owningItem + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dropShadowView;
  uint64_t v2 = (objc_class *)type metadata accessor for CRLShadowView();
  *(void *)&v0[v1] = [objc_allocWithZone(v2) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v3 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_roundedCornersContainerView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v4 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailImageView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)_s4ItemC14ViewControllerC18ThumbnailImageViewCMa()) init];
  uint64_t v5 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailBackdropView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v6 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_thumbnailContainerView;
  *(void *)&v0[v6] = [objc_allocWithZone(v2) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v7 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_favoriteButton;
  *(void *)&v0[v7] = [objc_allocWithZone((Class)_s4ItemC14ViewControllerC14FavoriteButtonCMa()) init];
  uint64_t v8 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionHostingView;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_attributionView] = 0;
  v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isSelected] = 0;
  v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isHighlighted] = 0;
  v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_dimsThumbnail] = 0;
  uint64_t v9 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_selectionStateBadge;
  *(void *)&v0[v9] = [objc_allocWithZone((Class)_s4ItemC14ViewControllerC19SelectionStateBadgeCMa()) init];
  v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_isInMultipleSelectionMode] = 0;
  uint64_t v10 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_boardTitleLabel;
  id v11 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setText:v12];

  *(void *)&v0[v10] = v11;
  uint64_t v13 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_lastEditedTimestampLabel;
  id v14 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setText:v15];

  *(void *)&v0[v13] = v14;
  uint64_t v16 = OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_collaboratorNameLabel;
  id v17 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setText:v18];

  *(void *)&v0[v16] = v17;
  *(void *)&v0[OBJC_IVAR____TtCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController_overrideTraitCollection] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100D27F7C()
{
  uint64_t v1 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconFillImageView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v2 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_favoriteIconOuterGlowImageView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_accessibilityDelegate
               + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_isFavorite] = 0;
  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_showsOuterGlow] = 0;
  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController14FavoriteButton_size] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100D28084()
{
  v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_isChecked] = 0;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = self;
  NSString v3 = [v2 systemImageNamed:v1];

  if (!v3) {
    __break(1u);
  }
  uint64_t v4 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseCheckedImage;
  if (qword_10166FEB8 != -1) {
    goto LABEL_6;
  }
  while (1)
  {
    id v5 = [v3 imageWithTintColor:qword_10169A370];

    *(void *)&v0[v4] = v5;
    NSString v3 = String._bridgeToObjectiveC()();
    id v2 = [v2 systemImageNamed:v3];

    if (v2) {
      break;
    }
    __break(1u);
LABEL_6:
    swift_once();
  }
  uint64_t v6 = OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_baseUncheckedImage;
  id v7 = [v2 imageWithTintColor:qword_10169A370];

  *(void *)&v0[v6] = v7;
  *(void *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_checkedImage] = 0;
  *(void *)&v0[OBJC_IVAR____TtCCCC8Freeform30CRLiOSFolderGridViewController4Item14ViewController19SelectionStateBadge_uncheckedImage] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100D28248()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100D28280()
{
}

uint64_t sub_100D28288(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100D28298()
{
  return swift_release();
}

uint64_t sub_100D282A0()
{
  return sub_1007E7164(40);
}

uint64_t sub_100D282A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100D26B9C(a1, v4, v5, v6);
}

uint64_t sub_100D2835C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100D283A4()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

BOOL sub_100D283DC(uint64_t a1)
{
  return sub_100D26600(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_100D283E8()
{
  return sub_1007E7164(41);
}

uint64_t sub_100D283F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100D26760(a1, v4, v5, v6, v7);
}

uint64_t destroy for CRLLayerImplicitPropertyTransition(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakDestroy();
  if (*(void *)(a1 + 32))
  {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 8);
  }
  return result;
}

uint64_t initializeWithCopy for CRLLayerImplicitPropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(swift_unknownObjectWeakCopyInit() + 8);
  uint64_t v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  if (v6)
  {
    *(void *)(a1 + 32) = v6;
    (**(void (***)(_OWORD *, _OWORD *))(v6 - 8))(v4, v5);
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *uint64_t v4 = *v5;
    v4[1] = v7;
  }
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for CRLLayerImplicitPropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyAssign();
  uint64_t v5 = (_OWORD *)(v4 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(v4 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(v4 + 8, a2 + 8);
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 24);
    *uint64_t v5 = *(_OWORD *)(a2 + 8);
    v5[1] = v7;
    goto LABEL_8;
  }
  if (!v6)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4 + 8);
    goto LABEL_7;
  }
  sub_10082092C((uint64_t *)(v4 + 8), (uint64_t *)(a2 + 8));
LABEL_8:
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for CRLLayerImplicitPropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(v3 + 24) = result;
  *(unsigned char *)(v3 + 40) = *(unsigned char *)(a2 + 40);
  return result;
}

uint64_t assignWithTake for CRLLayerImplicitPropertyTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakTakeAssign();
  uint64_t v5 = (_OWORD *)(v4 + 8);
  if (*(void *)(v4 + 32)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4 + 8);
  }
  long long v6 = *(_OWORD *)(a2 + 24);
  *uint64_t v5 = *(_OWORD *)(a2 + 8);
  v5[1] = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerImplicitPropertyTransition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLayerImplicitPropertyTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerImplicitPropertyTransition()
{
  return &type metadata for CRLLayerImplicitPropertyTransition;
}

uint64_t sub_100D287A0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  id v6 = [v2 presentationLayer];
  sub_1009FC740(a1);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!v6)
  {
    id v9 = [v3 valueForKey:v7];

    if (v9)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      return sub_10052E248((uint64_t)v11, a2);
    }
LABEL_7:
    memset(v11, 0, sizeof(v11));
    return sub_10052E248((uint64_t)v11, a2);
  }
  id v8 = [v6 valueForKey:v7];

  if (!v8)
  {

    goto LABEL_7;
  }
  _bridgeAnyObjectToAny(_:)();

  swift_unknownObjectRelease();
  return sub_10052E248((uint64_t)v11, a2);
}

uint64_t sub_100D288B0@<X0>(uint64_t a1@<X8>)
{
  switch(*(unsigned char *)(v1 + 40))
  {
    case 1:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33)
      {
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
        JUMPOUT(0x100D29334);
      }
      sub_100575CE8(&v32, &v22);
      type metadata accessor for CGRect(0);
      uint64_t result = swift_dynamicCast();
      long long v5 = v31;
      *(_OWORD *)a1 = v30;
      *(_OWORD *)(a1 + 16) = v5;
      char v4 = 3;
      goto LABEL_70;
    case 2:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_73;
      }
      sub_100575CE8(&v32, &v22);
      type metadata accessor for CGPoint(0);
      uint64_t result = swift_dynamicCast();
      *(_OWORD *)a1 = v30;
      char v4 = 5;
      goto LABEL_70;
    case 3:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_74;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(_DWORD *)a1 = v30;
      *(unsigned char *)(a1 + 256) = 7;
      return result;
    case 4:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_75;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(unsigned char *)a1 = v30;
      char v4 = 9;
      goto LABEL_70;
    case 5:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_76;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(unsigned char *)a1 = v30;
      char v4 = 11;
      goto LABEL_70;
    case 6:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_77;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(unsigned char *)a1 = v30;
      char v4 = 13;
      goto LABEL_70;
    case 7:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_78;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(void *)a1 = v30;
      char v4 = 15;
      goto LABEL_70;
    case 8:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_79;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(void *)a1 = v30;
      char v4 = 17;
      goto LABEL_70;
    case 9:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (v33)
      {
        sub_100575CE8(&v32, &v22);
        type metadata accessor for CGColor(0);
        uint64_t result = swift_dynamicCast();
        uint64_t v6 = v30;
      }
      else
      {
        uint64_t result = sub_10052E2B0((uint64_t)&v32);
        uint64_t v6 = 0;
      }
      *(void *)a1 = v6;
      char v4 = 19;
      goto LABEL_70;
    case 0xA:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (v33)
      {
        sub_100575CE8(&v32, &v22);
        type metadata accessor for CGColor(0);
        uint64_t result = swift_dynamicCast();
        uint64_t v7 = v30;
      }
      else
      {
        uint64_t result = sub_10052E2B0((uint64_t)&v32);
        uint64_t v7 = 0;
      }
      *(void *)a1 = v7;
      char v4 = 21;
      goto LABEL_70;
    case 0xB:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_80;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(_DWORD *)a1 = v30;
      char v4 = 23;
      goto LABEL_70;
    case 0xC:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_81;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(void *)a1 = v30;
      char v4 = 25;
      goto LABEL_70;
    case 0xD:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_82;
      }
      sub_100575CE8(&v32, &v22);
      type metadata accessor for CGSize(0);
      uint64_t result = swift_dynamicCast();
      *(_OWORD *)a1 = v30;
      char v4 = 27;
      goto LABEL_70;
    case 0xE:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (v33)
      {
        sub_100575CE8(&v32, &v22);
        type metadata accessor for CGColor(0);
        uint64_t result = swift_dynamicCast();
        uint64_t v8 = v30;
      }
      else
      {
        uint64_t result = sub_10052E2B0((uint64_t)&v32);
        uint64_t v8 = 0;
      }
      *(void *)a1 = v8;
      char v4 = 29;
      goto LABEL_70;
    case 0xF:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (v33)
      {
        sub_100575CE8(&v32, &v22);
        type metadata accessor for CGPath(0);
        uint64_t result = swift_dynamicCast();
        uint64_t v9 = v30;
      }
      else
      {
        uint64_t result = sub_10052E2B0((uint64_t)&v32);
        uint64_t v9 = 0;
      }
      *(void *)a1 = v9;
      char v4 = 31;
      goto LABEL_70;
    case 0x10:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (v33)
      {
        sub_100575CE8(&v32, &v22);
        sub_1005057FC((uint64_t *)&unk_10167C8C0);
        uint64_t result = swift_dynamicCast();
        uint64_t v10 = v30;
      }
      else
      {
        uint64_t result = sub_10052E2B0((uint64_t)&v32);
        uint64_t v10 = 0;
      }
      *(void *)a1 = v10;
      char v4 = 33;
      goto LABEL_70;
    case 0x11:
      uint64_t result = sub_100557A70(v1 + 8, a1);
      char v4 = 35;
      goto LABEL_70;
    case 0x12:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (v33)
      {
        sub_100575CE8(&v32, &v22);
        sub_1005057FC((uint64_t *)&unk_10167C8C0);
        uint64_t result = swift_dynamicCast();
        uint64_t v11 = v30;
      }
      else
      {
        uint64_t result = sub_10052E2B0((uint64_t)&v32);
        uint64_t v11 = 0;
      }
      *(void *)a1 = v11;
      char v4 = 37;
      goto LABEL_70;
    case 0x13:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_83;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(unsigned char *)a1 = v30;
      char v4 = 39;
      goto LABEL_70;
    case 0x14:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_84;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(void *)a1 = v30;
      char v4 = 41;
      goto LABEL_70;
    case 0x15:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_85;
      }
      sub_100575CE8(&v32, &v22);
      type metadata accessor for CGRect(0);
      uint64_t result = swift_dynamicCast();
      long long v12 = v31;
      *(_OWORD *)a1 = v30;
      *(_OWORD *)(a1 + 16) = v12;
      char v4 = 43;
      goto LABEL_70;
    case 0x16:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_86;
      }
      sub_100575CE8(&v32, &v22);
      type metadata accessor for CGPoint(0);
      uint64_t result = swift_dynamicCast();
      *(_OWORD *)a1 = v30;
      char v4 = 45;
      goto LABEL_70;
    case 0x17:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_87;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(void *)a1 = v30;
      char v4 = 47;
      goto LABEL_70;
    case 0x18:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_88;
      }
      sub_100575CE8(&v32, &v22);
      uint64_t result = swift_dynamicCast();
      *(void *)a1 = v30;
      char v4 = 49;
      goto LABEL_70;
    case 0x19:
      sub_100557A70(v1 + 8, (uint64_t)&v32);
      if (!v33) {
        goto LABEL_89;
      }
      sub_100575CE8(&v32, &v22);
      type metadata accessor for CGPoint(0);
      uint64_t result = swift_dynamicCast();
      *(_OWORD *)a1 = v30;
      char v4 = 51;
      goto LABEL_70;
    case 0x1A:
      sub_100557A70(v1 + 8, (uint64_t)&v30);
      if (!*((void *)&v31 + 1)) {
        goto LABEL_92;
      }
      sub_100575CE8(&v30, &v32);
      type metadata accessor for CATransform3D(0);
      uint64_t result = swift_dynamicCast();
      long long v18 = v27;
      *(_OWORD *)(a1 + 64) = v26;
      *(_OWORD *)(a1 + 80) = v18;
      long long v19 = v29;
      *(_OWORD *)(a1 + 96) = v28;
      *(_OWORD *)(a1 + 112) = v19;
      long long v20 = v23;
      *(_OWORD *)a1 = v22;
      *(_OWORD *)(a1 + 16) = v20;
      long long v21 = v25;
      *(_OWORD *)(a1 + 32) = v24;
      *(_OWORD *)(a1 + 48) = v21;
      char v4 = 53;
      goto LABEL_70;
    case 0x1B:
      sub_100557A70(v1 + 8, (uint64_t)&v30);
      if (!*((void *)&v31 + 1)) {
        goto LABEL_90;
      }
      sub_100575CE8(&v30, &v32);
      type metadata accessor for CATransform3D(0);
      uint64_t result = swift_dynamicCast();
      long long v13 = v27;
      *(_OWORD *)(a1 + 64) = v26;
      *(_OWORD *)(a1 + 80) = v13;
      long long v14 = v29;
      *(_OWORD *)(a1 + 96) = v28;
      *(_OWORD *)(a1 + 112) = v14;
      long long v15 = v23;
      *(_OWORD *)a1 = v22;
      *(_OWORD *)(a1 + 16) = v15;
      long long v16 = v25;
      *(_OWORD *)(a1 + 32) = v24;
      *(_OWORD *)(a1 + 48) = v16;
      char v4 = 55;
      goto LABEL_70;
    case 0x1C:
      sub_100557A70(v1 + 8, (uint64_t)&v30);
      if (!*((void *)&v31 + 1)) {
        goto LABEL_91;
      }
      sub_100575CE8(&v30, &v32);
      type metadata accessor for CGAffineTransform(0);
      uint64_t result = swift_dynamicCast();
      long long v17 = v23;
      *(_OWORD *)a1 = v22;
      *(_OWORD *)(a1 + 16) = v17;
      *(_OWORD *)(a1 + 32) = v24;
      char v4 = 57;
LABEL_70:
      *(unsigned char *)(a1 + 256) = v4;
      return result;
    default:
      uint64_t result = sub_100557A70(v1 + 8, a1);
      char v4 = 1;
      goto LABEL_70;
  }
}

double sub_100D293A8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  char v4 = *(unsigned char *)(v1 + 40);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_100D287A0(v4, (uint64_t)v18);
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_100557A70(v2 + 8, (uint64_t)v17);
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  LOBYTE(v15) = v4;
  *((void *)&v15 + 1) = sub_1009FC740(v4);
  uint64_t v16 = v7;
  sub_1005E93B8((uint64_t)v18, (uint64_t)&v11);
  sub_1005E93B8((uint64_t)v17, (uint64_t)&v13);
  long long v8 = v14;
  *(_OWORD *)(a1 + 32) = v13;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v15;
  *(void *)(a1 + 80) = v16;
  double result = *(double *)&v11;
  long long v10 = v12;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v10;
  return result;
}

unint64_t sub_100D29480(uint64_t a1)
{
  unint64_t result = sub_100D294A8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100D294A8()
{
  unint64_t result = qword_10169A5E0;
  if (!qword_10169A5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A5E0);
  }
  return result;
}

BOOL sub_100D294FC(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = sub_1009FC740(*(unsigned char *)(a1 + 40));
  uint64_t v7 = v6;
  if (v5 == sub_1009FC740(v4) && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    sub_100D2970C(a1, (uint64_t)v24);
    sub_100D2970C(a2, (uint64_t)v23);
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100D2970C(a1, (uint64_t)v24);
    sub_100D2970C(a2, (uint64_t)v23);
    if ((v10 & 1) == 0)
    {
      sub_100D29744((uint64_t)v23);
      sub_100D29744((uint64_t)v24);
LABEL_15:
      sub_100D2970C(a1, (uint64_t)v21);
      sub_100D2970C(a2, (uint64_t)&v19);
      goto LABEL_16;
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v12 = swift_unknownObjectWeakLoadStrong();
  long long v13 = (void *)v12;
  if (!Strong)
  {
    sub_100D29744((uint64_t)v23);
    sub_100D29744((uint64_t)v24);
    if (v13)
    {

      goto LABEL_15;
    }
    sub_100D2970C(a1, (uint64_t)v21);
    sub_100D2970C(a2, (uint64_t)&v19);
LABEL_18:
    BOOL v17 = sub_1009FF39C((uint64_t)&v22, (uint64_t)&v20);
    goto LABEL_19;
  }
  if (!v12)
  {
    id v16 = Strong;
    sub_100D29744((uint64_t)v23);
    sub_100D29744((uint64_t)v24);

    goto LABEL_15;
  }
  sub_10054CE40();
  id v14 = Strong;
  char v15 = static NSObject.== infix(_:_:)();
  sub_100D29744((uint64_t)v23);
  sub_100D29744((uint64_t)v24);

  sub_100D2970C(a1, (uint64_t)v21);
  sub_100D2970C(a2, (uint64_t)&v19);
  if (v15) {
    goto LABEL_18;
  }
LABEL_16:
  BOOL v17 = 0;
LABEL_19:
  sub_100D29744((uint64_t)&v19);
  sub_100D29744((uint64_t)v21);
  return v17;
}

uint64_t sub_100D2970C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100D29744(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 8);
  }
  return a1;
}

uint64_t sub_100D2977C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v43 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8, v8);
  char v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v42 = (uint64_t)&v37 - v13;
  unint64_t v48 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v38 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v39 = (unint64_t)(v15 + 63) >> 6;
  unint64_t v41 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  id v40 = CKCurrentUserDefaultName;
  long long v18 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v45 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v44 = v2;
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v21 | (v20 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v20 << 6))
  {
    uint64_t v26 = v42;
    sub_100D42F4C(*(void *)(v45 + 48) + *(void *)(v43 + 72) * i, v42, type metadata accessor for CRLBoardIdentifier);
    sub_100D42FB4(v26, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    (*v41)(v6, v10, v2);
    long long v27 = (uint64_t *)&v10[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    uint64_t v28 = *v27;
    long long v29 = (void *)v27[1];
    if (*v27) {
      BOOL v30 = 0;
    }
    else {
      BOOL v30 = v29 == (void *)0xE000000000000000;
    }
    if (v30 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      long long v29 = v31;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v46 = 0x5F6472616F42;
    unint64_t v47 = 0xE600000000000000;
    v32._countAndFlagsBits = UUID.uuidString.getter();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    uint64_t v33 = v46;
    uint64_t v34 = (void *)v47;
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    v35._countAndFlagsBits = v33;
    v35._object = v34;
    v36._countAndFlagsBits = v28;
    v36._object = v29;
    CKRecordZoneID.init(zoneName:ownerName:)(v35, v36);
    uint64_t v2 = v44;
    (*v18)(v6, v44);
    sub_100D426E4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    uint64_t result = specialized Array._endMutation()();
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v23 >= v39) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v38 + 8 * v23);
    ++v20;
    if (!v24)
    {
      int64_t v20 = v23 + 1;
      if (v23 + 1 >= v39) {
        goto LABEL_32;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v20);
      if (!v24)
      {
        int64_t v20 = v23 + 2;
        if (v23 + 2 >= v39) {
          goto LABEL_32;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v20);
        if (!v24)
        {
          int64_t v20 = v23 + 3;
          if (v23 + 3 >= v39) {
            goto LABEL_32;
          }
          unint64_t v24 = *(void *)(v38 + 8 * v20);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v17 = (v24 - 1) & v24;
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v39)
  {
LABEL_32:
    swift_release();
    return v48;
  }
  unint64_t v24 = *(void *)(v38 + 8 * v25);
  if (v24)
  {
    int64_t v20 = v25;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v20 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v20 >= v39) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v38 + 8 * v20);
    ++v25;
    if (v24) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100D29C10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v29 - v14;
  sub_100D3A008((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100522F00((uint64_t)v6, (uint64_t *)&unk_101674520);
    uint64_t v16 = type metadata accessor for CRLBoardIdentifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v15, v7);
  id v18 = [v1 ownerName];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      id v26 = [v1 ownerName];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v25 = v27;

      goto LABEL_9;
    }
  }
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
LABEL_9:
  sub_100753370((uint64_t)v12, v24, v25, a1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
  uint64_t v28 = type metadata accessor for CRLBoardIdentifier(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a1, 0, 1, v28);
}

uint64_t sub_100D29F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10169A7D8);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLAssetSyncMetadata();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v47 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v43 - v18;
  *(void *)&long long v48 = a1;
  *((void *)&v48 + 1) = a2;
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = 0x7465737341;
  v20._object = (void *)0xE500000000000000;
  String.append(_:)(v20);
  uint64_t v21 = CKRecord.subscript.getter();
  swift_bridgeObjectRelease();
  if (v21)
  {
    self;
    uint64_t v22 = (void *)swift_dynamicCastObjCClass();
    if (!v22)
    {
      swift_unknownObjectRelease();
      return 0;
    }
    id v43 = v22;
    uint64_t v45 = v7;
    uint64_t v46 = v21;
    *(void *)&long long v49 = a1;
    *((void *)&v49 + 1) = a2;
    swift_bridgeObjectRetain_n();
    v23._countAndFlagsBits = 0x74654D7465737341;
    v23._object = (void *)0xED00006174616461;
    String.append(_:)(v23);
    long long v24 = v49;
    sub_100D2B1E4(v49, *((uint64_t *)&v49 + 1), 0, &v49);
    unint64_t v25 = *((void *)&v49 + 1);
    if (*((void *)&v49 + 1) >> 60 == 15)
    {
      sub_100D2A730(v24, *((uint64_t *)&v24 + 1), &v48);
      swift_bridgeObjectRelease();
      unint64_t v26 = *((void *)&v48 + 1);
      if (*((void *)&v48 + 1) >> 60 == 15)
      {
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v27 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        *(void *)&long long v49 = a1;
        *((void *)&v49 + 1) = a2;
        swift_bridgeObjectRetain();
        v29._countAndFlagsBits = 0x74654D7465737341;
        v29._object = (void *)0xED00006174616461;
        String.append(_:)(v29);
        long long v30 = v49;
        id v31 = v27;
        swift_bridgeObjectRelease();
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(_OWORD *)(inited + 32) = v30;
        uint64_t v32 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Ignoring an asset without a corresponding metadata field. Expected field that is missing: %@", 92, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
        swift_unknownObjectRelease();

        return 0;
      }
      uint64_t v33 = v48;
      uint64_t v44 = a1;
    }
    else
    {
      uint64_t v33 = v49;
      swift_bridgeObjectRelease();
      uint64_t v44 = a1;
      unint64_t v26 = v25;
    }
    type metadata accessor for PropertyListDecoder();
    swift_allocObject();
    PropertyListDecoder.init()();
    sub_100D3F084(&qword_10169A768, (void (*)(uint64_t))type metadata accessor for CRLAssetSyncMetadata);
    uint64_t v34 = v33;
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    uint64_t v35 = (uint64_t)v45;
    swift_release();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    swift_bridgeObjectRelease();
    sub_100D42FB4((uint64_t)v11, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    uint64_t v37 = v47;
    sub_100D42F4C((uint64_t)v19, v47, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    swift_bridgeObjectRetain();
    id v38 = [v43 fileURL];
    if (v38)
    {
      int64_t v39 = v38;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100514260(v34, v26);

      swift_unknownObjectRelease();
      sub_100D426E4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
      uint64_t v40 = type metadata accessor for URL();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v35, 0, 1, v40);
    }
    else
    {
      sub_100514260(v34, v26);
      swift_unknownObjectRelease();
      sub_100D426E4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
      uint64_t v41 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v35, 1, 1, v41);
    }
    uint64_t v42 = v44;
    type metadata accessor for CRLAssetSyncRemoteRecord();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v42;
    *(void *)(v21 + 24) = a2;
    sub_100D42FB4(v37, v21 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    sub_10051B3EC(v35, v21 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_downloadedFileURL, &qword_101672E90);
  }
  return v21;
}

uint64_t sub_100D2A730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X8>)
{
  uint64_t result = CKRecord.subscript.getter();
  if (!result)
  {
LABEL_7:
    long long v7 = xmmword_101190880;
    goto LABEL_8;
  }
  swift_unknownObjectRetain();
  sub_1005057FC((uint64_t *)&unk_101672F30);
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v10 = sub_100528BE4();
    *(void *)(inited + 32) = a1;
    *(void *)(inited + 40) = a2;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v10;
    *(void *)(inited + 64) = v10;
    *(void *)(inited + 72) = 1635017028;
    *(void *)(inited + 80) = 0xE400000000000000;
    swift_getObjectType();
    id v11 = v8;
    swift_bridgeObjectRetain();
    uint64_t v12 = _typeName(_:qualified:)();
    *(void *)(inited + 136) = &type metadata for String;
    *(void *)(inited + 144) = v10;
    *(void *)(inited + 112) = v12;
    *(void *)(inited + 120) = v13;
    uint64_t v14 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Attempted to return a value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 93, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_bridgeObjectRetain();
    _typeName(_:qualified:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t result = swift_unknownObjectRelease();
  long long v7 = v15;
LABEL_8:
  *a3 = v7;
  return result;
}

uint64_t sub_100D2A93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = CKRecord.subscript.getter();
  if (result)
  {
    swift_unknownObjectRetain();
    sub_1005057FC((uint64_t *)&unk_101672F30);
    if (swift_dynamicCast())
    {
      swift_unknownObjectRelease();
      return v17;
    }
    else
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v16 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v11 = sub_100528BE4();
      *(void *)(inited + 32) = a1;
      *(void *)(inited + 40) = a2;
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v11;
      *(void *)(inited + 64) = v11;
      *(void *)(inited + 72) = a4;
      *(void *)(inited + 80) = a5;
      swift_getObjectType();
      id v12 = v16;
      swift_bridgeObjectRetain();
      uint64_t v13 = _typeName(_:qualified:)();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v11;
      *(void *)(inited + 112) = v13;
      *(void *)(inited + 120) = v14;
      uint64_t v15 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Attempted to return a value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 93, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_bridgeObjectRetain();
      _typeName(_:qualified:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100D2AB4C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_10050BF48(0, a3);
  uint64_t result = CKRecord.subscript.getter();
  if (result)
  {
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (!result)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v6 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v8 = sub_100528BE4();
      *(void *)(inited + 64) = v8;
      *(void *)(inited + 32) = a1;
      *(void *)(inited + 40) = a2;
      id v9 = v6;
      swift_bridgeObjectRetain();
      uint64_t v10 = _typeName(_:qualified:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v8;
      *(void *)(inited + 72) = v10;
      *(void *)(inited + 80) = v11;
      swift_getObjectType();
      uint64_t v12 = _typeName(_:qualified:)();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v8;
      *(void *)(inited + 112) = v12;
      *(void *)(inited + 120) = v13;
      uint64_t v14 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Attempted to return a value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 93, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_bridgeObjectRetain();
      _typeName(_:qualified:)();
      _typeName(_:qualified:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100D2AD54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6472616F42 && a2 == 0xE500000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    return 1;
  }
  if (a1 == 0x74654D6472616F42 && a2 == 0xED00006174616461
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 2;
  }
  if (a1 == 0xD000000000000015 && a2 == 0x8000000101235C70
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 3;
  }
  if (a1 == 0x74696B64756F6C63 && a2 == 0xEE0065726168732ELL
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 7;
  }
  v5._countAndFlagsBits = 0x6574496472616F42;
  v5._object = (void *)0xEA00000000005F6DLL;
  if (String.hasPrefix(_:)(v5)) {
    return 0;
  }
  if (a1 == 0x425F63696C627550 && a2 == 0xEC0000006472616FLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 4;
  }
  v6._countAndFlagsBits = 0xD000000000000011;
  v6._object = (void *)0x8000000101284FE0;
  if (String.hasPrefix(_:)(v6)) {
    return 5;
  }
  uint64_t result = 6;
  if (a1 != 0xD00000000000001CLL || a2 != 0x8000000101235CC0)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      return 6;
    }
    else {
      return 8;
    }
  }
  return result;
}

uint64_t sub_100D2B010()
{
  id v6 = 0;
  id v1 = [self archivedDataWithRootObject:v0 requiringSecureCoding:1 error:&v6];
  id v2 = v6;
  if (v1)
  {
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v4 = v2;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v3;
}

CKRecordID sub_100D2B0F0()
{
  Class v1 = sub_100D3EC2C(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier);
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t v3 = qword_10169A5F0;
  id v2 = off_10169A5F8;
  swift_bridgeObjectRetain();
  uint64_t v4 = dispatch thunk of CustomStringConvertible.description.getter();
  id v6 = v5;
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = v3;
  v8._object = v2;
  return CKRecordID.init(recordName:zoneID:)(v8, (CKRecordZoneID)v1);
}

uint64_t sub_100D2B1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, long long *a4@<X8>)
{
  Swift::String v5 = v4;
  id v10 = [v5 encryptedValues];
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 objectForKeyedSubscript:v11];

  uint64_t result = swift_unknownObjectRelease();
  if (!v12)
  {
LABEL_9:
    long long v14 = xmmword_101190880;
    goto LABEL_10;
  }
  swift_unknownObjectRetain();
  sub_1005057FC((uint64_t *)&unk_101672F30);
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (a3)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v15 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v17 = sub_100528BE4();
      *(void *)(inited + 32) = a1;
      *(void *)(inited + 40) = a2;
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v17;
      *(void *)(inited + 64) = v17;
      *(void *)(inited + 72) = 1635017028;
      *(void *)(inited + 80) = 0xE400000000000000;
      swift_getObjectType();
      id v18 = v15;
      swift_bridgeObjectRetain();
      uint64_t v19 = _typeName(_:qualified:)();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v17;
      *(void *)(inited + 112) = v19;
      *(void *)(inited + 120) = v20;
      uint64_t v21 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Attempted to return an encrypted value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 104, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_bridgeObjectRetain();
      _typeName(_:qualified:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t result = swift_unknownObjectRelease();
    }
    goto LABEL_9;
  }
  uint64_t result = swift_unknownObjectRelease();
  long long v14 = v22;
LABEL_10:
  *a4 = v14;
  return result;
}

uint64_t sub_100D2B45C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = [v6 encryptedValues];
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 objectForKeyedSubscript:v13];

  swift_unknownObjectRelease();
  if (v14)
  {
    swift_unknownObjectRetain();
    sub_1005057FC((uint64_t *)&unk_101672F30);
    if (swift_dynamicCast())
    {
      swift_unknownObjectRelease();
      return v23;
    }
    if (a3)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v16 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v18 = sub_100528BE4();
      *(void *)(inited + 32) = a1;
      *(void *)(inited + 40) = a2;
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v18;
      *(void *)(inited + 64) = v18;
      *(void *)(inited + 72) = a5;
      *(void *)(inited + 80) = a6;
      swift_getObjectType();
      id v19 = v16;
      swift_bridgeObjectRetain();
      uint64_t v20 = _typeName(_:qualified:)();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v18;
      *(void *)(inited + 112) = v20;
      *(void *)(inited + 120) = v21;
      uint64_t v22 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Attempted to return an encrypted value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 104, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_bridgeObjectRetain();
      _typeName(_:qualified:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_100D2B6CC(uint64_t a1, uint64_t a2, char a3)
{
  sub_10050BF48(0, (unint64_t *)&unk_10169A7A0);
  id v7 = [v3 encryptedValues];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKeyedSubscript:v8];

  swift_unknownObjectRelease();
  if (v9)
  {
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (result) {
      return result;
    }
    if (a3)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      NSString v11 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v13 = sub_100528BE4();
      *(void *)(inited + 64) = v13;
      *(void *)(inited + 32) = a1;
      *(void *)(inited + 40) = a2;
      id v14 = v11;
      swift_bridgeObjectRetain();
      uint64_t v15 = _typeName(_:qualified:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v13;
      *(void *)(inited + 72) = v15;
      *(void *)(inited + 80) = v16;
      swift_getObjectType();
      uint64_t v17 = _typeName(_:qualified:)();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v13;
      *(void *)(inited + 112) = v17;
      *(void *)(inited + 120) = v18;
      uint64_t v19 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Attempted to return an encrypted value with unexpected type from CKRecord. Key %@, Expected %@, found %@", 104, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_bridgeObjectRetain();
      _typeName(_:qualified:)();
      _typeName(_:qualified:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

void sub_100D2B93C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v130 = a1;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  Swift::String v122 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v123 = *(void *)(v10 - 8);
  uint64_t v124 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v120 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  CKRecordID v121 = (char *)&v118 - v15;
  uint64_t v16 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v118 - v22;
  __chkstk_darwin(v24, v25);
  unint64_t v27 = (char *)&v118 - v26;
  uint64_t v28 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v129 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v29);
  id v31 = (char *)&v118 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  uint64_t v125 = (uint64_t)&v118 - v34;
  __chkstk_darwin(v35, v36);
  uint64_t v126 = (uint64_t)&v118 - v37;
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (char *)&v118 - v40;
  uint64_t v127 = a2;
  uint64_t v128 = a3;
  switch(sub_100D2AD54(a2, a3))
  {
    case 0u:
      uint64_t v119 = a4;
      id v42 = v130;
      id v43 = [v130 zoneID];
      sub_100D29C10((uint64_t)v23);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v23, 1, v28) == 1)
      {
        sub_100522F00((uint64_t)v23, &qword_101672C30);
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v44 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        id v46 = v44;
        id v47 = [v42 recordName];
        uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v50 = v49;

        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v51 = sub_100528BE4();
        *(void *)(inited + 32) = v48;
        *(void *)(inited + 40) = v50;
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v51;
        uint64_t v52 = v127;
        *(void *)(inited + 64) = v51;
        *(void *)(inited + 72) = v52;
        *(void *)(inited + 80) = v128;
        swift_bridgeObjectRetain();
        uint64_t v53 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v46, (uint64_t)&_mh_execute_header, v53, (uint64_t)"Cannot extract boardIdentifier from the recordID %{public}@. Record Type: %{public}@", 84, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        double v54 = (_OWORD *)v119;
        *(void *)(v119 + 32) = 0;
        *double v54 = 0u;
        v54[1] = 0u;
      }
      else
      {
        uint64_t v86 = (uint64_t)v23;
        uint64_t v87 = v125;
        sub_100D42FB4(v86, v125, type metadata accessor for CRLBoardIdentifier);
        id v88 = [v42 recordName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v89 = (uint64_t)v122;
        UUID.init(uuidString:)();
        swift_bridgeObjectRelease();
        uint64_t v91 = v123;
        uint64_t v90 = v124;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v89, 1, v124) != 1)
        {
          long long v110 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 32);
          uint64_t v111 = v87;
          unsigned int v112 = v121;
          v110(v121, v89, v90);
          unsigned int v113 = v120;
          (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v120, v112, v90);
          uint64_t v114 = v126;
          sub_100D42F4C(v111, v126, type metadata accessor for CRLBoardIdentifier);
          uint64_t v115 = type metadata accessor for CRLBoardItemSyncRemoteRecordIdentifier(0);
          uint64_t v116 = swift_allocObject();
          v110((char *)(v116 + OBJC_IVAR____TtC8Freeform38CRLBoardItemSyncRemoteRecordIdentifier_itemUUID), (uint64_t)v113, v90);
          sub_100D42FB4(v114, v116 + OBJC_IVAR____TtC8Freeform38CRLBoardItemSyncRemoteRecordIdentifier_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
          uint64_t v117 = (uint64_t *)v119;
          *(void *)(v119 + 24) = v115;
          v117[4] = (uint64_t)&off_101532118;
          *uint64_t v117 = v116;
          (*(void (**)(char *, uint64_t))(v91 + 8))(v112, v90);
          uint64_t v106 = v125;
          goto LABEL_26;
        }
        sub_100522F00(v89, (uint64_t *)&unk_101674520);
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v92 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v93 = swift_initStackObject();
        *(_OWORD *)(v93 + 16) = xmmword_10117D8C0;
        id v94 = v92;
        id v95 = [v42 recordName];
        uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v98 = v97;

        *(void *)(v93 + 56) = &type metadata for String;
        unint64_t v99 = sub_100528BE4();
        *(void *)(v93 + 32) = v96;
        *(void *)(v93 + 40) = v98;
        *(void *)(v93 + 96) = &type metadata for String;
        *(void *)(v93 + 104) = v99;
        uint64_t v100 = v127;
        *(void *)(v93 + 64) = v99;
        *(void *)(v93 + 72) = v100;
        *(void *)(v93 + 80) = v128;
        swift_bridgeObjectRetain();
        uint64_t v101 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v94, (uint64_t)&_mh_execute_header, v101, (uint64_t)"Cannot extract itemUUID from the recordID %{public}@. Record Type: %{public}@", 77, 2, v93);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_100D426E4(v87, type metadata accessor for CRLBoardIdentifier);
        uint64_t v102 = v119;
        *(_OWORD *)uint64_t v119 = 0u;
        *(_OWORD *)(v102 + 16) = 0u;
        *(void *)(v102 + 32) = 0;
      }
      break;
    case 1u:
      uint64_t v55 = a4;
      id v56 = v130;
      id v57 = [v130 zoneID];
      sub_100D29C10((uint64_t)v27);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v27, 1, v28) != 1)
      {
        sub_100D42FB4((uint64_t)v27, (uint64_t)v41, type metadata accessor for CRLBoardIdentifier);
        uint64_t v103 = v126;
        sub_100D42F4C((uint64_t)v41, v126, type metadata accessor for CRLBoardIdentifier);
        uint64_t v104 = type metadata accessor for CRLBoardSyncRemoteRecordIdentifier(0);
        uint64_t v105 = swift_allocObject();
        sub_100D42FB4(v103, v105 + OBJC_IVAR____TtC8Freeform34CRLBoardSyncRemoteRecordIdentifier_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
        *(void *)(v55 + 24) = v104;
        *(void *)(v55 + 32) = &off_101537420;
        *(void *)uint64_t v55 = v105;
        uint64_t v106 = (uint64_t)v41;
        goto LABEL_26;
      }
      sub_100522F00((uint64_t)v27, &qword_101672C30);
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v58 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v59 = swift_initStackObject();
      *(_OWORD *)(v59 + 16) = xmmword_10117D8C0;
      id v60 = v58;
      id v61 = [v56 recordName];
      uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = v63;

      *(void *)(v59 + 56) = &type metadata for String;
      unint64_t v65 = sub_100528BE4();
      *(void *)(v59 + 32) = v62;
      *(void *)(v59 + 40) = v64;
      *(void *)(v59 + 96) = &type metadata for String;
      *(void *)(v59 + 104) = v65;
      uint64_t v66 = v127;
      *(void *)(v59 + 64) = v65;
      *(void *)(v59 + 72) = v66;
      *(void *)(v59 + 80) = v128;
      swift_bridgeObjectRetain();
      uint64_t v67 = static os_log_type_t.error.getter();
      uint64_t v68 = "Cannot extract boardIdentifier from the recordID %{public}@. Record Type: %{public}@";
      uint64_t v69 = (uint64_t)v60;
      uint64_t v70 = 84;
      goto LABEL_18;
    case 2u:
    case 3u:
      *(void *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      break;
    case 7u:
      uint64_t v55 = a4;
      id v77 = v130;
      id v78 = [v130 zoneID];
      sub_100D29C10((uint64_t)v19);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v19, 1, v28) == 1)
      {
        sub_100522F00((uint64_t)v19, &qword_101672C30);
        if (qword_10166FB88 != -1) {
          swift_once();
        }
        swift_beginAccess();
        CGRect v79 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v59 = swift_initStackObject();
        *(_OWORD *)(v59 + 16) = xmmword_10117D8C0;
        id v60 = v79;
        id v80 = [v77 recordName];
        uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v83 = v82;

        *(void *)(v59 + 56) = &type metadata for String;
        unint64_t v84 = sub_100528BE4();
        *(void *)(v59 + 32) = v81;
        *(void *)(v59 + 40) = v83;
        *(void *)(v59 + 96) = &type metadata for String;
        *(void *)(v59 + 104) = v84;
        uint64_t v85 = v127;
        *(void *)(v59 + 64) = v84;
        *(void *)(v59 + 72) = v85;
        *(void *)(v59 + 80) = v128;
        swift_bridgeObjectRetain();
        uint64_t v67 = static os_log_type_t.error.getter();
        uint64_t v68 = "Cannot extract board identifier from the recordID %{public}@. Record Type: %{public}@";
        uint64_t v69 = (uint64_t)v60;
        uint64_t v70 = 85;
LABEL_18:
        sub_100BAC898(v69, (uint64_t)&_mh_execute_header, v67, (uint64_t)v68, v70, 2, v59);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        *(void *)(v55 + 32) = 0;
        *(_OWORD *)uint64_t v55 = 0u;
        *(_OWORD *)(v55 + 16) = 0u;
      }
      else
      {
        sub_100D42FB4((uint64_t)v19, (uint64_t)v31, type metadata accessor for CRLBoardIdentifier);
        uint64_t v107 = v126;
        sub_100D42F4C((uint64_t)v31, v126, type metadata accessor for CRLBoardIdentifier);
        uint64_t v108 = type metadata accessor for CRLBoardShareSyncRemoteRecordIdentifier(0);
        uint64_t v109 = swift_allocObject();
        sub_100D42FB4(v107, v109 + OBJC_IVAR____TtC8Freeform39CRLBoardShareSyncRemoteRecordIdentifier_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
        *(void *)(v55 + 24) = v108;
        *(void *)(v55 + 32) = &off_101532680;
        *(void *)uint64_t v55 = v109;
        uint64_t v106 = (uint64_t)v31;
LABEL_26:
        sub_100D426E4(v106, type metadata accessor for CRLBoardIdentifier);
      }
      break;
    default:
      uint64_t v71 = a4;
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      CGSize v72 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v73 = swift_initStackObject();
      *(_OWORD *)(v73 + 16) = xmmword_10117E810;
      *(void *)(v73 + 56) = &type metadata for String;
      *(void *)(v73 + 64) = sub_100528BE4();
      uint64_t v74 = v128;
      *(void *)(v73 + 32) = v127;
      *(void *)(v73 + 40) = v74;
      swift_bridgeObjectRetain();
      id v75 = v72;
      uint64_t v76 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v75, (uint64_t)&_mh_execute_header, v76, (uint64_t)"CRLBoardSyncLogicProvider received an unknown remote record type for creating identifier. Record Type: %{public}@", 113, 2, v73);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      *(void *)(v71 + 32) = 0;
      *(_OWORD *)uint64_t v71 = 0u;
      *(_OWORD *)(v71 + 16) = 0u;
      break;
  }
}

uint64_t sub_100D2C69C()
{
  uint64_t v0 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLBoardItemSyncRemoteRecord(0);
  uint64_t v4 = swift_dynamicCastClass();
  if (!v4)
  {
    type metadata accessor for CRLBoardSyncRemoteRecord(0);
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      uint64_t v9 = v8;
      type metadata accessor for CRLBoardSyncLocalChangeRecord(0);
      uint64_t v10 = swift_dynamicCastClass();
      swift_unknownObjectRetain();
      if (v10)
      {
        swift_unknownObjectRetain();
        uint64_t v7 = sub_100D2DD2C(v9, v10);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return v7;
      }
    }
    else
    {
      type metadata accessor for CRLBoardShareSyncRemoteRecord(0);
      uint64_t v11 = swift_dynamicCastClass();
      if (v11)
      {
        uint64_t v12 = v11;
        type metadata accessor for CRLBoardShareSyncLocalChangeRecord(0);
        if (swift_dynamicCastClass())
        {
          sub_100D42F4C(v12 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier, (uint64_t)v3, type metadata accessor for CRLBoardIdentifier);
          uint64_t v13 = *(void **)(v12 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare);
          uint64_t v7 = swift_allocObject();
          *(unsigned char *)(v7 + OBJC_IVAR____TtC8Freeform34CRLBoardShareSyncLocalChangeRecord_unsyncedChanges) = 0;
          sub_100D42FB4((uint64_t)v3, v7 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v7 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare) = v13;
          id v14 = v13;
          return v7;
        }
        swift_unknownObjectRetain();
      }
      else
      {
        type metadata accessor for CRLUserBoardMetadataSyncRemoteRecord(0);
        uint64_t v15 = swift_dynamicCastClass();
        if (v15)
        {
          uint64_t v16 = v15;
          type metadata accessor for CRLUserBoardMetadataSyncLocalChangeRecord(0);
          uint64_t v17 = swift_dynamicCastClass();
          swift_unknownObjectRetain();
          if (v17)
          {
            swift_unknownObjectRetain();
            uint64_t v7 = sub_100D2E77C(v16, v17);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            return v7;
          }
        }
        else
        {
          type metadata accessor for CRLFreehandDrawingBucketSyncRemoteRecord(0);
          uint64_t v18 = swift_dynamicCastClass();
          if (!v18)
          {
            if (qword_10166FB88 != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v22 = (id)static OS_os_log.dataSync;
            uint64_t v23 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Unable to resolve conflict for unhandled record type.", 53, 2, (uint64_t)_swiftEmptyArrayStorage);

            sub_100D2CAA0();
            return 0;
          }
          uint64_t v19 = v18;
          type metadata accessor for CRLFreehandDrawingBucketSyncLocalChangeRecord(0);
          uint64_t v20 = swift_dynamicCastClass();
          swift_unknownObjectRetain();
          if (v20)
          {
            swift_unknownObjectRetain();
            uint64_t v7 = sub_100D2EBF8(v19, v20);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            return v7;
          }
        }
      }
    }
LABEL_17:
    sub_100D2CAA0();
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v5 = v4;
  type metadata accessor for CRLBoardItemSyncLocalChangeRecord(0);
  uint64_t v6 = swift_dynamicCastClass();
  swift_unknownObjectRetain();
  if (!v6) {
    goto LABEL_17;
  }
  swift_unknownObjectRetain();
  uint64_t v7 = sub_100D2D8AC(v5, v6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_100D2CAA0()
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getObjectType();
  id v2 = v0;
  uint64_t v3 = _typeName(_:qualified:)();
  uint64_t v5 = v4;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v6 = sub_100528BE4();
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  swift_getObjectType();
  uint64_t v7 = _typeName(_:qualified:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v9, (uint64_t)"CRLBoardSyncLogicProvider received an unknown remote record object to resolve a conflict. Remote Record: %{public}@, Local Record: %{public}@", 141, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  _typeName(_:qualified:)();
  _typeName(_:qualified:)();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100D2CC4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  id v8 = [a3 recordID];
  uint64_t ObjectType = swift_getObjectType();
  v19[0] = a1;
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 8))(ObjectType);
  char v11 = static NSObject.== infix(_:_:)();

  if (v11)
  {
    uint64_t v17 = a1;
    uint64_t v18 = a2;
    swift_unknownObjectRetain();
    sub_1005057FC((uint64_t *)&unk_10167BE80);
    sub_1005057FC(&qword_10169A7C8);
    if (swift_dynamicCast())
    {
      sub_10053974C(v15, (uint64_t)v19);
      uint64_t v12 = v20;
      uint64_t v13 = v21;
      sub_10050F848(v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 16))(a3, *(void *)(v4 + 16), v12, v13);
      return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v19);
    }
    uint64_t v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_100522F00((uint64_t)v15, &qword_10169A7D0);
  }
  return sub_100D2CDDC(a1, a2, a3);
}

uint64_t sub_100D2CDDC(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getObjectType();
  id v6 = v4;
  uint64_t v7 = _typeName(_:qualified:)();
  uint64_t v9 = v8;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 40) = v9;
  v11._countAndFlagsBits = CKRecord.recordType.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0x203A444920;
  v12._object = (void *)0xE500000000000000;
  String.append(_:)(v12);
  id v13 = [a3 recordID];
  id v14 = [v13 recordName];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 72) = 0x203A65707954;
  *(void *)(inited + 80) = 0xE600000000000000;
  uint64_t v19 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v19, (uint64_t)"CRLBoardSyncLogicProvider received an unknown local record or cloud record to apply changes. Local Record: %{public}@, Cloud Record: %{public}@", 143, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  _typeName(_:qualified:)();
  v20._countAndFlagsBits = CKRecord.recordType.getter();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0x203A444920;
  v21._object = (void *)0xE500000000000000;
  String.append(_:)(v21);
  id v22 = [a3 recordID:0x203A65707954, 0xE600000000000000];
  id v23 = [v22 recordName];

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  v27._countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100D2D0CC()
{
  uint64_t v0 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  sub_10050BF48(0, (unint64_t *)&qword_101674210);
  v9._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v9._object = v10;
  v11._countAndFlagsBits = 0x74654D6472616F42;
  v11._object = (void *)0xED00006174616461;
  Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v11, v9).super.isa;
  char v13 = static NSObject.== infix(_:_:)();

  if (v13) {
    return 1;
  }
  sub_100D29C10((uint64_t)v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, &qword_101672C30);
  }
  else
  {
    uint64_t v15 = sub_100D42FB4((uint64_t)v3, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    __chkstk_darwin(v15, v16);
    *(void *)&v19[-16] = v17;
    *(void *)&v19[-8] = v8;
    OS_dispatch_queue.sync<A>(execute:)();
    char v18 = v19[112];
    sub_100D426E4((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
    if (v18) {
      return 1;
    }
  }
  return 0;
}

Swift::Int sub_100D2D4AC(uint64_t a1)
{
  sub_1005057FC(&qword_101677400);
  OS_dispatch_queue.sync<A>(execute:)();
  unint64_t v2 = sub_100D2977C(v5);
  swift_bridgeObjectRelease();
  Swift::Int v3 = sub_100CDE120(v2);
  swift_bridgeObjectRelease();
  return sub_100F25B70(a1, v3);
}

uint64_t sub_100D2D698(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  swift_unknownObjectRetain();
  sub_1005057FC((uint64_t *)&unk_10167BE80);
  sub_1005057FC(&qword_10169A7C8);
  if (swift_dynamicCast())
  {
    sub_10053974C(v14, (uint64_t)v18);
    uint64_t v3 = v19;
    uint64_t v4 = v20;
    sub_10050F848(v18, v19);
    uint64_t v5 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v4 + 8))(*(void *)(v2 + 16), v3, v4);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v18);
  }
  else
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_100522F00((uint64_t)v14, &qword_10169A7D0);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v6 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getObjectType();
    id v8 = v6;
    uint64_t v9 = _typeName(_:qualified:)();
    uint64_t v11 = v10;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v9;
    *(void *)(inited + 40) = v11;
    uint64_t v12 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v12, (uint64_t)"CRLBoardSyncLogicProvider cannot create a cloud record from an unknown local record. Local Record: %{public}@", 109, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    _typeName(_:qualified:)();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

uint64_t sub_100D2D8AC(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v10 - 8, v11);
  char v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v18 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  swift_retain();
  uint64_t v19 = sub_100CE155C(a1);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v50 = v9;
    uint64_t v21 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges) & 0x10;
    if (v21) {
      uint64_t v22 = a2;
    }
    else {
      uint64_t v22 = a1;
    }
    int v49 = *(unsigned __int8 *)(v22 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_tombstoned);
    if (v18)
    {
      swift_retain();
      uint64_t v23 = sub_100C58720(v20);
      id v47 = v3;
      uint64_t v24 = v23;
      (*(void (**)(void *))(*v20 + 432))(v18);
      (*(void (**)(void *))(*v20 + 424))(v18);
      sub_10068307C(v18[3], v18[4], v18[5], v18[2]);
      swift_release();
      uint64_t v48 = v24 | v21;
      id v3 = v47;
    }
    else
    {
      uint64_t v48 = v21;
    }
    uint64_t v28 = (void *)*((void *)v3 + 2);
    uint64_t v29 = *(uint64_t (**)(void))(*v20 + 256);
    id v47 = v28;
    uint64_t v30 = v29();
    uint64_t v31 = v20[4];
    uint64_t v45 = v20[5];
    uint64_t v46 = v31;
    uint64_t v32 = v20[2];
    uint64_t v43 = v20[3];
    uint64_t v44 = v32;
    uint64_t v33 = (*(uint64_t (**)(uint64_t))(*v20 + 408))(v30);
    if (v34) {
      uint64_t v35 = v33 + 2;
    }
    else {
      uint64_t v35 = v33;
    }
    (*(void (**)(void))(*v20 + 264))();
    uint64_t v36 = (uint64_t)v50;
    sub_100D42F4C(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier, (uint64_t)v50, type metadata accessor for CRLBoardIdentifier);
    uint64_t v37 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
    unint64_t v38 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8);
    uint64_t v39 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedAssetUUIDs);
    type metadata accessor for CRLBoardItemSyncLocalChangeRecord(0);
    uint64_t v40 = swift_allocObject();
    swift_retain();
    sub_1005FA2A0(v37, v38);
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_100CDB044((uint64_t)v47, (uint64_t)v17, v43, v46, v45, v44, v35, (uint64_t)v13, v36, v49, (uint64_t)v20, v48, v37, v38, v39, v40);
    swift_release();
    swift_release_n();
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v25 = (id)static OS_os_log.dataSync;
    uint64_t v26 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Failed to convert CRLBoardItemSyncRemoteRecord to item data", 59, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_release();

    return 0;
  }
  return v27;
}

uint64_t sub_100D2DD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v71 - v10;
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v83 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_101699628);
  __chkstk_darwin(v15 - 8, v16);
  char v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v71 - v24;
  __chkstk_darwin(v26, v27);
  uint64_t v30 = (char *)&v71 - v29;
  uint64_t v84 = a2;
  uint64_t v31 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData);
  uint64_t v32 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData);
  unint64_t v33 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData + 8);
  if (v33 >> 60 == 15)
  {
    swift_retain();
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v35 = (id)static OS_os_log.dataSync;
    uint64_t v36 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Failed to convert CRLBoardSyncRemoteRecord to item data", 55, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_release();
    return 0;
  }
  uint64_t v78 = v28;
  id v80 = v11;
  CGRect v79 = v7;
  uint64_t v34 = *v32;
  sub_1005FA2A0(*v32, v33);
  sub_1005FA2A0(v34, v33);
  sub_100D3F084((unint64_t *)&unk_10169A0D0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  uint64_t v82 = v31;
  swift_retain();
  CRDT.init(serializedData:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  sub_100D42FB4((uint64_t)v18, (uint64_t)v30, type metadata accessor for CRLBoardCRDTData);
  long long v77 = *(_OWORD *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
  uint64_t v75 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 16);
  sub_100D42F4C((uint64_t)v30, (uint64_t)v25, type metadata accessor for CRLBoardCRDTData);
  uint64_t v76 = a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier;
  uint64_t v39 = v83;
  sub_100D42F4C(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier, v83, type metadata accessor for CRLBoardIdentifier);
  uint64_t v40 = (uint64_t *)(v39 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v41 = *v40;
  uint64_t v42 = v40[1];
  swift_bridgeObjectRetain();
  sub_100D426E4(v39, type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for CRLBoardData(0);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 7;
  *(_OWORD *)(v43 + 24) = v77;
  *(void *)(v43 + 40) = v75;
  sub_100D42FB4((uint64_t)v25, v43 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  sub_100514260(v34, v33);
  uint64_t v44 = (void *)(v43 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  void *v44 = v41;
  v44[1] = v42;
  sub_100D426E4((uint64_t)v30, type metadata accessor for CRLBoardCRDTData);
  int v45 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned);
  uint64_t v46 = OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges;
  uint64_t v47 = *(void *)(v84 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges);
  if ((v47 & 4) == 0)
  {
    if ((v47 & 0x10) == 0)
    {
      uint64_t v48 = 0;
      if (!*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted)) {
        goto LABEL_23;
      }
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted))
  {
    if ((v47 & 0x10) == 0)
    {
      uint64_t v48 = 0;
      goto LABEL_20;
    }
LABEL_15:
    uint64_t v48 = 16;
    goto LABEL_19;
  }
  int v45 = *(unsigned __int8 *)(v84 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned);
  if ((v47 & 0x10) != 0)
  {
    uint64_t v48 = 20;
LABEL_19:
    if ((*(unsigned char *)(v84 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted) & 1) == 0)
    {
LABEL_23:
      LODWORD(v75) = v45;
      int v74 = 0;
      goto LABEL_24;
    }
LABEL_20:
    int v74 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted);
    *(void *)&long long v77 = v48;
    LODWORD(v75) = v45;
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    int v49 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    id v51 = v49;
    Class v52 = sub_100D3EC2C(v76);
    sub_10050BF48(0, &qword_10167BED0);
    v53._countAndFlagsBits = UUID.uuidString.getter();
    Class isa = CKRecordID.init(recordName:zoneID:)(v53, (CKRecordZoneID)v52).super.isa;
    id v55 = [(objc_class *)isa recordName];

    uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v58 = v57;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v56;
    *(void *)(inited + 40) = v58;
    *(void *)(inited + 96) = &type metadata for Bool;
    *(void *)(inited + 104) = &protocol witness table for Bool;
    *(unsigned char *)(inited + 72) = v74;
    char v59 = *(unsigned char *)(v84 + v46);
    *(void *)(inited + 136) = &type metadata for Bool;
    *(void *)(inited + 144) = &protocol witness table for Bool;
    *(unsigned char *)(inited + 112) = (v59 & 0x10) != 0;
    uint64_t v60 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v51, (uint64_t)&_mh_execute_header, v60, (uint64_t)"Setting hideFromRecentlyDeleted to true after resolving board record conflict for recordName: %{public}%. hideFromRecentlyDeleted state for remote record:%d local record:%d ", 173, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    int v74 = 1;
    uint64_t v48 = v77;
    goto LABEL_24;
  }
  LODWORD(v75) = *(unsigned __int8 *)(v84 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned);
  int v74 = 0;
  uint64_t v48 = 4;
LABEL_24:
  if (v82)
  {
    uint64_t v61 = swift_retain();
    uint64_t v62 = sub_100CB31DC(v61);
    swift_release();
    v48 |= v62;
  }
  *(void *)&long long v77 = v48;
  uint64_t v63 = *(void **)(v81 + 16);
  sub_100D42F4C(v76, v83, type metadata accessor for CRLBoardIdentifier);
  uint64_t v81 = *(void *)(v43 + 24);
  uint64_t v76 = *(void *)(v43 + 32);
  uint64_t v73 = *(void *)(v43 + 40);
  uint64_t v64 = v43 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D42F4C(v64, (uint64_t)v25, type metadata accessor for CRLBoardCRDTData);
  id v72 = v63;
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D426E4((uint64_t)v25, type metadata accessor for CRLBoardCRDTData);
  uint64_t v65 = v78;
  sub_100D42F4C(v64, v78, type metadata accessor for CRLBoardCRDTData);
  type metadata accessor for CRLBoardRootContainerAffinityCRDTData(0);
  uint64_t v66 = (uint64_t)v79;
  CRRegister.wrappedValue.getter();
  sub_100D426E4(v65, type metadata accessor for CRLBoardCRDTData);
  uint64_t v67 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  unint64_t v68 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8);
  uint64_t v69 = *(void *)(v84 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedAssetUUIDs);
  type metadata accessor for CRLBoardSyncLocalChangeRecord(0);
  uint64_t v70 = swift_allocObject();
  swift_retain();
  sub_1005FA2A0(v67, v68);
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_100CD8B04((uint64_t)v72, v83, v81, v76, v73, (uint64_t)v80, v66, v75, v74, v43, v77, v67, v68, v69, v70);
  swift_release();
  swift_release_n();
  return v37;
}

uint64_t sub_100D2E77C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData);
  swift_retain();
  uint64_t v19 = sub_100D40944(a1);
  if (v19)
  {
    uint64_t v20 = v19;
    if (v18)
    {
      uint64_t v21 = v18 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData;
      swift_beginAccess();
      sub_100D42F4C(v21, (uint64_t)v17, type metadata accessor for CRLUserBoardMetadataCRDTData);
      uint64_t v22 = v20 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData;
      swift_beginAccess();
      sub_100D42F4C(v22, (uint64_t)v13, type metadata accessor for CRLUserBoardMetadataCRDTData);
      sub_100D3F084((unint64_t *)&qword_1016966B8, (void (*)(uint64_t))type metadata accessor for CRLUserBoardMetadataCRDTData);
      swift_retain();
      char v23 = CRStruct_5.hasDelta(from:)();
      sub_100D426E4((uint64_t)v13, type metadata accessor for CRLUserBoardMetadataCRDTData);
      sub_100D426E4((uint64_t)v17, type metadata accessor for CRLUserBoardMetadataCRDTData);
      uint64_t v24 = 2;
      if ((v23 & 1) == 0) {
        uint64_t v24 = 0;
      }
      if (*(void *)(v18 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) != *(void *)(v20 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity)) {
        v24 |= 4uLL;
      }
      uint64_t v36 = v24;
      sub_100BC82EC(v18);
      swift_release();
    }
    else
    {
      uint64_t v36 = 0;
    }
    uint64_t v28 = *(void **)(v3 + 16);
    sub_100D42F4C(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData);
    unint64_t v30 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8);
    uint64_t v31 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity);
    uint64_t v38 = type metadata accessor for CRLBoardDataStore(0);
    uint64_t v39 = &off_1015282E8;
    *(void *)&long long v37 = v28;
    type metadata accessor for CRLUserBoardMetadataSyncLocalChangeRecord(0);
    uint64_t v27 = swift_allocObject();
    uint64_t v32 = OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData;
    *(void *)(v27 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData) = 0;
    sub_10053974C(&v37, v27 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext);
    *(void *)(v27 + v32) = v20;
    id v33 = v28;
    swift_retain();
    sub_1005FA2A0(v29, v30);
    swift_retain();
    swift_release();
    *(void *)(v27 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_unsyncedChanges) = v36;
    swift_release();
    sub_100D42FB4((uint64_t)v9, v27 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
    swift_release();
    swift_release();

    uint64_t v34 = (uint64_t *)(v27 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData);
    uint64_t *v34 = v29;
    v34[1] = v30;
    *(void *)(v27 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity) = v31;
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v25 = (id)static OS_os_log.dataSync;
    uint64_t v26 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Failed to convert CRLBoardSyncRemoteRecord to item data", 55, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_release();

    return 0;
  }
  return v27;
}

uint64_t sub_100D2EBF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_1005057FC((uint64_t *)&unk_1016A8B60);
  __chkstk_darwin(v8, v9);
  unint64_t v169 = (unint64_t)v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10169A770);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)v139 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v139 - v17;
  uint64_t v19 = sub_1005057FC(&qword_101699938);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  char v23 = (char *)v139 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005057FC(&qword_10169A1D0);
  __chkstk_darwin(v24, v25);
  __chkstk_darwin(v26, v27);
  __chkstk_darwin(v29, (char *)v139 - v28);
  __chkstk_darwin(v30, v31);
  __chkstk_darwin(v32, v33);
  uint64_t v41 = (char *)v139 - v40;
  uint64_t v42 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 40))
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v43 = (id)static OS_os_log.dataSync;
    uint64_t v44 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v44, (uint64_t)"_resolveFreehandDrawingBucketRecordConflict() received a partial record, which is unexpected in a conflict", 106, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  uint64_t v154 = v36;
  uint64_t v155 = v18;
  uint64_t v149 = v35;
  uint64_t v151 = v14;
  uint64_t v165 = v39;
  uint64_t v150 = v38;
  uint64_t v166 = a1;
  CKRecordID v148 = v7;
  id v152 = v37;
  uint64_t v167 = v34;
  uint64_t v157 = v23;
  uint64_t v158 = v19;
  uint64_t v156 = v20;
  uint64_t v46 = *v42;
  uint64_t v45 = v42[1];
  uint64_t v48 = v42[2];
  uint64_t v47 = v42[3];
  uint64_t v49 = v42[4];
  id v159 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
  uint64_t v50 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData);
  unint64_t v51 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData + 8);
  uint64_t v161 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
  uint64_t v160 = *(void *)(a2
                   + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                   + 8);
  uint64_t v163 = *(id **)(a2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions + 16);
  Class v52 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions + 32);
  int64_t v162 = *(void **)(a2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                    + 24);
  id v164 = v52;
  sub_100510D4C(v50, v51);
  uint64_t v53 = sub_100523288(&qword_10169A210, (uint64_t *)&unk_1016A8B60);
  Capsule<>.init(serializedData:allowedAppFormats:)();
  v139[2] = v8;
  uint64_t v142 = v49;
  uint64_t v143 = v47;
  uint64_t v144 = v48;
  uint64_t v145 = v45;
  uint64_t v146 = v46;
  uint64_t v147 = v53;
  uint64_t v153 = 0;
  uint64_t v63 = (void *)sub_1005057FC((uint64_t *)&unk_1016A8B70);
  uint64_t v64 = (void *)swift_allocObject();
  *((unsigned char *)v64 + *(void *)(*v64 + 136)) = 0;
  v64[2] = v159;
  uint64_t v65 = (uint64_t)v64 + *(void *)(*v64 + 120);
  uint64_t v66 = v165;
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v165 + 32);
  uint64_t v141 = v165 + 32;
  uint64_t v140 = v67;
  v67((char *)v65, (uint64_t)v41, v167);
  *((unsigned char *)v64 + *(void *)(*v64 + 136)) = 0;
  uint64_t v68 = *(void *)(*v64 + 128);
  id v159 = v64;
  uint64_t v69 = (void *)((char *)v64 + v68);
  uint64_t v70 = v160;
  *uint64_t v69 = v161;
  v69[1] = v70;
  uint64_t v71 = v162;
  v69[2] = v163;
  v69[3] = v71;
  uint64_t v72 = v166;
  uint64_t v73 = *(void **)(v166 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_ckMergeableRecordValue);
  int64_t v162 = v69;
  v69[4] = v164;
  unint64_t v74 = *(void *)(a2
                  + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData
                  + 8);
  uint64_t v75 = a2;
  v139[1] = v63;
  if (v74 >> 60 == 15)
  {
    uint64_t v161 = v65;
    uint64_t v160 = a2;
    id v164 = v73;
    uint64_t v76 = v167;
  }
  else
  {
    uint64_t v95 = *(void *)(a2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData);
    sub_10050BF48(0, &qword_101693260);
    sub_10050BF48(0, (unint64_t *)&unk_10169A7A0);
    id v96 = v73;
    sub_1005FA2A0(v95, v74);
    uint64_t v97 = v153;
    uint64_t v98 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
    uint64_t v153 = v97;
    if (v97)
    {

      sub_100514260(v95, v74);
      uint64_t v99 = (uint64_t)v159;
      swift_setDeallocating();
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v99 + *(void *)(*(void *)v99 + 120), v167);
      swift_deallocClassInstance();

      goto LABEL_6;
    }
    uint64_t v103 = v98;
    uint64_t v161 = v65;
    uint64_t v160 = v75;
    uint64_t v76 = v167;
    if (v98)
    {
      *(void *)&v170[0] = 0;
      unsigned __int8 v104 = [v98 mergeRecordValue:v96 error:v170];

      if ((v104 & 1) == 0)
      {
        id v122 = *(id *)&v170[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        sub_100514260(v95, v74);

        uint64_t v123 = (uint64_t)v159;
        swift_setDeallocating();
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v123 + *(void *)(*(void *)v123 + 120), v76);
        swift_deallocClassInstance();
        goto LABEL_6;
      }
      id v105 = *(id *)&v170[0];

      sub_100514260(v95, v74);
      id v164 = v103;
    }
    else
    {

      sub_100514260(v95, v74);
      id v164 = v96;
    }
  }
  v139[0] = v168[2];
  long long v77 = *(void **)((char *)v139[0] + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
  unint64_t v78 = *(void *)(v72 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
  *(void *)&v170[0] = v78;
  unsigned int v168 = v77;
  dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v163 = v79;
  type metadata accessor for UUID();
  sub_1005057FC(&qword_10169A220);
  sub_100D3F084((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_100523288(&qword_1016973B0, &qword_10169A220);
  sub_100523288((unint64_t *)&unk_10169A7B0, &qword_10169A220);
  CRDictionary.init()();
  uint64_t v80 = v154;
  Capsule<>.init(_:id:)();
  uint64_t v81 = (void *)swift_allocObject();
  *((unsigned char *)v81 + *(void *)(*v81 + 136)) = 0;
  unint64_t v169 = v78;
  v81[2] = v78;
  uint64_t v82 = (char *)v81 + *(void *)(*v81 + 120);
  v140(v82, v80, v76);
  *((unsigned char *)v81 + *(void *)(*v81 + 136)) = 0;
  uint64_t v83 = (void *)((char *)v81 + *(void *)(*v81 + 128));
  uint64_t v84 = v145;
  *uint64_t v83 = v146;
  v83[1] = v84;
  uint64_t v85 = v143;
  v83[2] = v144;
  v83[3] = v85;
  v83[4] = v142;
  swift_beginAccess();
  uint64_t v86 = v76;
  uint64_t v87 = v66;
  uint64_t v88 = (uint64_t)v155;
  uint64_t v163 = *(id **)(v66 + 16);
  ((void (*)(char *, char *, uint64_t))v163)(v155, v82, v86);
  swift_setDeallocating();
  uint64_t v89 = *(id **)(v66 + 8);
  ((void (*)(char *, uint64_t))v89)((char *)v81 + *(void *)(*v81 + 120), v86);
  swift_deallocClassInstance();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v88, 0, 1, v86);
  sub_100CE9068();
  uint64_t v90 = v168;
  uint64_t v91 = v157;
  CRCKMergeable.init(crdt:context:)();
  sub_100523288((unint64_t *)&unk_10169A790, &qword_101699938);
  id v92 = v164;
  uint64_t v93 = v158;
  uint64_t v94 = v153;
  CKMergeable.merge(_:)();
  if (v94)
  {
    (*(void (**)(char *, uint64_t))(v156 + 8))(v91, v93);

    swift_release();
LABEL_6:
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    double v54 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getErrorValue();
    id v56 = v54;
    uint64_t v57 = Error.localizedDescription.getter();
    uint64_t v59 = v58;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v57;
    *(void *)(inited + 40) = v59;
    uint64_t v60 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v56, (uint64_t)&_mh_execute_header, v60, (uint64_t)"Failed to resolve freehand conflict with error - %@", 51, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_errorRelease();
    return 0;
  }
  unsigned int v168 = v89;
  id v164 = v92;
  uint64_t v153 = 0;
  uint64_t v100 = (uint64_t)v151;
  CRCKMergeable.crdt.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v100, 1, v86) == 1)
  {
    sub_100522F00(v100, (uint64_t *)&unk_10169A770);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v101 = (id)static OS_os_log.dataSync;
    uint64_t v102 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v101, (uint64_t)&_mh_execute_header, v102, (uint64_t)"remoteCKMergeable.crdt is nil, something went wrong.", 52, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_release();
    (*(void (**)(char *, uint64_t))(v156 + 8))(v91, v93);
    return 0;
  }
  uint64_t v106 = v152;
  uint64_t v107 = v140;
  v140(v152, v100, v86);
  uint64_t v108 = v149;
  uint64_t v109 = v163;
  ((void (*)(uint64_t, char *, uint64_t))v163)(v149, v106, v86);
  long long v110 = (void *)swift_allocObject();
  *((unsigned char *)v110 + *(void *)(*v110 + 136)) = 0;
  v110[2] = v169;
  v107((char *)v110 + *(void *)(*v110 + 120), v108, v86);
  *((unsigned char *)v110 + *(void *)(*v110 + 136)) = 0;
  uint64_t v111 = (void *)((char *)v110 + *(void *)(*v110 + 128));
  uint64_t v112 = v145;
  *uint64_t v111 = v146;
  v111[1] = v112;
  uint64_t v113 = v143;
  v111[2] = v144;
  v111[3] = v113;
  v111[4] = v142;
  uint64_t v165 = sub_100C82A20((uint64_t)v159);
  swift_beginAccess();
  sub_100CE2978();
  uint64_t v114 = v161;
  swift_beginAccess();
  uint64_t v115 = v150;
  ((void (*)(uint64_t, uint64_t, uint64_t))v109)(v150, v114, v86);
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v116 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v116, (uint64_t)qword_10171A2D8);
  uint64_t v117 = v153;
  uint64_t v118 = Capsule<>.serializedData(_:version:allowedAppFormats:)();
  unint64_t v169 = v119;
  uint64_t v120 = v168;
  ((void (*)(uint64_t, uint64_t))v168)(v115, v86);
  id v121 = v164;
  if (v117)
  {

    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t))v120)(v152, v86);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v157, v158);
    goto LABEL_6;
  }
  uint64_t v124 = sub_100D3F0F4((uint64_t)v164);
  if (v125 >> 60 != 15)
  {
    unint64_t v128 = v125;
    uint64_t v155 = (char *)v159[2];
    uint64_t v161 = v124;
    uint64_t v163 = v90;
    uint64_t v129 = (uint64_t)v148;
    sub_100D42F4C(v160 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier, (uint64_t)v148, type metadata accessor for CRLBoardIdentifier);
    uint64_t v130 = *(void *)(v166 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData);
    unint64_t v131 = *(void *)(v166 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData + 8);
    long long v132 = *((_OWORD *)v162 + 1);
    v170[0] = *(_OWORD *)v162;
    v170[1] = v132;
    uint64_t v171 = v162[4];
    type metadata accessor for CRLFreehandDrawingBucketSyncLocalChangeRecord(0);
    uint64_t v133 = swift_allocObject();
    id v134 = v139[0];
    sub_1005FA2A0(v130, v131);
    uint64_t v135 = (uint64_t)v134;
    unint64_t v136 = v169;
    uint64_t v137 = v130;
    uint64_t v138 = v161;
    uint64_t v61 = sub_100CDC31C(v135, (uint64_t)v155, v129, v118, v169, v137, v131, v161, v128, (uint64_t)v170, v165, v133);
    sub_100510084(v118, v136);
    swift_release();
    swift_release();
    sub_100514260(v138, v128);

    ((void (*)(char *, uint64_t))v120)(v152, v167);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v157, v158);
    return v61;
  }
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v126 = (id)static OS_os_log.dataSync;
  uint64_t v127 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v126, (uint64_t)&_mh_execute_header, v127, (uint64_t)"Failed to serialize remote mergeable record value.", 50, 2, (uint64_t)_swiftEmptyArrayStorage);
  swift_setDeallocating();
  ((void (*)(char *, uint64_t))v120)((char *)v110 + *(void *)(*v110 + 120), v86);
  swift_deallocClassInstance();
  sub_100510084(v118, v169);

  swift_release();
  ((void (*)(char *, uint64_t))v120)(v152, v86);
  (*(void (**)(char *, uint64_t))(v156 + 8))(v157, v158);
  return 0;
}

uint64_t sub_100D3011C()
{
  uint64_t v11 = UUID.uuidString.getter();
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 95;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = v11;
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
  v12._countAndFlagsBits = UUID.uuidString.getter();
  v12._object = v4;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v7 = *v6;
  uint64_t v8 = (void *)v6[1];
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100D30244()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  Swift::String v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID;
  swift_beginAccess();
  sub_100522E9C(v11, (uint64_t)v5, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101674520);
    uint64_t v12 = v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
    uint64_t v40 = UUID.uuidString.getter();
    uint64_t v41 = v13;
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = 58;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    uint64_t v15 = v40;
    uint64_t v16 = v41;
    uint64_t v17 = (uint64_t *)(v12 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v18 = *v17;
    uint64_t v19 = (void *)v17[1];
    uint64_t v40 = v15;
    uint64_t v41 = v16;
    swift_bridgeObjectRetain();
    v20._countAndFlagsBits = v18;
    v20._object = v19;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    return v40;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    uint64_t v40 = UUID.uuidString.getter();
    uint64_t v41 = v22;
    swift_bridgeObjectRetain();
    v23._countAndFlagsBits = 95;
    v23._object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    uint64_t v25 = v40;
    uint64_t v24 = v41;
    uint64_t v26 = v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier;
    uint64_t v40 = UUID.uuidString.getter();
    uint64_t v41 = v27;
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = 58;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    uint64_t v29 = v40;
    uint64_t v30 = v41;
    uint64_t v31 = (uint64_t *)(v26 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v32 = *v31;
    uint64_t v33 = (void *)v31[1];
    uint64_t v40 = v29;
    uint64_t v41 = v30;
    swift_bridgeObjectRetain();
    v34._countAndFlagsBits = v32;
    v34._object = v33;
    String.append(_:)(v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = v40;
    uint64_t v36 = v41;
    uint64_t v40 = v25;
    uint64_t v41 = v24;
    swift_bridgeObjectRetain();
    v37._countAndFlagsBits = v35;
    v37._object = v36;
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v40;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v21;
}

uint64_t sub_100D30560()
{
  return sub_100D3011C();
}

uint64_t sub_100D30584()
{
  return sub_100D30244();
}

uint64_t sub_100D305A8()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier;
  uint64_t v8 = UUID.uuidString.getter();
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = 58;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v4 = *v3;
  Swift::String v5 = (void *)v3[1];
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100D30658()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier;
  uint64_t v9 = UUID.uuidString.getter();
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = 58;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v4 = *v3;
  Swift::String v5 = (void *)v3[1];
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x7461646174654D5FLL;
  v7._object = (void *)0xE900000000000061;
  String.append(_:)(v7);
  return v9;
}

uint64_t sub_100D3072C()
{
  return sub_100D30658();
}

uint64_t sub_100D30750()
{
  return sub_100D308D0(&OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier);
}

uint64_t sub_100D3077C()
{
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 95;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier;
  v11._countAndFlagsBits = UUID.uuidString.getter();
  v11._object = v4;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  Swift::String v6 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v7 = *v6;
  uint64_t v8 = (void *)v6[1];
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x5F74656B637562;
}

uint64_t sub_100D308D0(void *a1)
{
  uint64_t v2 = v1 + *a1;
  uint64_t v9 = UUID.uuidString.getter();
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 58;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(v2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v5 = *v4;
  Swift::String v6 = (void *)v4[1];
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100D30974()
{
  return sub_100D3077C();
}

uint64_t sub_100D30998()
{
  return sub_100D308D0(&OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier);
}

uint64_t sub_100D309C4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare);
  id v2 = [v1 recordID];
  id v3 = [v2 recordName];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = [v1 recordID];
  id v6 = [v5 zoneID];

  id v7 = [v6 zoneName];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100D30AEC()
{
  uint64_t v1 = sub_1005057FC(&qword_101672C30);
  *(void *)&double v3 = __chkstk_darwin(v1 - 8, v2).n128_u64[0];
  id v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare), "recordID", v3));
  id v7 = [v6 zoneID];

  sub_100D29C10((uint64_t)v5);
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8) == 1)
  {
    sub_100522F00((uint64_t)v5, &qword_101672C30);
    return 0;
  }
  else
  {
    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v20 = v10;
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    uint64_t v12 = v19;
    uint64_t v13 = v20;
    Swift::String v14 = (uint64_t *)&v5[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    uint64_t v15 = *v14;
    uint64_t v16 = (void *)v14[1];
    uint64_t v19 = v12;
    uint64_t v20 = v13;
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = v15;
    v17._object = v16;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    uint64_t v9 = v19;
    sub_100D426E4((uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
  }
  return v9;
}

uint64_t sub_100D30CB0()
{
  return sub_100D309C4();
}

uint64_t sub_100D30CD4()
{
  return sub_100D30AEC();
}

CKRecordID sub_100D30CF8()
{
  Class v1 = sub_100D3EC2C(*v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  sub_10050BF48(0, &qword_10167BED0);
  v2._countAndFlagsBits = UUID.uuidString.getter();
  return CKRecordID.init(recordName:zoneID:)(v2, (CKRecordZoneID)v1);
}

CKRecordID sub_100D30D74(uint64_t a1)
{
  Class v1 = sub_100D3EC2C(a1);
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v3 = sub_100753038();
  uint64_t v5 = v4;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  id v6 = [(objc_class *)v1 ownerName];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      id v13 = [(objc_class *)v1 ownerName];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;

      if (v14) {
        goto LABEL_12;
      }
      goto LABEL_10;
    }
  }
  unint64_t v16 = 0xE000000000000000;
LABEL_10:
  if (v16 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_12:
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 515, (uint64_t)"Creating recordIDForCKRecord for public database using non-default ownerName for zone: %{public}@", 97, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 515);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  sub_10050BF48(0, &qword_10167BED0);
  v18._countAndFlagsBits = UUID.uuidString.getter();
  return CKRecordID.init(recordName:zoneID:)(v18, (CKRecordZoneID)v1);
}

BOOL sub_100D30FD4()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges) != 0;
}

uint64_t sub_100D30FF0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (!v1) {
    return 0;
  }
  BOOL v2 = (*(uint64_t (**)(void))(*(void *)v1 + 408))() == 8;
  return v3 & v2;
}

uint64_t sub_100D31060()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (!v1) {
    return 0;
  }
  BOOL v2 = (*(uint64_t (**)(void))(*(void *)v1 + 408))() == 8;
  return v3 & v2;
}

uint64_t sub_100D310D4(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v206 = a2;
  unint64_t v202 = 0;
  uint64_t v187 = type metadata accessor for CRLAssetSyncMetadata();
  __chkstk_darwin(v187, v7);
  unint64_t v186 = (char *)&v174 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_1005057FC((uint64_t *)&unk_10169A730);
  uint64_t v185 = *(void *)(v204 - 8);
  __chkstk_darwin(v204, v9);
  uint64_t v184 = (uint64_t *)((char *)&v174 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11, v12);
  unint64_t v183 = (uint64_t *)((char *)&v174 - v13);
  __chkstk_darwin(v14, v15);
  v203 = (uint64_t *)((char *)&v174 - v16);
  uint64_t v17 = sub_1005057FC(&qword_101699718);
  __chkstk_darwin(v17 - 8, v18);
  v190 = (char *)&v174 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v189 = (char **)((char *)&v174 - v22);
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v23 - 8, v24);
  v200 = (char *)&v174 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for UUID();
  uint64_t v188 = *(void *)(v193 - 8);
  __chkstk_darwin(v193, v26);
  uint64_t v192 = (char *)&v174 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v29);
  uint64_t v199 = (char *)&v174 - v30;
  uint64_t v31 = (uint64_t *)&v3[OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions];
  uint64_t v32 = *(void *)&v3[OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 16];
  uint64_t v210 = &type metadata for UInt64;
  uint64_t v211 = &protocol witness table for UInt64;
  uint64_t v208 = v32;
  uint64_t v33 = sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v210 = &type metadata for UInt64;
  uint64_t v211 = &protocol witness table for UInt64;
  uint64_t v208 = 0x1000000000000;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v34 = v31[1];
  uint64_t v210 = &type metadata for UInt64;
  uint64_t v211 = &protocol witness table for UInt64;
  uint64_t v208 = v34;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v35 = *(void *)&v3[OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue];
  uint64_t v210 = &type metadata for Int;
  uint64_t v211 = &protocol witness table for Int;
  uint64_t v208 = v35;
  CKRecordKeyValueSetting.subscript.setter();
  Class v36 = sub_100D3EC2C(a3);
  uint64_t v37 = sub_10050BF48(0, &qword_10167BED0);
  v38._countAndFlagsBits = UUID.uuidString.getter();
  uint64_t v198 = v37;
  Class isa = CKRecordID.init(recordName:zoneID:)(v38, (CKRecordZoneID)v36).super.isa;
  id v40 = objc_allocWithZone((Class)CKReference);
  Class v177 = isa;
  [v40 initWithRecordID:isa action:1];
  CKRecord.subscript.setter();
  uint64_t v41 = *v31;
  uint64_t v210 = &type metadata for UInt64;
  uint64_t v211 = &protocol witness table for UInt64;
  uint64_t v208 = v41;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v42 = *(void *)&v4[OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions];
  uint64_t v210 = &type metadata for UInt64;
  uint64_t v211 = &protocol witness table for UInt64;
  uint64_t v208 = v42;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v43 = sub_100D2A93C(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  BOOL v46 = (v44 & 1) == 0 && v43 > 0;
  uint64_t v210 = &type metadata for Bool;
  uint64_t v211 = &protocol witness table for Bool;
  LOBYTE(v208) = v46;
  uint64_t v191 = v33;
  id v205 = a1;
  CKRecordKeyValueSetting.subscript.setter();
  v207 = _swiftEmptyDictionarySingleton;
  uint64_t v47 = *(void *)&v4[OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData];
  if (v47)
  {
    uint64_t v201 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData;
    uint64_t v48 = *(void *)&v4[OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 24];
    uint64_t v49 = *(void *)&v4[OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 32];
    sub_10050F848(&v4[OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext], v48);
    uint64_t v50 = v4;
    unint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
    swift_retain();
    Class v52 = (void *)v51(v48, v49);
    unint64_t v53 = v202;
    uint64_t v54 = (*(uint64_t (**)(void *, void))(*(void *)v47 + 456))(v52, 0);
    if (v53)
    {
      swift_errorRelease();
      swift_release();

      unint64_t v53 = 0;
      id v56 = v50;
      uint64_t v57 = *(void *)&v50[v201];
      if (v57) {
        goto LABEL_10;
      }
LABEL_22:
      uint64_t v64 = v193;
LABEL_23:
      unint64_t v65 = v206;
      goto LABEL_24;
    }
    uint64_t v66 = (void (*)(char *, char *, uint64_t))v54;
    unint64_t v67 = v55;
    swift_release();

    uint64_t v210 = &type metadata for Data;
    uint64_t v211 = &protocol witness table for Data;
    uint64_t v208 = (uint64_t)v66;
    uint64_t v209 = (char *)v67;
    v197 = v66;
    unint64_t v202 = v67;
    sub_100510D4C((uint64_t)v66, v67);
    CKRecordKeyValueSetting.subscript.setter();
    uint64_t v68 = v201;
    uint64_t v69 = *(void *)&v50[v201];
    id v56 = v50;
    if (v69)
    {
      uint64_t v70 = *(void (**)(uint64_t))(*(void *)v69 + 264);
      uint64_t v71 = swift_retain();
      uint64_t v72 = (uint64_t)v200;
      v70(v71);
      swift_release();
      uint64_t v73 = v193;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v188 + 48))(v72, 1, v193) != 1)
      {
        v196 = v50;
        uint64_t v74 = v188;
        uint64_t v75 = v199;
        (*(void (**)(char *, uint64_t, uint64_t))(v188 + 32))(v199, v72, v73);
        uint64_t v76 = UUID.uuidString.getter();
        unint64_t v78 = v77;
        id v79 = [v205 recordID];
        uint64_t v80 = (objc_class *)[v79 zoneID];

        v81._countAndFlagsBits = v76;
        v81._object = v78;
        v82.super.Class isa = v80;
        uint64_t v68 = v201;
        Class v83 = CKRecordID.init(recordName:zoneID:)(v81, v82).super.isa;
        [objc_allocWithZone((Class)CKReference) initWithRecordID:v83 action:1];
        CKRecord.subscript.setter();

        uint64_t v84 = v74;
        id v56 = v196;
        (*(void (**)(char *, uint64_t))(v84 + 8))(v75, v73);
        uint64_t v85 = *(void *)&v56[v68];
        if (!v85) {
          goto LABEL_15;
        }
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v72 = (uint64_t)v200;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v188 + 56))(v200, 1, 1, v193);
    }
    sub_100522F00(v72, (uint64_t *)&unk_101674520);
    uint64_t v85 = *(void *)&v50[v68];
    if (!v85)
    {
LABEL_15:
      sub_100510084((uint64_t)v197, v202);
      uint64_t v57 = *(void *)&v56[v68];
      if (!v57) {
        goto LABEL_22;
      }
      goto LABEL_10;
    }
LABEL_21:
    uint64_t v94 = *(uint64_t (**)(uint64_t))(*(void *)v85 + 568);
    uint64_t v95 = swift_retain();
    uint64_t v96 = v94(v95);
    uint64_t v97 = swift_release();
    __chkstk_darwin(v97, v98);
    *(&v174 - 2) = (uint64_t)&v207;
    sub_100D3EE0C(v96, (void (*)(uint64_t, uint64_t, uint64_t))sub_100D43214);
    sub_100510084((uint64_t)v197, v202);
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void *)&v56[v68];
    if (!v57) {
      goto LABEL_22;
    }
LABEL_10:
    uint64_t v58 = *(void *)&v56[OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 24];
    uint64_t v59 = *(void *)&v56[OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 32];
    sub_10050F848(&v56[OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext], v58);
    uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t))(v59 + 8);
    swift_retain();
    uint64_t v61 = (void *)v60(v58, v59);
    uint64_t v62 = (*(uint64_t (**)(void *, void))(*(void *)v57 + 464))(v61, 0);
    uint64_t v64 = v193;
    uint64_t v86 = v62;
    unint64_t v87 = v63;
    swift_release();

    uint64_t v210 = &type metadata for Data;
    uint64_t v211 = &protocol witness table for Data;
    uint64_t v208 = v86;
    uint64_t v209 = (char *)v87;
    sub_100510D4C(v86, v87);
    CKRecordKeyValueSetting.subscript.setter();
    uint64_t v88 = *(void *)&v56[v201];
    if (v88)
    {
      uint64_t v89 = *(uint64_t (**)(uint64_t))(*(void *)v88 + 576);
      uint64_t v90 = swift_retain();
      uint64_t v91 = v89(v90);
      uint64_t v92 = swift_release();
      __chkstk_darwin(v92, v93);
      *(&v174 - 2) = (uint64_t)&v207;
      sub_100D3EE0C(v91, (void (*)(uint64_t, uint64_t, uint64_t))sub_100D43214);
      sub_100510084(v86, v87);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100510084(v86, v87);
    }
    goto LABEL_23;
  }
  uint64_t v64 = v193;
  unint64_t v65 = v206;
  unint64_t v53 = v202;
LABEL_24:
  uint64_t v99 = swift_bridgeObjectRetain();
  uint64_t v100 = sub_1006BA5B4(v99);
  uint64_t v101 = swift_bridgeObjectRelease();
  __chkstk_darwin(v101, v102);
  *(&v174 - 2) = v65;
  *(&v174 - 1) = (uint64_t)v100;
  sub_1005057FC((uint64_t *)&unk_10169A740);
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  unint64_t v206 = v53;
  if (v53)
  {
    if (qword_10166FB88 != -1) {
      goto LABEL_67;
    }
    goto LABEL_26;
  }
  uint64_t v110 = v64;
  uint64_t v182 = v208;
  uint64_t v111 = v207[8];
  uint64_t v176 = v207 + 8;
  uint64_t v112 = 1 << *((unsigned char *)v207 + 32);
  uint64_t v113 = -1;
  if (v112 < 64) {
    uint64_t v113 = ~(-1 << v112);
  }
  unint64_t v114 = v113 & v111;
  v194 = (void (**)(char *, uint64_t))(v188 + 16);
  uint64_t v180 = (void (**)(uint64_t, char *, uint64_t))(v188 + 32);
  uint64_t v181 = (void (**)(char *, uint64_t))(v188 + 8);
  int64_t v178 = (unint64_t)(v112 + 63) >> 6;
  uint64_t v179 = v207;
  int64_t v175 = v178 - 1;
  swift_bridgeObjectRetain();
  uint64_t v115 = 0;
  uint64_t v116 = (uint64_t)v192;
  uint64_t v117 = v190;
  if (!v114) {
    goto LABEL_32;
  }
LABEL_30:
  uint64_t v201 = v115;
  unint64_t v202 = (v114 - 1) & v114;
  unint64_t v118 = __clz(__rbit64(v114)) | (v115 << 6);
LABEL_31:
  uint64_t v119 = v179[7];
  uint64_t v120 = (void *)(v179[6] + 16 * v118);
  uint64_t v121 = v120[1];
  *(void *)uint64_t v117 = *v120;
  *((void *)v117 + 1) = v121;
  uint64_t v122 = v188;
  uint64_t v123 = v119 + *(void *)(v188 + 72) * v118;
  uint64_t v124 = sub_1005057FC(&qword_10169A750);
  (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(&v117[*(int *)(v124 + 48)], v123, v110);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v117, 0, 1, v124);
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v128 = v189;
    sub_10051B3EC((uint64_t)v117, (uint64_t)v189, &qword_101699718);
    uint64_t v129 = sub_1005057FC(&qword_10169A750);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(*(void *)(v129 - 8) + 48))(v128, 1, v129) == 1)
    {
      swift_bridgeObjectRelease();

LABEL_63:
      swift_release();
      return swift_bridgeObjectRelease();
    }
    unint64_t v131 = *v128;
    uint64_t v130 = v128[1];
    uint64_t v132 = v110;
    (*v180)(v116, (char *)v128 + *(int *)(v129 + 48), v110);
    uint64_t v133 = v182;
    if (!*(void *)(v182 + 16) || (unint64_t v134 = sub_100955FC8(v116), (v135 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v165 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v167 = sub_100528BE4();
      *(void *)(inited + 64) = v167;
      *(void *)(inited + 32) = v131;
      *(void *)(inited + 40) = v130;
      id v168 = v165;
      unint64_t v169 = v192;
      uint64_t v170 = UUID.uuidString.getter();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v167;
      *(void *)(inited + 72) = v170;
      *(void *)(inited + 80) = v171;
      uint64_t v172 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v168, (uint64_t)&_mh_execute_header, v172, (uint64_t)"Did not find asset information for asset name: %@ asset UUID: %@. Cannot sync this asset with CloudKit", 102, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      (*v181)(v169, v132);
      goto LABEL_63;
    }
    unint64_t v136 = v203;
    uint64_t v137 = v204;
    uint64_t v138 = (char *)v203 + *(int *)(v204 + 48);
    id v139 = v183;
    sub_100522E9C(*(void *)(v133 + 56) + *(void *)(v185 + 72) * v134, (uint64_t)v183, (uint64_t *)&unk_10169A730);
    uint64_t v140 = (char *)v139 + *(int *)(v137 + 48);
    v200 = v131;
    uint64_t v141 = *v139;
    *unint64_t v136 = *v139;
    uint64_t v142 = type metadata accessor for URL();
    uint64_t v143 = *(void **)(v142 - 8);
    uint64_t v144 = (void (*)(char *, char *, uint64_t))v143[4];
    uint64_t v145 = v138;
    uint64_t v198 = (uint64_t)v138;
    uint64_t v195 = v142;
    v144(v138, v140, v142);
    uint64_t v208 = (uint64_t)v131;
    uint64_t v209 = v130;
    swift_retain();
    swift_bridgeObjectRetain();
    v146._countAndFlagsBits = 0x7465737341;
    v146._object = (void *)0xE500000000000000;
    String.append(_:)(v146);
    uint64_t v199 = v209;
    uint64_t v147 = v184;
    CKRecordID v148 = (char *)v184 + *(int *)(v137 + 48);
    *uint64_t v184 = v141;
    v197 = (void (*)(char *, char *, uint64_t))v143[2];
    v197(v148, v145, v142);
    id v149 = objc_allocWithZone((Class)CKAsset);
    URL._bridgeToObjectiveC()(v150);
    id v152 = v151;
    [v149 initWithFileURL:v151];

    v196 = (char *)v143[1];
    uint64_t v153 = v195;
    ((void (*)(char *, uint64_t))v196)(v148, v195);
    CKRecord.subscript.setter();
    uint64_t v208 = (uint64_t)v200;
    uint64_t v209 = v130;
    swift_bridgeObjectRetain();
    v154._countAndFlagsBits = 0x74654D7465737341;
    v154._object = (void *)0xED00006174616461;
    String.append(_:)(v154);
    swift_bridgeObjectRelease();
    uint64_t v199 = v209;
    v200 = (char *)v208;
    uint64_t v155 = (char *)v147 + *(int *)(v204 + 48);
    *uint64_t v147 = v141;
    v197(v155, (char *)v198, v153);
    uint64_t v156 = (uint64_t)v186;
    uint64_t v110 = v193;
    (*v194)(v186, v141 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID);
    uint64_t v158 = *(void *)(v141 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    uint64_t v157 = *(void *)(v141 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
    swift_bridgeObjectRetain();
    swift_release();
    id v159 = (void *)(v156 + *(int *)(v187 + 20));
    *id v159 = v158;
    v159[1] = v157;
    ((void (*)(char *, uint64_t))v196)(v155, v153);
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    dispatch thunk of PropertyListEncoder.outputFormat.setter();
    sub_100D3F084((unint64_t *)&unk_10169A758, (void (*)(uint64_t))type metadata accessor for CRLAssetSyncMetadata);
    unint64_t v160 = v206;
    uint64_t v161 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    unint64_t v206 = v160;
    if (v160) {
      goto LABEL_69;
    }
    uint64_t v163 = v161;
    id v164 = v162;
    swift_release();
    sub_100D426E4(v156, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    uint64_t v210 = &type metadata for Data;
    uint64_t v211 = &protocol witness table for Data;
    uint64_t v208 = v163;
    uint64_t v209 = v164;
    CKRecordKeyValueSetting.subscript.setter();
    sub_100522F00((uint64_t)v203, (uint64_t *)&unk_10169A730);
    uint64_t v116 = (uint64_t)v192;
    (*v181)(v192, v110);
    uint64_t v117 = v190;
    uint64_t v115 = v201;
    unint64_t v114 = v202;
    if (v202) {
      goto LABEL_30;
    }
LABEL_32:
    int64_t v125 = v115 + 1;
    if (__OFADD__(v115, 1)) {
      break;
    }
    if (v125 >= v178) {
      goto LABEL_42;
    }
    unint64_t v126 = v176[v125];
    if (v126) {
      goto LABEL_35;
    }
    v115 += 2;
    if (v125 + 1 >= v178)
    {
LABEL_58:
      uint64_t v201 = v125;
    }
    else
    {
      unint64_t v126 = v176[v115];
      if (v126) {
        goto LABEL_38;
      }
      if (v125 + 2 >= v178)
      {
LABEL_42:
        uint64_t v201 = v115;
        goto LABEL_43;
      }
      unint64_t v126 = v176[v125 + 2];
      if (v126)
      {
        v125 += 2;
        goto LABEL_35;
      }
      uint64_t v115 = v125 + 3;
      if (v125 + 3 < v178)
      {
        unint64_t v126 = v176[v115];
        if (!v126)
        {
          while (1)
          {
            int64_t v125 = v115 + 1;
            if (__OFADD__(v115, 1)) {
              break;
            }
            if (v125 >= v178)
            {
              int64_t v125 = v175;
              goto LABEL_58;
            }
            unint64_t v126 = v176[v125];
            ++v115;
            if (v126) {
              goto LABEL_35;
            }
          }
          __break(1u);
LABEL_69:
          uint64_t result = swift_unexpectedError();
          __break(1u);
          return result;
        }
LABEL_38:
        int64_t v125 = v115;
LABEL_35:
        uint64_t v201 = v125;
        unint64_t v202 = (v126 - 1) & v126;
        unint64_t v118 = __clz(__rbit64(v126)) + (v125 << 6);
        goto LABEL_31;
      }
      uint64_t v201 = v125 + 2;
    }
LABEL_43:
    uint64_t v127 = sub_1005057FC(&qword_10169A750);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v117, 1, 1, v127);
    unint64_t v202 = 0;
  }
  __break(1u);
LABEL_67:
  swift_once();
LABEL_26:
  swift_beginAccess();
  uint64_t v103 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v104 = swift_initStackObject();
  *(_OWORD *)(v104 + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v105 = v103;
  uint64_t v106 = Error.localizedDescription.getter();
  uint64_t v108 = v107;
  *(void *)(v104 + 56) = &type metadata for String;
  *(void *)(v104 + 64) = sub_100528BE4();
  *(void *)(v104 + 32) = v106;
  *(void *)(v104 + 40) = v108;
  uint64_t v109 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v105, (uint64_t)&_mh_execute_header, v109, (uint64_t)"Failed to fetch asset rows for setting on cloud record. Error: %@", 65, 2, v104);

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  return swift_bridgeObjectRelease();
}

Class sub_100D325D8(unint64_t a1, uint64_t a2)
{
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  Class isa = sub_100D30D74(a2).super.isa;
  sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  id v6 = isa;
  v7._countAndFlagsBits = 0xD000000000000011;
  v7._object = (void *)0x8000000101284FE0;
  Class v8 = CKRecord.init(recordType:recordID:)(v7, (CKRecordID)v6).super.isa;
  sub_100D310D4(v8, a1, a2);

  return v8;
}

Class sub_100D326E4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::String v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8);
  if (v5 >> 60 == 15) {
    goto LABEL_3;
  }
  uint64_t v6 = *v4;
  id v7 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_1005FA2A0(v6, v5);
  id v20 = sub_100D41CE4();
  id v21 = [objc_allocWithZone((Class)CKRecord) initWithCoder:v20];
  sub_100514260(v6, v5);
  Class v22 = (Class)v21;

  if (!v22)
  {
LABEL_3:
    v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    Class v9 = sub_100D3EC2C(v2 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
    sub_10050BF48(0, &qword_10167BED0);
    v10._countAndFlagsBits = UUID.uuidString.getter();
    Class isa = CKRecordID.init(recordName:zoneID:)(v10, (CKRecordZoneID)v9).super.isa;
    v12._countAndFlagsBits = 0x6574496472616F42;
    v12._object = (void *)0xEA00000000005F6DLL;
    Class v22 = CKRecord.init(recordType:recordID:)(v12, (CKRecordID)isa).super.isa;
    if ((unint64_t)v4[1] >> 60 != 15)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v13 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v15 = v13;
      uint64_t v16 = UUID.uuidString.getter();
      uint64_t v18 = v17;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v16;
      *(void *)(inited + 40) = v18;
      uint64_t v19 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Failed to use existing sync data to decode CKRecord for board item with id %@", 77, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
    }
  }
  else
  {
  }
  sub_100D32A7C(v22, a1);
  return v22;
}

uint64_t sub_100D32A7C(id a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v289 = a2;
  unint64_t v5 = 0;
  uint64_t v274 = type metadata accessor for CRLAssetSyncMetadata();
  __chkstk_darwin(v274 - 8, v6);
  v263 = (char *)&v253 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v264 = (uint64_t)&v253 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v257 = (char *)&v253 - v13;
  int64_t v287 = sub_1005057FC((uint64_t *)&unk_10169A730);
  uint64_t v266 = *(void *)(v287 - 8);
  __chkstk_darwin(v287, v14);
  Class v286 = (uint64_t *)((char *)&v253 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16, v17);
  uint64_t v265 = (uint64_t *)((char *)&v253 - v18);
  __chkstk_darwin(v19, v20);
  uint64_t v279 = (uint64_t *)((char *)&v253 - v21);
  uint64_t v22 = sub_1005057FC(&qword_101699718);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v25 = (uint64_t *)((char *)&v253 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v26, v27);
  uint64_t v269 = (uint64_t *)((char *)&v253 - v28);
  uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v29 - 8, v30);
  v271 = (char *)&v253 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)&v253 - v34;
  uint64_t v36 = type metadata accessor for UUID();
  uint64_t v272 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v37);
  uint64_t v256 = (char *)&v253 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39, v40);
  uint64_t v273 = (char *)&v253 - v41;
  *(void *)&double v44 = __chkstk_darwin(v42, v43).n128_u64[0];
  uint64_t v282 = (char *)&v253 - v45;
  uint64_t v46 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges;
  unint64_t v47 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges);
  id v291 = a1;
  uint64_t v292 = v48;
  uint64_t v290 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedChanges;
  uint64_t v268 = v25;
  uint64_t v288 = (void (**)(char *, char *, uint64_t))v47;
  uint64_t v283 = (uint64_t)v35;
  if ((v47 & 0x10) != 0)
  {
    LODWORD(v284) = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_tombstoned);
    LODWORD(v285) = v284 ^ 1;
    if (v47) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v65 = (v47 >> 3) & 1;
    uint64_t v296 = &_swiftEmptySetSingleton;
    v297 = _swiftEmptyDictionarySingleton;
    if ((v47 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_8;
  }
  LODWORD(v285) = 0;
  LODWORD(v284) = 0;
  if ((v47 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  v281 = 0;
  id v49 = [a1 encryptedValues:v44];
  swift_getObjectType();
  uint64_t v50 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue);
  uint64_t v294 = (ValueMetadata *)&type metadata for Int;
  uint64_t v295 = &protocol witness table for Int;
  *(void *)&long long v293 = v50;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t v51 = UUID.uuidString.getter();
  unint64_t v53 = v52;
  uint64_t v54 = a1;
  id v55 = [a1 recordID];
  id v56 = [v55 zoneID];

  v57._countAndFlagsBits = v51;
  v57._object = v53;
  v58.super.Class isa = CKRecordID.init(recordName:zoneID:)(v57, (CKRecordZoneID)v56).super.isa;
  [objc_allocWithZone((Class)CKReference) initWithRecordID:v58.super.isa action:1];
  CKRecord.subscript.setter();
  uint64_t v59 = v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions;
  uint64_t v60 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
  uint64_t v295 = &protocol witness table for UInt64;
  uint64_t v294 = (ValueMetadata *)&type metadata for UInt64;
  *(void *)&long long v293 = v60;
  sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v294 = (ValueMetadata *)&type metadata for UInt64;
  uint64_t v295 = &protocol witness table for UInt64;
  *(void *)&long long v293 = 0x1000000000000;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v294 = &type metadata for CRLFeatureFlags;
  uint64_t v295 = (void *)sub_1005396A8();
  LOBYTE(v293) = 24;
  LOBYTE(v51) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v293);
  if (v51)
  {
    id v61 = [v54 encryptedValues];
    swift_getObjectType();
    uint64_t v62 = *(void *)(v59 + 8);
    uint64_t v294 = (ValueMetadata *)&type metadata for UInt64;
    uint64_t v295 = &protocol witness table for UInt64;
    *(void *)&long long v293 = v62;
    CKRecordKeyValueSetting.subscript.setter();
    swift_unknownObjectRelease();
  }
  id v63 = [v54 encryptedValues];
  swift_getObjectType();
  uint64_t v64 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions);
  uint64_t v294 = (ValueMetadata *)&type metadata for UInt64;
  uint64_t v295 = &protocol witness table for UInt64;
  *(void *)&long long v293 = v64;
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();

  v297 = _swiftEmptyDictionarySingleton;
  uint64_t v296 = &_swiftEmptySetSingleton;
  uint64_t v65 = 1;
  a1 = v54;
  uint64_t v46 = v290;
  unint64_t v5 = v281;
LABEL_8:
  uint64_t v66 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData;
  uint64_t v67 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (v67)
  {
    v281 = (void (*)(void, void))v65;
    uint64_t v68 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 24);
    uint64_t v69 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 32);
    sub_10050F848((void *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext), v68);
    uint64_t v70 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8);
    swift_retain();
    uint64_t v71 = (void *)v70(v68, v69);
    uint64_t v72 = (*(uint64_t (**)(void *, void))(*(void *)v67 + 456))(v71, 0);
    if (v5)
    {
      swift_errorRelease();
      swift_release();

      unint64_t v5 = 0;
      uint64_t v46 = v290;
      a1 = v291;
      uint64_t v25 = v268;
      goto LABEL_21;
    }
    uint64_t v74 = v72;
    unint64_t v75 = v73;
    swift_release();

    id v76 = [v291 encryptedValues];
    swift_getObjectType();
    uint64_t v294 = (ValueMetadata *)&type metadata for Data;
    uint64_t v295 = &protocol witness table for Data;
    *(void *)&long long v293 = v74;
    *((void *)&v293 + 1) = v75;
    uint64_t v278 = v74;
    unint64_t v280 = v75;
    sub_100510D4C(v74, v75);
    CKRecordKeyValueSetting.subscript.setter();
    swift_unknownObjectRelease();
    uint64_t v77 = *(void *)(v3 + v66);
    uint64_t v78 = v292;
    uint64_t v46 = v290;
    if (v77)
    {
      id v79 = *(void (**)(uint64_t))(*(void *)v77 + 264);
      uint64_t v80 = swift_retain();
      uint64_t v81 = v283;
      v79(v80);
      swift_release();
      int v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v81, 1, v78);
      uint64_t v25 = v268;
      if (v82 != 1)
      {
        Class v83 = v282;
        (*(void (**)(char *, uint64_t, uint64_t))(v272 + 32))(v282, v81, v292);
        uint64_t v283 = sub_10050BF48(0, &qword_10167BED0);
        uint64_t v84 = UUID.uuidString.getter();
        uint64_t v86 = v85;
        id v87 = [v291 recordID];
        id v88 = [v87 zoneID];

        uint64_t v25 = v268;
        v89._countAndFlagsBits = v84;
        v89._object = v86;
        Class isa = CKRecordID.init(recordName:zoneID:)(v89, (CKRecordZoneID)v88).super.isa;
        [objc_allocWithZone((Class)CKReference) initWithRecordID:isa action:1];
        uint64_t v46 = v290;
        CKRecord.subscript.setter();

        (*(void (**)(char *, uint64_t))(v272 + 8))(v83, v292);
        uint64_t v91 = *(void *)(v3 + v66);
        if (!v91)
        {
LABEL_16:
          sub_100510084(v278, v280);
LABEL_20:
          a1 = v291;
LABEL_21:
          if ((v281 & 1) == 0) {
            goto LABEL_26;
          }
          goto LABEL_22;
        }
LABEL_19:
        uint64_t v92 = *(uint64_t (**)(uint64_t))(*(void *)v91 + 568);
        uint64_t v93 = swift_retain();
        uint64_t v94 = v92(v93);
        uint64_t v95 = swift_release();
        __chkstk_darwin(v95, v96);
        sub_100D3EE0C(v94, (void (*)(uint64_t, uint64_t, uint64_t))sub_100D4320C);
        sub_100510084(v278, v280);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v81 = v283;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v272 + 56))(v283, 1, 1, v292);
      uint64_t v25 = v268;
    }
    sub_100522F00(v81, (uint64_t *)&unk_101674520);
    uint64_t v91 = *(void *)(v3 + v66);
    if (!v91) {
      goto LABEL_16;
    }
    goto LABEL_19;
  }
LABEL_11:
  if (!v65)
  {
LABEL_26:
    id v105 = v269;
    if (!v284) {
      goto LABEL_35;
    }
    goto LABEL_33;
  }
LABEL_22:
  uint64_t v97 = OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData;
  uint64_t v98 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (!v98)
  {
    uint64_t v46 = v290;
    a1 = v291;
    goto LABEL_26;
  }
  uint64_t v99 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 24);
  uint64_t v100 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext + 32);
  sub_10050F848((void *)(v3 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext), v99);
  uint64_t v101 = *(uint64_t (**)(uint64_t, uint64_t))(v100 + 8);
  swift_retain();
  uint64_t v102 = (void *)v101(v99, v100);
  uint64_t v103 = (*(uint64_t (**)(void *, void))(*(void *)v98 + 464))(v102, 0);
  if (v5)
  {
    swift_errorRelease();
    swift_release();

    unint64_t v5 = 0;
    a1 = v291;
    uint64_t v25 = v268;
    id v105 = v269;
  }
  else
  {
    uint64_t v106 = v103;
    unint64_t v107 = v104;
    swift_release();

    id v108 = [v291 encryptedValues];
    swift_getObjectType();
    uint64_t v294 = (ValueMetadata *)&type metadata for Data;
    uint64_t v295 = &protocol witness table for Data;
    *(void *)&long long v293 = v106;
    *((void *)&v293 + 1) = v107;
    sub_100510D4C(v106, v107);
    CKRecordKeyValueSetting.subscript.setter();
    swift_unknownObjectRelease();
    uint64_t v109 = *(void *)(v3 + v97);
    id v105 = v269;
    if (v109)
    {
      uint64_t v110 = *(uint64_t (**)(uint64_t))(*(void *)v109 + 576);
      uint64_t v111 = swift_retain();
      uint64_t v112 = v110(v111);
      uint64_t v113 = swift_release();
      __chkstk_darwin(v113, v114);
      sub_100D3EE0C(v112, (void (*)(uint64_t, uint64_t, uint64_t))sub_100D3F0CC);
      sub_100510084(v106, v107);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100510084(v106, v107);
    }
    a1 = v291;
    uint64_t v25 = v268;
  }
  uint64_t v46 = v290;
  if ((v284 & 1) == 0)
  {
LABEL_35:
    if (!v285) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_33:
  uint64_t v115 = sub_100D2A93C(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  if ((v116 & 1) == 0 && v115 > 0) {
    goto LABEL_35;
  }
  uint64_t v294 = (ValueMetadata *)&type metadata for Int;
  uint64_t v295 = &protocol witness table for Int;
  *(void *)&long long v293 = 1;
  sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  CKRecordKeyValueSetting.subscript.setter();
  if ((v285 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v117 = CKRecord.subscript.getter();
  swift_unknownObjectRelease();
  if (!v117
    || (uint64_t v118 = sub_100D2A93C(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000), (v119 & 1) == 0)&& v118 >= 1)
  {
    uint64_t v294 = (ValueMetadata *)&type metadata for Int;
    uint64_t v295 = &protocol witness table for Int;
    *(void *)&long long v293 = 0;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
  }
LABEL_42:
  if ((*(unsigned char *)(v3 + v46) & 0x20) != 0)
  {
    uint64_t v120 = sub_100D2A93C(0xD000000000000012, 0x8000000101285080, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if (v121)
    {
      uint64_t v122 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
    }
    else
    {
      uint64_t v122 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
      if (v120 == v122) {
        goto LABEL_48;
      }
    }
    uint64_t v294 = (ValueMetadata *)&type metadata for UInt64;
    uint64_t v295 = &protocol witness table for UInt64;
    *(void *)&long long v293 = v122;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
  }
LABEL_48:
  if ((*(unsigned char *)(v3 + v46) & 0x80) != 0)
  {
    uint64_t v123 = sub_100D2B45C(0xD000000000000027, 0x8000000101285050, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v124 & 1) != 0
      || v123 != *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 8))
    {
      uint64_t v294 = &type metadata for CRLFeatureFlags;
      uint64_t v295 = (void *)sub_1005396A8();
      LOBYTE(v293) = 24;
      char v125 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v293);
      if (v125)
      {
        id v126 = [a1 encryptedValues];
        swift_getObjectType();
        uint64_t v127 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 8);
        uint64_t v294 = (ValueMetadata *)&type metadata for UInt64;
        uint64_t v295 = &protocol witness table for UInt64;
        *(void *)&long long v293 = v127;
        CKRecordKeyValueSetting.subscript.setter();
        swift_unknownObjectRelease();
      }
    }
  }
  if ((v288 & 1) != 0 || (uint64_t v128 = *(void *)(v3 + v46), (v128 & 0x100) != 0))
  {
    uint64_t v129 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions + 16);
    uint64_t v295 = &protocol witness table for UInt64;
    uint64_t v294 = (ValueMetadata *)&type metadata for UInt64;
    *(void *)&long long v293 = v129;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
    uint64_t v128 = *(void *)(v3 + v46);
  }
  if ((v128 & 0x40) != 0)
  {
    uint64_t v130 = sub_100D2B45C(0x704F7463656A624FLL, 0xEF455F736E6F6974, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v131 & 1) != 0 || v130 != *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions))
    {
      id v132 = [a1 encryptedValues];
      swift_getObjectType();
      uint64_t v133 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions);
      uint64_t v294 = (ValueMetadata *)&type metadata for UInt64;
      uint64_t v295 = &protocol witness table for UInt64;
      *(void *)&long long v293 = v133;
      CKRecordKeyValueSetting.subscript.setter();
      swift_unknownObjectRelease();
    }
  }
  uint64_t v134 = swift_bridgeObjectRetain();
  sub_1006BA5B4(v134);
  uint64_t v135 = swift_bridgeObjectRelease();
  __chkstk_darwin(v135, v136);
  sub_1005057FC((uint64_t *)&unk_10169A740);
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  if (v5)
  {
LABEL_61:
    if (qword_10166FB88 == -1)
    {
LABEL_62:
      swift_beginAccess();
      uint64_t v137 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v139 = v137;
      uint64_t v140 = Error.localizedDescription.getter();
      uint64_t v142 = v141;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v140;
      *(void *)(inited + 40) = v142;
      uint64_t v143 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v139, (uint64_t)&_mh_execute_header, v143, (uint64_t)"Failed to fetch asset rows for setting on cloud record. Error: %@", 65, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_errorRelease();
LABEL_141:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_145:
    swift_once();
    goto LABEL_62;
  }
  uint64_t v144 = v293;
  uint64_t v145 = v297[8];
  v254 = v297 + 8;
  uint64_t v146 = 1 << *((unsigned char *)v297 + 32);
  uint64_t v147 = -1;
  if (v146 < 64) {
    uint64_t v147 = ~(-1 << v146);
  }
  unint64_t v148 = v147 & v145;
  uint64_t v288 = (void (**)(char *, char *, uint64_t))(v272 + 16);
  uint64_t v289 = 0;
  uint64_t v270 = (void (**)(uint64_t, char *, uint64_t))(v272 + 32);
  v262 = (void (**)(uint64_t, uint64_t))(v272 + 8);
  int64_t v255 = (unint64_t)(v146 + 63) >> 6;
  uint64_t v253 = v255 - 1;
  v260 = v297;
  swift_bridgeObjectRetain();
  uint64_t v149 = 0;
  uint64_t v150 = (uint64_t)v273;
  uint64_t v261 = v144;
  if (!v148) {
    goto LABEL_68;
  }
LABEL_66:
  uint64_t v277 = (v148 - 1) & v148;
  uint64_t v278 = v149;
  for (unint64_t i = __clz(__rbit64(v148)) | (v149 << 6); ; unint64_t i = __clz(__rbit64(v159)) + (v158 << 6))
  {
    uint64_t v152 = v260[7];
    uint64_t v153 = (void *)(v260[6] + 16 * i);
    uint64_t v154 = v153[1];
    *uint64_t v25 = *v153;
    v25[1] = v154;
    uint64_t v155 = v272;
    uint64_t v156 = v152 + *(void *)(v272 + 72) * i;
    uint64_t v157 = sub_1005057FC(&qword_10169A750);
    (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))((char *)v25 + *(int *)(v157 + 48), v156, v292);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v157 - 8) + 56))(v25, 0, 1, v157);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10051B3EC((uint64_t)v25, (uint64_t)v105, &qword_101699718);
      uint64_t v161 = sub_1005057FC(&qword_10169A750);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v161 - 8) + 48))(v105, 1, v161) == 1)
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v227 = v296[7];
        Class v286 = v296 + 7;
        uint64_t v228 = 1 << *((unsigned char *)v296 + 32);
        uint64_t v229 = -1;
        if (v228 < 64) {
          uint64_t v229 = ~(-1 << v228);
        }
        unint64_t v230 = v229 & v227;
        int64_t v287 = (unint64_t)(v228 + 63) >> 6;
        uint64_t v231 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v272 + 56);
        uint64_t v232 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48);
        uint64_t v290 = (uint64_t)v296;
        swift_bridgeObjectRetain();
        int64_t v162 = 0;
        uint64_t v150 = v292;
        if (v230) {
          goto LABEL_115;
        }
LABEL_116:
        if (__OFADD__(v162++, 1))
        {
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        if (v162 < v287)
        {
          unint64_t v236 = v286[v162];
          if (v236)
          {
LABEL_126:
            unint64_t v230 = (v236 - 1) & v236;
            for (unint64_t j = __clz(__rbit64(v236)) + (v162 << 6); ; unint64_t j = v233 | (v162 << 6))
            {
              unint64_t v238 = (uint64_t *)(*(void *)(v290 + 48) + 16 * j);
              uint64_t v240 = *v238;
              uint64_t v239 = v238[1];
              unint64_t v241 = v297;
              if (v297[2])
              {
                swift_bridgeObjectRetain_n();
                unint64_t v242 = sub_100955F50(v240, v239);
                if (v243)
                {
                  uint64_t v244 = v241[7];
                  uint64_t v245 = (uint64_t)v271;
                  uint64_t v246 = v272;
                  (*(void (**)(char *, unint64_t, uint64_t))(v272 + 16))(v271, v244 + *(void *)(v272 + 72) * v242, v150);
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v246 + 56))(v245, 0, 1, v150);
                }
                else
                {
                  uint64_t v245 = (uint64_t)v271;
                  (*v231)(v271, 1, 1, v150);
                }
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v245 = (uint64_t)v271;
                (*v231)(v271, 1, 1, v150);
                swift_bridgeObjectRetain();
              }
              if ((*v232)(v245, 1, v150) == 1)
              {
                sub_100522F00(v245, (uint64_t *)&unk_101674520);
                *(void *)&long long v293 = v240;
                *((void *)&v293 + 1) = v239;
                swift_bridgeObjectRetain();
                v247._countAndFlagsBits = 0x7465737341;
                v247._object = (void *)0xE500000000000000;
                String.append(_:)(v247);
                id v248 = v291;
                CKRecord.subscript.setter();
                id v249 = [v248 encryptedValues];
                *(void *)&long long v293 = v240;
                *((void *)&v293 + 1) = v239;
                swift_bridgeObjectRetain();
                v250._countAndFlagsBits = 0x74654D7465737341;
                v250._object = (void *)0xED00006174616461;
                String.append(_:)(v250);
                swift_bridgeObjectRelease();
                NSString v251 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                [v249 setObject:0 forKeyedSubscript:v251];
                uint64_t v150 = v292;
                swift_unknownObjectRelease();

                if (!v230) {
                  goto LABEL_116;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
                sub_100522F00(v245, (uint64_t *)&unk_101674520);
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"applyChanges(to:store:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 805, (uint64_t)"Should not have to remove an asset at the same time it's marked for syncing.", 76, 2u, (uint64_t)_swiftEmptyArrayStorage);
                sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"applyChanges(to:store:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 805);
                if (!v230) {
                  goto LABEL_116;
                }
              }
LABEL_115:
              unint64_t v233 = __clz(__rbit64(v230));
              v230 &= v230 - 1;
            }
          }
          int64_t v237 = v162 + 1;
          if (v162 + 1 < v287)
          {
            unint64_t v236 = v286[v237];
            if (v236) {
              goto LABEL_125;
            }
            int64_t v237 = v162 + 2;
            if (v162 + 2 >= v287) {
              goto LABEL_140;
            }
            unint64_t v236 = v286[v237];
            if (v236)
            {
LABEL_125:
              int64_t v162 = v237;
              goto LABEL_126;
            }
            int64_t v237 = v162 + 3;
            if (v162 + 3 < v287)
            {
              unint64_t v236 = v286[v237];
              if (v236) {
                goto LABEL_125;
              }
              while (1)
              {
                int64_t v162 = v237 + 1;
                if (__OFADD__(v237, 1)) {
                  break;
                }
                if (v162 >= v287) {
                  goto LABEL_140;
                }
                unint64_t v236 = v286[v162];
                ++v237;
                if (v236) {
                  goto LABEL_126;
                }
              }
              __break(1u);
LABEL_147:
              swift_once();
LABEL_109:
              swift_beginAccess();
              uint64_t v220 = (void *)static OS_os_log.dataSync;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t v221 = swift_initStackObject();
              *(_OWORD *)(v221 + 16) = xmmword_10117D8C0;
              *(void *)(v221 + 56) = &type metadata for String;
              unint64_t v222 = sub_100528BE4();
              *(void *)(v221 + 64) = v222;
              *(void *)(v221 + 32) = v290;
              *(void *)(v221 + 40) = v162;
              id v223 = v220;
              uint64_t v224 = UUID.uuidString.getter();
              *(void *)(v221 + 96) = &type metadata for String;
              *(void *)(v221 + 104) = v222;
              *(void *)(v221 + 72) = v224;
              *(void *)(v221 + 80) = v225;
              uint64_t v226 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v223, (uint64_t)&_mh_execute_header, v226, (uint64_t)"Did not find asset information for asset name: %@ asset UUID: %@. Cannot sync this asset with CloudKit", 102, 2, v221);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              (*v262)(v150, v292);
            }
          }
        }
LABEL_140:
        swift_release();
        goto LABEL_141;
      }
      int64_t v162 = v105[1];
      uint64_t v290 = *v105;
      uint64_t v163 = (char *)v105 + *(int *)(v161 + 48);
      id v164 = *v270;
      (*v270)(v150, v163, v292);
      if (!*(void *)(v144 + 16) || (unint64_t v165 = sub_100955FC8(v150), (v166 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        if (qword_10166FB88 == -1) {
          goto LABEL_109;
        }
        goto LABEL_147;
      }
      uint64_t v267 = v164;
      int64_t v167 = v287;
      id v168 = v279;
      int64_t v169 = v162;
      uint64_t v170 = (char *)v279 + *(int *)(v287 + 48);
      uint64_t v171 = v265;
      sub_100522E9C(*(void *)(v144 + 56) + *(void *)(v266 + 72) * v165, (uint64_t)v265, (uint64_t *)&unk_10169A730);
      uint64_t v172 = (char *)v171 + *(int *)(v167 + 48);
      uint64_t v173 = *v171;
      *id v168 = *v171;
      uint64_t v174 = type metadata accessor for URL();
      uint64_t v175 = *(void *)(v174 - 8);
      (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v170, v172, v174);
      uint64_t v176 = v290;
      *(void *)&long long v293 = v290;
      *((void *)&v293 + 1) = v169;
      swift_retain();
      swift_bridgeObjectRetain();
      v177._countAndFlagsBits = 0x7465737341;
      v177._object = (void *)0xE500000000000000;
      String.append(_:)(v177);
      unint64_t v275 = v293;
      uint64_t v276 = v173;
      int64_t v178 = (char *)v286 + *(int *)(v167 + 48);
      *Class v286 = v173;
      uint64_t v179 = *(char **)(v175 + 16);
      uint64_t v283 = v175 + 16;
      int v284 = v170;
      uint64_t v180 = v170;
      int64_t v181 = v169;
      uint64_t v282 = v179;
      ((void (*)(char *, char *, uint64_t))v179)(v178, v180, v174);
      id v182 = objc_allocWithZone((Class)CKAsset);
      URL._bridgeToObjectiveC()(v183);
      uint64_t v185 = v184;
      [v182 initWithFileURL:v184];

      unint64_t v186 = *(void (**)(void, void))(v175 + 8);
      unint64_t v280 = v174;
      v281 = v186;
      uint64_t v285 = v175 + 8;
      v186(v178, v174);
      CKRecord.subscript.setter();
      *(void *)&long long v293 = v176;
      *((void *)&v293 + 1) = v169;
      swift_bridgeObjectRetain_n();
      v187._countAndFlagsBits = 0x74654D7465737341;
      v187._object = (void *)0xED00006174616461;
      String.append(_:)(v187);
      swift_bridgeObjectRelease();
      sub_100D2B1E4(v293, *((uint64_t *)&v293 + 1), 1, &v293);
      swift_bridgeObjectRelease();
      unint64_t v188 = *((void *)&v293 + 1);
      if (*((void *)&v293 + 1) >> 60 == 15)
      {
        uint64_t v189 = v292;
        v190 = v263;
        uint64_t v191 = v276;
      }
      else
      {
        uint64_t v192 = v293;
        type metadata accessor for PropertyListDecoder();
        swift_allocObject();
        PropertyListDecoder.init()();
        sub_100D3F084(&qword_10169A768, (void (*)(uint64_t))type metadata accessor for CRLAssetSyncMetadata);
        uint64_t v193 = (uint64_t)v257;
        uint64_t v194 = v274;
        uint64_t v195 = v289;
        dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
        uint64_t v196 = v292;
        if (v195)
        {
          swift_release();
          sub_100514260(v192, v188);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100522F00((uint64_t)v279, (uint64_t *)&unk_10169A730);
          (*v262)((uint64_t)v273, v196);
          swift_release();
          goto LABEL_61;
        }
        uint64_t v258 = v181;
        uint64_t v259 = v192;
        unint64_t v275 = v188;
        uint64_t v289 = 0;
        swift_release();
        v197 = v256;
        (*v288)(v256, v273, v196);
        uint64_t v198 = (char *)v286 + *(int *)(v287 + 48);
        uint64_t v191 = v276;
        *Class v286 = v276;
        unint64_t v199 = v280;
        ((void (*)(char *, char *, unint64_t))v282)(v198, v284, v280);
        uint64_t v200 = URL.pathExtension.getter();
        uint64_t v202 = v201;
        v281(v198, v199);
        uint64_t v203 = v264;
        v267(v264, v197, v196);
        uint64_t v204 = (uint64_t *)(v203 + *(int *)(v194 + 20));
        *uint64_t v204 = v200;
        v204[1] = v202;
        if ((static UUID.== infix(_:_:)() & 1) == 0) {
          goto LABEL_91;
        }
        id v205 = (void *)(v193 + *(int *)(v274 + 20));
        uint64_t v206 = v205[1];
        if (v206)
        {
          id v105 = v269;
          if (*v205 == v200 && v206 == v202)
          {
            sub_100514260(v259, v275);
            sub_100D426E4(v264, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
            sub_100D426E4(v193, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
            uint64_t v25 = v268;
LABEL_97:
            swift_release();
            swift_bridgeObjectRelease();
            sub_100522F00((uint64_t)v279, (uint64_t *)&unk_10169A730);
            uint64_t v150 = (uint64_t)v273;
            (*v262)((uint64_t)v273, v292);
            uint64_t v144 = v261;
            goto LABEL_94;
          }
          char v219 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_100514260(v259, v275);
          sub_100D426E4(v264, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
          sub_100D426E4(v193, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
          v190 = v263;
          uint64_t v25 = v268;
          int64_t v181 = v258;
          if (v219) {
            goto LABEL_97;
          }
          uint64_t v189 = v292;
        }
        else
        {
LABEL_91:
          sub_100514260(v259, v275);
          sub_100D426E4(v264, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
          sub_100D426E4(v193, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
          uint64_t v189 = v292;
          v190 = v263;
          int64_t v181 = v258;
        }
      }
      [v291 encryptedValues];
      *(void *)&long long v293 = v290;
      *((void *)&v293 + 1) = v181;
      swift_bridgeObjectRetain();
      v207._countAndFlagsBits = 0x74654D7465737341;
      v207._object = (void *)0xED00006174616461;
      String.append(_:)(v207);
      swift_bridgeObjectRelease();
      uint64_t v290 = v293;
      uint64_t v208 = (char *)v286 + *(int *)(v287 + 48);
      *Class v286 = v191;
      unint64_t v209 = v280;
      ((void (*)(char *, char *, unint64_t))v282)(v208, v284, v280);
      (*v288)(v190, (char *)(v191 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID), v189);
      uint64_t v211 = *(void *)(v191 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
      uint64_t v210 = *(void *)(v191 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v212 = &v190[*(int *)(v274 + 20)];
      *(void *)uint64_t v212 = v211;
      *((void *)v212 + 1) = v210;
      v281(v208, v209);
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_100D3F084((unint64_t *)&unk_10169A758, (void (*)(uint64_t))type metadata accessor for CRLAssetSyncMetadata);
      uint64_t v213 = (uint64_t)v190;
      uint64_t v214 = v289;
      uint64_t v215 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      uint64_t v289 = v214;
      if (v214) {
        goto LABEL_149;
      }
      uint64_t v217 = v215;
      uint64_t v218 = v216;
      swift_getObjectType();
      swift_release();
      sub_100D426E4(v213, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
      uint64_t v294 = (ValueMetadata *)&type metadata for Data;
      uint64_t v295 = &protocol witness table for Data;
      *(void *)&long long v293 = v217;
      *((void *)&v293 + 1) = v218;
      CKRecordKeyValueSetting.subscript.setter();
      swift_unknownObjectRelease();
      sub_100522F00((uint64_t)v279, (uint64_t *)&unk_10169A730);
      uint64_t v150 = (uint64_t)v273;
      (*v262)((uint64_t)v273, v189);
      uint64_t v25 = v268;
      id v105 = v269;
      uint64_t v144 = v261;
LABEL_94:
      unint64_t v148 = v277;
      uint64_t v149 = v278;
      if (v277) {
        goto LABEL_66;
      }
LABEL_68:
      uint64_t v158 = v149 + 1;
      if (__OFADD__(v149, 1)) {
        goto LABEL_144;
      }
      if (v158 >= v255)
      {
LABEL_78:
        uint64_t v278 = v149;
        goto LABEL_79;
      }
      unint64_t v159 = v254[v158];
      if (v159) {
        goto LABEL_71;
      }
      v149 += 2;
      if (v158 + 1 < v255) {
        break;
      }
LABEL_107:
      uint64_t v278 = v158;
LABEL_79:
      uint64_t v160 = sub_1005057FC(&qword_10169A750);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 56))(v25, 1, 1, v160);
      uint64_t v277 = 0;
    }
    unint64_t v159 = v254[v149];
    if (v159) {
      goto LABEL_74;
    }
    if (v158 + 2 >= v255) {
      goto LABEL_78;
    }
    unint64_t v159 = v254[v158 + 2];
    if (!v159) {
      break;
    }
    v158 += 2;
LABEL_71:
    uint64_t v277 = (v159 - 1) & v159;
    uint64_t v278 = v158;
  }
  uint64_t v149 = v158 + 3;
  if (v158 + 3 >= v255)
  {
    uint64_t v278 = v158 + 2;
    goto LABEL_79;
  }
  unint64_t v159 = v254[v149];
  if (v159)
  {
LABEL_74:
    uint64_t v158 = v149;
    goto LABEL_71;
  }
  while (1)
  {
    uint64_t v158 = v149 + 1;
    if (__OFADD__(v149, 1)) {
      break;
    }
    if (v158 >= v255)
    {
      uint64_t v158 = v253;
      goto LABEL_107;
    }
    unint64_t v159 = v254[v158];
    ++v149;
    if (v159) {
      goto LABEL_71;
    }
  }
  __break(1u);
LABEL_149:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

Class sub_100D34DDC(uint64_t a1)
{
  return sub_100D326E4(a1);
}

uint64_t sub_100D34E00(void *a1, uint64_t a2)
{
  return sub_100D32A7C(a1, a2);
}

CKRecordID sub_100D34E24()
{
  Class v1 = sub_100D3EC2C(*v0 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier);
  sub_10050BF48(0, &qword_10167BED0);
  v2._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return CKRecordID.init(recordName:zoneID:)(v2, (CKRecordZoneID)v1);
}

unint64_t sub_100D34E90(char a1)
{
  unint64_t result = 0x6574496472616F42;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6472616F42;
      break;
    case 2:
      unint64_t result = 0x74654D6472616F42;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x425F63696C627550;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0x74696B64756F6C63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100D34FC4()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform34CRLBoardShareSyncLocalChangeRecord_unsyncedChanges);
}

void *sub_100D34FD8()
{
  Class v1 = *(void **)(*v0 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare);
  id v2 = v1;
  return v1;
}

CKRecordID sub_100D35010()
{
  Class v1 = sub_100D3EC2C(*v0 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
  sub_10050BF48(0, &qword_10167BED0);
  v2._countAndFlagsBits = UUID.uuidString.getter();
  return CKRecordID.init(recordName:zoneID:)(v2, (CKRecordZoneID)v1);
}

BOOL sub_100D35080()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges) != 0;
}

uint64_t sub_100D3509C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v195 = a2;
  uint64_t v201 = 0;
  uint64_t v184 = type metadata accessor for CRLAssetSyncMetadata();
  __chkstk_darwin(v184, v5);
  unint64_t v183 = (double *)((char *)&v169 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v202 = sub_1005057FC((uint64_t *)&unk_10169A730);
  uint64_t v182 = *(void *)(v202 - 8);
  __chkstk_darwin(v202, v7);
  int64_t v181 = (int64_t *)((char *)&v169 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9, v10);
  uint64_t v180 = (int64_t *)((char *)&v169 - v11);
  __chkstk_darwin(v12, v13);
  Swift::String v187 = (int64_t *)((char *)&v169 - v14);
  uint64_t v15 = sub_1005057FC(&qword_101699718);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v185 = (int64_t *)((char *)&v169 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18, v19);
  unint64_t v186 = (int64_t *)((char *)&v169 - v20);
  uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v193 = (void (*)(char *, char *, uint64_t))((char *)&v169 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24, v25);
  uint64_t v192 = (void (*)(char *, uint64_t))((char *)&v169 - v26);
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v198 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v28);
  uint64_t v203 = (char *)&v169 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  uint64_t v174 = (char *)&v169 - v32;
  __chkstk_darwin(v33, v34);
  uint64_t v175 = (char *)&v169 - v35;
  uint64_t v199 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v199, v36);
  uint64_t v196 = (uint64_t)&v169 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (char *)&v169 - v40;
  uint64_t v42 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
  uint64_t v43 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 16);
  *(void *)&long long v208 = &type metadata for UInt64;
  *((void *)&v208 + 1) = &protocol witness table for UInt64;
  uint64_t v206 = v43;
  uint64_t v44 = sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  CKRecordKeyValueSetting.subscript.setter();
  *(void *)&long long v208 = &type metadata for UInt64;
  *((void *)&v208 + 1) = &protocol witness table for UInt64;
  uint64_t v206 = 0x1000000000000;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v45 = v42[1];
  *(void *)&long long v208 = &type metadata for UInt64;
  *((void *)&v208 + 1) = &protocol witness table for UInt64;
  uint64_t v206 = v45;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v46 = *v42;
  *(void *)&long long v208 = &type metadata for UInt64;
  *((void *)&v208 + 1) = &protocol witness table for UInt64;
  uint64_t v206 = v46;
  uint64_t v194 = "onForGoodEnoughFidelity";
  id v204 = a1;
  CKRecordKeyValueSetting.subscript.setter();
  id v205 = _swiftEmptyDictionarySingleton;
  uint64_t v200 = OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData;
  uint64_t v47 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData);
  uint64_t v197 = v27;
  uint64_t v188 = v44;
  if (v47)
  {
    uint64_t v191 = v3;
    uint64_t v48 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext + 24);
    uint64_t v49 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext + 32);
    sub_10050F848((void *)(v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext), v48);
    uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
    swift_retain();
    uint64_t v51 = (double *)v50(v48, v49);
    uint64_t v52 = v47 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100D42F4C(v52, (uint64_t)v41, type metadata accessor for CRLBoardCRDTData);
    if (qword_10166EE10 == -1) {
      goto LABEL_3;
    }
    goto LABEL_66;
  }
  Swift::String v57 = v175;
  uint64_t v58 = (uint64_t)v192;
LABEL_10:
  uint64_t v64 = v198;
  uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56);
  v65(v58, 1, 1, v27);
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v57, v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID, v27);
  sub_100522F00(v58, (uint64_t *)&unk_101674520);
LABEL_12:
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t v66 = UUID.uuidString.getter();
  uint64_t v68 = v67;
  id v69 = [v204 recordID];
  id v70 = [v69 zoneID];

  v71._countAndFlagsBits = v66;
  v71._object = v68;
  Class isa = CKRecordID.init(recordName:zoneID:)(v71, (CKRecordZoneID)v70).super.isa;
  id v73 = objc_allocWithZone((Class)CKReference);
  Class v172 = isa;
  [v73 initWithRecordID:isa action:0];
  CKRecord.subscript.setter();
  uint64_t v74 = *(void *)(v3 + v200);
  if (v74)
  {
    uint64_t v75 = v74 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v76 = v196;
    sub_100D42F4C(v75, v196, type metadata accessor for CRLBoardCRDTData);
    type metadata accessor for CRLBoardRootContainerAffinityCRDTData(0);
    sub_1005057FC(&qword_101674550);
    uint64_t v77 = (uint64_t)v193;
    CRRegister.wrappedValue.getter();
    sub_100D426E4(v76, type metadata accessor for CRLBoardCRDTData);
    uint64_t v78 = v197;
    uint64_t v79 = v198;
    v65(v77, 0, 1, v197);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v174, v77, v78);
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v78 = v197;
    uint64_t v79 = v198;
    uint64_t v77 = (uint64_t)v193;
    v65((uint64_t)v193, 1, 1, v197);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v174, v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v78);
  sub_100522F00(v77, (uint64_t *)&unk_101674520);
LABEL_17:
  uint64_t v80 = UUID.uuidString.getter();
  int v82 = v81;
  id v83 = [v204 recordID];
  id v84 = [v83 zoneID];

  v85._countAndFlagsBits = v80;
  v85._object = v82;
  v86.super.Class isa = CKRecordID.init(recordName:zoneID:)(v85, (CKRecordZoneID)v84).super.isa;
  [objc_allocWithZone((Class)CKReference) initWithRecordID:v86.super.isa action:0];
  CKRecord.subscript.setter();
  if (*(void *)(v3 + v200))
  {
    unint64_t v87 = sub_100A394EC((uint64_t)_swiftEmptyArrayStorage);
    __chkstk_darwin(v87, v88);
    *(&v169 - 2) = (int64_t)&v205;
    uint64_t v89 = v201;
    sub_100D3EE0C(v90, (void (*)(uint64_t, uint64_t, uint64_t))sub_100D426A0);
    uint64_t v201 = v89;
    swift_bridgeObjectRelease();
  }
  uint64_t v91 = v194;
  *(void *)&long long v208 = &type metadata for Int;
  *((void *)&v208 + 1) = &protocol witness table for Int;
  uint64_t v206 = 0;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v92 = sub_100D2A93C(0xD000000000000012, (unint64_t)v91 | 0x8000000000000000, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v93)
  {
    uint64_t v92 = 0;
    long long v208 = 0u;
    long long v207 = 0u;
  }
  else
  {
    *(void *)&long long v208 = &type metadata for UInt64;
    *((void *)&v208 + 1) = &protocol witness table for UInt64;
  }
  uint64_t v206 = v92;
  CKRecordKeyValueSetting.subscript.setter();
  *(void *)&long long v208 = &type metadata for Int;
  *((void *)&v208 + 1) = &protocol witness table for Int;
  uint64_t v206 = 0;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v94 = swift_bridgeObjectRetain();
  uint64_t v51 = sub_1006BA5B4(v94);
  uint64_t v95 = swift_bridgeObjectRelease();
  __chkstk_darwin(v95, v96);
  *(&v169 - 2) = v97;
  *(&v169 - 1) = (int64_t)v51;
  sub_1005057FC((uint64_t *)&unk_10169A740);
  uint64_t v98 = v201;
  OS_dispatch_queue.sync<A>(execute:)();
  if (v98)
  {
    swift_release();
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v99 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getErrorValue();
    id v101 = v99;
    uint64_t v102 = Error.localizedDescription.getter();
    uint64_t v104 = v103;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v102;
    *(void *)(inited + 40) = v104;
    uint64_t v105 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v101, (uint64_t)&_mh_execute_header, v105, (uint64_t)"Failed to fetch asset rows for setting on cloud record. Error: %@", 65, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_errorRelease();
    uint64_t v106 = v197;
    unint64_t v107 = *(void (**)(char *, uint64_t))(v198 + 8);
    v107(v174, v197);
LABEL_62:
    v107(v175, v106);
    return swift_bridgeObjectRelease();
  }
  Class v170 = v86.super.isa;
  swift_release();
  uint64_t v179 = v206;
  uint64_t v108 = v205[8];
  uint64_t v171 = v205 + 8;
  uint64_t v109 = 1 << *((unsigned char *)v205 + 32);
  uint64_t v110 = -1;
  if (v109 < 64) {
    uint64_t v110 = ~(-1 << v109);
  }
  unint64_t v111 = v110 & v108;
  uint64_t v112 = v198;
  uint64_t v189 = (void (**)(char *, uint64_t))(v198 + 16);
  Swift::String v177 = (void (**)(char *, char *, uint64_t))(v198 + 32);
  int64_t v178 = (void (**)(char *, uint64_t))(v198 + 8);
  int64_t v173 = (unint64_t)(v109 + 63) >> 6;
  int64_t v169 = v173 - 1;
  uint64_t v176 = v205;
  swift_bridgeObjectRetain();
  uint64_t v113 = 0;
  uint64_t v114 = v197;
  uint64_t v115 = v187;
  if (v111)
  {
LABEL_29:
    uint64_t v200 = 0;
    uint64_t v201 = (v111 - 1) & v111;
    uint64_t v199 = v113;
    unint64_t v116 = __clz(__rbit64(v111)) | (v113 << 6);
    uint64_t v41 = v203;
LABEL_30:
    uint64_t v117 = v176[7];
    uint64_t v118 = (void *)(v176[6] + 16 * v116);
    uint64_t v119 = v118[1];
    uint64_t v120 = (uint64_t)v185;
    *uint64_t v185 = *v118;
    *(void *)(v120 + 8) = v119;
    uint64_t v121 = v117 + *(void *)(v112 + 72) * v116;
    uint64_t v122 = sub_1005057FC(&qword_10169A750);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v120 + *(int *)(v122 + 48), v121, v114);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v120, 0, 1, v122);
    swift_bridgeObjectRetain();
    goto LABEL_45;
  }
  while (1)
  {
    int64_t v123 = v113 + 1;
    uint64_t v41 = v203;
    if (__OFADD__(v113, 1))
    {
      __break(1u);
LABEL_66:
      swift_once();
LABEL_3:
      uint64_t v53 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v53, (uint64_t)qword_10171A2D8);
      sub_100D3F084((unint64_t *)&unk_10169A0D0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
      uint64_t v54 = v201;
      uint64_t v55 = CRDT.serializedData(_:version:)();
      if (v54)
      {
        sub_100D426E4((uint64_t)v41, type metadata accessor for CRLBoardCRDTData);
        swift_errorRelease();
        swift_release();

        uint64_t v201 = 0;
      }
      else
      {
        uint64_t v59 = v55;
        unint64_t v60 = v56;
        uint64_t v201 = 0;
        sub_100D426E4((uint64_t)v41, type metadata accessor for CRLBoardCRDTData);
        swift_release();

        *(void *)&long long v208 = &type metadata for Data;
        *((void *)&v208 + 1) = &protocol witness table for Data;
        uint64_t v206 = v59;
        *(void *)&long long v207 = v60;
        sub_100510D4C(v59, v60);
        CKRecordKeyValueSetting.subscript.setter();
        sub_100510084(v59, v60);
      }
      uint64_t v27 = v197;
      Swift::String v57 = v175;
      uint64_t v3 = v191;
      uint64_t v58 = (uint64_t)v192;
      uint64_t v61 = *(void *)(v191 + v200);
      if (!v61) {
        goto LABEL_10;
      }
      uint64_t v62 = v61 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v63 = v196;
      sub_100D42F4C(v62, v196, type metadata accessor for CRLBoardCRDTData);
      sub_1005057FC(&qword_101674550);
      CRRegister.wrappedValue.getter();
      sub_100D426E4(v63, type metadata accessor for CRLBoardCRDTData);
      uint64_t v64 = v198;
      uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56);
      v65(v58, 0, 1, v27);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v58, 1, v27) == 1) {
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v57, v58, v27);
      goto LABEL_12;
    }
    if (v123 >= v173) {
      goto LABEL_43;
    }
    unint64_t v124 = v171[v123];
    if (v124) {
      goto LABEL_34;
    }
    v113 += 2;
    if (v123 + 1 >= v173)
    {
      uint64_t v200 = 0;
LABEL_39:
      uint64_t v199 = v123;
      goto LABEL_44;
    }
    unint64_t v124 = v171[v113];
    if (v124) {
      goto LABEL_37;
    }
    if (v123 + 2 >= v173)
    {
LABEL_43:
      uint64_t v199 = v113;
      uint64_t v200 = 0;
    }
    else
    {
      unint64_t v124 = v171[v123 + 2];
      if (v124)
      {
        v123 += 2;
LABEL_34:
        uint64_t v200 = 0;
        uint64_t v201 = (v124 - 1) & v124;
        unint64_t v116 = __clz(__rbit64(v124)) + (v123 << 6);
        uint64_t v199 = v123;
        goto LABEL_30;
      }
      uint64_t v113 = v123 + 3;
      if (v123 + 3 < v173)
      {
        unint64_t v124 = v171[v113];
        if (!v124)
        {
          while (1)
          {
            int64_t v123 = v113 + 1;
            if (__OFADD__(v113, 1)) {
              break;
            }
            if (v123 >= v173)
            {
              uint64_t v200 = 0;
              int64_t v123 = v169;
              goto LABEL_39;
            }
            unint64_t v124 = v171[v123];
            ++v113;
            if (v124) {
              goto LABEL_34;
            }
          }
          __break(1u);
LABEL_68:
          uint64_t result = swift_unexpectedError();
          __break(1u);
          return result;
        }
LABEL_37:
        int64_t v123 = v113;
        goto LABEL_34;
      }
      uint64_t v199 = v123 + 2;
      uint64_t v200 = 0;
    }
LABEL_44:
    uint64_t v125 = sub_1005057FC(&qword_10169A750);
    uint64_t v120 = (uint64_t)v185;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v185, 1, 1, v125);
    uint64_t v201 = 0;
LABEL_45:
    uint64_t v126 = v179;
    uint64_t v127 = v186;
    sub_10051B3EC(v120, (uint64_t)v186, &qword_101699718);
    uint64_t v128 = sub_1005057FC(&qword_10169A750);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v128 - 8) + 48))(v127, 1, v128) == 1) {
      break;
    }
    uint64_t v130 = *v127;
    uint64_t v129 = v127[1];
    (*v177)(v41, (char *)v127 + *(int *)(v128 + 48), v114);
    if (!*(void *)(v126 + 16) || (unint64_t v131 = sub_100955FC8((uint64_t)v41), (v132 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v160 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v161 = swift_initStackObject();
      *(_OWORD *)(v161 + 16) = xmmword_10117D8C0;
      *(void *)(v161 + 56) = &type metadata for String;
      unint64_t v162 = sub_100528BE4();
      *(void *)(v161 + 64) = v162;
      *(void *)(v161 + 32) = v130;
      *(void *)(v161 + 40) = v129;
      id v163 = v160;
      uint64_t v164 = UUID.uuidString.getter();
      *(void *)(v161 + 96) = &type metadata for String;
      *(void *)(v161 + 104) = v162;
      *(void *)(v161 + 72) = v164;
      *(void *)(v161 + 80) = v165;
      uint64_t v166 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v163, (uint64_t)&_mh_execute_header, v166, (uint64_t)"Did not find asset information for asset name: %@ asset UUID: %@. Cannot sync this asset with CloudKit", 102, 2, v161);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      unint64_t v107 = *v178;
      uint64_t v106 = v197;
      (*v178)(v41, v197);
      swift_release();
      v107(v174, v106);
      goto LABEL_62;
    }
    uint64_t v133 = v202;
    uint64_t v134 = (char *)v115 + *(int *)(v202 + 48);
    uint64_t v135 = v180;
    sub_100522E9C(*(void *)(v126 + 56) + *(void *)(v182 + 72) * v131, (uint64_t)v180, (uint64_t *)&unk_10169A730);
    uint64_t v136 = (char *)v135 + *(int *)(v133 + 48);
    uint64_t v137 = *v135;
    *uint64_t v115 = *v135;
    uint64_t v191 = type metadata accessor for URL();
    uint64_t v138 = *(void **)(v191 - 8);
    id v139 = (void (*)(char *, char *, uint64_t))v138[4];
    uint64_t v194 = v134;
    v139(v134, v136, v191);
    uint64_t v206 = v130;
    *(void *)&long long v207 = v129;
    swift_retain();
    swift_bridgeObjectRetain();
    v140._countAndFlagsBits = 0x7465737341;
    v140._object = (void *)0xE500000000000000;
    String.append(_:)(v140);
    uint64_t v195 = v207;
    uint64_t v196 = v206;
    uint64_t v141 = v181;
    uint64_t v142 = (char *)v181 + *(int *)(v133 + 48);
    *int64_t v181 = v137;
    uint64_t v193 = (void (*)(char *, char *, uint64_t))v138[2];
    uint64_t v143 = v134;
    uint64_t v144 = v191;
    v193(v142, v143, v191);
    id v145 = objc_allocWithZone((Class)CKAsset);
    URL._bridgeToObjectiveC()(v146);
    uint64_t v190 = v130;
    unint64_t v148 = v147;
    [v145 initWithFileURL:v147];

    uint64_t v192 = (void (*)(char *, uint64_t))v138[1];
    uint64_t v149 = v144;
    v192(v142, v144);
    CKRecord.subscript.setter();
    uint64_t v206 = v190;
    *(void *)&long long v207 = v129;
    swift_bridgeObjectRetain();
    v150._countAndFlagsBits = 0x74654D7465737341;
    v150._object = (void *)0xED00006174616461;
    String.append(_:)(v150);
    swift_bridgeObjectRelease();
    uint64_t v195 = v207;
    uint64_t v196 = v206;
    uint64_t v151 = (char *)v141 + *(int *)(v202 + 48);
    *uint64_t v141 = v137;
    v193(v151, v194, v144);
    uint64_t v51 = v183;
    uint64_t v114 = v197;
    (*v189)((char *)v183, v137 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID);
    uint64_t v153 = *(void *)(v137 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    uint64_t v152 = *(void *)(v137 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v154 = (void *)((char *)v51 + *(int *)(v184 + 20));
    *uint64_t v154 = v153;
    v154[1] = v152;
    v192(v151, v149);
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    dispatch thunk of PropertyListEncoder.outputFormat.setter();
    sub_100D3F084((unint64_t *)&unk_10169A758, (void (*)(uint64_t))type metadata accessor for CRLAssetSyncMetadata);
    uint64_t v155 = v200;
    uint64_t v156 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    if (v155) {
      goto LABEL_68;
    }
    uint64_t v158 = v156;
    uint64_t v159 = v157;
    swift_release();
    sub_100D426E4((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    *(void *)&long long v208 = &type metadata for Data;
    *((void *)&v208 + 1) = &protocol witness table for Data;
    uint64_t v206 = v158;
    *(void *)&long long v207 = v159;
    CKRecordKeyValueSetting.subscript.setter();
    uint64_t v115 = v187;
    sub_100522F00((uint64_t)v187, (uint64_t *)&unk_10169A730);
    (*v178)(v203, v114);
    uint64_t v112 = v198;
    uint64_t v113 = v199;
    unint64_t v111 = v201;
    if (v201) {
      goto LABEL_29;
    }
  }
  swift_release();

  swift_bridgeObjectRelease();
  id v168 = *v178;
  (*v178)(v174, v114);
  v168(v175, v114);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100D36788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a3, (uint64_t)v13, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101674520);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
  if (qword_101670198 != -1) {
    swift_once();
  }
  sub_100556B74(v14, (uint64_t)qword_10171CB50);
  sub_100D3F084((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v18, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
    swift_bridgeObjectRetain();
    sub_10057EEC4((uint64_t)v9, a1, a2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

Class sub_100D36A34(uint64_t a1, uint64_t a2)
{
  Class isa = sub_100D42520(a2).super.isa;
  sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  Swift::String v4 = isa;
  v5._countAndFlagsBits = 0x425F63696C627550;
  v5._object = (void *)0xEC0000006472616FLL;
  Class v6 = CKRecord.init(recordType:recordID:)(v5, (CKRecordID)v4).super.isa;
  sub_100D3509C(v6, a1);

  return v6;
}

Class sub_100D36AD8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::String v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData);
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_syncData + 8);
  if (v5 >> 60 == 15) {
    goto LABEL_3;
  }
  uint64_t v6 = *v4;
  id v7 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_1005FA2A0(v6, v5);
  id v19 = sub_100D41CE4();
  id v20 = [objc_allocWithZone((Class)CKRecord) initWithCoder:v19];
  sub_100514260(v6, v5);
  Class v21 = (Class)v20;

  if (!v21)
  {
LABEL_3:
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    Class v8 = sub_100D3EC2C(v2 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier);
    sub_10050BF48(0, &qword_10167BED0);
    v9._countAndFlagsBits = UUID.uuidString.getter();
    Class isa = CKRecordID.init(recordName:zoneID:)(v9, (CKRecordZoneID)v8).super.isa;
    v11._countAndFlagsBits = 0x6472616F42;
    v11._object = (void *)0xE500000000000000;
    Class v21 = CKRecord.init(recordType:recordID:)(v11, (CKRecordID)isa).super.isa;
    if ((unint64_t)v4[1] >> 60 != 15)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v12 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v14 = v12;
      uint64_t v15 = UUID.uuidString.getter();
      uint64_t v17 = v16;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v15;
      *(void *)(inited + 40) = v17;
      uint64_t v18 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v18, (uint64_t)"Failed to use existing sync data to decode CKRecord for board with id %@", 72, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
    }
  }
  else
  {
  }
  sub_100D36E04((char *)v21, a1);
  return v21;
}

uint64_t sub_100D36E04(char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v298 = a2;
  uint64_t v305 = 0;
  uint64_t v284 = type metadata accessor for CRLAssetSyncMetadata();
  __chkstk_darwin(v284, v5);
  unint64_t v275 = (char *)&v270 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v277 = (uint64_t)&v270 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v278 = (char *)&v270 - v12;
  uint64_t v303 = sub_1005057FC((uint64_t *)&unk_10169A730);
  uint64_t v280 = *(void *)(v303 - 8);
  __chkstk_darwin(v303, v13);
  v302 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v270 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15, v16);
  uint64_t v279 = (int64_t *)((char *)&v270 - v17);
  __chkstk_darwin(v18, v19);
  long long v293 = (int64_t *)((char *)&v270 - v20);
  uint64_t v21 = sub_1005057FC(&qword_101699718);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v285 = (char *)&v270 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  v281 = (int64_t *)((char *)&v270 - v26);
  uint64_t v27 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v27 - 8, v28);
  Class v286 = (char *)&v270 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  id v291 = (char *)&v270 - v32;
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (char *)&v270 - v35;
  uint64_t v308 = type metadata accessor for UUID();
  uint64_t v301 = *(void *)(v308 - 8);
  __chkstk_darwin(v308, v37);
  uint64_t v273 = (char *)&v270 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39, v40);
  uint64_t v42 = (char *)&v270 - v41;
  __chkstk_darwin(v43, v44);
  uint64_t v46 = (char *)&v270 - v45;
  __chkstk_darwin(v47, v48);
  uint64_t v50 = (char *)&v270 - v49;
  uint64_t v299 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v299, v51);
  unint64_t v292 = (unint64_t)&v270 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53, v54);
  unint64_t v56 = (char *)&v270 - v55;
  uint64_t v297 = OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges;
  Swift::String v57 = *(void (**)(char *, uint64_t, uint64_t))((char *)v3
                                                        + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedChanges);
  uint64_t v306 = a1;
  uint64_t v307 = v3;
  uint64_t v290 = v42;
  uint64_t v295 = v57;
  int64_t v300 = (int64_t)v50;
  if ((v57 & 4) == 0)
  {
    if ((v57 & 0x10) == 0)
    {
      LODWORD(v296) = 0;
      LODWORD(v294) = 0;
      int v58 = 0;
      if ((v57 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_7:
      LODWORD(v289) = v58;
      uint64_t v288 = v46;
      uint64_t v59 = (uint64_t)v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions;
      uint64_t v60 = *(void *)((char *)v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
      id v311 = &protocol witness table for UInt64;
      v310 = (ValueMetadata *)&type metadata for UInt64;
      *(void *)&long long v309 = v60;
      sub_10050BF48(0, (unint64_t *)&qword_10167C060);
      CKRecordKeyValueSetting.subscript.setter();
      v310 = (ValueMetadata *)&type metadata for UInt64;
      id v311 = &protocol witness table for UInt64;
      *(void *)&long long v309 = 0x1000000000000;
      CKRecordKeyValueSetting.subscript.setter();
      v310 = &type metadata for CRLFeatureFlags;
      id v311 = (void *)sub_1005396A8();
      LOBYTE(v309) = 24;
      char v61 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v309);
      if (v61)
      {
        id v62 = [a1 encryptedValues];
        swift_getObjectType();
        uint64_t v63 = *(void *)(v59 + 8);
        id v311 = &protocol witness table for UInt64;
        v310 = (ValueMetadata *)&type metadata for UInt64;
        *(void *)&long long v309 = v63;
        CKRecordKeyValueSetting.subscript.setter();
        swift_unknownObjectRelease();
      }
      uint64_t v313 = _swiftEmptyDictionarySingleton;
      uint64_t v312 = &_swiftEmptySetSingleton;
      uint64_t v3 = v307;
      goto LABEL_16;
    }
    LODWORD(v294) = 0;
    int v58 = 0;
    goto LABEL_11;
  }
  int v58 = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_tombstoned);
  LODWORD(v294) = v58 ^ 1;
  if ((v57 & 0x10) != 0)
  {
LABEL_11:
    LODWORD(v296) = *((unsigned __int8 *)v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted);
    if (v57) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  LODWORD(v296) = 0;
  if (v57) {
    goto LABEL_7;
  }
LABEL_12:
  uint64_t v312 = &_swiftEmptySetSingleton;
  uint64_t v313 = _swiftEmptyDictionarySingleton;
  if ((v57 & 2) == 0)
  {
    uint64_t v64 = v285;
    uint64_t v65 = v297;
    if (!v58) {
      goto LABEL_40;
    }
    goto LABEL_38;
  }
  LODWORD(v289) = v58;
  uint64_t v288 = v46;
LABEL_16:
  v304 = (void (**)(char *, const char *, uint64_t))OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData;
  uint64_t v66 = *(void *)((char *)v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_boardData);
  if (!v66)
  {
    int64_t v78 = v300;
    uint64_t v77 = v301;
LABEL_27:
    Swift::String v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
    uint64_t v86 = v308;
    v85(v36, 1, 1, v308);
    goto LABEL_28;
  }
  uint64_t v67 = (void *)((char *)v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext);
  uint64_t v68 = *(void *)((char *)v3 + OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_persistenceContext + 24);
  uint64_t v69 = v67[4];
  sub_10050F848(v67, v68);
  id v70 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8);
  swift_retain();
  Swift::String v71 = (void *)v70(v68, v69);
  uint64_t v72 = v66 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D42F4C(v72, (uint64_t)v56, type metadata accessor for CRLBoardCRDTData);
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v73 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v73, (uint64_t)qword_10171A2D8);
  sub_100D3F084((unint64_t *)&unk_10169A0D0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
  uint64_t v74 = v305;
  uint64_t v75 = CRDT.serializedData(_:version:)();
  if (v74)
  {
    sub_100D426E4((uint64_t)v56, type metadata accessor for CRLBoardCRDTData);
    swift_errorRelease();
    swift_release();

    uint64_t v305 = 0;
  }
  else
  {
    uint64_t v79 = v75;
    unint64_t v80 = v76;
    uint64_t v305 = 0;
    sub_100D426E4((uint64_t)v56, type metadata accessor for CRLBoardCRDTData);
    swift_release();

    id v81 = [v306 encryptedValues];
    swift_getObjectType();
    v310 = (ValueMetadata *)&type metadata for Data;
    id v311 = &protocol witness table for Data;
    *(void *)&long long v309 = v79;
    *((void *)&v309 + 1) = v80;
    sub_100510D4C(v79, v80);
    CKRecordKeyValueSetting.subscript.setter();
    sub_100510084(v79, v80);
    swift_unknownObjectRelease();
  }
  int64_t v78 = v300;
  uint64_t v77 = v301;
  uint64_t v3 = v307;
  uint64_t v82 = *(uint64_t *)((char *)v304 + (void)v307);
  if (!v82)
  {
    a1 = v306;
    goto LABEL_27;
  }
  uint64_t v83 = v82 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v84 = v292;
  sub_100D42F4C(v83, v292, type metadata accessor for CRLBoardCRDTData);
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D426E4(v84, type metadata accessor for CRLBoardCRDTData);
  Swift::String v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
  uint64_t v86 = v308;
  v85(v36, 0, 1, v308);
  int v87 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48))(v36, 1, v86);
  a1 = v306;
  if (v87 != 1)
  {
    (*(void (**)(int64_t, char *, uint64_t))(v77 + 32))(v78, v36, v86);
    goto LABEL_29;
  }
LABEL_28:
  (*(void (**)(int64_t, uint64_t, uint64_t))(v77 + 16))(v78, (uint64_t)v3 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_rootContainerUUID, v86);
  sub_100522F00((uint64_t)v36, (uint64_t *)&unk_101674520);
LABEL_29:
  uint64_t v88 = v3;
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t v89 = UUID.uuidString.getter();
  uint64_t v91 = v90;
  id v92 = [a1 recordID];
  id v93 = [v92 zoneID];

  v94._countAndFlagsBits = v89;
  v94._object = v91;
  v95.super.Class isa = CKRecordID.init(recordName:zoneID:)(v94, (CKRecordZoneID)v93).super.isa;
  [objc_allocWithZone((Class)CKReference) initWithRecordID:v95.super.isa action:0];
  CKRecord.subscript.setter();
  uint64_t v96 = *(uint64_t *)((char *)v304 + (void)v88);
  int64_t v97 = v88;
  if (v96)
  {
    uint64_t v98 = v96 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v99 = v292;
    sub_100D42F4C(v98, v292, type metadata accessor for CRLBoardCRDTData);
    type metadata accessor for CRLBoardRootContainerAffinityCRDTData(0);
    sub_1005057FC(&qword_101674550);
    uint64_t v100 = (uint64_t)v291;
    CRRegister.wrappedValue.getter();
    sub_100D426E4(v99, type metadata accessor for CRLBoardCRDTData);
    uint64_t v101 = v301;
    uint64_t v102 = v308;
    v85((char *)v100, 0, 1, v308);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v100, 1, v102) != 1)
    {
      uint64_t v103 = v288;
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v288, v100, v102);
      goto LABEL_34;
    }
  }
  else
  {
    uint64_t v101 = v301;
    uint64_t v100 = (uint64_t)v291;
    uint64_t v102 = v308;
    v85(v291, 1, 1, v308);
  }
  uint64_t v103 = v288;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v288, (uint64_t)v97 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_alternateRootContainerUUID, v102);
  sub_100522F00(v100, (uint64_t *)&unk_101674520);
LABEL_34:
  uint64_t v104 = v97;
  uint64_t v105 = UUID.uuidString.getter();
  unint64_t v107 = v106;
  a1 = v306;
  id v108 = [v306 recordID];
  id v109 = [v108 zoneID];

  v110._countAndFlagsBits = v105;
  v110._object = v107;
  v111.super.Class isa = CKRecordID.init(recordName:zoneID:)(v110, (CKRecordZoneID)v109).super.isa;
  [objc_allocWithZone((Class)CKReference) initWithRecordID:v111.super.isa action:0];
  CKRecord.subscript.setter();
  if (*(void (**)(char *, const char *, uint64_t))((char *)v304 + (void)v104))
  {
    unint64_t v112 = sub_100A394EC((uint64_t)_swiftEmptyArrayStorage);
    __chkstk_darwin(v112, v113);
    uint64_t v114 = v305;
    sub_100D3EE0C(v115, (void (*)(uint64_t, uint64_t, uint64_t))sub_100D426BC);
    uint64_t v305 = v114;
    swift_bridgeObjectRelease();

    unint64_t v116 = *(void (**)(char *, uint64_t))(v301 + 8);
    uint64_t v117 = v308;
    v116(v103, v308);
    v116((char *)v300, v117);
    uint64_t v3 = v307;
  }
  else
  {
    uint64_t v3 = v104;

    uint64_t v118 = *(void (**)(char *, uint64_t))(v301 + 8);
    uint64_t v119 = v308;
    v118(v103, v308);
    v118((char *)v300, v119);
  }
  uint64_t v42 = v290;
  uint64_t v64 = v285;
  uint64_t v65 = v297;
  if ((v289 & 1) == 0)
  {
LABEL_40:
    if (!v294) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_38:
  uint64_t v120 = sub_100D2A93C(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  if ((v121 & 1) == 0 && v120 > 0) {
    goto LABEL_40;
  }
  v310 = (ValueMetadata *)&type metadata for Int;
  id v311 = &protocol witness table for Int;
  *(void *)&long long v309 = 1;
  sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  CKRecordKeyValueSetting.subscript.setter();
  if ((v294 & 1) == 0) {
    goto LABEL_47;
  }
LABEL_43:
  uint64_t v122 = CKRecord.subscript.getter();
  swift_unknownObjectRelease();
  if (!v122
    || (uint64_t v123 = sub_100D2A93C(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000), (v124 & 1) == 0)&& v123 >= 1)
  {
    v310 = (ValueMetadata *)&type metadata for Int;
    id v311 = &protocol witness table for Int;
    *(void *)&long long v309 = 0;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
  }
LABEL_47:
  if ((*((unsigned char *)v3 + v65) & 8) != 0)
  {
    uint64_t v125 = sub_100D2A93C(0xD000000000000012, 0x8000000101285080, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if (v126)
    {
      uint64_t v127 = *(void *)((char *)v307 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
    }
    else
    {
      uint64_t v127 = *(void *)((char *)v307 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions);
      if (v125 == v127) {
        goto LABEL_53;
      }
    }
    v310 = (ValueMetadata *)&type metadata for UInt64;
    id v311 = &protocol witness table for UInt64;
    *(void *)&long long v309 = v127;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
  }
LABEL_53:
  uint64_t v128 = v307;
  if ((*((unsigned char *)v307 + v65) & 0x20) != 0)
  {
    uint64_t v129 = sub_100D2B45C(0xD000000000000027, 0x8000000101285050, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v130 & 1) != 0
      || v129 != *(void *)((char *)v128 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 8))
    {
      v310 = &type metadata for CRLFeatureFlags;
      id v311 = (void *)sub_1005396A8();
      LOBYTE(v309) = 24;
      char v131 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v309);
      if (v131)
      {
        id v132 = [a1 encryptedValues];
        swift_getObjectType();
        uint64_t v133 = *(void *)((char *)v128 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 8);
        v310 = (ValueMetadata *)&type metadata for UInt64;
        id v311 = &protocol witness table for UInt64;
        *(void *)&long long v309 = v133;
        CKRecordKeyValueSetting.subscript.setter();
        swift_unknownObjectRelease();
      }
    }
  }
  if ((v295 & 1) != 0 || (*((unsigned char *)v128 + v65) & 0x40) != 0)
  {
    uint64_t v134 = *(void *)((char *)v128 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 16);
    id v311 = &protocol witness table for UInt64;
    v310 = (ValueMetadata *)&type metadata for UInt64;
    *(void *)&long long v309 = v134;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
  }
  if (!v296) {
    goto LABEL_68;
  }
  if (qword_10166FB88 != -1) {
    goto LABEL_153;
  }
  while (1)
  {
    swift_beginAccess();
    uint64_t v135 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v137 = v135;
    id v138 = [a1 recordID];
    id v139 = [v138 recordName];

    uint64_t v140 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v142 = v141;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v140;
    *(void *)(inited + 40) = v142;
    uint64_t v143 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v137, (uint64_t)&_mh_execute_header, v143, (uint64_t)"Setting hideFromRecentlyDeleted to true for server record for recordName: %{public}%", 84, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v144 = sub_100D2B45C(0xD000000000000019, 0x80000001012854A0, 0, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
    if ((v145 & 1) == 0)
    {
      uint64_t v64 = v285;
      uint64_t v146 = v307;
LABEL_66:
      if (v144 > 0) {
        goto LABEL_68;
      }
      goto LABEL_67;
    }
    uint64_t v144 = sub_100D2A93C(0xD000000000000019, 0x80000001012854A0, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
    uint64_t v64 = v285;
    uint64_t v146 = v307;
    if ((v147 & 1) == 0) {
      goto LABEL_66;
    }
LABEL_67:
    id v148 = [a1 encryptedValues];
    swift_getObjectType();
    char v149 = *((unsigned char *)v146 + OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_hideFromRecentlyDeleted);
    v310 = (ValueMetadata *)&type metadata for Bool;
    id v311 = &protocol witness table for Bool;
    LOBYTE(v309) = v149;
    CKRecordKeyValueSetting.subscript.setter();
    swift_unknownObjectRelease();
LABEL_68:
    uint64_t v150 = swift_bridgeObjectRetain();
    sub_1006BA5B4(v150);
    uint64_t v151 = swift_bridgeObjectRelease();
    __chkstk_darwin(v151, v152);
    sub_1005057FC((uint64_t *)&unk_10169A740);
    uint64_t v153 = v305;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    if (v153) {
      goto LABEL_69;
    }
    uint64_t v161 = v309;
    uint64_t v162 = v313[8];
    v271 = v313 + 8;
    uint64_t v163 = 1 << *((unsigned char *)v313 + 32);
    uint64_t v164 = -1;
    if (v163 < 64) {
      uint64_t v164 = ~(-1 << v163);
    }
    unint64_t v165 = v164 & v162;
    v304 = (void (**)(char *, const char *, uint64_t))(v301 + 16);
    uint64_t v305 = 0;
    uint64_t v283 = (void (**)(const char *, char *, uint64_t))(v301 + 32);
    uint64_t v276 = (void (**)(const char *, uint64_t))(v301 + 8);
    int64_t v272 = (unint64_t)(v163 + 63) >> 6;
    int64_t v270 = v272 - 1;
    uint64_t v274 = v313;
    swift_bridgeObjectRetain();
    int64_t v166 = 0;
    uint64_t v167 = v308;
    uint64_t v287 = v161;
LABEL_74:
    if (v165)
    {
      id v291 = (char *)v166;
      unint64_t v292 = (v165 - 1) & v165;
      unint64_t v168 = __clz(__rbit64(v165)) | (v166 << 6);
LABEL_76:
      uint64_t v169 = v274[7];
      Class v170 = (void *)(v274[6] + 16 * v168);
      uint64_t v171 = v170[1];
      *(void *)uint64_t v64 = *v170;
      *((void *)v64 + 1) = v171;
      uint64_t v172 = v301;
      uint64_t v173 = v169 + *(void *)(v301 + 72) * v168;
      uint64_t v174 = sub_1005057FC(&qword_10169A750);
      (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(&v64[*(int *)(v174 + 48)], v173, v167);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v174 - 8) + 56))(v64, 0, 1, v174);
      swift_bridgeObjectRetain();
      uint64_t v161 = v287;
      goto LABEL_89;
    }
    int64_t v175 = v166 + 1;
    if (__OFADD__(v166, 1)) {
      goto LABEL_150;
    }
    if (v175 >= v272)
    {
LABEL_87:
      id v291 = (char *)v166;
      goto LABEL_88;
    }
    unint64_t v176 = v271[v175];
    if (v176) {
      goto LABEL_80;
    }
    v166 += 2;
    if (v175 + 1 >= v272) {
      goto LABEL_112;
    }
    unint64_t v176 = v271[v166];
    if (v176)
    {
LABEL_83:
      int64_t v175 = v166;
LABEL_80:
      id v291 = (char *)v175;
      unint64_t v292 = (v176 - 1) & v176;
      unint64_t v168 = __clz(__rbit64(v176)) + (v175 << 6);
      goto LABEL_76;
    }
    if (v175 + 2 >= v272) {
      goto LABEL_87;
    }
    unint64_t v176 = v271[v175 + 2];
    if (v176)
    {
      v175 += 2;
      goto LABEL_80;
    }
    int64_t v166 = v175 + 3;
    if (v175 + 3 >= v272)
    {
      id v291 = (char *)(v175 + 2);
      goto LABEL_88;
    }
    unint64_t v176 = v271[v166];
    if (v176) {
      goto LABEL_83;
    }
    while (1)
    {
      int64_t v175 = v166 + 1;
      if (__OFADD__(v166, 1))
      {
        __break(1u);
        goto LABEL_155;
      }
      if (v175 >= v272) {
        break;
      }
      unint64_t v176 = v271[v175];
      ++v166;
      if (v176) {
        goto LABEL_80;
      }
    }
    int64_t v175 = v270;
LABEL_112:
    id v291 = (char *)v175;
LABEL_88:
    uint64_t v177 = sub_1005057FC(&qword_10169A750);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 56))(v64, 1, 1, v177);
    unint64_t v292 = 0;
LABEL_89:
    int64_t v178 = v281;
    sub_10051B3EC((uint64_t)v64, (uint64_t)v281, &qword_101699718);
    uint64_t v179 = sub_1005057FC(&qword_10169A750);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v179 - 8) + 48))(v178, 1, v179) != 1) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v246 = v312[7];
    uint64_t v299 = (uint64_t)(v312 + 7);
    uint64_t v247 = 1 << *((unsigned char *)v312 + 32);
    uint64_t v248 = -1;
    if (v247 < 64) {
      uint64_t v248 = ~(-1 << v247);
    }
    unint64_t v249 = v248 & v246;
    int64_t v300 = (unint64_t)(v247 + 63) >> 6;
    v302 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v301 + 48);
    uint64_t v303 = v301 + 56;
    uint64_t v307 = v312;
    swift_bridgeObjectRetain();
    int64_t v250 = 0;
    a1 = "Should not have to remove an asset at the same time it's marked for syncing.";
    while (v249)
    {
      while (1)
      {
        unint64_t v251 = __clz(__rbit64(v249));
        v249 &= v249 - 1;
        unint64_t v252 = v251 | (v250 << 6);
LABEL_133:
        uint64_t v256 = (uint64_t *)(v307[6] + 16 * v252);
        uint64_t v258 = *v256;
        uint64_t v257 = v256[1];
        uint64_t v259 = v313;
        if (v313[2])
        {
          swift_bridgeObjectRetain_n();
          unint64_t v260 = sub_100955F50(v258, v257);
          if (v261)
          {
            uint64_t v42 = (const char *)v301;
            unint64_t v262 = v259[7] + *(void *)(v301 + 72) * v260;
            uint64_t v263 = (uint64_t)v286;
            (*(void (**)(char *, unint64_t, uint64_t))(v301 + 16))(v286, v262, v167);
            (*((void (**)(uint64_t, void, uint64_t, uint64_t))v42 + 7))(v263, 0, 1, v167);
          }
          else
          {
            uint64_t v263 = (uint64_t)v286;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v303)(v286, 1, 1, v167);
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v263 = (uint64_t)v286;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v303)(v286, 1, 1, v167);
          swift_bridgeObjectRetain();
        }
        if ((*v302)(v263, 1, v167) == 1) {
          break;
        }
        swift_bridgeObjectRelease();
        sub_100522F00(v263, (uint64_t *)&unk_101674520);
        uint64_t v42 = "applyChanges(to:store:)";
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"applyChanges(to:store:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 1103, (uint64_t)"Should not have to remove an asset at the same time it's marked for syncing.", 76, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"applyChanges(to:store:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 1103);
        if (!v249) {
          goto LABEL_122;
        }
      }
      sub_100522F00(v263, (uint64_t *)&unk_101674520);
      *(void *)&long long v309 = v258;
      *((void *)&v309 + 1) = v257;
      swift_bridgeObjectRetain();
      v264._countAndFlagsBits = 0x7465737341;
      v264._object = (void *)0xE500000000000000;
      String.append(_:)(v264);
      uint64_t v265 = v306;
      CKRecord.subscript.setter();
      id v266 = [v265 encryptedValues];
      *(void *)&long long v309 = v258;
      *((void *)&v309 + 1) = v257;
      swift_bridgeObjectRetain();
      v267._countAndFlagsBits = 0x74654D7465737341;
      v267._object = (void *)0xED00006174616461;
      String.append(_:)(v267);
      swift_bridgeObjectRelease();
      NSString v268 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v266 setObject:0 forKeyedSubscript:v268];
      uint64_t v167 = v308;
      swift_unknownObjectRelease();
    }
LABEL_122:
    if (__OFADD__(v250++, 1))
    {
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      swift_once();
LABEL_70:
      swift_beginAccess();
      uint64_t v154 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v155 = swift_initStackObject();
      *(_OWORD *)(v155 + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v156 = v154;
      uint64_t v157 = Error.localizedDescription.getter();
      uint64_t v159 = v158;
      *(void *)(v155 + 56) = &type metadata for String;
      *(void *)(v155 + 64) = sub_100528BE4();
      *(void *)(v155 + 32) = v157;
      *(void *)(v155 + 40) = v159;
      uint64_t v160 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v156, (uint64_t)&_mh_execute_header, v160, (uint64_t)"Failed to fetch asset rows for setting on cloud record. Error: %@", 65, 2, v155);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_errorRelease();
LABEL_147:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (v250 >= v300) {
      goto LABEL_146;
    }
    unint64_t v254 = *(void *)(v299 + 8 * v250);
    if (v254) {
      goto LABEL_132;
    }
    int64_t v255 = v250 + 1;
    if (v250 + 1 >= v300) {
      goto LABEL_146;
    }
    unint64_t v254 = *(void *)(v299 + 8 * v255);
    if (v254) {
      goto LABEL_131;
    }
    int64_t v255 = v250 + 2;
    if (v250 + 2 >= v300) {
      goto LABEL_146;
    }
    unint64_t v254 = *(void *)(v299 + 8 * v255);
    if (v254) {
      goto LABEL_131;
    }
    int64_t v255 = v250 + 3;
    if (v250 + 3 >= v300) {
      goto LABEL_146;
    }
    unint64_t v254 = *(void *)(v299 + 8 * v255);
    if (v254)
    {
LABEL_131:
      int64_t v250 = v255;
LABEL_132:
      unint64_t v249 = (v254 - 1) & v254;
      unint64_t v252 = __clz(__rbit64(v254)) + (v250 << 6);
      goto LABEL_133;
    }
    while (1)
    {
      int64_t v250 = v255 + 1;
      if (__OFADD__(v255, 1)) {
        break;
      }
      if (v250 >= v300) {
        goto LABEL_146;
      }
      unint64_t v254 = *(void *)(v299 + 8 * v250);
      ++v255;
      if (v254) {
        goto LABEL_132;
      }
    }
    __break(1u);
LABEL_153:
    swift_once();
  }
  uint64_t v180 = v178[1];
  uint64_t v307 = (void *)*v178;
  int64_t v181 = (char *)v178 + *(int *)(v179 + 48);
  uint64_t v182 = *v283;
  (*v283)(v42, v181, v167);
  if (!*(void *)(v161 + 16) || (unint64_t v183 = sub_100955FC8((uint64_t)v42), (v184 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v239 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v240 = swift_initStackObject();
    *(_OWORD *)(v240 + 16) = xmmword_10117D8C0;
    *(void *)(v240 + 56) = &type metadata for String;
    unint64_t v241 = sub_100528BE4();
    *(void *)(v240 + 64) = v241;
    *(void *)(v240 + 32) = v307;
    *(void *)(v240 + 40) = v180;
    id v242 = v239;
    uint64_t v243 = UUID.uuidString.getter();
    *(void *)(v240 + 96) = &type metadata for String;
    *(void *)(v240 + 104) = v241;
    *(void *)(v240 + 72) = v243;
    *(void *)(v240 + 80) = v244;
    uint64_t v245 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v242, (uint64_t)&_mh_execute_header, v245, (uint64_t)"Did not find asset information for asset name: %@ asset UUID: %@. Cannot sync this asset with CloudKit", 102, 2, v240);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    (*v276)(v42, v167);
LABEL_146:
    swift_release();
    goto LABEL_147;
  }
  uint64_t v282 = (void (*)(uint64_t, char *, uint64_t))v182;
  uint64_t v185 = v303;
  unint64_t v186 = v293;
  uint64_t v187 = (uint64_t)v293 + *(int *)(v303 + 48);
  uint64_t v188 = v279;
  sub_100522E9C(*(void *)(v161 + 56) + *(void *)(v280 + 72) * v183, (uint64_t)v279, (uint64_t *)&unk_10169A730);
  uint64_t v189 = (char *)v188 + *(int *)(v185 + 48);
  int64_t v190 = *v188;
  *unint64_t v186 = *v188;
  uint64_t v191 = v180;
  uint64_t v192 = type metadata accessor for URL();
  uint64_t v193 = *(void *)(v192 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v193 + 32))(v187, v189, v192);
  uint64_t v194 = a1;
  uint64_t v195 = v307;
  *(void *)&long long v309 = v307;
  *((void *)&v309 + 1) = v191;
  swift_retain();
  swift_bridgeObjectRetain();
  v196._countAndFlagsBits = 0x7465737341;
  v196._object = (void *)0xE500000000000000;
  String.append(_:)(v196);
  uint64_t v288 = (char *)*((void *)&v309 + 1);
  uint64_t v289 = v309;
  uint64_t v197 = (char *)v302 + *(int *)(v185 + 48);
  int64_t v300 = v190;
  *v302 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v190;
  uint64_t v198 = *(void (**)(char *, uint64_t, uint64_t))(v193 + 16);
  uint64_t v296 = v193 + 16;
  uint64_t v297 = v187;
  uint64_t v295 = v198;
  v198(v197, v187, v192);
  id v199 = objc_allocWithZone((Class)CKAsset);
  URL._bridgeToObjectiveC()(v200);
  uint64_t v202 = v201;
  [v199 initWithFileURL:v201];

  uint64_t v203 = *(void (**)(char *, uint64_t))(v193 + 8);
  uint64_t v298 = v192;
  uint64_t v299 = v193 + 8;
  uint64_t v204 = v192;
  uint64_t v205 = v191;
  uint64_t v294 = v203;
  v203(v197, v204);
  CKRecord.subscript.setter();
  *(void *)&long long v309 = v195;
  *((void *)&v309 + 1) = v191;
  a1 = v194;
  swift_bridgeObjectRetain_n();
  v206._countAndFlagsBits = 0x74654D7465737341;
  v206._object = (void *)0xED00006174616461;
  String.append(_:)(v206);
  swift_bridgeObjectRelease();
  sub_100D2B1E4(v309, *((uint64_t *)&v309 + 1), 1, &v309);
  swift_bridgeObjectRelease();
  unint64_t v207 = *((void *)&v309 + 1);
  if (*((void *)&v309 + 1) >> 60 == 15) {
    goto LABEL_100;
  }
  uint64_t v208 = v309;
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_100D3F084(&qword_10169A768, (void (*)(uint64_t))type metadata accessor for CRLAssetSyncMetadata);
  uint64_t v209 = v284;
  uint64_t v210 = v305;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (v210)
  {
    swift_release();
    sub_100514260(v208, v207);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100522F00((uint64_t)v293, (uint64_t *)&unk_10169A730);
    (*v276)(v290, v308);
    swift_release();
LABEL_69:
    if (qword_10166FB88 == -1) {
      goto LABEL_70;
    }
    goto LABEL_151;
  }
  uint64_t v289 = v208;
  uint64_t v305 = 0;
  swift_release();
  uint64_t v211 = v273;
  uint64_t v212 = v308;
  (*v304)(v273, v290, v308);
  uint64_t v213 = (char *)v302 + *(int *)(v303 + 48);
  *v302 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v300;
  uint64_t v214 = v298;
  v295(v213, v297, v298);
  uint64_t v215 = URL.pathExtension.getter();
  uint64_t v217 = v216;
  uint64_t v218 = v213;
  uint64_t v219 = (uint64_t)v278;
  v294(v218, v214);
  uint64_t v220 = v277;
  v282(v277, v211, v212);
  uint64_t v221 = (uint64_t *)(v220 + *(int *)(v209 + 20));
  *uint64_t v221 = v215;
  v221[1] = v217;
  if ((static UUID.== infix(_:_:)() & 1) != 0 && (unint64_t v222 = (void *)(v219 + *(int *)(v209 + 20)), (v223 = v222[1]) != 0))
  {
    if (*v222 == v215 && v223 == v217)
    {
      sub_100514260(v289, v207);
      sub_100D426E4(v277, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
      sub_100D426E4(v219, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
      a1 = v306;
      uint64_t v42 = v290;
      unint64_t v165 = v292;
      goto LABEL_103;
    }
    char v238 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100514260(v289, v207);
    sub_100D426E4(v277, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    sub_100D426E4(v219, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    a1 = v306;
    uint64_t v42 = v290;
    unint64_t v165 = v292;
    if (v238)
    {
LABEL_103:
      swift_release();
      swift_bridgeObjectRelease();
      sub_100522F00((uint64_t)v293, (uint64_t *)&unk_10169A730);
      uint64_t v167 = v308;
      (*v276)(v42, v308);
      uint64_t v64 = v285;
      uint64_t v161 = v287;
      int64_t v166 = (int64_t)v291;
      goto LABEL_74;
    }
  }
  else
  {
    sub_100514260(v289, v207);
    sub_100D426E4(v277, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    sub_100D426E4(v219, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    a1 = v306;
  }
LABEL_100:
  uint64_t v224 = v298;
  [a1 encryptedValues];
  *(void *)&long long v309 = v307;
  *((void *)&v309 + 1) = v205;
  swift_bridgeObjectRetain();
  v225._countAndFlagsBits = 0x74654D7465737341;
  v225._object = (void *)0xED00006174616461;
  String.append(_:)(v225);
  swift_bridgeObjectRelease();
  uint64_t v307 = (void *)v309;
  uint64_t v226 = (char *)v302 + *(int *)(v303 + 48);
  int64_t v227 = v300;
  *v302 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v300;
  v295(v226, v297, v224);
  uint64_t v228 = (uint64_t)v275;
  uint64_t v229 = v308;
  (*v304)(v275, (const char *)(v227 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID), v308);
  uint64_t v231 = *(void *)(v227 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
  uint64_t v230 = *(void *)(v227 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v232 = (void *)(v228 + *(int *)(v284 + 20));
  *uint64_t v232 = v231;
  v232[1] = v230;
  v294(v226, v224);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter();
  sub_100D3F084((unint64_t *)&unk_10169A758, (void (*)(uint64_t))type metadata accessor for CRLAssetSyncMetadata);
  uint64_t v233 = v305;
  uint64_t v234 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  uint64_t v305 = v233;
  if (!v233)
  {
    uint64_t v236 = v234;
    uint64_t v237 = v235;
    swift_getObjectType();
    swift_release();
    sub_100D426E4(v228, (uint64_t (*)(void))type metadata accessor for CRLAssetSyncMetadata);
    v310 = (ValueMetadata *)&type metadata for Data;
    id v311 = &protocol witness table for Data;
    *(void *)&long long v309 = v236;
    *((void *)&v309 + 1) = v237;
    CKRecordKeyValueSetting.subscript.setter();
    swift_unknownObjectRelease();
    sub_100522F00((uint64_t)v293, (uint64_t *)&unk_10169A730);
    uint64_t v42 = v290;
    (*v276)(v290, v229);
    uint64_t v167 = v229;
    a1 = v306;
    uint64_t v64 = v285;
    uint64_t v161 = v287;
    int64_t v166 = (int64_t)v291;
    unint64_t v165 = v292;
    goto LABEL_74;
  }
LABEL_155:
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_100D39370(Swift::Int a1, Swift::Int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v25 = a4;
  uint64_t v26 = a7;
  v24[1] = a5;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v24 - v16;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a3, (uint64_t)v17, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101674520);
LABEL_7:
    swift_bridgeObjectRetain();
    sub_100CB8180(&v27, a1, a2);
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
  if (qword_101670198 != -1) {
    swift_once();
  }
  sub_100556B74(v18, (uint64_t)qword_10171CB50);
  sub_100D3F084((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    goto LABEL_7;
  }
  if (sub_1006E3E24((uint64_t)v22, *(void *)(v25 + *v26)))
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v13, v22, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    swift_bridgeObjectRetain();
    sub_10057EEC4((uint64_t)v13, a1, a2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
}

Class sub_100D39680(uint64_t a1)
{
  return sub_100D36AD8(a1);
}

uint64_t sub_100D396A4(char *a1, uint64_t a2)
{
  return sub_100D36E04(a1, a2);
}

CKRecordID sub_100D396C8()
{
  sub_10050BF48(0, (unint64_t *)&qword_101674210);
  v1._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v1._object = v2;
  v3._countAndFlagsBits = 0x74654D6472616F42;
  v3._object = (void *)0xED00006174616461;
  Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v3, v1).super.isa;
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier;
  v13._countAndFlagsBits = UUID.uuidString.getter();
  v13._object = v6;
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = 58;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(v5 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v9 = *v8;
  uint64_t v10 = (void *)v8[1];
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v9;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  return CKRecordID.init(recordName:zoneID:)(v13, (CKRecordZoneID)isa);
}

CKRecordID sub_100D39804()
{
  return sub_100D396C8();
}

BOOL sub_100D39828()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_unsyncedChanges) != 0;
}

Class sub_100D39844()
{
  return sub_100D41DA4();
}

void sub_100D39868(void *a1)
{
}

CKRecordID sub_100D3988C()
{
  return sub_100D2B0F0();
}

CKRecordID sub_100D398B0(uint64_t a1)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v3 = sub_100753038();
  uint64_t v5 = v4;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  uint64_t v6 = (void *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  if (*v6) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v6[1] == 0xE000000000000000;
  }
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 1202, (uint64_t)"Creating recordIDForCKRecord for bucket for public database using non-default ownerName for zone: %{public}@", 108, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 1202);
  }
  swift_bridgeObjectRelease();
  Class v8 = sub_100D3EC2C(a1);
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t v10 = qword_10169A5F0;
  uint64_t v9 = off_10169A5F8;
  swift_bridgeObjectRetain();
  uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
  Swift::String v13 = v12;
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = v10;
  v15._object = v9;
  return CKRecordID.init(recordName:zoneID:)(v15, (CKRecordZoneID)v8);
}

BOOL sub_100D39AA8()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_unsyncedChanges) != 0;
}

Class sub_100D39AC4(uint64_t a1, uint64_t a2)
{
  Class isa = sub_100D398B0(a2).super.isa;
  sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  uint64_t v4 = isa;
  v5._object = (void *)0x8000000101235CC0;
  v5._countAndFlagsBits = 0xD00000000000001CLL;
  Class v6 = CKRecord.init(recordType:recordID:)(v5, (CKRecordID)v4).super.isa;
  sub_100D42744((uint64_t)v6, a2);

  return v6;
}

Class sub_100D39B68()
{
  return sub_100D42190();
}

void sub_100D39B8C(void *a1)
{
}

uint64_t sub_100D39BB0()
{
  Swift::String v1 = *(void **)(v0 + 16);
  id v2 = [v1 zoneID];
  id v3 = [v1 recordName];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v5 = [v2 zoneName];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Class v8 = v7;

  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v10 = [v2 ownerName];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v13 = v12;

  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100D39CEC()
{
  uint64_t v1 = sub_1005057FC(&qword_101672C30);
  *(void *)&double v3 = __chkstk_darwin(v1 - 8, v2).n128_u64[0];
  id v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [*(id *)(v0 + 16) zoneID:v3];
  sub_100D29C10((uint64_t)v5);

  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_100522F00((uint64_t)v5, &qword_101672C30);
    return 0;
  }
  else
  {
    uint64_t v18 = UUID.uuidString.getter();
    uint64_t v19 = v9;
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = 58;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    Swift::String v13 = (uint64_t *)&v5[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    uint64_t v14 = *v13;
    Swift::String v15 = (void *)v13[1];
    uint64_t v18 = v11;
    uint64_t v19 = v12;
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = v14;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    uint64_t v8 = v18;
    sub_100D426E4((uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
  }
  return v8;
}

uint64_t sub_100D39E84()
{
  return sub_100D39BB0();
}

uint64_t sub_100D39EA8()
{
  return sub_100D39CEC();
}

id sub_100D39ECC()
{
  return *(id *)(*(void *)v0 + 16);
}

uint64_t sub_100D39ED8()
{
  id v1 = [v0 recordID];
  id v2 = [v1 zoneID];

  id v3 = [v2 ownerName];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_8:

    return 0;
  }
  id v10 = [v2 ownerName];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v11;
}

uint64_t sub_100D3A008@<X0>(uint64_t a1@<X8>)
{
  id v3 = [v1 zoneName];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  v7._countAndFlagsBits = 0x5F6472616F42;
  v7._object = (void *)0xE600000000000000;
  BOOL v8 = String.hasPrefix(_:)(v7);
  if (v8)
  {
    v16[0] = 95;
    v16[1] = 0xE100000000000000;
    __chkstk_darwin(v8, v9);
    long long v15[2] = v16;
    sub_100CD7A88(sub_100D3A6B8, (uint64_t)v15, v4, v6);
    if (v10)
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for UUID();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 1, 1, v14);
    }
    else
    {
      unint64_t v11 = String.index(after:)();
      sub_100C329C8(v11, v4, v6);
      swift_bridgeObjectRelease();
      static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
      UUID.init(uuidString:)();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for CRLBoardSyncLogicProvider()
{
  return self;
}

uint64_t sub_100D3A238(uint64_t a1, uint64_t a2)
{
  return sub_100D3A270(a1, a2, 0x7465737341, (void *)0xE500000000000000);
}

uint64_t sub_100D3A24C(uint64_t a1, uint64_t a2)
{
  return sub_100D3A270(a1, a2, 0x74654D7465737341, (void *)0xED00006174616461);
}

uint64_t sub_100D3A270(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = *v4;
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = a3;
  v7._object = a4;
  String.append(_:)(v7);
  return v9;
}

uint64_t sub_100D3A2C4(unsigned __int8 *a1, char *a2)
{
  return sub_10094ED40(*a1, *a2);
}

Swift::Int sub_100D3A2D0()
{
  return sub_1009506A4();
}

uint64_t sub_100D3A2DC()
{
  return sub_10094FE80();
}

Swift::Int sub_100D3A2E4()
{
  return sub_1009506A4();
}

unint64_t sub_100D3A2EC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100D431A4(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100D3A31C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100D34E90(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned __int8 *sub_100D3A348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1006F8D64();
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_100AF25BC();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v13 = sub_100D3A43C(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_100D3A43C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100D3A6B8(void *a1)
{
  return sub_100CD7F1C(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_100D3A6D8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unsigned int v11 = (void *)_StringObject.sharedUTF8.getter();
  }
  uint64_t result = sub_100D3DAC8((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_100D3A7AC(void *a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v232 = (uint64_t)&v221 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v233 = (uint64_t)&v221 - v7;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v238 = (uint64_t)&v221 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v237 = (uint64_t)&v221 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v239 = (uint64_t)&v221 - v16;
  __chkstk_darwin(v17, v18);
  unint64_t v242 = (unint64_t)&v221 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v241 = (uint64_t)&v221 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v244 = (uint64_t)&v221 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v221 - v28;
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v31 = *(void **)(v30 - 8);
  __chkstk_darwin(v30, v32);
  uint64_t v231 = (char *)&v221 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  uint64_t v234 = (char *)&v221 - v36;
  __chkstk_darwin(v37, v38);
  uint64_t v236 = (char *)&v221 - v39;
  __chkstk_darwin(v40, v41);
  uint64_t v235 = (char *)&v221 - v42;
  __chkstk_darwin(v43, v44);
  uint64_t v243 = (char *)&v221 - v45;
  __chkstk_darwin(v46, v47);
  uint64_t v49 = (char *)&v221 - v48;
  *(void *)&double v52 = __chkstk_darwin(v50, v51).n128_u64[0];
  uint64_t v54 = (char *)&v221 - v53;
  id v55 = [a1 recordID:v52];
  id v56 = [v55 recordName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  UUID.init(uuidString:)();
  uint64_t v57 = v30;
  swift_bridgeObjectRelease();
  int v58 = (uint64_t (*)(char *, uint64_t, uint64_t))v31[6];
  int v59 = v58(v29, 1, v57);
  id v245 = a1;
  if (v59 == 1)
  {
    sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674520);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v60 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v62 = v60;
    id v63 = v245;
    id v64 = [v245 recordID];
    id v65 = [v64 recordName];

    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v68 = v67;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v66;
    *(void *)(inited + 40) = v68;
    uint64_t v69 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v62, (uint64_t)&_mh_execute_header, v69, (uint64_t)"Invalid record id from remote record. Expected a UUID but received %{public}@", 77, 2, inited);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  id v70 = (void (*)(uint64_t, char *, uint64_t))v31[4];
  uint64_t v229 = (void (*)(char *, uint64_t, uint64_t))(v31 + 4);
  uint64_t v230 = v54;
  uint64_t v228 = v70;
  v70((uint64_t)v54, v29, v57);
  Swift::String v71 = (void *)sub_100D2AB4C(0xD000000000000016, 0x8000000101285460, (unint64_t *)&unk_10169A7E0);
  uint64_t v240 = v31;
  if (v71)
  {
    uint64_t v72 = v71;
    id v73 = [v71 recordID];
    id v74 = [v73 recordName];
    uint64_t v227 = v57;
    id v75 = v74;

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v57 = v227;
    uint64_t v76 = v241;
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    int v77 = v58((char *)v76, 1, v57);
    uint64_t v78 = v244;
    if (v77 == 1)
    {
      sub_100522F00(v76, (uint64_t *)&unk_101674520);
      uint64_t v79 = v240;
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v80 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v81 = swift_initStackObject();
      *(_OWORD *)(v81 + 16) = xmmword_10117E810;
      id v82 = v80;
      id v83 = [v72 recordID];
      id v84 = [v83 recordName];

      uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v87 = v86;

      *(void *)(v81 + 56) = &type metadata for String;
      *(void *)(v81 + 64) = sub_100528BE4();
      *(void *)(v81 + 32) = v85;
      *(void *)(v81 + 40) = v87;
      uint64_t v88 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v82, (uint64_t)&_mh_execute_header, v88, (uint64_t)"Invalid root container record id from remote record. Expected a UUID but received %{public}@", 92, 2, v81);

      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      ((void (*)(char *, uint64_t))v79[1])(v230, v227);
      return 0;
    }

    uint64_t v91 = v76;
    id v92 = v228;
    v228((uint64_t)v49, (char *)v91, v57);
    v92(v78, v49, v57);
    uint64_t v90 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v240[7];
    v90(v78, 0, 1, v57);
    id v89 = v245;
  }
  else
  {
    id v89 = a1;
    uint64_t v90 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31[7];
    uint64_t v78 = v244;
    v90(v244, 1, 1, v57);
  }
  unint64_t v93 = v242;
  sub_100522E9C(v78, v242, (uint64_t *)&unk_101674520);
  if (v58((char *)v93, 1, v57) == 1)
  {

    sub_100522F00(v78, (uint64_t *)&unk_101674520);
    ((void (*)(char *, uint64_t))v240[1])(v230, v57);
    uint64_t v94 = v93;
LABEL_23:
    sub_100522F00(v94, (uint64_t *)&unk_101674520);
    return 0;
  }
  v228((uint64_t)v243, (char *)v93, v57);
  CKRecordID v95 = (void *)sub_100D2AB4C(0xD00000000000001FLL, 0x8000000101285480, (unint64_t *)&unk_10169A7E0);
  if (v95)
  {
    uint64_t v96 = v95;
    id v97 = [v95 recordID];
    id v98 = [v97 recordName];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v99 = v57;

    uint64_t v100 = v237;
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    if (v58((char *)v100, 1, v57) == 1)
    {
      sub_100522F00(v100, (uint64_t *)&unk_101674520);
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v101 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v102 = swift_initStackObject();
      *(_OWORD *)(v102 + 16) = xmmword_10117E810;
      id v103 = v101;
      id v104 = [v96 recordID];
      id v105 = [v104 recordName];

      uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v108 = v107;

      *(void *)(v102 + 56) = &type metadata for String;
      *(void *)(v102 + 64) = sub_100528BE4();
      *(void *)(v102 + 32) = v106;
      *(void *)(v102 + 40) = v108;
      uint64_t v109 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v103, (uint64_t)&_mh_execute_header, v109, (uint64_t)"Invalid alternate root container record id from remote record. Expected a UUID but received %{public}@", 102, 2, v102);

      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      Swift::String v110 = (void (*)(char *, uint64_t))v240[1];
      v110(v243, v99);
      sub_100522F00(v244, (uint64_t *)&unk_101674520);
      v110(v230, v99);
      return 0;
    }

    uint64_t v113 = v235;
    uint64_t v114 = v100;
    uint64_t v115 = v228;
    v228((uint64_t)v235, (char *)v114, v57);
    uint64_t v112 = v239;
    v115(v239, v113, v57);
    uint64_t v111 = 0;
    id v89 = v245;
  }
  else
  {
    uint64_t v111 = 1;
    uint64_t v112 = v239;
  }
  unint64_t v116 = v240;
  v90(v112, v111, 1, v57);
  uint64_t v117 = v238;
  sub_100522E9C(v112, v238, (uint64_t *)&unk_101674520);
  if (v58((char *)v117, 1, v57) == 1)
  {

    sub_100522F00(v112, (uint64_t *)&unk_101674520);
    uint64_t v118 = (void (*)(char *, uint64_t))v116[1];
    v118(v243, v57);
    sub_100522F00(v78, (uint64_t *)&unk_101674520);
    v118(v230, v57);
    uint64_t v94 = v117;
    goto LABEL_23;
  }
  char v121 = v236;
  uint64_t v227 = v57;
  v228((uint64_t)v236, (char *)v117, v57);
  uint64_t v122 = sub_100D2A93C(0xD000000000000012, 0x8000000101285080, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v123)
  {
    char v126 = v240;
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v136 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v137 = swift_initStackObject();
    *(_OWORD *)(v137 + 16) = xmmword_10117E810;
    id v138 = v136;
    id v139 = v89;
    id v140 = [v89 recordID];
    id v141 = [v140 recordName];

    uint64_t v142 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v144 = v143;

    *(void *)(v137 + 56) = &type metadata for String;
    *(void *)(v137 + 64) = sub_100528BE4();
    *(void *)(v137 + 32) = v142;
    *(void *)(v137 + 40) = v144;
    uint64_t v145 = static os_log_type_t.error.getter();
    uint64_t v146 = "Invalid minRequiredVersion from remote record. Expected a UInt64 but received %{public}@";
    uint64_t v147 = (uint64_t)v138;
    uint64_t v148 = 88;
    goto LABEL_41;
  }
  char v124 = (void (*)(uint64_t, char *, uint64_t))v122;
  uint64_t v125 = sub_100D2A93C(0xD000000000000021, 0x8000000101285000, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  char v126 = v240;
  if (v127)
  {
    if (qword_10166FB88 != -1) {
      goto LABEL_78;
    }
    goto LABEL_37;
  }
  uint64_t v128 = v125;
  uint64_t v129 = sub_100D2A93C(0xD000000000000019, 0x8000000101285030, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v130)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v155 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v137 = swift_initStackObject();
    *(_OWORD *)(v137 + 16) = xmmword_10117E810;
    id v138 = v155;
    id v139 = v89;
    id v156 = [v89 recordID];
    id v157 = [v156 recordName];

    uint64_t v158 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v160 = v159;

    *(void *)(v137 + 56) = &type metadata for String;
    *(void *)(v137 + 64) = sub_100528BE4();
    *(void *)(v137 + 32) = v158;
    *(void *)(v137 + 40) = v160;
    uint64_t v145 = static os_log_type_t.error.getter();
    uint64_t v146 = "Remote record does not have a minRequiredVersionForSync %{public}@";
    uint64_t v147 = (uint64_t)v138;
    uint64_t v148 = 66;
    goto LABEL_41;
  }
  uint64_t v225 = v129;
  char v131 = v89;
  id v132 = &v246;
  sub_100D2B1E4(0x7461446472616F42, 0xE900000000000061, 0, &v246);
  unint64_t v242 = *((void *)&v246 + 1);
  if (*((void *)&v246 + 1) >> 60 == 15)
  {
    id v132 = v248;
    sub_100D2A730(0x7461446472616F42, 0xE900000000000061, v248);
    unint64_t v242 = *((void *)&v248[0] + 1);
  }
  uint64_t v241 = *(void *)v132;
  uint64_t v133 = sub_100D2B45C(0xD000000000000027, 0x8000000101285050, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v134)
  {
    uint64_t v163 = sub_100D2A93C(0xD000000000000027, 0x8000000101285050, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if (v164) {
      uint64_t v135 = 0x2000400000000;
    }
    else {
      uint64_t v135 = v163;
    }
  }
  else
  {
    uint64_t v135 = v133;
  }
  unint64_t v165 = v230;
  uint64_t v166 = sub_100D2A93C(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  BOOL v169 = (v167 & 1) == 0 && v166 > 0;
  id v170 = [v131 recordChangeTag];
  if (v170)
  {

    id v171 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [v131 encodeSystemFieldsWithCoder:v171];
    id v172 = [v171 encodedData];
    uint64_t v237 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v238 = v173;
  }
  else
  {
    uint64_t v237 = 0;
    uint64_t v238 = 0xF000000000000000;
  }
  uint64_t v174 = sub_100D2B45C(0xD000000000000019, 0x80000001012854A0, 0, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  uint64_t v228 = v124;
  uint64_t v226 = v128;
  uint64_t v224 = v135;
  BOOL v223 = v169;
  if ((v175 & 1) != 0
    && (uint64_t v174 = sub_100D2A93C(0xD000000000000019, 0x80000001012854A0, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000), (v176 & 1) != 0)|| v174 < 1)
  {
    uint64_t v222 = 0;
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v177 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v178 = swift_initStackObject();
    *(_OWORD *)(v178 + 16) = xmmword_10117E810;
    id v179 = v177;
    uint64_t v180 = UUID.description.getter();
    uint64_t v182 = v181;
    *(void *)(v178 + 56) = &type metadata for String;
    *(void *)(v178 + 64) = sub_100528BE4();
    *(void *)(v178 + 32) = v180;
    *(void *)(v178 + 40) = v182;
    uint64_t v183 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v179, (uint64_t)&_mh_execute_header, v183, (uint64_t)"Setting hideFromRecentlyDeleted to true from server record for board id %{public}@", 82, 2, v178);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    uint64_t v222 = 1;
    swift_arrayDestroy();

    char v126 = v240;
  }
  char v184 = (char *)(v126 + 2);
  uint64_t v185 = (void (*)(char *, char *, uint64_t))v126[2];
  uint64_t v186 = (uint64_t)v234;
  uint64_t v187 = v227;
  v185(v234, v165, v227);
  id v188 = v245;
  uint64_t v189 = sub_100D39ED8();
  uint64_t v190 = v233;
  sub_100753370(v186, v189, v191, v233);
  uint64_t v192 = v190;
  uint64_t v193 = v232;
  sub_100D42F4C(v192, v232, type metadata accessor for CRLBoardIdentifier);
  v185((char *)v186, v243, v187);
  uint64_t v194 = (uint64_t)v231;
  uint64_t v195 = v187;
  id v196 = v188;
  uint64_t v235 = v184;
  uint64_t v229 = (void (*)(char *, uint64_t, uint64_t))v185;
  v185(v231, v236, v195);
  type metadata accessor for CRLBoardSyncRemoteRecord(0);
  swift_allocObject();
  uint64_t v198 = v241;
  unint64_t v197 = v242;
  sub_1005FA2A0(v241, v242);
  uint64_t v200 = v237;
  uint64_t v199 = v238;
  sub_1005FA2A0(v237, v238);
  uint64_t v119 = sub_101009604(v193, v186, v194, (uint64_t)v228, v224, v226, v223, v222, v198, v197, v200, v199, v225);
  sub_100514260(v198, v197);
  swift_retain();
  uint64_t v232 = CKRecord.allKeys()();
  uint64_t v201 = *(void *)(v232 + 16);
  uint64_t v112 = v239;
  if (!v201)
  {
LABEL_75:
    swift_release();

    sub_100514260(v237, v238);
    sub_100514260(v241, v242);
    swift_bridgeObjectRelease();
    sub_100D426E4(v233, type metadata accessor for CRLBoardIdentifier);
    uint64_t v217 = (void (*)(char *, uint64_t))v240[1];
    uint64_t v218 = v227;
    v217(v236, v227);
    sub_100522F00(v112, (uint64_t *)&unk_101674520);
    v217(v243, v218);
    sub_100522F00(v244, (uint64_t *)&unk_101674520);
    v217(v230, v218);
    return v119;
  }
  uint64_t v228 = (void (*)(uint64_t, char *, uint64_t))(v119
                                                       + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_assets);
  uint64_t v231 = (char *)(v240 + 1);
  uint64_t v202 = v232 + 40;
  char v121 = (char *)&_sScS8IteratorVyx_GScIsMc_ptr;
  while (1)
  {
    char v126 = *(void **)(v202 - 8);
    swift_bridgeObjectRetain();
    if (!CKRecord.subscript.getter())
    {
      swift_bridgeObjectRelease();
      goto LABEL_64;
    }
    self;
    id v89 = (id)swift_dynamicCastObjCClass();
    swift_unknownObjectRelease();
    if (!v89
      || (v203._countAndFlagsBits = 0x7465737341,
          v203._object = (void *)0xE500000000000000,
          !String.hasSuffix(_:)(v203)))
    {
      swift_bridgeObjectRelease();
      id v196 = v245;
      goto LABEL_64;
    }
    swift_bridgeObjectRetain();
    if (__OFSUB__(0, String.count.getter())) {
      break;
    }
    String.index(_:offsetBy:)();
    swift_bridgeObjectRelease();
    uint64_t v204 = String.subscript.getter();
    unint64_t v206 = v205;
    swift_bridgeObjectRelease();
    if ((v204 ^ v206) >> 14)
    {
      uint64_t v207 = static String._fromSubstring(_:)();
      uint64_t v209 = v208;
      swift_bridgeObjectRelease();
      id v210 = v245;
      uint64_t v211 = sub_100D29F18(v207, v209);
      swift_bridgeObjectRelease();
      if (!v211)
      {
        swift_release();

        sub_100514260(v237, v238);
        sub_100514260(v241, v242);
        swift_bridgeObjectRelease();
        sub_100D426E4(v233, type metadata accessor for CRLBoardIdentifier);
        uint64_t v219 = *(void (**)(char *, uint64_t))v231;
        uint64_t v220 = v227;
        (*(void (**)(char *, uint64_t))v231)(v236, v227);
        sub_100522F00(v239, (uint64_t *)&unk_101674520);
        v219(v243, v220);
        sub_100522F00(v244, (uint64_t *)&unk_101674520);
        v219(v230, v220);
        swift_release();
        return 0;
      }
      uint64_t v212 = (uint64_t)v234;
      uint64_t v213 = v227;
      v229(v234, v211 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata, v227);
      uint64_t v214 = (uint64_t *)v228;
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v247 = *v214;
      *uint64_t v214 = 0x8000000000000000;
      sub_1009770E8(v211, v212, isUniquelyReferenced_nonNull_native);
      *uint64_t v214 = v247;
      swift_bridgeObjectRelease();
      uint64_t v216 = v213;
      id v196 = v245;
      (*(void (**)(uint64_t, uint64_t))v231)(v212, v216);
      swift_endAccess();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      id v196 = v245;
    }
    uint64_t v112 = v239;
    char v121 = (char *)&_sScS8IteratorVyx_GScIsMc_ptr;
LABEL_64:
    v202 += 16;
    if (!--v201) {
      goto LABEL_75;
    }
  }
  __break(1u);
LABEL_78:
  swift_once();
LABEL_37:
  swift_beginAccess();
  char v149 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v137 = swift_initStackObject();
  *(_OWORD *)(v137 + 16) = xmmword_10117E810;
  id v138 = v149;
  id v139 = v89;
  id v150 = [v89 recordID];
  id v151 = [v150 recordName];

  uint64_t v152 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v154 = v153;

  *(void *)(v137 + 56) = &type metadata for String;
  *(void *)(v137 + 64) = sub_100528BE4();
  *(void *)(v137 + 32) = v152;
  *(void *)(v137 + 40) = v154;
  uint64_t v145 = static os_log_type_t.error.getter();
  uint64_t v146 = "Remote record does not have a minRequiredVersionForFullFidelity %{public}@";
  uint64_t v147 = (uint64_t)v138;
  uint64_t v148 = 74;
LABEL_41:
  sub_100BAC898(v147, (uint64_t)&_mh_execute_header, v145, (uint64_t)v146, v148, 2, v137);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v161 = (void (*)(char *, uint64_t))v126[1];
  uint64_t v162 = v227;
  v161(v121, v227);
  sub_100522F00(v112, (uint64_t *)&unk_101674520);
  v161(v243, v162);
  sub_100522F00(v244, (uint64_t *)&unk_101674520);
  v161(v230, v162);
  return 0;
}

uint64_t sub_100D3C104(void *a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v221 = (uint64_t)&v206 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v225 = (uint64_t)&v206 - v7;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v220 = (uint64_t *)((char *)&v206 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11, v12);
  BOOL v223 = (char *)&v206 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v224 = (char *)&v206 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v229 = (uint64_t)&v206 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v206 - v22;
  uint64_t v24 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v226 = (char *)&v206 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v29);
  uint64_t v222 = (char *)&v206 - v30;
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v206 - v33;
  *(void *)&double v37 = __chkstk_darwin(v35, v36).n128_u64[0];
  uint64_t v39 = (char *)&v206 - v38;
  id v40 = [a1 recordID:v37];
  id v41 = [v40 recordName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v42(v23, 1, v24) == 1)
  {
    sub_100522F00((uint64_t)v23, (uint64_t *)&unk_101674520);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v43 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v45 = v43;
    id v46 = [a1 recordID];
    id v47 = [v46 recordName];

    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v48;
    *(void *)(inited + 40) = v50;
    uint64_t v51 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v51, (uint64_t)"Invalid record id from remote record. Expected a UUID but received %{public}@", 77, 2, inited);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  uint64_t v227 = v25;
  uint64_t v228 = v24;
  double v52 = *(void (**)(char *, char *))(v25 + 32);
  uint64_t v219 = v39;
  v52(v39, v23);
  uint64_t v53 = sub_100D2A93C(0xD000000000000012, 0x8000000101285080, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  id v230 = a1;
  if (v54)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v63 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v64 = swift_initStackObject();
    *(_OWORD *)(v64 + 16) = xmmword_10117E810;
    id v65 = v63;
    id v66 = v230;
    id v67 = [v230 recordID];
    id v68 = [v67 recordName];

    uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v71 = v70;

    *(void *)(v64 + 56) = &type metadata for String;
    *(void *)(v64 + 64) = sub_100528BE4();
    *(void *)(v64 + 32) = v69;
    *(void *)(v64 + 40) = v71;
    uint64_t v72 = static os_log_type_t.error.getter();
    id v73 = "Remote record does not have a minRequiredVersion %{public}@";
    uint64_t v74 = (uint64_t)v65;
    uint64_t v75 = 59;
    goto LABEL_19;
  }
  uint64_t v217 = (void *)v53;
  uint64_t v218 = v52;
  uint64_t v55 = sub_100D2A93C(0xD000000000000021, 0x8000000101285000, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  id v56 = &selRef_alignCenter_;
  uint64_t v57 = &selRef_alignCenter_;
  if (v58)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v76 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v64 = swift_initStackObject();
    *(_OWORD *)(v64 + 16) = xmmword_10117E810;
    id v65 = v76;
    id v66 = v230;
    id v77 = [v230 recordID];
    id v78 = [v77 recordName];

    uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v81 = v80;

    *(void *)(v64 + 56) = &type metadata for String;
    *(void *)(v64 + 64) = sub_100528BE4();
    *(void *)(v64 + 32) = v79;
    *(void *)(v64 + 40) = v81;
    uint64_t v72 = static os_log_type_t.error.getter();
    id v73 = "Remote record does not have a minRequiredVersionForFullFidelity %{public}@";
    uint64_t v74 = (uint64_t)v65;
    uint64_t v75 = 74;
    goto LABEL_19;
  }
  uint64_t v216 = v55;
  uint64_t v59 = sub_100D2A93C(0xD000000000000019, 0x8000000101285030, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v60)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v82 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v64 = swift_initStackObject();
    *(_OWORD *)(v64 + 16) = xmmword_10117E810;
    id v65 = v82;
    id v66 = v230;
    id v83 = [v230 recordID];
    id v84 = [v83 recordName];

    uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v87 = v86;

    *(void *)(v64 + 56) = &type metadata for String;
    *(void *)(v64 + 64) = sub_100528BE4();
    *(void *)(v64 + 32) = v85;
    *(void *)(v64 + 40) = v87;
    uint64_t v72 = static os_log_type_t.error.getter();
    id v73 = "Remote record does not have a minRequiredVersionForSync %{public}@";
    uint64_t v74 = (uint64_t)v65;
    uint64_t v75 = 66;
    goto LABEL_19;
  }
  unint64_t v215 = v59;
  uint64_t v61 = sub_100D2B45C(0xD000000000000027, 0x8000000101285050, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v62)
  {
    uint64_t v90 = sub_100D2A93C(0xD000000000000027, 0x8000000101285050, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    uint64_t v91 = 0x2000400000000;
    if ((v92 & 1) == 0) {
      uint64_t v91 = v90;
    }
    uint64_t v214 = v91;
  }
  else
  {
    uint64_t v214 = v61;
  }
  uint64_t v93 = sub_100D2B45C(0x704F7463656A624FLL, 0xEF455F736E6F6974, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v94)
  {
    uint64_t v93 = sub_100D2A93C(0x704F7463656A624FLL, 0xEF455F736E6F6974, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if (v95)
    {
      uint64_t v117 = v227;
      if (qword_10166FB88 != -1) {
        goto LABEL_80;
      }
      goto LABEL_36;
    }
  }
  uint64_t v96 = v93;
  uint64_t v97 = sub_100D2B45C(0x657079546D657449, 0xEA0000000000455FLL, 0, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  if (v98)
  {
    uint64_t v97 = sub_100D2A93C(0x657079546D657449, 0xEA0000000000455FLL, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
    if (v99)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      char v131 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v64 = swift_initStackObject();
      *(_OWORD *)(v64 + 16) = xmmword_10117E810;
      id v65 = v131;
      id v66 = v230;
      id v132 = [v230 recordID];
      id v133 = [v132 recordName];

      uint64_t v134 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v136 = v135;

      *(void *)(v64 + 56) = &type metadata for String;
      *(void *)(v64 + 64) = sub_100528BE4();
      *(void *)(v64 + 32) = v134;
      *(void *)(v64 + 40) = v136;
      uint64_t v72 = static os_log_type_t.error.getter();
      id v73 = "Remote record does not have an item type %{public}@";
      uint64_t v74 = (uint64_t)v65;
      uint64_t v75 = 51;
LABEL_19:
      sub_100BAC898(v74, (uint64_t)&_mh_execute_header, v72, (uint64_t)v73, v75, 2, v64);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

LABEL_20:
      (*(void (**)(char *, uint64_t))(v227 + 8))(v219, v228);
      return 0;
    }
  }
  uint64_t v211 = v97;
  uint64_t v212 = v96;
  uint64_t v100 = (void *)sub_100D2AB4C(0x6552746E65726150, 0xEF65636E65726566, (unint64_t *)&unk_10169A7E0);
  if (v100)
  {
    uint64_t v101 = v100;
    id v102 = [v100 recordID];
    id v103 = [v102 recordName];

    unint64_t v213 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v104 = v224;
    UUID.init(uuidString:)();
    uint64_t v105 = (uint64_t)v104;
    swift_bridgeObjectRelease();
    uint64_t v106 = v104;
    uint64_t v107 = v228;
    if (v42(v106, 1, v228) == 1)
    {
      sub_100522F00(v105, (uint64_t *)&unk_101674520);
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v108 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v109 = swift_initStackObject();
      *(_OWORD *)(v109 + 16) = xmmword_10117E810;
      id v110 = v108;
      id v111 = [v101 recordID];
      id v112 = [v111 recordName];

      uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v115 = v114;

      *(void *)(v109 + 56) = &type metadata for String;
      *(void *)(v109 + 64) = sub_100528BE4();
      *(void *)(v109 + 32) = v113;
      *(void *)(v109 + 40) = v115;
      uint64_t v116 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v110, (uint64_t)&_mh_execute_header, v116, (uint64_t)"Invalid parent record id from remote record. Expected a UUID but received %{public}@", 84, 2, v109);

      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      goto LABEL_20;
    }

    uint64_t v137 = (void (*)(uint64_t, char *, uint64_t))v218;
    ((void (*)(char *, uint64_t, uint64_t))v218)(v34, v105, v107);
    uint64_t v130 = v229;
    v137(v229, v34, v107);
    uint64_t v129 = 0;
  }
  else
  {
    uint64_t v129 = 1;
    uint64_t v107 = v228;
    uint64_t v130 = v229;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v227 + 56))(v130, v129, 1, v107);
  id v138 = (char *)sub_100D2AB4C(0x6665526472616F42, 0xEE0065636E657265, (unint64_t *)&unk_10169A7E0);
  if (!v138)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v153 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v154 = swift_initStackObject();
    *(_OWORD *)(v154 + 16) = xmmword_10117E810;
    id v155 = v153;
    id v156 = v230;
    id v157 = [v230 recordID];
    id v158 = [v157 recordName];

    uint64_t v159 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v161 = v160;

    *(void *)(v154 + 56) = &type metadata for String;
    *(void *)(v154 + 64) = sub_100528BE4();
    *(void *)(v154 + 32) = v159;
    *(void *)(v154 + 40) = v161;
    uint64_t v162 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v155, (uint64_t)&_mh_execute_header, v162, (uint64_t)"A board item must have a board reference. Expected a board reference on board item %{public}@ but received nil", 110, 2, v154);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100522F00(v229, (uint64_t *)&unk_101674520);
    goto LABEL_20;
  }
  uint64_t v224 = v138;
  id v139 = [v138 recordID];
  id v140 = [v139 recordName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v141 = (uint64_t)v223;
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  if (v42((char *)v141, 1, v107) == 1)
  {
    sub_100522F00(v141, (uint64_t *)&unk_101674520);
    uint64_t v142 = v219;
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v143 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v144 = swift_initStackObject();
    *(_OWORD *)(v144 + 16) = xmmword_10117E810;
    id v145 = v143;
    id v146 = v224;
    id v147 = [v224 recordID];
    id v148 = [v147 recordName];

    uint64_t v149 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v151 = v150;

    *(void *)(v144 + 56) = &type metadata for String;
    *(void *)(v144 + 64) = sub_100528BE4();
    *(void *)(v144 + 32) = v149;
    *(void *)(v144 + 40) = v151;
    uint64_t v152 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v145, (uint64_t)&_mh_execute_header, v152, (uint64_t)"The board reference has an invalid record name %{public}@", 57, 2, v144);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100522F00(v229, (uint64_t *)&unk_101674520);
    (*(void (**)(char *, uint64_t))(v227 + 8))(v142, v228);
    return 0;
  }
  uint64_t v163 = v222;
  ((void (*)(char *, uint64_t, uint64_t))v218)(v222, v141, v107);
  uint64_t v164 = (uint64_t)v226;
  unint64_t v165 = *(void (**)(char *, char *))(v227 + 16);
  BOOL v223 = (char *)(v227 + 16);
  uint64_t v218 = v165;
  ((void (*)(char *, char *, uint64_t))v165)(v226, v163, v107);
  id v166 = v230;
  uint64_t v167 = sub_100D39ED8();
  sub_100753370(v164, v167, v168, v225);
  BOOL v169 = v231;
  sub_100D2B1E4(0x61446E6F6D6D6F43, 0xEA00000000006174, 0, v231);
  uint64_t v170 = v107;
  id v171 = v219;
  if (*((void *)&v231[0] + 1) >> 60 == 15)
  {
    BOOL v169 = v232;
    sub_100D2A730(0x61446E6F6D6D6F43, 0xEA00000000006174, v232);
    unint64_t v213 = *((void *)&v232[0] + 1);
  }
  else
  {
    unint64_t v213 = *((void *)&v231[0] + 1);
  }
  uint64_t v172 = *(void *)v169;
  sub_100D2B1E4(0x6369666963657053, 0xEC00000061746144, 0, v231);
  unint64_t v173 = *((void *)&v231[0] + 1);
  if (*((void *)&v231[0] + 1) >> 60 == 15)
  {
    sub_100D2A730(0x6369666963657053, 0xEC00000061746144, v232);
    unint64_t v173 = *((void *)&v232[0] + 1);
    uint64_t v210 = *(void *)&v232[0];
  }
  else
  {
    uint64_t v210 = *(void *)&v231[0];
    *(void *)&v232[0] = *(void *)&v231[0];
  }
  id v174 = [v166 recordChangeTag];
  if (v174)
  {

    id v175 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [v166 encodeSystemFieldsWithCoder:v175];
    id v176 = [v175 encodedData];
    uint64_t v208 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v209 = v177;
  }
  else
  {
    uint64_t v208 = 0;
    unint64_t v209 = 0xF000000000000000;
  }
  uint64_t v178 = sub_100D2A93C(0x6E6F7473626D6F54, 0xEA00000000006465, (uint64_t)&type metadata for Int, 7630409, 0xE300000000000000);
  BOOL v181 = (v179 & 1) == 0 && v178 > 0;
  BOOL v207 = v181;
  uint64_t v182 = (uint64_t)v226;
  ((void (*)(char *, char *, uint64_t))v218)(v226, v171, v170);
  uint64_t v183 = v220;
  sub_100522E9C(v229, (uint64_t)v220, (uint64_t *)&unk_101674520);
  uint64_t v184 = v221;
  sub_100D42F4C(v225, v221, type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for CRLBoardItemSyncRemoteRecord(0);
  uint64_t v206 = swift_allocObject();
  unint64_t v185 = v213;
  sub_1005FA2A0(v172, v213);
  uint64_t v117 = v210;
  sub_1005FA2A0(v210, v173);
  uint64_t v187 = v208;
  uint64_t v186 = v209;
  sub_1005FA2A0(v208, v209);
  uint64_t v88 = sub_100EB42E0(v182, (uint64_t)v217, v214, v216, v212, v211, (uint64_t)v183, v184, v207, v172, v185, v117, v173, v187, v186, v215);
  unint64_t v215 = v173;
  sub_100514260(v117, v173);
  uint64_t v216 = v172;
  sub_100514260(v172, v185);
  swift_retain();
  uint64_t v221 = CKRecord.allKeys()();
  uint64_t v188 = *(void *)(v221 + 16);
  if (!v188)
  {
LABEL_77:
    swift_release();

    sub_100514260(v208, v209);
    sub_100514260(v210, v215);
    sub_100514260(v216, v213);
    swift_bridgeObjectRelease();
    sub_100D426E4(v225, type metadata accessor for CRLBoardIdentifier);
    uint64_t v202 = v228;
    Swift::String v203 = *(void (**)(char *, uint64_t))(v227 + 8);
    v203(v222, v228);
    sub_100522F00(v229, (uint64_t *)&unk_101674520);
    v203(v219, v202);
    return v88;
  }
  uint64_t v217 = (void *)(v88 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_assets);
  uint64_t v220 = (void *)(v227 + 8);
  uint64_t v189 = (char ***)(v221 + 40);
  id v56 = (char **)&_sScS8IteratorVyx_GScIsMc_ptr;
  while (1)
  {
    uint64_t v57 = *v189;
    swift_bridgeObjectRetain();
    if (!CKRecord.subscript.getter()
      || (self, uint64_t v190 = swift_dynamicCastObjCClass(), swift_unknownObjectRelease(), !v190)
      || (v191._countAndFlagsBits = 0x7465737341,
          v191._object = (void *)0xE500000000000000,
          !String.hasSuffix(_:)(v191)))
    {
      swift_bridgeObjectRelease();
      goto LABEL_68;
    }
    swift_bridgeObjectRetain();
    if (__OFSUB__(0, String.count.getter())) {
      break;
    }
    String.index(_:offsetBy:)();
    swift_bridgeObjectRelease();
    uint64_t v192 = String.subscript.getter();
    uint64_t v117 = v193;
    swift_bridgeObjectRelease();
    if ((v192 ^ (unint64_t)v117) >> 14)
    {
      uint64_t v194 = static String._fromSubstring(_:)();
      uint64_t v196 = v195;
      swift_bridgeObjectRelease();
      uint64_t v197 = sub_100D29F18(v194, v196);
      swift_bridgeObjectRelease();
      if (!v197)
      {
        swift_release();

        sub_100514260(v208, v209);
        sub_100514260(v210, v215);
        sub_100514260(v216, v213);
        swift_bridgeObjectRelease();
        sub_100D426E4(v225, type metadata accessor for CRLBoardIdentifier);
        uint64_t v204 = (void (*)(char *, uint64_t))*v220;
        uint64_t v205 = v228;
        ((void (*)(char *, uint64_t))*v220)(v222, v228);
        sub_100522F00(v229, (uint64_t *)&unk_101674520);
        v204(v219, v205);
        swift_release();
        return 0;
      }
      uint64_t v198 = (uint64_t)v226;
      uint64_t v199 = v228;
      ((void (*)(char *, uint64_t, uint64_t))v218)(v226, v197 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata, v228);
      uint64_t v200 = v217;
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v231[0] = *v200;
      void *v200 = 0x8000000000000000;
      sub_1009770E8(v197, v198, isUniquelyReferenced_nonNull_native);
      void *v200 = *(void *)&v231[0];
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t))*v220)(v198, v199);
      swift_endAccess();
      swift_release();
      id v56 = (char **)&_sScS8IteratorVyx_GScIsMc_ptr;
    }
    else
    {
      swift_bridgeObjectRelease();
      id v56 = (char **)&_sScS8IteratorVyx_GScIsMc_ptr;
    }
LABEL_68:
    v189 += 2;
    if (!--v188) {
      goto LABEL_77;
    }
  }
  __break(1u);
LABEL_80:
  swift_once();
LABEL_36:
  swift_beginAccess();
  uint64_t v118 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v119 = swift_initStackObject();
  *(_OWORD *)(v119 + 16) = xmmword_10117E810;
  id v120 = v118;
  char v121 = v57[73];
  id v122 = v230;
  id v123 = [v230 v121];
  id v124 = [v123 v56[301]];

  uint64_t v125 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v127 = v126;

  *(void *)(v119 + 56) = &type metadata for String;
  *(void *)(v119 + 64) = sub_100528BE4();
  *(void *)(v119 + 32) = v125;
  *(void *)(v119 + 40) = v127;
  uint64_t v128 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v120, (uint64_t)&_mh_execute_header, v128, (uint64_t)"Remote record does not have an objectOptions %{public}@", 55, 2, v119);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  (*(void (**)(char *, uint64_t))(v117 + 8))(v219, v228);
  return 0;
}

uint64_t sub_100D3DAC8(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_1009B7FE8(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_1009B7FE8(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_1009B7FE8(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        uint64_t v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_100D3DEF0(void *a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v120 = (uint64_t)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v122 = (uint64_t)&v113 - v7;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for UUID();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124, v12);
  unint64_t v14 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = __chkstk_darwin(v15, v16).n128_u64[0];
  char v121 = (char *)&v113 - v18;
  id v19 = [a1 recordID:v17];
  id v20 = [v19 recordName];
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v23 = v22;

  swift_bridgeObjectRetain();
  unint64_t v24 = String.count.getter();
  swift_bridgeObjectRelease();
  unint64_t v25 = sub_10070B5DC(v24, v21, v23);
  unint64_t v27 = v26;
  unint64_t v29 = v28;
  unint64_t v31 = v30;
  swift_bridgeObjectRelease();
  if (!((v25 ^ v27) >> 14))
  {

    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  uint64_t v32 = sub_100D3A6D8(v25, v27, v29, v31, 10);
  if ((v33 & 0x100) == 0)
  {
    uint64_t v34 = v32;
    char v35 = v33;

    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      uint64_t v119 = (unsigned __int8 *)v34;
      goto LABEL_7;
    }
LABEL_40:
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v104 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v45 = v104;
    id v106 = [a1 recordID];
    id v107 = [v106 recordName];

    uint64_t v108 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v110 = v109;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v108;
    *(void *)(inited + 40) = v110;
    uint64_t v111 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v111, (uint64_t)"Invalid bucketIndex from remote record. Expected a UInt64 but received %{public}@", 81, 2, inited);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    goto LABEL_43;
  }
  unsigned int v36 = sub_100D3A348(v25, v27, v29, v31, 10);
  char v38 = v37;

  swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_40;
  }
  uint64_t v119 = v36;
LABEL_7:
  uint64_t v39 = v123;
  id v40 = [a1 recordID];
  id v41 = [v40 zoneID];

  sub_100D3A008((uint64_t)v11);
  uint64_t v42 = v124;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v11, 1, v124) == 1)
  {
    sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unsigned int v43 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v44 = swift_initStackObject();
    *(_OWORD *)(v44 + 16) = xmmword_10117E810;
    id v45 = v43;
    id v46 = [a1 recordID];
    id v47 = [v46 zoneID];

    *(void *)(v44 + 56) = sub_10050BF48(0, (unint64_t *)&qword_101674210);
    *(void *)(v44 + 64) = sub_1005E8BFC(&qword_101685C78, (unint64_t *)&qword_101674210);
    *(void *)(v44 + 32) = v47;
    uint64_t v48 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v48, (uint64_t)"The board reference has an invalid zone ID %{public}@", 53, 2, v44);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
LABEL_43:
    swift_arrayDestroy();

    return 0;
  }
  uint64_t v49 = v121;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v121, v11, v42);
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v14, v49, v42);
  uint64_t v50 = sub_100D39ED8();
  sub_100753370((uint64_t)v14, v50, v51, v122);
  uint64_t v52 = sub_100D2A93C(0xD00000000000001BLL, 0x80000001012856B0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  char v54 = v53;
  uint64_t v55 = sub_100D2A93C(0xD00000000000001ALL, 0x80000001012856D0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  char v57 = v56;
  uint64_t v118 = sub_100D2A93C(0xD000000000000021, 0x8000000101285000, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  LODWORD(v115) = v58;
  uint64_t v117 = sub_100D2A93C(0xD000000000000019, 0x8000000101285030, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  int v116 = v59;
  uint64_t v60 = sub_100D2B45C(0xD000000000000030, 0x8000000101285630, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v61)
  {
    uint64_t v62 = sub_100D2A93C(0xD000000000000030, 0x8000000101285630, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    int v63 = v64 & 1;
  }
  else
  {
    uint64_t v62 = v60;
    int v63 = 0;
  }
  uint64_t v65 = sub_100D2B45C(0xD00000000000002FLL, 0x8000000101285600, 0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v66)
  {
    uint64_t v65 = sub_100D2A93C(0xD00000000000002FLL, 0x8000000101285600, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    int v67 = v68 & 1;
    if (v54)
    {
LABEL_26:
      uint64_t v52 = 0;
      uint64_t v115 = 0;
      uint64_t v70 = 0;
      uint64_t v71 = 0;
      uint64_t v118 = 0;
      int v69 = 1;
      goto LABEL_27;
    }
  }
  else
  {
    int v67 = 0;
    if (v54) {
      goto LABEL_26;
    }
  }
  if (v57 & 1) != 0 || (v115) {
    goto LABEL_26;
  }
  uint64_t v115 = v55;
  int v69 = 0;
  if (v63) {
    uint64_t v70 = 0x2000400000000;
  }
  else {
    uint64_t v70 = v62;
  }
  if (v67) {
    uint64_t v71 = 0x2000400000000;
  }
  else {
    uint64_t v71 = v65;
  }
LABEL_27:
  id v72 = [a1 encryptedValues];
  NSString v73 = String._bridgeToObjectiveC()();
  id v74 = [v72 objectForKeyedSubscript:v73];

  swift_unknownObjectRelease();
  if (v74)
  {
    self;
    uint64_t v75 = swift_dynamicCastObjCClass();
    if (v75) {
      goto LABEL_32;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v76 = sub_100D2AB4C(0x6C6261656772654DLL, 0xEF74656B63754265, (unint64_t *)&unk_10169A7A0);
  if (!v76)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v95 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v96 = swift_initStackObject();
    *(_OWORD *)(v96 + 16) = xmmword_10117E810;
    id v97 = v95;
    id v98 = [a1 recordID];
    id v99 = [v98 recordName];

    uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v102 = v101;

    *(void *)(v96 + 56) = &type metadata for String;
    *(void *)(v96 + 64) = sub_100528BE4();
    *(void *)(v96 + 32) = v100;
    *(void *)(v96 + 40) = v102;
    uint64_t v103 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v97, (uint64_t)&_mh_execute_header, v103, (uint64_t)"Remote record does not have mergeable bucketData %{public}@", 59, 2, v96);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100D426E4(v122, type metadata accessor for CRLBoardIdentifier);
    (*(void (**)(char *, uint64_t))(v123 + 8))(v121, v124);
    return 0;
  }
  uint64_t v75 = v76;
LABEL_32:
  int v114 = v69;
  id v77 = [a1 recordChangeTag];
  uint64_t v113 = v71;
  uint64_t v78 = v70;
  uint64_t v79 = v52;
  if (v77)
  {

    id v80 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [a1 encodeSystemFieldsWithCoder:v80];
    id v81 = [v80 encodedData];
    uint64_t v82 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v84 = v83;
  }
  else
  {
    uint64_t v82 = 0;
    unint64_t v84 = 0xF000000000000000;
  }
  uint64_t v85 = v122;
  uint64_t v86 = v120;
  sub_100D42F4C(v122, v120, type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for CRLFreehandDrawingBucketSyncRemoteRecord(0);
  uint64_t v87 = swift_allocObject();
  *(void *)(v87 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_ckMergeableRecordValue) = v75;
  uint64_t v88 = v87 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersionForSync;
  *(void *)uint64_t v88 = v117;
  *(unsigned char *)(v88 + 8) = v116 & 1;
  uint64_t v89 = v87 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions;
  uint64_t v90 = v115;
  *(void *)uint64_t v89 = v79;
  *(void *)(v89 + 8) = v90;
  uint64_t v91 = v113;
  *(void *)(v89 + 16) = v78;
  *(void *)(v89 + 24) = v91;
  *(void *)(v89 + 32) = v118;
  *(unsigned char *)(v89 + 40) = v114;
  sub_100D42F4C(v86, v87 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  uint64_t v92 = v87 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData;
  *(_OWORD *)uint64_t v92 = xmmword_101190880;
  *(void *)(v87 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex) = v119;
  uint64_t v93 = *(void *)v92;
  unint64_t v94 = *(void *)(v92 + 8);
  *(void *)uint64_t v92 = v82;
  *(void *)(v92 + 8) = v84;
  sub_100514260(v93, v94);
  sub_100D426E4(v86, type metadata accessor for CRLBoardIdentifier);

  sub_100D426E4(v85, type metadata accessor for CRLBoardIdentifier);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v121, v124);
  return v87;
}

Class sub_100D3EC2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v8 = *v7;
  uint64_t v9 = (void *)v7[1];
  if (*v7) {
    BOOL v10 = 0;
  }
  else {
    BOOL v10 = v9 == (void *)0xE000000000000000;
  }
  if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v11;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v19 = 0x5F6472616F42;
  unint64_t v20 = 0xE600000000000000;
  v12._countAndFlagsBits = UUID.uuidString.getter();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v19;
  unint64_t v14 = (void *)v20;
  sub_10050BF48(0, (unint64_t *)&qword_101674210);
  v15._countAndFlagsBits = v13;
  v15._object = v14;
  v16._countAndFlagsBits = v8;
  v16._object = v9;
  Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v15, v16).super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return isa;
}

uint64_t sub_100D3EDF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100CB2DE4(*(void *)(v1 + 24), a1);
}

uint64_t sub_100D3EE0C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v27 = a2;
  uint64_t v26 = sub_1005057FC((uint64_t *)&unk_101684FB0);
  __chkstk_darwin(v26, v3);
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v25 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v28 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v25) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v24 + 8 * v11);
      if (!v21)
      {
        int64_t v11 = v20 + 2;
        if (v20 + 2 >= v25) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v24 + 8 * v11);
        if (!v21)
        {
          int64_t v11 = v20 + 3;
          if (v20 + 3 >= v25) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v24 + 8 * v11);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v21 - 1) & v21;
    unint64_t v13 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_5:
    uint64_t v14 = *(void *)(v28 + 56);
    Swift::String v15 = (uint64_t *)(*(void *)(v28 + 48) + 16 * v13);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = v14 + *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674520) - 8) + 72) * v13;
    uint64_t v19 = (uint64_t)v5 + *(int *)(v26 + 48);
    sub_100522E9C(v18, v19, (uint64_t *)&unk_101674520);
    *uint64_t v5 = v17;
    v5[1] = v16;
    swift_bridgeObjectRetain();
    v27(v17, v16, v19);
    uint64_t result = sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101684FB0);
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v25) {
    return swift_release();
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v25) {
      return swift_release();
    }
    unint64_t v21 = *(void *)(v24 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100D3F084(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100D3F0CC(Swift::Int a1, Swift::Int a2, uint64_t a3)
{
  return sub_100D39370(a1, a2, a3, v3[2], v3[3], v3[4], &OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_unsyncedAssetUUIDs);
}

uint64_t sub_100D3F0F4(uint64_t a1)
{
  id v6 = 0;
  id v1 = [self archivedDataWithRootObject:a1 requiringSecureCoding:1 error:&v6];
  id v2 = v6;
  if (v1)
  {
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v4 = v2;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v3;
}

id sub_100D3F1D8(void *a1, void *a2)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v6 = v4;
  id v7 = [a2 recordID];
  uint64_t v8 = sub_10050BF48(0, &qword_10167BED0);
  *(void *)(inited + 56) = v8;
  uint64_t v9 = sub_1005E8BFC((unint64_t *)&qword_101685CC8, &qword_10167BED0);
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v7;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Found multiple records of the same ID %@ in fetchedRecords batch; merging.",
    74,
    2,
    inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v58 = a2;
  id v11 = [a2 recordChangeTag];
  if (!v11)
  {
    id v11 = [a1 recordChangeTag];
    if (!v11)
    {
      unint64_t v12 = (void *)static OS_os_log.dataSync;
      uint64_t v13 = swift_initStackObject();
      *(_OWORD *)(v13 + 16) = xmmword_10117D8C0;
      id v11 = v12;
      id v14 = [a1 recordID];
      *(void *)(v13 + 56) = v8;
      *(void *)(v13 + 64) = v9;
      *(void *)(v13 + 32) = v14;
      uint64_t v15 = CKRecord.recordType.getter();
      uint64_t v17 = v16;
      *(void *)(v13 + 96) = &type metadata for String;
      *(void *)(v13 + 104) = sub_100528BE4();
      *(void *)(v13 + 72) = v15;
      *(void *)(v13 + 80) = v17;
      uint64_t v18 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v18, (uint64_t)"We are attempting to merge a partial record into an existing partial record. This should never happen. Existing recordID: %@, recordType: %@", 140, 2, v13);
      swift_setDeallocating();
      swift_arrayDestroy();
    }
  }
  id v57 = a1;

  uint64_t v19 = &selRef_stringFromPersonNameComponents_;
  int64_t v20 = v58;
  id v21 = objc_msgSend(objc_msgSend(v58, "encryptedValues"), "allKeys");
  swift_unknownObjectRelease();
  uint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v24 = (uint64_t *)(v22 + 40);
    char v56 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v26 = *(v24 - 1);
      uint64_t v25 = *v24;
      swift_bridgeObjectRetain();
      id v27 = [v20 v19[72]];
      NSString v28 = String._bridgeToObjectiveC()();
      id v29 = [v27 objectForKeyedSubscript:v28];
      swift_unknownObjectRelease();

      if (v29)
      {
        self;
        uint64_t v30 = swift_dynamicCastObjCClass();
        if (v30)
        {
          unint64_t v31 = (void *)v30;
          uint64_t v32 = v19;
          id v33 = [v57 v19[72]];
          NSString v34 = String._bridgeToObjectiveC()();
          id v35 = [v33 objectForKeyedSubscript:v34];
          swift_unknownObjectRelease();

          if (v35)
          {
            self;
            uint64_t v36 = swift_dynamicCastObjCClass();
            int64_t v20 = v58;
            if (v36)
            {
              id v59 = 0;
              if ([v31 mergeRecordValue:v36 error:&v59])
              {
                id v37 = v59;
                if (swift_isUniquelyReferenced_nonNull_native()) {
                  char v38 = v56;
                }
                else {
                  char v38 = sub_100F61B70(0, *((void *)v56 + 2) + 1, 1, v56);
                }
                unint64_t v40 = *((void *)v38 + 2);
                unint64_t v39 = *((void *)v38 + 3);
                if (v40 >= v39 >> 1) {
                  char v38 = sub_100F61B70((double *)(v39 > 1), v40 + 1, 1, v38);
                }
                *((void *)v38 + 2) = v40 + 1;
                char v56 = v38;
                id v41 = &v38[2 * v40];
                *((void *)v41 + 4) = v26;
                *((void *)v41 + 5) = v25;
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                uint64_t v19 = v32;
              }
              else
              {
                id v42 = v59;
                swift_bridgeObjectRelease();
                _convertNSErrorToError(_:)();

                swift_willThrow();
                id v43 = (id)static OS_os_log.dataSync;
                uint64_t v44 = static os_log_type_t.error.getter();
                sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v44, (uint64_t)"Failed to merge oldCKMergeableRecordValue up with new CKMergeableRecordValue between two CKRecords in the same batch.", 117, 2, (uint64_t)_swiftEmptyArrayStorage);

                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                swift_errorRelease();
                uint64_t v19 = v32;
              }
            }
            else
            {
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v19 = v32;
            }
          }
          else
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            int64_t v20 = v58;
            uint64_t v19 = v32;
          }
          goto LABEL_10;
        }
        swift_unknownObjectRelease();
      }
      swift_bridgeObjectRelease();
LABEL_10:
      v24 += 2;
      if (!--v23) {
        goto LABEL_26;
      }
    }
  }
  char v56 = _swiftEmptyArrayStorage;
LABEL_26:
  swift_bridgeObjectRelease();
  if (*((void *)v56 + 2))
  {
    id v45 = [v20 recordChangeTag];
    if (v45)
    {
      id v46 = v45;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v47 = *((void *)v56 + 2);
      if (v47)
      {
        uint64_t v48 = v56 + 5;
        uint64_t v49 = v19;
        do
        {
          swift_bridgeObjectRetain();
          id v50 = [v57 v49[72]];
          id v51 = [v20 v49[72]];
          NSString v52 = String._bridgeToObjectiveC()();
          id v53 = [v51 objectForKeyedSubscript:v52];

          int64_t v20 = v58;
          swift_unknownObjectRelease();
          NSString v54 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v50 setObject:v53 forKeyedSubscript:v54];
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          v48 += 2;
          --v47;
        }
        while (v47);
      }
      swift_bridgeObjectRelease();
      return v57;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v20;
}

uint64_t sub_100D3F8F8(void *a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v63 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v63 - v16;
  *(void *)&double v20 = __chkstk_darwin(v18, v19).n128_u64[0];
  uint64_t v22 = (char *)&v63 - v21;
  id v23 = [a1 recordID:v20];
  id v24 = [v23 recordName];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  sub_100753CE4(v25, v27, v5);
  sub_100D42FB4((uint64_t)v5, (uint64_t)v13, type metadata accessor for CRLBoardIdentifierStorage);
  sub_100D42FB4((uint64_t)v13, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
  sub_100D42FB4((uint64_t)v17, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
  id v28 = [a1 recordChangeTag];
  if (v28)
  {

    id v29 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    [a1 encodeSystemFieldsWithCoder:v29];
    id v30 = [v29 encodedData];
    uint64_t v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v33 = 0xF000000000000000;
  }
  uint64_t v34 = sub_100D2A93C(0xD000000000000021, 0x8000000101285000, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v35)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v44 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v46 = v44;
    id v47 = [a1 recordID];
    id v48 = [v47 recordName];

    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v51 = v50;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v49;
    *(void *)(inited + 40) = v51;
    uint64_t v52 = static os_log_type_t.error.getter();
    id v53 = "Remote record does not have a minRequiredVersionForFullFidelity %{public}@";
    uint64_t v54 = (uint64_t)v46;
    uint64_t v55 = 74;
    goto LABEL_13;
  }
  uint64_t v36 = v34;
  uint64_t v37 = sub_100D2A93C(0xD000000000000019, 0x8000000101285030, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v38)
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v56 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v46 = v56;
    id v57 = [a1 recordID];
    id v58 = [v57 recordName];

    uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v61 = v60;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v59;
    *(void *)(inited + 40) = v61;
    uint64_t v52 = static os_log_type_t.error.getter();
    id v53 = "Remote record does not have a minRequiredVersionForSync %{public}@";
    uint64_t v54 = (uint64_t)v46;
    uint64_t v55 = 66;
LABEL_13:
    sub_100BAC898(v54, (uint64_t)&_mh_execute_header, v52, (uint64_t)v53, v55, 2, inited);
    sub_100514260(v31, v33);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100D426E4((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
    return 0;
  }
  uint64_t v39 = v37;
  sub_100D2B1E4(0xD000000000000011, 0x80000001012855E0, 1, &v65);
  unint64_t v64 = v33;
  long long v40 = v65;
  sub_100D42F4C((uint64_t)v22, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for CRLUserBoardMetadataSyncRemoteRecord(0);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData) = v40;
  swift_retain();
  sub_100514260(0, 0xF000000000000000);
  *(void *)(v41 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_minRequiredVersionForSync) = v39;
  swift_release();
  sub_100D42FB4((uint64_t)v9, v41 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);

  id v42 = (uint64_t *)(v41 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData);
  unint64_t v43 = v64;
  *id v42 = v31;
  v42[1] = v43;
  *(void *)(v41 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity) = v36;
  sub_100D426E4((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
  return v41;
}

uint64_t sub_100D40124(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v51[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = &v51[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v12);
  uint64_t v14 = &v51[-v13];
  self;
  uint64_t v15 = swift_dynamicCastObjCClass();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    id v17 = a1;
    id v18 = [v16 recordID];
    id v19 = [v18 zoneID];

    sub_100D29C10((uint64_t)v5);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_100522F00((uint64_t)v5, &qword_101672C30);
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      double v20 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v52 = 0x203A65707954;
      unint64_t v53 = 0xE600000000000000;
      id v22 = v17;
      id v23 = v20;
      v24._countAndFlagsBits = CKRecord.recordType.getter();
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      v25._countAndFlagsBits = 0x203A444920;
      v25._object = (void *)0xE500000000000000;
      String.append(_:)(v25);
      id v26 = [v16 recordID];
      id v27 = [v26 recordName];

      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v30 = v29;

      v31._countAndFlagsBits = v28;
      v31._object = v30;
      String.append(_:)(v31);

      swift_bridgeObjectRelease();
      uint64_t v32 = v52;
      unint64_t v33 = v53;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v32;
      *(void *)(inited + 40) = v33;
      uint64_t v34 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Could not extract the board identifier from the CKShare %{public}@", 66, 2, inited);

      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return 0;
    }
    else
    {

      sub_100D42FB4((uint64_t)v5, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
      sub_100D42FB4((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      type metadata accessor for CRLBoardShareSyncRemoteRecord(0);
      uint64_t v35 = swift_allocObject();
      sub_100D42FB4((uint64_t)v10, v35 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
      *(void *)(v35 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_ckShare) = v16;
    }
  }
  else
  {
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v36 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v37 = swift_initStackObject();
    *(_OWORD *)(v37 + 16) = xmmword_10117E810;
    uint64_t v52 = 0x203A65707954;
    unint64_t v53 = 0xE600000000000000;
    id v38 = v36;
    v39._countAndFlagsBits = CKRecord.recordType.getter();
    String.append(_:)(v39);
    swift_bridgeObjectRelease();
    v40._countAndFlagsBits = 0x203A444920;
    v40._object = (void *)0xE500000000000000;
    String.append(_:)(v40);
    id v41 = [a1 recordID];
    id v42 = [v41 recordName];

    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v45 = v44;

    v46._countAndFlagsBits = v43;
    v46._object = v45;
    String.append(_:)(v46);
    swift_bridgeObjectRelease();
    uint64_t v47 = v52;
    unint64_t v48 = v53;
    *(void *)(v37 + 56) = &type metadata for String;
    *(void *)(v37 + 64) = sub_100528BE4();
    *(void *)(v37 + 32) = v47;
    *(void *)(v37 + 40) = v48;
    uint64_t v49 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v49, (uint64_t)"Invalid record type. Expected CKShare but received a CKRecord %{public}@", 72, 2, v37);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  return v35;
}

uint64_t sub_100D406CC(void *a1)
{
  uint64_t v2 = CKRecord.recordType.getter();
  char v4 = sub_100D2AD54(v2, v3);
  swift_bridgeObjectRelease();
  switch(v4)
  {
    case 1:
      uint64_t result = sub_100D3A7AC(a1);
      break;
    case 2:
      uint64_t result = sub_100D3F8F8(a1);
      break;
    case 3:
      uint64_t result = sub_100D3DEF0(a1);
      break;
    case 4:
    case 5:
    case 6:
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v5 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v7 = v5;
      uint64_t v8 = CKRecord.recordType.getter();
      sub_100D2AD54(v8, v9);
      swift_bridgeObjectRelease();
      sub_1005057FC(&qword_101687028);
      uint64_t v10 = String.init<A>(describing:)();
      uint64_t v12 = v11;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v10;
      *(void *)(inited + 40) = v12;
      uint64_t v13 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v13, (uint64_t)"CRLBoardSyncLogicProvider should not be creating public types: recordType %{public}@.", 85, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t result = 0;
      break;
    case 7:
      uint64_t result = sub_100D40124(a1);
      break;
    case 8:
      id v15 = [a1 recordID];
      type metadata accessor for CRLUnknownSyncRemoteRecord();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v15;
      break;
    default:
      uint64_t result = sub_100D3C104(a1);
      break;
  }
  return result;
}

uint64_t sub_100D40944(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005057FC(&qword_10169A7C0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15, v16);
  id v18 = &v24[-v17];
  uint64_t v19 = 0;
  unint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData + 8);
  if (v20 >> 60 != 15)
  {
    uint64_t v21 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform36CRLUserBoardMetadataSyncRemoteRecord_boardCRDTData);
    swift_retain();
    sub_1005FA2A0(v21, v20);
    sub_100D3F084(&qword_101683BA8, (void (*)(uint64_t))type metadata accessor for CRLUserBoardMetadataCRDTData);
    CRDT.init(serializedData:)();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    sub_100D42FB4((uint64_t)v9, (uint64_t)v18, type metadata accessor for CRLUserBoardMetadataCRDTData);
    sub_100D42F4C(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier, (uint64_t)v5, type metadata accessor for CRLBoardIdentifier);
    sub_100D42FB4((uint64_t)v18, (uint64_t)v14, type metadata accessor for CRLUserBoardMetadataCRDTData);
    uint64_t v22 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity);
    swift_release();
    type metadata accessor for CRLUserBoardMetadataData();
    uint64_t v19 = swift_allocObject();
    sub_100D42FB4((uint64_t)v5, v19 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
    sub_100D42FB4((uint64_t)v14, v19 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, type metadata accessor for CRLUserBoardMetadataCRDTData);
    *(void *)(v19 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) = v22;
  }
  return v19;
}

void sub_100D40C94(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_unsyncedChanges;
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_unsyncedChanges);
  if (v9)
  {
    id v29 = &type metadata for UInt64;
    id v30 = &protocol witness table for UInt64;
    uint64_t v27 = 0x1000000000000;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
  }
  else if ((v9 & 2) == 0)
  {
    if ((v9 & 4) == 0) {
      return;
    }
LABEL_12:
    uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_minRequiredVersionForFullFidelity);
    id v29 = &type metadata for UInt64;
    id v30 = &protocol witness table for UInt64;
    uint64_t v27 = v23;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
    return;
  }
  uint64_t v26 = v8;
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_boardMetadataData);
  if (v10)
  {
    Swift::String v25 = a1;
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext + 24);
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext + 32);
    sub_10050F848((void *)(v1 + OBJC_IVAR____TtC8Freeform41CRLUserBoardMetadataSyncLocalChangeRecord_persistenceContext), v11);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    swift_retain();
    uint64_t v14 = (void *)v13(v11, v12);
    uint64_t v15 = v10 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData;
    swift_beginAccess();
    sub_100D42F4C(v15, (uint64_t)v7, type metadata accessor for CRLUserBoardMetadataCRDTData);
    if (qword_10166EE10 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for CRCodableVersion();
    sub_100556B74(v16, (uint64_t)qword_10171A2D8);
    sub_100D3F084(&qword_101683BA8, (void (*)(uint64_t))type metadata accessor for CRLUserBoardMetadataCRDTData);
    uint64_t v17 = CRDT.serializedData(_:version:)();
    id v18 = v25;
    uint64_t v19 = v17;
    unint64_t v21 = v20;
    sub_100D426E4((uint64_t)v7, type metadata accessor for CRLUserBoardMetadataCRDTData);
    swift_release();

    id v22 = [v18 encryptedValues];
    swift_getObjectType();
    id v29 = &type metadata for Data;
    id v30 = &protocol witness table for Data;
    uint64_t v27 = v19;
    unint64_t v28 = v21;
    sub_100510D4C(v19, v21);
    CKRecordKeyValueSetting.subscript.setter();
    sub_100510084(v19, v21);
    swift_unknownObjectRelease();
  }
  if ((v9 & 1) != 0 || (*(void *)(v2 + v26) & 4) != 0) {
    goto LABEL_12;
  }
}

void sub_100D4105C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10169A770);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v79 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101699938);
  uint64_t v75 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  id v80 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_10169A1D0);
  uint64_t v77 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  *(void *)&double v12 = __chkstk_darwin(v10, v11).n128_u64[0];
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_unsyncedChanges;
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_unsyncedChanges);
  uint64_t v82 = v15 & 1;
  uint64_t v76 = v7;
  if (v15)
  {
    id v16 = [a1 encryptedValues:v12];
    swift_getObjectType();
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
    *((void *)&v85 + 1) = &type metadata for Int;
    uint64_t v86 = &protocol witness table for Int;
    *(void *)&long long v84 = v17;
    CKRecordKeyValueSetting.subscript.setter();
    swift_unknownObjectRelease();
    sub_10050BF48(0, &qword_10167BED0);
    uint64_t v18 = UUID.uuidString.getter();
    unint64_t v20 = v19;
    id v21 = [a1 recordID];
    id v22 = [v21 zoneID];

    v23._countAndFlagsBits = v18;
    v23._object = v20;
    Class isa = CKRecordID.init(recordName:zoneID:)(v23, (CKRecordZoneID)v22).super.isa;
    [objc_allocWithZone((Class)CKReference) initWithRecordID:isa action:1];
    CKRecord.subscript.setter();
    uint64_t v86 = &protocol witness table for UInt64;
    *((void *)&v85 + 1) = &type metadata for UInt64;
    *(void *)&long long v84 = 0x1000000000000;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();

LABEL_5:
    id v81 = a1;
    uint64_t v25 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
    uint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData);
    unint64_t v27 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData + 8);
    uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
    uint64_t v74 = *(void *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                    + 8);
    uint64_t v29 = *(void *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                    + 16);
    uint64_t v73 = *(void *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                    + 24);
    uint64_t v72 = *(void *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                    + 32);
    sub_100510D4C(v26, v27);
    sub_1005057FC((uint64_t *)&unk_1016A8B60);
    sub_100523288(&qword_10169A210, (uint64_t *)&unk_1016A8B60);
    Capsule<>.init(serializedData:allowedAppFormats:)();
    sub_1005057FC((uint64_t *)&unk_1016A8B70);
    id v30 = (void *)swift_allocObject();
    *((unsigned char *)v30 + *(void *)(*v30 + 136)) = 0;
    void v30[2] = v25;
    Swift::String v31 = (char *)v30 + *(void *)(*v30 + 120);
    uint64_t v32 = v77;
    uint64_t v33 = v78;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v31, v14, v78);
    *((unsigned char *)v30 + *(void *)(*v30 + 136)) = 0;
    uint64_t v34 = (void *)((char *)v30 + *(void *)(*v30 + 128));
    uint64_t v35 = v74;
    void *v34 = v28;
    v34[1] = v35;
    uint64_t v36 = v73;
    v34[2] = v29;
    v34[3] = v36;
    v34[4] = v72;
    swift_beginAccess();
    uint64_t v37 = v79;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v79, v31, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v37, 0, 1, v33);
    type metadata accessor for CRContext();
    uint64_t v86 = 0;
    long long v84 = 0u;
    long long v85 = 0u;
    static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)();
    sub_100522F00((uint64_t)&v84, (uint64_t *)&unk_10169A780);
    sub_100CE9068();
    id v38 = v80;
    CRCKMergeable.init(crdt:context:)();
    unint64_t v39 = *(void *)(v2
                    + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData
                    + 8);
    if (v39 >> 60 == 15)
    {
      a1 = v81;
      uint64_t v41 = v75;
      uint64_t v40 = v76;
    }
    else
    {
      uint64_t v42 = *(void *)(v2
                      + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_ckMergeableRecordValueData);
      sub_10050BF48(0, &qword_101693260);
      sub_10050BF48(0, (unint64_t *)&unk_10169A7A0);
      sub_100510D4C(v42, v39);
      sub_100510D4C(v42, v39);
      uint64_t v43 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      uint64_t v41 = v75;
      uint64_t v40 = v76;
      id v70 = (id)v43;
      sub_100514260(v42, v39);
      sub_100514260(v42, v39);
      if (v70)
      {
        id v38 = v80;
        a1 = v81;
        goto LABEL_10;
      }
      id v38 = v80;
      a1 = v81;
    }
    id v70 = [objc_allocWithZone((Class)CKMergeableRecordValue) init];
LABEL_10:
    *((void *)&v85 + 1) = v40;
    uint64_t v86 = (void *)sub_100523288((unint64_t *)&unk_10169A790, &qword_101699938);
    uint64_t v44 = sub_1005767BC((uint64_t *)&v84);
    (*(void (**)(uint64_t *, char *, uint64_t))(v41 + 16))(v44, v38, v40);
    CKMergeableRecordValue.addDeltasToSave(from:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v84);
    id v66 = [a1 encryptedValues];
    id v67 = v70;
    char v68 = v38;
    NSString v69 = String._bridgeToObjectiveC()();
    [v66 setObject:v67 forKeyedSubscript:v69];
    swift_release();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v41 + 8))(v68, v40);
    goto LABEL_11;
  }
  if ((v15 & 2) != 0) {
    goto LABEL_5;
  }
LABEL_11:
  uint64_t v46 = v82;
  uint64_t v45 = v83;
  if (!(*(void *)(v2 + v83) & 4 | v82)) {
    goto LABEL_17;
  }
  uint64_t v47 = sub_100D2A93C(0xD00000000000001BLL, 0x80000001012856B0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if (v48)
  {
    uint64_t v49 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
    goto LABEL_16;
  }
  uint64_t v49 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
  if (v47 != v49)
  {
LABEL_16:
    *((void *)&v85 + 1) = &type metadata for UInt64;
    uint64_t v86 = &protocol witness table for UInt64;
    *(void *)&long long v84 = v49;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
  }
LABEL_17:
  if (!(*(void *)(v2 + v45) & 8 | v46)) {
    goto LABEL_23;
  }
  uint64_t v50 = sub_100D2A93C(0xD00000000000001ALL, 0x80000001012856D0, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  uint64_t v51 = v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions;
  if (v52)
  {
    uint64_t v53 = *(void *)(v51 + 8);
    goto LABEL_22;
  }
  uint64_t v53 = *(void *)(v51 + 8);
  if (v50 != v53)
  {
LABEL_22:
    *((void *)&v85 + 1) = &type metadata for UInt64;
    uint64_t v86 = &protocol witness table for UInt64;
    *(void *)&long long v84 = v53;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    CKRecordKeyValueSetting.subscript.setter();
  }
LABEL_23:
  if (*(void *)(v2 + v45) & 0x10 | v46)
  {
    uint64_t v54 = sub_100D2B45C(0xD000000000000030, 0x8000000101285630, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
    if ((v55 & 1) != 0
      || v54 != *(void *)(v2
                          + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                          + 16))
    {
      *((void *)&v85 + 1) = &type metadata for CRLFeatureFlags;
      uint64_t v86 = (void *)sub_1005396A8();
      LOBYTE(v84) = 24;
      char v56 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v84);
      if (v56)
      {
        id v57 = [a1 encryptedValues];
        swift_getObjectType();
        uint64_t v58 = *(void *)(v2
                        + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                        + 16);
        *((void *)&v85 + 1) = &type metadata for UInt64;
        uint64_t v86 = &protocol witness table for UInt64;
        *(void *)&long long v84 = v58;
        CKRecordKeyValueSetting.subscript.setter();
        swift_unknownObjectRelease();
      }
    }
  }
  uint64_t v59 = *(void *)(v2 + v45);
  if (!(v59 & 0x20 | v46))
  {
LABEL_35:
    if ((v59 & 0x40) == 0) {
      return;
    }
    goto LABEL_36;
  }
  uint64_t v60 = sub_100D2B45C(0xD00000000000002FLL, 0x8000000101285600, 1, (uint64_t)&type metadata for UInt64, 0x3436746E4955, 0xE600000000000000);
  if ((v61 & 1) != 0
    || v60 != *(void *)(v2
                        + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                        + 24))
  {
    *((void *)&v85 + 1) = &type metadata for CRLFeatureFlags;
    uint64_t v86 = (void *)sub_1005396A8();
    LOBYTE(v84) = 24;
    char v62 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v84);
    if (v62)
    {
      id v63 = [a1 encryptedValues];
      swift_getObjectType();
      uint64_t v64 = *(void *)(v2
                      + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                      + 24);
      *((void *)&v85 + 1) = &type metadata for UInt64;
      uint64_t v86 = &protocol witness table for UInt64;
      *(void *)&long long v84 = v64;
      CKRecordKeyValueSetting.subscript.setter();
      swift_unknownObjectRelease();
    }
  }
  if (!v46)
  {
    uint64_t v59 = *(void *)(v2 + v45);
    goto LABEL_35;
  }
LABEL_36:
  uint64_t v65 = *(void *)(v2
                  + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                  + 32);
  *((void *)&v85 + 1) = &type metadata for UInt64;
  uint64_t v86 = &protocol witness table for UInt64;
  *(void *)&long long v84 = v65;
  sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  CKRecordKeyValueSetting.subscript.setter();
}

id sub_100D41CE4()
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v6 = 0;
  id v2 = [v0 initForReadingFromData:isa error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v2;
}

Class sub_100D41DA4()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData + 8);
  unint64_t v3 = v2 >> 60;
  if (v2 >> 60 == 15) {
    goto LABEL_3;
  }
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_syncData);
  id v5 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_100510D4C(v4, v2);
  id v26 = sub_100D41CE4();
  id v27 = [objc_allocWithZone((Class)CKRecord) initWithCoder:v26];
  sub_100514260(v4, v2);
  Class v28 = (Class)v27;

  if (!v28)
  {
LABEL_3:
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    v6._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v6._object = v7;
    v8._countAndFlagsBits = 0x74654D6472616F42;
    v8._object = (void *)0xED00006174616461;
    Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v8, v6).super.isa;
    sub_10050BF48(0, &qword_10167BED0);
    uint64_t v10 = v1 + OBJC_IVAR____TtC8Freeform30CRLUserBoardMetadataSyncRecord_boardIdentifier;
    v30._countAndFlagsBits = UUID.uuidString.getter();
    v30._object = v11;
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = 58;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    uint64_t v13 = (uint64_t *)(v10 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v14 = *v13;
    uint64_t v15 = (void *)v13[1];
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = v14;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    Class v17 = CKRecordID.init(recordName:zoneID:)(v30, (CKRecordZoneID)isa).super.isa;
    v18._countAndFlagsBits = 0x74654D6472616F42;
    v18._object = (void *)0xED00006174616461;
    Class v28 = CKRecord.init(recordType:recordID:)(v18, (CKRecordID)v17).super.isa;
    if (v3 <= 0xE)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v21 = v19;
      uint64_t v22 = UUID.uuidString.getter();
      uint64_t v24 = v23;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v22;
      *(void *)(inited + 40) = v24;
      uint64_t v25 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Failed to use existing sync data to decode CKRecord for board with id %@", 72, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
    }
  }
  else
  {
  }
  sub_100D40C94(v28);
  return v28;
}

Class sub_100D42190()
{
  uint64_t v1 = v0;
  unint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData);
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_syncData + 8);
  if (v3 >> 60 == 15) {
    goto LABEL_3;
  }
  uint64_t v4 = *v2;
  id v5 = objc_allocWithZone((Class)NSKeyedUnarchiver);
  sub_100510D4C(v4, v3);
  id v23 = sub_100D41CE4();
  id v24 = [objc_allocWithZone((Class)CKRecord) initWithCoder:v23];
  sub_100514260(v4, v3);
  Class v25 = (Class)v24;

  if (!v25)
  {
LABEL_3:
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    uint64_t v6 = v1 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_boardIdentifier;
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
    Class v8 = sub_100D3EC2C(v6);
    sub_10050BF48(0, &qword_10167BED0);
    uint64_t v9 = qword_10169A5F0;
    uint64_t v10 = off_10169A5F8;
    swift_bridgeObjectRetain();
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = v11;
    v14._object = v13;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15._countAndFlagsBits = v9;
    v15._object = v10;
    Class isa = CKRecordID.init(recordName:zoneID:)(v15, (CKRecordZoneID)v8).super.isa;
    v17._object = (void *)0x8000000101235C70;
    v17._countAndFlagsBits = 0xD000000000000015;
    Class v25 = CKRecord.init(recordType:recordID:)(v17, (CKRecordID)isa).super.isa;
    if ((unint64_t)v2[1] >> 60 != 15)
    {
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      Swift::String v18 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 56) = &type metadata for Int;
      *(void *)(inited + 64) = &protocol witness table for Int;
      *(void *)(inited + 32) = v7;
      id v20 = v18;
      uint64_t v21 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Failed to use existing sync data to decode CKRecord for freehandDrawingBucket with id %@", 88, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
    }
  }
  else
  {
  }
  sub_100D4105C(v25);
  return v25;
}

CKRecordID sub_100D42520(uint64_t a1)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v3 = sub_100753038();
  uint64_t v5 = v4;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  uint64_t v6 = (void *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  if (*v6) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v6[1] == 0xE000000000000000;
  }
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 868, (uint64_t)"Creating recordIDForCKRecord for board for public database using non-default ownerName for zone: %{public}@", 107, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"recordIDForCKRecord(newBoardIdentifier:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLBoardSyncLogicProvider.swift", 90, 2, 868);
  }
  swift_bridgeObjectRelease();
  Class v8 = sub_100D3EC2C(a1);
  sub_10050BF48(0, &qword_10167BED0);
  v9._countAndFlagsBits = UUID.uuidString.getter();
  return CKRecordID.init(recordName:zoneID:)(v9, (CKRecordZoneID)v8);
}

uint64_t sub_100D426A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100D36788(a1, a2, a3);
}

uint64_t sub_100D426BC(Swift::Int a1, Swift::Int a2, uint64_t a3)
{
  return sub_100D39370(a1, a2, a3, v3[2], v3[3], v3[4], &OBJC_IVAR____TtC8Freeform29CRLBoardSyncLocalChangeRecord_unsyncedAssetUUIDs);
}

uint64_t sub_100D426E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100D42744(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_10169A770);
  __chkstk_darwin(v5 - 8, v6);
  char v52 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101699938);
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v55 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10169A1D0);
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  __chkstk_darwin(v11, v12);
  Swift::String v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions);
  uint64_t v16 = *(void *)(v2
                  + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_minRequiredVersions
                  + 32);
  *((void *)&v58 + 1) = &type metadata for UInt64;
  uint64_t v59 = &protocol witness table for UInt64;
  *(void *)&long long v57 = v16;
  sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  CKRecordKeyValueSetting.subscript.setter();
  *((void *)&v58 + 1) = &type metadata for UInt64;
  uint64_t v59 = &protocol witness table for UInt64;
  *(void *)&long long v57 = 0x1000000000000;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v17 = v15[3];
  *((void *)&v58 + 1) = &type metadata for UInt64;
  uint64_t v59 = &protocol witness table for UInt64;
  *(void *)&long long v57 = v17;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v18 = v15[2];
  *((void *)&v58 + 1) = &type metadata for UInt64;
  uint64_t v59 = &protocol witness table for UInt64;
  *(void *)&long long v57 = v18;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
  *((void *)&v58 + 1) = &type metadata for Int;
  uint64_t v59 = &protocol witness table for Int;
  *(void *)&long long v57 = v19;
  CKRecordKeyValueSetting.subscript.setter();
  Class v20 = sub_100D3EC2C(a2);
  sub_10050BF48(0, &qword_10167BED0);
  v21._countAndFlagsBits = UUID.uuidString.getter();
  Class isa = CKRecordID.init(recordName:zoneID:)(v21, (CKRecordZoneID)v20).super.isa;
  id v23 = objc_allocWithZone((Class)CKReference);
  Class v56 = isa;
  [v23 initWithRecordID:isa action:1];
  CKRecord.subscript.setter();
  uint64_t v24 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData);
  unint64_t v25 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform45CRLFreehandDrawingBucketSyncLocalChangeRecord_bucketData + 8);
  uint64_t v27 = *v15;
  uint64_t v26 = v15[1];
  uint64_t v48 = v15[2];
  uint64_t v49 = v26;
  uint64_t v47 = v15[3];
  uint64_t v46 = v15[4];
  sub_100510D4C(v24, v25);
  sub_1005057FC((uint64_t *)&unk_1016A8B60);
  sub_100523288(&qword_10169A210, (uint64_t *)&unk_1016A8B60);
  Capsule<>.init(serializedData:allowedAppFormats:)();
  sub_1005057FC((uint64_t *)&unk_1016A8B70);
  Class v28 = (void *)swift_allocObject();
  *((unsigned char *)v28 + *(void *)(*v28 + 136)) = 0;
  v28[2] = v19;
  uint64_t v29 = (char *)v28 + *(void *)(*v28 + 120);
  uint64_t v30 = v50;
  Swift::String v31 = v14;
  uint64_t v32 = v51;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v29, v31, v51);
  *((unsigned char *)v28 + *(void *)(*v28 + 136)) = 0;
  uint64_t v33 = (void *)((char *)v28 + *(void *)(*v28 + 128));
  uint64_t v34 = v49;
  *uint64_t v33 = v27;
  v33[1] = v34;
  uint64_t v35 = v47;
  v33[2] = v48;
  v33[3] = v35;
  v33[4] = v46;
  swift_beginAccess();
  uint64_t v36 = v52;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v52, v29, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v36, 0, 1, v32);
  type metadata accessor for CRContext();
  uint64_t v59 = 0;
  long long v57 = 0u;
  long long v58 = 0u;
  static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)();
  sub_100522F00((uint64_t)&v57, (uint64_t *)&unk_10169A780);
  sub_100CE9068();
  uint64_t v37 = v53;
  CRCKMergeable.init(crdt:context:)();
  id v38 = [objc_allocWithZone((Class)CKMergeableRecordValue) init];
  uint64_t v39 = v55;
  *((void *)&v58 + 1) = v55;
  uint64_t v59 = (void *)sub_100523288((unint64_t *)&unk_10169A790, &qword_101699938);
  uint64_t v40 = sub_1005767BC((uint64_t *)&v57);
  uint64_t v41 = v54;
  (*(void (**)(uint64_t *, char *, uint64_t))(v54 + 16))(v40, v37, v39);
  CKMergeableRecordValue.addDeltasToSave(from:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v57);
  id v44 = v38;
  CKRecord.subscript.setter();

  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v39);
  Class v45 = v56;
  uint64_t v42 = *v15;
  *((void *)&v58 + 1) = &type metadata for UInt64;
  uint64_t v59 = &protocol witness table for UInt64;
  *(void *)&long long v57 = v42;
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v43 = v15[1];
  *((void *)&v58 + 1) = &type metadata for UInt64;
  uint64_t v59 = &protocol witness table for UInt64;
  *(void *)&long long v57 = v43;
  CKRecordKeyValueSetting.subscript.setter();
}

void *sub_100D42F14@<X0>(void *a1@<X8>)
{
  return sub_100C9C99C(a1);
}

uint64_t sub_100D42F30@<X0>(unsigned char *a1@<X8>)
{
  return sub_100C9C964(*(void *)(v1 + 24), a1);
}

uint64_t sub_100D42F4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100D42FB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for CRLCloudRecordType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100D430E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCloudRecordType()
{
  return &type metadata for CRLCloudRecordType;
}

ValueMetadata *_s18AssetNameRecordKeyVMa()
{
  return &_s18AssetNameRecordKeyVN;
}

ValueMetadata *_s22AssetMetadataRecordKeyVMa()
{
  return &_s22AssetMetadataRecordKeyVN;
}

unint64_t sub_100D43150()
{
  unint64_t result = qword_10169A800;
  if (!qword_10169A800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A800);
  }
  return result;
}

unint64_t sub_100D431A4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101504C60, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

uint64_t sub_100D431F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100D3EDF0(a1);
}

uint64_t sub_100D43218()
{
  if (*v0) {
    return 1635017060;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_100D4323C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100D43A34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100D43264(uint64_t a1)
{
  unint64_t v2 = sub_100D437D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100D432A0(uint64_t a1)
{
  unint64_t v2 = sub_100D437D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100D432DC()
{
  sub_100510084(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSharePlayRealTimeChangeRecord()
{
  return self;
}

uint64_t sub_100D43338(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10169A8D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100D437D4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    long long v12 = *(_OWORD *)(v3 + 24);
    v11[15] = 1;
    sub_10060D344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100D434B0(void *a1)
{
  uint64_t v4 = sub_1005057FC(&qword_10169A8C0);
  uint64_t v11 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100D437D4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v11;
    LOBYTE(v12) = 0;
    *(void *)(v1 + 16) = KeyedDecodingContainer.decode(_:forKey:)();
    char v13 = 1;
    sub_10060D184();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v4);
    *(_OWORD *)(v1 + 24) = v12;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v1;
}

uint64_t sub_100D436B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_100D434B0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_100D43708(void *a1)
{
  return sub_100D43338(a1);
}

uint64_t sub_100D4372C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100D43794(&qword_101681698);
  uint64_t result = sub_100D43794(&qword_10167AC50);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100D43794(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CRLSharePlayRealTimeChangeRecord();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100D437D4()
{
  unint64_t result = qword_10169A8C8;
  if (!qword_10169A8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A8C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLSharePlayRealTimeChangeRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100D438F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSharePlayRealTimeChangeRecord.CodingKeys()
{
  return &type metadata for CRLSharePlayRealTimeChangeRecord.CodingKeys;
}

unint64_t sub_100D43930()
{
  unint64_t result = qword_10169A8D8;
  if (!qword_10169A8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A8D8);
  }
  return result;
}

unint64_t sub_100D43988()
{
  unint64_t result = qword_10169A8E0;
  if (!qword_10169A8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A8E0);
  }
  return result;
}

unint64_t sub_100D439E0()
{
  unint64_t result = qword_10169A8E8;
  if (!qword_10169A8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169A8E8);
  }
  return result;
}

uint64_t sub_100D43A34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_100D43B08()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___spiPicker;
  BOOL v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___spiPicker);
  if (v2) {
    goto LABEL_4;
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v4 = [Strong freehandDrawingToolkit];

  if (v4)
  {
    uint64_t v5 = (void *)sub_100D4FFA4(v4, *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController));

    char v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    v5;

    BOOL v2 = 0;
LABEL_4:
    id v7 = v2;
    return;
  }
  __break(1u);
}

void *sub_100D43BC0()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___pickerManager;
  BOOL v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___pickerManager);
  int v3 = v2;
  if (v2 == (void *)1)
  {
    sub_100D43C30(v0);
    int v3 = v4;
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v6 = v4;
    sub_100522AD8(v5);
  }
  sub_10052315C(v2);
  return v3;
}

void sub_100D43C30(uint64_t a1)
{
  uint64_t v8 = &type metadata for CRLFeatureFlags;
  unint64_t v9 = sub_1005396A8();
  v7[0] = 22;
  char v2 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v7);
  if (v2)
  {
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    id v4 = [Strong freehandDrawingToolkit];

    if (v4)
    {
      uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController);
      objc_allocWithZone((Class)type metadata accessor for CRLiOSPencilTrayPickerManager());
      id v6 = v5;
      sub_101061CC4(v4, v5);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100D43D04()
{
  swift_getObjectType();
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_wasTearDownCalled;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_wasTearDownCalled) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 175, (uint64_t)"Should not call tearDown() twice.", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v18) = 2;
    uint64_t v16 = "Should not call tearDown() twice.";
    uint64_t v17 = 33;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tearDown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 175);
  }
  *(unsigned char *)(v0 + v1) = 1;
  char v2 = (char *)sub_100D43BC0();
  if (v2)
  {
    int v3 = v2;
    id v4 = *(id *)&v2[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v4 = v5;
  }
  [v4 _disableTapInteractionWhenNotVisible:v16, v17, v18];

  id v6 = (char *)sub_100D43BC0();
  if (v6)
  {
    id v7 = v6;
    id v8 = *(id *)&v6[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v8 = v9;
  }
  [v8 set_delegate:0];

  uint64_t v10 = (char *)sub_100D43BC0();
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = *(id *)&v10[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v12 = v13;
  }
  [v12 removeObserver:v0];

  [*(id *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController) setDelegate:0];
  [*(id *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView) removeFromSuperview];
  ObjCClassFromMetadatCGFloat a = (void *)swift_getObjCClassFromMetadata();

  return [ObjCClassFromMetadata cancelPreviousPerformRequestsWithTarget:v0 selector:"updateForToolPickerVisibilityDidChange" object:0];
}

id sub_100D43F2C()
{
  if ((v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_wasTearDownCalled] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 194, (uint64_t)"Must call tearDown() before CRLiOSPencilTray is deinitialized.", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 194);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPencilTray();
  return [super dealloc];
}

void sub_100D441F8()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_10169AB68);
  __chkstk_darwin(v0 - 8, v1);
  int v3 = (char *)&v25[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PKHandwritingTool();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v10 = [Strong mode];

  id v11 = [v10 pencilModeType];
  if (!v11)
  {
    id v11 = (id)swift_unknownObjectUnownedLoadStrong();
    id v12 = [v11 pencilMediator];

    if (!v12)
    {
      __break(1u);
      goto LABEL_25;
    }
    id v11 = [v12 pencilModeToBeginFromToolbarItem];
    swift_unknownObjectRelease();
    if (!v11)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerTool()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 516, (uint64_t)"Trying to update selected tool when not in a pencil mode.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v13 = 516;
      goto LABEL_9;
    }
  }
  if (v11 == (id)1)
  {
    sub_100D446BC();
    return;
  }
  if (v11 != (id)2)
  {
LABEL_25:
    type metadata accessor for CRLiOSPencilModeType(0);
    v25[0] = (uint64_t)v11;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
    return;
  }
  Swift::String v14 = (char *)sub_100D43BC0();
  if (!v14)
  {
    sub_100D47E6C((uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
      uint64_t v19 = (char *)sub_100D43BC0();
      if (v19)
      {
        Class v20 = v19;
        id v21 = *(id *)&v19[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
      }
      else
      {
        sub_100D43B08();
        id v21 = v22;
      }
      v25[3] = v4;
      v25[4] = (uint64_t)&protocol witness table for PKHandwritingTool;
      id v23 = sub_1005767BC(v25);
      (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v23, v8, v4);
      PKToolPicker.selectedTool.setter();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return;
    }
    sub_100522F00((uint64_t)v3, (uint64_t *)&unk_10169AB68);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerTool()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 511, (uint64_t)"Should not be in handwriting mode if PencilKit does not think we should have the handwriting tool.", 98, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v13 = 511;
LABEL_9:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerTool()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, v13);
    return;
  }
  Swift::String v15 = v14;
  uint64_t v16 = *(void **)&v14[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  id v17 = [*(id *)&v14[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_scribble] identifier];
  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v17 = v24;
  }
  [v16 setSelectedToolItemIdentifier:v17];

  uint64_t v18 = v24;
}

void sub_100D446BC()
{
  uint64_t v1 = sub_1005057FC(&qword_10169AB60);
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  uint64_t v197 = (uint64_t)&v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v5);
  uint64_t v208 = (char *)&v177 - v6;
  uint64_t v207 = type metadata accessor for PKEraserTool();
  uint64_t v198 = *(void *)(v207 - 8);
  __chkstk_darwin(v207, v7);
  uint64_t v206 = (char *)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10169AB48);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v205 = (char *)&v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v196 = (uint64_t)&v177 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v203 = (uint64_t)&v177 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v195 = (uint64_t)&v177 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v202 = (uint64_t)&v177 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v194 = (uint64_t)&v177 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v201 = (uint64_t)&v177 - v30;
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v193 = (uint64_t)&v177 - v33;
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v200 = (uint64_t)&v177 - v36;
  uint64_t v38 = __chkstk_darwin(v35, v37);
  uint64_t v192 = (uint64_t)&v177 - v39;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v199 = (uint64_t)&v177 - v42;
  uint64_t v44 = __chkstk_darwin(v41, v43);
  uint64_t v191 = (uint64_t)&v177 - v45;
  uint64_t v47 = __chkstk_darwin(v44, v46);
  uint64_t v204 = (char *)&v177 - v48;
  uint64_t v50 = __chkstk_darwin(v47, v49);
  uint64_t v190 = (uint64_t)&v177 - v51;
  uint64_t v53 = __chkstk_darwin(v50, v52);
  uint64_t v187 = (uint64_t)&v177 - v54;
  uint64_t v56 = __chkstk_darwin(v53, v55);
  uint64_t v189 = (uint64_t)&v177 - v57;
  uint64_t v59 = __chkstk_darwin(v56, v58);
  uint64_t v186 = (uint64_t)&v177 - v60;
  __chkstk_darwin(v59, v61);
  uint64_t v188 = (uint64_t)&v177 - v62;
  uint64_t v63 = type metadata accessor for PKCustomTool();
  uint64_t v64 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v63 - 8);
  uint64_t v209 = v63;
  uint64_t v210 = v64;
  uint64_t v66 = __chkstk_darwin(v63, v65);
  char v68 = (char *)&v177 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __chkstk_darwin(v66, v69);
  uint64_t v72 = (char *)&v177 - v71;
  uint64_t v74 = __chkstk_darwin(v70, v73);
  uint64_t v76 = (char *)&v177 - v75;
  uint64_t v78 = __chkstk_darwin(v74, v77);
  id v80 = (char *)&v177 - v79;
  uint64_t v82 = __chkstk_darwin(v78, v81);
  long long v84 = (char *)&v177 - v83;
  uint64_t v86 = __chkstk_darwin(v82, v85);
  uint64_t v88 = (char *)&v177 - v87;
  uint64_t v90 = __chkstk_darwin(v86, v89);
  uint64_t v92 = (char *)&v177 - v91;
  uint64_t v94 = __chkstk_darwin(v90, v93);
  uint64_t v96 = (char *)&v177 - v95;
  __chkstk_darwin(v94, v97);
  id v99 = (char *)&v177 - v98;
  uint64_t v100 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))sub_100D43BC0();
  if (v100)
  {
    uint64_t v210 = v100;
    sub_101062A08();
    uint64_t v101 = v210;
  }
  else
  {
    unint64_t v177 = v99;
    uint64_t v178 = v96;
    char v179 = v92;
    uint64_t v180 = v88;
    uint64_t v102 = (uint64_t)v204;
    BOOL v181 = v84;
    uint64_t v182 = v80;
    uint64_t v183 = v76;
    uint64_t v184 = v72;
    unint64_t v185 = v68;
    uint64_t v104 = (uint64_t)v205;
    uint64_t v103 = v206;
    uint64_t v106 = v207;
    uint64_t v105 = (uint64_t)v208;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    id v108 = [Strong freehandDrawingToolkit];

    if (!v108)
    {
      __break(1u);
LABEL_86:
      type metadata accessor for CRLFreehandDrawingToolType(0);
      id v211 = v108;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x100D464F0);
    }
    id v109 = [v108 currentTool];

    id v108 = [v109 type];
    switch((unint64_t)v108)
    {
      case 0uLL:
        uint64_t v110 = v186;
        sub_100D48128(0xD00000000000001BLL, 0x8000000101286FE0, v186);
        uint64_t v111 = v210[6];
        if (v111(v110, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"monolineTool", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 781, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"monolineTool", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 781);
        }
        if (v111(v110, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 529, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 529);
        }
        uint64_t v112 = v188;
        sub_10051B3EC(v110, v188, &qword_10169AB48);
        uint64_t v113 = v209;
        if (v111(v112, 1, v209) == 1) {
          goto LABEL_64;
        }
        int v114 = (void (**)(uint64_t *, char *, uint64_t))v210;
        uint64_t v115 = v177;
        v210[4]((uint64_t)v177, v112, v113);
        int v116 = (char *)sub_100D43BC0();
        if (v116)
        {
          uint64_t v117 = v116;
          id v118 = *(id *)&v116[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
        }
        else
        {
          sub_100D43B08();
          id v118 = v171;
        }
        uint64_t v214 = v113;
        unint64_t v215 = &protocol witness table for PKCustomTool;
        uint64_t v172 = sub_1005767BC((uint64_t *)&v211);
        v114[2](v172, v115, v113);
        PKToolPicker.selectedTool.setter();

        ((void (*)(char *, uint64_t))v114[1])(v115, v113);
        return;
      case 1uLL:
        uint64_t v143 = v187;
        sub_100D48128(0xD000000000000016, 0x8000000101287000, v187);
        uint64_t v145 = v209;
        uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))v210;
        id v146 = v210[6];
        if (v146(v143, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"penTool", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 787, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))v210;
          uint64_t v145 = v209;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"penTool", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 787);
        }
        if (v146(v143, 1, v145) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 533, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))v210;
          uint64_t v145 = v209;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 533);
        }
        uint64_t v112 = v189;
        sub_10051B3EC(v143, v189, &qword_10169AB48);
        if (v146(v112, 1, v145) == 1) {
          goto LABEL_64;
        }
        id v147 = v178;
        v144[4](v178, v112, v145);
        id v148 = (char *)sub_100D43BC0();
        if (v148)
        {
          uint64_t v149 = v148;
          id v150 = *(id *)&v148[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
        }
        else
        {
          sub_100D43B08();
          id v150 = v173;
        }
        uint64_t v214 = v145;
        unint64_t v215 = &protocol witness table for PKCustomTool;
        id v174 = sub_1005767BC((uint64_t *)&v211);
        v144[2]((char *)v174, (uint64_t)v147, v145);
        PKToolPicker.selectedTool.setter();

        ((void (*)(char *, uint64_t))v144[1])(v147, v145);
        return;
      case 2uLL:
        sub_100D48128(0xD000000000000019, 0x8000000101287020, v102);
        uint64_t v126 = v209;
        uint64_t v127 = v210[6];
        if (v127(v102, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pencilTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 793, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v126 = v209;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 793);
        }
        if (v127(v102, 1, v126) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 537, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v126 = v209;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 537);
        }
        uint64_t v112 = v190;
        sub_10051B3EC(v102, v190, &qword_10169AB48);
        if (v127(v112, 1, v126) == 1) {
          goto LABEL_64;
        }
        uint64_t v128 = (void (**)(uint64_t *, char *, uint64_t))v210;
        uint64_t v129 = v179;
        v210[4]((uint64_t)v179, v112, v126);
        uint64_t v130 = (char *)sub_100D43BC0();
        if (v130)
        {
          char v131 = v130;
          id v132 = *(id *)&v130[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
        }
        else
        {
          sub_100D43B08();
          id v132 = v169;
        }
        uint64_t v214 = v126;
        unint64_t v215 = &protocol witness table for PKCustomTool;
        uint64_t v170 = sub_1005767BC((uint64_t *)&v211);
        v128[2](v170, v129, v126);
        PKToolPicker.selectedTool.setter();

        ((void (*)(char *, uint64_t))v128[1])(v129, v126);
        return;
      case 3uLL:
        uint64_t v137 = v199;
        sub_100D48128(0xD000000000000019, 0x8000000101287040, v199);
        uint64_t v121 = v209;
        uint64_t v120 = v210;
        id v138 = v210[6];
        if (v138(v137, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crayonTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 799, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v137 = v199;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crayonTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 799);
        }
        if (v138(v137, 1, v121) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 541, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v137 = v199;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 541);
        }
        uint64_t v139 = v137;
        uint64_t v112 = v191;
        sub_10051B3EC(v139, v191, &qword_10169AB48);
        if (v138(v112, 1, v121) == 1) {
          goto LABEL_64;
        }
        uint64_t v124 = (void (*)(char *, uint64_t, uint64_t))v120[4];
        uint64_t v125 = (void **)&v212;
        goto LABEL_71;
      case 4uLL:
        uint64_t v119 = v200;
        sub_100D48128(0xD00000000000001DLL, 0x8000000101287080, v200);
        uint64_t v121 = v209;
        uint64_t v120 = v210;
        uint64_t v122 = v210[6];
        if (v122(v119, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"watercolorTool", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 805, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v119 = v200;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"watercolorTool", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 805);
        }
        if (v122(v119, 1, v121) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 545, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v119 = v200;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 545);
        }
        uint64_t v123 = v119;
        uint64_t v112 = v192;
        sub_10051B3EC(v123, v192, &qword_10169AB48);
        if (v122(v112, 1, v121) == 1) {
          goto LABEL_64;
        }
        uint64_t v124 = (void (*)(char *, uint64_t, uint64_t))v120[4];
        uint64_t v125 = (void **)&v213;
        goto LABEL_71;
      case 5uLL:
        uint64_t v151 = v201;
        sub_100D48128(0xD00000000000001ELL, 0x80000001012870A0, v201);
        uint64_t v121 = v209;
        uint64_t v120 = v210;
        uint64_t v152 = v210[6];
        if (v152(v151, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fountainPenTool", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 817, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v151 = v201;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fountainPenTool", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 817);
        }
        if (v152(v151, 1, v121) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 549, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v151 = v201;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 549);
        }
        uint64_t v153 = v151;
        uint64_t v112 = v193;
        sub_10051B3EC(v153, v193, &qword_10169AB48);
        if (v152(v112, 1, v121) == 1) {
          goto LABEL_64;
        }
        uint64_t v124 = (void (*)(char *, uint64_t, uint64_t))v120[4];
        uint64_t v125 = (void **)&v214;
        goto LABEL_71;
      case 6uLL:
        uint64_t v154 = v202;
        sub_100D48128(0xD000000000000019, 0x8000000101287060, v202);
        uint64_t v121 = v209;
        uint64_t v120 = v210;
        id v155 = v210[6];
        if (v155(v154, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"markerTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 811, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v154 = v202;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"markerTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 811);
        }
        if (v155(v154, 1, v121) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 553, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v154 = v202;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 553);
        }
        uint64_t v156 = v154;
        uint64_t v112 = v194;
        sub_10051B3EC(v156, v194, &qword_10169AB48);
        if (v155(v112, 1, v121) == 1) {
          goto LABEL_64;
        }
        uint64_t v124 = (void (*)(char *, uint64_t, uint64_t))v120[4];
        uint64_t v125 = &v215;
        goto LABEL_71;
      case 7uLL:
        uint64_t v140 = v203;
        sub_100D48128(0xD000000000000017, 0x80000001012870C0, v203);
        uint64_t v121 = v209;
        uint64_t v120 = v210;
        uint64_t v141 = v210[6];
        if (v141(v140, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fillTool", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 823, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v140 = v203;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fillTool", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 823);
        }
        if (v141(v140, 1, v121) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 557, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v140 = v203;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 557);
        }
        uint64_t v142 = v140;
        uint64_t v112 = v195;
        sub_10051B3EC(v142, v195, &qword_10169AB48);
        if (v141(v112, 1, v121) == 1) {
          goto LABEL_64;
        }
        uint64_t v124 = (void (*)(char *, uint64_t, uint64_t))v120[4];
        uint64_t v125 = (void **)&v216;
LABEL_71:
        uint64_t v135 = (char *)*(v125 - 32);
        v124(v135, v112, v121);
        uint64_t v136 = (char *)sub_100D43BC0();
        if (v136) {
          goto LABEL_72;
        }
        goto LABEL_73;
      case 8uLL:
        uint64_t v159 = v197;
        sub_100D48474(v197);
        uint64_t v160 = v198;
        uint64_t v161 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48);
        if (v161(v159, 1, v106) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 561, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v159 = v197;
          uint64_t v160 = v198;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 561);
        }
        sub_10051B3EC(v159, v105, &qword_10169AB60);
        if (v161(v105, 1, v106) == 1)
        {
          id v157 = &qword_10169AB60;
          uint64_t v158 = v105;
          goto LABEL_65;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v160 + 32))(v103, v105, v106);
        id v166 = (char *)sub_100D43BC0();
        if (v166)
        {
          uint64_t v167 = v166;
          id v168 = *(id *)&v166[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
        }
        else
        {
          sub_100D43B08();
          id v168 = v175;
        }
        uint64_t v214 = v106;
        unint64_t v215 = &protocol witness table for PKEraserTool;
        id v176 = sub_1005767BC((uint64_t *)&v211);
        (*(void (**)(uint64_t *, char *, uint64_t))(v160 + 16))(v176, v103, v106);
        PKToolPicker.selectedTool.setter();

        (*(void (**)(char *, uint64_t))(v160 + 8))(v103, v106);
        break;
      case 9uLL:
        uint64_t v133 = v104;
        uint64_t v208 = v0;
        sub_100D48128(0xD000000000000018, 0x8000000101286E00, v104);
        uint64_t v121 = v209;
        uint64_t v120 = v210;
        uint64_t v134 = v210[6];
        if (v134(v104, 1, v209) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"lassoTool", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 861, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v133 = v104;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"lassoTool", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 861);
        }
        if (v134(v133, 1, v121) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 565, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v120 = v210;
          uint64_t v133 = v104;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedToolPickerToolForFreehandDrawingMode()", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 565);
        }
        uint64_t v112 = v196;
        sub_10051B3EC(v133, v196, &qword_10169AB48);
        if (v134(v112, 1, v121) == 1)
        {
LABEL_64:
          id v157 = &qword_10169AB48;
          uint64_t v158 = v112;
LABEL_65:
          sub_100522F00(v158, v157);
        }
        else
        {
          uint64_t v135 = v185;
          v120[4]((uint64_t)v185, v112, v121);
          uint64_t v136 = (char *)sub_100D43BC0();
          if (v136)
          {
LABEL_72:
            uint64_t v162 = v136;
            id v163 = *(id *)&v136[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
          }
          else
          {
LABEL_73:
            sub_100D43B08();
            id v163 = v164;
          }
          uint64_t v214 = v121;
          unint64_t v215 = &protocol witness table for PKCustomTool;
          unint64_t v165 = sub_1005767BC((uint64_t *)&v211);
          v120[2]((uint64_t)v165, (uint64_t)v135, v121);
          PKToolPicker.selectedTool.setter();

          ((void (*)(char *, uint64_t))v120[1])(v135, v121);
        }
        break;
      default:
        goto LABEL_86;
    }
  }
}

void sub_100D46518()
{
  uint64_t v0 = type metadata accessor for PKHandwritingTool();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v5 = (char *)sub_100D43BC0();
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = *(id *)&v5[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v7 = v8;
  }
  PKToolPicker.selectedTool.getter();

  uint64_t v9 = (char *)sub_100D43BC0();
  if (v9
    && (uint64_t v10 = v9,
        id v11 = [*(id *)&v9[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker] selectedToolItem], self, v12 = swift_dynamicCastObjCClass(), v10, v11, v12))
  {
    sub_1005498A4((uint64_t)v19, (uint64_t)v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v18);
  }
  else
  {
    sub_1005498A4((uint64_t)v19, (uint64_t)v18);
    sub_10053974C(v18, (uint64_t)v17);
    sub_1005057FC((uint64_t *)&unk_10169AB50);
    if (!swift_dynamicCast())
    {
      sub_100D468DC();
      uint64_t v15 = 1;
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v14 = [Strong freehandDrawingToolkit];

  if (v14)
  {
    [v14 updatePencilShadowToScribbleMode];

    uint64_t v15 = 2;
LABEL_12:
    sub_100D4674C((id)v15);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v19);
    return;
  }
  __break(1u);
}

void sub_100D4674C(id a1)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v3 = [Strong mode];

  id v4 = [v3 pencilModeType];
  if (v4 != a1)
  {
    if (v4)
    {
      id v5 = [(id)swift_unknownObjectUnownedLoadStrong() pencilDocumentModeFor:a1];
      swift_unknownObjectRelease();
      id v8 = (id)swift_unknownObjectUnownedLoadStrong();
      [v8 setMode:v5 animated:1];
    }
    else
    {
      uint64_t v6 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v7 = [v6 pencilMediator];

      if (v7)
      {
        [v7 setNextPencilModeType:a1];
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_100D468DC()
{
  uint64_t v1 = type metadata accessor for PKEraserTool.EraserType();
  uint64_t v107 = *(void *)(v1 - 8);
  uint64_t v108 = v1;
  __chkstk_darwin(v1, v2);
  id v4 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  id v8 = (char *)&v106 - v7;
  uint64_t v9 = sub_1005057FC(&qword_10169AB60);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PKEraserTool();
  uint64_t v110 = *(void *)(v13 - 8);
  uint64_t v111 = v13;
  __chkstk_darwin(v13, v14);
  id v109 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_10169AB48);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PKCustomTool();
  uint64_t v112 = *(void (***)(char *, char *, uint64_t))(v20 - 8);
  uint64_t v113 = v20;
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_icc;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v114 = [Strong freehandDrawingToolkit];

  if (!v114)
  {
    __break(1u);
    goto LABEL_90;
  }
  uint64_t v26 = (char *)sub_100D43BC0();
  if (!v26)
  {
    uint64_t v28 = (char *)sub_100D43BC0();
    uint64_t v106 = v23;
    if (v28)
    {
      uint64_t v29 = v28;
      id v30 = *(id *)&v28[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v30 = v33;
    }
    PKToolPicker.selectedTool.getter();

    sub_1005498A4((uint64_t)v116, (uint64_t)v115);
    sub_1005057FC((uint64_t *)&unk_10169AB50);
    uint64_t v34 = v113;
    int v35 = swift_dynamicCast();
    uint64_t v36 = v112;
    uint64_t v37 = v112[7];
    if (v35)
    {
      unint64_t v24 = 0xD000000000000017;
      ((void (*)(char *, void, uint64_t, uint64_t))v37)(v19, 0, 1, v34);
      v36[4](v106, v19, v34);
      uint64_t v39 = PKCustomTool.customIdentifier.getter();
      uint64_t v40 = v38;
      uint64_t v41 = (void (**)(char *, uint64_t))v36;
      if (v39 == 0xD00000000000001BLL && v38 == 0x8000000101286FE0
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v55 = v106;
        [v114 setCurrentToolSelection:0];
LABEL_71:
        uint64_t v89 = (void *)PKCustomTool.color.getter();
        id v90 = [objc_allocWithZone((Class)CRLColor) initWithUIColor:v89];

        id v91 = [v90 colorWithAlphaComponent:1.0];
        [v114 setColorForCurrentTool:v91];

        if (PKCustomTool.customIdentifier.getter() == v24 && v92 == 0x80000001012870C0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v93 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v93 & 1) == 0)
          {
            id v98 = [v114 currentTool];
            self;
            uint64_t v99 = swift_dynamicCastObjCClass();
            if (v99)
            {
              uint64_t v100 = (void *)v99;
              [v90 alphaComponent];
              [v100 setOpacity:];
              PKCustomTool.weight.getter();
              [v100 setUnscaledWidth:];

              goto LABEL_82;
            }

            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 680, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            uint64_t v55 = v106;
            uint64_t v97 = 680;
LABEL_81:
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, v97);
            goto LABEL_82;
          }
        }
        id v94 = [v114 currentTool:v106];
        self;
        uint64_t v95 = swift_dynamicCastObjCClass();
        if (v95)
        {
          uint64_t v96 = (void *)v95;
          [v90 alphaComponent];
          [v96 setOpacity:];

LABEL_82:
          v41[1](v55, v113);
          goto LABEL_83;
        }

        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 675, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        uint64_t v55 = v106;
        uint64_t v97 = 675;
        goto LABEL_81;
      }
      uint64_t v55 = v106;
      if (v39 == 0xD000000000000016 && v40 == 0x8000000101287000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        [v114 setCurrentToolSelection:1];
        goto LABEL_71;
      }
      if (v39 == 0xD000000000000019 && v40 == 0x8000000101287020
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        [v114 setCurrentToolSelection:2];
        goto LABEL_71;
      }
      if (v39 == 0xD000000000000019 && v40 == 0x8000000101287040
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        [v114 setCurrentToolSelection:3];
        goto LABEL_71;
      }
      if (v39 == 0xD000000000000019 && v40 == 0x8000000101287060
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        [v114 setCurrentToolSelection:6];
        goto LABEL_71;
      }
      if (v39 == 0xD00000000000001DLL && v40 == 0x8000000101287080
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        [v114 setCurrentToolSelection:4];
        goto LABEL_71;
      }
      if (v39 == 0xD00000000000001ELL && v40 == 0x80000001012870A0
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        [v114 setCurrentToolSelection:5 v106];
LABEL_70:
        uint64_t v41 = (void (**)(char *, uint64_t))v112;
        uint64_t v55 = v106;
        goto LABEL_71;
      }
      if (v39 == 0xD000000000000017 && v40 == 0x80000001012870C0
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        [v114 setCurrentToolSelection:7, v106];
        goto LABEL_70;
      }
      if (v39 == 0xD000000000000018 && v40 == 0x8000000101286E00)
      {
        swift_bridgeObjectRelease();
LABEL_88:
        [v114 setCurrentToolSelection:9 v106];
        sub_100D488A8();
        sub_100D490FC();

        ((void (*)(char *, uint64_t))v112[1])(v106, v113);
        goto LABEL_83;
      }
      char v101 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v101) {
        goto LABEL_88;
      }
LABEL_90:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v55 = v106;
      uint64_t v103 = PKCustomTool.customIdentifier.getter();
      uint64_t v105 = v104;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v103;
      *(void *)(inited + 40) = v105;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 668, (uint64_t)"Unknown custom tool selection: %@", 33, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 668);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      uint64_t v41 = (void (**)(char *, uint64_t))v112;
      goto LABEL_71;
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v37)(v19, 1, 1, v34);
    sub_100522F00((uint64_t)v19, &qword_10169AB48);
    sub_1005498A4((uint64_t)v116, (uint64_t)v115);
    uint64_t v42 = v111;
    int v43 = swift_dynamicCast();
    uint64_t v44 = v110;
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v110 + 56);
    if (!v43)
    {
      v45(v12, 1, 1, v42);
      sub_100522F00((uint64_t)v12, &qword_10169AB60);
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v56 = swift_initStackObject();
      *(_OWORD *)(v56 + 16) = xmmword_10117E810;
      sub_1005498A4((uint64_t)v116, (uint64_t)v115);
      uint64_t v57 = String.init<A>(describing:)();
      uint64_t v59 = v58;
      *(void *)(v56 + 56) = &type metadata for String;
      *(void *)(v56 + 64) = sub_100528BE4();
      *(void *)(v56 + 32) = v57;
      *(void *)(v56 + 40) = v59;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 732, (uint64_t)"Unknown tool selection: %@", 26, 2u, v56);
      sub_1005598CC(v56, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 732);

      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
LABEL_83:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v116);
      return;
    }
    v45(v12, 0, 1, v42);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v109, v12, v42);
    PKEraserTool.eraserType.getter();
    uint64_t v46 = v107;
    uint64_t v47 = v108;
    uint64_t v48 = *(void (***)(char *, char *, uint64_t))(v107 + 104);
    LODWORD(v106) = enum case for PKEraserTool.EraserType.vector(_:);
    uint64_t v113 = v107 + 104;
    ((void (*)(char *))v48)(v4);
    char v49 = static PKEraserTool.EraserType.== infix(_:_:)();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v46 + 8);
    v50(v4, v47);
    v50(v8, v47);
    uint64_t v112 = v48;
    if (v49)
    {
      uint64_t v51 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v52 = [v51 freehandDrawingToolkit];

      if (!v52)
      {
LABEL_92:
        __break(1u);
        goto LABEL_93;
      }
      id v53 = [v52 toolkitUIState];

      [v53 setEraserToolErasesWholeObjects:1];
      uint64_t v54 = v50;
    }
    else
    {
      PKEraserTool.eraserType.getter();
      ((void (*)(char *, void, uint64_t))v48)(v4, enum case for PKEraserTool.EraserType.fixedWidthBitmap(_:), v47);
      char v60 = static PKEraserTool.EraserType.== infix(_:_:)();
      v50(v4, v47);
      v50(v8, v47);
      uint64_t v54 = v50;
      if ((v60 & 1) == 0)
      {
LABEL_32:
        [v114 setCurrentToolSelection:8];
        id v63 = [v114 currentTool];
        self;
        uint64_t v64 = swift_dynamicCastObjCClass();
        if (!v64)
        {

          id v78 = [v114 currentTool];
          self;
          uint64_t v79 = swift_dynamicCastObjCClass();

          sub_1005057FC((uint64_t *)&unk_101672B40);
          if (v79)
          {
            uint64_t v80 = swift_initStackObject();
            *(_OWORD *)(v80 + 16) = xmmword_10117E810;
            PKEraserTool.eraserType.getter();
            uint64_t v81 = v108;
            uint64_t v82 = String.init<A>(describing:)();
            uint64_t v84 = v83;
            *(void *)(v80 + 56) = &type metadata for String;
            unint64_t v85 = sub_100528BE4();
            *(void *)(v80 + 32) = v82;
            *(void *)(v80 + 64) = v85;
            *(void *)(v80 + 40) = v84;
            PKEraserTool.eraserType.getter();
            ((void (*)(char *, void, uint64_t))v112)(v4, v106, v81);
            char v86 = static PKEraserTool.EraserType.== infix(_:_:)();
            v54(v4, v81);
            v54(v8, v81);
            if (v86)
            {

              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();
              uint64_t v69 = v109;
              uint64_t v77 = v110;
              uint64_t v68 = v111;
              goto LABEL_49;
            }
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 709, (uint64_t)"Unknown eraser tool selection: %@", 33, 2u, v80);
            uint64_t v68 = v111;
            sub_1005598CC(v80, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 709);

            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
          }
          else
          {
            uint64_t v87 = swift_initStackObject();
            *(_OWORD *)(v87 + 16) = xmmword_10117E810;
            id v88 = [v114 currentTool];
            *(void *)(v87 + 56) = sub_10050BF48(0, &qword_10169AB78);
            *(void *)(v87 + 64) = sub_10062E0F4((unint64_t *)&qword_10169AB80, &qword_10169AB78);
            *(void *)(v87 + 32) = v88;
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 711, (uint64_t)"Unexpected tool for erase! %@", 29, 2u, v87);
            uint64_t v68 = v111;
            sub_1005598CC(v87, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 711);

            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
          }
          swift_arrayDestroy();
          uint64_t v69 = v109;
          uint64_t v77 = v110;
          goto LABEL_49;
        }
        uint64_t v65 = (void *)v64;
        PKEraserTool.eraserType.getter();
        uint64_t v66 = v108;
        ((void (*)(char *, void, uint64_t))v112)(v4, enum case for PKEraserTool.EraserType.fixedWidthBitmap(_:), v108);
        char v67 = static PKEraserTool.EraserType.== infix(_:_:)();
        v54(v4, v66);
        v54(v8, v66);
        uint64_t v68 = v111;
        if ((v67 & 1) == 0)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 704, (uint64_t)"Should only use pixel eraser for fixed width bitmap erase", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v68 = v111;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSelectedFreehandToolkitToolAndPropertiesFromToolPicker()", 62, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 704);
        }
        uint64_t v69 = v109;
        PKEraserTool.width.getter();
        double v71 = v70;
        uint64_t v72 = (void *)swift_unknownObjectUnownedLoadStrong();
        id v73 = [v72 freehandDrawingToolkit];

        if (v73)
        {
          id v74 = [v73 toolkitUIState];

          sub_100D52BFC(v74, v71);
          double v76 = v75;

          [v65 setScaledWidthForSlicingEraser:v76];
          uint64_t v77 = v110;
LABEL_49:
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v116);
          (*(void (**)(char *, uint64_t))(v77 + 8))(v69, v68);
          return;
        }
        __break(1u);
        goto LABEL_92;
      }
      uint64_t v61 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v62 = [v61 freehandDrawingToolkit];

      if (!v62)
      {
LABEL_93:
        __break(1u);
        return;
      }
      id v53 = [v62 toolkitUIState];

      [v53 setEraserToolErasesWholeObjects:0];
    }

    goto LABEL_32;
  }
  uint64_t v27 = v26;
  if (sub_1010627BC())
  {
    [*(id *)&v27[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_toolkit] setCurrentToolSelection:9];
  }
  else
  {
    id v31 = [*(id *)&v27[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker] selectedToolItem];
    sub_10106314C(*(void **)&v27[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_toolkit]);
  }
  if (sub_1010627BC())
  {
    sub_100D488A8();
    sub_100D490FC();
  }

  id v32 = v114;
}

uint64_t sub_100D47E6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10169AB68);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PKHandwritingTool();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v11(a1, 1, 1, v6);
  uint64_t v12 = (char *)sub_100D43BC0();
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = *(id *)&v12[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v14 = v15;
  }
  uint64_t v16 = PKToolPicker._tools.getter();

  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    unint64_t v24 = v10;
    uint64_t v25 = a1;
    for (uint64_t i = v16 + 32; ; i += 40)
    {
      sub_1005498A4(i, (uint64_t)v26);
      sub_1005057FC((uint64_t *)&unk_10169AB50);
      if (swift_dynamicCast()) {
        break;
      }
      v11((uint64_t)v5, 1, 1, v6);
      sub_100522F00((uint64_t)v5, (uint64_t *)&unk_10169AB68);
      if (!--v17) {
        return swift_bridgeObjectRelease();
      }
    }
    v11((uint64_t)v5, 0, 1, v6);
    swift_bridgeObjectRelease();
    uint64_t v20 = v25;
    sub_100522F00(v25, (uint64_t *)&unk_10169AB68);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v22 = v24;
    v21(v24, v5, v6);
    v21((char *)v20, v22, v6);
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v11)(v20, 0, 1, v6);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100D48128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = a1;
  uint64_t v4 = sub_1005057FC(&qword_10169AB48);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PKCustomTool();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v31 = v9 + 56;
  v30(a3, 1, 1, v8);
  uint64_t v13 = (char *)sub_100D43BC0();
  if (v13)
  {
    id v14 = v13;
    id v15 = *(id *)&v13[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v15 = v16;
  }
  uint64_t v17 = PKToolPicker._tools.getter();

  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
    return swift_bridgeObjectRelease();
  }
  v26[0] = a3;
  v26[1] = v17;
  uint64_t v19 = v17 + 32;
  uint64_t v27 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v20 = (void (**)(char *, uint64_t))(v9 + 8);
  while (1)
  {
    sub_1005498A4(v19, (uint64_t)v32);
    sub_1005057FC((uint64_t *)&unk_10169AB50);
    if ((swift_dynamicCast() & 1) == 0)
    {
      v30((uint64_t)v7, 1, 1, v8);
      sub_100522F00((uint64_t)v7, &qword_10169AB48);
      goto LABEL_7;
    }
    v30((uint64_t)v7, 0, 1, v8);
    uint64_t v21 = *v27;
    (*v27)(v12, v7, v8);
    if (PKCustomTool.customIdentifier.getter() == v29 && v22 == v28) {
      break;
    }
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_18;
    }
    (*v20)(v12, v8);
LABEL_7:
    v19 += 40;
    if (!--v18) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v25 = v26[0];
  sub_100522F00(v26[0], &qword_10169AB48);
  v21((char *)v25, v12, v8);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v30)(v25, 0, 1, v8);
}

void sub_100D48474(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC(&qword_10169AB60);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PKEraserTool();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v11(a1, 1, 1, v6);
  uint64_t v12 = (char *)sub_100D43BC0();
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = *(id *)&v12[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v14 = v15;
  }
  uint64_t v16 = PKToolPicker._tools.getter();

  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v22 = v10;
    uint64_t v23 = a1;
    uint64_t v18 = v16 + 32;
    while (1)
    {
      sub_1005498A4(v18, (uint64_t)v24);
      sub_1005057FC((uint64_t *)&unk_10169AB50);
      if (swift_dynamicCast()) {
        break;
      }
      v11((uint64_t)v5, 1, 1, v6);
      sub_100522F00((uint64_t)v5, &qword_10169AB60);
      v18 += 40;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        a1 = v23;
        goto LABEL_11;
      }
    }
    v11((uint64_t)v5, 0, 1, v6);
    swift_bridgeObjectRelease();
    a1 = v23;
    sub_100522F00(v23, &qword_10169AB60);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v20 = v22;
    v19(v22, v5, v6);
    v19((char *)a1, v20, v6);
    v11(a1, 0, 1, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_11:
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"eraserTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 855, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"eraserTool", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 855);
  }
}

id sub_100D487CC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
  [v1 forFillColorChangeAddTarget:v0 action:"fillColorChangedFromTrayWithSender:"];
  [v1 forStrokeColorChangeAddTarget:v0 action:"strokeColorChangedFromTrayWithSender:"];
  [v1 forSendBackwardAddTarget:v0 action:"sendBackwardWithSender:"];
  [v1 forSendToBackAddTarget:v0 action:"sendToBackWithSender:"];
  [v1 forBringForwardAddTarget:v0 action:"bringForwardWithSender:"];

  return [v1 forBringToFrontAddTarget:v0 action:"bringToFrontWithSender:"];
}

void sub_100D488A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_10169AB48);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PKCustomTool();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (char *)sub_100D43BC0();
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = *(id *)&v11[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v13 = v14;
  }
  unsigned int v15 = [v13 isVisible];

  if (v15)
  {
    uint64_t v16 = (char *)sub_100D43BC0();
    if (v16)
    {
      uint64_t v17 = v16;
      id v18 = *(id *)&v16[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v18 = v19;
    }
    PKToolPicker.selectedTool.getter();

    sub_1005057FC((uint64_t *)&unk_10169AB50);
    char v20 = swift_dynamicCast();
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    if ((v20 & 1) == 0)
    {
      v21(v5, 1, 1, v6);
      sub_100522F00((uint64_t)v5, &qword_10169AB48);
      return;
    }
    v21(v5, 0, 1, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    if (PKCustomTool.customIdentifier.getter() == 0xD000000000000018 && v22 == 0x8000000101286E00)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        goto LABEL_21;
      }
    }
    unint64_t v24 = (char *)sub_100D43BC0();
    if (v24)
    {
      uint64_t v25 = v24;
      id v26 = *(id *)&v24[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v26 = v27;
    }
    id v28 = [v26 _lassoToolEditingView];

    if (v28)
    {
      uint64_t v29 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
      if ([v29 isDescendantOfView:v28])
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

        return;
      }
      id v30 = [v28 subviews];
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v54[0] = v7;
      if (v32)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"installLassoEditingViewIfNeeded()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 895, (uint64_t)"lassoContainerView should have no subviews if lassoEditingView is not installed.", 80, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"installLassoEditingViewIfNeeded()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 895);
      }
      id v33 = [v28 subviews:v54[0]];
      unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v34 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v35) {
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v35)
        {
LABEL_28:
          if (v35 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v35; ++i)
          {
            if ((v34 & 0xC000000000000001) != 0) {
              id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v37 = *(id *)(v34 + 8 * i + 32);
            }
            uint64_t v38 = v37;
            [v37 removeFromSuperview];
          }
        }
      }
      swift_bridgeObjectRelease();
      [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
      [v28 addSubview:v29];
      uint64_t v39 = self;
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_10117FBE0;
      id v41 = [v29 leadingAnchor];
      id v42 = [v28 leadingAnchor];
      id v43 = [v41 constraintEqualToAnchor:v42];

      *(void *)(v40 + 32) = v43;
      id v44 = [v29 trailingAnchor];
      id v45 = [v28 trailingAnchor];
      id v46 = [v44 constraintEqualToAnchor:v45];

      *(void *)(v40 + 40) = v46;
      id v47 = [v29 topAnchor];
      id v48 = [v28 topAnchor];
      id v49 = [v47 constraintEqualToAnchor:v48];

      *(void *)(v40 + 48) = v49;
      id v50 = [v29 bottomAnchor];
      id v51 = [v28 bottomAnchor];
      id v52 = [v50 constraintEqualToAnchor:v51];

      *(void *)(v40 + 56) = v52;
      v54[1] = v40;
      specialized Array._endMutation()();
      sub_10050BF48(0, (unint64_t *)&qword_101674200);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v39 activateConstraints:isa];

      (*(void (**)(char *, uint64_t))(v54[0] + 8))(v10, v6);
      return;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"installLassoEditingViewIfNeeded()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 889, (uint64_t)"Should be able to get _lassoToolEditingView from PencilKit.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"installLassoEditingViewIfNeeded()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 889);
LABEL_21:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

void sub_100D490FC()
{
  uint64_t v1 = v0;
  sub_100D49B84();
  if ((v2 & 1) == 0)
  {
    uint64_t v7 = (char *)sub_100D43BC0();
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = *(id *)&v7[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v9 = v23;
    }
    [v9 _setLassoToolEditingViewVisible:0];

    id v24 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingViewClippingWorkaround) superview];
    if (!v24) {
      return;
    }
    uint64_t v25 = v24;
    id v47 = [v24 superview];

    if (!v47) {
      return;
    }
    [v47 setClipsToBounds:1];
    goto LABEL_54;
  }
  sub_100D49B84();
  if (v3) {
    sub_100D4A490();
  }
  sub_100D49C7C();
  sub_100D4C6C4();
  uint64_t v4 = (char *)sub_100D43BC0();
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = *(id *)&v4[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v6 = v10;
  }
  [v6 _setLassoToolEditingViewVisible:0];

  id v11 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingViewClippingWorkaround) superview];
  id v12 = [v11 superview];

  [v12 setClipsToBounds:0];
  if (([self isOSFeatureEnabled:0] & 1) == 0)
  {
    uint64_t v21 = (char *)sub_100D43BC0();
    if (v21)
    {
      uint64_t v22 = v21;
      id v47 = *(id *)&v21[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v47 = v39;
    }
    [v47 _setLassoToolEditingViewVisible:1];
LABEL_54:

    return;
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v14 = [Strong infosForCurrentSelectionPath];

  uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = sub_1006B99BC(v15);
  swift_bridgeObjectRelease();
  unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v49 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v18 = *((void *)v16 + 2);
  if (v18)
  {
    uint64_t v19 = (uint64_t)(v16 + 4);
    swift_retain();
    do
    {
      sub_10050BF84(v19, (uint64_t)v48);
      v20.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
      type metadata accessor for CRLBoardItem(0);
      if (swift_dynamicCastClass())
      {
        sub_10050BFE0((uint64_t)v48);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {

        sub_10050BFE0((uint64_t)v48);
      }
      v19 += 40;
      --v18;
    }
    while (v18);
    swift_release();
    unint64_t v17 = v49;
  }
  swift_release();
  if (!(v17 >> 62))
  {
    uint64_t v26 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v26) {
      goto LABEL_27;
    }
LABEL_66:
    swift_bridgeObjectRelease();
    return;
  }
  while (2)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v26) {
      goto LABEL_66;
    }
LABEL_27:
    char v27 = 0;
    char v46 = 0;
    unint64_t v28 = 0;
    unint64_t v29 = v17 & 0xC000000000000001;
    while (1)
    {
      if (v29)
      {
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v28 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_64;
        }
        id v30 = *(id *)(v17 + 32 + 8 * v28);
      }
      unint64_t v31 = v30;
      if (__OFADD__(v28, 1)) {
        goto LABEL_63;
      }
      type metadata accessor for CRLFreehandDrawingShapeItem();
      if (swift_dynamicCastClass()) {
        break;
      }
      ++v28;
LABEL_46:

      char v27 = 1;
      if (v28 == v26)
      {
        swift_bridgeObjectRelease();
        if ((v46 & 1) == 0) {
          return;
        }
LABEL_50:
        uint64_t v36 = (char *)sub_100D43BC0();
        if (v36)
        {
          id v37 = v36;
          id v38 = *(id *)&v36[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
        }
        else
        {
          sub_100D43B08();
          id v38 = v43;
        }
        [v38 _setLassoToolEditingViewVisible:1];

        id v44 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
        [v44 setSelectedFillColor:0];
        [v44 setSelectedStrokeColor:0];
        return;
      }
    }

    if (v28 + 1 != v26)
    {
      unint64_t v32 = v28 + 5;
      while (1)
      {
        unint64_t v33 = v32 - 4;
        if (v29)
        {
          id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v33 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_64;
          }
          id v34 = *(id *)(v17 + 8 * v32);
        }
        unint64_t v31 = v34;
        BOOL v35 = __OFADD__(v33, 1);
        unint64_t v28 = v32 - 3;
        if (v35) {
          break;
        }
        if (!swift_dynamicCastClass())
        {
          char v46 = 1;
          goto LABEL_46;
        }

        ++v32;
        if (v28 == v26) {
          goto LABEL_49;
        }
      }
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      continue;
    }
    break;
  }
LABEL_49:
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_50;
  }
  uint64_t v40 = (char *)sub_100D43BC0();
  if (v40)
  {
    id v41 = v40;
    id v42 = *(id *)&v40[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v42 = v45;
  }
  [v42 _setLassoToolEditingViewVisible:1];
}

void sub_100D496DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving) = 1;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    [Strong addModeObserver:v1];

    uint64_t v8 = (void *)swift_unknownObjectUnownedLoadStrong();
    id v9 = [v8 freehandDrawingToolkit];

    if (v9)
    {
      [v9 addToolkitObserver:v1];

      id v10 = [self defaultCenter];
      id v11 = (void *)swift_unknownObjectUnownedLoadStrong();
      NSNotificationCenter.publisher(for:object:)();

      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100D53664((unint64_t *)&qword_1016773D0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
      Publisher<>.sink(receiveValue:)();
      swift_release();
      id v12 = *(void (**)(char *, uint64_t))(v3 + 8);
      v12(v6, v2);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();
      swift_release();
      id v13 = (void *)swift_unknownObjectUnownedLoadStrong();
      NSNotificationCenter.publisher(for:object:)();

      swift_allocObject();
      swift_unknownObjectWeakInit();
      Publisher<>.sink(receiveValue:)();
      swift_release();
      v12(v6, v2);
      swift_beginAccess();
      AnyCancellable.store(in:)();
      swift_endAccess();

      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100D49A38(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    a3();
  }
}

void sub_100D49A94()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving) == 1)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving) = 0;
    uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_subscriptions);
    swift_beginAccess();
    *uint64_t v1 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    [Strong removeModeObserver:v0];

    uint64_t v3 = (void *)swift_unknownObjectUnownedLoadStrong();
    id v4 = [v3 freehandDrawingToolkit];

    if (v4)
    {
      [v4 removeToolkitObserver:v0];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100D49B84()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong mode];

  id v2 = [v1 pencilModeType];
  if (v2 == (id)1)
  {
    uint64_t v3 = (void *)swift_unknownObjectUnownedLoadStrong();
    id v4 = [v3 freehandDrawingToolkit];

    if (v4)
    {
      id v5 = [v4 currentTool];

      [v5 type];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100D49C7C()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v69 = [Strong changeNotifier];

  if (!v69) {
    return;
  }
  id v2 = (void *)swift_unknownObjectUnownedLoadStrong();
  sub_10050BF48(0, (unint64_t *)&qword_101686A40);
  id v3 = [v2 mostSpecificCurrentEditorOfClass:swift_getObjCClassFromMetadata()];

  if (!v3) {
    goto LABEL_7;
  }
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4)
  {
    swift_unknownObjectRelease();
LABEL_7:

    return;
  }
  id v5 = (void *)v4;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_observedInfos;
  int64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_observedInfos);
  swift_bridgeObjectRetain();
  id v8 = [v5 boardItems];
  type metadata accessor for CRLBoardItem(0);
  uint64_t v9 = sub_100D53664((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
  uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v66 = v10 & 0xC000000000000001;
  uint64_t v64 = v0;
  uint64_t v60 = v6;
  uint64_t v59 = v9;
  if ((v10 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v11 = v71;
    uint64_t v62 = v72;
    uint64_t v13 = v73;
    uint64_t v12 = v74;
    unint64_t v14 = v75;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(v10 + 32);
    uint64_t v62 = v10 + 56;
    uint64_t v13 = ~v15;
    uint64_t v16 = -v15;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v14 = v17 & *(void *)(v10 + 56);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v11 = v10;
  }
  int64_t v61 = (unint64_t)(v13 + 64) >> 6;
  unint64_t v18 = v7 & 0xC000000000000001;
  uint64_t v67 = v7 + 56;
  uint64_t v68 = v10;
  while (1)
  {
    uint64_t v19 = v12;
    if ((v11 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v22 = __CocoaSet.Iterator.next()();
    if (!v22) {
      goto LABEL_48;
    }
    double v70 = (void *)v22;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v23 = v76;
    swift_unknownObjectRelease();
    if (!v76) {
      goto LABEL_48;
    }
LABEL_38:
    if (v18)
    {
      id v27 = v23;
      char v28 = __CocoaSet.contains(_:)();

      if ((v28 & 1) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      if (!*(void *)(v7 + 16)) {
        goto LABEL_15;
      }
      Swift::Int v29 = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
      uint64_t v30 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v31 = v29 & ~v30;
      if (((*(void *)(v67 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
        goto LABEL_15;
      }
      id v32 = *(id *)(*(void *)(v7 + 48) + 8 * v31);
      char v33 = static NSObject.== infix(_:_:)();

      if ((v33 & 1) == 0)
      {
        uint64_t v34 = ~v30;
        while (1)
        {
          unint64_t v31 = (v31 + 1) & v34;
          if (((*(void *)(v67 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
            break;
          }
          id v35 = *(id *)(*(void *)(v7 + 48) + 8 * v31);
          char v36 = static NSObject.== infix(_:_:)();

          if (v36) {
            goto LABEL_16;
          }
        }
LABEL_15:
        [v69 addObserver:v64 forChangeSource:v23];
      }
    }
LABEL_16:
  }
  if (v14)
  {
    unint64_t v20 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v21 = v20 | (v12 << 6);
    goto LABEL_37;
  }
  int64_t v24 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
LABEL_91:
    __break(1u);
    return;
  }
  if (v24 >= v61) {
    goto LABEL_48;
  }
  unint64_t v25 = *(void *)(v62 + 8 * v24);
  ++v12;
  if (v25) {
    goto LABEL_36;
  }
  uint64_t v12 = v19 + 2;
  if (v19 + 2 >= v61) {
    goto LABEL_48;
  }
  unint64_t v25 = *(void *)(v62 + 8 * v12);
  if (v25) {
    goto LABEL_36;
  }
  uint64_t v12 = v19 + 3;
  if (v19 + 3 >= v61) {
    goto LABEL_48;
  }
  unint64_t v25 = *(void *)(v62 + 8 * v12);
  if (v25) {
    goto LABEL_36;
  }
  uint64_t v12 = v19 + 4;
  if (v19 + 4 >= v61) {
    goto LABEL_48;
  }
  unint64_t v25 = *(void *)(v62 + 8 * v12);
  if (v25)
  {
LABEL_36:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v21 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_37:
    id v23 = *(id *)(*(void *)(v11 + 48) + 8 * v21);
    if (!v23) {
      goto LABEL_48;
    }
    goto LABEL_38;
  }
  uint64_t v26 = v19 + 5;
  while (v61 != v26)
  {
    unint64_t v25 = *(void *)(v62 + 8 * v26++);
    if (v25)
    {
      uint64_t v12 = v26 - 1;
      goto LABEL_36;
    }
  }
LABEL_48:
  sub_10052E1EC();
  if (v18)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    int64_t v7 = (int64_t)v76;
    uint64_t v67 = v77;
    uint64_t v37 = v78;
    unint64_t v18 = v79;
    unint64_t v38 = v80;
  }
  else
  {
    uint64_t v39 = -1 << *(unsigned char *)(v7 + 32);
    uint64_t v37 = ~v39;
    uint64_t v40 = -v39;
    if (v40 < 64) {
      uint64_t v41 = ~(-1 << v40);
    }
    else {
      uint64_t v41 = -1;
    }
    unint64_t v38 = v41 & *(void *)(v7 + 56);
  }
  int64_t v63 = (unint64_t)(v37 + 64) >> 6;
  uint64_t v65 = v68 + 56;
  while (2)
  {
    unint64_t v42 = v18;
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_88;
      }
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v45 = v70;
      swift_unknownObjectRelease();
      if (!v70) {
        goto LABEL_88;
      }
      goto LABEL_78;
    }
    if (v38)
    {
      unint64_t v43 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
      unint64_t v44 = v43 | (v18 << 6);
LABEL_77:
      id v45 = *(id *)(*(void *)(v7 + 48) + 8 * v44);
      if (!v45) {
        goto LABEL_88;
      }
LABEL_78:
      if (v66)
      {
        id v49 = v45;
        char v50 = __CocoaSet.contains(_:)();

        if (v50) {
          goto LABEL_56;
        }
LABEL_55:
        [v69 removeObserver:v64 forChangeSource:v45];
      }
      else
      {
        if (!*(void *)(v68 + 16)) {
          goto LABEL_55;
        }
        Swift::Int v51 = NSObject._rawHashValue(seed:)(*(void *)(v68 + 40));
        uint64_t v52 = -1 << *(unsigned char *)(v68 + 32);
        unint64_t v53 = v51 & ~v52;
        if (((*(void *)(v65 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53) & 1) == 0) {
          goto LABEL_55;
        }
        id v54 = *(id *)(*(void *)(v68 + 48) + 8 * v53);
        char v55 = static NSObject.== infix(_:_:)();

        if ((v55 & 1) == 0)
        {
          uint64_t v56 = ~v52;
          do
          {
            unint64_t v53 = (v53 + 1) & v56;
            if (((*(void *)(v65 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53) & 1) == 0) {
              goto LABEL_55;
            }
            id v57 = *(id *)(*(void *)(v68 + 48) + 8 * v53);
            char v58 = static NSObject.== infix(_:_:)();
          }
          while ((v58 & 1) == 0);
        }
      }
LABEL_56:

      continue;
    }
    break;
  }
  int64_t v46 = v18 + 1;
  if (__OFADD__(v18, 1)) {
    goto LABEL_91;
  }
  if (v46 >= v63) {
    goto LABEL_88;
  }
  unint64_t v47 = *(void *)(v67 + 8 * v46);
  ++v18;
  if (v47) {
    goto LABEL_76;
  }
  unint64_t v18 = v42 + 2;
  if ((uint64_t)(v42 + 2) >= v63) {
    goto LABEL_88;
  }
  unint64_t v47 = *(void *)(v67 + 8 * v18);
  if (v47) {
    goto LABEL_76;
  }
  unint64_t v18 = v42 + 3;
  if ((uint64_t)(v42 + 3) >= v63) {
    goto LABEL_88;
  }
  unint64_t v47 = *(void *)(v67 + 8 * v18);
  if (v47) {
    goto LABEL_76;
  }
  unint64_t v18 = v42 + 4;
  if ((uint64_t)(v42 + 4) >= v63) {
    goto LABEL_88;
  }
  unint64_t v47 = *(void *)(v67 + 8 * v18);
  if (v47)
  {
LABEL_76:
    unint64_t v38 = (v47 - 1) & v47;
    unint64_t v44 = __clz(__rbit64(v47)) + (v18 << 6);
    goto LABEL_77;
  }
  unint64_t v48 = v42 + 5;
  while (v63 != v48)
  {
    unint64_t v47 = *(void *)(v67 + 8 * v48++);
    if (v47)
    {
      unint64_t v18 = v48 - 1;
      goto LABEL_76;
    }
  }
LABEL_88:
  sub_10052E1EC();
  *(void *)(v64 + v60) = v68;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_100D4A490()
{
  uint64_t v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v67 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  sub_10050BF48(0, (unint64_t *)&qword_101686A40);
  uint64_t v5 = (uint64_t)[Strong mostSpecificCurrentEditorOfClass:swift_getObjCClassFromMetadata()];

  if (!v5) {
    goto LABEL_17;
  }
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (!v6)
  {
    swift_unknownObjectRelease();
LABEL_17:
    uint64_t v15 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
    [v15 setSelectedFillColor:0];
    [v15 setSelectedStrokeColor:0];
    return;
  }
  int64_t v7 = (void *)v6;
  type metadata accessor for CRLShapeItem();
  id v8 = [v7 sortedBoardItemsOfClass:swift_getObjCClassFromMetadata()];
  type metadata accessor for CRLBoardItem(0);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v10 = (unint64_t)sub_10065C650(v9);
  swift_bridgeObjectRelease();
  if (!v10)
  {
    swift_unknownObjectRelease();
    return;
  }
  v75[0] = _swiftEmptyArrayStorage;
  if (v10 >> 62) {
    goto LABEL_61;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_6:
  unint64_t v53 = v0;
  if (v11)
  {
    if (v11 < 1)
    {
      __break(1u);
LABEL_69:
      __break(1u);
      return;
    }
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        uint64_t v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v13 = *(id *)(v10 + 8 * i + 32);
      }
      unint64_t v14 = v13;
      uint64_t v0 = (CGColorSpace *)v13;
      if ((*(uint64_t (**)(void *))((swift_isaMask & *v13) + 0x2A0))(v13))
      {
        uint64_t v0 = (CGColorSpace *)v75;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v16 = v75[0];
    if ((v75[0] & 0x8000000000000000) != 0) {
      goto LABEL_62;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v16 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_62;
    }
  }
  if ((v16 & 0x4000000000000000) == 0)
  {
    uint64_t v17 = *(void *)(v16 + 16);
    if (!v17) {
      goto LABEL_63;
    }
    goto LABEL_28;
  }
LABEL_62:
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (v17)
  {
LABEL_28:
    uint64_t v52 = v5;
    id v18 = 0;
    uint64_t v19 = 0;
    unint64_t v72 = v16 & 0xC000000000000001;
    uint64_t v5 = 4;
    uint64_t v70 = v17;
    uint64_t v71 = (double *)v16;
    while (1)
    {
      unint64_t v10 = v5 - 4;
      id v74 = v18;
      if (v72)
      {
        unint64_t v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v21 = v5 - 3;
        if (__OFADD__(v10, 1)) {
          goto LABEL_60;
        }
      }
      else
      {
        unint64_t v20 = *(id *)(v16 + 8 * v5);
        uint64_t v21 = v5 - 3;
        if (__OFADD__(v10, 1))
        {
LABEL_60:
          __break(1u);
LABEL_61:
          swift_bridgeObjectRetain();
          uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      uint64_t v73 = v21;
      if (v19) {
        goto LABEL_38;
      }
      uint64_t v68 = 0;
      id v69 = v20;
      uint64_t v22 = **(void **)((char *)v20 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      uint64_t v23 = swift_conformsToProtocol2();
      if (!v23) {
        goto LABEL_69;
      }
      uint64_t v24 = v23;
      unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 16);
      swift_retain();
      uint64_t v26 = (uint64_t)v67;
      v25(v22, v24);
      swift_release();
      sub_1005057FC((uint64_t *)&unk_1016A8B50);
      CRRegister.wrappedValue.getter();
      uint64_t v65 = v75[0];
      uint64_t v27 = v75[1];
      uint64_t v28 = v75[2];
      uint64_t v29 = v75[3];
      uint64_t v63 = v75[4];
      uint64_t v62 = v75[5];
      uint64_t v61 = v75[6];
      uint64_t v30 = v75[8];
      uint64_t v60 = v75[7];
      uint64_t v0 = (CGColorSpace *)v75[9];
      uint64_t v31 = v75[10];
      uint64_t v32 = v75[11];
      uint64_t v33 = v75[12];
      uint64_t v64 = v75[13];
      sub_100A59730(v26);
      uint64_t v19 = v68;
      unint64_t v20 = v69;
      if (!v33) {
        goto LABEL_38;
      }
      uint64_t v34 = sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
      uint64_t v66 = v27;
      uint64_t v54 = v34;
      int v76 = v28;
      uint64_t v58 = v28;
      char v77 = BYTE4(v28) & 1;
      uint64_t v59 = v29;
      uint64_t v78 = v29;
      uint64_t v35 = v63;
      uint64_t v36 = v62;
      uint64_t v79 = v63;
      uint64_t v80 = v62;
      uint64_t v37 = v61;
      uint64_t v38 = v60;
      uint64_t v81 = v61;
      uint64_t v82 = v60;
      uint64_t v57 = v30;
      uint64_t v83 = v30;
      uint64_t v84 = v0;
      uint64_t v55 = v31;
      uint64_t v85 = v31;
      uint64_t v86 = v32;
      uint64_t v87 = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v56 = v0;
      swift_bridgeObjectRetain();
      uint64_t v0 = sub_1007B0B84((uint64_t)&v76);
      uint64_t v39 = v36;
      if (v66)
      {
        if (qword_10166FB80 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v40 = (id)static OS_os_log.persistence;
        uint64_t v41 = static os_log_type_t.info.getter();
        sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v41, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
      id v42 = objc_allocWithZone((Class)CRLColorFill);
      id v43 = [v42 initWithColor:v0, v52];

      sub_10051ABBC(v65, v66, v58, v59, v35, v39, v37, v38, v57, (uint64_t)v56, v55, v32, v33);
      self;
      unint64_t v44 = (void *)swift_dynamicCastObjCClass();
      if (!v44) {
        break;
      }
      id v45 = [v44 color];

      uint64_t v19 = v45;
      id v18 = v74;
      unint64_t v20 = v69;
      if (v74)
      {
LABEL_39:
        unint64_t v16 = (unint64_t)v71;

        if (!v19) {
          goto LABEL_31;
        }
        goto LABEL_30;
      }
LABEL_49:
      int64_t v46 = *(uint64_t (**)(void))((swift_isaMask & *v20) + 0x420);
      uint64_t v0 = v20;
      unint64_t v47 = (void *)v46();

      if (v47)
      {
        unsigned __int8 v48 = [v47 isNullStroke];
        unint64_t v16 = (unint64_t)v71;
        if ((v48 & 1) == 0)
        {
          id v18 = [v47 color];

          if (!v19) {
            goto LABEL_31;
          }
          goto LABEL_30;
        }
      }
      else
      {
        unint64_t v16 = (unint64_t)v71;
      }

      if (!v19) {
        goto LABEL_31;
      }
LABEL_30:
      if (v18)
      {
        swift_release();
        id v49 = *(void **)((char *)v53 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
LABEL_59:
        id v50 = [v19 UIColor:v52];
        goto LABEL_64;
      }
LABEL_31:
      ++v5;
      if (v73 == v70)
      {
        swift_release();
        id v49 = *(void **)((char *)v53 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
        if (!v19)
        {
          id v50 = 0;
          goto LABEL_64;
        }
        goto LABEL_59;
      }
    }

    uint64_t v19 = v68;
    unint64_t v20 = v69;
LABEL_38:
    id v18 = v74;
    if (v74) {
      goto LABEL_39;
    }
    goto LABEL_49;
  }
LABEL_63:
  swift_release();
  id v50 = 0;
  id v18 = 0;
  uint64_t v19 = 0;
  id v49 = *(void **)((char *)v53 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
LABEL_64:
  [v49 setSelectedFillColor:v50, v52];

  if (v18) {
    id v51 = [v18 UIColor];
  }
  else {
    id v51 = 0;
  }
  [v49 setSelectedStrokeColor:v51];

  swift_unknownObjectRelease();
}

void sub_100D4AE20()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView), "selectedFillColor"));
  if (v1)
  {
    id v6 = v1;
    swift_unknownObjectRetain();
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      id v5 = [objc_allocWithZone((Class)CRLColor) initWithUIColor:v6];
      sub_100D4B310(20, (uint64_t)v5, (int)[v3 isUpdatingContinuously]);

      swift_unknownObjectRelease();
      uint64_t v4 = v5;
    }
    else
    {
      swift_unknownObjectRelease();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fillColorChangedFromTray(sender:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1107, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fillColorChangedFromTray(sender:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1107);
      uint64_t v4 = v6;
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fillColorChangedFromTray(sender:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1104, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fillColorChangedFromTray(sender:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1104);
  }
}

void sub_100D4B05C()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView), "selectedStrokeColor"));
  if (v1)
  {
    id v6 = v1;
    swift_unknownObjectRetain();
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      id v5 = [objc_allocWithZone((Class)CRLColor) initWithUIColor:v6];
      sub_100D4B310(15, (uint64_t)v5, (int)[v3 isUpdatingContinuously]);

      swift_unknownObjectRelease();
      uint64_t v4 = v5;
    }
    else
    {
      swift_unknownObjectRelease();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"strokeColorChangedFromTray(sender:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1118, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"strokeColorChangedFromTray(sender:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1118);
      uint64_t v4 = v6;
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"strokeColorChangedFromTray(sender:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1115, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"strokeColorChangedFromTray(sender:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1115);
  }
}

void sub_100D4B298(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

void sub_100D4B310(uint64_t a1, uint64_t a2, int a3)
{
  int v111 = a3;
  uint64_t v125 = a2;
  uint64_t v127 = type metadata accessor for UUID();
  uint64_t v109 = *(void *)(v127 - 8);
  __chkstk_darwin(v127, v6);
  uint64_t v126 = (char *)v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v122 = (char *)v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = v3;
  uint64_t v110 = v3 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_editorController;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  sub_10050BF48(0, (unint64_t *)&qword_101686A40);
  unint64_t v12 = (unint64_t)[Strong mostSpecificCurrentEditorOfClass:swift_getObjCClassFromMetadata()];

  if (!v12) {
    goto LABEL_36;
  }
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
LABEL_36:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1146, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1146);
    return;
  }
  unint64_t v14 = (void *)v13;
  if (a1 != 15 && a1 != 20)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1151, (uint64_t)"Unexpected property type in setSelectedShapeProperty(). Ignoring.", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1151);
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v15 = type metadata accessor for CRLShapeItem();
  unint64_t v16 = (char *)[v14 sortedBoardItemsOfClass:swift_getObjCClassFromMetadata()];
  type metadata accessor for CRLBoardItem(0);
  uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v144 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0) {
      unint64_t v16 = (char *)v17;
    }
    else {
      unint64_t v16 = (char *)(v17 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v128 = a1;
  v102[0] = v12;
  if (v18)
  {
    if (v18 >= 1)
    {
      uint64_t v19 = 0;
      unint64_t v129 = v17 & 0xC000000000000001;
      uint64_t v120 = (char *)v18;
      uint64_t v121 = (void (**)(char *, uint64_t))v17;
      v102[1] = v15;
      while (1)
      {
        id v20 = v129 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v17 + 8 * v19 + 32);
        uint64_t v21 = v20;
        uint64_t v22 = (void *)swift_dynamicCastClass();
        if (!v22) {
          break;
        }
        uint64_t v23 = v22;
        if (((*(uint64_t (**)(void))((swift_isaMask & *v22) + 0x2A0))() & 1) == 0) {
          goto LABEL_11;
        }
        if (a1 != 15)
        {
          uint64_t v29 = **(void **)((char *)v23 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          uint64_t v30 = swift_conformsToProtocol2();
          if (!v30) {
            goto LABEL_111;
          }
          uint64_t v31 = v30;
          uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v30 + 16);
          id v119 = v21;
          swift_retain();
          uint64_t v33 = (uint64_t)v122;
          v32(v29, v31);
          swift_release();
          sub_1005057FC((uint64_t *)&unk_1016A8B50);
          CRRegister.wrappedValue.getter();
          uint64_t v34 = v132;
          uint64_t v35 = v133;
          uint64_t v114 = v134;
          uint64_t v115 = v131;
          uint64_t v36 = v137;
          uint64_t v37 = v138;
          uint64_t v112 = v139;
          uint64_t v113 = v136;
          uint64_t v38 = v141;
          uint64_t v123 = v140;
          uint64_t v124 = v135;
          uint64_t v39 = v142;
          id v116 = v143;
          uint64_t v117 = v130;
          sub_100A59730(v33);
          if (v39)
          {
            sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
            int v146 = v34;
            uint64_t v106 = v34;
            uint64_t v107 = v36;
            char v147 = BYTE4(v34) & 1;
            uint64_t v108 = v35;
            uint64_t v148 = v35;
            uint64_t v40 = v113;
            uint64_t v41 = v114;
            uint64_t v149 = v114;
            uint64_t v150 = v124;
            uint64_t v151 = v113;
            uint64_t v152 = v36;
            uint64_t v104 = v38;
            uint64_t v105 = v37;
            uint64_t v153 = v37;
            uint64_t v42 = v112;
            uint64_t v154 = v112;
            uint64_t v155 = v123;
            uint64_t v156 = v38;
            uint64_t v157 = v39;
            swift_bridgeObjectRetain();
            uint64_t v103 = v39;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v43 = sub_1007B0B84((uint64_t)&v146);
            id v44 = v119;
            uint64_t v45 = v115;
            if (v115)
            {
              if (qword_10166FB80 != -1) {
                swift_once();
              }
              swift_beginAccess();
              id v46 = (id)static OS_os_log.persistence;
              uint64_t v47 = static os_log_type_t.info.getter();
              sub_100BAC898((uint64_t)v46, (uint64_t)&_mh_execute_header, v47, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);
            }
            id v48 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v43];

            sub_10051ABBC(v117, v45, v106, v108, v41, v124, v40, v107, v105, v42, v123, v104, v103);
            a1 = v128;
            uint64_t v17 = (uint64_t)v121;
LABEL_29:
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            uint64_t v18 = (uint64_t)v120;
            goto LABEL_12;
          }
          id v49 = v119;

          a1 = v128;
          goto LABEL_34;
        }
        uint64_t v24 = *(uint64_t (**)(void))((swift_isaMask & *v23) + 0x420);
        id v25 = v21;
        uint64_t v26 = (void *)v24();
        if (!v26)
        {

LABEL_34:
          uint64_t v18 = (uint64_t)v120;
          uint64_t v17 = (uint64_t)v121;
          goto LABEL_12;
        }
        uint64_t v27 = v26;
        unsigned int v28 = [v26 isNullStroke];

        uint64_t v17 = (uint64_t)v121;
        if (!v28) {
          goto LABEL_29;
        }

        uint64_t v18 = (uint64_t)v120;
LABEL_12:
        if (v18 == ++v19)
        {
          swift_bridgeObjectRelease();
          uint64_t v18 = v144;
          goto LABEL_42;
        }
      }
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1166, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1166);
LABEL_11:

      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_78;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_42:
  swift_bridgeObjectRelease();
  uint64_t v15 = (unint64_t)v18 >> 62;
  if ((unint64_t)v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v64 <= 0) {
      goto LABEL_75;
    }
  }
  else if (*(uint64_t *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
LABEL_75:
    swift_unknownObjectRelease();
    goto LABEL_76;
  }
  id v50 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v51 = (char *)[v50 editingCoordinator];

  if (!v51)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1185, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1185);
    goto LABEL_75;
  }
  unint64_t v16 = (char *)*(id *)&v51[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController];

  uint64_t v52 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v53 = [v52 canvasEditor];

  if (!v53)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1186, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setSelectedShapeProperty(_:to:continuously:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1186);
    swift_unknownObjectRelease();

LABEL_76:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v117 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_hasCommandGroupOpenForContinuousColorUpdates;
  char v54 = *(unsigned char *)(v118 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_hasCommandGroupOpenForContinuousColorUpdates);
  uint64_t v124 = v18;
  unint64_t v129 = (unint64_t)v16;
  id v119 = v53;
  if ((v54 & 1) != 0 || (v111 & 1) == 0) {
    goto LABEL_88;
  }
  sub_10078F988(0);
  uint64_t v4 = (uint64_t)&v16[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
  swift_beginAccess();
  unint64_t v12 = *(void *)v4;
  if (*(void *)v4 >> 62)
  {
LABEL_78:
    swift_bridgeObjectRetain();
    uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
    if (!v55) {
      goto LABEL_79;
    }
    goto LABEL_50;
  }
  uint64_t v55 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v55)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    uint64_t v4 = 2;
    unint64_t v16 = "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v65, v66);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_80;
  }
LABEL_50:
  unint64_t v56 = v55 - 1;
  if (__OFSUB__(v55, 1))
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if ((v12 & 0xC000000000000001) == 0)
  {
    if ((v56 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v56 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v57 = *(void *)(v12 + 8 * v56 + 32);
      swift_retain();
      goto LABEL_55;
    }
    __break(1u);
    goto LABEL_84;
  }
LABEL_81:
  uint64_t v57 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_55:
  swift_bridgeObjectRelease();
  int v58 = *(unsigned __int8 *)(v57 + 16);
  if (v58 == 3)
  {
    swift_release();
LABEL_86:
    id v53 = v119;
    goto LABEL_87;
  }
  id v53 = v119;
  if (v58 == 2 || v58 == 1)
  {
    swift_release();
LABEL_87:
    *(unsigned char *)(v118 + v117) = 1;
LABEL_88:
    uint64_t v67 = (void *)swift_unknownObjectUnownedLoadStrong();
    swift_unknownObjectRetain();
    id v68 = [v67 selectionPath];

    id v69 = [objc_allocWithZone((Class)CRLCanvasCommandSelectionBehavior) initWithCanvasEditor:v53 type:2 selectionPath:v68];
    swift_unknownObjectRelease();

    id v70 = v69;
    sub_10078F988(v69);
    id v116 = v70;

    id v71 = [self mainBundle];
    NSString v72 = String._bridgeToObjectiveC()();
    NSString v73 = String._bridgeToObjectiveC()();
    id v74 = [v71 localizedStringForKey:v72 value:v73 table:0];

    uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v77 = v76;

    sub_10078F5CC(v75, v77);
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v78)
      {
LABEL_105:
        swift_bridgeObjectRelease();
        sub_10078FB90(0);
        uint64_t v101 = v117;
        if (*(unsigned char *)(v118 + v117) == 1 && (v111 & 1) == 0)
        {
          sub_10078FB90(0);
          *(unsigned char *)(v118 + v101) = 0;
        }
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v78 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v78) {
        goto LABEL_105;
      }
    }
    if (v78 >= 1)
    {
      uint64_t v79 = 0;
      uint64_t v121 = (void (**)(char *, uint64_t))(v109 + 8);
      uint64_t v122 = (char *)(v18 & 0xC000000000000001);
      uint64_t v120 = (char *)&type metadata for Any + 8;
      uint64_t v123 = v78;
      do
      {
        if (v122) {
          id v90 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v90 = (char *)*(id *)(v18 + 8 * v79 + 32);
        }
        id v91 = v90;
        if (a1 == 15)
        {
          uint64_t v92 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v90) + 0x420);
          char v93 = v90;
          id v94 = (void *)v92();

          if (v94
            && ([v94 mutableCopy],
                v94,
                _bridgeAnyObjectToAny(_:)(),
                swift_unknownObjectRelease(),
                sub_1005057FC(&qword_10169AB40),
                (swift_dynamicCast() & 1) != 0))
          {
            id v95 = v145;
            [v145 setColor:v125];
            uint64_t v84 = (char *)v95;
          }
          else
          {
            uint64_t v84 = 0;
          }
          id v96 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetStroke());
          uint64_t v97 = *(void (**)(uint64_t))(**(void **)&v93[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                               + 256);
          v87.super.Class isa = (Class)v93;
          uint64_t v98 = swift_retain();
          uint64_t v99 = v126;
          v97(v98);
          swift_release();
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*v121)(v99, v127);
          id v88 = [v96 initWithId:isa stroke:v84];

          uint64_t v81 = v84;
          Class v89 = v87.super.isa;
        }
        else
        {
          id v80 = objc_allocWithZone((Class)CRLColorFill);
          uint64_t v81 = (char *)[v80 initWithColor:v125];
          id v82 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetFill());
          uint64_t v83 = *(void (**)(uint64_t))(**(void **)&v91[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                               + 256);
          uint64_t v84 = v91;
          uint64_t v85 = swift_retain();
          uint64_t v86 = v126;
          v83(v85);
          swift_release();
          v87.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*v121)(v86, v127);
          id v88 = [v82 initWithId:v87.super.isa fill:v81];
          Class v89 = (Class)v84;
        }
        ++v79;

        unint64_t v16 = (char *)v129;
        sub_10078BED8(v88, 0, 0, 4, 0);

        uint64_t v18 = v124;
        a1 = v128;
      }
      while (v123 != v79);
      goto LABEL_105;
    }
    __break(1u);
    goto LABEL_110;
  }
  unint64_t v12 = *(void *)v4;
  uint64_t v59 = *(void *)v4 >> 62;
  uint64_t v122 = (char *)v57;
  uint64_t v123 = v15;
  if (!v59)
  {
    uint64_t v60 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v60) {
      goto LABEL_64;
    }
LABEL_85:
    swift_bridgeObjectRelease_n();
    v122[16] = 1;
    swift_release();
    uint64_t v15 = v123;
    uint64_t v18 = v124;
    unint64_t v16 = (char *)v129;
    goto LABEL_86;
  }
LABEL_84:
  swift_bridgeObjectRetain_n();
  uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
  if (!v60) {
    goto LABEL_85;
  }
LABEL_64:
  if (v60 >= 1)
  {
    uint64_t v61 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v62 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v62 = *(void *)(v12 + 8 * v61 + 32);
        swift_retain();
      }
      ++v61;
      uint64_t v63 = *(id *)(v62 + 24);
      sub_10078D41C(v63, 0);
      swift_release();
    }
    while (v60 != v61);
    goto LABEL_85;
  }
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
}

void sub_100D4C6C4()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  unsigned int v2 = [Strong allowUndoRedoOperations];

  if (v2)
  {
    uint64_t v3 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_updatingZOrderButtons;
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_updatingZOrderButtons) & 1) == 0)
    {
      sub_100D49B84();
      if (v4)
      {
        *(unsigned char *)(v0 + v3) = 1;
        id v5 = (void *)swift_unknownObjectUnownedLoadStrong();
        sub_10050BF48(0, (unint64_t *)&qword_101686A40);
        id v6 = [v5 mostSpecificCurrentEditorOfClass:swift_getObjCClassFromMetadata()];

        if (v6 && (self, uint64_t v7 = swift_dynamicCastObjCClass(), swift_unknownObjectRelease(), v7))
        {
          uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
          uint64_t v9 = (void *)swift_unknownObjectUnownedLoadStrong();
          id v10 = [v9 canPerformInteractiveAction:"sendBackward:" withSender:0];

          [v8 setSendBackwardEnabled:v10];
          uint64_t v11 = (void *)swift_unknownObjectUnownedLoadStrong();
          id v12 = [v11 canPerformInteractiveAction:"bringForward:" withSender:0];

          [v8 setBringForwardEnabled:v12];
        }
        else
        {
          uint64_t v13 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
          [v13 setSendBackwardEnabled:0];
          [v13 setBringForwardEnabled:0];
        }
        *(unsigned char *)(v0 + v3) = 0;
      }
    }
  }
}

void sub_100D4C8F0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  a4();
  swift_unknownObjectRelease();
}

void sub_100D4C960()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v2 = [Strong presentedViewController];

  if (v2)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    v6[4] = sub_100D53610;
    v6[5] = v3;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = *(void *)"";
    v6[2] = sub_100679958;
    v6[3] = &unk_10152B5A0;
    char v4 = _Block_copy(v6);
    id v5 = v0;
    swift_release();
    [v2 dismissViewControllerAnimated:1 completion:v4];
    _Block_release(v4);
  }
}

uint64_t type metadata accessor for CRLiOSPencilTray()
{
  return self;
}

double sub_100D4CB30()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong canvasView];

  id v2 = [v1 enclosingScrollView];
  if (v2)
  {
    uint64_t v3 = (char *)sub_100D43BC0();
    if (v3)
    {
      char v4 = v3;
      id v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v5 = v7;
    }
    [v5 frameObscuredInView:v2];
    double v6 = v8;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"rectangleObscuringCanvasScrollView", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1411, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rectangleObscuringCanvasScrollView", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1411);
    return CGRectNull.origin.x;
  }
  return v6;
}

void sub_100D4D014(void *a1)
{
  id v2 = (char *)sub_100D43BC0();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = *(id *)&v2[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v4 = v5;
  }
  sub_10060EAF8((uint64_t)a1, (uint64_t)v4, (uint64_t)&_mh_execute_header, (uint64_t)"toolPickerIsRulerActiveDidChange(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1525);

  if (([a1 isVisible] & 1) == 0 && objc_msgSend(a1, "isRulerActive"))
  {
    [(id)swift_unknownObjectUnownedLoadStrong() beginDrawingModeIfNeeded];
    swift_unknownObjectRelease();
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v7 = [Strong freehandDrawingToolkit];

  if (v7)
  {
    [v7 setRulerToolShowing:[a1 isRulerActive]];
  }
  else
  {
    __break(1u);
  }
}

void sub_100D4D1E4(uint64_t a1)
{
  swift_getObjectType();
  uint64_t v3 = (char *)sub_100D43BC0();
  if (v3)
  {
    id v4 = v3;
    id v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v5 = v6;
  }
  sub_10060EAF8(a1, (uint64_t)v5, (uint64_t)&_mh_execute_header, (uint64_t)"toolPickerVisibilityDidChange(_:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1544);

  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v8 = [Strong delegate];

  if (!v8)
  {
    __break(1u);
    return;
  }
  if ([v8 respondsToSelector:"pencilKitCanvasViewControllerForCanvasViewController:"])
  {
    uint64_t v9 = (void *)swift_unknownObjectUnownedLoadStrong();
    id v10 = (char *)[v8 pencilKitCanvasViewControllerForCanvasViewController:v9];
    swift_unknownObjectRelease();

    if (v10)
    {
      uint64_t v11 = *(void **)&v10[OBJC_IVAR____TtC8Freeform35CRLiOSPencilKitCanvasViewController_smartSelectionManager];
      if (v11)
      {
        unsigned __int8 v12 = [v11 shouldSuppressToolPickerVisibilityDidChangeUpdate];

        if (v12) {
          return;
        }
      }
      else
      {
      }
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  [(id)swift_getObjCClassFromMetadata() cancelPreviousPerformRequestsWithTarget:v1 selector:"updateForToolPickerVisibilityDidChange" object:0];

  [v1 performSelector:"updateForToolPickerVisibilityDidChange" withObject:0 afterDelay:0.0];
}

void sub_100D4D43C()
{
  [v0 rectangleObscuringCanvasScrollView];
  if (!CGRectEqualToRect(v11, *(CGRect *)&v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lastRectangleObscuringCanvasScrollViewReportedToDelegate]))
  {
    [(id)swift_unknownObjectUnownedLoadStrong() didUpdateRectangleObscuringCanvasScrollViewForPencilTray:v0];
    swift_unknownObjectRelease();
  }
  id v1 = (char *)sub_100D43BC0();
  if (v1)
  {
    id v2 = v1;
    id v3 = *(id *)&v1[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v3 = v4;
  }
  unsigned __int8 v5 = [v3 isVisible];

  if ((v5 & 1) == 0)
  {
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    unsigned __int8 v7 = [Strong isShowingRadialPalette];

    if ((v0[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isHidden] & 1) == 0 && (v7 & 1) == 0 && !sub_100D4D5D4())
    {
      unsigned __int8 v8 = [(id)swift_unknownObjectUnownedLoadStrong() shouldKeepDocumentModeOnVisibilityChangeOfPencilTray:v0];
      swift_unknownObjectRelease();
      if ((v8 & 1) == 0)
      {
        id v9 = (id)swift_unknownObjectUnownedLoadStrong();
        [v9 resetToDefaultModeAnimated:1];
      }
    }
  }
}

BOOL sub_100D4D5D4()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong canvasView];

  if (!v1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"shouldKeepDocumentModeForFirstResponder", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1595, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shouldKeepDocumentModeForFirstResponder", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1595);
    return 0;
  }
  id v2 = [v1 firstResponder];

  if (!v2) {
    return 0;
  }
  self;
  BOOL v3 = swift_dynamicCastObjCClass() != 0;

  return v3;
}

uint64_t sub_100D4D760(uint64_t a1)
{
  BOOL v3 = (char *)sub_100D43BC0();
  if (v3)
  {
    id v4 = v3;
    id v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v5 = v6;
  }
  sub_10060EAF8(a1, (uint64_t)v5, (uint64_t)&_mh_execute_header, (uint64_t)"toolPickerFramesObscuredDidChange(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1608);

  [v1 rectangleObscuringCanvasScrollView];
  uint64_t result = CGRectEqualToRect(v9, *(CGRect *)&v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lastRectangleObscuringCanvasScrollViewReportedToDelegate]);
  if ((result & 1) == 0)
  {
    [(id)swift_unknownObjectUnownedLoadStrong() didUpdateRectangleObscuringCanvasScrollViewForPencilTray:v1];
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100D4D8E8(uint64_t a1, void *a2)
{
  id v5 = (char *)sub_100D43BC0();
  if (v5)
  {
    double v6 = v5;
    id v7 = *(id *)&v5[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v7 = v8;
  }
  sub_10060EAF8(a1, (uint64_t)v7, (uint64_t)&_mh_execute_header, (uint64_t)"_toolPicker(_:didChange:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1618);

  if (!a2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_toolPicker(_:didChange:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1620, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_toolPicker(_:didChange:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1620);
    return;
  }
  id v9 = objc_allocWithZone((Class)CRLColor);
  id v10 = a2;
  id v16 = [v9 initWithUIColor:v10];
  sub_100D49B84();
  if (v11)
  {
    unsigned __int8 v12 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
    id v13 = [v12 selectedStrokeColor];

    if (v13)
    {
      uint64_t v14 = 15;
LABEL_11:
      sub_100D4B310(v14, (uint64_t)v16, 0);
      goto LABEL_12;
    }
    id v15 = [v12 selectedFillColor];

    if (v15)
    {
      uint64_t v14 = 20;
      goto LABEL_11;
    }
  }
LABEL_12:
}

id sub_100D4DB74(uint64_t a1)
{
  BOOL v3 = (char *)sub_100D43BC0();
  if (v3)
  {
    id v4 = v3;
    id v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v5 = v6;
  }
  sub_10060EAF8(a1, (uint64_t)v5, (uint64_t)&_mh_execute_header, (uint64_t)"_toolPickerCurrentSelectionColor(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1631);

  id v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
  id result = [v7 selectedStrokeColor];
  if (!result) {
    return [v7 selectedFillColor];
  }
  return result;
}

void sub_100D4DCBC(uint64_t a1)
{
  BOOL v3 = (char *)sub_100D43BC0();
  if (v3)
  {
    id v4 = v3;
    id v5 = *(id *)&v3[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v5 = v6;
  }
  sub_10060EAF8(a1, (uint64_t)v5, (uint64_t)&_mh_execute_header, (uint64_t)"_toggleLassoToolEditingViewColorPicker(for:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 1647);

  id v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView);
  id v8 = [v7 selectedStrokeColor];

  if (v8)
  {
    id v9 = "toggleStrokeColorPickerPresentation";
  }
  else
  {
    id v10 = [v7 selectedFillColor];

    if (!v10)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_toggleLassoToolEditingViewColorPicker(for:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1657, (uint64_t)"Trying to toggle lasso tool editing view color picker with no colors selected.", 78, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_toggleLassoToolEditingViewColorPicker(for:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1657);
      return;
    }
    id v9 = "toggleFillColorPickerPresentation";
  }

  [v7 v9];
}

void sub_100D4DF84(unint64_t a1)
{
  uint64_t v2 = (unsigned char *)OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors) & 1) == 0)
  {
    if (a1 >> 62) {
      goto LABEL_19;
    }
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v23 = v2;
      uint64_t v24 = v1;
      uint64_t v5 = 4;
      while (1)
      {
        uint64_t v1 = v5 - 4;
        double v6 = (a1 & 0xC000000000000001) != 0
           ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : (char *)*(id *)(a1 + 8 * v5);
        uint64_t v2 = v6;
        uint64_t v7 = v5 - 3;
        if (__OFADD__(v1, 1)) {
          break;
        }
        id v8 = *(char **)&v6[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details];
        id v9 = &v8[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
        swift_beginAccess();
        uint64_t v10 = *(void *)v9;
        if (*(void *)(*(void *)v9 + 16))
        {
          uint64_t v11 = sub_1009563E8();
          if (v12)
          {
            sub_100522E9C(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&aBlock, &qword_101672BF0);
            sub_100522F00((uint64_t)&aBlock, (uint64_t *)&unk_1016725E0);
            swift_bridgeObjectRelease();

            goto LABEL_17;
          }
        }
        aBlock = 0;
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = 1;
        id v13 = v8;
        sub_100522F00((uint64_t)&aBlock, (uint64_t *)&unk_1016725E0);
        uint64_t v14 = *(void *)v9;
        if (*(void *)(*(void *)v9 + 16))
        {
          uint64_t v15 = sub_1009563E8();
          if (v16)
          {
            sub_100522E9C(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&aBlock, &qword_101672BF0);
            sub_100522F00((uint64_t)&aBlock, (uint64_t *)&unk_1016725E0);

            swift_bridgeObjectRelease();
LABEL_17:
            v23[v24] = 1;
            goto LABEL_21;
          }
        }
        aBlock = 0;
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = 1;
        sub_100522F00((uint64_t)&aBlock, (uint64_t *)&unk_1016725E0);

        ++v5;
        if (v7 == v4) {
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    id v18 = [Strong canvas];

    [v18 i_setLayersInvalidWithoutInvalidatingAnySpecificLayers];
    uint64_t v19 = (void *)swift_unknownObjectUnownedLoadStrong();
    id v20 = [v19 canvas];

    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v29 = sub_100D4E7E0;
    uint64_t v30 = v21;
    aBlock = _NSConcreteStackBlock;
    uint64_t v26 = *(void *)"";
    uint64_t v27 = sub_100679958;
    uint64_t v28 = (uint64_t)&unk_10152B550;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_release();
    [v20 afterLayoutIncludingLayers:1 performBlock:v22];
    _Block_release(v22);
  }
}

void sub_100D4E2CC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors) == 1)
    {
      sub_100D49B84();
      if (v3) {
        sub_100D4A490();
      }
    }
    v1[v2] = 0;
  }
}

void sub_100D4E4F0()
{
  uint64_t v0 = (char *)sub_100D43BC0();
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = *(id *)&v0[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v2 = v3;
  }
  unsigned int v4 = [v2 isRulerActive];

  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v6 = [Strong freehandDrawingToolkit];

  if (!v6)
  {
    __break(1u);
    goto LABEL_15;
  }
  unsigned int v7 = [v6 isRulerToolShowing];

  if (v4 == v7) {
    return;
  }
  id v8 = (char *)sub_100D43BC0();
  if (v8)
  {
    id v9 = v8;
    id v14 = *(id *)&v8[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v14 = v10;
  }
  uint64_t v11 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v12 = [v11 freehandDrawingToolkit];

  if (!v12)
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v13 = [v12 isRulerToolShowing];

  [v14 setRulerActive:v13];
}

ValueMetadata *type metadata accessor for CRLiOSPencilTray.LassoEditingViewClippingWorkaround()
{
  return &type metadata for CRLiOSPencilTray.LassoEditingViewClippingWorkaround;
}

uint64_t sub_100D4E7A8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100D4E7E0()
{
}

uint64_t sub_100D4E7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100D4E7F8()
{
  return swift_release();
}

Swift::Int sub_100D4E800(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100F69FCC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100D4E86C(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100D4E86C(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v83 = *(float *)(v81 + 4 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 4 * v84;
          if (v83 >= *(float *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(_DWORD *)(v85 + 4) = *(_DWORD *)v85;
          *(float *)(v81 + 4 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v97 = result;
  Swift::Int v98 = v3;
  if (v3 < 2)
  {
    id v8 = _swiftEmptyArrayStorage;
    __dst = (float *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v11 = _swiftEmptyArrayStorage;
LABEL_102:
      id v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          id v88 = v11;
          Class v89 = v11 + 4;
          double v90 = v11[2 * v87 + 4];
          double v91 = v11[2 * v12 + 3];
          sub_100D4EF00((float *)(v86 + 4 * *(void *)&v90), (float *)(v86 + 4 * *(void *)&v89[2 * v12 - 2]), v86 + 4 * *(void *)&v91, __dst);
          if (v1) {
            break;
          }
          if (*(uint64_t *)&v91 < *(uint64_t *)&v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v88 = sub_100F69F28((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          uint64_t v92 = &v88[2 * v87 + 4];
          double *v92 = v90;
          v92[1] = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[2 * v12 + 2], &v88[2 * v12 + 4], 16 * (v93 - v12));
          uint64_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      v96[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
    id v96 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    Swift::Int v3 = v98;
    id v96 = (double *)v7;
    __dst = (float *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *v2;
  id v94 = v2;
  uint64_t v95 = *v2 - 4;
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v99 = *v2;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      float v14 = *(float *)(v10 + 4 * v9);
      float v15 = *(float *)(v10 + 4 * v13);
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        float v16 = v14;
        while (1)
        {
          float v17 = v16;
          float v16 = *(float *)(v10 + 4 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          id v18 = (int *)(v95 + 4 * v9);
          Swift::Int v19 = v9;
          Swift::Int v20 = v13;
          uint64_t v21 = (int *)(v10 + 4 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              int v22 = *v21;
              *uint64_t v21 = *v18;
              *id v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    Swift::Int v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      Swift::Int v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (float *)(v95 + 4 * v9);
      do
      {
        float v25 = *(float *)(v10 + 4 * v9);
        Swift::Int v26 = v13;
        uint64_t v27 = v24;
        do
        {
          float v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *uint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      Swift::Int v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100F697E0(0, *((void *)v11 + 2) + 1, 1, (uint64_t)v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      uint64_t v79 = sub_100F697E0((double *)(v29 > 1), v30 + 1, 1, (uint64_t)v11);
      uint64_t v10 = v99;
      uint64_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v31 = v11 + 4;
    uint64_t v32 = &v11[2 * v30 + 4];
    *(void *)uint64_t v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v38 = &v31[2 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          id v46 = &v31[2 * v12 - 4];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            id v68 = &v31[2 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        id v51 = &v31[2 * v12 - 4];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v57 = &v31[2 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        uint64_t v64 = &v31[2 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        NSString v73 = &v31[2 * v72];
        uint64_t v74 = *(void *)v73;
        uint64_t v75 = v31;
        int v76 = &v31[2 * v33];
        double v77 = v76[1];
        sub_100D4EF00((float *)(v10 + 4 * *(void *)v73), (float *)(v10 + 4 * *(void *)v76), v10 + 4 * *(void *)&v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (*(uint64_t *)&v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)NSString v73 = v74;
        v75[2 * v72 + 1] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 2, 16 * (v78 - 1 - v33));
        uint64_t v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v98;
    if (v9 >= v98)
    {
      id v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100D4EF00(float *__src, float *a2, unint64_t a3, float *__dst)
{
  unsigned int v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 3;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 3;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 2;
  uint64_t v24 = __src;
  Swift::Int v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 4 * v13);
      }
      float v16 = &v4[v13];
      int v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        float v17 = (float *)(a3 - 4);
        while (1)
        {
          id v18 = v17 + 1;
          Swift::Int v19 = v6 - 1;
          float v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            int v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *float v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *float v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 4 * v10);
    }
    float v14 = &v4[v10];
    int v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          Swift::Int v23 = ++v4;
          float v15 = v6;
        }
        else
        {
          float v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_100F69A7C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100D4F170(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if ((*(void *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a1))
    {
      if (*(_DWORD *)(a4 + 36) == a2)
      {
        _HashTable.occupiedBucket(after:)();
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__CocoaDictionary.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __CocoaDictionary.Index.key.getter();
  sub_100D536E4(a1, a2, 1);
  sub_10050BF48(0, (unint64_t *)&qword_101684330);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_10095678C((uint64_t)v8);
  char v7 = v6;

  if (v7)
  {
    __CocoaDictionary.Index.dictionary.getter();
    __CocoaDictionary.index(after:)();
    sub_10056A4C4(a1, a2, 1);
    swift_unknownObjectRelease();
    return;
  }
LABEL_14:
  __break(1u);
}

void sub_100D4F310(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v5 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaDictionary.key(at:)();
      sub_10050BF48(0, (unint64_t *)&qword_101684330);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_19;
  }
  if (a3)
  {
LABEL_10:
    if (__CocoaDictionary.Index.age.getter() == *(_DWORD *)(a4 + 36))
    {
      __CocoaDictionary.Index.key.getter();
      sub_10050BF48(0, (unint64_t *)&qword_101684330);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v5 = sub_10095678C((uint64_t)v10);
      char v7 = v6;

      if (v7) {
        goto LABEL_12;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 64) >> a1) & 1) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  int64_t v8 = *(void **)(*(void *)(a4 + 48) + 8 * v5);

  id v9 = v8;
}

uint64_t sub_100D4F4E0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  id v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_100D4F590(unint64_t a1, id a2)
{
  id v3 = [a2 strokeWeightsToButtonImages];
  if (!v3)
  {
    return sub_100A397F4((uint64_t)_swiftEmptyArrayStorage);
  }
  unsigned int v4 = v3;
  unint64_t v85 = a1;
  sub_10050BF48(0, (unint64_t *)&qword_101684330);
  sub_10050BF48(0, &qword_1016747A0);
  sub_10062E0F4((unint64_t *)&unk_10169ABA0, (unint64_t *)&qword_101684330);
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = sub_100A397F4((uint64_t)_swiftEmptyArrayStorage);
  if (!v5) {
    return v6;
  }
  unint64_t v86 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = __CocoaDictionary.count.getter();
  }
  else
  {
    uint64_t v7 = *(void *)(v5 + 16);
    swift_bridgeObjectRetain();
  }
  id v9 = _swiftEmptyArrayStorage;
  if (!v7) {
    goto LABEL_26;
  }
  double v91 = _swiftEmptyArrayStorage;
  sub_1006BB644(0, v7 & ~(v7 >> 63), 0);
  if (v86)
  {
    uint64_t v10 = __CocoaDictionary.startIndex.getter();
    char v12 = 1;
  }
  else
  {
    uint64_t v10 = sub_100D4F4E0(v5);
    char v12 = v13 & 1;
  }
  uint64_t v88 = v10;
  uint64_t v89 = v11;
  char v90 = v12;
  if ((v7 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        uint64_t v21 = v88;
        uint64_t v20 = v89;
        char v22 = v90;
        sub_100D4F310(v88, v89, v90, v5);
        uint64_t v24 = v23;
        [v23 floatValue];
        int v26 = v25;

        uint64_t v27 = v91;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB644(0, *((void *)v27 + 2) + 1, 1);
          uint64_t v27 = v91;
        }
        unint64_t v29 = *((void *)v27 + 2);
        unint64_t v28 = *((void *)v27 + 3);
        if (v29 >= v28 >> 1)
        {
          sub_1006BB644(v28 > 1, v29 + 1, 1);
          uint64_t v27 = v91;
        }
        *((void *)v27 + 2) = v29 + 1;
        *((_DWORD *)v27 + v29 + 8) = v26;
        if (v86) {
          break;
        }
        sub_100D4F170(v21, v20, v22, v5);
        uint64_t v15 = v14;
        uint64_t v17 = v16;
        char v19 = v18;
        sub_10056A4C4(v21, v20, v22);
        uint64_t v88 = v15;
        uint64_t v89 = v17;
        char v90 = v19 & 1;
        if (!--v7) {
          goto LABEL_25;
        }
      }
      if ((v22 & 1) == 0) {
        goto LABEL_93;
      }
      if (__CocoaDictionary.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1005057FC((uint64_t *)&unk_10169ABC0);
      unint64_t v30 = (void (*)(uint64_t *, void))Dictionary.Index._asCocoa.modify();
      __CocoaDictionary.formIndex(after:isUnique:)();
      v30(v87, 0);
      --v7;
    }
    while (v7);
LABEL_25:
    sub_10056A4C4(v88, v89, v90);
    id v9 = v91;
LABEL_26:
    v87[0] = (uint64_t)v9;
    swift_bridgeObjectRetain();
    sub_100D4E800(v87);
    swift_bridgeObjectRelease();
    uint64_t v31 = v87[0];
    uint64_t v32 = *(char **)(v87[0] + 16);
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)_swiftEmptyArrayStorage;
    if (v32)
    {
      v87[0] = (uint64_t)_swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v34 = (int *)(v31 + 32);
      uint64_t v35 = v32;
      do
      {
        int v36 = *v34++;
        id v37 = objc_allocWithZone((Class)NSNumber);
        LODWORD(v38) = v36;
        [v37 initWithFloat:v38];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v35;
      }
      while (v35);
      uint64_t isUniquelyReferenced_nonNull_native = v87[0];
    }
    if (v85 >> 62) {
      goto LABEL_90;
    }
    uint64_t v39 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_32:
    sub_10060E550((uint64_t)v32, v39, (uint64_t)&_mh_execute_header, (uint64_t)"strokeWeightsWithPKButtonImages(_:toolConfig:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2u, 580);
    swift_release();
    if (v39 >= (uint64_t)v32) {
      uint64_t v40 = (uint64_t)v32;
    }
    else {
      uint64_t v40 = v39;
    }
    if ((v40 & 0x8000000000000000) == 0)
    {
      if (v40)
      {
        unint64_t v41 = 0;
        unint64_t v42 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
        uint64_t v84 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
        unint64_t v82 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
        uint64_t v83 = isUniquelyReferenced_nonNull_native;
        do
        {
          if (v40 == v41)
          {
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
LABEL_88:
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            swift_bridgeObjectRetain();
            uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            goto LABEL_32;
          }
          if (v42)
          {
            swift_bridgeObjectRetain();
            uint64_t v43 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v41 >= *(void *)(v84 + 16)) {
              goto LABEL_83;
            }
            BOOL v44 = *(void **)(isUniquelyReferenced_nonNull_native + 8 * v41 + 32);
            swift_bridgeObjectRetain();
            uint64_t v43 = v44;
          }
          uint64_t v32 = v43;
          if (v86)
          {
            uint64_t v45 = __CocoaDictionary.lookup(_:)();
            if (!v45) {
              goto LABEL_38;
            }
            uint64_t v88 = v45;
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v46 = (id)v87[0];
            swift_unknownObjectRelease();
          }
          else
          {
            if (!*(void *)(v5 + 16) || (unint64_t v47 = sub_10095678C((uint64_t)v43), (v48 & 1) == 0))
            {
LABEL_38:

              swift_bridgeObjectRelease();
              goto LABEL_39;
            }
            id v46 = *(id *)(*(void *)(v5 + 56) + 8 * v47);
          }

          swift_bridgeObjectRelease();
          if (v46)
          {
            if ((v85 & 0xC000000000000001) != 0)
            {
              id v81 = v46;
              id v51 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v41 >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_84;
              }
              uint64_t v49 = *(void **)(v85 + 8 * v41 + 32);
              id v50 = v46;
              id v51 = v49;
            }
            uint64_t v32 = v51;
            if ((v6 & 0xC000000000000001) != 0)
            {
              if (v6 < 0) {
                uint64_t v52 = v6;
              }
              else {
                uint64_t v52 = v6 & 0xFFFFFFFFFFFFFF8;
              }
              uint64_t v53 = __CocoaDictionary.count.getter();
              if (__OFADD__(v53, 1)) {
                goto LABEL_85;
              }
              uint64_t v6 = sub_1009EC514(v52, v53 + 1);
              v87[0] = v6;
              unint64_t v54 = sub_10095678C((uint64_t)v32);
              uint64_t v56 = *(void *)(v6 + 16);
              BOOL v57 = (v55 & 1) == 0;
              BOOL v58 = __OFADD__(v56, v57);
              uint64_t v59 = v56 + v57;
              if (v58) {
                goto LABEL_86;
              }
              char v60 = v55;
              if (*(void *)(v6 + 24) < v59)
              {
                sub_100961224(v59, 1);
                uint64_t v6 = v87[0];
                unint64_t v54 = sub_10095678C((uint64_t)v32);
                if ((v60 & 1) != (v61 & 1)) {
                  goto LABEL_94;
                }
              }
              if (v60)
              {
                uint64_t v62 = *(void *)(v6 + 56);
                uint64_t v63 = *(void **)(v62 + 8 * v54);
                *(void *)(v62 + 8 * v54) = v46;
              }
              else
              {
                *(void *)(v6 + 8 * (v54 >> 6) + 64) |= 1 << v54;
                uint64_t v72 = 8 * v54;
                *(void *)(*(void *)(v6 + 48) + v72) = v32;
                *(void *)(*(void *)(v6 + 56) + v72) = v46;
                uint64_t v73 = *(void *)(v6 + 16);
                BOOL v58 = __OFADD__(v73, 1);
                uint64_t v74 = v73 + 1;
                if (v58) {
                  goto LABEL_88;
                }
                *(void *)(v6 + 16) = v74;
                uint64_t v75 = v32;
                uint64_t v63 = 0;
              }
            }
            else
            {
              uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v87[0] = v6;
              unint64_t v65 = sub_10095678C((uint64_t)v32);
              uint64_t v66 = *(void *)(v6 + 16);
              BOOL v67 = (v64 & 1) == 0;
              uint64_t v68 = v66 + v67;
              if (__OFADD__(v66, v67)) {
                goto LABEL_87;
              }
              char v69 = v64;
              if (*(void *)(v6 + 24) >= v68)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  sub_10097D2B4();
                }
              }
              else
              {
                sub_100961224(v68, isUniquelyReferenced_nonNull_native);
                unint64_t v70 = sub_10095678C((uint64_t)v32);
                if ((v69 & 1) != (v71 & 1)) {
                  goto LABEL_94;
                }
                unint64_t v65 = v70;
              }
              uint64_t v6 = v87[0];
              if (v69)
              {
                uint64_t v76 = *(void *)(v87[0] + 56);
                double v77 = *(void **)(v76 + 8 * v65);
                *(void *)(v76 + 8 * v65) = v46;
              }
              else
              {
                *(void *)(v87[0] + 8 * (v65 >> 6) + 64) |= 1 << v65;
                *(void *)(*(void *)(v6 + 48) + 8 * v65) = v32;
                *(void *)(*(void *)(v6 + 56) + 8 * v65) = v46;
                uint64_t v78 = *(void *)(v6 + 16);
                BOOL v58 = __OFADD__(v78, 1);
                uint64_t v79 = v78 + 1;
                if (v58) {
                  goto LABEL_89;
                }
                *(void *)(v6 + 16) = v79;
                uint64_t v80 = v32;
                double v77 = 0;
              }

              swift_bridgeObjectRelease();
              unint64_t v42 = v82;
              uint64_t isUniquelyReferenced_nonNull_native = v83;
            }
          }
LABEL_39:
          ++v41;
        }
        while (v40 != v41);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return v6;
    }
    __break(1u);
  }
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  unint64_t result = swift_release();
  __break(1u);
  return result;
}

id sub_100D4FE2C()
{
  id v0 = [objc_allocWithZone((Class)UIBezierPath) init];
  [v0 moveToPoint:7.0, 129.5];
  [v0 addLineToPoint:7.0, 20.0];
  [v0 addLineToPoint:14.5, 14.0];
  [v0 addLineToPoint:14.5, 7.0];
  [v0 addLineToPoint:11.5, 7.0];
  [v0 addLineToPoint:11.5, 0.0];
  [v0 addLineToPoint:34.5, 0.0];
  [v0 addLineToPoint:34.5, 7.0];
  [v0 addLineToPoint:31.5, 7.0];
  [v0 addLineToPoint:31.5, 14.0];
  [v0 addLineToPoint:39.0, 20.0];
  [v0 addLineToPoint:39.0, 129.5];
  [v0 closePath];
  return v0;
}

uint64_t sub_100D4FFA4(void *a1, void *a2)
{
  v315 = a2;
  id v320 = a1;
  uint64_t v2 = type metadata accessor for PKEraserTool.EraserType();
  uint64_t v309 = *(void *)(v2 - 8);
  uint64_t v310 = v2;
  __chkstk_darwin(v2, v3);
  id v316 = (char *)&v304 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PKEraserTool();
  uint64_t v6 = *(void (***)(uint64_t *, char *, void *))(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v308 = (char *)&v304 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (void *)type metadata accessor for PKCustomTool();
  uint64_t v10 = (char **)*(v9 - 1);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v304 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v312 = (char *)&v304 - v17;
  uint64_t v19 = __chkstk_darwin(v16, v18);
  id v311 = (char *)&v304 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  v314 = (char *)&v304 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v313 = (char *)&v304 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  v319 = (char *)&v304 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  Class v318 = (char *)&v304 - v32;
  __chkstk_darwin(v31, v33);
  uint64_t v317 = (char *)&v304 - v34;
  uint64_t v336 = sub_1005057FC(&qword_10169AB88);
  __chkstk_darwin(v336, v35);
  uint64_t v332 = (char *)&v304 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1005057FC((uint64_t *)&unk_10169AB90);
  uint64_t v39 = __chkstk_darwin(v37 - 8, v38);
  uint64_t v327 = (uint64_t)&v304 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v39, v41);
  uint64_t v330 = (uint64_t)&v304 - v43;
  __chkstk_darwin(v42, v44);
  uint64_t v340 = (char **)((char *)&v304 - v45);
  uint64_t v46 = type metadata accessor for PKLassoTool();
  v338 = *(char **)(v46 - 8);
  uint64_t v48 = __chkstk_darwin(v46, v47);
  v324 = (char *)&v304 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v48, v50);
  uint64_t v53 = (char *)&v304 - v52;
  __chkstk_darwin(v51, v54);
  unint64_t v337 = (char *)&v304 - v55;
  id v56 = [objc_allocWithZone((Class)PKToolPicker) init];
  [v56 setStateAutosaveName:0];
  [v56 setColorUserInterfaceStyle:1];
  [v56 setShowsDrawingPolicyControls:1];
  BOOL v57 = (void *)PKToolPicker._tools.getter();
  BOOL v58 = (char **)v57[2];
  if (v58)
  {
    uint64_t v305 = v6;
    uint64_t v306 = (void *)v5;
    uint64_t v307 = v14;
    v325 = v10;
    id v321 = v57;
    uint64_t v322 = v9;
    v331 = (double *)v56;
    uint64_t v59 = (uint64_t)(v57 + 4);
    swift_bridgeObjectRetain();
    uint64_t v60 = v59;
    char v61 = v58;
    uint64_t v62 = (uint64_t)v332;
    do
    {
      sub_1005498A4(v60, (uint64_t)&v341);
      sub_1005498A4((uint64_t)&v341, (uint64_t)v346);
      uint64_t v63 = (void *)sub_1005057FC((uint64_t *)&unk_10169AB50);
      if (swift_dynamicCast()) {
        goto LABEL_6;
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
      v60 += 40;
      char v61 = (char **)((char *)v61 - 1);
    }
    while (v61);
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_6:
    char v64 = v338;
    v328 = (const char *)*((void *)v338 + 1);
    v329 = v338 + 8;
    ((void (*)(char *, uint64_t))v328)(v53, v46);
    swift_bridgeObjectRelease();
    sub_10053974C(&v341, (uint64_t)v346);
    sub_10053974C(v346, (uint64_t)&v341);
    unint64_t v65 = v337;
    swift_dynamicCast();
    uint64_t v343 = (void *)v46;
    unint64_t v344 = (id (*)())&protocol witness table for PKLassoTool;
    uint64_t v66 = sub_1005767BC((uint64_t *)&v341);
    BOOL v67 = (void (*)(uint64_t, char *, uint64_t))*((void *)v64 + 2);
    v64 += 16;
    uint64_t v335 = v67;
    v67((uint64_t)v66, v65, v46);
    PKToolPicker.selectedTool.setter();
    id v333 = v63;
    v334 = v64 + 40;
    uint64_t v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 32);
    v338 = v64;
    v323 = v64 + 16;
    uint64_t v69 = v330;
    while (1)
    {
      v339 = v58;
      sub_1005498A4(v59, (uint64_t)&v341);
      sub_1005498A4((uint64_t)&v341, (uint64_t)v346);
      uint64_t v71 = (uint64_t)v340;
      int v72 = swift_dynamicCast();
      uint64_t v73 = v68;
      uint64_t v74 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v334;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v334)(v71, v72 ^ 1u, 1, v46);
      v335(v69, v337, v46);
      v74(v69, 0, 1, v46);
      uint64_t v75 = v62 + *(int *)(v336 + 48);
      sub_100522E9C(v71, v62, (uint64_t *)&unk_10169AB90);
      sub_100522E9C(v69, v75, (uint64_t *)&unk_10169AB90);
      uint64_t v76 = v62;
      double v77 = *v68;
      if ((*v68)(v76, 1, v46) != 1) {
        break;
      }
      sub_100522F00(v69, (uint64_t *)&unk_10169AB90);
      if (v77(v75, 1, v46) != 1) {
        goto LABEL_14;
      }
      uint64_t v62 = (uint64_t)v332;
      sub_100522F00((uint64_t)v332, (uint64_t *)&unk_10169AB90);
      sub_100522F00((uint64_t)v340, (uint64_t *)&unk_10169AB90);
      unint64_t v70 = v339;
LABEL_8:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
      v59 += 40;
      BOOL v58 = (char **)((char *)v70 - 1);
      if (!v58)
      {
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v328)(v337, v46);
        id v85 = [v320 toolkitUIState];
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v86 = (char *)String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unint64_t v87 = self;
        v338 = v86;
        id v88 = [v87 defaultConfigurationForToolWithIdentifier:v86];
        id v89 = [v85 strokeWidthsForFreehandDrawingToolType:4];
        uint64_t v90 = sub_10050BF48(0, (unint64_t *)&qword_101684330);
        unint64_t v91 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100D4F590(v91, v88);
        swift_bridgeObjectRelease();
        uint64_t v92 = sub_10050BF48(0, &qword_1016747A0);
        uint64_t v93 = sub_10062E0F4((unint64_t *)&unk_10169ABA0, (unint64_t *)&qword_101684330);
        uint64_t v336 = v92;
        unint64_t v337 = (char *)v90;
        uint64_t v335 = (void (*)(uint64_t, char *, uint64_t))v93;
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v88 setStrokeWeightsToButtonImages:isa];

        [v85 opacityForToolType:4];
        double v96 = v95;
        id v97 = [v85 colorForToolType:4];
        id v98 = [v97 colorWithAlphaComponent:v96];

        id v99 = [v98 UIColor];
        [v85 strokeWidthForToolType:4];
        id v100 = v88;
        id v101 = v99;
        v329 = "com.apple.freeform.marker";
        uint64_t v102 = v317;
        PKCustomTool.init(customIdentifier:configuration:color:weight:)();
        uint64_t v103 = v322;
        uint64_t v343 = v322;
        unint64_t v344 = (id (*)())&protocol witness table for PKCustomTool;
        uint64_t v104 = sub_1005767BC((uint64_t *)&v341);
        uint64_t v105 = v325;
        v339 = (char **)v325[2];
        uint64_t v340 = v325 + 2;
        ((void (*)(uint64_t *, char *, void *))v339)(v104, v102, v103);
        PKToolPicker._insertTool(_:atIndex:)();

        uint64_t v106 = v105[1];
        v325 = v105 + 1;
        v338 = v106;
        ((void (*)(char *, void *))v106)(v102, v103);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v107 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v333 = v107;
        id v108 = [v87 defaultConfigurationForToolWithIdentifier:v107];
        v334 = v87;
        id v109 = v108;
        id v110 = [v85 strokeWidthsForFreehandDrawingToolType:5];
        unint64_t v111 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100D4F590(v111, v109);
        swift_bridgeObjectRelease();
        Class v112 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v109 setStrokeWeightsToButtonImages:v112];

        [v85 opacityForToolType:5];
        double v114 = v113;
        id v115 = [v85 colorForToolType:5];
        id v116 = [v115 colorWithAlphaComponent:v114];

        id v117 = [v116 UIColor];
        [v85 strokeWidthForToolType:5];
        id v118 = v109;
        id v119 = v117;
        v328 = "com.apple.freeform.watercolor";
        uint64_t v120 = v318;
        PKCustomTool.init(customIdentifier:configuration:color:weight:)();
        uint64_t v343 = v103;
        unint64_t v344 = (id (*)())&protocol witness table for PKCustomTool;
        uint64_t v121 = sub_1005767BC((uint64_t *)&v341);
        ((void (*)(uint64_t *, char *, void *))v339)(v121, v120, v103);
        PKToolPicker._insertTool(_:atIndex:)();

        ((void (*)(char *, void *))v338)(v120, v103);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v122 = (char *)String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v332 = v122;
        id v123 = [v334 defaultConfigurationForToolWithIdentifier:v122];
        id v124 = [v85 strokeWidthsForFreehandDrawingToolType:3];
        unint64_t v125 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100D4F590(v125, v123);
        swift_bridgeObjectRelease();
        Class v126 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v123 setStrokeWeightsToButtonImages:v126];

        [v85 opacityForToolType:3];
        double v128 = v127;
        id v129 = [v85 colorForToolType:3];
        id v130 = [v129 colorWithAlphaComponent:v128];

        id v131 = [v130 UIColor];
        id v333 = v85;
        [v85 strokeWidthForToolType:3];
        id v132 = v123;
        id v133 = v131;
        uint64_t v134 = v319;
        PKCustomTool.init(customIdentifier:configuration:color:weight:)();
        uint64_t v330 = 0;
        uint64_t v343 = v103;
        unint64_t v344 = (id (*)())&protocol witness table for PKCustomTool;
        uint64_t v135 = sub_1005767BC((uint64_t *)&v341);
        ((void (*)(uint64_t *, const char *, void *))v339)(v135, v134, v103);
        PKToolPicker._insertTool(_:atIndex:)();

        ((void (*)(const char *, void *))v338)(v134, v103);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
        id v136 = [self mainBundle];
        NSString v137 = String._bridgeToObjectiveC()();
        NSString v138 = String._bridgeToObjectiveC()();
        id v139 = [v136 localizedStringForKey:v137 value:v138 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v140 = String._bridgeToObjectiveC()();
        id v9 = self;
        BOOL v58 = &selRef_i_join;
        id v141 = [v9 imageNamed:v140];

        if (v141)
        {
          uint64_t v327 = (uint64_t)"com.apple.freeform.pencil";
          uint64_t v6 = (void (**)(uint64_t *, char *, void *))v141;
          id v142 = sub_100D4FE2C();
          id v143 = objc_allocWithZone((Class)PKToolConfiguration);
          NSString v144 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v56 = [v143 initWithLocalizedName:v144 baseImage:v6 shadowPath:v142];

          uint64_t v10 = &selRef_PNGRepresentation;
          if (qword_101670188 == -1) {
            goto LABEL_20;
          }
          goto LABEL_50;
        }
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
    }
    uint64_t v78 = v327;
    sub_100522E9C(v76, v327, (uint64_t *)&unk_10169AB90);
    if (v77(v75, 1, v46) == 1)
    {
      uint64_t v79 = v330;
      sub_100522F00(v330, (uint64_t *)&unk_10169AB90);
      uint64_t v80 = v78;
      uint64_t v69 = v79;
      ((void (*)(uint64_t, uint64_t))v328)(v80, v46);
LABEL_14:
      uint64_t v62 = (uint64_t)v332;
      sub_100522F00((uint64_t)v332, &qword_10169AB88);
      sub_100522F00((uint64_t)v340, (uint64_t *)&unk_10169AB90);
      unint64_t v70 = v339;
    }
    else
    {
      id v81 = v324;
      (*(void (**)(const char *, uint64_t, uint64_t))v323)(v324, v75, v46);
      sub_100D53664(&qword_10169ABB8, (void (*)(uint64_t))&type metadata accessor for PKLassoTool);
      LODWORD(v326) = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v82 = v328;
      ((void (*)(const char *, uint64_t))v328)(v81, v46);
      uint64_t v83 = v330;
      sub_100522F00(v330, (uint64_t *)&unk_10169AB90);
      uint64_t v84 = v78;
      uint64_t v69 = v83;
      ((void (*)(uint64_t, uint64_t))v82)(v84, v46);
      uint64_t v68 = v73;
      sub_100522F00(v76, (uint64_t *)&unk_10169AB90);
      sub_100522F00((uint64_t)v340, (uint64_t *)&unk_10169AB90);
      uint64_t v62 = v76;
      unint64_t v70 = v339;
      if (v326) {
        goto LABEL_8;
      }
    }
    PKToolPicker._removeTool(_:)();
    goto LABEL_8;
  }
  __break(1u);
LABEL_50:
  swift_once();
LABEL_20:
  id v145 = [(id)static CRLColor.pencilTrayYellow v10[1]];
  [v56 setSupportsColor:1 andOpacity:1 defaultColor:v145];

  [v56 setOpacityLabelVerticalOffset:63.0];
  NSString v146 = String._bridgeToObjectiveC()();
  id v147 = [v9 v58[159] v146];

  if (!v147) {
    goto LABEL_54;
  }
  [v56 setBandMaskImage:v147];

  NSString v148 = String._bridgeToObjectiveC()();
  id v149 = [v9 v58[159] v148];

  if (!v149)
  {
LABEL_55:
    __break(1u);
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v295 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_10168D3C0);
    *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_10169ABB0, (unint64_t *)&qword_10168D3C0);
    *(void *)(inited + 32) = v295;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 264, (uint64_t)"Unable to initialize custom watercolor tool for tray: %@", 56, 2u, inited);
    sub_100586FD4(inited, (uint64_t)"Unable to initialize custom watercolor tool for tray: %@");
    uint64_t v296 = inited;
    uint64_t v297 = 264;
LABEL_58:
    sub_1005871AC(v296, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, v297);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v302, v303);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  [v56 setBandContourImage:v149];

  [v56 setBandVerticalOffset:28.0];
  id v150 = v333;
  [v333 opacityForToolType:7];
  double v152 = v151;
  id v153 = [v150 colorForToolType:7];
  id v154 = [v153 colorWithAlphaComponent:v152];

  id v155 = [v154 UIColor];
  id v156 = v56;
  id v157 = v155;
  v324 = "com.apple.freeform.fountainpen";
  uint64_t v158 = v313;
  unint64_t v326 = 0xD000000000000017;
  uint64_t v159 = v330;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)();
  uint64_t v160 = v331;
  uint64_t v161 = v322;
  if (v159)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v298 = swift_initStackObject();
    *(_OWORD *)(v298 + 16) = xmmword_10117E810;
    uint64_t v299 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    *(void *)(v298 + 56) = sub_10050BF48(0, (unint64_t *)&qword_10168D3C0);
    *(void *)(v298 + 64) = sub_10062E0F4((unint64_t *)&qword_10169ABB0, (unint64_t *)&qword_10168D3C0);
    *(void *)(v298 + 32) = v299;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 329, (uint64_t)"Unable to initialize custom fill tool for tray: %@", 50, 2u, v298);
    sub_100586FD4(v298, (uint64_t)"Unable to initialize custom fill tool for tray: %@");
    uint64_t v296 = v298;
    uint64_t v297 = 329;
    goto LABEL_58;
  }
  uint64_t v343 = v322;
  unint64_t v344 = (id (*)())&protocol witness table for PKCustomTool;
  uint64_t v162 = sub_1005767BC((uint64_t *)&v341);
  ((void (*)(uint64_t *, char *, void *))v339)(v162, v158, v161);
  PKToolPicker._insertTool(_:atIndex:)();

  ((void (*)(char *, void *))v338)(v158, v161);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v163 = (char *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v332 = v163;
  id v164 = [v334 defaultConfigurationForToolWithIdentifier:v163];
  id v165 = [v150 strokeWidthsForFreehandDrawingToolType:2];
  unint64_t v166 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100D4F590(v166, v164);
  swift_bridgeObjectRelease();
  Class v167 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v164 setStrokeWeightsToButtonImages:v167];

  [v150 opacityForToolType:2];
  double v169 = v168;
  id v170 = [v150 colorForToolType:2];
  id v171 = [v170 colorWithAlphaComponent:v169];

  uint64_t v172 = v161;
  id v173 = [v171 UIColor];

  [v150 strokeWidthForToolType:2];
  id v174 = v164;
  id v175 = v173;
  uint64_t v330 = (uint64_t)"com.apple.freeform.pen";
  id v176 = v314;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)();
  v323 = 0;
  uint64_t v343 = v172;
  unint64_t v344 = (id (*)())&protocol witness table for PKCustomTool;
  unint64_t v177 = sub_1005767BC((uint64_t *)&v341);
  ((void (*)(uint64_t *, char *, void *))v339)(v177, v176, v172);
  PKToolPicker._insertTool(_:atIndex:)();

  ((void (*)(char *, void *))v338)(v176, v172);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v178 = (char *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v179 = [v334 defaultConfigurationForToolWithIdentifier:v178];
  unint64_t v180 = 0xD000000000000019;
  BOOL v181 = v315;
  uint64_t v182 = v316;
  if (v315)
  {
    uint64_t v183 = swift_allocObject();
    *(void *)(v183 + 16) = v181;
    unint64_t v344 = sub_100D536DC;
    uint64_t v345 = v183;
    *(void *)&long long v341 = _NSConcreteStackBlock;
    *((void *)&v341 + 1) = *(void *)"";
    uint64_t v342 = sub_100598AC4;
    uint64_t v343 = &unk_10152B5F0;
    uint64_t v184 = _Block_copy(&v341);
    id v185 = v181;
    uint64_t v186 = v182;
    id v187 = v185;
    swift_release();
    [v179 setViewControllerProvider:v184];
    _Block_release(v184);

    uint64_t v182 = v186;
  }
  int64_t v188 = self;
  uint64_t v332 = "FromTray(sender:)";
  NSString v189 = String._bridgeToObjectiveC()();
  [(id)v188 insertCustomizedLassoToolWithToolIdentifier:v189 withToolConfiguration:v179 inToolPicker:v160 forcingIndexZero:1];

  id v190 = v333;
  int64_t v191 = (int64_t)[v333 eraserToolErasesWholeObjects];
  if ((unint64_t)[v190 strokeWidthIndexForToolType:8] > 4)
  {
    __break(1u);
    goto LABEL_52;
  }
  id v320 = (id)0xD000000000000018;
  id v321 = (id)v188;
  uint64_t v193 = v310;
  uint64_t v194 = *(void (**)(char *, void, uint64_t))(v309 + 104);
  v194(v182, enum case for PKEraserTool.EraserType.fixedWidthBitmap(_:), v310);
  uint64_t v195 = v308;
  PKEraserTool.init(_:width:)();
  uint64_t v196 = v306;
  uint64_t v343 = v306;
  unint64_t v344 = (id (*)())&protocol witness table for PKEraserTool;
  uint64_t v197 = sub_1005767BC((uint64_t *)&v341);
  uint64_t v198 = v182;
  uint64_t v199 = v305;
  v305[2](v197, v195, v196);
  PKToolPicker._insertTool(_:atIndex:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
  if (v191)
  {
    v194(v198, enum case for PKEraserTool.EraserType.vector(_:), v193);
    uint64_t v343 = v196;
    unint64_t v344 = (id (*)())&protocol witness table for PKEraserTool;
    sub_1005767BC((uint64_t *)&v341);
    PKEraserTool.init(_:)();
    PKToolPicker.selectedTool.setter();
  }
  ((void (*)(char *, void *))v199[1])(v195, v196);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v200 = (char *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v318 = v200;
  id v201 = [v334 defaultConfigurationForToolWithIdentifier:v200];
  id v202 = v333;
  id v203 = [v333 strokeWidthsForFreehandDrawingToolType:6];
  unint64_t v204 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100D4F590(v204, v201);
  swift_bridgeObjectRelease();
  Class v205 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v201 setStrokeWeightsToButtonImages:v205];

  [v202 opacityForToolType:6];
  double v207 = v206;
  id v208 = [v202 colorForToolType:6];
  id v209 = [v208 colorWithAlphaComponent:v207];

  id v210 = [v209 UIColor];
  [v202 strokeWidthForToolType:6];
  id v211 = v201;
  id v212 = v210;
  v319 = "com.apple.freeform.crayon";
  char v213 = v311;
  uint64_t v214 = v323;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)();
  if (v214)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v300 = swift_allocObject();
    *(_OWORD *)(v300 + 16) = xmmword_10117E810;
    uint64_t v301 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    *(void *)(v300 + 56) = sub_10050BF48(0, (unint64_t *)&qword_10168D3C0);
    *(void *)(v300 + 64) = sub_10062E0F4((unint64_t *)&qword_10169ABB0, (unint64_t *)&qword_10168D3C0);
    *(void *)(v300 + 32) = v301;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeToolPickerAndTools(toolkit:lassoSegmentedViewController:)", 61, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 397, (uint64_t)"Unable to initialize custom marker tool for tray: %@", 52, 2u, v300);
    sub_100586FD4(v300, (uint64_t)"Unable to initialize custom marker tool for tray: %@");
    uint64_t v296 = v300;
    uint64_t v297 = 397;
    goto LABEL_58;
  }
  unint64_t v215 = v322;
  uint64_t v343 = v322;
  unint64_t v344 = (id (*)())&protocol witness table for PKCustomTool;
  char v216 = sub_1005767BC((uint64_t *)&v341);
  ((void (*)(uint64_t *, char *, void *))v339)(v216, v213, v215);
  PKToolPicker._insertTool(_:atIndex:)();

  ((void (*)(char *, void *))v338)(v213, v215);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v217 = (char *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v318 = v217;
  id v218 = [v334 defaultConfigurationForToolWithIdentifier:v217];
  id v219 = [v202 strokeWidthsForFreehandDrawingToolType:0];
  unint64_t v220 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100D4F590(v220, v218);
  swift_bridgeObjectRelease();
  Class v221 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v218 setStrokeWeightsToButtonImages:v221];

  [v202 opacityForToolType:0];
  double v223 = v222;
  id v224 = [v202 colorForToolType:0];
  id v225 = [v224 colorWithAlphaComponent:v223];

  id v226 = [v225 UIColor];
  [v202 strokeWidthForToolType:0];
  id v227 = v218;
  id v228 = v226;
  v323 = " fixed width bitmap erase";
  uint64_t v229 = v312;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)();
  uint64_t v343 = v215;
  unint64_t v344 = (id (*)())&protocol witness table for PKCustomTool;
  id v230 = sub_1005767BC((uint64_t *)&v341);
  ((void (*)(uint64_t *, char *, void *))v339)(v230, v229, v215);
  PKToolPicker._insertTool(_:atIndex:)();

  ((void (*)(char *, void *))v338)(v229, v215);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v231 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v232 = v334;
  v334 = v231;
  id v233 = [v232 defaultConfigurationForToolWithIdentifier:v231];
  id v234 = [v202 strokeWidthsForFreehandDrawingToolType:1];
  unint64_t v235 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100D4F590(v235, v233);
  swift_bridgeObjectRelease();
  Class v236 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v233 setStrokeWeightsToButtonImages:v236];

  [v202 opacityForToolType:1];
  double v238 = v237;
  id v239 = [v202 colorForToolType:1];
  id v240 = [v239 colorWithAlphaComponent:v238];

  id v241 = [v240 UIColor];
  [v202 strokeWidthForToolType:1];
  id v242 = v233;
  uint64_t v243 = v215;
  id v244 = v241;
  uint64_t v178 = "com.apple.freeform.monoline";
  id v245 = v307;
  unint64_t v337 = (char *)0xD000000000000016;
  PKCustomTool.init(customIdentifier:configuration:color:weight:)();
  uint64_t v343 = v243;
  unint64_t v344 = (id (*)())&protocol witness table for PKCustomTool;
  long long v246 = sub_1005767BC((uint64_t *)&v341);
  ((void (*)(uint64_t *, char *, void *))v339)(v246, v245, v243);
  PKToolPicker._insertTool(_:atIndex:)();

  ((void (*)(char *, void *))v338)(v245, v243);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v341);
  uint64_t v160 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
  int64_t v191 = *((void *)v160 + 2);
  unint64_t v192 = *((void *)v160 + 3);
  int64_t v247 = v192 >> 1;
  int64_t v188 = v191 + 1;
  unint64_t v180 = (unint64_t)v320;
  if (v192 >> 1 <= v191)
  {
LABEL_52:
    uint64_t v160 = sub_100F61B70((double *)(v192 > 1), v188, 1, v160);
    unint64_t v192 = *((void *)v160 + 3);
    int64_t v247 = v192 >> 1;
  }
  uint64_t v248 = v328;
  unint64_t v249 = v319;
  int64_t v250 = v323;
  *((void *)v160 + 2) = v188;
  unint64_t v251 = &v160[2 * v191];
  *((void *)v251 + 4) = v337;
  *((void *)v251 + 5) = (unint64_t)v178 | 0x8000000000000000;
  int64_t v252 = v191 + 2;
  uint64_t v253 = v331;
  if (v247 < v252) {
    uint64_t v160 = sub_100F61B70((double *)(v192 > 1), v252, 1, v160);
  }
  *((void *)v160 + 2) = v252;
  unint64_t v254 = &v160[2 * v188];
  v254[4] = -2.31584178e77;
  *((void *)v254 + 5) = (unint64_t)v250 | 0x8000000000000000;
  unint64_t v256 = *((void *)v160 + 2);
  unint64_t v255 = *((void *)v160 + 3);
  if (v256 >= v255 >> 1) {
    uint64_t v160 = sub_100F61B70((double *)(v255 > 1), v256 + 1, 1, v160);
  }
  *((void *)v160 + 2) = v256 + 1;
  uint64_t v257 = &v160[2 * v256];
  v257[4] = -2.31584178e77;
  *((void *)v257 + 5) = (unint64_t)v249 | 0x8000000000000000;
  uint64_t v258 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v260 = v259;
  unint64_t v262 = *((void *)v160 + 2);
  unint64_t v261 = *((void *)v160 + 3);
  int64_t v263 = v261 >> 1;
  unint64_t v264 = v262 + 1;
  if (v261 >> 1 <= v262)
  {
    uint64_t v160 = sub_100F61B70((double *)(v261 > 1), v262 + 1, 1, v160);
    unint64_t v261 = *((void *)v160 + 3);
    int64_t v263 = v261 >> 1;
  }
  *((void *)v160 + 2) = v264;
  uint64_t v265 = &v160[2 * v262];
  *((void *)v265 + 4) = v258;
  *((void *)v265 + 5) = v260;
  unint64_t v266 = v262 + 2;
  if (v263 < (uint64_t)(v262 + 2)) {
    uint64_t v160 = sub_100F61B70((double *)(v261 > 1), v262 + 2, 1, v160);
  }
  Swift::String v267 = v332;
  id v268 = v333;
  uint64_t v269 = v329;
  *((void *)v160 + 2) = v266;
  int64_t v270 = &v160[2 * v264];
  *((void *)v270 + 4) = v180;
  *((void *)v270 + 5) = (unint64_t)v267 | 0x8000000000000000;
  unint64_t v272 = *((void *)v160 + 2);
  unint64_t v271 = *((void *)v160 + 3);
  int64_t v273 = v271 >> 1;
  unint64_t v274 = v272 + 1;
  if (v271 >> 1 <= v272)
  {
    uint64_t v160 = sub_100F61B70((double *)(v271 > 1), v272 + 1, 1, v160);
    unint64_t v271 = *((void *)v160 + 3);
    int64_t v273 = v271 >> 1;
  }
  *((void *)v160 + 2) = v274;
  unint64_t v275 = &v160[2 * v272];
  unint64_t v276 = v330 | 0x8000000000000000;
  v275[4] = -2.31584178e77;
  *((void *)v275 + 5) = v276;
  int64_t v277 = v272 + 2;
  if (v273 < v277) {
    uint64_t v160 = sub_100F61B70((double *)(v271 > 1), v277, 1, v160);
  }
  *((void *)v160 + 2) = v277;
  uint64_t v278 = &v160[2 * v274];
  unint64_t v279 = (unint64_t)v324 | 0x8000000000000000;
  *((void *)v278 + 4) = v326;
  *((void *)v278 + 5) = v279;
  unint64_t v281 = *((void *)v160 + 2);
  unint64_t v280 = *((void *)v160 + 3);
  int64_t v282 = v280 >> 1;
  unint64_t v283 = v281 + 1;
  if (v280 >> 1 <= v281)
  {
    uint64_t v160 = sub_100F61B70((double *)(v280 > 1), v281 + 1, 1, v160);
    unint64_t v280 = *((void *)v160 + 3);
    int64_t v282 = v280 >> 1;
  }
  *((void *)v160 + 2) = v283;
  uint64_t v284 = &v160[2 * v281];
  unint64_t v285 = v327 | 0x8000000000000000;
  v284[4] = -2.31584178e77;
  *((void *)v284 + 5) = v285;
  int64_t v286 = v281 + 2;
  if (v282 < v286) {
    uint64_t v160 = sub_100F61B70((double *)(v280 > 1), v286, 1, v160);
  }
  *((void *)v160 + 2) = v286;
  uint64_t v287 = &v160[2 * v283];
  v287[4] = -2.31584178e77;
  *((void *)v287 + 5) = (unint64_t)v248 | 0x8000000000000000;
  unint64_t v289 = *((void *)v160 + 2);
  unint64_t v288 = *((void *)v160 + 3);
  if (v289 >= v288 >> 1) {
    uint64_t v160 = sub_100F61B70((double *)(v288 > 1), v289 + 1, 1, v160);
  }
  *((void *)v160 + 2) = v289 + 1;
  uint64_t v290 = &v160[2 * v289];
  v290[4] = -2.31584178e77;
  *((void *)v290 + 5) = (unint64_t)v269 | 0x8000000000000000;
  Class v291 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v292 = String._bridgeToObjectiveC()();
  [v321 resetTools:v291 forSelectedTool:v292 inToolPicker:v253];

  [v253 _setShowsHandwritingTool:1];
  [v253 _setShowsRuler:1];
  [v253 _setNumberOfToolsAfterRuler:5];

  return (uint64_t)v253;
}

void sub_100D52BFC(void *a1, double a2)
{
  double v2 = fmin(vabdd_f64(16.4, a2), INFINITY);
  double v3 = vabdd_f64(32.4, a2);
  uint64_t v4 = v3 < v2;
  if (v3 < v2) {
    double v2 = v3;
  }
  double v5 = vabdd_f64(48.4, a2);
  if (v5 < v2)
  {
    double v2 = v5;
    uint64_t v4 = 2;
  }
  double v6 = vabdd_f64(64.4, a2);
  if (v6 < v2)
  {
    uint64_t v4 = 3;
    double v2 = v6;
  }
  if (vabdd_f64(80.4, a2) >= v2) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = 4;
  }
  id v8 = [a1 strokeWidthsForFreehandDrawingToolType:8];
  sub_10050BF48(0, (unint64_t *)&qword_101684330);
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_13;
  }
  if (v7 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v9 + 8 * v7 + 32);
LABEL_13:
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    [v11 crl_CGFloatValue];

    return;
  }
  __break(1u);
}

void sub_100D52D3C()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong canvasEditor];

  if (v1)
  {
    [v1 sendBackward:0];
    sub_100D4C960();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"sendBackward(sender:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1289, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"sendBackward(sender:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1289);
  }
}

void sub_100D52E70()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong canvasEditor];

  if (v1)
  {
    [v1 sendToBack:0];
    sub_100D4C960();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"sendToBack(sender:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1298, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"sendToBack(sender:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1298);
  }
}

void sub_100D52FA4()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong canvasEditor];

  if (v1)
  {
    [v1 bringForward:0];
    sub_100D4C960();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"bringForward(sender:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1307, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"bringForward(sender:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1307);
  }
}

void sub_100D530D8()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong canvasEditor];

  if (v1)
  {
    [v1 bringToFront:0];
    sub_100D4C960();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"bringToFront(sender:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1316, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"bringToFront(sender:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1316);
  }
}

void sub_100D5320C(unsigned __int8 a1)
{
  if (v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isInstalled] != 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1441, (uint64_t)"Should not try to adjust visibility of a pencil tray which is not installed.", 76, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v6 = 1441;
LABEL_11:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, v6);
    return;
  }
  if ([v1 hidden] == (a1 & 1)) {
    return;
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v4 = [Strong layerHost];

  if (!v4)
  {
LABEL_10:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1454, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v6 = 1454;
    goto LABEL_11;
  }
  if (([v4 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  id v16 = [v4 asiOSCVC];
  swift_unknownObjectRelease();
  double v5 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v17 = [v5 textInputResponder];

  if (v17)
  {
    v1[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isHidden] = a1 & 1;
    if (a1)
    {
      sub_100D49A94();
    }
    else
    {
      sub_100D441F8();
      sub_100D490FC();
      sub_100D496DC();
      [v16 becomeFirstResponderIfAppropriate];
    }
    id v8 = (char *)sub_100D43BC0();
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = *(id *)&v8[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v10 = v11;
    }
    [v10 setVisible:(a1 ^ 1) & 1 forFirstResponder:v16];

    uint64_t v12 = (char *)sub_100D43BC0();
    if (v12)
    {
      uint64_t v13 = v12;
      id v14 = *(id *)&v12[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v14 = v15;
    }
    [v14 setVisible:(a1 ^ 1) & 1 forFirstResponder:v17];

    if ((a1 & 1) == 0) {
      sub_100D488A8();
    }

    unint64_t v7 = v17;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1459, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setToolTrayHidden(_:animated:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 1459);
    unint64_t v7 = v16;
  }
}

uint64_t sub_100D535D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100D53610()
{
}

void sub_100D53634(uint64_t a1)
{
  sub_100D49A38(a1, v1, sub_100D490FC);
}

uint64_t sub_100D53664(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100D536AC(uint64_t a1)
{
  sub_100D49A38(a1, v1, sub_100D4C6C4);
}

id sub_100D536DC()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_100D536E4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_100D53704(void *a1)
{
  sub_1005057FC((uint64_t *)&unk_101687FB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 64) = sub_100515BB8();
  *(void *)(inited + 40) = a1;
  double v3 = NSFontAttributeName;
  id v4 = a1;
  sub_100A38A68(inited);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = objc_allocWithZone((Class)NSAttributedString);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFAttributedStringRef v8 = (const __CFAttributedString *)[v5 initWithString:v6 attributes:isa];

  uint64_t v9 = CTLineCreateWithAttributedString(v8);
  CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(v9, 0);
  double width = BoundsWithOptions.size.width;

  return width;
}

uint64_t sub_100D53854@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v45 = type metadata accessor for URL();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v6);
  CFAttributedStringRef v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  id v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for UTType();
  uint64_t v46 = *(void *)(v47 - 8);
  *(void *)&double v19 = __chkstk_darwin(v47, v18).n128_u64[0];
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = [v3 dataUsingEncoding:4 v19];
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v40 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v41 = v24;

    static UTType.plainText.getter();
    uint64_t v25 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v25 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v25)
    {
      NSString v26 = String._bridgeToObjectiveC()();
      NSString v27 = String._bridgeToObjectiveC()();
      id v28 = [v26 crl_filenameFromDisplayNameWithExtension:v27];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      UTType.localizedDescription.getter();
      if (!v30)
      {
        UUID.init()();
        UUID.uuidString.getter();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
        sub_100E704DC(5);
        swift_bridgeObjectRelease();
        static String._fromSubstring(_:)();
        swift_bridgeObjectRelease();
      }
    }
    id v31 = [objc_allocWithZone((Class)NSFileManager) init];
    id v32 = [v31 temporaryDirectory];

    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    URL.appendingPathComponent(_:conformingTo:)();
    swift_bridgeObjectRelease();
    uint64_t v33 = v43;
    uint64_t v34 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v35 = v45;
    v34(v8, v45);
    uint64_t v37 = v40;
    unint64_t v36 = v41;
    uint64_t v38 = v44;
    Data.write(to:options:)();
    if (v38) {
      v34(v12, v35);
    }
    else {
      (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v42, v12, v35);
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v47);
    return sub_100510084(v37, v36);
  }
  else
  {
    sub_100D53E24();
    swift_allocError();
    return swift_willThrow();
  }
}

unint64_t sub_100D53E24()
{
  unint64_t result = qword_10169AC30;
  if (!qword_10169AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC30);
  }
  return result;
}

unsigned char *_s14FileWriteErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100D53F14);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14FileWriteErrorOMa()
{
  return &_s14FileWriteErrorON;
}

unint64_t sub_100D53F50()
{
  unint64_t result = qword_10169AC38;
  if (!qword_10169AC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC38);
  }
  return result;
}

id sub_100D53FA4()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  unsigned int v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v5 - 8, v6);
  CFAttributedStringRef v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  URL._bridgeToObjectiveC()(v10);
  uint64_t v12 = v11;
  [v9 setOriginalURL:v11];

  id v13 = [v9 originalURL];
  if (v13)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v8, v4, v0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v8, 0, 1, v0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v8, 1, v0) == 1)
    {
      id v13 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v14);
      id v13 = v15;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v8, v0);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v8, 1, 1, v0);
  }
  [v9 setURL:v13];

  return v9;
}

ValueMetadata *type metadata accessor for CRLMoviePresetData()
{
  return &type metadata for CRLMoviePresetData;
}

void sub_100D541EC(void *a1@<X8>)
{
  *a1 = &off_101502F90;
}

uint64_t sub_100D541FC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100D548F0();
  unint64_t v5 = sub_100D54948();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100D54254(uint64_t a1)
{
  unint64_t v2 = sub_100D54948();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100D54290(uint64_t a1)
{
  unint64_t v2 = sub_100D54948();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100D542CC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10169ACB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100D54948();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  memcpy(v11, v3, sizeof(v11));
  char v12 = 0;
  sub_100B422C8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v11[0] = v3[47];
    char v12 = 1;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

void *sub_100D5447C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_100D54B5C(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x180uLL);
  }
  return result;
}

uint64_t sub_100D544D0(void *a1)
{
  return sub_100D542CC(a1);
}

uint64_t sub_100D544E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009F2C28();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100D5453C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009F2C28();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100D54590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1009F2C80();
  unint64_t v7 = sub_100D54E28();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100D54600(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009F2C28();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100D5464C()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100D5469C()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100D546E4(uint64_t a1)
{
  unint64_t v2 = sub_100D54AB0();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100D54734()
{
  unint64_t result = qword_10169AC40;
  if (!qword_10169AC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC40);
  }
  return result;
}

unint64_t sub_100D54790()
{
  unint64_t result = qword_10169AC48;
  if (!qword_10169AC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC48);
  }
  return result;
}

unint64_t sub_100D547E8()
{
  unint64_t result = qword_10169AC50;
  if (!qword_10169AC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC50);
  }
  return result;
}

unint64_t sub_100D54840()
{
  unint64_t result = qword_10169AC58;
  if (!qword_10169AC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC58);
  }
  return result;
}

unint64_t sub_100D54898()
{
  unint64_t result = qword_10169AC60;
  if (!qword_10169AC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC60);
  }
  return result;
}

unint64_t sub_100D548F0()
{
  unint64_t result = qword_10169AC68;
  if (!qword_10169AC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC68);
  }
  return result;
}

unint64_t sub_100D54948()
{
  unint64_t result = qword_10169AC70;
  if (!qword_10169AC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC70);
  }
  return result;
}

unint64_t sub_100D549A0()
{
  unint64_t result = qword_10169AC78;
  if (!qword_10169AC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC78);
  }
  return result;
}

unint64_t sub_100D549F8()
{
  unint64_t result = qword_10169AC80;
  if (!qword_10169AC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC80);
  }
  return result;
}

unint64_t sub_100D54A50()
{
  unint64_t result = qword_10169AC88;
  if (!qword_10169AC88)
  {
    sub_100522D34(&qword_10169AC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC88);
  }
  return result;
}

unint64_t sub_100D54AB0()
{
  unint64_t result = qword_10169AC98;
  if (!qword_10169AC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AC98);
  }
  return result;
}

unint64_t sub_100D54B08()
{
  unint64_t result = qword_10169ACA0;
  if (!qword_10169ACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ACA0);
  }
  return result;
}

void *sub_100D54B5C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v13 = sub_1005057FC(&qword_10169ACA8);
  uint64_t v5 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v6);
  uint64_t v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100D54948();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = a2;
    v20[399] = 0;
    sub_100B41F38();
    uint64_t v10 = v13;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    memcpy(v18, v19, sizeof(v18));
    memcpy(v20, v19, 0x178uLL);
    sub_1005057FC((uint64_t *)&unk_101687A40);
    v20[398] = 1;
    sub_100B41F8C((uint64_t)v18);
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v10);
    uint64_t v11 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    memcpy(v14, v18, 0x178uLL);
    v14[47] = v11;
    sub_100B421AC((uint64_t)v14);
    swift_bridgeObjectRelease();
    sub_100B4209C((uint64_t)v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    memcpy(v15, v20, sizeof(v15));
    uint64_t v16 = v11;
    sub_10089B624((uint64_t)v15);
    return memcpy(v9, v14, 0x180uLL);
  }
}

unint64_t sub_100D54E28()
{
  unint64_t result = qword_10169ACB8;
  if (!qword_10169ACB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ACB8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLMoviePresetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100D54F48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMoviePresetData.CodingKeys()
{
  return &type metadata for CRLMoviePresetData.CodingKeys;
}

unint64_t sub_100D54F84()
{
  unint64_t result = qword_10169ACC0;
  if (!qword_10169ACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169ACC0);
  }
  return result;
}

uint64_t sub_100D54FD8(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  *(unsigned char *)(v3 + 74) = a1;
  return _swift_task_switch(sub_100D54FFC, 0, 0);
}

uint64_t sub_100D54FFC()
{
  if (*(unsigned char *)(v0 + 74))
  {
    if (*(unsigned char *)(v0 + 74) == 1)
    {
      BOOL v1 = 0;
    }
    else
    {
      type metadata accessor for CRLBoardEntity();
      EntityProperty.wrappedValue.getter();
      BOOL v1 = (*(unsigned char *)(v0 + 72) & 1) == 0;
    }
  }
  else
  {
    BOOL v1 = 1;
  }
  *(unsigned char *)(v0 + 75) = v1;
  type metadata accessor for CRLBoardEntity();
  EntityProperty.wrappedValue.getter();
  int v2 = *(unsigned __int8 *)(v0 + 73);
  if (v2 == 2 || ((v1 ^ ((v2 & 1) == 0)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + 16);
    sub_10050F848(*(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 24));
    sub_1005057FC(&qword_101683000);
    uint64_t v7 = type metadata accessor for CRLBoardIdentifierAndValue(0);
    unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10117E810;
    uint64_t v10 = v9 + v8;
    sub_100540CFC(v6, v10);
    *(unsigned char *)(v10 + *(int *)(v7 + 20)) = v1;
    uint64_t v11 = sub_100CDDA18(v9);
    *(void *)(v0 + 32) = v11;
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(v0 + 40) = type metadata accessor for MainActor();
    *(void *)(v0 + 48) = static MainActor.shared.getter();
    char v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v12;
    *char v12 = v0;
    v12[1] = sub_100D55274;
    return sub_100EE13A4(v11);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v4 = *(unsigned __int8 *)(v0 + 75);
    return v3(v4);
  }
}

uint64_t sub_100D55274()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100D55444;
  }
  else {
    uint64_t v4 = sub_100D553D0;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100D553D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 75);
  return v1(v2);
}

uint64_t sub_100D55444()
{
  swift_release();
  return _swift_task_switch(sub_100D554AC, 0, 0);
}

uint64_t sub_100D554AC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

ValueMetadata *type metadata accessor for CRLFavoriteBoardIntentPerformer()
{
  return &type metadata for CRLFavoriteBoardIntentPerformer;
}

char *sub_100D555E4(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderInsideCornerRadius] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath] = 0;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer;
  id v4 = objc_allocWithZone((Class)CRLNoDefaultImplicitActionLayer);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];

  sub_10050F848(a1, a1[3]);
  uint64_t v6 = _bridgeAnythingToObjectiveC<A>(_:)();
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for CRLOutsideBorderPlatterLayer();
  [super initWithLayer:v6];
  swift_unknownObjectRelease();
  unint64_t v8 = (char *)v7;
  [v8 setMasksToBounds:0];
  sub_100522D7C((uint64_t)a1, (uint64_t)v13);
  if (swift_dynamicCast())
  {
    *(void *)&v8[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth] = *(void *)&v12[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth];
    id v9 = [*(id *)&v12[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer] backgroundColor];
    id v10 = *(id *)&v8[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer];
    [v10 setBackgroundColor:v9];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(layer:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLOutsideBorderPlatterLayer.swift", 99, 2, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(layer:)", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLOutsideBorderPlatterLayer.swift", 99, 2, 78);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v8;
}

id sub_100D5585C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderInsideCornerRadius] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath] = 0;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer;
  id v4 = objc_allocWithZone((Class)CRLNoDefaultImplicitActionLayer);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for CRLOutsideBorderPlatterLayer();
  [super initWithCoder:a1];
  id v7 = v6;
  if (v6)
  {
    id v8 = v6;
    [v8 setMasksToBounds:0];
  }
  return v7;
}

void sub_100D55960()
{
  uint64_t v1 = v0;
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for CRLOutsideBorderPlatterLayer();
  [super layoutSublayers];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer;
  id v3 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_borderPlatterSublayer] superlayer];
  if (!v3) {
    goto LABEL_4;
  }
  sub_10054CE40();
  id v4 = v0;
  id v5 = v3;
  char v6 = static NSObject.== infix(_:_:)();

  if ((v6 & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"layoutSublayers()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLOutsideBorderPlatterLayer.swift", 99, 2, 102, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v13) = 2;
    uint64_t v11 = "expected nil value, but non-nil found";
    uint64_t v12 = 37;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutSublayers()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLOutsideBorderPlatterLayer.swift", 99, 2, 102);
LABEL_4:
    [v1 addSublayer:v1[v2] v11, v12, v13];
    [*(id *)&v1[v2] setZPosition:-10000.0];
  }
  id v7 = *(id *)&v1[v2];
  [v1 bounds];
  CGRect v16 = CGRectInset(v15, -*(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth], -*(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderWidth]);
  [v7 setFrame:v16.origin.x, v16.origin.y, v16.size.width, v16.size.height];

  [v1 bounds];
  uint64_t v8 = OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath;
  CGRect v18 = CGRectInset(v17, -*(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath], -*(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_additionalOutsetForShadowPath]);
  id v9 = [self bezierPathWithContinuousCornerRoundedRect:v18.origin.x, v18.origin.y, v18.size.width, v18.size.height, *(double *)&v1[OBJC_IVAR____TtC8Freeform28CRLOutsideBorderPlatterLayer_outsideBorderInsideCornerRadius]+ *(double *)&v1[v8]];
  id v10 = [v9 CGPath];
  [v1 setShadowPath:v10];
}

id sub_100D55C34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLOutsideBorderPlatterLayer();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLOutsideBorderPlatterLayer()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLSerializableObjectOptions()
{
  return &type metadata for CRLSerializableObjectOptions;
}

uint64_t sub_100D55CAC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100D55D0C()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100D55D60()
{
  unint64_t result = qword_10169AD18;
  if (!qword_10169AD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AD18);
  }
  return result;
}

unint64_t sub_100D55DB8()
{
  unint64_t result = qword_10169AD20;
  if (!qword_10169AD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AD20);
  }
  return result;
}

unint64_t sub_100D55E10()
{
  unint64_t result = qword_10169AD28;
  if (!qword_10169AD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AD28);
  }
  return result;
}

unint64_t sub_100D55E68()
{
  unint64_t result = qword_10169AD30;
  if (!qword_10169AD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10169AD30);
  }
  return result;
}

uint64_t destroy for CRLSendACopyBoardDataHandler(id *a1)
{
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for CRLSendACopyBoardDataHandler(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  char v6 = *(void **)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v5;
  id v7 = v3;
  id v8 = v4;
  swift_unknownObjectRetain();
  id v9 = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CRLSendACopyBoardDataHandler(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 24) = v10;
  uint64_t v11 = *(void **)(a2 + 32);
  uint64_t v12 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v11;
  id v13 = v11;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CRLSendACopyBoardDataHandler(uint64_t a1, _OWORD *a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];

  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CRLSendACopyBoardDataHandler()
{
  return &type metadata for CRLSendACopyBoardDataHandler;
}

uint64_t sub_100D56098(uint64_t a1)
{
  v2[32] = a1;
  v2[33] = v1;
  type metadata accessor for CRLBoardCRDTData(0);
  v2[34] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[35] = v4;
  v2[36] = *(void *)(v4 - 8);
  v2[37] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[38] = swift_task_alloc();
  uint64_t v5 = *(void *)(v1 + 32);
  id v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10169C968 + dword_10169C968);
  id v6 = (void *)swift_task_alloc();
  v2[39] = v6;
  void *v6 = v2;
  v6[1] = sub_100D56204;
  return v8(a1, v5);
}

uint64_t sub_100D56204(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 320) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100D56364, 0, 0);
  }
}

uint64_t sub_100D56364()
{
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  unint64_t v1 = v0[40];
  swift_beginAccess();
  objc_super v2 = (void *)static OS_os_log.crlSendACopy;
  v0[41] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (v1 >> 62)
  {
    id v15 = v2;
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v5 = v2;
  }
  v0[31] = v4;
  uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  v0[42] = v9;
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v10 = UUID.uuidString.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v12, (uint64_t)"downloadFromPublicDatabase() Public records fetched: %@ for boardIdentifier: %@", 79, 2, inited);
  swift_setDeallocating();
  v0[43] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v13 = (void *)swift_task_alloc();
  v0[44] = v13;
  *id v13 = v0;
  v13[1] = sub_100D565B0;
  uint64_t v14 = v0[33];
  v13[20] = v0[40];
  v13[21] = v14;
  return _swift_task_switch(sub_100D56A30, 0, 0);
}

uint64_t sub_100D565B0(uint64_t a1, char a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 360) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_100D56984;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v6 + 376) = a2 & 1;
    *(void *)(v6 + 368) = a1;
    uint64_t v7 = sub_100D566F4;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100D566F4()
{
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v24 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v21 = v1;
  uint64_t v22 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v23 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 272);
  id v5 = (void *)static OS_os_log.crlSendACopy;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v7 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100D5CC34(v8, v4, type metadata accessor for CRLBoardCRDTData);
  id v9 = v5;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100D5CC9C(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v10 = (uint64_t *)(*(void *)(v21 + v7) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  swift_bridgeObjectRetain();
  sub_100753370(v2, v11, v12, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v22, v23);
  sub_100D5CC9C(v22, type metadata accessor for CRLBoardIdentifier);
  uint64_t v13 = UUID.uuidString.getter();
  uint64_t v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v23);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 32) = v13;
  *(void *)(inited + 40) = v15;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Successfully _createBoardFromRecords() board %{public}@", 55, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v18 = *(void *)(v0 + 368);
  uint64_t v19 = *(unsigned __int8 *)(v0 + 376);
  return v17(v18, v19);
}

uint64_t sub_100D56984()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100D56A10(uint64_t a1)
{
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = v1;
  return _swift_task_switch(sub_100D56A30, 0, 0);
}

uint64_t sub_100D56A30()
{
  unint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = *(void **)v1;
  v0[22] = *(void *)v1;
  uint64_t v4 = *(void **)(v1 + 8);
  id v5 = *(void **)(v1 + 32);
  id v6 = v3;
  id v7 = v4;
  swift_unknownObjectRetain();
  id v8 = v5;
  swift_retain();
  id v9 = sub_100D59C40(v2);

  swift_unknownObjectRelease();
  swift_release();
  uint64_t v10 = _swiftEmptyArrayStorage;
  v0[18] = _swiftEmptyArrayStorage;
  uint64_t v11 = *((void *)v9 + 2);
  if (v11)
  {
    unint64_t v12 = (long long *)(v9 + 4);
    type metadata accessor for CRLFreehandDrawingBucketSyncRemoteRecord(0);
    do
    {
      long long v20 = *v12;
      uint64_t v13 = swift_dynamicCastClass();
      swift_unknownObjectRetain_n();
      if (v13)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v0[18] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[18] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_100F642C8(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        long long v14 = v20;
        unint64_t v16 = *((void *)v10 + 2);
        unint64_t v15 = *((void *)v10 + 3);
        if (v16 >= v15 >> 1)
        {
          uint64_t v17 = sub_100F642C8((double *)(v15 > 1), v16 + 1, 1, v10);
          long long v14 = v20;
          uint64_t v10 = v17;
        }
        *((void *)v10 + 2) = v16 + 1;
        *(_OWORD *)&v10[2 * v16 + 4] = v14;
      }
      swift_unknownObjectRelease();
      ++v12;
      --v11;
    }
    while (v11);
  }
  v0[23] = v10;
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)swift_task_alloc();
  v0[24] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_100D56CC4;
  return sub_100D572A8((uint64_t)v10);
}

uint64_t sub_100D56CC4(uint64_t a1, char a2)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 112) = v2;
  *(unsigned char *)(v4 + 104) = a2;
  *(void *)(v4 + 88) = v3;
  *(void *)(v4 + 96) = a1;
  *(void *)(v4 + 200) = a1;
  *(void *)(v4 + 208) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRelease();
    id v5 = sub_100D5728C;
  }
  else
  {
    id v5 = sub_100D56E00;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100D56E00()
{
  uint64_t v1 = v0 + 18;
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlSendACopy;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    id v21 = v2;
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v6 = v2;
  }
  id v8 = (void *)v0[25];
  uint64_t v7 = v0[26];
  v0[19] = v5;
  uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v11 = v10;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Got %{public}@ buckets to be saved to new board", 47, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100D57CAC(v4, v8);
  uint64_t v13 = (void *)v0[25];
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_9;
  }
  if ((*((unsigned char *)v13 + OBJC_IVAR____TtC8Freeform8CRLBoard_makeUnsupported) & 1) != 0
    || (unint64_t v14 = sub_100D08894(), sub_1002094A4() < v14))
  {
    uint64_t v13 = (void *)v0[25];
    sub_1009F6B7C();
    swift_allocError();
    *unint64_t v15 = 14;
    swift_willThrow();
LABEL_9:

    unint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  uint64_t v18 = (void *)swift_task_alloc();
  v0[27] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_100D570E8;
  uint64_t v19 = v0[22];
  uint64_t v20 = v0[20];
  return sub_100D5BBA4(v20, v19);
}

uint64_t sub_100D570E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100D57224;
  }
  else
  {
    *(unsigned char *)(v2 + 232) = *(unsigned char *)(v2 + 104);
    uint64_t v3 = sub_100D57204;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100D57204()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 200), *(unsigned __int8 *)(v0 + 232));
}

uint64_t sub_100D57224()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100D5728C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100D572A8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for UUID();
  v2[4] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[5] = swift_task_alloc();
  sub_1005057FC(&qword_101699628);
  v2[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardCRDTData(0);
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_100D57400, 0, 0);
}

unint64_t sub_100D57400()
{
  uint64_t v53 = v0;
  unint64_t result = sub_100C33084(v0[2], (void (*)(void **__return_ptr, uint64_t *))sub_100D59BD0, 0, (void (*)(void **__return_ptr, void *))sub_100D59BE0, 0, (void (*)(double **__return_ptr, void *))sub_1008BCA0C, 0);
  unint64_t v2 = result;
  if (!(result >> 62))
  {
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) == 1) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    sub_1009F6B7C();
    swift_allocError();
    *uint64_t v38 = 13;
    swift_willThrow();
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v36 != 1) {
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
  if (!v37) {
    goto LABEL_18;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v3 = *(void *)(v2 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  v52[0] = 0;
  uint64_t v4 = *(void *)(v3 + 16);
  if (!*(void *)(v4 + 32)
    || (type metadata accessor for CRLBoardSyncRemoteRecord(0), (uint64_t v5 = swift_dynamicCastClass()) == 0))
  {
    sub_1009F6B7C();
    swift_allocError();
    *uint64_t v9 = 6;
    swift_retain();
    swift_willThrow();
    swift_release();
    goto LABEL_12;
  }
  id v6 = (char *)v5;
  uint64_t v8 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData);
  unint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform24CRLBoardSyncRemoteRecord_boardCRDTData + 8);
  swift_unknownObjectRetain();
  if (v7 >> 60 == 15)
  {
    swift_retain();
    sub_1009F6B7C();
    swift_allocError();
    *uint64_t v10 = 3;
    swift_willThrow();
    swift_release();
    swift_unknownObjectRelease();
LABEL_12:
    swift_release();
LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = (uint64_t (*)(void))v0[1];
    return v39();
  }
  sub_1005FA2A0(v8, v7);
  swift_unknownObjectRetain();
  sub_1005FA2A0(v8, v7);
  sub_100D5CCFC((unint64_t *)&unk_10169A0D0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  CRDT.init(serializedData:)();
  uint64_t v11 = v0[9];
  uint64_t v49 = v0[10];
  uint64_t v42 = v11;
  uint64_t v12 = v0[6];
  uint64_t v40 = v0[5];
  (*(void (**)(uint64_t, void, uint64_t, void))(v0[8] + 56))(v12, 0, 1, v0[7]);
  sub_100D5CBCC(v12, v49, type metadata accessor for CRLBoardCRDTData);
  long long v47 = *(_OWORD *)&v6[OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions];
  uint64_t v45 = *(void *)&v6[OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_minRequiredVersions + 16];
  sub_100D5CC34(v49, v11, type metadata accessor for CRLBoardCRDTData);
  sub_100D5CC34((uint64_t)&v6[OBJC_IVAR____TtC8Freeform18CRLBoardSyncRecord_boardIdentifier], v40, type metadata accessor for CRLBoardIdentifier);
  uint64_t v13 = (uint64_t *)(v40 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v14 = v13[1];
  uint64_t v41 = *v13;
  swift_bridgeObjectRetain();
  sub_100D5CC9C(v40, type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for CRLBoardData(0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 7;
  *(_OWORD *)(v15 + 24) = v47;
  *(void *)(v15 + 40) = v45;
  sub_100D5CBCC(v42, v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, type metadata accessor for CRLBoardCRDTData);
  swift_unknownObjectRelease();
  sub_100514260(v8, v7);
  unint64_t v16 = (void *)(v15 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  *unint64_t v16 = v41;
  v16[1] = v14;
  sub_100D5CC9C(v49, type metadata accessor for CRLBoardCRDTData);
  uint64_t v17 = sub_100D5AE6C(v4, v6);
  uint64_t v19 = v18;
  uint64_t v50 = v0[4];
  *(void *)&long long v47 = v0[3];
  uint64_t v20 = *(void **)v47;
  id v21 = objc_allocWithZone((Class)type metadata accessor for CRLBoard(0));
  id v22 = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v23 = sub_100D1ABB4(v22, v15, v19, (uint64_t)v17, 0, 0);
  swift_release();
  swift_release();
  swift_release();

  uint64_t v24 = v22;
  uint64_t v25 = v23;
  UUID.init()();
  type metadata accessor for CRLTransactionContext(0);
  uint64_t v26 = swift_allocObject();
  uint64_t v48 = sub_1007940B4((uint64_t)v25, 0, 1, v50, 1, v26);
  uint64_t v51 = (void (*)(char *, uint64_t))v19;
  uint64_t v43 = *(void **)(v47 + 8);
  uint64_t v46 = *(void **)(v47 + 32);
  id v27 = v24;
  swift_retain();
  swift_retain();
  id v28 = v25;
  id v44 = v43;
  swift_unknownObjectRetain();
  id v29 = v46;
  uint64_t v30 = v17;
  id v31 = v29;
  uint64_t v32 = (uint64_t)v30;
  swift_retain();
  sub_1006D5DD8(v3, v32, v51, v52, v27, v28, v48);

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v33 = swift_release();
  (*(void (**)(uint64_t))(*(void *)v48 + 720))(v33);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = v52[0];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(char *, uint64_t))v0[1];
  return v35(v28, v34);
}

uint64_t sub_100D57CAC(unint64_t a1, void *a2)
{
  id v258 = a2;
  uint64_t v3 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v3 - 8, v4);
  id v268 = (char *)v233 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v267 = (uint64_t)v233 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v266 = (uint64_t)v233 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v265, v12);
  uint64_t v264 = (uint64_t)v233 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_10169A1B0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v278 = (uint64_t)v233 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  int64_t v277 = (char *)v233 - v19;
  uint64_t v20 = sub_1005057FC(&qword_101697398);
  __chkstk_darwin(v20 - 8, v21);
  unint64_t v276 = (char *)v233 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  unint64_t v303 = *(void *)(v301 - 8);
  __chkstk_darwin(v301, v23);
  uint64_t v298 = (uint64_t)v233 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v296 = type metadata accessor for UUID();
  uint64_t v245 = *(void *)(v296 - 8);
  uint64_t v25 = *(char **)(v245 + 64);
  __chkstk_darwin(v296, v26);
  int64_t v263 = (char *)v233 - ((unint64_t)(v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  NSString v292 = (void *)((char *)v233 - v29);
  __chkstk_darwin(v30, v31);
  uint64_t v300 = (char *)v233 - v32;
  uint64_t v33 = sub_1005057FC((uint64_t *)&unk_10169A1C0);
  __chkstk_darwin(v33 - 8, v34);
  unint64_t v283 = (char *)v233 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v37);
  *(void *)&long long v291 = (char *)v233 - v38;
  uint64_t v259 = sub_1005057FC((uint64_t *)&unk_1016A8B60);
  unint64_t v299 = *(void *)(v259 - 8);
  __chkstk_darwin(v259, v39);
  uint64_t v248 = (char *)v233 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = sub_1005057FC((uint64_t *)&unk_10169A1D8);
  uint64_t v297 = *(void *)(v285 - 8);
  __chkstk_darwin(v285, v41);
  int64_t v286 = (char *)v233 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v284 = sub_1005057FC(&qword_10169A1D0);
  uint64_t v43 = *(uint64_t **)(v284 - 8);
  __chkstk_darwin(v284, v44);
  unint64_t v275 = (char *)v233 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v47);
  int64_t v247 = (char *)v233 - v48;
  __chkstk_darwin(v49, v50);
  long long v246 = (char *)v233 - v51;
  uint64_t v52 = sub_1005057FC((uint64_t *)&unk_10169A770);
  __chkstk_darwin(v52 - 8, v53);
  unint64_t v249 = (char *)v233 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55, v56);
  int64_t v250 = (char *)v233 - v57;
  uint64_t v253 = sub_1005057FC(&qword_101699938);
  uint64_t v295 = *(char **)(v253 - 8);
  __chkstk_darwin(v253, v58);
  int64_t v252 = (char *)v233 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FA90 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    swift_beginAccess();
    uint64_t v60 = (void *)static OS_os_log.crlSendACopy;
    uint64_t v289 = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    long long v288 = xmmword_10117E810;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v62 = a1 >> 62;
    unint64_t v254 = a1;
    if (a1 >> 62)
    {
      id v232 = v60;
      swift_bridgeObjectRetain();
      uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v63 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v64 = v60;
    }
    v302[0] = v63;
    uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v67 = v66;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v287 = sub_100528BE4();
    *(void *)(inited + 64) = v287;
    *(void *)(inited + 32) = v65;
    *(void *)(inited + 40) = v67;
    uint64_t v68 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v60, (uint64_t)&_mh_execute_header, v68, (uint64_t)"Adding %{public}@ CRLFreehandDrawingBucketSyncRemoteRecord to board", 67, 2, inited);
    swift_setDeallocating();
    uint64_t v290 = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    unint64_t v261 = sub_100A3B408((uint64_t)_swiftEmptyArrayStorage);
    if (v62)
    {
      unint64_t v69 = v254;
      swift_bridgeObjectRetain();
      uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
      if (!v70)
      {
LABEL_62:
        uint64_t v257 = 0;
LABEL_63:
        swift_bridgeObjectRelease();
        sub_100D5CCFC((unint64_t *)&qword_10167BA48, (void (*)(uint64_t))type metadata accessor for CRLBoard);
        uint64_t v179 = (uint64_t)v258;
        swift_unknownObjectRetain();
        uint64_t v43 = v292;
        UUID.init()();
        type metadata accessor for CRLTransactionContext(0);
        uint64_t v180 = swift_allocObject();
        uint64_t v294 = sub_1007940B4(v179, 0, 1, (uint64_t)v43, 1, v180);
        uint64_t v181 = *(void *)(v261 + 64);
        uint64_t v285 = v261 + 64;
        uint64_t v182 = 1 << *(unsigned char *)(v261 + 32);
        uint64_t v183 = -1;
        if (v182 < 64) {
          uint64_t v183 = ~(-1 << v182);
        }
        unint64_t v184 = v183 & v181;
        int64_t v286 = (char *)((unint64_t)(v182 + 63) >> 6);
        long long v293 = (void (**)(uint64_t *, uint64_t))(v245 + 8);
        uint64_t v185 = swift_bridgeObjectRetain();
        uint64_t v186 = 0;
        long long v291 = xmmword_10117D8C0;
        a1 = v282;
        if (v184)
        {
LABEL_66:
          unint64_t v282 = a1;
          uint64_t v295 = (char *)((v184 - 1) & v184);
          uint64_t v297 = v186;
          unint64_t v187 = __clz(__rbit64(v184)) | (v186 << 6);
          goto LABEL_78;
        }
        while (1)
        {
          BOOL v75 = __OFADD__(v186, 1);
          uint64_t v188 = v186 + 1;
          if (v75) {
            break;
          }
          if (v188 >= (uint64_t)v286) {
            goto LABEL_93;
          }
          unint64_t v189 = *(void *)(v285 + 8 * v188);
          if (!v189)
          {
            uint64_t v190 = v188 + 1;
            if (v188 + 1 >= (uint64_t)v286) {
              goto LABEL_93;
            }
            unint64_t v189 = *(void *)(v285 + 8 * v190);
            if (!v189)
            {
              uint64_t v190 = v188 + 2;
              if (v188 + 2 >= (uint64_t)v286) {
                goto LABEL_93;
              }
              unint64_t v189 = *(void *)(v285 + 8 * v190);
              if (!v189)
              {
                uint64_t v190 = v188 + 3;
                if (v188 + 3 >= (uint64_t)v286)
                {
LABEL_93:
                  swift_release();
                  uint64_t v222 = swift_bridgeObjectRelease();
                  (*(void (**)(uint64_t))(*(void *)v294 + 720))(v222);
                  swift_release();
                  if (!a1) {
                    swift_release();
                  }
                  return sub_1005174AC((uint64_t)v257);
                }
                unint64_t v189 = *(void *)(v285 + 8 * v190);
                if (!v189)
                {
                  while (1)
                  {
                    uint64_t v188 = v190 + 1;
                    if (__OFADD__(v190, 1)) {
                      break;
                    }
                    if (v188 >= (uint64_t)v286) {
                      goto LABEL_93;
                    }
                    unint64_t v189 = *(void *)(v285 + 8 * v188);
                    ++v190;
                    if (v189) {
                      goto LABEL_77;
                    }
                  }
                  __break(1u);
                  goto LABEL_105;
                }
              }
            }
            uint64_t v188 = v190;
          }
LABEL_77:
          unint64_t v282 = a1;
          uint64_t v295 = (char *)((v189 - 1) & v189);
          uint64_t v297 = v188;
          unint64_t v187 = __clz(__rbit64(v189)) + (v188 << 6);
LABEL_78:
          int64_t v191 = *(void **)(*(void *)(v185 + 48) + 8 * v187);
          unint64_t v192 = *(void **)(v256 + 8);
          uint64_t v193 = *(void **)(v256 + 32);
          id v194 = *(id *)v256;
          id v195 = v192;
          swift_unknownObjectRetain();
          id v196 = v193;
          swift_retain();
          uint64_t v197 = v191;
          unint64_t v198 = swift_bridgeObjectRetain();
          unint64_t v199 = v282;
          unint64_t v200 = (unint64_t)sub_100D59DF4(v198, v194);
          unint64_t v303 = v199;
          swift_bridgeObjectRelease();
          swift_release();

          swift_unknownObjectRelease();
          id v201 = (char *)static OS_os_log.crlSendACopy;
          uint64_t v202 = swift_initStackObject();
          *(_OWORD *)(v202 + 16) = v291;
          uint64_t v300 = v201;
          unint64_t v299 = v200 >> 62;
          if (v200 >> 62)
          {
            Class v221 = v201;
            swift_bridgeObjectRetain();
            uint64_t v203 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v203 = *(void *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
            unint64_t v204 = v201;
          }
          uint64_t v298 = v202 + 32;
          v302[0] = v203;
          uint64_t v205 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v206 = v287;
          *(void *)(v202 + 56) = &type metadata for String;
          *(void *)(v202 + 64) = v206;
          *(void *)(v202 + 32) = v205;
          *(void *)(v202 + 40) = v207;
          id v208 = *(void (**)(uint64_t))(**(void **)&v197[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                                + 256);
          uint64_t v25 = v197;
          uint64_t v209 = swift_retain();
          id v210 = v292;
          v208(v209);
          uint64_t v301 = (uint64_t)v25;

          swift_release();
          uint64_t v211 = UUID.uuidString.getter();
          uint64_t v213 = v212;
          (*v293)(v210, v296);
          *(void *)(v202 + 96) = &type metadata for String;
          *(void *)(v202 + 104) = v206;
          *(void *)(v202 + 72) = v211;
          *(void *)(v202 + 80) = v213;
          uint64_t v214 = static os_log_type_t.default.getter();
          unint64_t v215 = v300;
          sub_100BAC898((uint64_t)v300, (uint64_t)&_mh_execute_header, v214, (uint64_t)"Adding %{public}@ freehand drawing items to container: %{public}@", 65, 2, v202);
          swift_setDeallocating();
          swift_arrayDestroy();

          if (v299)
          {
            type metadata accessor for CRLBoardItem(0);
            swift_bridgeObjectRetain();
            uint64_t v216 = _bridgeCocoaArray<A>(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
            type metadata accessor for CRLBoardItem(0);
            uint64_t v216 = v200;
          }
          swift_bridgeObjectRelease();
          uint64_t v217 = NSNotFound.getter();
          sub_1005057FC((uint64_t *)&unk_101683E00);
          uint64_t v218 = swift_initStackObject();
          *(_OWORD *)(v218 + 16) = v288;
          *(void *)(v218 + 32) = v217;
          *(void *)(v218 + 40) = v216;
          uint64_t v43 = (uint64_t *)sub_100A45CB0((void *)v218);
          swift_setDeallocating();
          swift_bridgeObjectRetain();
          sub_1005057FC(&qword_10169DFA0);
          swift_arrayDestroy();
          id v219 = (void *)v301;
          unint64_t v220 = v303;
          sub_10084BFA8((uint64_t)v43, v294);
          a1 = v220;
          if (v220)
          {
            swift_release();
            swift_bridgeObjectRelease();

            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_92;
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v185 = v261;
          uint64_t v186 = v297;
          unint64_t v184 = (unint64_t)v295;
          if (v295) {
            goto LABEL_66;
          }
        }
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
    }
    else
    {
      unint64_t v69 = v254;
      uint64_t v70 = *(void *)((v254 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v70) {
        goto LABEL_62;
      }
    }
    uint64_t v244 = type metadata accessor for CRContext();
    uint64_t v257 = 0;
    unint64_t v71 = 0;
    unint64_t v72 = v69 & 0xC000000000000001;
    uint64_t v234 = v69 & 0xFFFFFFFFFFFFFF8;
    v233[1] = v69 + 32;
    uint64_t v281 = 0x1000000000000;
    uint64_t v280 = 0x2000400000000;
    uint64_t v243 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 7);
    id v240 = (void (**)(char *, uint64_t, uint64_t))(v43 + 4);
    id v241 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 6);
    id v239 = (void (**)(char *, uint64_t))(v299 + 8);
    long long v293 = (void (**)(uint64_t *, uint64_t))(v245 + 32);
    int64_t v273 = (uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v245 + 16);
    unint64_t v274 = (void (**)(char *, uint64_t, uint64_t))(v43 + 2);
    unint64_t v271 = (void (**)(char *, uint64_t))(v43 + 1);
    unint64_t v272 = v25 + 32;
    uint64_t v269 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v303 + 48);
    int64_t v270 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v303 + 56);
    unint64_t v262 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v245 + 48);
    double v238 = (void (**)(char *, uint64_t))(v297 + 8);
    id v242 = (void (**)(char *, char *))(v295 + 8);
    uint64_t v43 = &OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions;
    uint64_t v73 = v252;
    uint64_t v25 = (char *)v253;
    unint64_t v303 = v245 + 8;
    unint64_t v235 = v69 & 0xC000000000000001;
    uint64_t v236 = v70;
LABEL_7:
    if (!v72) {
      break;
    }
    uint64_t v74 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    BOOL v75 = __OFADD__(v71, 1);
    a1 = v71 + 1;
    if (!v75) {
      goto LABEL_13;
    }
LABEL_101:
    __break(1u);
  }
  if (v71 >= *(void *)(v234 + 16))
  {
LABEL_105:
    __break(1u);
LABEL_106:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t v74 = swift_retain();
    BOOL v75 = __OFADD__(v71, 1);
    a1 = v71 + 1;
    if (v75) {
      goto LABEL_101;
    }
LABEL_13:
    unint64_t v237 = a1;
    uint64_t v76 = *(void *)(v74 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 16);
    double v77 = *(char **)(v74 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 24);
    uint64_t v78 = *(void *)(v74 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 32);
    BOOL v79 = *(unsigned char *)(v74 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 40) == 1;
    uint64_t v80 = v25;
    uint64_t v81 = v281;
    if (*(unsigned char *)(v74 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 40) == 1) {
      uint64_t v82 = v281;
    }
    else {
      uint64_t v82 = *(void *)(v74 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions);
    }
    if (*(unsigned char *)(v74 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 40) == 1) {
      uint64_t v83 = v281;
    }
    else {
      uint64_t v83 = *(void *)(v74 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions + 8);
    }
    unint64_t v299 = v83;
    uint64_t v84 = (char *)v280;
    if (v79) {
      uint64_t v85 = v280;
    }
    else {
      uint64_t v85 = v76;
    }
    uint64_t v297 = v85;
    if (!v79) {
      uint64_t v84 = v77;
    }
    uint64_t v295 = v84;
    if (!v79) {
      uint64_t v81 = v78;
    }
    uint64_t v279 = v81;
    uint64_t v255 = v74;
    unint64_t v86 = *(void **)(v74 + OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_ckMergeableRecordValue);
    uint64_t v87 = v284;
    (*v243)(v250, 1, 1, v284);
    memset(v302, 0, 40);
    id v88 = v86;
    static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)();
    sub_100522F00((uint64_t)v302, (uint64_t *)&unk_10169A780);
    sub_100CE9068();
    CRCKMergeable.init(crdt:context:)();
    sub_100523288((unint64_t *)&unk_10169A790, &qword_101699938);
    id v251 = v88;
    unint64_t v89 = v282;
    CKMergeable.merge(_:)();
    if (v89)
    {
      swift_release();

      (*v242)(v73, v80);
      swift_bridgeObjectRelease();
LABEL_92:
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v282 = 0;
      uint64_t v90 = (uint64_t)v249;
      CRCKMergeable.crdt.getter();
      if ((*v241)(v90, 1, v87) != 1)
      {
        unint64_t v91 = *v240;
        uint64_t v92 = v246;
        (*v240)(v246, v90, v87);
        uint64_t v93 = *(void *)(v255 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
        id v94 = v247;
        v91(v247, (uint64_t)v92, v87);
        sub_1005057FC((uint64_t *)&unk_1016A8B70);
        double v95 = (void *)swift_allocObject();
        uint64_t v260 = v82;
        double v96 = v95;
        *((unsigned char *)v95 + *(void *)(*v95 + 136)) = 0;
        v95[2] = v93;
        uint64_t v97 = v296;
        uint64_t v98 = (uint64_t)v95 + *(void *)(*v95 + 120);
        v91((char *)v98, (uint64_t)v94, v87);
        *((unsigned char *)v96 + *(void *)(*v96 + 136)) = 1;
        id v99 = (void *)((char *)v96 + *(void *)(*v96 + 128));
        unint64_t v100 = v299;
        uint64_t *v99 = v260;
        v99[1] = v100;
        id v101 = v295;
        v99[2] = v297;
        v99[3] = (uint64_t)v101;
        v99[4] = v279;
        swift_beginAccess();
        uint64_t v102 = sub_100523288(&qword_10169A210, (uint64_t *)&unk_1016A8B60);
        uint64_t v103 = v248;
        uint64_t v279 = v102;
        Capsule<>.root.getter();
        uint64_t v104 = v259;
        CRDictionary.makeIterator()();
        uint64_t v105 = *v239;
        uint64_t v260 = (uint64_t)v96;
        swift_retain();
        uint64_t v106 = v103;
        uint64_t v107 = v87;
        v105(v106, v104);
        uint64_t v108 = v291;
        uint64_t v294 = v98;
        while (1)
        {
          uint64_t v117 = (uint64_t)v283;
          CRDictionary.Iterator.next()();
          sub_10051B3EC(v117, v108, (uint64_t *)&unk_10169A1C0);
          uint64_t v118 = sub_1005057FC(&qword_10169A218);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 48))(v108, 1, v118) == 1)
          {
            swift_release();
            swift_release_n();

            (*v238)(v286, v285);
            uint64_t v73 = v252;
            uint64_t v25 = (char *)v253;
            (*v242)(v252, (char *)v253);
            unint64_t v71 = v237;
            unint64_t v72 = v235;
            uint64_t v43 = &OBJC_IVAR____TtC8Freeform40CRLFreehandDrawingBucketSyncRemoteRecord_minRequiredVersions;
            if (v237 != v236) {
              goto LABEL_7;
            }
            goto LABEL_63;
          }
          unint64_t v299 = v118;
          uint64_t v119 = v98;
          uint64_t v120 = (char *)*v293;
          uint64_t v121 = (uint64_t)v300;
          ((void (*)(char *, uint64_t, uint64_t))*v293)(v300, v108, v97);
          uint64_t v122 = v275;
          (*v274)(v275, v119, v107);
          uint64_t v123 = v107;
          id v124 = v292;
          uint64_t v125 = (*v273)(v292, v121, v97);
          __chkstk_darwin(v125, v126);
          double v128 = (void *)((char *)v233 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0));
          uint64_t v129 = v301;
          *double v128 = v97;
          v128[1] = v129;
          v128[2] = sub_100D5CCFC(&qword_10169A228, (void (*)(uint64_t))&type metadata accessor for UUID);
          v128[3] = sub_100D5CCFC((unint64_t *)&unk_10169A230, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
          uint64_t v295 = v120;
          ((void (*)(uint64_t *, uint64_t *, uint64_t))v120)(v128 + 4, v124, v97);
          swift_getKeyPath();
          uint64_t v130 = (uint64_t)v277;
          Capsule<>.subscript.getter();
          swift_release();
          (*v271)(v122, v123);
          uint64_t v131 = v278;
          sub_100522E9C(v130, v278, (uint64_t *)&unk_10169A1B0);
          uint64_t v132 = sub_1005057FC(&qword_10169A220);
          uint64_t v25 = *(char **)(v132 - 8);
          if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v25 + 6))(v131, 1, v132) == 1)
          {
            sub_100522F00(v130, (uint64_t *)&unk_10169A1B0);
            sub_100522F00(v131, (uint64_t *)&unk_10169A1B0);
            uint64_t v133 = 1;
            uint64_t v134 = (uint64_t)v276;
          }
          else
          {
            sub_100523288(&qword_10169A240, (uint64_t *)&unk_1016A8B60);
            uint64_t v134 = (uint64_t)v276;
            Ref.subscript.getter();
            sub_100522F00(v130, (uint64_t *)&unk_10169A1B0);
            (*((void (**)(uint64_t, uint64_t))v25 + 1))(v131, v132);
            uint64_t v133 = 0;
          }
          uint64_t v135 = (void (**)(uint64_t, uint64_t))v303;
          uint64_t v136 = v301;
          (*v270)(v134, v133, 1, v301);
          uint64_t v108 = v291;
          unint64_t v299 = v291 + *(int *)(v299 + 48);
          if ((*v269)(v134, 1, v136) == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_100522F00(v134, &qword_101697398);
            id v170 = (void *)static OS_os_log.crlSendACopy;
            uint64_t v171 = swift_initStackObject();
            *(_OWORD *)(v171 + 16) = v288;
            uint64_t v172 = *(void *)(v260 + 16);
            id v173 = v170;
            swift_release();
            v302[0] = v172;
            uint64_t v174 = dispatch thunk of CustomStringConvertible.description.getter();
            unint64_t v175 = v287;
            *(void *)(v171 + 56) = &type metadata for String;
            *(void *)(v171 + 64) = v175;
            *(void *)(v171 + 32) = v174;
            *(void *)(v171 + 40) = v176;
            uint64_t v177 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v173, (uint64_t)&_mh_execute_header, v177, (uint64_t)"Unexpected, bucket %{public}@ is invalid", 40, 2, v171);
            swift_setDeallocating();
            swift_arrayDestroy();

            sub_1009F6B7C();
            swift_allocError();
            *uint64_t v178 = 4;
            swift_willThrow();
            swift_release();
            swift_release();

            (*v135)((uint64_t)v300, v296);
            (*v238)(v286, v285);
            (*v242)(v252, (char *)v253);
            (*((void (**)(unint64_t, uint64_t))v25 + 1))(v299, v132);
            return sub_1005174AC((uint64_t)v257);
          }
          uint64_t v297 = v132;
          uint64_t v137 = v298;
          sub_100D5CBCC(v134, v298, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
          uint64_t v138 = v264;
          sub_100522E9C(v137 + *(int *)(v136 + 20), v264, &qword_1016892B0);
          uint64_t v139 = v137 + *(int *)(v136 + 24);
          uint64_t v140 = v266;
          sub_100D5CC34(v139, v266, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
          type metadata accessor for CRLFreehandDrawingShapeItemData(0);
          uint64_t v141 = swift_allocObject();
          sub_100D5CBCC(v140, v141 + *(void *)(*(void *)v141 + 752), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
          *(void *)(v141 + qword_10169E700) = 0;
          sub_10051B3EC(v138, v141 + *(void *)(*(void *)v141 + 632), &qword_1016892B0);
          uint64_t v43 = sub_10068B398(v281, v280, v281, 2);
          uint64_t v142 = (uint64_t)v43 + *(void *)(*v43 + 632);
          swift_beginAccess();
          sub_100522E9C(v142, v138, &qword_1016892B0);
          swift_retain();
          sub_1005057FC(&qword_101686808);
          uint64_t v143 = (uint64_t)v268;
          CRRegister.wrappedValue.getter();
          uint64_t v144 = v267;
          sub_100522E9C(v143, v267, (uint64_t *)&unk_101674520);
          sub_100D5CC9C(v143, type metadata accessor for CRLShapeItemParentAffinity);
          sub_100522F00(v138, &qword_1016892B0);
          swift_release();
          uint64_t v97 = v296;
          if ((*v262)(v144, 1, v296) == 1) {
            break;
          }
          ((void (*)(char *, uint64_t, uint64_t))v295)(v263, v144, v97);
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          id v146 = [v258 getBoardItemForUUID:isa];

          id v147 = (void (**)(char *, uint64_t))v303;
          if (!v146) {
            goto LABEL_45;
          }
          a1 = type metadata accessor for CRLContainerItem(0);
          uint64_t v148 = swift_dynamicCastClass();
          if (!v148)
          {

LABEL_45:
            uint64_t v295 = v25;
            (*v147)(v263, v97);
            id v109 = (void (**)(void *, uint64_t))v147;
LABEL_30:
            id v110 = (void *)static OS_os_log.crlSendACopy;
            uint64_t v111 = swift_initStackObject();
            *(_OWORD *)(v111 + 16) = v288;
            v302[0] = *(void *)(v260 + 16);
            id v112 = v110;
            uint64_t v113 = dispatch thunk of CustomStringConvertible.description.getter();
            unint64_t v114 = v287;
            *(void *)(v111 + 56) = &type metadata for String;
            *(void *)(v111 + 64) = v114;
            *(void *)(v111 + 32) = v113;
            *(void *)(v111 + 40) = v115;
            uint64_t v116 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v112, (uint64_t)&_mh_execute_header, v116, (uint64_t)"Unexpectedly missing parent UUID, strokes will not be added as expected for bucket %{public}@", 93, 2, v111);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_release();

            sub_100D5CC9C(v298, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
            (*v109)(v300, v97);
            uint64_t v98 = v294;
            uint64_t v25 = v295;
            goto LABEL_31;
          }
          uint64_t v149 = v148;
          swift_retain();
          uint64_t v295 = (char *)v146;
          sub_1005174AC((uint64_t)v257);
          unint64_t v150 = v261;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v302[0] = v150;
          unint64_t v153 = sub_100956EE4(v149);
          uint64_t v154 = *(void *)(v150 + 16);
          BOOL v155 = (v152 & 1) == 0;
          uint64_t v156 = v154 + v155;
          if (__OFADD__(v154, v155))
          {
            __break(1u);
            goto LABEL_99;
          }
          char v157 = v152;
          if (*(void *)(v150 + 24) >= v156)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_100980EB4();
            }
          }
          else
          {
            sub_100968B5C(v156, isUniquelyReferenced_nonNull_native);
            unint64_t v158 = sub_100956EE4(v149);
            if ((v157 & 1) != (v159 & 1)) {
              goto LABEL_106;
            }
            unint64_t v153 = v158;
          }
          uint64_t v108 = v291;
          a1 = v302[0];
          swift_bridgeObjectRelease();
          if (v157)
          {
            uint64_t v160 = swift_bridgeObjectRetain();
          }
          else
          {
            *(void *)(a1 + 8 * (v153 >> 6) + 64) |= 1 << v153;
            uint64_t v161 = 8 * v153;
            *(void *)(*(void *)(a1 + 48) + v161) = v149;
            *(void *)(*(void *)(a1 + 56) + v161) = _swiftEmptyArrayStorage;
            uint64_t v162 = *(void *)(a1 + 16);
            uint64_t v163 = v162 + 1;
            BOOL v164 = __OFADD__(v162, 1);
            swift_bridgeObjectRetain();
            if (v164) {
              goto LABEL_100;
            }
            *(void *)(a1 + 16) = v163;
            id v165 = v295;
            uint64_t v160 = a1;
          }
          uint64_t v166 = *(void *)(v160 + 56);
          unint64_t v261 = v160;
          swift_bridgeObjectRelease();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          Class v167 = (void (**)(char *, uint64_t))v303;
          uint64_t v98 = v294;
          if (*(void *)((*(void *)(v166 + 8 * v153) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v166 + 8 * v153) & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_release();
          id v168 = v295;

          double v169 = *v167;
          uint64_t v97 = v296;
          (*v167)(v263, v296);
          sub_100D5CC9C(v298, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
          v169(v300, v97);
          uint64_t v257 = sub_100D59BC0;
LABEL_31:
          (*((void (**)(unint64_t, uint64_t))v25 + 1))(v299, v297);
          uint64_t v107 = v284;
        }
        uint64_t v295 = v25;
        sub_100522F00(v144, (uint64_t *)&unk_101674520);
        id v109 = (void (**)(void *, uint64_t))v303;
        goto LABEL_30;
      }
      sub_100522F00(v90, (uint64_t *)&unk_10169A770);
      double v223 = (void *)static OS_os_log.crlSendACopy;
      uint64_t v224 = swift_initStackObject();
      *(_OWORD *)(v224 + 16) = v288;
      v302[0] = *(void *)(v255 + OBJC_IVAR____TtC8Freeform34CRLFreehandDrawingBucketSyncRecord_bucketIndex);
      id v225 = v223;
      uint64_t v226 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v227 = v287;
      *(void *)(v224 + 56) = &type metadata for String;
      *(void *)(v224 + 64) = v227;
      *(void *)(v224 + 32) = v226;
      *(void *)(v224 + 40) = v228;
      uint64_t v229 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v225, (uint64_t)&_mh_execute_header, v229, (uint64_t)"Failed to create bucket for %{public}@", 38, 2, v224);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1009F6B7C();
      swift_allocError();
      *id v230 = 4;
      swift_willThrow();
      swift_release();

      (*v242)(v252, (char *)v253);
    }
    return sub_1005174AC((uint64_t)v257);
  }
  return result;
}

void sub_100D59BC0(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
}

uint64_t sub_100D59BD0@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_unknownObjectRetain();
}

uint64_t sub_100D59BE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 16) + 8))(ObjectType);
  *a2 = result;
  a2[1] = v6;
  return result;
}

double *sub_100D59C40(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
    uint64_t v5 = 4;
    uint64_t v17 = v3;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      uint64_t v8 = v7;
      uint64_t v9 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      uint64_t v10 = sub_1008F170C(v7);
      if (v1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v4;
      }
      uint64_t v12 = v10;
      uint64_t v13 = v11;

      if (v12)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_100F642C8(0, *((void *)v4 + 2) + 1, 1, v4);
        }
        unint64_t v15 = *((void *)v4 + 2);
        unint64_t v14 = *((void *)v4 + 3);
        if (v15 >= v14 >> 1) {
          uint64_t v4 = sub_100F642C8((double *)(v14 > 1), v15 + 1, 1, v4);
        }
        *((void *)v4 + 2) = v15 + 1;
        uint64_t v6 = &v4[2 * v15];
        *((void *)v6 + 4) = v12;
        *((void *)v6 + 5) = v13;
        uint64_t v3 = v17;
      }
      ++v5;
      if (v9 == v3)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

double *sub_100D59DF4(unint64_t a1, void *a2)
{
  unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v6 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = i - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * i);
          swift_retain();
          uint64_t v8 = i - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        uint64_t v9 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem());
        *(void *)&v9[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
        *(void *)&v9[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
        *(void *)&v9[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
        *(void *)&v9[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
        *(void *)&v9[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v7;
        uint64_t v10 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
        v13.receiver = v9;
        v13.super_class = v10;
        id v11 = a2;
        [super init];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        if (v8 == v4)
        {
          swift_bridgeObjectRelease();
          return (double *)v14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100D59FDC(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), unsigned char *a4, void *a5, char *a6, uint64_t a7)
{
  uint64_t v141 = a7;
  uint64_t v142 = a6;
  uint64_t v143 = a5;
  uint64_t v144 = a4;
  id v145 = a3;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for UUID();
  __chkstk_darwin(v146, v17);
  uint64_t v19 = (char *)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v129 - v22;
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v129 - v26;
  __chkstk_darwin(v28, v29);
  uint64_t v32 = *(void *)(a1 + 32);
  if (!v32) {
    goto LABEL_7;
  }
  uint64_t v139 = (char *)&v129 - v30;
  uint64_t v140 = v31;
  type metadata accessor for CRLBoardSyncRemoteRecord(0);
  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return result;
  }
  type metadata accessor for CRLBoardItemSyncRemoteRecord(0);
  uint64_t v34 = swift_dynamicCastClass();
  uint64_t v35 = v139;
  if (!v34)
  {
LABEL_7:
    sub_1009F6B7C();
    swift_allocError();
    *uint64_t v46 = 8;
    return swift_willThrow();
  }
  uint64_t v132 = v19;
  uint64_t v133 = v23;
  uint64_t v134 = v34;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
  uint64_t v137 = v34 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  uint64_t v37 = v146;
  uint64_t v130 = v36;
  uint64_t v131 = v140 + 16;
  uint64_t v38 = v140;
  ((void (*)(char *))v36)(v139);
  uint64_t v39 = a2 + *(void *)(*(void *)a2 + 632);
  swift_beginAccess();
  sub_100522E9C(v39, (uint64_t)v16, (uint64_t *)&unk_101683E10);
  uint64_t v138 = v32;
  swift_unknownObjectRetain();
  uint64_t v136 = sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101683E10);
  uint64_t v135 = sub_100D5CCFC((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  LOBYTE(v39) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v41 = v38 + 8;
  uint64_t v40 = v42;
  uint64_t v43 = v27;
  uint64_t v44 = v37;
  v42(v43, v37);
  v42(v35, v37);
  if (v39) {
    return swift_unknownObjectRelease();
  }
  uint64_t v45 = (uint64_t)v145 + *(void *)(*(void *)v145 + 632);
  swift_beginAccess();
  sub_100522E9C(v45, (uint64_t)v16, (uint64_t *)&unk_101683E10);
  CRRegister.wrappedValue.getter();
  sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101683E10);
  LOBYTE(v45) = dispatch thunk of static Equatable.== infix(_:_:)();
  v40(v35, v37);
  if (v45) {
    return swift_unknownObjectRelease();
  }
  uint64_t v47 = sub_100CE155C(v134);
  if (!v47)
  {
    sub_1009F6B7C();
    swift_allocError();
    unsigned char *v51 = 5;
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  uint64_t v48 = v47;
  (*(void (**)(void))(*v47 + 264))();
  uint64_t v49 = v140;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(v12, 1, v37) == 1)
  {
    sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
    sub_1009F6B7C();
    swift_allocError();
    *uint64_t v50 = 11;
    swift_willThrow();
    swift_unknownObjectRelease();
    return swift_release();
  }
  id v145 = v40;
  uint64_t v137 = v41;
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v133, v12, v37);
  unint64_t v52 = v48[3];
  BOOL v53 = sub_1002094A4() >= v52;
  uint64_t v54 = v48;
  if (v53)
  {
    uint64_t v73 = (void (**)(void))(*v48 + 408);
    uint64_t v74 = *v73;
    uint64_t v75 = ((uint64_t (*)(void))*v73)();
    if ((v76 & 1) == 0
      || v75 != 3
      || (id v77 = [self standardUserDefaults],
          unsigned int v78 = [v77 BOOLForKey:@"CRLImageItemsAreUnsupportedWhenDownloadingSendACopyUserDefault"], v77, !v78))
    {
      id v79 = sub_1009F3230((uint64_t)v54, v143);
      v74();
      char v81 = v80;
      uint64_t v83 = v132;
      uint64_t v82 = v133;
      v130(v132, v133, v44);
      if ((v81 & 1) == 0)
      {
        swift_unknownObjectRelease();
        swift_release();

        uint64_t v84 = (uint64_t (*)(char *, uint64_t))v145;
        v145(v83, v44);
        uint64_t result = v84(v82, v44);
        unsigned char *v144 = 1;
        return result;
      }
      uint64_t v143 = v54;
      uint64_t v144 = v79;
      double v96 = v142;
      uint64_t v140 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
      uint64_t v97 = *(char **)&v142[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
      uint64_t v98 = *(void (**)(uint64_t))(**(void **)&v97[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                           + 256);
      id v99 = v97;
      uint64_t v100 = swift_retain();
      id v101 = v139;
      v98(v100);

      swift_release();
      char v102 = static UUID.== infix(_:_:)();
      v145(v101, v44);
      if (v102)
      {
        uint64_t v103 = *(void **)&v96[v140];
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v104 = swift_allocObject();
        *(_OWORD *)(v104 + 16) = xmmword_101177E70;
        uint64_t v105 = v144;
        *(void *)(v104 + 32) = v144;
        uint64_t v147 = v104;
        specialized Array._endMutation()();
        uint64_t v106 = v147;
        id v107 = v103;
        id v108 = v105;
        uint64_t v109 = NSNotFound.getter();
        sub_1005057FC((uint64_t *)&unk_101683E00);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        *(void *)(inited + 32) = v109;
        *(void *)(inited + 40) = v106;
        unint64_t v111 = sub_100A45CB0((void *)inited);
        swift_setDeallocating();
        swift_bridgeObjectRetain();
        sub_1005057FC(&qword_10169DFA0);
        swift_arrayDestroy();
        uint64_t v112 = v111;
        uint64_t v113 = v141;
        goto LABEL_34;
      }
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      id v108 = [v96 getBoardItemForUUID:isa];

      uint64_t v115 = v144;
      if (v108)
      {
        type metadata accessor for CRLContainerItem(0);
        if (swift_dynamicCastClass())
        {
          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t v116 = swift_allocObject();
          *(_OWORD *)(v116 + 16) = xmmword_101177E70;
          *(void *)(v116 + 32) = v115;
          uint64_t v147 = v116;
          specialized Array._endMutation()();
          uint64_t v117 = v147;
          id v107 = v115;
          uint64_t v118 = NSNotFound.getter();
          sub_1005057FC((uint64_t *)&unk_101683E00);
          uint64_t v119 = swift_initStackObject();
          *(_OWORD *)(v119 + 16) = xmmword_10117E810;
          *(void *)(v119 + 32) = v118;
          *(void *)(v119 + 40) = v117;
          unint64_t v120 = sub_100A45CB0((void *)v119);
          swift_setDeallocating();
          swift_bridgeObjectRetain();
          sub_1005057FC(&qword_10169DFA0);
          swift_arrayDestroy();
          uint64_t v112 = v120;
          uint64_t v113 = v141;
LABEL_34:
          uint64_t v121 = v148;
          sub_10084BFA8(v112, v113);
          if (v121)
          {
            swift_unknownObjectRelease();
            swift_release();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v123 = (uint64_t (*)(char *, uint64_t))v145;
            uint64_t v122 = v146;
            v145(v132, v146);
            return v123(v133, v122);
          }
          else
          {
            uint64_t v124 = v146;
            uint64_t v125 = v132;
            swift_unknownObjectRelease();
            swift_release();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v126 = (uint64_t (*)(char *, uint64_t))v145;
            v145(v125, v124);
            return v126(v133, v124);
          }
        }

        uint64_t v44 = v146;
      }
      sub_1009F6B7C();
      swift_allocError();
      unsigned char *v127 = 10;
      swift_willThrow();
      swift_unknownObjectRelease();
      swift_release();

      double v128 = (uint64_t (*)(char *, uint64_t))v145;
      v145(v132, v44);
      return v128(v133, v44);
    }
  }
  unsigned char *v144 = 1;
  uint64_t v55 = v54;
  if (v54[16]) {
    goto LABEL_18;
  }
  uint64_t v56 = (*(uint64_t (**)(void))(*(void *)v54 + 408))();
  if ((v57 & 1) == 0) {
    goto LABEL_26;
  }
  if (v56 == 3
    && (uint64_t v58 = self,
        id v59 = [v58 standardUserDefaults],
        unsigned int v60 = [v59 BOOLForKey:@"CRLImageItemsAreUnsupportedWhenDownloadingSendACopyUserDefault"], v59, v60)&& (v61 = objc_msgSend(v58, "standardUserDefaults"), v62 = objc_msgSend(v61, "BOOLForKey:", @"CRLUnsupportedBoardItemsPropagatesToBoardUserDefault"), v61, v62))
  {
LABEL_18:
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v63 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v64 = swift_initStackObject();
    *(_OWORD *)(v64 + 16) = xmmword_10117E810;
    uint64_t v65 = *(void (**)(void))(*(void *)v55 + 256);
    id v66 = v63;
    uint64_t v67 = v139;
    v65();
    uint64_t v68 = UUID.uuidString.getter();
    uint64_t v70 = v69;
    v145(v67, v44);
    *(void *)(v64 + 56) = &type metadata for String;
    *(void *)(v64 + 64) = sub_100528BE4();
    *(void *)(v64 + 32) = v68;
    *(void *)(v64 + 40) = v70;
    uint64_t v71 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v71, (uint64_t)"Unsupported board item is causing entire board to be unsupported: %{public}@", 76, 2, v64);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_1009F6B7C();
    swift_allocError();
    *unint64_t v72 = 14;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v145)(v133, v44);
  }
  else
  {
LABEL_26:
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v85 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v86 = swift_initStackObject();
    *(_OWORD *)(v86 + 16) = xmmword_10117E810;
    uint64_t v87 = *(void (**)(void))(*(void *)v55 + 256);
    id v88 = v85;
    unint64_t v89 = v139;
    v87();
    uint64_t v90 = UUID.uuidString.getter();
    uint64_t v92 = v91;
    uint64_t v93 = v89;
    id v94 = (uint64_t (*)(char *, uint64_t))v145;
    v145(v93, v44);
    *(void *)(v86 + 56) = &type metadata for String;
    *(void *)(v86 + 64) = sub_100528BE4();
    *(void *)(v86 + 32) = v90;
    *(void *)(v86 + 40) = v92;
    uint64_t v95 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v88, (uint64_t)&_mh_execute_header, v95, (uint64_t)"Skipping item as unsupported: %{public}@", 40, 2, v86);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_unknownObjectRelease();
    swift_release();

    return v94(v133, v44);
  }
}

char *sub_100D5AE6C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  char v102 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for CRLContainerItemCRDTData(0);
  uint64_t v10 = *(void *)(v123 - 8);
  __chkstk_darwin(v123, v11);
  uint64_t v101 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v93 - v15;
  uint64_t v119 = sub_1005057FC((uint64_t *)&unk_101683E10);
  uint64_t v17 = *(char **)(v119 - 8);
  __chkstk_darwin(v119, v18);
  uint64_t v100 = (uint64_t)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v93 - v22;
  uint64_t v24 = sub_1005057FC(&qword_10169AD58);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v103 = (uint64_t)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v106 = (char *)&v93 - v29;
  __chkstk_darwin(v30, v31);
  uint64_t v124 = (uint64_t)&v93 - v32;
  uint64_t v33 = sub_1005057FC(&qword_10169AD60);
  __chkstk_darwin(v33 - 8, v34);
  uint64_t v107 = (uint64_t)&v93 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v37);
  uint64_t v105 = (char *)&v93 - v38;
  __chkstk_darwin(v39, v40);
  uint64_t v122 = (uint64_t)&v93 - v41;
  swift_beginAccess();
  unint64_t v108 = *(void *)(a1 + 48);
  unint64_t v42 = v108;
  if (!(v108 >> 62))
  {
    uint64_t v43 = *(void *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v43) {
      goto LABEL_3;
    }
LABEL_47:
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    goto LABEL_48;
  }
LABEL_46:
  swift_bridgeObjectRetain();
  uint64_t v90 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t v42 = v108;
  uint64_t v43 = v90;
  if (!v90) {
    goto LABEL_47;
  }
LABEL_3:
  uint64_t v95 = v43;
  double v96 = v9;
  uint64_t v97 = v5;
  uint64_t v44 = 0;
  uint64_t v9 = 0;
  unint64_t v104 = v42 & 0xC000000000000001;
  uint64_t v109 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  id v110 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  id v99 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  uint64_t v98 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  id v94 = (uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v45 = 4;
  uint64_t v17 = (char *)&qword_10169AD60;
  uint64_t v10 = v122;
  uint64_t v117 = v23;
  uint64_t v118 = v16;
  do
  {
    uint64_t v23 = (char *)(v45 - 4);
    uint64_t v116 = v45;
    if (v104)
    {
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v46 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(v42 + 8 * v45);
      swift_retain();
      uint64_t v46 = v23 + 1;
      if (__OFADD__(v23, 1))
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    if (v9 && v44)
    {
      swift_bridgeObjectRelease();
      if (qword_10166FA90 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v84 = (id)static OS_os_log.crlSendACopy;
      uint64_t v85 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v84, (uint64_t)&_mh_execute_header, v85, (uint64_t)"Unexpected child found, the rootContainers are populated. Exiting loop early.", 77, 2, (uint64_t)_swiftEmptyArrayStorage);
      swift_release();

      return v9;
    }
    unint64_t v114 = v46;
    uint64_t v47 = *(void *)(v6 + 32);
    if (!v47 || (type metadata accessor for CRLBoardItemSyncRemoteRecord(0), (uint64_t v48 = swift_dynamicCastClass()) == 0))
    {
      swift_bridgeObjectRelease();
      sub_1009F6B7C();
      swift_allocError();
      *uint64_t v83 = 8;
      swift_willThrow();
      swift_release();
      goto LABEL_49;
    }
    uint64_t v49 = v48;
    uint64_t v115 = v44;
    swift_unknownObjectRetain();
    uint64_t v50 = sub_100CE155C(v49);
    if (!v50)
    {
      swift_bridgeObjectRelease();
      sub_1009F6B7C();
      swift_allocError();
      *uint64_t v86 = 5;
      swift_willThrow();
      swift_release();
      swift_unknownObjectRelease();
      goto LABEL_49;
    }
    uint64_t v51 = v50;
    uint64_t v112 = *v110;
    uint64_t v113 = v6;
    v112(v10, 1, 1, v119);
    unint64_t v52 = *v109;
    (*v109)(v124, 1, 1, v123);
    unint64_t v53 = *(void *)(v49 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData + 8);
    unint64_t v120 = v9;
    uint64_t v121 = v47;
    if (v53 >> 60 != 15)
    {
      sub_100510D4C(*(void *)(v49 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData), v53);
      sub_100D5CCFC(&qword_10168B268, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
      CRDT.init(serializedData:)();
      if (v3)
      {
        swift_errorRelease();
        uint64_t v54 = 1;
      }
      else
      {
        uint64_t v54 = 0;
      }
      uint64_t v55 = v124;
      sub_100522F00(v124, &qword_10169AD58);
      uint64_t v56 = (uint64_t)v106;
      v52((uint64_t)v106, v54, 1, v123);
      sub_10051B3EC(v56, v55, &qword_10169AD58);
      uint64_t v9 = v120;
      uint64_t v3 = 0;
    }
    char v57 = (uint64_t *)(v49 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData);
    unint64_t v58 = *(void *)(v49 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData + 8);
    uint64_t v59 = (uint64_t)v118;
    if (v58 >> 60 == 15)
    {
      uint64_t v60 = v119;
      uint64_t v61 = v122;
    }
    else
    {
      sub_100510D4C(*v57, v58);
      sub_100523288((unint64_t *)&qword_10168B238, (uint64_t *)&unk_101683E10);
      uint64_t v60 = v119;
      CRDT.init(serializedData:)();
      uint64_t v61 = v122;
      if (v3)
      {
        swift_errorRelease();
        uint64_t v3 = 0;
        uint64_t v62 = 1;
      }
      else
      {
        uint64_t v62 = 0;
      }
      sub_100522F00(v61, &qword_10169AD60);
      uint64_t v63 = (uint64_t)v105;
      v112((uint64_t)v105, v62, 1, v60);
      sub_10051B3EC(v63, v61, &qword_10169AD60);
    }
    uint64_t v64 = v107;
    sub_100522E9C(v61, v107, &qword_10169AD60);
    if ((*v99)(v64, 1, v60) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v87 = &qword_10169AD60;
      uint64_t v88 = v64;
LABEL_41:
      sub_100522F00(v88, v87);
      sub_1009F6B7C();
      swift_allocError();
      *unint64_t v89 = 5;
      swift_willThrow();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      sub_100522F00(v124, &qword_10169AD58);
      sub_100522F00(v61, &qword_10169AD60);
      return v9;
    }
    uint64_t v65 = (uint64_t)v117;
    sub_10051B3EC(v64, (uint64_t)v117, (uint64_t *)&unk_101683E10);
    uint64_t v66 = v103;
    sub_100522E9C(v124, v103, &qword_10169AD58);
    if ((*v98)(v66, 1, v123) == 1)
    {
      sub_100522F00(v65, (uint64_t *)&unk_101683E10);
      swift_bridgeObjectRelease();
      uint64_t v87 = &qword_10169AD58;
      uint64_t v88 = v66;
      goto LABEL_41;
    }
    uint64_t v112 = v3;
    sub_100D5CBCC(v66, v59, type metadata accessor for CRLContainerItemCRDTData);
    uint64_t v67 = v65;
    uint64_t v68 = v100;
    sub_100522E9C(v67, v100, (uint64_t *)&unk_101683E10);
    uint64_t v69 = v101;
    sub_100D5CC34(v59, v101, type metadata accessor for CRLContainerItemCRDTData);
    uint64_t v71 = v51[4];
    uint64_t v70 = v51[5];
    uint64_t v72 = v51[2];
    uint64_t v73 = v51[3];
    type metadata accessor for CRLContainerItemData(0);
    uint64_t v74 = swift_allocObject();
    sub_100D5CBCC(v69, v74 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
    uint64_t v75 = v68;
    char v76 = v94;
    sub_10051B3EC(v75, v74 + *(void *)(*(void *)v74 + 632), (uint64_t *)&unk_101683E10);
    uint64_t v77 = v73;
    uint64_t v16 = v102;
    unint64_t v111 = (char *)sub_10068B398(v77, v71, v70, v72);
    unsigned int v78 = *(void (**)(void))(*v51 + 256);
    uint64_t v5 = (uint64_t)v96;
    v78();
    LOBYTE(v74) = static UUID.== infix(_:_:)();
    id v79 = *v76;
    uint64_t v80 = v97;
    uint64_t v81 = (*v76)(v5, v97);
    if (v74)
    {
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      sub_100D5CC9C((uint64_t)v118, type metadata accessor for CRLContainerItemCRDTData);
      sub_100522F00((uint64_t)v117, (uint64_t *)&unk_101683E10);
      sub_100522F00(v124, &qword_10169AD58);
      uint64_t v10 = v122;
      uint64_t v17 = (char *)&qword_10169AD60;
      sub_100522F00(v122, &qword_10169AD60);
      uint64_t v9 = v111;
      uint64_t v3 = v112;
      uint64_t v44 = v115;
    }
    else
    {
      ((void (*)(uint64_t))v78)(v81);
      char v82 = static UUID.== infix(_:_:)();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      v79(v5, v80);
      sub_100D5CC9C((uint64_t)v118, type metadata accessor for CRLContainerItemCRDTData);
      sub_100522F00((uint64_t)v117, (uint64_t *)&unk_101683E10);
      sub_100522F00(v124, &qword_10169AD58);
      uint64_t v10 = v122;
      uint64_t v17 = (char *)&qword_10169AD60;
      sub_100522F00(v122, &qword_10169AD60);
      swift_release();
      if (v82)
      {
        uint64_t v44 = v111;
        uint64_t v3 = v112;
      }
      else
      {
        uint64_t v3 = v112;
        uint64_t v44 = v115;
      }
      uint64_t v9 = v120;
    }
    uint64_t v45 = v116 + 1;
    unint64_t v42 = v108;
  }
  while (v114 != (char *)v95);
  swift_bridgeObjectRelease();
  if (v9 && v44) {
    return v9;
  }
LABEL_48:
  sub_1009F6B7C();
  swift_allocError();
  *uint64_t v91 = 5;
  swift_willThrow();
LABEL_49:
  swift_release();
  swift_release();
  return v9;
}

uint64_t sub_100D5BBA4(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  v2[7] = sub_1005057FC(&qword_101693800);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v2[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_100D5BCD8, 0, 0);
}

uint64_t sub_100D5BCD8()
{
  v0[4] = _swiftEmptyArrayStorage;
  uint64_t v1 = (_UNKNOWN **)(v0 + 4);
  unint64_t v2 = v0[5];
  if (v2 >> 62) {
    goto LABEL_27;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v4 = v0[5];
  if (v3)
  {
LABEL_3:
    unint64_t v5 = 0;
    unint64_t v71 = v2 & 0xC000000000000001;
    uint64_t v72 = v1;
    uint64_t v67 = v4 + 32;
    uint64_t v68 = v2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v1 = &_sScS8IteratorVyx_GScIsMc_ptr;
    uint64_t v69 = v3;
    uint64_t v70 = v0;
    do
    {
      if (v71)
      {
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v5 >= *(void *)(v68 + 16)) {
          goto LABEL_26;
        }
        uint64_t v6 = *(id *)(v67 + 8 * v5);
      }
      uint64_t v7 = v6;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_25;
      }
      unint64_t v2 = (unint64_t)v6;
      uint64_t v73 = CKRecord.allKeys()();
      uint64_t v0 = *(void **)(v73 + 16);
      if (v0)
      {
        uint64_t v9 = v73 + 40;
        do
        {
          swift_bridgeObjectRetain();
          unint64_t v2 = (unint64_t)v7;
          uint64_t v10 = CKRecord.subscript.getter();
          if (!v10) {
            goto LABEL_12;
          }
          unint64_t v2 = v10;
          self;
          uint64_t v11 = swift_dynamicCastObjCClass();
          swift_unknownObjectRelease();
          if (!v11) {
            goto LABEL_12;
          }
          v12._countAndFlagsBits = 0x7465737341;
          v12._object = (void *)0xE500000000000000;
          if (!String.hasSuffix(_:)(v12)) {
            goto LABEL_12;
          }
          swift_bridgeObjectRetain();
          if (__OFSUB__(0, String.count.getter()))
          {
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            swift_bridgeObjectRetain();
            uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v4 = v0[5];
            if (!v3) {
              goto LABEL_28;
            }
            goto LABEL_3;
          }
          String.index(_:offsetBy:)();
          swift_bridgeObjectRelease();
          uint64_t v13 = String.subscript.getter();
          unint64_t v15 = v14;
          unint64_t v2 = (unint64_t)v16;
          swift_bridgeObjectRelease();
          if ((v13 ^ v15) >> 14)
          {
            uint64_t v17 = static String._fromSubstring(_:)();
            uint64_t v19 = v18;
            swift_bridgeObjectRelease();
            unint64_t v2 = (unint64_t)v7;
            uint64_t v20 = sub_100D29F18(v17, v19);
            swift_bridgeObjectRelease();
            if (v20)
            {
              swift_retain();
              unint64_t v2 = (unint64_t)v72;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
              swift_release();
            }
          }
          else
          {
LABEL_12:
            swift_bridgeObjectRelease();
          }
          v9 += 16;
          uint64_t v0 = (void *)((char *)v0 - 1);
        }
        while (v0);
      }
      swift_bridgeObjectRelease();

      uint64_t v0 = v70;
    }
    while (v5 != v69);
    swift_bridgeObjectRelease();
    unint64_t v21 = v70[4];
    uint64_t v1 = (_UNKNOWN **)v72;
  }
  else
  {
LABEL_28:
    swift_bridgeObjectRelease();
    unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
  }
  v0[14] = v21;
  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[15] = v22;
    if (v22) {
      goto LABEL_31;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
LABEL_51:
  swift_bridgeObjectRetain();
  uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  v0[15] = v66;
  if (!v66) {
    goto LABEL_38;
  }
LABEL_31:
  uint64_t v23 = 0;
  v1 -= 2;
  uint64_t v24 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  v0[16] = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock;
  v0[17] = v24;
  while (1)
  {
    uint64_t v25 = v0[14];
    if ((v25 & 0xC000000000000001) != 0)
    {
      uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v26 = *(void *)(v25 + 8 * v23 + 32);
      swift_retain();
    }
    v0[18] = v26;
    v0[19] = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    uint64_t v27 = v0[11];
    uint64_t v28 = v0[12];
    uint64_t v29 = v0[10];
    sub_100522E9C(v26 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_downloadedFileURL, v29, &qword_101672E90);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v27) != 1) {
      break;
    }
    uint64_t v30 = v0[10];
    swift_release();
    sub_100522F00(v30, &qword_101672E90);
    uint64_t v23 = v0[19];
    if (v23 == v0[15]) {
      goto LABEL_38;
    }
  }
  uint64_t v34 = v0[12];
  uint64_t v33 = v0[13];
  uint64_t v35 = v0[10];
  uint64_t v36 = v0[11];
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32);
  v0[20] = v37;
  v0[21] = (v34 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v37(v33, v35, v36);
  uint64_t v38 = v26 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata;
  uint64_t v39 = (uint64_t *)(v38 + *(int *)(type metadata accessor for CRLAssetSyncMetadata() + 20));
  uint64_t v40 = (void *)v39[1];
  if (v40)
  {
    uint64_t v41 = *v39;
    swift_bridgeObjectRetain();
    v0[2] = UUID.uuidString.getter();
    v0[3] = v42;
    v43._countAndFlagsBits = 46;
    v43._object = (void *)0xE100000000000000;
    String.append(_:)(v43);
    v44._countAndFlagsBits = v41;
    v44._object = v40;
    String.append(_:)(v44);
    swift_bridgeObjectRelease();
    uint64_t v45 = v0[2];
    uint64_t v46 = v0[3];
  }
  else
  {
    uint64_t v45 = UUID.uuidString.getter();
    uint64_t v46 = v47;
  }
  v0[22] = v46;
  uint64_t v48 = v0[17];
  uint64_t v49 = v0[6];
  uint64_t v50 = *(void *)(v49 + v0[16]);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v50 + 16));
  uint64_t v51 = *(void **)(v49 + v48);
  if (v51)
  {
    id v52 = *(id *)(v49 + v48);
  }
  else
  {
    uint64_t v53 = v0[17];
    uint64_t v54 = (char *)v0[6];
    id v55 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v56 = v54;
    id v57 = sub_100EAFDE4((uint64_t)v56);

    unint64_t v58 = *(void **)&v54[v53];
    *(void *)&v54[v53] = v57;
    id v52 = v57;

    uint64_t v51 = 0;
  }
  v0[23] = v52;
  uint64_t v59 = v0[13];
  uint64_t v60 = *(os_unfair_lock_s **)(v50 + 16);
  id v61 = v51;
  os_unfair_lock_unlock(v60);
  uint64_t v62 = (void *)swift_task_alloc();
  v0[24] = v62;
  v62[2] = v52;
  v62[3] = v59;
  v62[4] = v45;
  v62[5] = v46;
  uint64_t v63 = (void *)swift_task_alloc();
  v0[25] = v63;
  *uint64_t v63 = v0;
  v63[1] = sub_100D5C374;
  uint64_t v65 = v0[7];
  uint64_t v64 = v0[8];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v64, 0, 0, 0xD00000000000001CLL, 0x8000000101277150, sub_100B95304, v62, v65);
}

uint64_t sub_100D5C374()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100D5C8EC;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 56);
    *(_DWORD *)(v2 + 216) = *(_DWORD *)(v4 + 48);
    *(_DWORD *)(v2 + 220) = *(_DWORD *)(v4 + 64);
    swift_task_dealloc();
    uint64_t v3 = sub_100D5C4A4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100D5C4A4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 160);
  uint64_t v62 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v63 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = v4 + *(int *)(v0 + 220);
  uint64_t v8 = (void *)(v4 + *(int *)(v0 + 216));
  uint64_t v9 = (uint64_t *)(v5 + *(int *)(v6 + 48));
  uint64_t v60 = v9[1];
  uint64_t v61 = *v9;
  uint64_t v10 = v5 + *(int *)(v6 + 64);
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v4, v5, v11);
  v1(v7, v10, v3);
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v63, v3);
  *uint64_t v8 = v61;
  v8[1] = v60;
  sub_100522F00(v4, &qword_101693800);
  uint64_t v12 = *(void *)(v0 + 152);
  if (v12 == *(void *)(v0 + 120))
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  else
  {
    while (1)
    {
      uint64_t v13 = *(void *)(v0 + 112);
      if ((v13 & 0xC000000000000001) != 0)
      {
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v22 = v14;
      }
      else
      {
        uint64_t v22 = *(void *)(v13 + 8 * v12 + 32);
        uint64_t v14 = swift_retain();
      }
      *(void *)(v0 + 144) = v22;
      *(void *)(v0 + 152) = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        return withCheckedThrowingContinuation<A>(isolation:function:_:)(v14, v15, v16, v17, v18, v19, v20, v21);
      }
      uint64_t v23 = *(void *)(v0 + 88);
      uint64_t v24 = *(void *)(v0 + 96);
      uint64_t v25 = *(void *)(v0 + 80);
      sub_100522E9C(v22 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_downloadedFileURL, v25, &qword_101672E90);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23) != 1) {
        break;
      }
      uint64_t v26 = *(void *)(v0 + 80);
      swift_release();
      sub_100522F00(v26, &qword_101672E90);
      uint64_t v12 = *(void *)(v0 + 152);
      if (v12 == *(void *)(v0 + 120)) {
        goto LABEL_8;
      }
    }
    uint64_t v30 = *(void *)(v0 + 96);
    uint64_t v29 = *(void *)(v0 + 104);
    uint64_t v31 = *(void *)(v0 + 80);
    uint64_t v32 = *(void *)(v0 + 88);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
    *(void *)(v0 + 160) = v33;
    *(void *)(v0 + 168) = (v30 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v33(v29, v31, v32);
    uint64_t v34 = v22 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata;
    uint64_t v35 = (uint64_t *)(v34 + *(int *)(type metadata accessor for CRLAssetSyncMetadata() + 20));
    uint64_t v36 = (void *)v35[1];
    if (v36)
    {
      uint64_t v37 = *v35;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = UUID.uuidString.getter();
      *(void *)(v0 + 24) = v38;
      v39._countAndFlagsBits = 46;
      v39._object = (void *)0xE100000000000000;
      String.append(_:)(v39);
      v40._countAndFlagsBits = v37;
      v40._object = v36;
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      uint64_t v41 = *(void *)(v0 + 16);
      uint64_t v42 = *(void *)(v0 + 24);
    }
    else
    {
      uint64_t v41 = UUID.uuidString.getter();
      uint64_t v42 = v43;
    }
    *(void *)(v0 + 176) = v42;
    uint64_t v44 = *(void *)(v0 + 136);
    uint64_t v45 = *(void *)(v0 + 48);
    uint64_t v46 = *(void *)(v45 + *(void *)(v0 + 128));
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v46 + 16));
    uint64_t v47 = *(void **)(v45 + v44);
    if (v47)
    {
      id v48 = *(id *)(v45 + v44);
    }
    else
    {
      uint64_t v49 = *(void *)(v0 + 136);
      uint64_t v50 = *(char **)(v0 + 48);
      id v51 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
      id v52 = v50;
      id v53 = sub_100EAFDE4((uint64_t)v52);

      uint64_t v54 = *(void **)&v50[v49];
      *(void *)&v50[v49] = v53;
      id v48 = v53;

      uint64_t v47 = 0;
    }
    *(void *)(v0 + 184) = v48;
    uint64_t v55 = *(void *)(v0 + 104);
    uint64_t v56 = *(os_unfair_lock_s **)(v46 + 16);
    id v57 = v47;
    os_unfair_lock_unlock(v56);
    unint64_t v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v58;
    v58[2] = v48;
    v58[3] = v55;
    v58[4] = v41;
    v58[5] = v42;
    uint64_t v59 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v59;
    void *v59 = v0;
    v59[1] = sub_100D5C374;
    uint64_t v21 = *(void *)(v0 + 56);
    uint64_t v14 = *(void *)(v0 + 64);
    unint64_t v18 = 0x8000000101277150;
    uint64_t v19 = sub_100B95304;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    unint64_t v17 = 0xD00000000000001CLL;
    uint64_t v20 = v58;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v14, v15, v16, v17, v18, v19, v20, v21);
  }
}

uint64_t sub_100D5C8EC()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100D5C9E0(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 16) + 8);
}

uint64_t sub_100D5C9EC(uint64_t a1)
{
  return *(void *)(*(void *)(a1 + 16) + 16);
}

uint64_t sub_100D5C9F8()
{
  return sub_100D1E424();
}

uint64_t sub_100D5CA10()
{
  return sub_100D1E424();
}

unint64_t sub_100D5CA30(void *a1)
{
  return ((*(void *)(*(void *)(*a1 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
}

uint64_t sub_100D5CA90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + a1 - 32) - 8) + 8))();
}

__n128 sub_100D5CAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + a1 - 32) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t))v5)(a2, a1);
  unint64_t v6 = (*(void *)(v5 + 48) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  __n128 result = *(__n128 *)(v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v7;
  *(__n128 *)(v8 + 16) = result;
  return result;
}

__n128 sub_100D5CB48(__n128 *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1->n128_u64[0] - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  (*(void (**)(uint64_t, unint64_t))(v4 + 32))(a2, (unint64_t)a1->n128_u64+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  unint64_t v6 = (__n128 *)(a2 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  __n128 result = a1[1];
  __n128 *v6 = *a1;
  v6[1] = result;
  return result;
}

uint64_t sub_100D5CBCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100D5CC34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100D5CC9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100D5CCFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLSendACopyBoardDataHandlerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100D5CE10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSendACopyBoardDataHandlerError()
{
  return &type metadata for CRLSendACopyBoardDataHandlerError;
}

unint64_t sub_100D5CE4C()
{
  unint64_t result = qword_10169AD68;
  if (!qword_10169AD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169AD68);
  }
  return result;
}

uint64_t sub_100D5CEA0(void *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t result = (uint64_t)[a1 respondsToSelector:"shouldSuppressMiniFormatter"];
  if (result)
  {
    uint64_t result = (uint64_t)[a1 shouldSuppressMiniFormatter];
    if (result)
    {
      uint64_t result = swift_beginAccess();
      *(unsigned char *)(a3 + 16) = 1;
      *a2 = 1;
    }
  }
  return result;
}

id sub_100D5CF68()
{
  id v1 = [v0 editorController];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  if (type metadata accessor for CRLWPEditor()) {
    ObjCClassFromMetadatCGFloat a = swift_getObjCClassFromMetadata();
  }
  else {
    ObjCClassFromMetadatCGFloat a = 0;
  }
  id v4 = [v2 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  uint64_t v5 = swift_dynamicCastClass();
  if (!v5)
  {

    swift_unknownObjectRelease();
    return 0;
  }
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(v0, "repForInfo:", *(void *)(v5
                                                                                    + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)));
  swift_unknownObjectRelease();

  return v6;
}

NSNotificationName sub_100D5D048()
{
  qword_10171C4B0 = (uint64_t)UIContentSizeCategoryDidChangeNotification;
  return UIContentSizeCategoryDidChangeNotification;
}

void sub_100D5D060()
{
  qword_10171C4B8 = 0;
}

void sub_100D5D06C()
{
  qword_10171C4C0 = 0x4030000000000000;
}

void sub_100D5D07C()
{
  qword_10171C4C8 = 0x4024000000000000;
}

CALayerCornerCurve sub_100D5D08C()
{
  qword_10171C4D0 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

uint64_t sub_100D5D0A4()
{
  uint64_t result = sub_1003E86EC();
  uint64_t v1 = 10;
  if (result) {
    uint64_t v1 = 5;
  }
  qword_10171C4D8 = v1;
  return result;
}

double sub_100D5D0D4()
{
  if (qword_10166FFC0 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_10171C588;
  if (qword_10166FF50 != -1) {
    swift_once();
  }
  double result = (v0 + *(double *)&qword_10171C518 + *(double *)&qword_10171C518) * 0.5;
  *(double *)&qword_10171C4E0 = result;
  return result;
}

CALayerCornerCurve sub_100D5D178()
{
  qword_10171C4E8 = (uint64_t)kCACornerCurveCircular;
  return kCACornerCurveCircular;
}

id sub_100D5D190(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_10171C4F0);
}

id sub_100D5D1A4(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_tertiarySystemBackgroundColor, &qword_10171C4F8);
}

id sub_100D5D1B8(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_systemBackgroundColor, &qword_10171C500);
}

double sub_100D5D1CC()
{
  if (qword_10166FFB8 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_10171C580;
  if (qword_101670020 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_10171C5E8;
  if (qword_10166FFC8 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_10171C590;
  if (qword_10166FFD0 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_10171C598;
  if (qword_10166FF48 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_10171C510;
  if (qword_10166FF68 != -1) {
    swift_once();
  }
  double result = v0 + v0 + v1 + v2 + v2 + v3 + v3 + v4 + v4 - *(double *)&qword_10171C530;
  *(double *)&qword_10171C508 = result;
  return result;
}

void sub_100D5D374()
{
  qword_10171C510 = 0;
}

void sub_100D5D380()
{
  qword_10171C518 = 0x4018000000000000;
}

id sub_100D5D390(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_tertiarySystemFillColor, &qword_10171C520);
}

id sub_100D5D3A4(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_separatorColor, &qword_10171C528);
}

void sub_100D5D3B8()
{
  qword_10171C530 = 0x3FF0000000000000;
}

void sub_100D5D3C8()
{
  qword_10171C538 = 0x3FF0000000000000;
}

void sub_100D5D3D8()
{
  qword_10171C540 = 0;
}

double sub_100D5D3E4()
{
  if (qword_10166FF50 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_10171C518;
  if (qword_10166FFE0 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_10171C5A8;
  if (qword_10166FFC0 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_10171C588;
  if (qword_10166FFD8 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_10171C5A0;
  if (qword_10166FF70 != -1) {
    swift_once();
  }
  double result = v0 + v1 + v2 + (v3 - *(double *)&qword_10171C538) * 0.5;
  *(double *)&qword_10171C548 = result;
  return result;
}

id sub_100D5D540(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_systemBackgroundColor, &qword_10171C550);
}

void sub_100D5D554()
{
  qword_10171C558 = 0x4046000000000000;
}

UIFontTextStyle sub_100D5D564()
{
  qword_10171C560 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

void sub_100D5D57C()
{
  qword_10171C568 = 0x4034000000000000;
}

UIFontWeight sub_100D5D58C()
{
  UIFontWeight result = UIFontWeightLight;
  qword_10171C570 = *(void *)&UIFontWeightLight;
  return result;
}

void sub_100D5D5A4(uint64_t a1)
{
}

void sub_100D5D5B0()
{
  qword_10171C580 = 0x4046000000000000;
}

void sub_100D5D5C0()
{
  qword_10171C588 = 0x4041000000000000;
}

void sub_100D5D5D0()
{
  qword_10171C590 = 0;
}

void sub_100D5D5DC()
{
  qword_10171C598 = 0;
}

double sub_100D5D5E8()
{
  if (qword_10166FF70 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_10171C538 + 20.0;
  *(double *)&qword_10171C5A0 = *(double *)&qword_10171C538 + 20.0;
  return result;
}

void sub_100D5D644()
{
  qword_10171C5A8 = 0;
}

UIFontTextStyle sub_100D5D650()
{
  qword_10171C5B0 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

void sub_100D5D668()
{
  qword_10171C5B8 = 0x4031000000000000;
}

UIFontWeight sub_100D5D678()
{
  UIFontWeight result = UIFontWeightMedium;
  qword_10171C5C0 = *(void *)&UIFontWeightMedium;
  return result;
}

void sub_100D5D690(uint64_t a1)
{
}

id sub_100D5D69C(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_10171C5D0);
}

id sub_100D5D6B0(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_labelColor, &qword_10171C5D8);
}

id sub_100D5D6C4(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_10171C5E0);
}

void sub_100D5D6D8()
{
  qword_10171C5E8 = 0x4046000000000000;
}

void sub_100D5D6E8()
{
  qword_10171C5F0 = 0x4041000000000000;
}

UIFontTextStyle sub_100D5D6F8()
{
  qword_10171C5F8 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

void sub_100D5D710()
{
  qword_10171C600 = 0x4031000000000000;
}

UIFontWeight sub_100D5D720()
{
  UIFontWeight result = UIFontWeightMedium;
  qword_10171C608 = *(void *)&UIFontWeightMedium;
  return result;
}

void sub_100D5D738(uint64_t a1)
{
}

id sub_100D5D744(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_labelColor, &qword_10171C618);
}

void sub_100D5D758(uint64_t a1)
{
}

id sub_100D5D764(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_separatorColor, &qword_10171C628);
}

void sub_100D5D778()
{
  qword_10171C630 = 0x4018000000000000;
}

void sub_100D5D788()
{
  qword_10171C638 = 0;
}

void sub_100D5D794()
{
  qword_10171C640 = 0x4024000000000000;
}

void sub_100D5D7A4()
{
  qword_10171C648 = 0x403E000000000000;
}

double sub_100D5D7B4()
{
  double result = 0.0;
  xmmword_10171C650 = xmmword_1011B3630;
  return result;
}

void sub_100D5D7C8(uint64_t a1)
{
}

void sub_100D5D7D4(uint64_t a1, void *a2)
{
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self colorNamed:v3];

  if (v4) {
    *a2 = v4;
  }
  else {
    __break(1u);
  }
}

id sub_100D5D858(uint64_t a1)
{
  return sub_100514A60(a1, (SEL *)&selRef_blackColor, &qword_10171C668);
}

void sub_100D5D86C()
{
  qword_10171C670 = 0x4008000000000000;
}

void sub_100D5D87C()
{
  qword_10171C678 = 0x4024000000000000;
}

id sub_100D5D968()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  [super viewDidLoad];
  sub_100D5E284();
  [v0 updateViewConstraints];
  sub_100D62074();
  sub_100D6308C(0);
  double v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView];
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setAccessibilityLabel:v6];

  return [v1 setAccessibilityContainerType:4];
}

void sub_100D5DB84(char a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  [super viewDidAppear:a1 & 1];
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) == 1)
  {
    id v3 = [v1 view];
    if (v3)
    {
      NSString v4 = v3;
      sub_10050BF48(0, &qword_10169AF08);
      id v5 = [v4 crlaxViewAncestorOfType:swift_getObjCClassFromMetadata()];

      if (v5)
      {
        self;
        NSString v6 = (void *)swift_dynamicCastObjCClass();
        if (v6) {
          [v6 setAccessibilityViewIsModal:0];
        }
      }
      id v7 = [v1 view];
      CRLAccessibilityPostLayoutChangedNotification(v7);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100D5DCF0(char a1, SEL *a2)
{
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  [super setValue:a1 & 1];
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v6 = Strong;
    id v7 = [Strong traitCollection];
    sub_1005919EC(v7, (int)[*(id *)&v6[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v9);
    sub_100591DC0(v9, 0);
    sub_1005393A8((uint64_t)v9);
  }
}

void sub_100D5DE74()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_17;
  }
  id v2 = v1;
  [v1 frame];
  double v4 = v3;
  double v6 = v5;

  id v7 = [v0 view];
  if (!v7)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_super v8 = v7;
  id v9 = [v7 superview];

  if (v9)
  {
    [v9 frame];
    double v11 = v10;
    double v13 = v12;

    if (v4 == v11 && v6 == v13) {
      return;
    }
  }
  id v18 = [v0 view];
  if (!v18) {
    goto LABEL_18;
  }
  id v15 = [v0 view];
  if (!v15)
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v16 = v15;
  id v17 = [v15 superview];

  if (v17)
  {
    [v17 frame];
  }
  [v18 frame];
  [v18 setFrame:];
}

id sub_100D5E038()
{
  sub_100D5E790();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  return [super dealloc];
}

uint64_t sub_100D5E284()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver;
  if (!*(void *)(v0
                  + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver))
  {
    *(void *)&long long aBlock = *(void *)(*(void *)(v0
                                               + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState)
                                   + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_objectDidChange);
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_100D6F130;
    *(void *)(v4 + 24) = v3;
    type metadata accessor for ObservableObjectPublisher();
    swift_retain();
    uint64_t v5 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    *(void *)(v1 + v2) = v5;
    swift_release();
  }
  if (qword_10166FEE8 != -1) {
    swift_once();
  }
  double v6 = (void *)qword_10171C4B0;
  if (qword_10171C4B0)
  {
    id v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_notificationObservers);
    swift_beginAccess();
    uint64_t v8 = *v7;
    if (*(void *)(*v7 + 16))
    {
      id v9 = v6;
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_10095609C(v9);
      if (v11)
      {
        sub_100522D7C(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v25 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v25 + 1))
      {

        sub_100522F00((uint64_t)&aBlock, &qword_101672BF0);
        goto LABEL_14;
      }
    }
    else
    {
      long long aBlock = 0u;
      long long v25 = 0u;
      id v12 = v6;
    }
    sub_100522F00((uint64_t)&aBlock, &qword_101672BF0);
    id v13 = [self defaultCenter];
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v26 = sub_100D6F128;
    uint64_t v27 = v14;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = *(void *)"";
    *(void *)&long long v25 = sub_1005E5680;
    *((void *)&v25 + 1) = &unk_10152BAB8;
    id v15 = _Block_copy(&aBlock);
    id v16 = v6;
    swift_release();
    id v17 = [v13 addObserverForName:v16 object:0 queue:0 usingBlock:v15];
    _Block_release(v15);

    *((void *)&v25 + 1) = swift_getObjectType();
    *(void *)&long long aBlock = v17;
    swift_beginAccess();
    id v18 = v16;
    sub_10057F288((uint64_t)&aBlock, v18);
    swift_endAccess();
  }
LABEL_14:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = (void *)Strong;
    id v21 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);

    [v21 addDecorator:v1];
  }
  sub_1005057FC((uint64_t *)&unk_10168D9A0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10117D8C0;
  *(void *)(v22 + 32) = type metadata accessor for UITraitVerticalSizeClass();
  *(void *)(v22 + 40) = &protocol witness table for UITraitVerticalSizeClass;
  *(void *)(v22 + 48) = type metadata accessor for UITraitHorizontalSizeClass();
  *(void *)(v22 + 56) = &protocol witness table for UITraitHorizontalSizeClass;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_100D5E6B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100D6308C(1);
  }
}

void sub_100D5E710()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100D5DE74();
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_100D62074();
  }
}

uint64_t sub_100D5E790()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_notificationObservers);
  swift_beginAccess();
  uint64_t v22 = v1;
  unint64_t v2 = *v1;
  uint64_t v24 = *v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(*v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v18 >= v6) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v24 + 8 * v18);
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v6) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v24 + 8 * v8);
      if (!v19)
      {
        int64_t v8 = v18 + 2;
        if (v18 + 2 >= v6) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v24 + 8 * v8);
        if (!v19)
        {
          int64_t v8 = v18 + 3;
          if (v18 + 3 >= v6) {
            goto LABEL_25;
          }
          unint64_t v19 = *(void *)(v24 + 8 * v8);
          if (!v19)
          {
            int64_t v8 = v18 + 4;
            if (v18 + 4 >= v6) {
              goto LABEL_25;
            }
            unint64_t v19 = *(void *)(v24 + 8 * v8);
            if (!v19) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v19 - 1) & v19;
    unint64_t v10 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_5:
    char v11 = *(void **)(*(void *)(v2 + 48) + 8 * v10);
    sub_100522D7C(*(void *)(v2 + 56) + 32 * v10, (uint64_t)v28 + 8);
    *(void *)&v28[0] = v11;
    v26[0] = v28[0];
    v26[1] = v28[1];
    uint64_t v27 = v29;
    id v12 = self;
    id v13 = v11;
    id v14 = [v12 defaultCenter];
    sub_100522D7C((uint64_t)v26 + 8, (uint64_t)v25);
    sub_10050F848(v25, v25[3]);
    uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v25);
    id v16 = *(void **)&v26[0];
    sub_100522D7C((uint64_t)v26 + 8, (uint64_t)v25);
    id v17 = v16;
    [v14 removeObserver:v15 name:v17 object:0];

    swift_unknownObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v25);
    uint64_t result = sub_100522F00((uint64_t)v26, &qword_10169AF00);
  }
  int64_t v20 = v18 + 5;
  if (v20 < v6)
  {
    unint64_t v19 = *(void *)(v24 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v8 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v6) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v24 + 8 * v8);
        ++v20;
        if (v19) {
          goto LABEL_24;
        }
      }
    }
    int64_t v8 = v20;
    goto LABEL_24;
  }
LABEL_25:
  swift_release();
  swift_bridgeObjectRelease();
  *uint64_t v22 = sub_100A39A38((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  uint64_t v21 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver;
  if (*(void *)(v23
                 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v23 + v21) = 0;
  return swift_release();
}

id sub_100D5EAB8()
{
  return sub_100D5EAD0(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___topCaptureSnapshotView);
}

id sub_100D5EAC4()
{
  return sub_100D5EAD0(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___bottomCaptureSnapshotView);
}

id sub_100D5EAD0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    unint64_t v5 = (objc_class *)type metadata accessor for CRLScenesNavigatorViewController.PlatformView();
    id v6 = objc_allocWithZone(v5);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v11.receiver = v6;
    v11.super_class = v5;
    id v7 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    int64_t v8 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v7;
    id v4 = v7;

    uint64_t v3 = 0;
  }
  id v9 = v3;
  return v4;
}

id sub_100D5EB80()
{
  return sub_100D5EDA0(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberButton, (uint64_t *)&selRef_grabberButtonPressedWithSender_);
}

void sub_100D5EB94()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v2 = v1;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10080F0BC();
  }
}

id sub_100D5EC60()
{
  return sub_100D5EDA0(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___previousSceneButton, (uint64_t *)&selRef_previousSceneButtonPressed);
}

id sub_100D5ECDC()
{
  return sub_100D5EDA0(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___nextSceneButton, (uint64_t *)&selRef_nextSceneButtonPressedWithSender_);
}

id sub_100D5ED8C()
{
  return sub_100D5EDA0(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___popoverButton, (uint64_t *)&selRef_popoverButtonPressedWithSender_);
}

id sub_100D5EDA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  id v4 = *(void **)&v2[*a1];
  if (v4)
  {
    id v5 = *(id *)&v2[*a1];
  }
  else
  {
    type metadata accessor for CRLScenesNavigatorViewController.NoIntrinsicContentSizePlatformButton();
    uint64_t v7 = *a2;
    id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v9 = v2;
    id v10 = [v8 initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v10 addTarget:v9 action:v7 forControlEvents:64];

    [v10 setPointerInteractionEnabled:1];
    objc_super v11 = *(void **)&v2[v3];
    *(void *)&v2[v3] = v10;
    id v5 = v10;

    id v4 = 0;
  }
  id v12 = v4;
  return v5;
}

void sub_100D5EE80()
{
  if ((*(unsigned char *)(*(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState]
                 + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) & 1) != 0)
    return;
  id v1 = [v0 presentedViewController];
  if (!v1) {
    goto LABEL_6;
  }
  id v4 = v1;
  type metadata accessor for CRLScenesViewController_i();
  id v2 = (void *)swift_dynamicCastClass();
  if (!v2 || ([v2 isBeingDismissed] & 1) != 0)
  {

LABEL_6:
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100E67378();
      swift_unknownObjectRelease();
    }
    return;
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    unsigned __int8 v3 = [self isReduceMotionEnabled];
    sub_100E531D4(v3 ^ 1, 0, 0);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_100D5EFD8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    id v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v7);

  return sub_100522F00((uint64_t)v9, &qword_101672BF0);
}

uint64_t sub_100D5F05C()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_10117DF50;
    *(void *)(v4 + 32) = sub_100D5EC60();
    *(void *)(v4 + 40) = sub_100D5ECDC();
    specialized Array._endMutation()();
    uint64_t v2 = v4;
    *(void *)(v3 + v1) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_100D5F110()
{
  id v1 = sub_100D5EAC4();
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v2 = sub_100D5EAC4();
  [v2 setHidden:1];

  id v3 = [v0 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = v3;
  id v5 = sub_100D5EAC4();
  [v4 addSubview:v5];

  id v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = [v0 view];
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v8 = v7;
  [v7 addSubview:v6];

  id v9 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v6 addSubview:v9];
  id v10 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v9 addSubview:v10];
  objc_super v11 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 addSubview:v11];
  id v12 = sub_100D5EC60();
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v13 = sub_100D5EC60();
  [v10 addSubview:v13];

  id v14 = sub_100D5ECDC();
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v15 = sub_100D5ECDC();
  [v10 addSubview:v15];

  id v16 = sub_100D5ED8C();
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v17 = sub_100D5ED8C();
  [v10 addSubview:v17];

  int64_t v18 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView];
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 addSubview:v18];
  unint64_t v19 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 addSubview:v19];
  id v20 = sub_100D5EB80();
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v21 = sub_100D5EB80();
  [v10 addSubview:v21];

  id v22 = sub_100D5EAB8();
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v23 = sub_100D5EAB8();
  [v23 setHidden:1];

  id v24 = [v0 view];
  if (!v24)
  {
LABEL_9:
    __break(1u);
    return;
  }
  long long v25 = v24;
  id v26 = sub_100D5EAB8();
  [v25 addSubview:v26];
}

id sub_100D5F444()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint);
  }
  else
  {
    id v4 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView) widthAnchor];
    if (qword_10166FF90 != -1) {
      swift_once();
    }
    double v5 = *(double *)&qword_10171C558;
    id v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    double v8 = 0.0;
    if (v13 == 1)
    {
      if (qword_10166FF40 != -1) {
        swift_once();
      }
      double v8 = *(double *)&qword_10171C508;
    }
    id v9 = [v4 constraintEqualToConstant:v5 + v8];

    id v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_100D5F5D8()
{
  return sub_100D61A04(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___baseConstraints, sub_100D5F5F8);
}

uint64_t sub_100D5F5F8(uint64_t a1)
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1011B3640;
  id v3 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView);
  id v4 = [v3 topAnchor];
  double v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView);
  id v6 = [v5 topAnchor];
  id v7 = [v4 constraintEqualToAnchor:v6];

  *(void *)(v2 + 32) = v7;
  id v8 = [v3 leadingAnchor];
  id v9 = [v5 leadingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v2 + 40) = v10;
  id v11 = [v3 trailingAnchor];
  id v12 = [v5 trailingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v2 + 48) = v13;
  id v14 = [v3 bottomAnchor];
  id v15 = [v5 bottomAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v2 + 56) = v16;
  id v17 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView);
  id v18 = [v17 topAnchor];
  id v19 = [v5 topAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v2 + 64) = v20;
  id v21 = [v17 leadingAnchor];
  id v22 = [v5 leadingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v2 + 72) = v23;
  id v24 = [v17 trailingAnchor];
  id v25 = [v5 trailingAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  *(void *)(v2 + 80) = v26;
  id v27 = [v17 bottomAnchor];
  id v28 = [v5 bottomAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v2 + 88) = v29;
  id v140 = *(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView);
  id v30 = [v140 widthAnchor];
  uint64_t v31 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) == 1)
  {
    if (qword_10166FF70 != -1) {
      swift_once();
    }
    uint64_t v32 = &qword_10171C538;
  }
  else
  {
    if (qword_10166FF68 != -1) {
      swift_once();
    }
    uint64_t v32 = &qword_10171C530;
  }
  id v33 = [v30 constraintEqualToConstant:*(double *)v32];

  *(void *)(v2 + 96) = v33;
  id v34 = [v140 topAnchor];
  id v35 = [v17 topAnchor];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    uint64_t v36 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    uint64_t v36 = &qword_10171C510;
  }
  id v37 = [v34 constraintEqualToAnchor:v35 constant:*(double *)v36];

  *(void *)(v2 + 104) = v37;
  id v38 = [v140 leadingAnchor];
  id v39 = [v17 leadingAnchor];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF80 != -1) {
      swift_once();
    }
    Swift::String v40 = &qword_10171C548;
  }
  else
  {
    if (qword_10166FF78 != -1) {
      swift_once();
    }
    Swift::String v40 = &qword_10171C540;
  }
  id v41 = [v38 constraintEqualToAnchor:v39 constant:*(double *)v40];

  *(void *)(v2 + 112) = v41;
  id v42 = [v140 bottomAnchor];
  id v43 = [v17 bottomAnchor];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    uint64_t v44 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    uint64_t v44 = &qword_10171C510;
  }
  id v45 = [v42 constraintEqualToAnchor:v43 constant:-*(double *)v44];

  *(void *)(v2 + 120) = v45;
  id v46 = sub_100D5EC60();
  id v47 = [v46 widthAnchor];

  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FFC0 != -1) {
      swift_once();
    }
    id v48 = &qword_10171C588;
  }
  else
  {
    if (qword_10166FFB8 != -1) {
      swift_once();
    }
    id v48 = &qword_10171C580;
  }
  id v49 = [v47 constraintEqualToConstant:*(double *)v48];

  *(void *)(v2 + 128) = v49;
  id v50 = sub_100D5EC60();
  id v51 = [v50 heightAnchor];

  id v52 = sub_100D5EC60();
  id v53 = [v52 widthAnchor];

  id v54 = [v51 constraintEqualToAnchor:v53];
  *(void *)(v2 + 136) = v54;
  id v55 = sub_100D5EC60();
  id v56 = [v55 topAnchor];

  id v57 = [v17 topAnchor];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    unint64_t v58 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    unint64_t v58 = &qword_10171C510;
  }
  id v59 = [v56 constraintEqualToAnchor:v57 constant:*(double *)v58];

  *(void *)(v2 + 144) = v59;
  id v60 = sub_100D5EC60();
  id v61 = [v60 bottomAnchor];

  id v62 = [v17 bottomAnchor];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    uint64_t v63 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    uint64_t v63 = &qword_10171C510;
  }
  id v64 = [v61 constraintEqualToAnchor:v62 constant:-*(double *)v63];

  *(void *)(v2 + 152) = v64;
  id v65 = sub_100D5ED8C();
  id v66 = [v65 widthAnchor];

  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_101670028 != -1) {
      swift_once();
    }
    uint64_t v67 = &qword_10171C5F0;
  }
  else
  {
    if (qword_101670020 != -1) {
      swift_once();
    }
    uint64_t v67 = &qword_10171C5E8;
  }
  id v68 = [v66 constraintEqualToConstant:*(double *)v67];

  *(void *)(v2 + 160) = v68;
  id v69 = sub_100D5ED8C();
  id v70 = [v69 heightAnchor];

  id v71 = sub_100D5ED8C();
  id v72 = [v71 widthAnchor];

  id v73 = [v70 constraintEqualToAnchor:v72];
  *(void *)(v2 + 168) = v73;
  id v74 = sub_100D5ED8C();
  id v75 = [v74 topAnchor];

  id v76 = [v17 topAnchor];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    uint64_t v77 = &selRef_clearCache;
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    unsigned int v78 = &qword_10171C518;
  }
  else
  {
    uint64_t v77 = &selRef_clearCache;
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    unsigned int v78 = &qword_10171C510;
  }
  id v79 = [v75 constraintEqualToAnchor:v76 constant:*(double *)v78];

  *(void *)(v2 + 176) = v79;
  id v80 = sub_100D5ED8C();
  id v81 = [v80 leadingAnchor];

  id v82 = sub_100D5EC60();
  id v83 = [v82 trailingAnchor];

  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FFD8 != -1) {
      swift_once();
    }
    id v84 = &qword_10171C5A0;
  }
  else
  {
    if (qword_10166FFC8 != -1) {
      swift_once();
    }
    id v84 = &qword_10171C590;
  }
  id v85 = [v81 constraintEqualToAnchor:v83 constant:*(double *)v84];

  *(void *)(v2 + 184) = v85;
  id v86 = sub_100D5ED8C();
  id v87 = [v86 trailingAnchor];

  id v88 = sub_100D5ECDC();
  id v89 = [v88 leadingAnchor];

  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FFD8 != -1) {
      swift_once();
    }
    uint64_t v90 = &qword_10171C5A0;
    uint64_t v91 = &selRef_taggerStateOutsideCore;
  }
  else
  {
    uint64_t v91 = &selRef_taggerStateOutsideCore;
    if (qword_10166FFC8 != -1) {
      swift_once();
    }
    uint64_t v90 = &qword_10171C590;
  }
  id v92 = [v87 constraintEqualToAnchor:v89 constant:-*(double *)v90];

  *(void *)(v2 + 192) = v92;
  id v93 = sub_100D5ED8C();
  id v94 = [v93 bottomAnchor];

  id v95 = [v17 bottomAnchor];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    double v96 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    double v96 = &qword_10171C510;
  }
  id v97 = [v94 constraintEqualToAnchor:v95 constant:-*(double *)v96];

  *(void *)(v2 + 200) = v97;
  id v98 = sub_100D5ECDC();
  id v99 = [v98 widthAnchor];

  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FFC0 != -1) {
      swift_once();
    }
    uint64_t v100 = &qword_10171C588;
  }
  else
  {
    if (qword_10166FFB8 != -1) {
      swift_once();
    }
    uint64_t v100 = &qword_10171C580;
  }
  id v101 = [v99 constraintEqualToConstant:*(double *)v100];

  *(void *)(v2 + 208) = v101;
  id v102 = sub_100D5ECDC();
  id v103 = [v102 heightAnchor];

  id v104 = sub_100D5ECDC();
  id v105 = [v104 widthAnchor];

  id v106 = [v103 v77[234] v105];
  *(void *)(v2 + 216) = v106;
  id v107 = sub_100D5ECDC();
  id v108 = [v107 v91[173]];

  id v109 = [v17 v91[173]];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    id v110 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    id v110 = &qword_10171C510;
  }
  id v111 = [v108 constraintEqualToAnchor:v109 constant:*(double *)v110];

  *(void *)(v2 + 224) = v111;
  id v112 = sub_100D5ECDC();
  id v113 = [v112 bottomAnchor];

  id v114 = [v17 bottomAnchor];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    uint64_t v115 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    uint64_t v115 = &qword_10171C510;
  }
  id v116 = [v113 constraintEqualToAnchor:v114 constant:-*(double *)v115];

  *(void *)(v2 + 232) = v116;
  uint64_t v117 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView);
  id v118 = [v117 widthAnchor];
  id v119 = [v140 widthAnchor];
  id v120 = [v118 v77[234] v119];

  *(void *)(v2 + 240) = v120;
  id v121 = [v117 v91[173]];
  id v122 = [v17 v91[173]];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    uint64_t v123 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    uint64_t v123 = &qword_10171C510;
  }
  id v124 = [v121 constraintEqualToAnchor:v122 constant:*(double *)v123];

  *(void *)(v2 + 248) = v124;
  id v125 = [v117 bottomAnchor];
  id v126 = [v17 bottomAnchor];
  if (*(unsigned char *)(a1 + v31) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    uint64_t v127 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    uint64_t v127 = &qword_10171C510;
  }
  id v128 = [v125 constraintEqualToAnchor:v126 constant:-*(double *)v127];

  *(void *)(v2 + 256) = v128;
  uint64_t v129 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView);
  id v130 = [v129 v91[173]];
  id v131 = [v17 v91[173]];
  id v132 = [v130 v77[234] v131];

  *(void *)(v2 + 264) = v132;
  id v133 = [v129 leadingAnchor];
  id v134 = [v17 leadingAnchor];
  id v135 = [v133 v77[234] v134];

  *(void *)(v2 + 272) = v135;
  id v136 = [v129 bottomAnchor];
  id v137 = [v17 bottomAnchor];
  id v138 = [v136 v77[234] v137];

  *(void *)(v2 + 280) = v138;
  specialized Array._endMutation()();
  return v2;
}

uint64_t sub_100D60B90()
{
  return sub_100D61A04(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberConstraints, sub_100D60BB0);
}

uint64_t sub_100D60BB0(uint64_t a1)
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117E9C0;
  id v3 = sub_100D5EB80();
  id v4 = [v3 widthAnchor];

  if (qword_10166FF90 != -1) {
    swift_once();
  }
  id v5 = [v4 constraintEqualToConstant:*(double *)&qword_10171C558];

  *(void *)(v2 + 32) = v5;
  id v6 = sub_100D5EB80();
  id v7 = [v6 topAnchor];

  id v8 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView);
  id v9 = [v8 topAnchor];
  id v10 = [v7 constraintEqualToAnchor:v9];

  *(void *)(v2 + 40) = v10;
  id v11 = sub_100D5EB80();
  id v12 = [v11 trailingAnchor];

  id v13 = [v8 trailingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v2 + 48) = v14;
  id v15 = sub_100D5EB80();
  id v16 = [v15 bottomAnchor];

  id v17 = [v8 bottomAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v2 + 56) = v18;
  id v19 = sub_100D5ECDC();
  id v20 = [v19 trailingAnchor];

  id v21 = sub_100D5EB80();
  id v22 = [v21 leadingAnchor];

  uint64_t v23 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    id v24 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    id v24 = &qword_10171C510;
  }
  double v25 = *(double *)v24;
  if (*(unsigned char *)(a1 + v23) == 1)
  {
    if (qword_10166FFE0 != -1) {
      swift_once();
    }
    id v26 = &qword_10171C5A8;
  }
  else
  {
    if (qword_10166FFD0 != -1) {
      swift_once();
    }
    id v26 = &qword_10171C598;
  }
  id v27 = [v20 constraintEqualToAnchor:v22 constant:-(v25 + *(double *)v26)];

  *(void *)(v2 + 64) = v27;
  id v28 = [*(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView) trailingAnchor];
  id v29 = sub_100D5EB80();
  id v30 = [v29 leadingAnchor];

  if (*(unsigned char *)(a1 + v23) == 1)
  {
    if (qword_10166FF80 != -1) {
      swift_once();
    }
    uint64_t v31 = &qword_10171C548;
  }
  else
  {
    if (qword_10166FF78 != -1) {
      swift_once();
    }
    uint64_t v31 = &qword_10171C540;
  }
  id v32 = [v28 constraintEqualToAnchor:v30 constant:-*(double *)v31];

  *(void *)(v2 + 72) = v32;
  id v33 = [*(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView) trailingAnchor];
  id v34 = sub_100D5EB80();
  id v35 = [v34 leadingAnchor];

  id v36 = [v33 constraintEqualToAnchor:v35];
  *(void *)(v2 + 80) = v36;
  *(void *)(v2 + 88) = sub_100D5F444();
  specialized Array._endMutation()();
  return v2;
}

uint64_t sub_100D610DC()
{
  return sub_100D61A04(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___noGrabberConstraints, sub_100D610FC);
}

uint64_t sub_100D610FC(uint64_t a1)
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117FBE0;
  id v3 = sub_100D5EC60();
  id v4 = [v3 leadingAnchor];

  id v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView);
  id v6 = [v5 leadingAnchor];
  uint64_t v7 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    id v8 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    id v8 = &qword_10171C510;
  }
  double v9 = *(double *)v8;
  if (*(unsigned char *)(a1 + v7) == 1)
  {
    if (qword_10166FFE0 != -1) {
      swift_once();
    }
    id v10 = &qword_10171C5A8;
  }
  else
  {
    if (qword_10166FFD0 != -1) {
      swift_once();
    }
    id v10 = &qword_10171C598;
  }
  id v11 = [v4 constraintEqualToAnchor:v6 constant:v9 + *(double *)v10];

  *(void *)(v2 + 32) = v11;
  id v12 = sub_100D5ECDC();
  id v13 = [v12 trailingAnchor];

  id v14 = [v5 trailingAnchor];
  if (*(unsigned char *)(a1 + v7) == 1)
  {
    if (qword_10166FF50 != -1) {
      swift_once();
    }
    id v15 = &qword_10171C518;
  }
  else
  {
    if (qword_10166FF48 != -1) {
      swift_once();
    }
    id v15 = &qword_10171C510;
  }
  double v16 = *(double *)v15;
  if (*(unsigned char *)(a1 + v7) == 1)
  {
    if (qword_10166FFE0 != -1) {
      swift_once();
    }
    id v17 = &qword_10171C5A8;
  }
  else
  {
    if (qword_10166FFD0 != -1) {
      swift_once();
    }
    id v17 = &qword_10171C598;
  }
  id v18 = [v13 constraintEqualToAnchor:v14 constant:-(v16 + *(double *)v17)];

  *(void *)(v2 + 40) = v18;
  id v19 = [*(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView) trailingAnchor];
  id v20 = [v5 trailingAnchor];
  if (*(unsigned char *)(a1 + v7) == 1)
  {
    if (qword_10166FF80 != -1) {
      swift_once();
    }
    id v21 = &qword_10171C548;
  }
  else
  {
    if (qword_10166FF78 != -1) {
      swift_once();
    }
    id v21 = &qword_10171C540;
  }
  id v22 = [v19 constraintEqualToAnchor:v20 constant:-*(double *)v21];

  *(void *)(v2 + 48) = v22;
  id v23 = [*(id *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView) trailingAnchor];
  id v24 = [v5 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v2 + 56) = v25;
  specialized Array._endMutation()();
  return v2;
}

uint64_t sub_100D615C8()
{
  return sub_100D61A04(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsCenterAlignedConstraints, (uint64_t (*)(uint64_t))sub_100D615E8);
}

id sub_100D615E8(char *a1)
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117DF50;
  id result = [a1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v4 = result;
  id v5 = [result centerXAnchor];

  id v6 = *(void **)&a1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  id v7 = [v6 centerXAnchor];
  id v8 = [v5 constraintEqualToAnchor:v7];

  *(void *)(v2 + 32) = v8;
  id result = [a1 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  double v9 = result;
  id v10 = [result safeAreaLayoutGuide];

  id v11 = [v10 bottomAnchor];
  id v12 = [v6 bottomAnchor];
  if (qword_10166FEF0 != -1) {
    swift_once();
  }
  id v13 = [v11 constraintEqualToAnchor:v12 constant:*(double *)&qword_10171C4B8];

  *(void *)(v2 + 40) = v13;
  specialized Array._endMutation()();
  return (id)v2;
}

uint64_t sub_100D617C8()
{
  return sub_100D61A04(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsTrailingAlignedConstraints, (uint64_t (*)(uint64_t))sub_100D617E8);
}

id sub_100D617E8(char *a1)
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117DF50;
  id result = [a1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v4 = result;
  id v5 = [result safeAreaLayoutGuide];

  id v6 = [v5 trailingAnchor];
  id v7 = *(void **)&a1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  id v8 = [v7 trailingAnchor];
  id v9 = [v6 constraintEqualToAnchor:v8];

  *(void *)(v2 + 32) = v9;
  id result = [a1 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  id v10 = result;
  id v11 = [result safeAreaLayoutGuide];

  id v12 = [v11 bottomAnchor];
  id v13 = [v7 bottomAnchor];
  if (qword_10166FEF8 != -1) {
    swift_once();
  }
  id v14 = [v12 constraintEqualToAnchor:v13 constant:*(double *)&qword_10171C4C0];

  *(void *)(v2 + 40) = v14;
  specialized Array._endMutation()();
  return (id)v2;
}

uint64_t sub_100D619E4()
{
  return sub_100D61A04(&OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___attachedToZoomControlConstraints, (uint64_t (*)(uint64_t))sub_100D61A6C);
}

uint64_t sub_100D61A04(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + *a1);
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = a2(v2);
    *(void *)(v2 + v3) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

id sub_100D61A6C(char *a1)
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117FBE0;
  id result = [a1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  id v5 = [result widthAnchor];

  id v6 = *(void **)&a1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  id v7 = [v6 widthAnchor];
  id v8 = [v5 constraintEqualToAnchor:v7];

  *(void *)(v2 + 32) = v8;
  id result = [a1 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v9 = result;
  id v10 = [result heightAnchor];

  id v11 = [v6 heightAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v2 + 40) = v12;
  id result = [a1 view];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v13 = result;
  id v14 = [result trailingAnchor];

  id v15 = [v6 trailingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v2 + 48) = v16;
  id result = [a1 view];
  if (result)
  {
    id v17 = result;
    id v18 = [result bottomAnchor];

    id v19 = [v6 bottomAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    *(void *)(v2 + 56) = v20;
    specialized Array._endMutation()();
    return (id)v2;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100D61CE8()
{
  uint64_t v1 = v0;
  id v27 = _swiftEmptyArrayStorage;
  unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v2 = sub_100D5F5D8();
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_14;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v3 + 8 * i + 32);
    }
    id v8 = v7;
    if (([v7 isActive] & 1) == 0)
    {
      id v9 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  uint64_t v10 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  if (v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle])
  {
    unint64_t v11 = sub_100D610DC();
    sub_1006E0CA0(v11);
    unint64_t v12 = sub_100D60B90();
  }
  else
  {
    unint64_t v13 = sub_100D60B90();
    sub_1006E0CA0(v13);
    unint64_t v12 = sub_100D610DC();
  }
  sub_1006E0CA0(v12);
  if (v0[v10] == 1)
  {
    id v14 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState];
    swift_getKeyPath();
    swift_getKeyPath();
    id v15 = v14;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v25 == 1)
    {
      unint64_t v16 = sub_100D617C8();
      sub_1006E0CA0(v16);
      unint64_t v17 = sub_100D615C8();
    }
    else
    {
      unint64_t v21 = sub_100D615C8();
      sub_1006E0CA0(v21);
      unint64_t v17 = sub_100D617C8();
    }
    sub_1006E0CA0(v17);
    unint64_t v20 = sub_100D619E4();
  }
  else
  {
    unint64_t v18 = sub_100D619E4();
    sub_1006E0CA0(v18);
    unint64_t v19 = sub_100D615C8();
    sub_1006E0CA0(v19);
    unint64_t v20 = sub_100D617C8();
  }
  sub_1006E0CA0(v20);
  id v22 = self;
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 deactivateConstraints:isa];

  swift_bridgeObjectRetain();
  Class v24 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 activateConstraints:v24];

  v26.receiver = v1;
  v26.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  [super updateViewConstraints];
  return swift_bridgeObjectRelease();
}

void sub_100D62074()
{
  uint64_t v1 = v0;
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_119;
  }
  unint64_t v3 = v2;
  [v2 setClipsToBounds:0];

  id v4 = [v1 view];
  if (!v4)
  {
LABEL_119:
    __break(1u);
    return;
  }
  id v5 = v4;
  id v6 = self;
  id v7 = [v6 clearColor];
  [v5 setBackgroundColor:v7];

  id v8 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView];
  [v8 setClipsToBounds:0];
  uint64_t v9 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle;
  LODWORD(v7) = v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle];
  id v10 = [v8 layer];
  unint64_t v11 = v10;
  if (v7 == 1)
  {
    [v10 crl_applyDefaultCanvasOverlayUIShadowSettings];
LABEL_7:

    goto LABEL_8;
  }
  if (v10)
  {
    id v12 = [v6 clearColor];
    id v13 = [v12 CGColor];

    [v11 setShadowColor:v13];
    unint64_t v11 = v13;
    goto LABEL_7;
  }
LABEL_8:
  id v14 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView];
  [v14 setClipsToBounds:1];
  id v15 = [v6 clearColor];
  [v14 setBackgroundColor:v15];

  id v16 = [v14 layer];
  if (v16)
  {
    unint64_t v17 = v16;
    if (v1[v9] == 1)
    {
      if (qword_10166FF18 != -1) {
        swift_once();
      }
      unint64_t v18 = &qword_10171C4E0;
    }
    else
    {
      if (qword_10166FF00 != -1) {
        swift_once();
      }
      unint64_t v18 = &qword_10171C4C8;
    }
    [v17 setCornerRadius:*(double *)v18];
  }
  id v19 = [v14 layer];
  if (v19)
  {
    unint64_t v20 = v19;
    if (v1[v9] == 1)
    {
      if (qword_10166FF20 != -1) {
        swift_once();
      }
      unint64_t v21 = &qword_10171C4E8;
    }
    else
    {
      if (qword_10166FF08 != -1) {
        swift_once();
      }
      unint64_t v21 = &qword_10171C4D0;
    }
    id v22 = (id)*v21;
    [v20 setCornerCurve:v22];
  }
  id v23 = [v14 layer];
  if (v23)
  {
    Class v24 = v23;
    if (v1[v9])
    {
      uint64_t v25 = 15;
    }
    else
    {
      if (qword_10166FF10 != -1) {
        swift_once();
      }
      uint64_t v25 = qword_10171C4D8;
    }
    [v24 setMaskedCorners:v25];
  }
  objc_super v26 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView];
  if (qword_10166FF88 != -1) {
    swift_once();
  }
  [v26 setBackgroundColor:qword_10171C550];
  id v27 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView];
  if (v1[v9] == 1)
  {
    if (qword_10166FF38 != -1) {
      swift_once();
    }
    unint64_t v28 = &qword_10171C500;
  }
  else
  {
    id v29 = [v1 traitCollection];
    id v30 = [v29 userInterfaceStyle];

    if (v30 == (id)2)
    {
      if (qword_10166FF30 != -1) {
        swift_once();
      }
      unint64_t v28 = &qword_10171C4F8;
    }
    else
    {
      if (qword_10166FF28 != -1) {
        swift_once();
      }
      unint64_t v28 = &qword_10171C4F0;
    }
  }
  [v27 setBackgroundColor:*v28];
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView];
  if (v1[v9] == 1)
  {
    if (qword_10166FF60 != -1) {
      swift_once();
    }
    id v32 = &qword_10171C528;
  }
  else
  {
    if (qword_10166FF58 != -1) {
      swift_once();
    }
    id v32 = &qword_10171C520;
  }
  [v31 setBackgroundColor:*v32];
  id v33 = *(void **)&v1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView];
  if (v1[v9] == 1)
  {
    if (qword_10166FF60 != -1) {
      swift_once();
    }
    id v34 = &qword_10171C528;
  }
  else
  {
    if (qword_10166FF58 != -1) {
      swift_once();
    }
    id v34 = &qword_10171C520;
  }
  [v33 setBackgroundColor:*v34];
  id v35 = sub_100D5EB80();
  [v35 setHidden:v1[v9]];

  id v36 = self;
  id v37 = [v36 mainBundle];
  NSString v38 = String._bridgeToObjectiveC()();
  NSString v39 = String._bridgeToObjectiveC()();
  id v40 = [v37 localizedStringForKey:v38 value:v39 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v101 = v41;

  id v42 = [v36 mainBundle];
  NSString v43 = String._bridgeToObjectiveC()();
  NSString v44 = String._bridgeToObjectiveC()();
  id v45 = [v42 localizedStringForKey:v43 value:v44 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v46 = sub_100D5EB80();
  if (qword_10166FF98 != -1) {
    swift_once();
  }
  uint64_t v103 = v9;
  uint64_t v47 = qword_10171C560;
  if (qword_10166FFA0 != -1) {
    swift_once();
  }
  uint64_t v48 = qword_10171C568;
  if (qword_10166FFA8 != -1) {
    swift_once();
  }
  UIFontWeight v49 = *(double *)&qword_10171C570;
  if (qword_10166FFB0 != -1) {
    swift_once();
  }
  id v50 = (void *)qword_10171C578;
  sub_100D637C8();
  uint64_t v52 = v51;
  id v53 = self;
  NSString v54 = String._bridgeToObjectiveC()();
  id v102 = v53;
  id v55 = [v53 imageNamed:v54];

  sub_1008F0F2C(v55, v47, v48, 0, v50, 0, 0, v49);
  swift_bridgeObjectRelease();

  id v56 = sub_100D5ED8C();
  if (qword_101670030 != -1) {
    swift_once();
  }
  uint64_t v57 = qword_10171C5F8;
  if (qword_101670038 != -1) {
    swift_once();
  }
  uint64_t v58 = qword_10171C600;
  if (qword_101670040 != -1) {
    swift_once();
  }
  UIFontWeight v59 = *(double *)&qword_10171C608;
  if (v1[v103] == 1)
  {
    if (qword_101670050 != -1) {
      swift_once();
    }
    id v60 = &qword_10171C618;
  }
  else
  {
    if (qword_101670048 != -1) {
      swift_once();
    }
    id v60 = &qword_10171C610;
  }
  id v61 = (id)*v60;
  id v62 = [v36 mainBundle];
  NSString v63 = String._bridgeToObjectiveC()();
  NSString v64 = String._bridgeToObjectiveC()();
  id v65 = [v62 localizedStringForKey:v63 value:v64 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v66;

  NSString v68 = String._bridgeToObjectiveC()();
  id v69 = [v102 systemImageNamed:v68];

  uint64_t v100 = v67;
  sub_1008F0F2C(v69, v57, v58, 0, v61, 0, 0, v59);

  swift_bridgeObjectRelease();
  id v70 = sub_100D5EC60();
  if (qword_10166FFE8 != -1) {
    swift_once();
  }
  uint64_t v71 = qword_10171C5B0;
  if (qword_10166FFF0 != -1) {
    swift_once();
  }
  uint64_t v72 = qword_10171C5B8;
  if (qword_10166FFF8 != -1) {
    swift_once();
  }
  UIFontWeight v73 = *(double *)&qword_10171C5C0;
  if (v1[v103] == 1)
  {
    if (qword_101670010 != -1) {
      swift_once();
    }
    id v74 = &qword_10171C5D8;
  }
  else
  {
    if (qword_101670000 != -1) {
      swift_once();
    }
    id v74 = &qword_10171C5C8;
  }
  id v75 = (void *)*v74;
  if (v1[v103] == 1)
  {
    uint64_t v76 = qword_101670018;
    id v77 = v75;
    if (v76 != -1) {
      swift_once();
    }
    unsigned int v78 = &qword_10171C5E0;
  }
  else
  {
    uint64_t v79 = qword_101670008;
    id v80 = v75;
    if (v79 != -1) {
      swift_once();
    }
    unsigned int v78 = &qword_10171C5D0;
  }
  id v81 = (id)*v78;
  id v82 = (id)*v78;
  NSString v83 = String._bridgeToObjectiveC()();
  id v84 = [v102 systemImageNamed:v83, v100];

  sub_1008F0F2C(v84, v71, v72, 0, v75, v81, 0, v73);
  swift_bridgeObjectRelease();

  id v85 = sub_100D5ECDC();
  uint64_t v86 = qword_10171C5B0;
  uint64_t v87 = qword_10171C5B8;
  UIFontWeight v88 = *(double *)&qword_10171C5C0;
  if (v1[v103] == 1)
  {
    if (qword_101670010 != -1) {
      swift_once();
    }
    id v89 = &qword_10171C5D8;
  }
  else
  {
    if (qword_101670000 != -1) {
      swift_once();
    }
    id v89 = &qword_10171C5C8;
  }
  uint64_t v90 = (void *)*v89;
  if (v1[v103] == 1)
  {
    uint64_t v91 = qword_101670018;
    id v92 = v90;
    if (v91 != -1) {
      swift_once();
    }
    id v93 = &qword_10171C5E0;
  }
  else
  {
    uint64_t v94 = qword_101670008;
    id v95 = v90;
    if (v94 != -1) {
      swift_once();
    }
    id v93 = &qword_10171C5D0;
  }
  id v96 = (id)*v93;
  id v97 = (id)*v93;
  NSString v98 = String._bridgeToObjectiveC()();
  id v99 = [v102 systemImageNamed:v98, v101];

  sub_1008F0F2C(v99, v86, v87, 0, v90, v96, 0, v88);
  swift_bridgeObjectRelease();

  sub_100D63694();
}

void sub_100D6308C(char a1)
{
  id v2 = v1;
  LOBYTE(v3) = a1;
  id v4 = self;
  unsigned __int8 KeyPath = [v4 isReduceMotionEnabled];
  uint64_t v33 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState;
  id v6 = *(void **)&v2[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState];
  swift_getKeyPath();
  swift_getKeyPath();
  id v7 = v6;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if ((aBlock[0] & 1) == 0
    && (v2[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle] & 1) == 0
    && swift_unknownObjectWeakLoadStrong())
  {
    sub_100E531D4([v4 isReduceMotionEnabled] ^ 1, 0, 0);
    swift_unknownObjectRelease();
  }
  id v8 = sub_100D5F444();
  [v8 constant];
  double v10 = v9;

  if (qword_10166FF90 != -1) {
    swift_once();
  }
  unint64_t v11 = (double *)&qword_10171BFF0[2];
  double v12 = *(double *)&qword_10171C558;
  id v13 = *(void **)&v2[v33];
  swift_getKeyPath();
  swift_getKeyPath();
  id v14 = v13;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  double v15 = 0.0;
  if (LOBYTE(aBlock[0]) != 1) {
    goto LABEL_10;
  }
  if (qword_10166FF40 != -1) {
    goto LABEL_33;
  }
  while (1)
  {
    double v15 = *(double *)&qword_10171C508;
LABEL_10:
    if (v10 != v12 + v15)
    {
      char v16 = KeyPath | ~(_BYTE)v3;
      id v17 = sub_100D5F444();
      double v10 = v11[171];
      unint64_t v11 = *(double **)&v2[v33];
      unsigned __int8 KeyPath = swift_getKeyPath();
      swift_getKeyPath();
      if (v16)
      {
        unint64_t v18 = v11;
        static Published.subscript.getter();

        swift_release();
        swift_release();
        double v19 = 0.0;
        if (LOBYTE(aBlock[0]) == 1)
        {
          if (qword_10166FF40 != -1) {
            swift_once();
          }
          double v19 = *(double *)&qword_10171C508;
        }
        [v17 setConstant:v10 + v19];
      }
      else
      {
        unint64_t v20 = v11;
        static Published.subscript.getter();

        swift_release();
        swift_release();
        double v21 = 0.0;
        if (LOBYTE(aBlock[0]) == 1)
        {
          if (qword_10166FF40 != -1) {
            swift_once();
          }
          double v21 = *(double *)&qword_10171C508;
        }
        [v17 setConstant:v10 + v21];

        id v22 = self;
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v2;
        aBlock[4] = sub_100D6F0D0;
        uint64_t v35 = v23;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        void aBlock[2] = sub_100679958;
        void aBlock[3] = &unk_10152BA68;
        Class v24 = _Block_copy(aBlock);
        unsigned __int8 KeyPath = v35;
        uint64_t v25 = v2;
        swift_release();
        [v22 animateWithDuration:v24 animations:0.3];
        _Block_release(v24);
      }
    }
    unint64_t v26 = sub_100D5F05C();
    unint64_t v27 = v26;
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v3) {
        goto LABEL_31;
      }
    }
    if (v3 >= 1) {
      break;
    }
    __break(1u);
LABEL_33:
    swift_once();
  }
  uint64_t v28 = 0;
  do
  {
    if ((v27 & 0xC000000000000001) != 0) {
      id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v29 = *(id *)(v27 + 8 * v28 + 32);
    }
    id v30 = v29;
    ++v28;
    uint64_t v31 = *(void **)&v2[v33];
    swift_getKeyPath();
    swift_getKeyPath();
    id v32 = v31;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    [v30 setEnabled:LOBYTE(aBlock[0])];
  }
  while (v3 != v28);
LABEL_31:
  swift_bridgeObjectRelease_n();
  sub_100D62074();
  sub_100D63694();
}

void sub_100D635EC(void *a1)
{
  id v1 = [a1 view];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v1 superview];

    id v4 = [v3 superview];
    [v4 layoutIfNeeded];
  }
  else
  {
    __break(1u);
  }
}

void sub_100D63694()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v10) {
    char v3 = 0;
  }
  else {
    char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle) ^ 1;
  }
  id v4 = sub_100D5EC60();
  uint64_t v5 = v3 & 1;
  [v4 setAccessibilityElementsHidden:v5];

  id v6 = sub_100D5ED8C();
  [v6 setAccessibilityElementsHidden:v5];

  id v7 = sub_100D5ECDC();
  [v7 setAccessibilityElementsHidden:v5];

  id v8 = sub_100D5EB80();
  sub_100D637C8();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setAccessibilityLabel:v9];
}

uint64_t sub_100D637C8()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v7;
}

uint64_t sub_100D6390C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 316) = a5;
  *(void *)(v5 + 15448) = a4;
  *(void *)(v5 + 15456) = type metadata accessor for CRLSpringLayerAnimation();
  *(void *)(v5 + 15464) = swift_task_alloc();
  *(void *)(v5 + 15472) = swift_task_alloc();
  *(void *)(v5 + 15480) = swift_task_alloc();
  *(void *)(v5 + 15488) = swift_task_alloc();
  *(void *)(v5 + 15496) = swift_task_alloc();
  *(void *)(v5 + 15504) = type metadata accessor for CRLBasicLayerAnimation();
  *(void *)(v5 + 15512) = swift_task_alloc();
  *(void *)(v5 + 15520) = swift_task_alloc();
  *(void *)(v5 + 15528) = swift_task_alloc();
  *(void *)(v5 + 15536) = swift_task_alloc();
  *(void *)(v5 + 15544) = swift_task_alloc();
  *(void *)(v5 + 15552) = swift_task_alloc();
  *(void *)(v5 + 15560) = swift_task_alloc();
  *(void *)(v5 + 15568) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 15576) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100D63A94, v7, v6);
}

void sub_100D63A94()
{
  v832 = v0;
  swift_release();
  uint64_t v6 = self;
  [v6 flush];
  [v6 begin];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = (void *)Strong;
    sub_1009A7364((uint64_t)(v0 + 12376));
    if (*((void *)v0 + 1547))
    {
      long long v9 = *(_OWORD *)(v0 + 12424);
      *((_OWORD *)v0 + 770) = *(_OWORD *)(v0 + 12408);
      *((_OWORD *)v0 + 771) = v9;
      *((_OWORD *)v0 + 772) = *(_OWORD *)(v0 + 12440);
      *((void *)v0 + 1546) = *((void *)v0 + 1557);
      long long v10 = *(_OWORD *)(v0 + 12392);
      *((_OWORD *)v0 + 768) = *(_OWORD *)(v0 + 12376);
      *((_OWORD *)v0 + 769) = v10;
      id v11 = sub_100D5EAB8();
      id v12 = [v11 layer];

      if (!v12)
      {
        __break(1u);
LABEL_256:
        swift_once();
LABEL_127:
        uint64_t v264 = qword_10171B540;
        if (qword_10166F730 != -1) {
          swift_once();
        }
        uint64_t v265 = qword_10171B548;
        if (qword_10166F738 != -1) {
          swift_once();
        }
        uint64_t v266 = qword_10171B550;
        if (qword_10166F740 != -1) {
          swift_once();
        }
        uint64_t v811 = *((void *)v1 + 1937);
        v782 = (void *)*((void *)v1 + 1936);
        uint64_t v804 = *((void *)v1 + 1935);
        uint64_t v267 = *((void *)v1 + 1934);
        uint64_t v268 = *((void *)v1 + 1933);
        uint64_t v269 = *((void *)v1 + 1932);
        uint64_t v270 = qword_10171B558;
        id v271 = [v0 layer];
        sub_1006006C8(v677, v666);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768(v268 + *(int *)(v269 + 28), 1, 1, v769);
        v768(v268 + *(int *)(v269 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        uint64_t v750 = v268 + 40;
        sub_100549A0C(v666, v268 + 40);

        *(void *)(v268 + 32) = 0;
        *(void *)uint64_t v268 = v264;
        *(void *)(v268 + 8) = v265;
        *(void *)(v268 + 16) = v266;
        *(void *)(v268 + 24) = v270;
        *(void *)(v268 + 304) = 0;
        *(_DWORD *)(v268 + 312) = v779;
        sub_10054BD5C(v677);
        sub_100D6ED18(v268, v267, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v267 + 16) = 0x3FF0000000000000;
        uint64_t v765 = v268;
        sub_100D6ED80(v268, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        sub_100D6ED18(v267, v804, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v804 + 24) = 0x406F400000000000;
        uint64_t v767 = v267;
        sub_100D6ED80(v267, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        sub_100D6ED18(v804, (uint64_t)v782, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        void *v782 = 0x4040000000000000;
        sub_100D6ED80(v804, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        sub_100D6ED18((uint64_t)v782, v811, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v811 + 8) = 0x3FF0000000000000;
        sub_100D6ED80((uint64_t)v782, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        uint64_t v761 = v269;
        *(void *)(v820 + 136) = v269;
        *(void *)(v820 + 144) = &off_101534738;
        unint64_t v272 = sub_1005767BC((uint64_t *)(v820 + 112));
        sub_100D6ED18(v811, (uint64_t)v272, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *((void *)v1 + 1661) = &type metadata for CRLSpringLayerAnimation.Def;
        unint64_t v800 = sub_100860DAC();
        *((void *)v1 + 1662) = v800;
        uint64_t v273 = swift_allocObject();
        *((void *)v1 + 1658) = v273;
        sub_100823384((uint64_t)v272, v273 + 16);
        *(unsigned char *)(sub_1005231B4(v667, *((void *)v1 + 1661)) + 313) = 0;
        sub_100F7DF84(v667);
        sub_100D6ED80(v811, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        v829 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        char v274 = 0;
        uint64_t v275 = 0;
        unint64_t v276 = v686;
        do
        {
          char v277 = v274;
          if (v747) {
            id v278 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v278 = *(id *)(v716 + 8 * v275);
          }
          uint64_t v279 = v278;
          unint64_t v830 = (unint64_t)v278;
          sub_100D6B998((void **)&v830, v276, v2, v3, v4, v5, v672, v671, v670, v669);

          if (*((void *)v1 + 1621))
          {
            sub_10053974C((long long *)v276, (uint64_t)v685);
            sub_10053974C(v685, v687);
            uint64_t v280 = v829;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              uint64_t v280 = sub_100F62770(0, *((void *)v280 + 2) + 1, 1, v280);
              v829 = v280;
            }
            unint64_t v282 = *((void *)v280 + 2);
            unint64_t v281 = *((void *)v280 + 3);
            if (v282 >= v281 >> 1) {
              v829 = sub_100F62770((double *)(v281 > 1), v282 + 1, 1, v280);
            }
            uint64_t v283 = *((void *)v1 + 1906);
            uint64_t v284 = *((void *)v1 + 1907);
            uint64_t v285 = sub_1005231B4(v687, v283);
            uint64_t v286 = *(void *)(v283 - 8);
            uint64_t v287 = swift_task_alloc();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v286 + 16))(v287, v285, v283);
            sub_100667930(v282, v287, (uint64_t *)&v829, v283, v284);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v687);
            swift_task_dealloc();
            unint64_t v276 = v686;
          }
          else
          {
            sub_100522F00((uint64_t)v276, (uint64_t *)&unk_101683FE0);
          }
          char v274 = 1;
          uint64_t v275 = 1;
        }
        while ((v277 & 1) == 0);
        swift_bridgeObjectRelease();
        long long v288 = v829;
        *(void *)(v820 + 176) = &type metadata for CRLLayerAnimationGroup;
        *(void *)(v820 + 184) = &off_10150F5C8;
        *(void *)(v820 + 152) = v288;
        *(void *)(v820 + 160) = 0;
        v829 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        char v289 = 0;
        uint64_t v290 = 0;
        do
        {
          char v291 = v289;
          if (v786) {
            id v292 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v292 = *(id *)&v735[8 * v290];
          }
          long long v293 = v292;
          unint64_t v830 = (unint64_t)v292;
          sub_100D6BEE0((void **)&v830, v668);

          if (*((void *)v1 + 1601))
          {
            sub_10053974C((long long *)v668, (uint64_t)v682);
            sub_10053974C(v682, v684);
            uint64_t v294 = v829;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              uint64_t v294 = sub_100F62770(0, *((void *)v294 + 2) + 1, 1, v294);
              v829 = v294;
            }
            unint64_t v296 = *((void *)v294 + 2);
            unint64_t v295 = *((void *)v294 + 3);
            if (v296 >= v295 >> 1) {
              v829 = sub_100F62770((double *)(v295 > 1), v296 + 1, 1, v294);
            }
            uint64_t v297 = *((void *)v1 + 1901);
            uint64_t v298 = *((void *)v1 + 1902);
            uint64_t v299 = sub_1005231B4(v684, v297);
            uint64_t v300 = *(void *)(v297 - 8);
            uint64_t v301 = swift_task_alloc();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v300 + 16))(v301, v299, v297);
            sub_100667930(v296, v301, (uint64_t *)&v829, v297, v298);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v684);
            swift_task_dealloc();
          }
          else
          {
            sub_100522F00((uint64_t)v668, (uint64_t *)&unk_101683FE0);
          }
          char v289 = 1;
          uint64_t v290 = 1;
        }
        while ((v291 & 1) == 0);
        swift_bridgeObjectRelease();
        CKRecordID v302 = v829;
        *(void *)(v820 + 216) = &type metadata for CRLLayerAnimationGroup;
        *(void *)(v820 + 224) = &off_10150F5C8;
        *(void *)(v820 + 192) = v302;
        *(void *)(v820 + 200) = 0;
        v829 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        char v303 = 0;
        uint64_t v304 = 0;
        do
        {
          char v305 = v303;
          if (v786) {
            id v306 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v306 = *(id *)&v735[8 * v304];
          }
          uint64_t v307 = v306;
          unint64_t v830 = (unint64_t)v306;
          sub_100D6C3A0((void **)&v830, v683);

          if (*((void *)v1 + 1631))
          {
            sub_10053974C((long long *)v683, (uint64_t)v680);
            sub_10053974C(v680, v681);
            uint64_t v308 = v829;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              uint64_t v308 = sub_100F62770(0, *((void *)v308 + 2) + 1, 1, v308);
              v829 = v308;
            }
            unint64_t v310 = *((void *)v308 + 2);
            unint64_t v309 = *((void *)v308 + 3);
            if (v310 >= v309 >> 1) {
              v829 = sub_100F62770((double *)(v309 > 1), v310 + 1, 1, v308);
            }
            uint64_t v311 = *((void *)v1 + 1896);
            uint64_t v312 = *((void *)v1 + 1897);
            uint64_t v313 = sub_1005231B4(v681, v311);
            uint64_t v314 = *(void *)(v311 - 8);
            uint64_t v315 = swift_task_alloc();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v314 + 16))(v315, v313, v311);
            sub_100667930(v310, v315, (uint64_t *)&v829, v311, v312);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v681);
            swift_task_dealloc();
          }
          else
          {
            sub_100522F00((uint64_t)v683, (uint64_t *)&unk_101683FE0);
          }
          char v303 = 1;
          uint64_t v304 = 1;
        }
        while ((v305 & 1) == 0);
        swift_bridgeObjectRelease();
        id v316 = v829;
        *(void *)(v820 + 256) = &type metadata for CRLLayerAnimationGroup;
        *(void *)(v820 + 264) = &off_10150F5C8;
        *(void *)(v820 + 232) = v316;
        *(void *)(v820 + 240) = 0;
        v829 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        char v317 = 0;
        uint64_t v318 = 0;
        do
        {
          char v319 = v317;
          if (v786) {
            id v320 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v320 = *(id *)&v735[8 * v318];
          }
          id v321 = v320;
          unint64_t v830 = (unint64_t)v320;
          sub_100D6C888((void **)&v830, v651);

          if (*((void *)v1 + 1561))
          {
            sub_10053974C((long long *)v651, (uint64_t)v675);
            sub_10053974C(v675, v679);
            uint64_t v322 = v829;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              uint64_t v322 = sub_100F62770(0, *((void *)v322 + 2) + 1, 1, v322);
              v829 = v322;
            }
            unint64_t v324 = *((void *)v322 + 2);
            unint64_t v323 = *((void *)v322 + 3);
            if (v324 >= v323 >> 1) {
              v829 = sub_100F62770((double *)(v323 > 1), v324 + 1, 1, v322);
            }
            uint64_t v325 = *((void *)v1 + 1891);
            uint64_t v326 = *((void *)v1 + 1892);
            uint64_t v327 = sub_1005231B4(v679, v325);
            uint64_t v328 = *(void *)(v325 - 8);
            uint64_t v329 = swift_task_alloc();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v328 + 16))(v329, v327, v325);
            sub_100667930(v324, v329, (uint64_t *)&v829, v325, v326);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v679);
            swift_task_dealloc();
          }
          else
          {
            sub_100522F00((uint64_t)v651, (uint64_t *)&unk_101683FE0);
          }
          char v317 = 1;
          uint64_t v318 = 1;
        }
        while ((v319 & 1) == 0);
        swift_bridgeObjectRelease_n();
        uint64_t v330 = v829;
        *(void *)(v820 + 296) = &type metadata for CRLLayerAnimationGroup;
        *(void *)(v820 + 304) = &off_10150F5C8;
        *(void *)(v820 + 272) = v330;
        *(void *)(v820 + 280) = 0;
        v829 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        char v331 = 0;
        uint64_t v332 = 0;
        id v333 = v659;
        do
        {
          char v334 = v331;
          if (v747) {
            id v335 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v335 = *(id *)(v716 + 8 * v332);
          }
          uint64_t v336 = v335;
          unint64_t v830 = (unint64_t)v335;
          sub_100D6CD48((void **)&v830, v333);

          if (*((void *)v1 + 1571))
          {
            sub_10053974C((long long *)v333, (uint64_t)v638);
            sub_10053974C(v638, v674);
            unint64_t v337 = v829;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              unint64_t v337 = sub_100F62770(0, *((void *)v337 + 2) + 1, 1, v337);
              v829 = v337;
            }
            unint64_t v339 = *((void *)v337 + 2);
            unint64_t v338 = *((void *)v337 + 3);
            if (v339 >= v338 >> 1) {
              v829 = sub_100F62770((double *)(v338 > 1), v339 + 1, 1, v337);
            }
            uint64_t v340 = *((void *)v1 + 1886);
            uint64_t v341 = *((void *)v1 + 1887);
            uint64_t v342 = sub_1005231B4(v674, v340);
            uint64_t v343 = *(void *)(v340 - 8);
            uint64_t v344 = swift_task_alloc();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v343 + 16))(v344, v342, v340);
            sub_100667930(v339, v344, (uint64_t *)&v829, v340, v341);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v674);
            swift_task_dealloc();
            id v333 = v659;
          }
          else
          {
            sub_100522F00((uint64_t)v333, (uint64_t *)&unk_101683FE0);
          }
          char v331 = 1;
          uint64_t v332 = 1;
        }
        while ((v334 & 1) == 0);
        swift_bridgeObjectRelease();
        uint64_t v345 = v829;
        *(void *)(v820 + 336) = &type metadata for CRLLayerAnimationGroup;
        *(void *)(v820 + 344) = &off_10150F5C8;
        *(void *)(v820 + 312) = v345;
        *(void *)(v820 + 320) = 0;
        v829 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        char v346 = 0;
        uint64_t v347 = 0;
        uint64_t v348 = v657;
        do
        {
          char v349 = v346;
          if (v747) {
            id v350 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v350 = *(id *)(v716 + 8 * v347);
          }
          unint64_t v351 = v350;
          unint64_t v830 = (unint64_t)v350;
          sub_100D6D240((void **)&v830, v348);

          if (*((void *)v1 + 1581))
          {
            sub_10053974C((long long *)v348, (uint64_t)v632);
            sub_10053974C(v632, v658);
            uint64_t v352 = v829;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              uint64_t v352 = sub_100F62770(0, *((void *)v352 + 2) + 1, 1, v352);
              v829 = v352;
            }
            unint64_t v354 = *((void *)v352 + 2);
            unint64_t v353 = *((void *)v352 + 3);
            if (v354 >= v353 >> 1) {
              v829 = sub_100F62770((double *)(v353 > 1), v354 + 1, 1, v352);
            }
            uint64_t v355 = *((void *)v1 + 1881);
            uint64_t v356 = *((void *)v1 + 1882);
            uint64_t v357 = sub_1005231B4(v658, v355);
            uint64_t v358 = *(void *)(v355 - 8);
            uint64_t v359 = swift_task_alloc();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v358 + 16))(v359, v357, v355);
            sub_100667930(v354, v359, (uint64_t *)&v829, v355, v356);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v658);
            swift_task_dealloc();
            uint64_t v348 = v657;
          }
          else
          {
            sub_100522F00((uint64_t)v348, (uint64_t *)&unk_101683FE0);
          }
          char v346 = 1;
          uint64_t v347 = 1;
        }
        while ((v349 & 1) == 0);
        swift_bridgeObjectRelease();
        id v360 = v829;
        *(void *)(v820 + 376) = &type metadata for CRLLayerAnimationGroup;
        *(void *)(v820 + 384) = &off_10150F5C8;
        *(void *)(v820 + 352) = v360;
        *(void *)(v820 + 360) = 0;
        v828 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        char v361 = 0;
        uint64_t v362 = 0;
        uint64_t v363 = v654;
        do
        {
          char v364 = v361;
          if (v747) {
            id v365 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v365 = *(id *)(v716 + 8 * v362);
          }
          v366 = v365;
          unint64_t v830 = (unint64_t)v365;
          sub_100D6D6A4((void **)&v830, v363);

          if (*((void *)v1 + 1591))
          {
            sub_10053974C((long long *)v363, (uint64_t)v653);
            sub_10053974C(v653, v656);
            v367 = v828;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v367 = sub_100F62770(0, *((void *)v367 + 2) + 1, 1, v367);
              v828 = v367;
            }
            unint64_t v369 = *((void *)v367 + 2);
            unint64_t v368 = *((void *)v367 + 3);
            if (v369 >= v368 >> 1) {
              v828 = sub_100F62770((double *)(v368 > 1), v369 + 1, 1, v367);
            }
            id v1 = (double *)v827;
            uint64_t v370 = *((void *)v827 + 1876);
            uint64_t v371 = *((void *)v827 + 1877);
            uint64_t v372 = sub_1005231B4(v656, v370);
            uint64_t v373 = *(void *)(v370 - 8);
            uint64_t v374 = swift_task_alloc();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v373 + 16))(v374, v372, v370);
            sub_100667930(v369, v374, (uint64_t *)&v828, v370, v371);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v656);
            swift_task_dealloc();
            uint64_t v363 = v654;
          }
          else
          {
            sub_100522F00((uint64_t)v363, (uint64_t *)&unk_101683FE0);
          }
          char v361 = 1;
          uint64_t v362 = 1;
        }
        while ((v364 & 1) == 0);
        swift_bridgeObjectRelease();
        uint64_t v375 = v828;
        *(void *)(v820 + 416) = &type metadata for CRLLayerAnimationGroup;
        *(void *)(v820 + 424) = &off_10150F5C8;
        *(void *)(v820 + 392) = v375;
        *(void *)(v820 + 400) = 0;
        double v376 = sub_1006C9744(v820, 0.0);
        uint64_t v378 = v377;
        double v379 = v376;
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((void *)v673 + 12) = &type metadata for CRLLayerAnimationGroup;
        *((void *)v673 + 13) = &off_10150F5C8;
        *((void *)v673 + 9) = v378;
        v673[10] = v379;
        uint64_t v380 = swift_allocObject();
        *(_OWORD *)(v380 + 16) = v626;
        v731 = (double *)v380;
        uint64_t v381 = swift_allocObject();
        *(_OWORD *)(v381 + 16) = xmmword_10117E800;
        v734 = (void *)v381;
        v829 = _swiftEmptyArrayStorage;
        sub_1009ACE10(v627);
        v1[1494] = v672;
        v1[1495] = v671;
        v1[1496] = v670;
        v1[1497] = v669;
        *((void *)v1 + 1498) = v628;
        *((void *)v1 + 1499) = v629;
        *((void *)v1 + 1500) = v630;
        *((void *)v1 + 1501) = v631;
        sub_1005E9324(v627, (uint64_t)(v1 + 1502));
        swift_bridgeObjectRetain();
        char v382 = 0;
        uint64_t v383 = 0;
        do
        {
          char v741 = v382;
          if (v747) {
            id v384 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v384 = *(id *)(v716 + 8 * v383);
          }
          uint64_t v385 = v384;
          uint64_t v788 = *((void *)v827 + 1945);
          uint64_t v783 = *((void *)v827 + 1944);
          uint64_t v386 = (void *)*((void *)v827 + 1943);
          v793 = (id *)*((void *)v827 + 1940);
          uint64_t v824 = *((void *)v827 + 1938);
          long long v387 = *((_OWORD *)v650 + 11);
          *(_OWORD *)(v648 + 160) = *((_OWORD *)v650 + 10);
          *(_OWORD *)(v648 + 176) = v387;
          *(unsigned char *)(v648 + 192) = v650[192];
          long long v388 = *((_OWORD *)v650 + 7);
          *(_OWORD *)(v648 + 96) = *((_OWORD *)v650 + 6);
          *(_OWORD *)(v648 + 112) = v388;
          long long v389 = *((_OWORD *)v650 + 9);
          *(_OWORD *)(v648 + 128) = *((_OWORD *)v650 + 8);
          *(_OWORD *)(v648 + 144) = v389;
          long long v390 = *((_OWORD *)v650 + 3);
          *(_OWORD *)(v648 + 32) = *((_OWORD *)v650 + 2);
          *(_OWORD *)(v648 + 48) = v390;
          long long v391 = *((_OWORD *)v650 + 5);
          *(_OWORD *)(v648 + 64) = *((_OWORD *)v650 + 4);
          *(_OWORD *)(v648 + 80) = v391;
          long long v392 = *((_OWORD *)v650 + 1);
          *(_OWORD *)uint64_t v648 = *(_OWORD *)v650;
          *(_OWORD *)(v648 + 16) = v392;
          v678[2376] = 60;
          id v753 = (id)qword_10171B538;
          id v393 = [v385 layer];
          sub_1006006C8(v648, v649);
          UUID.init()();
          swift_unknownObjectWeakInit();
          v768((uint64_t)v386 + *(int *)(v778 + 28), 1, 1, v769);
          v768((uint64_t)v386 + *(int *)(v778 + 32), 1, 1, v769);
          swift_unknownObjectWeakAssign();

          sub_100549A0C(v649, v775);
          *(_OWORD *)(v776 + 8) = v777;
          *uint64_t v386 = v753;
          *(void *)(v776 + 288) = 0;
          *(_DWORD *)(v776 + 296) = v779;
          sub_100600728((uint64_t)v386, v783);
          sub_10054BD5C(v648);
          sub_100D6ED18(v783, v788, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
          *(void *)(v770 + 16) = 0x3FB999999999999ALL;
          sub_100D6ED80(v783, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
          id v394 = objc_allocWithZone((Class)CAMediaTimingFunction);
          LODWORD(v395) = 1036831949;
          LODWORD(v396) = 0.25;
          LODWORD(v397) = 0.25;
          LODWORD(v398) = 1.0;
          id v399 = [v394 initWithControlPoints:v396 :v395 :v397 :v398];
          sub_100D6ED18(v788, (uint64_t)v793, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

          id *v793 = v399;
          sub_100D6ED80(v788, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
          *((void *)v827 + 1611) = v824;
          *((void *)v827 + 1612) = &off_10150AF08;
          unint64_t v400 = sub_1005767BC(v655);
          sub_100D6ED18((uint64_t)v793, (uint64_t)v400, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
          *((void *)v827 + 1626) = &type metadata for CRLBasicLayerAnimation.Def;
          *((void *)v827 + 1627) = v702;
          uint64_t v401 = swift_allocObject();
          *((void *)v827 + 1623) = v401;
          sub_100549A68((uint64_t)v400, v401 + 16);
          *(unsigned char *)(sub_1005231B4(v647, *((void *)v827 + 1626)) + 297) = 0;
          sub_1005498A4(v647, v646);
          if (!swift_dynamicCast())
          {
            _OWORD *v645 = 0u;
            v645[1] = 0u;
            v645[2] = 0u;
            v645[3] = 0u;
            v645[4] = 0u;
            v645[5] = 0u;
            v645[6] = 0u;
            v645[7] = 0u;
            v645[8] = 0u;
            v645[9] = 0u;
            v645[10] = 0u;
            v645[11] = 0u;
            v645[12] = 0u;
            v645[13] = 0u;
            v645[14] = 0u;
            v645[15] = 0u;
            v645[16] = 0u;
            v645[17] = 0u;
            *(_OWORD *)((char *)v645 + 284) = 0u;
            sub_100522F00((uint64_t)v645, (uint64_t *)&unk_10169AEF0);
            unint64_t v830 = 0;
            unint64_t v831 = 0xE000000000000000;
            _StringGuts.grow(_:)(69);
            unint64_t v411 = v831;
            *((void *)v827 + 1929) = v830;
            *((void *)v827 + 1930) = v411;
            v412._object = (void *)0x800000010123FAA0;
            v412._countAndFlagsBits = 0xD000000000000043;
            String.append(_:)(v412);
            _print_unlocked<A, B>(_:_:)();
            goto LABEL_49;
          }
          uint64_t v402 = *((void *)v827 + 1940);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v647);
          memcpy(v643, v645, 0x12CuLL);
          sub_100600690((uint64_t)v643, (uint64_t)v400);
          sub_100D6ED80(v402, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

          if (*((void *)v827 + 1611))
          {
            sub_10053974C((long long *)v655, (uint64_t)v640);
            sub_10053974C(v640, v652);
            int64_t v403 = v829;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              int64_t v403 = sub_100F62770(0, *((void *)v403 + 2) + 1, 1, v403);
              v829 = v403;
            }
            unint64_t v405 = *((void *)v403 + 2);
            unint64_t v404 = *((void *)v403 + 3);
            if (v405 >= v404 >> 1) {
              v829 = sub_100F62770((double *)(v404 > 1), v405 + 1, 1, v403);
            }
            uint64_t v406 = *((void *)v827 + 1871);
            uint64_t v407 = *((void *)v827 + 1872);
            uint64_t v408 = sub_1005231B4(v652, v406);
            uint64_t v409 = *(void *)(v406 - 8);
            uint64_t v410 = swift_task_alloc();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v409 + 16))(v410, v408, v406);
            sub_100667930(v405, v410, (uint64_t *)&v829, v406, v407);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v652);
            swift_task_dealloc();
          }
          else
          {
            sub_100522F00((uint64_t)v655, (uint64_t *)&unk_101683FE0);
          }
          char v382 = 1;
          uint64_t v383 = 1;
        }
        while ((v741 & 1) == 0);
        swift_bridgeObjectRelease();
        uint64_t v413 = v829;
        v734[7] = &type metadata for CRLLayerAnimationGroup;
        v734[8] = &off_10150F5C8;
        v734[4] = v413;
        v734[5] = 0;
        v829 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        char v414 = 0;
        uint64_t v415 = 0;
        do
        {
          char v736 = v414;
          if (v747) {
            id v416 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v416 = *(id *)(v716 + 8 * v415);
          }
          v825 = v416;
          uint64_t v784 = *((void *)v827 + 1945);
          uint64_t v754 = *((void *)v827 + 1944);
          v417 = (void *)*((void *)v827 + 1943);
          v789 = (id *)*((void *)v827 + 1939);
          uint64_t v794 = *((void *)v827 + 1938);
          *((void *)v827 + 1362) = v756;
          v678[1584] = 6;
          id v742 = (id)qword_10171B538;
          id v418 = [v825 layer];
          sub_1006006C8(v636, v637);
          UUID.init()();
          swift_unknownObjectWeakInit();
          v768((uint64_t)v417 + *(int *)(v778 + 28), 1, 1, v769);
          v768((uint64_t)v417 + *(int *)(v778 + 32), 1, 1, v769);
          swift_unknownObjectWeakAssign();

          sub_100549A0C(v637, v775);
          *(_OWORD *)(v776 + 8) = v777;
          void *v417 = v742;
          *(void *)(v776 + 288) = 0;
          *(_DWORD *)(v776 + 296) = v779;
          sub_100600728((uint64_t)v417, v754);
          sub_10054BD5C(v636);
          sub_100D6ED18(v754, v784, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
          *(void *)(v770 + 16) = 0x3FB999999999999ALL;
          sub_100D6ED80(v754, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
          id v419 = objc_allocWithZone((Class)CAMediaTimingFunction);
          LODWORD(v420) = 1036831949;
          LODWORD(v421) = 0.25;
          LODWORD(v422) = 0.25;
          LODWORD(v423) = 1.0;
          id v424 = [v419 initWithControlPoints:v421 :v420 :v422 :v423];
          sub_100D6ED18(v784, (uint64_t)v789, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

          id *v789 = v424;
          sub_100D6ED80(v784, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
          *((void *)v827 + 1656) = v794;
          *((void *)v827 + 1657) = &off_10150AF08;
          uint64_t v425 = sub_1005767BC(v642);
          sub_100D6ED18((uint64_t)v789, (uint64_t)v425, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
          *((void *)v827 + 1671) = &type metadata for CRLBasicLayerAnimation.Def;
          *((void *)v827 + 1672) = v702;
          uint64_t v426 = swift_allocObject();
          *((void *)v827 + 1668) = v426;
          sub_100549A68((uint64_t)v425, v426 + 16);
          *(unsigned char *)(sub_1005231B4(v641, *((void *)v827 + 1671)) + 297) = 0;
          sub_1005498A4(v641, v635);
          if (!swift_dynamicCast())
          {
            *__srCGFloat c = 0u;
            __src[1] = 0u;
            __src[2] = 0u;
            __src[3] = 0u;
            __src[4] = 0u;
            __src[5] = 0u;
            __src[6] = 0u;
            __src[7] = 0u;
            __src[8] = 0u;
            __src[9] = 0u;
            __src[10] = 0u;
            __src[11] = 0u;
            __src[12] = 0u;
            __src[13] = 0u;
            __src[14] = 0u;
            __src[15] = 0u;
            __src[16] = 0u;
            __src[17] = 0u;
            *(_OWORD *)((char *)__src + 284) = 0u;
            sub_100522F00((uint64_t)__src, (uint64_t *)&unk_10169AEF0);
            unint64_t v830 = 0;
            unint64_t v831 = 0xE000000000000000;
            _StringGuts.grow(_:)(69);
            unint64_t v436 = v831;
            *((void *)v827 + 1927) = v830;
            *((void *)v827 + 1928) = v436;
            v437._object = (void *)0x800000010123FAA0;
            v437._countAndFlagsBits = 0xD000000000000043;
            String.append(_:)(v437);
            _print_unlocked<A, B>(_:_:)();
            goto LABEL_49;
          }
          uint64_t v427 = *((void *)v827 + 1939);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v641);
          memcpy(v634, __src, 0x12CuLL);
          sub_100600690((uint64_t)v634, (uint64_t)v425);
          sub_100D6ED80(v427, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

          if (*((void *)v827 + 1656))
          {
            sub_10053974C((long long *)v642, (uint64_t)v633);
            sub_10053974C(v633, v639);
            v428 = v829;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v428 = sub_100F62770(0, *((void *)v428 + 2) + 1, 1, v428);
              v829 = v428;
            }
            unint64_t v430 = *((void *)v428 + 2);
            unint64_t v429 = *((void *)v428 + 3);
            if (v430 >= v429 >> 1) {
              v829 = sub_100F62770((double *)(v429 > 1), v430 + 1, 1, v428);
            }
            uint64_t v431 = *((void *)v827 + 1866);
            uint64_t v432 = *((void *)v827 + 1867);
            uint64_t v433 = sub_1005231B4(v639, v431);
            uint64_t v434 = *(void *)(v431 - 8);
            uint64_t v435 = swift_task_alloc();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v434 + 16))(v435, v433, v431);
            sub_100667930(v430, v435, (uint64_t *)&v829, v431, v432);
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v639);
            swift_task_dealloc();
          }
          else
          {
            sub_100522F00((uint64_t)v642, (uint64_t *)&unk_101683FE0);
          }
          char v414 = 1;
          uint64_t v415 = 1;
        }
        while ((v736 & 1) == 0);
        v795 = (id *)*((void *)v827 + 1945);
        uint64_t v790 = *((void *)v827 + 1944);
        v715 = (void *)*((void *)v827 + 1943);
        uint64_t v815 = *((void *)v827 + 1938);
        uint64_t v717 = *((void *)v827 + 1937);
        v743 = (void *)*((void *)v827 + 1936);
        uint64_t v737 = *((void *)v827 + 1935);
        uint64_t v748 = *((void *)v827 + 1934);
        uint64_t v438 = (uint64_t *)*((void *)v827 + 1933);
        uint64_t v755 = *((void *)v827 + 1932);
        int v713 = *v624;
        swift_bridgeObjectRelease_n();
        uint64_t v439 = v829;
        v734[12] = &type metadata for CRLLayerAnimationGroup;
        v734[13] = &off_10150F5C8;
        v734[9] = v439;
        v734[10] = 0;
        id v771 = sub_100D5ED8C();
        *((_OWORD *)v827 + 516) = xmmword_1011B3650;
        *((_OWORD *)v827 + 517) = 0u;
        v774[3472] = 1;
        *((void *)v827 + 1037) = 0;
        v774[3488] = 2;
        v774[3696] = 58;
        uint64_t v440 = qword_10171B540;
        uint64_t v441 = qword_10171B548;
        uint64_t v442 = qword_10171B550;
        uint64_t v443 = qword_10171B558;
        id v444 = [v771 layer];
        sub_1006006C8(v587, v584);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v438 + *(int *)(v761 + 28), 1, 1, v769);
        v768((uint64_t)v438 + *(int *)(v761 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v584, v750);
        *(void *)(v765 + 32) = 0;
        v711 = v438;
        *uint64_t v438 = v440;
        *(void *)(v765 + 8) = v441;
        *(void *)(v765 + 16) = v442;
        *(void *)(v765 + 24) = v443;
        *(void *)(v765 + 304) = 0;
        *(_DWORD *)(v765 + 312) = v779;
        sub_10054BD5C(v587);
        sub_100D6ED18((uint64_t)v438, v748, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v767 + 16) = 0x3FF0000000000000;
        sub_100D6ED80((uint64_t)v438, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        sub_100D6ED18(v748, v737, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v804 + 24) = 0x406F400000000000;
        sub_100D6ED80(v748, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        sub_100D6ED18(v737, (uint64_t)v743, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        void *v743 = 0x4040000000000000;
        sub_100D6ED80(v737, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        sub_100D6ED18((uint64_t)v743, v717, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v811 + 8) = 0x3FF0000000000000;
        sub_100D6ED80((uint64_t)v743, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        v734[17] = v755;
        v734[18] = &off_101534738;
        uint64_t v445 = sub_1005767BC(v734 + 14);
        sub_100D6ED18(v717, (uint64_t)v445, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *((void *)v827 + 1706) = &type metadata for CRLSpringLayerAnimation.Def;
        *((void *)v827 + 1707) = v800;
        uint64_t v446 = swift_allocObject();
        *((void *)v827 + 1703) = v446;
        sub_100823384((uint64_t)v445, v446 + 16);
        *(unsigned char *)(sub_1005231B4(v588, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
        sub_100F7DF84(v588);
        sub_100D6ED80(v717, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        id v738 = sub_100D5ED8C();
        *((void *)v827 + 966) = v744;
        v774[3168] = 6;
        id v785 = (id)qword_10171B538;
        id v447 = [v738 layer];
        sub_1006006C8(v590, v589);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v715 + *(int *)(v778 + 28), 1, 1, v769);
        v768((uint64_t)v715 + *(int *)(v778 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v589, v775);
        *(_OWORD *)(v776 + 8) = v777;
        void *v715 = v785;
        *(void *)(v776 + 288) = 0;
        *(_DWORD *)(v776 + 296) = v779;
        sub_10054BD5C(v590);
        sub_100D6ED18((uint64_t)v715, v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v816 + 16) = 0x3F9EB851EB851EB8;
        sub_100D6ED80((uint64_t)v715, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v448 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v449) = 0.25;
        LODWORD(v450) = 0.25;
        LODWORD(v451) = 1.0;
        LODWORD(v452) = 1036831949;
        id v453 = [v448 initWithControlPoints:v449 :v452 :v450 :v451];
        sub_100D6ED18(v790, (uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

        id *v795 = v453;
        sub_100D6ED80(v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        v734[22] = v815;
        v734[23] = &off_10150AF08;
        unint64_t v454 = sub_1005767BC(v734 + 19);
        sub_100D6ED18((uint64_t)v795, (uint64_t)v454, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *((void *)v827 + 1721) = &type metadata for CRLBasicLayerAnimation.Def;
        *((void *)v827 + 1722) = v702;
        uint64_t v455 = swift_allocObject();
        *((void *)v827 + 1718) = v455;
        sub_100549A68((uint64_t)v454, v455 + 16);
        *(unsigned char *)(sub_1005231B4(v591, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
        sub_1005FF368(v591);
        sub_100D6ED80((uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        double v456 = sub_1006C9744((uint64_t)v734, 0.97);
        uint64_t v458 = v457;
        double v459 = v456;
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((void *)v731 + 7) = &type metadata for CRLLayerAnimationGroup;
        *((void *)v731 + 8) = &off_10150F5C8;
        *((void *)v731 + 4) = v458;
        v731[5] = v459;
        double v460 = sub_1006C9744((uint64_t)v731, 0.0);
        uint64_t v462 = v461;
        double v463 = v460;
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((void *)v673 + 17) = &type metadata for CRLLayerAnimationGroup;
        *((void *)v673 + 18) = &off_10150F5C8;
        *((void *)v673 + 14) = v462;
        v673[15] = v463;
        double v464 = sub_100787FA0((uint64_t)v673, 0.0);
        uint64_t v466 = v465;
        double v467 = v464;
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((void *)v585 + 7) = &type metadata for CRLLayerAnimationSequence;
        *((void *)v585 + 8) = &off_1015133C8;
        *((void *)v585 + 4) = v466;
        v585[5] = v467;
        double v468 = sub_1006C9744((uint64_t)v585, 0.0);
        uint64_t v732 = v469;
        double v470 = v468;
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v739 = swift_allocObject();
        *(_OWORD *)(v739 + 16) = xmmword_10117D8C0;
        uint64_t v772 = swift_allocObject();
        *(_OWORD *)(v772 + 16) = v586;
        id v719 = sub_100D5EAB8();
        *((void *)v827 + 900) = v744;
        v774[2640] = 6;
        id v727 = (id)qword_10171B538;
        id v471 = [v719 layer];
        sub_1006006C8(v593, v592);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v715 + *(int *)(v778 + 28), 1, 1, v769);
        v768((uint64_t)v715 + *(int *)(v778 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v592, v775);
        *(_OWORD *)(v776 + 8) = v777;
        void *v715 = v727;
        *(void *)(v776 + 288) = 0;
        *(_DWORD *)(v776 + 296) = v779;
        sub_10054BD5C(v593);
        sub_100D6ED18((uint64_t)v715, v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v816 + 16) = 0x3FC999999999999ALL;
        sub_100D6ED80((uint64_t)v715, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v472 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v473) = 0.25;
        LODWORD(v474) = 0.25;
        LODWORD(v475) = 1.0;
        LODWORD(v476) = 1036831949;
        id v477 = [v472 initWithControlPoints:v473 :v476 :v474 :v475];
        sub_100D6ED18(v790, (uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

        id *v795 = v477;
        sub_100D6ED80(v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v772 + 56) = v815;
        *(void *)(v772 + 64) = &off_10150AF08;
        uint64_t v478 = sub_1005767BC((uint64_t *)(v772 + 32));
        sub_100D6ED18((uint64_t)v795, (uint64_t)v478, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *((void *)v827 + 1736) = &type metadata for CRLBasicLayerAnimation.Def;
        *((void *)v827 + 1737) = v702;
        uint64_t v479 = swift_allocObject();
        *((void *)v827 + 1733) = v479;
        sub_100549A68((uint64_t)v478, v479 + 16);
        *(unsigned char *)(sub_1005231B4(v594, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
        sub_1005FF368(v594);
        sub_100D6ED80((uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v720 = sub_100D5EAC4();
        *((void *)v827 + 834) = v744;
        v774[2112] = 6;
        id v746 = (id)qword_10171B538;
        id v480 = [v720 layer];
        sub_1006006C8(v596, v595);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v715 + *(int *)(v778 + 28), 1, 1, v769);
        v768((uint64_t)v715 + *(int *)(v778 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v595, v775);
        *(_OWORD *)(v776 + 8) = v777;
        void *v715 = v746;
        *(void *)(v776 + 288) = 0;
        *(_DWORD *)(v776 + 296) = v779;
        sub_10054BD5C(v596);
        sub_100D6ED18((uint64_t)v715, v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v816 + 16) = 0x3FC999999999999ALL;
        sub_100D6ED80((uint64_t)v715, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v481 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v482) = 0.25;
        LODWORD(v483) = 0.25;
        LODWORD(v484) = 1.0;
        LODWORD(v485) = 1036831949;
        id v486 = [v481 initWithControlPoints:v482 :v485 :v483 :v484];
        sub_100D6ED18(v790, (uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

        id *v795 = v486;
        sub_100D6ED80(v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v772 + 96) = v815;
        *(void *)(v772 + 104) = &off_10150AF08;
        long long v487 = sub_1005767BC((uint64_t *)(v772 + 72));
        sub_100D6ED18((uint64_t)v795, (uint64_t)v487, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *((void *)v827 + 1751) = &type metadata for CRLBasicLayerAnimation.Def;
        *((void *)v827 + 1752) = v702;
        uint64_t v488 = swift_allocObject();
        *((void *)v827 + 1748) = v488;
        sub_100549A68((uint64_t)v487, v488 + 16);
        *(unsigned char *)(sub_1005231B4(v597, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
        sub_1005FF368(v597);
        sub_100D6ED80((uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v721 = sub_100D5ED8C();
        *((void *)v827 + 702) = v756;
        v774[1056] = 6;
        id v728 = (id)qword_10171B538;
        id v489 = [v721 layer];
        sub_1006006C8(v599, v598);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v715 + *(int *)(v778 + 28), 1, 1, v769);
        v768((uint64_t)v715 + *(int *)(v778 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v598, v775);
        *(_OWORD *)(v776 + 8) = v777;
        void *v715 = v728;
        *(void *)(v776 + 288) = 0;
        *(_DWORD *)(v776 + 296) = v779;
        sub_10054BD5C(v599);
        sub_100D6ED18((uint64_t)v715, v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v816 + 16) = 0x3FC999999999999ALL;
        sub_100D6ED80((uint64_t)v715, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v490 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v491) = 0.25;
        LODWORD(v492) = 0.25;
        LODWORD(v493) = 1.0;
        LODWORD(v494) = 1036831949;
        id v495 = [v490 initWithControlPoints:v491 :v494 :v492 :v493];
        id v496 = sub_100A67E84();

        sub_100D6ED18(v790, (uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id *v795 = v496;
        sub_100D6ED80(v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v772 + 136) = v815;
        *(void *)(v772 + 144) = &off_10150AF08;
        unint64_t v497 = sub_1005767BC((uint64_t *)(v772 + 112));
        sub_100D6ED18((uint64_t)v795, (uint64_t)v497, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *((void *)v827 + 1766) = &type metadata for CRLBasicLayerAnimation.Def;
        *((void *)v827 + 1767) = v702;
        uint64_t v498 = swift_allocObject();
        *((void *)v827 + 1763) = v498;
        sub_100549A68((uint64_t)v497, v498 + 16);
        *(unsigned char *)(sub_1005231B4(v600, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
        sub_1005FF368(v600);
        sub_100D6ED80((uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        double v499 = sub_1006C9744(v772, 0.0);
        uint64_t v501 = v500;
        double v502 = v499;
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v739 + 56) = &type metadata for CRLLayerAnimationGroup;
        *(void *)(v739 + 64) = &off_10150F5C8;
        *(void *)(v739 + 32) = v501;
        *(double *)(v739 + 40) = v502;
        uint64_t v773 = swift_allocObject();
        *(_OWORD *)(v773 + 16) = xmmword_101186E40;
        id v722 = sub_100D5EAB8();
        long long v503 = *((_OWORD *)v650 + 11);
        *(_OWORD *)(v601 + 160) = *((_OWORD *)v650 + 10);
        *(_OWORD *)(v601 + 176) = v503;
        *(unsigned char *)(v601 + 192) = v650[192];
        long long v504 = *((_OWORD *)v650 + 7);
        *(_OWORD *)(v601 + 96) = *((_OWORD *)v650 + 6);
        *(_OWORD *)(v601 + 112) = v504;
        long long v505 = *((_OWORD *)v650 + 9);
        *(_OWORD *)(v601 + 128) = *((_OWORD *)v650 + 8);
        *(_OWORD *)(v601 + 144) = v505;
        long long v506 = *((_OWORD *)v650 + 3);
        *(_OWORD *)(v601 + 32) = *((_OWORD *)v650 + 2);
        *(_OWORD *)(v601 + 48) = v506;
        long long v507 = *((_OWORD *)v650 + 5);
        *(_OWORD *)(v601 + 64) = *((_OWORD *)v650 + 4);
        *(_OWORD *)(v601 + 80) = v507;
        long long v508 = *((_OWORD *)v650 + 1);
        *(_OWORD *)uint64_t v601 = *(_OWORD *)v650;
        *(_OWORD *)(v601 + 16) = v508;
        unsigned char *v774 = 60;
        id v729 = (id)qword_10171B538;
        id v509 = [v722 layer];
        sub_1006006C8(v601, v625);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v715 + *(int *)(v778 + 28), 1, 1, v769);
        v768((uint64_t)v715 + *(int *)(v778 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v625, v775);
        *(_OWORD *)(v776 + 8) = v777;
        void *v715 = v729;
        *(void *)(v776 + 288) = 0;
        *(_DWORD *)(v776 + 296) = v779;
        sub_10054BD5C(v601);
        sub_100D6ED18((uint64_t)v715, v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v816 + 16) = 0x3FB999999999999ALL;
        sub_100D6ED80((uint64_t)v715, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v510 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v511) = 0.25;
        LODWORD(v512) = 0.25;
        LODWORD(v513) = 1.0;
        LODWORD(v514) = 1036831949;
        id v515 = [v510 initWithControlPoints:v511 :v514 :v512 :v513];
        sub_100D6ED18(v790, (uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

        id *v795 = v515;
        sub_100D6ED80(v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v773 + 56) = v815;
        *(void *)(v773 + 64) = &off_10150AF08;
        v516 = sub_1005767BC((uint64_t *)(v773 + 32));
        sub_100D6ED18((uint64_t)v795, (uint64_t)v516, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *((void *)v827 + 1781) = &type metadata for CRLBasicLayerAnimation.Def;
        *((void *)v827 + 1782) = v702;
        uint64_t v517 = swift_allocObject();
        *((void *)v827 + 1778) = v517;
        sub_100549A68((uint64_t)v516, v517 + 16);
        *(unsigned char *)(sub_1005231B4(v603, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
        sub_1005FF368(v603);
        sub_100D6ED80((uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v707 = sub_100D5EAC4();
        long long v518 = *((_OWORD *)v650 + 11);
        *(_OWORD *)(v602 + 160) = *((_OWORD *)v650 + 10);
        *(_OWORD *)(v602 + 176) = v518;
        *(unsigned char *)(v602 + 192) = v650[192];
        long long v519 = *((_OWORD *)v650 + 7);
        *(_OWORD *)(v602 + 96) = *((_OWORD *)v650 + 6);
        *(_OWORD *)(v602 + 112) = v519;
        long long v520 = *((_OWORD *)v650 + 9);
        *(_OWORD *)(v602 + 128) = *((_OWORD *)v650 + 8);
        *(_OWORD *)(v602 + 144) = v520;
        long long v521 = *((_OWORD *)v650 + 3);
        *(_OWORD *)(v602 + 32) = *((_OWORD *)v650 + 2);
        *(_OWORD *)(v602 + 48) = v521;
        long long v522 = *((_OWORD *)v650 + 5);
        *(_OWORD *)(v602 + 64) = *((_OWORD *)v650 + 4);
        *(_OWORD *)(v602 + 80) = v522;
        long long v523 = *((_OWORD *)v650 + 1);
        *(_OWORD *)uint64_t v602 = *(_OWORD *)v650;
        *(_OWORD *)(v602 + 16) = v523;
        v624[3972] = 60;
        id v723 = (id)qword_10171B538;
        id v524 = [v707 layer];
        sub_1006006C8(v602, v604);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v715 + *(int *)(v778 + 28), 1, 1, v769);
        v768((uint64_t)v715 + *(int *)(v778 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v604, v775);
        *(_OWORD *)(v776 + 8) = v777;
        void *v715 = v723;
        *(void *)(v776 + 288) = 0;
        *(_DWORD *)(v776 + 296) = v779;
        sub_10054BD5C(v602);
        sub_100D6ED18((uint64_t)v715, v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v816 + 16) = 0x3FB999999999999ALL;
        sub_100D6ED80((uint64_t)v715, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v525 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v526) = 0.25;
        LODWORD(v527) = 0.25;
        LODWORD(v528) = 1.0;
        LODWORD(v529) = 1036831949;
        id v530 = [v525 initWithControlPoints:v526 :v529 :v527 :v528];
        sub_100D6ED18(v790, (uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

        id *v795 = v530;
        sub_100D6ED80(v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v773 + 96) = v815;
        *(void *)(v773 + 104) = &off_10150AF08;
        uint64_t v531 = sub_1005767BC((uint64_t *)(v773 + 72));
        sub_100D6ED18((uint64_t)v795, (uint64_t)v531, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *((void *)v827 + 1796) = &type metadata for CRLBasicLayerAnimation.Def;
        *((void *)v827 + 1797) = v702;
        uint64_t v532 = swift_allocObject();
        *((void *)v827 + 1793) = v532;
        sub_100549A68((uint64_t)v531, v532 + 16);
        *(unsigned char *)(sub_1005231B4(v605, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
        sub_1005FF368(v605);
        sub_100D6ED80((uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v708 = sub_100D5EAB8();
        *((void *)v827 + 438) = v756;
        v827[3760] = 6;
        id v724 = (id)qword_10171B538;
        id v533 = [v708 layer];
        sub_1006006C8(v607, v606);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v715 + *(int *)(v778 + 28), 1, 1, v769);
        v768((uint64_t)v715 + *(int *)(v778 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v606, v775);
        *(_OWORD *)(v776 + 8) = v777;
        void *v715 = v724;
        *(void *)(v776 + 288) = 0;
        *(_DWORD *)(v776 + 296) = v779;
        sub_10054BD5C(v607);
        sub_100D6ED18((uint64_t)v715, v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v816 + 16) = 0x3FB999999999999ALL;
        sub_100D6ED80((uint64_t)v715, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v534 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v535) = 0.25;
        LODWORD(v536) = 0.25;
        LODWORD(v537) = 1.0;
        LODWORD(v538) = 1036831949;
        id v539 = [v534 initWithControlPoints:v535 :v538 :v536 :v537];
        sub_100D6ED18(v790, (uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

        id *v795 = v539;
        sub_100D6ED80(v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v773 + 136) = v815;
        *(void *)(v773 + 144) = &off_10150AF08;
        v540 = sub_1005767BC((uint64_t *)(v773 + 112));
        sub_100D6ED18((uint64_t)v795, (uint64_t)v540, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *((void *)v827 + 1811) = &type metadata for CRLBasicLayerAnimation.Def;
        *((void *)v827 + 1812) = v702;
        uint64_t v541 = swift_allocObject();
        *((void *)v827 + 1808) = v541;
        sub_100549A68((uint64_t)v540, v541 + 16);
        *(unsigned char *)(sub_1005231B4(v608, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
        sub_1005FF368(v608);
        sub_100D6ED80((uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v725 = sub_100D5EAC4();
        *((void *)v827 + 339) = v756;
        v827[2968] = 6;
        id v758 = (id)qword_10171B538;
        id v542 = [v725 layer];
        sub_1006006C8(v610, v609);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v715 + *(int *)(v778 + 28), 1, 1, v769);
        v768((uint64_t)v715 + *(int *)(v778 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v609, v775);
        *(_OWORD *)(v776 + 8) = v777;
        void *v715 = v758;
        *(void *)(v776 + 288) = 0;
        *(_DWORD *)(v776 + 296) = v779;
        sub_10054BD5C(v610);
        sub_100D6ED18((uint64_t)v715, v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v816 + 16) = 0x3FB999999999999ALL;
        sub_100D6ED80((uint64_t)v715, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v543 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v544) = 0.25;
        LODWORD(v545) = 0.25;
        LODWORD(v546) = 1.0;
        LODWORD(v547) = 1036831949;
        id v548 = [v543 initWithControlPoints:v544 :v547 :v545 :v546];
        sub_100D6ED18(v790, (uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

        id *v795 = v548;
        sub_100D6ED80(v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v773 + 176) = v815;
        *(void *)(v773 + 184) = &off_10150AF08;
        v549 = sub_1005767BC((uint64_t *)(v773 + 152));
        sub_100D6ED18((uint64_t)v795, (uint64_t)v549, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *((void *)v827 + 1826) = &type metadata for CRLBasicLayerAnimation.Def;
        *((void *)v827 + 1827) = v702;
        uint64_t v550 = swift_allocObject();
        *((void *)v827 + 1823) = v550;
        sub_100549A68((uint64_t)v549, v550 + 16);
        *(unsigned char *)(sub_1005231B4(v611, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
        sub_1005FF368(v611);
        sub_100D6ED80((uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v551 = sub_100D5ED8C();
        *((void *)v827 + 801) = 0x3FE0000000000000;
        *((void *)v827 + 802) = 0x3FF0000000000000;
        *((void *)v827 + 803) = 0;
        *((void *)v827 + 804) = 0;
        v774[1624] = 1;
        *((void *)v827 + 806) = 0;
        v774[1640] = 2;
        v774[1848] = 58;
        uint64_t v552 = qword_10171B540;
        uint64_t v553 = qword_10171B548;
        uint64_t v554 = qword_10171B550;
        uint64_t v555 = qword_10171B558;
        v556 = v551;
        id v557 = [v551 layer];
        sub_1006006C8(v613, v612);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v711 + *(int *)(v761 + 28), 1, 1, v769);
        v768((uint64_t)v711 + *(int *)(v761 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v612, v750);
        *(void *)(v765 + 32) = 0;
        uint64_t *v711 = v552;
        *(void *)(v765 + 8) = v553;
        *(void *)(v765 + 16) = v554;
        *(void *)(v765 + 24) = v555;
        *(void *)(v765 + 304) = 0;
        *(_DWORD *)(v765 + 312) = v779;
        sub_10054BD5C(v613);
        sub_100D6ED18((uint64_t)v711, v748, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v767 + 16) = 0x3FF0000000000000;
        sub_100D6ED80((uint64_t)v711, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        sub_100D6ED18(v748, v737, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v804 + 24) = 0x406F400000000000;
        sub_100D6ED80(v748, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        sub_100D6ED18(v737, (uint64_t)v743, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        void *v743 = 0x4040000000000000;
        sub_100D6ED80(v737, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        sub_100D6ED18((uint64_t)v743, v717, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v811 + 8) = 0x3FF0000000000000;
        sub_100D6ED80((uint64_t)v743, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *(void *)(v773 + 216) = v755;
        *(void *)(v773 + 224) = &off_101534738;
        v558 = sub_1005767BC((uint64_t *)(v773 + 192));
        sub_100D6ED18(v717, (uint64_t)v558, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        *((void *)v827 + 1841) = &type metadata for CRLSpringLayerAnimation.Def;
        *((void *)v827 + 1842) = v800;
        uint64_t v559 = swift_allocObject();
        *((void *)v827 + 1838) = v559;
        sub_100823384((uint64_t)v558, v559 + 16);
        *(unsigned char *)(sub_1005231B4(v614, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
        sub_100F7DF84(v614);
        sub_100D6ED80(v717, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
        id v805 = sub_100D5ED8C();
        *((_DWORD *)v827 + 2328) = 0;
        *((_DWORD *)v827 + 2329) = 1065353216;
        unsigned char *v678 = 6;
        id v826 = (id)qword_10171B538;
        id v560 = [v805 layer];
        sub_1006006C8(v618, v617);
        UUID.init()();
        swift_unknownObjectWeakInit();
        v768((uint64_t)v715 + *(int *)(v778 + 28), 1, 1, v769);
        v768((uint64_t)v715 + *(int *)(v778 + 32), 1, 1, v769);
        swift_unknownObjectWeakAssign();

        sub_100549A0C(v617, v775);
        *(_OWORD *)(v776 + 8) = v777;
        void *v715 = v826;
        *(void *)(v776 + 288) = 0;
        *(_DWORD *)(v776 + 296) = v779;
        sub_10054BD5C(v618);
        sub_100D6ED18((uint64_t)v715, v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v816 + 16) = 0x3F9EB851EB851EB8;
        uint64_t v0 = v827;
        sub_100D6ED80((uint64_t)v715, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        id v561 = objc_allocWithZone((Class)CAMediaTimingFunction);
        LODWORD(v562) = 0.25;
        LODWORD(v563) = 0.25;
        LODWORD(v564) = 1.0;
        LODWORD(v565) = 1036831949;
        id v566 = [v561 initWithControlPoints:v562 :v565 :v563 :v564];
        sub_100D6ED18(v790, (uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

        id *v795 = v566;
        sub_100D6ED80(v790, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *(void *)(v773 + 256) = v815;
        *(void *)(v773 + 264) = &off_10150AF08;
        uint64_t v567 = sub_1005767BC((uint64_t *)(v773 + 232));
        sub_100D6ED18((uint64_t)v795, (uint64_t)v567, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        *((void *)v827 + 1856) = &type metadata for CRLBasicLayerAnimation.Def;
        *((void *)v827 + 1857) = v702;
        uint64_t v568 = swift_allocObject();
        *((void *)v827 + 1853) = v568;
        sub_100549A68((uint64_t)v567, v568 + 16);
        *(unsigned char *)(sub_1005231B4(v619, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
        sub_1005FF368(v619);
        sub_100D6ED80((uint64_t)v795, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
        double v569 = sub_1006C9744(v773, 1.97);
        uint64_t v571 = v570;
        double v572 = v569;
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v739 + 96) = &type metadata for CRLLayerAnimationGroup;
        *(void *)(v739 + 104) = &off_10150F5C8;
        *(void *)(v739 + 72) = v571;
        *(double *)(v739 + 80) = v572;
        double v573 = sub_100787FA0(v739, 0.0);
        uint64_t v575 = v574;
        double v576 = v573;
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        if (v713) {
          uint64_t v577 = v575;
        }
        else {
          uint64_t v577 = v732;
        }
        if (v713)
        {
          v578 = &off_1015133C8;
        }
        else
        {
          double v576 = v470;
          v578 = &off_10150F5C8;
        }
        if (v713) {
          v579 = &type metadata for CRLLayerAnimationSequence;
        }
        else {
          v579 = &type metadata for CRLLayerAnimationGroup;
        }
        swift_bridgeObjectRelease();
        *((void *)v827 + 1861) = v579;
        *((void *)v827 + 1862) = v578;
        *((void *)v827 + 1858) = v577;
        char v580 = (void *)*((void *)v827 + 1931);
        *((double *)v827 + 1859) = v576;
        sub_10050F848(v620, (uint64_t)v579);
        uint64_t v581 = swift_allocObject();
        *(void *)(v581 + 16) = v580;
        v582 = (double *)swift_allocObject();
        *((void *)v582 + 2) = v580;
        v582[3] = v699;
        v582[4] = v698;
        v582[5] = v697;
        v582[6] = v696;
        id v583 = v580;
        sub_100F5EFAC(0, 1, 1, (uint64_t)sub_100D6F030, v581, (uint64_t)sub_100D6F070, (uint64_t)v582, (uint64_t)v579, (uint64_t)v578);

        swift_release();
        swift_release();

        sub_1005CFCF0(v621);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v620);
        goto LABEL_16;
      }
      id v13 = sub_100D6E040(v12);

      if (v13)
      {
        id v14 = sub_100D5EAC4();
        id v15 = [v14 layer];

        if (!v15)
        {
          __break(1u);
          goto LABEL_258;
        }
        char v16 = sub_100D6E040(v15);

        if (v16)
        {
          sub_1009AC434((uint64_t)(v0 + 12320), (uint64_t)(v0 + 14744));
          uint64_t v17 = *((void *)v0 + 1846);
          if (v17)
          {
            v623 = v8;
            unint64_t v18 = (void *)*((void *)v0 + 1931);
            id v19 = objc_retain(*(id *)(*sub_10050F848((void *)v0 + 1843, v17)
                                    + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper));
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 14744));
            [v13 setNeedsDisplay];
            [v13 displayIfNeeded];
            [v16 setNeedsDisplay];
            [v16 displayIfNeeded];
            [v6 commit];
            [v19 bounds];
            double v817 = v21;
            double v821 = v20;
            id v22 = sub_100D5ED8C();
            [v22 bounds];
            double v806 = v24;
            double v812 = v23;

            id v25 = sub_100D5ED8C();
            [v25 bounds];
            CGFloat v796 = v27;
            CGFloat v801 = v26;

            id v28 = sub_100D5ED8C();
            [v28 bounds];
            CGFloat v30 = v29;
            CGFloat v32 = v31;
            CGFloat v791 = v33;
            CGFloat v787 = v34;

            [v19 frame];
            double v36 = v35;
            double v38 = v37;
            double v40 = v39;
            double v42 = v41;
            id v43 = [v18 view];
            v622 = v19;
            [v19 convertRect:v43 toView:v36];
            CGFloat v45 = v44;
            CGFloat v47 = v46;
            CGFloat v49 = v48;
            CGFloat v51 = v50;

            id v52 = [v18 view];
            if (v52)
            {
              id v53 = v52;
              v827 = v0;
              NSString v54 = (void *)*((void *)v0 + 1931);
              double v55 = sub_100067234(v821, v817, v812, v806);
              double v57 = sub_100065A10(v801, v796, v55, v56, v30, v32, v791, v787);
              double v59 = v58;
              double v61 = v60;
              double v63 = v62;
              [v53 layoutIfNeeded];

              double v64 = sub_100065738(v45, v47, v49, v51);
              double v699 = v45;
              double v698 = v47;
              double v697 = v49;
              double v696 = v51;
              sub_10006736C(v45, v47, v49, v51, v64, v65, 0.9);
              double v2 = v66;
              double v3 = v67;
              double v4 = v68;
              double v5 = v69;
              id v70 = sub_100D5ED8C();
              id v71 = [v54 view];
              [v70 convertRect:v71 toView:v57];
              CGFloat v73 = v72;
              CGFloat v75 = v74;
              CGFloat v77 = v76;
              CGFloat v79 = v78;

              double v80 = sub_100065738(v73, v75, v77, v79);
              sub_10006736C(v73, v75, v77, v79, v80, v81, 0.5);
              uint64_t v628 = v82;
              uint64_t v629 = v83;
              uint64_t v630 = v84;
              uint64_t v631 = v85;
              sub_1005057FC((uint64_t *)&unk_101676C10);
              uint64_t v86 = swift_allocObject();
              *(_OWORD *)(v86 + 16) = xmmword_10117DF50;
              *(void *)(v86 + 32) = sub_100D5EAB8();
              *(void *)(v86 + 40) = sub_100D5EAC4();
              specialized Array._endMutation()();
              uint64_t v87 = swift_allocObject();
              *(_OWORD *)(v87 + 16) = xmmword_10117DF50;
              *(void *)(v87 + 32) = v13;
              *(void *)(v87 + 40) = v16;
              unint64_t v830 = v87;
              specialized Array._endMutation()();
              unint64_t v752 = v830;
              v807 = v13;
              v813 = v16;
              [v6 begin];
              [v6 setDisableActions:1];
              swift_bridgeObjectRetain();
              unint64_t v747 = v86 & 0xC000000000000001;
              uint64_t v621 = (uint64_t)(v0 + 12288);
              uint64_t v716 = v86 + 32;
              double v672 = v73;
              double v671 = v75;
              double v670 = v77;
              double v669 = v79;
              if ((v86 & 0xC000000000000001) != 0) {
                id v88 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v88 = *(id *)(v86 + 32);
              }
              uint64_t v90 = v88;
              [v88 setClipsToBounds:0];
              id v91 = [v90 layer];
              if (v91)
              {
                id v92 = v91;
                [v91 setAnchorPoint:0.5, 0.5];
                [v92 setFrame:v699, v698, v697, v696];
                if (qword_101670088 != -1) {
                  swift_once();
                }
                [v92 setShadowOffset:xmmword_10171C650];
              }
              if (v747) {
                id v93 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v93 = *(id *)(v86 + 40);
              }
              uint64_t v94 = v93;
              v678 = v0 + 9568;
              id v95 = v0;
              v774 = v0 + 4816;
              uint64_t v625 = (uint64_t)(v0 + 4296);
              uint64_t v601 = (uint64_t)(v0 + 4560);
              uint64_t v598 = (uint64_t)(v0 + 4824);
              uint64_t v710 = (uint64_t)(v0 + 5088);
              uint64_t v709 = (uint64_t)(v0 + 5352);
              uint64_t v599 = (uint64_t)(v0 + 5616);
              uint64_t v822 = (uint64_t)(v0 + 5880);
              uint64_t v595 = (uint64_t)(v0 + 6144);
              uint64_t v613 = (uint64_t)(v0 + 6408);
              uint64_t v596 = (uint64_t)(v0 + 6672);
              uint64_t v592 = (uint64_t)(v0 + 6936);
              uint64_t v593 = (uint64_t)(v0 + 7200);
              uint64_t v589 = (uint64_t)(v0 + 7464);
              uint64_t v590 = (uint64_t)(v0 + 7728);
              uint64_t v584 = (uint64_t)(v0 + 7992);
              uint64_t v587 = (uint64_t)(v0 + 8256);
              uint64_t v662 = (uint64_t)(v0 + 8520);
              uint64_t v660 = (uint64_t)(v0 + 8784);
              uint64_t v612 = (uint64_t)(v0 + 9048);
              uint64_t v618 = (uint64_t)(v0 + 9312);
              uint64_t v676 = (uint64_t)(v0 + 9576);
              uint64_t v664 = (uint64_t)(v0 + 9840);
              uint64_t v637 = (uint64_t)(v0 + 10104);
              uint64_t v677 = (uint64_t)(v0 + 10368);
              uint64_t v666 = (uint64_t)(v0 + 10632);
              uint64_t v636 = (uint64_t)(v0 + 10896);
              uint64_t v617 = (uint64_t)(v0 + 11160);
              uint64_t v649 = (uint64_t)(v0 + 11424);
              uint64_t v648 = (uint64_t)(v0 + 11688);
              v650 = v0 + 11952;
              uint64_t v627 = (uint64_t)(v0 + 12152);
              v651 = (uint64_t *)(v0 + 12464);
              v638 = (long long *)(v0 + 12504);
              v632 = (long long *)(v0 + 12584);
              v653 = (long long *)(v0 + 12664);
              v654 = (uint64_t *)(v0 + 12704);
              v680 = (long long *)(v0 + 12744);
              v668 = (uint64_t *)(v0 + 12784);
              v640 = (long long *)(v0 + 12824);
              v655 = (uint64_t *)(v0 + 12864);
              v682 = (long long *)(v0 + 12904);
              v686 = (uint64_t *)(v0 + 12944);
              uint64_t v647 = (uint64_t)(v0 + 12984);
              v683 = (uint64_t *)(v0 + 13024);
              uint64_t v646 = (uint64_t)(v0 + 13064);
              v685 = (long long *)(v0 + 13104);
              uint64_t v780 = (uint64_t)(v0 + 13144);
              v633 = (long long *)(v0 + 13184);
              v642 = (uint64_t *)(v0 + 13224);
              uint64_t v667 = (uint64_t)(v0 + 13264);
              uint64_t v665 = (uint64_t)(v0 + 13304);
              uint64_t v641 = (uint64_t)(v0 + 13344);
              uint64_t v663 = (uint64_t)(v0 + 13384);
              uint64_t v635 = (uint64_t)(v0 + 13424);
              uint64_t v661 = (uint64_t)(v0 + 13464);
              uint64_t v740 = (uint64_t)(v0 + 13504);
              v691 = (uint64_t *)(v0 + 13544);
              v688 = (long long *)(v0 + 13584);
              uint64_t v588 = (uint64_t)(v0 + 13624);
              v694 = (uint64_t *)(v0 + 13664);
              v690 = (long long *)(v0 + 13704);
              uint64_t v591 = (uint64_t)(v0 + 13744);
              v703 = (uint64_t *)(v0 + 13784);
              v693 = (long long *)(v0 + 13824);
              uint64_t v594 = (uint64_t)(v0 + 13864);
              uint64_t v726 = (uint64_t)(v0 + 13904);
              uint64_t v597 = (uint64_t)(v0 + 13984);
              uint64_t v706 = (uint64_t)(v0 + 14024);
              v718 = (uint64_t *)(v0 + 14064);
              uint64_t v600 = (uint64_t)(v0 + 14104);
              v701 = (long long *)(v0 + 14144);
              v733 = (uint64_t *)(v0 + 14184);
              uint64_t v603 = (uint64_t)(v0 + 14224);
              v714 = (long long *)(v0 + 14264);
              v749 = (uint64_t *)(v0 + 14304);
              uint64_t v605 = (uint64_t)(v0 + 14344);
              v730 = (long long *)(v0 + 14384);
              uint64_t v712 = (uint64_t)(v0 + 14424);
              uint64_t v608 = (uint64_t)(v0 + 14464);
              uint64_t v762 = (uint64_t)(v0 + 14544);
              uint64_t v611 = (uint64_t)(v0 + 14584);
              v818 = (uint64_t *)(v0 + 14624);
              v745 = (long long *)(v0 + 14664);
              uint64_t v614 = (uint64_t)(v0 + 14704);
              v675 = (long long *)(v0 + 14784);
              uint64_t v619 = (uint64_t)(v0 + 14824);
              v620 = v0 + 14864;
              uint64_t v639 = (uint64_t)(v0 + 14904);
              uint64_t v652 = (uint64_t)(v0 + 14944);
              uint64_t v656 = (uint64_t)(v0 + 14984);
              uint64_t v658 = (uint64_t)(v0 + 15024);
              uint64_t v674 = (uint64_t)(v0 + 15064);
              uint64_t v679 = (uint64_t)(v0 + 15104);
              uint64_t v681 = (uint64_t)(v0 + 15144);
              uint64_t v684 = (uint64_t)(v0 + 15184);
              uint64_t v687 = (uint64_t)(v0 + 15224);
              uint64_t v689 = (uint64_t)(v0 + 15264);
              uint64_t v692 = (uint64_t)(v0 + 15304);
              uint64_t v700 = (uint64_t)(v0 + 15344);
              v643 = v0 + 16;
              v645 = v0 + 320;
              v634 = v0 + 624;
              __srCGFloat c = v0 + 928;
              v705 = v0 + 1232;
              v704 = v0 + 1536;
              v759 = v0 + 1840;
              __dst = v0 + 2144;
              uint64_t v609 = (uint64_t)(v0 + 2448);
              uint64_t v610 = (uint64_t)(v0 + 2712);
              uint64_t v757 = (uint64_t)(v0 + 2976);
              uint64_t v606 = (uint64_t)(v0 + 3240);
              uint64_t v607 = (uint64_t)(v0 + 3504);
              uint64_t v604 = (uint64_t)(v0 + 3768);
              [v93 setClipsToBounds:0];
              id v96 = v94;
              id v97 = [v94 layer];
              if (v97)
              {
                NSString v98 = v97;
                [v97 setAnchorPoint:0.5, 0.5];
                [v98 setFrame:v699, v698, v697, v696];
                if (qword_101670088 != -1) {
                  swift_once();
                }
                [v98 setShadowOffset:xmmword_10171C650];
              }
              v659 = (uint64_t *)(v827 + 12544);
              v657 = (uint64_t *)(v827 + 12624);
              v624 = (unsigned __int8 *)(v827 + 316);
              uint64_t v602 = (uint64_t)(v827 + 4032);

              swift_bridgeObjectRelease();
              uint64_t v770 = *((void *)v827 + 1945);
              uint64_t v99 = *((void *)v827 + 1943);
              uint64_t v778 = *((void *)v827 + 1938);
              uint64_t v100 = v807;
              swift_bridgeObjectRetain();
              [v100 setMasksToBounds:1];
              [v100 setCornerCurve:kCACornerCurveContinuous];
              [v100 setAllowsEdgeAntialiasing:1];
              v616 = v100;

              uint64_t v101 = v813;
              [v101 setMasksToBounds:1];
              [v101 setCornerCurve:kCACornerCurveContinuous];
              [v101 setAllowsEdgeAntialiasing:1];
              v615 = v101;

              swift_bridgeObjectRelease();
              [v6 commit];
              sub_1005057FC((uint64_t *)&unk_101683FC0);
              uint64_t v102 = swift_allocObject();
              long long v626 = xmmword_10117E810;
              *(_OWORD *)(v102 + 16) = xmmword_10117E810;
              v585 = (double *)v102;
              uint64_t v103 = swift_allocObject();
              long long v586 = xmmword_10117DF40;
              *(_OWORD *)(v103 + 16) = xmmword_10117DF40;
              v673 = (double *)v103;
              uint64_t v104 = swift_allocObject();
              *(_OWORD *)(v104 + 16) = xmmword_1011807B0;
              v695 = (void *)v104;
              v829 = _swiftEmptyArrayStorage;
              unint64_t v786 = v752 & 0xC000000000000001;
              v735 = (char *)(v752 + 32);
              uint64_t v776 = v99;
              uint64_t v775 = v99 + 24;
              swift_bridgeObjectRetain();
              char v105 = 0;
              uint64_t v106 = 0;
              long long v777 = xmmword_10117EE20;
              int v779 = 131586;
              do
              {
                char v107 = v105;
                if (v786) {
                  id v108 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v108 = *(id *)&v735[8 * v106];
                }
                id v109 = v108;
                if (qword_101670078 != -1) {
                  swift_once();
                }
                char v792 = v107;
                uint64_t v110 = qword_10171C640;
                v95[735] = 0;
                v95[736] = v110;
                v827[6136] = 14;
                if (qword_10166F720 != -1) {
                  swift_once();
                }
                uint64_t v802 = v95[1945];
                v808 = (id *)v95[1946];
                uint64_t v111 = v95[1944];
                id v112 = (char *)v95[1943];
                uint64_t v814 = *((void *)v827 + 1938);
                id v113 = (void *)qword_10171B538;
                sub_1006006C8(v822, v757);
                id v797 = v113;
                id v114 = v109;
                UUID.init()();
                swift_unknownObjectWeakInit();
                uint64_t v115 = &v112[*(int *)(v778 + 28)];
                uint64_t v116 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
                uint64_t v117 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56);
                v117(v115, 1, 1, v116);
                uint64_t v769 = v116;
                v768 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v117;
                v117(&v112[*(int *)(v778 + 32)], 1, 1, v116);
                swift_unknownObjectWeakAssign();

                sub_100549A0C(v757, v775);
                *(_OWORD *)(v776 + 8) = xmmword_10117EE20;
                *(void *)id v112 = v797;
                *(void *)(v776 + 288) = 0;
                *(_DWORD *)(v776 + 296) = 131586;
                sub_100600728((uint64_t)v112, v111);
                sub_10054BD5C(v822);
                sub_100D6ED18(v111, v802, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
                *(void *)(v770 + 16) = 0x3FCC28F5C28F5C29;
                sub_100D6ED80(v111, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
                id v118 = objc_allocWithZone((Class)CAMediaTimingFunction);
                LODWORD(v119) = 1036831949;
                LODWORD(v120) = 0.25;
                LODWORD(v121) = 0.25;
                LODWORD(v122) = 1.0;
                id v123 = [v118 initWithControlPoints:v120 :v119 :v121 :v122];
                sub_100D6ED18(v802, (uint64_t)v808, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

                id *v808 = v123;
                sub_100D6ED80(v802, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
                *((void *)v827 + 1831) = v814;
                id v95 = v827;
                *((void *)v827 + 1832) = &off_10150AF08;
                id v124 = sub_1005767BC(v818);
                sub_100D6ED18((uint64_t)v808, (uint64_t)v124, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
                *((void *)v827 + 1821) = &type metadata for CRLBasicLayerAnimation.Def;
                unint64_t v125 = sub_10054CB94();
                *((void *)v827 + 1822) = v125;
                uint64_t v126 = swift_allocObject();
                *((void *)v827 + 1818) = v126;
                sub_100549A68((uint64_t)v124, v126 + 16);
                *(unsigned char *)(sub_1005231B4(v762, *((void *)v827 + 1821)) + 297) = 0;
                sub_1005498A4(v762, (uint64_t)(v827 + 14504));
                sub_1005057FC((uint64_t *)&unk_101683FD0);
                if (!swift_dynamicCast())
                {
                  _OWORD *v759 = 0u;
                  *((_OWORD *)v827 + 116) = 0u;
                  *((_OWORD *)v827 + 117) = 0u;
                  *((_OWORD *)v827 + 118) = 0u;
                  *((_OWORD *)v827 + 119) = 0u;
                  *((_OWORD *)v827 + 120) = 0u;
                  *((_OWORD *)v827 + 121) = 0u;
                  *((_OWORD *)v827 + 122) = 0u;
                  *((_OWORD *)v827 + 123) = 0u;
                  *((_OWORD *)v827 + 124) = 0u;
                  *((_OWORD *)v827 + 125) = 0u;
                  *((_OWORD *)v827 + 126) = 0u;
                  *((_OWORD *)v827 + 127) = 0u;
                  *((_OWORD *)v827 + 128) = 0u;
                  *((_OWORD *)v827 + 129) = 0u;
                  *((_OWORD *)v827 + 130) = 0u;
                  *((_OWORD *)v827 + 131) = 0u;
                  *((_OWORD *)v827 + 132) = 0u;
                  *(_OWORD *)(v827 + 2124) = 0u;
                  sub_100522F00((uint64_t)v759, (uint64_t *)&unk_10169AEF0);
                  unint64_t v830 = 0;
                  unint64_t v831 = 0xE000000000000000;
                  _StringGuts.grow(_:)(69);
                  unint64_t v136 = v831;
                  *((void *)v827 + 1923) = v830;
                  *((void *)v827 + 1924) = v136;
                  v137._object = (void *)0x800000010123FAA0;
                  v137._countAndFlagsBits = 0xD000000000000043;
                  String.append(_:)(v137);
                  _print_unlocked<A, B>(_:_:)();
LABEL_49:
                  _assertionFailure(_:_:file:line:flags:)();
                  return;
                }
                uint64_t v127 = *((void *)v827 + 1946);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v762);
                memcpy(__dst, v759, 0x12CuLL);
                sub_100600690((uint64_t)__dst, (uint64_t)v124);
                sub_100D6ED80(v127, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

                if (*((void *)v827 + 1831))
                {
                  sub_10053974C((long long *)v818, (uint64_t)v745);
                  sub_10053974C(v745, v780);
                  id v128 = v829;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    id v128 = sub_100F62770(0, *((void *)v128 + 2) + 1, 1, v128);
                    v829 = v128;
                  }
                  unint64_t v130 = *((void *)v128 + 2);
                  unint64_t v129 = *((void *)v128 + 3);
                  if (v130 >= v129 >> 1) {
                    v829 = sub_100F62770((double *)(v129 > 1), v130 + 1, 1, v128);
                  }
                  uint64_t v131 = *((void *)v827 + 1646);
                  uint64_t v132 = *((void *)v827 + 1647);
                  uint64_t v133 = sub_1005231B4(v780, v131);
                  uint64_t v134 = *(void *)(v131 - 8);
                  uint64_t v135 = swift_task_alloc();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 16))(v135, v133, v131);
                  sub_100667930(v130, v135, (uint64_t *)&v829, v131, v132);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v780);
                  swift_task_dealloc();
                }
                else
                {
                  sub_100522F00((uint64_t)v818, (uint64_t *)&unk_101683FE0);
                }
                char v105 = 1;
                uint64_t v106 = 1;
              }
              while ((v792 & 1) == 0);
              unint64_t v702 = v125;
              swift_bridgeObjectRelease();
              id v138 = v829;
              v695[7] = &type metadata for CRLLayerAnimationGroup;
              v695[8] = &off_10150F5C8;
              v695[4] = v138;
              v695[5] = 0;
              v829 = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              char v139 = 0;
              uint64_t v140 = 0;
              do
              {
                char v141 = v139;
                if (v747) {
                  id v142 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v142 = *(id *)(v716 + 8 * v140);
                }
                uint64_t v143 = v142;
                unint64_t v830 = (unint64_t)v142;
                sub_100D6A288((void **)&v830, v749, v699, v698, v697, v696, v2, v3, v4, v5);

                if (*((void *)v827 + 1791))
                {
                  sub_10053974C((long long *)v749, (uint64_t)v730);
                  sub_10053974C(v730, v740);
                  uint64_t v144 = v829;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    uint64_t v144 = sub_100F62770(0, *((void *)v144 + 2) + 1, 1, v144);
                    v829 = v144;
                  }
                  unint64_t v146 = *((void *)v144 + 2);
                  unint64_t v145 = *((void *)v144 + 3);
                  if (v146 >= v145 >> 1) {
                    v829 = sub_100F62770((double *)(v145 > 1), v146 + 1, 1, v144);
                  }
                  uint64_t v147 = *((void *)v827 + 1691);
                  uint64_t v148 = *((void *)v827 + 1692);
                  uint64_t v149 = sub_1005231B4(v740, v147);
                  uint64_t v150 = *(void *)(v147 - 8);
                  uint64_t v151 = swift_task_alloc();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 16))(v151, v149, v147);
                  sub_100667930(v146, v151, (uint64_t *)&v829, v147, v148);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v740);
                  swift_task_dealloc();
                }
                else
                {
                  sub_100522F00((uint64_t)v749, (uint64_t *)&unk_101683FE0);
                }
                char v139 = 1;
                uint64_t v140 = 1;
              }
              while ((v141 & 1) == 0);
              swift_bridgeObjectRelease();
              char v152 = v829;
              v695[12] = &type metadata for CRLLayerAnimationGroup;
              v695[13] = &off_10150F5C8;
              v695[9] = v152;
              v695[10] = 0;
              v829 = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              char v153 = 0;
              uint64_t v154 = 0;
              do
              {
                char v155 = v153;
                if (v786) {
                  id v156 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v156 = *(id *)&v735[8 * v154];
                }
                char v157 = v156;
                unint64_t v830 = (unint64_t)v156;
                sub_100D6A7D0((void **)&v830, v733);

                if (*((void *)v827 + 1776))
                {
                  sub_10053974C((long long *)v733, (uint64_t)v714);
                  sub_10053974C(v714, v726);
                  unint64_t v158 = v829;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    unint64_t v158 = sub_100F62770(0, *((void *)v158 + 2) + 1, 1, v158);
                    v829 = v158;
                  }
                  unint64_t v160 = *((void *)v158 + 2);
                  unint64_t v159 = *((void *)v158 + 3);
                  if (v160 >= v159 >> 1) {
                    v829 = sub_100F62770((double *)(v159 > 1), v160 + 1, 1, v158);
                  }
                  uint64_t v161 = *((void *)v827 + 1741);
                  uint64_t v162 = *((void *)v827 + 1742);
                  uint64_t v163 = sub_1005231B4(v726, v161);
                  uint64_t v164 = *(void *)(v161 - 8);
                  uint64_t v165 = swift_task_alloc();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 16))(v165, v163, v161);
                  sub_100667930(v160, v165, (uint64_t *)&v829, v161, v162);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v726);
                  swift_task_dealloc();
                }
                else
                {
                  sub_100522F00((uint64_t)v733, (uint64_t *)&unk_101683FE0);
                }
                char v153 = 1;
                uint64_t v154 = 1;
              }
              while ((v155 & 1) == 0);
              swift_bridgeObjectRelease();
              uint64_t v166 = v829;
              v695[17] = &type metadata for CRLLayerAnimationGroup;
              v695[18] = &off_10150F5C8;
              v695[14] = v166;
              v695[15] = 0;
              v829 = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              char v167 = 0;
              uint64_t v168 = 0;
              do
              {
                char v798 = v167;
                if (v786) {
                  id v169 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v169 = *(id *)&v735[8 * v168];
                }
                id v170 = v169;
                if (qword_101670068 != -1) {
                  swift_once();
                }
                uint64_t v809 = v95[1945];
                uint64_t v171 = v95[1944];
                uint64_t v172 = (void *)*((void *)v827 + 1943);
                v819 = (id *)*((void *)v827 + 1942);
                uint64_t v823 = *((void *)v827 + 1938);
                uint64_t v173 = qword_10171C630;
                *((void *)v827 + 636) = 0;
                *((void *)v827 + 637) = v173;
                v827[5344] = 16;
                uint64_t v174 = (void *)qword_10171B538;
                sub_1006006C8(v710, v709);
                id v803 = v174;
                id v175 = v170;
                UUID.init()();
                swift_unknownObjectWeakInit();
                v768((uint64_t)v172 + *(int *)(v778 + 28), 1, 1, v769);
                v768((uint64_t)v172 + *(int *)(v778 + 32), 1, 1, v769);
                uint64_t v176 = v175;
                swift_unknownObjectWeakAssign();

                sub_100549A0C(v709, v775);
                *(_OWORD *)(v776 + 8) = xmmword_10117EE20;
                void *v172 = v803;
                *(void *)(v776 + 288) = 0;
                *(_DWORD *)(v776 + 296) = 131586;
                uint64_t v177 = (uint64_t)v172;
                id v95 = v827;
                sub_100600728(v177, v171);
                sub_10054BD5C(v710);
                sub_100D6ED18(v171, v809, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
                *(void *)(v770 + 16) = 0x3FCC28F5C28F5C29;
                sub_100D6ED80(v171, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
                id v178 = objc_allocWithZone((Class)CAMediaTimingFunction);
                LODWORD(v179) = 1036831949;
                LODWORD(v180) = 0.25;
                LODWORD(v181) = 0.25;
                LODWORD(v182) = 1.0;
                id v183 = [v178 initWithControlPoints:v180 :v179 :v181 :v182];
                sub_100D6ED18(v809, (uint64_t)v819, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

                id *v819 = v183;
                sub_100D6ED80(v809, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
                *((void *)v827 + 1761) = v823;
                *((void *)v827 + 1762) = &off_10150AF08;
                unint64_t v184 = sub_1005767BC(v718);
                sub_100D6ED18((uint64_t)v819, (uint64_t)v184, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
                *((void *)v827 + 1756) = &type metadata for CRLBasicLayerAnimation.Def;
                *((void *)v827 + 1757) = v702;
                uint64_t v185 = swift_allocObject();
                *((void *)v827 + 1753) = v185;
                sub_100549A68((uint64_t)v184, v185 + 16);
                *(unsigned char *)(sub_1005231B4(v706, *((void *)v827 + 1756)) + 297) = 0;
                sub_1005498A4(v706, (uint64_t)(v827 + 13944));
                if (!swift_dynamicCast())
                {
                  _OWORD *v705 = 0u;
                  *((_OWORD *)v827 + 78) = 0u;
                  *((_OWORD *)v827 + 79) = 0u;
                  *((_OWORD *)v827 + 80) = 0u;
                  *((_OWORD *)v827 + 81) = 0u;
                  *((_OWORD *)v827 + 82) = 0u;
                  *((_OWORD *)v827 + 83) = 0u;
                  *((_OWORD *)v827 + 84) = 0u;
                  *((_OWORD *)v827 + 85) = 0u;
                  *((_OWORD *)v827 + 86) = 0u;
                  *((_OWORD *)v827 + 87) = 0u;
                  *((_OWORD *)v827 + 88) = 0u;
                  *((_OWORD *)v827 + 89) = 0u;
                  *((_OWORD *)v827 + 90) = 0u;
                  *((_OWORD *)v827 + 91) = 0u;
                  *((_OWORD *)v827 + 92) = 0u;
                  *((_OWORD *)v827 + 93) = 0u;
                  *((_OWORD *)v827 + 94) = 0u;
                  *(_OWORD *)(v827 + 1516) = 0u;
                  sub_100522F00((uint64_t)v705, (uint64_t *)&unk_10169AEF0);
                  unint64_t v830 = 0;
                  unint64_t v831 = 0xE000000000000000;
                  _StringGuts.grow(_:)(69);
                  unint64_t v195 = v831;
                  *((void *)v827 + 1925) = v830;
                  *((void *)v827 + 1926) = v195;
                  v196._object = (void *)0x800000010123FAA0;
                  v196._countAndFlagsBits = 0xD000000000000043;
                  String.append(_:)(v196);
                  _print_unlocked<A, B>(_:_:)();
                  goto LABEL_49;
                }
                uint64_t v186 = *((void *)v827 + 1942);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v706);
                memcpy(v704, v705, 0x12CuLL);
                sub_100600690((uint64_t)v704, (uint64_t)v184);
                sub_100D6ED80(v186, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

                if (*((void *)v827 + 1761))
                {
                  sub_10053974C((long long *)v718, (uint64_t)v701);
                  sub_10053974C(v701, v712);
                  unint64_t v187 = v829;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    unint64_t v187 = sub_100F62770(0, *((void *)v187 + 2) + 1, 1, v187);
                    v829 = v187;
                  }
                  unint64_t v189 = *((void *)v187 + 2);
                  unint64_t v188 = *((void *)v187 + 3);
                  if (v189 >= v188 >> 1) {
                    v829 = sub_100F62770((double *)(v188 > 1), v189 + 1, 1, v187);
                  }
                  uint64_t v190 = *((void *)v827 + 1806);
                  uint64_t v191 = *((void *)v827 + 1807);
                  uint64_t v192 = sub_1005231B4(v712, v190);
                  uint64_t v193 = *(void *)(v190 - 8);
                  uint64_t v194 = swift_task_alloc();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v193 + 16))(v194, v192, v190);
                  sub_100667930(v189, v194, (uint64_t *)&v829, v190, v191);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v712);
                  swift_task_dealloc();
                }
                else
                {
                  sub_100522F00((uint64_t)v718, (uint64_t *)&unk_101683FE0);
                }
                char v167 = 1;
                uint64_t v168 = 1;
              }
              while ((v798 & 1) == 0);
              swift_bridgeObjectRelease();
              uint64_t v197 = v829;
              v695[22] = &type metadata for CRLLayerAnimationGroup;
              v695[23] = &off_10150F5C8;
              v695[19] = v197;
              v695[20] = 0;
              v829 = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              char v198 = 0;
              uint64_t v199 = 0;
              do
              {
                char v200 = v198;
                if (v747) {
                  id v201 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v201 = *(id *)(v716 + 8 * v199);
                }
                uint64_t v202 = v201;
                unint64_t v830 = (unint64_t)v201;
                sub_100D6ABAC((void **)&v830, v703);

                if (*((void *)v827 + 1726))
                {
                  sub_10053974C((long long *)v703, (uint64_t)v693);
                  sub_10053974C(v693, v700);
                  uint64_t v203 = v829;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    uint64_t v203 = sub_100F62770(0, *((void *)v203 + 2) + 1, 1, v203);
                    v829 = v203;
                  }
                  unint64_t v205 = *((void *)v203 + 2);
                  unint64_t v204 = *((void *)v203 + 3);
                  if (v205 >= v204 >> 1) {
                    v829 = sub_100F62770((double *)(v204 > 1), v205 + 1, 1, v203);
                  }
                  uint64_t v206 = *((void *)v827 + 1921);
                  uint64_t v207 = *((void *)v827 + 1922);
                  uint64_t v208 = sub_1005231B4(v700, v206);
                  uint64_t v209 = *(void *)(v206 - 8);
                  uint64_t v210 = swift_task_alloc();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v209 + 16))(v210, v208, v206);
                  sub_100667930(v205, v210, (uint64_t *)&v829, v206, v207);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v700);
                  swift_task_dealloc();
                }
                else
                {
                  sub_100522F00((uint64_t)v703, (uint64_t *)&unk_101683FE0);
                }
                char v198 = 1;
                uint64_t v199 = 1;
              }
              while ((v200 & 1) == 0);
              swift_bridgeObjectRelease();
              uint64_t v211 = v829;
              v695[27] = &type metadata for CRLLayerAnimationGroup;
              v695[28] = &off_10150F5C8;
              v695[24] = v211;
              v695[25] = 0;
              v829 = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              char v212 = 0;
              uint64_t v213 = 0;
              do
              {
                char v214 = v212;
                if (v747) {
                  id v215 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v215 = *(id *)(v716 + 8 * v213);
                }
                uint64_t v216 = v215;
                unint64_t v830 = (unint64_t)v215;
                sub_100D6B094((void **)&v830, v694);

                if (*((void *)v827 + 1711))
                {
                  sub_10053974C((long long *)v694, (uint64_t)v690);
                  sub_10053974C(v690, v692);
                  uint64_t v217 = v829;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    uint64_t v217 = sub_100F62770(0, *((void *)v217 + 2) + 1, 1, v217);
                    v829 = v217;
                  }
                  unint64_t v219 = *((void *)v217 + 2);
                  unint64_t v218 = *((void *)v217 + 3);
                  if (v219 >= v218 >> 1) {
                    v829 = sub_100F62770((double *)(v218 > 1), v219 + 1, 1, v217);
                  }
                  uint64_t v220 = *((void *)v827 + 1916);
                  uint64_t v221 = *((void *)v827 + 1917);
                  uint64_t v222 = sub_1005231B4(v692, v220);
                  uint64_t v223 = *(void *)(v220 - 8);
                  uint64_t v224 = swift_task_alloc();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v223 + 16))(v224, v222, v220);
                  sub_100667930(v219, v224, (uint64_t *)&v829, v220, v221);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v692);
                  swift_task_dealloc();
                }
                else
                {
                  sub_100522F00((uint64_t)v694, (uint64_t *)&unk_101683FE0);
                }
                char v212 = 1;
                uint64_t v213 = 1;
              }
              while ((v214 & 1) == 0);
              swift_bridgeObjectRelease();
              id v225 = v829;
              v695[32] = &type metadata for CRLLayerAnimationGroup;
              v695[33] = &off_10150F5C8;
              v695[29] = v225;
              v695[30] = 0;
              v829 = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              char v226 = 0;
              uint64_t v227 = 0;
              do
              {
                char v228 = v226;
                if (v747) {
                  id v229 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v229 = *(id *)(v716 + 8 * v227);
                }
                id v230 = v229;
                unint64_t v830 = (unint64_t)v229;
                sub_100D6B4FC((void **)&v830, v691);

                if (*((void *)v827 + 1696))
                {
                  sub_10053974C((long long *)v691, (uint64_t)v688);
                  sub_10053974C(v688, v689);
                  uint64_t v231 = v829;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    uint64_t v231 = sub_100F62770(0, *((void *)v231 + 2) + 1, 1, v231);
                    v829 = v231;
                  }
                  unint64_t v233 = *((void *)v231 + 2);
                  unint64_t v232 = *((void *)v231 + 3);
                  if (v233 >= v232 >> 1) {
                    v829 = sub_100F62770((double *)(v232 > 1), v233 + 1, 1, v231);
                  }
                  uint64_t v234 = *((void *)v827 + 1911);
                  uint64_t v235 = *((void *)v827 + 1912);
                  uint64_t v236 = sub_1005231B4(v689, v234);
                  uint64_t v237 = *(void *)(v234 - 8);
                  uint64_t v238 = swift_task_alloc();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 16))(v238, v236, v234);
                  sub_100667930(v233, v238, (uint64_t *)&v829, v234, v235);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v689);
                  swift_task_dealloc();
                }
                else
                {
                  sub_100522F00((uint64_t)v691, (uint64_t *)&unk_101683FE0);
                }
                char v226 = 1;
                uint64_t v227 = 1;
              }
              while ((v228 & 1) == 0);
              v799 = (id *)*((void *)v827 + 1945);
              uint64_t v816 = *((void *)v827 + 1944);
              v781 = (void *)*((void *)v827 + 1943);
              uint64_t v239 = *((void *)v827 + 1941);
              uint64_t v810 = *((void *)v827 + 1938);
              swift_bridgeObjectRelease();
              id v240 = v829;
              v695[37] = &type metadata for CRLLayerAnimationGroup;
              v695[38] = &off_10150F5C8;
              v695[34] = v240;
              v695[35] = 0;
              double v241 = sub_1006C9744((uint64_t)v695, 0.0);
              uint64_t v243 = v242;
              double v244 = v241;
              swift_setDeallocating();
              sub_1005057FC((uint64_t *)&unk_101683FE0);
              swift_arrayDestroy();
              swift_deallocClassInstance();
              *((void *)v673 + 7) = &type metadata for CRLLayerAnimationGroup;
              *((void *)v673 + 8) = &off_10150F5C8;
              *((void *)v673 + 4) = v243;
              v673[5] = v244;
              uint64_t v820 = swift_allocObject();
              *(_OWORD *)(v820 + 16) = xmmword_101192420;
              id v763 = sub_100D5EAB8();
              uint64_t v744 = 0x3F80000000000000;
              *((void *)v827 + 1065) = 0x3F80000000000000;
              v827[8776] = 6;
              id v766 = (id)qword_10171B538;
              id v245 = [v763 layer];
              sub_1006006C8(v662, v660);
              UUID.init()();
              swift_unknownObjectWeakInit();
              v768(v239 + *(int *)(v778 + 28), 1, 1, v769);
              v768(v239 + *(int *)(v778 + 32), 1, 1, v769);
              swift_unknownObjectWeakAssign();

              sub_100549A0C(v660, v239 + 24);
              *(_OWORD *)(v239 + 8) = xmmword_10117EE20;
              *(void *)uint64_t v239 = v766;
              *(void *)(v239 + 288) = 0;
              *(_DWORD *)(v239 + 296) = 131586;
              sub_10054BD5C(v662);
              sub_100D6ED18(v239, (uint64_t)v781, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              *((void *)v827 + 1686) = &type metadata for CRLBasicLayerAnimation.Def;
              *((void *)v827 + 1687) = v702;
              uint64_t v246 = swift_allocObject();
              *((void *)v827 + 1683) = v246;
              sub_100549A68((uint64_t)v781, v246 + 16);
              *(void *)(sub_1005231B4(v661, *((void *)v827 + 1686)) + 8) = 0x3FA999999999999ALL;
              sub_1005FF368(v661);
              sub_100D6ED80(v239, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              sub_100D6ED18((uint64_t)v781, v816, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              *(void *)(v816 + 16) = 0x3FA47AE147AE147BLL;
              sub_100D6ED80((uint64_t)v781, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              id v247 = objc_allocWithZone((Class)CAMediaTimingFunction);
              LODWORD(v248) = 0.25;
              LODWORD(v249) = 0.25;
              LODWORD(v250) = 1.0;
              LODWORD(v251) = 1036831949;
              id v252 = [v247 initWithControlPoints:v248 :v251 :v249 :v250];
              sub_100D6ED18(v816, (uint64_t)v799, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

              id *v799 = v252;
              sub_100D6ED80(v816, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              *(void *)(v820 + 56) = v810;
              *(void *)(v820 + 64) = &off_10150AF08;
              uint64_t v253 = sub_1005767BC((uint64_t *)(v820 + 32));
              sub_100D6ED18((uint64_t)v799, (uint64_t)v253, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              *((void *)v827 + 1676) = &type metadata for CRLBasicLayerAnimation.Def;
              *((void *)v827 + 1677) = v702;
              uint64_t v254 = swift_allocObject();
              *((void *)v827 + 1673) = v254;
              sub_100549A68((uint64_t)v253, v254 + 16);
              *(unsigned char *)(sub_1005231B4(v663, *((void *)v827 + 1676)) + 297) = 0;
              sub_1005FF368(v663);
              sub_100D6ED80((uint64_t)v799, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              id v760 = sub_100D5ED8C();
              uint64_t v756 = 1065353216;
              *((void *)v827 + 1197) = 1065353216;
              v827[9832] = 6;
              id v764 = (id)qword_10171B538;
              id v255 = [v760 layer];
              sub_1006006C8(v676, v664);
              UUID.init()();
              swift_unknownObjectWeakInit();
              v768((uint64_t)v781 + *(int *)(v778 + 28), 1, 1, v769);
              v768((uint64_t)v781 + *(int *)(v778 + 32), 1, 1, v769);
              swift_unknownObjectWeakAssign();

              sub_100549A0C(v664, v775);
              *(_OWORD *)(v776 + 8) = xmmword_10117EE20;
              void *v781 = v764;
              id v1 = (double *)v827;
              *(void *)(v776 + 288) = 0;
              *(_DWORD *)(v776 + 296) = 131586;
              sub_10054BD5C(v676);
              sub_100D6ED18((uint64_t)v781, v816, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              *(void *)(v816 + 16) = 0x3FA47AE147AE147BLL;
              sub_100D6ED80((uint64_t)v781, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              id v256 = objc_allocWithZone((Class)CAMediaTimingFunction);
              LODWORD(v257) = 0.25;
              LODWORD(v258) = 0.25;
              LODWORD(v259) = 1.0;
              LODWORD(v260) = 1036831949;
              id v261 = [v256 initWithControlPoints:v257 :v260 :v258 :v259];
              sub_100D6ED18(v816, (uint64_t)v799, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

              id *v799 = v261;
              sub_100D6ED80(v816, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              *(void *)(v820 + 96) = v810;
              *(void *)(v820 + 104) = &off_10150AF08;
              unint64_t v262 = sub_1005767BC((uint64_t *)(v820 + 72));
              sub_100D6ED18((uint64_t)v799, (uint64_t)v262, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              *((void *)v827 + 1666) = &type metadata for CRLBasicLayerAnimation.Def;
              *((void *)v827 + 1667) = v702;
              uint64_t v263 = swift_allocObject();
              *((void *)v827 + 1663) = v263;
              sub_100549A68((uint64_t)v262, v263 + 16);
              *(unsigned char *)(sub_1005231B4(v665, *((void *)v827 + 1666)) + 297) = 0;
              sub_1005FF368(v665);
              sub_100D6ED80((uint64_t)v799, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
              uint64_t v0 = (char *)sub_100D5ED8C();
              *((_OWORD *)v827 + 648) = xmmword_101175C10;
              *((_OWORD *)v827 + 649) = 0u;
              v827[10400] = 1;
              *((void *)v827 + 1301) = 0;
              v827[10416] = 2;
              v827[10624] = 58;
              if (qword_10166F728 == -1) {
                goto LABEL_127;
              }
              goto LABEL_256;
            }
LABEL_258:
            __break(1u);
            return;
          }

          sub_100522F00((uint64_t)(v0 + 14744), &qword_1016826C8);
          sub_1005CFCF0((uint64_t)(v0 + 12288));
        }
        else
        {
          sub_1005CFCF0((uint64_t)(v0 + 12288));
        }
      }
      else
      {
        sub_1005CFCF0((uint64_t)(v0 + 12288));
      }
    }
    else
    {

      sub_100522F00((uint64_t)(v0 + 12376), (uint64_t *)&unk_10169AED0);
    }
  }
  *(unsigned char *)(*(void *)(*((void *)v0 + 1931)
                       + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState)
           + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 0;
  [v6 commit];
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v89 = (void (*)(void))*((void *)v0 + 1);
  v89();
}

uint64_t sub_100D6A288@<X0>(void **a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  double v55 = a2;
  uint64_t v19 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v19, v20);
  id v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v51 = (uint64_t)&v51 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v52 = (uint64_t)&v51 - v28;
  __chkstk_darwin(v29, v30);
  id v53 = (uint64_t *)((char *)&v51 - v31);
  __chkstk_darwin(v32, v33);
  uint64_t v54 = (uint64_t)&v51 - v34;
  double v35 = *a1;
  sub_1009ACE10((uint64_t)v71);
  *(double *)&long long v72 = a3;
  *((double *)&v72 + 1) = a4;
  *(double *)&long long v73 = a5;
  *((double *)&v73 + 1) = a6;
  *(double *)&long long v74 = a7;
  *((double *)&v74 + 1) = a8;
  *(double *)&long long v75 = a9;
  *((double *)&v75 + 1) = a10;
  sub_1005E9324((uint64_t)v71, (uint64_t)v76);
  long long v67 = v76[6];
  long long v68 = v76[7];
  char v69 = v77;
  long long v63 = v76[2];
  long long v64 = v76[3];
  long long v65 = v76[4];
  long long v66 = v76[5];
  long long v59 = v74;
  long long v60 = v75;
  long long v61 = v76[0];
  long long v62 = v76[1];
  long long v57 = v72;
  long long v58 = v73;
  char v70 = 60;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_10171B558;
  id v40 = [v35 layer];
  sub_1006006C8((uint64_t)&v57, (uint64_t)v56);
  UUID.init()();
  swift_unknownObjectWeakInit();
  double v41 = &v22[*(int *)(v19 + 28)];
  uint64_t v42 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  id v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  v43(v41, 1, 1, v42);
  v43(&v22[*(int *)(v19 + 32)], 1, 1, v42);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v56, (uint64_t)(v22 + 40));
  *((void *)v22 + 4) = 0;
  *(void *)id v22 = v36;
  *((void *)v22 + 1) = v37;
  *((void *)v22 + 2) = v38;
  *((void *)v22 + 3) = v39;
  *((void *)v22 + 38) = 0;
  *((_DWORD *)v22 + 78) = 131586;
  sub_10054BD5C((uint64_t)&v57);
  uint64_t v44 = v51;
  sub_100D6ED18((uint64_t)v22, v51, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v44 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v45 = v52;
  sub_100D6ED18(v44, v52, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v45 + 24) = 0x407C200000000000;
  sub_100D6ED80(v44, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  double v46 = v53;
  sub_100D6ED18(v45, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *double v46 = 0x4043000000000000;
  sub_100D6ED80(v45, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v47 = v54;
  sub_100D6ED18((uint64_t)v46, v54, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v47 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  double v48 = v55;
  v55[3] = v19;
  unsigned char v48[4] = (uint64_t)&off_101534738;
  CGFloat v49 = sub_1005767BC(v48);
  sub_100D6ED18(v47, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *((void *)&v58 + 1) = &type metadata for CRLSpringLayerAnimation.Def;
  *(void *)&long long v59 = sub_100860DAC();
  *(void *)&long long v57 = swift_allocObject();
  sub_100823384((uint64_t)v49, v57 + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)&v57, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)&v57);
  return sub_100D6ED80(v47, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6A7D0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = type metadata accessor for CRLBasicLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v35 = (uint64_t)&v33 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v37 = (id *)((char *)&v33 - v12);
  id v13 = *a1;
  id v14 = [self clearColor];
  id v15 = [v14 CGColor];

  if (qword_101670058 != -1) {
    swift_once();
  }
  id v16 = [(id)qword_10171C620 CGColor];
  v39[0] = v15;
  v39[1] = v16;
  char v40 = 18;
  if (qword_10166F720 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_10171B538;
  sub_1006006C8((uint64_t)v39, (uint64_t)v38);
  id v34 = v17;
  id v18 = v13;
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v19 = &v6[*(int *)(v3 + 28)];
  uint64_t v20 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v19, 1, 1, v20);
  v21(&v6[*(int *)(v3 + 32)], 1, 1, v20);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v38, (uint64_t)(v6 + 24));
  *(_OWORD *)(v6 + 8) = xmmword_10117EE20;
  *(void *)uint64_t v6 = v34;
  *((void *)v6 + 36) = 0;
  *((_DWORD *)v6 + 74) = 131586;
  sub_10054BD5C((uint64_t)v39);
  uint64_t v22 = v35;
  sub_100D6ED18((uint64_t)v6, v35, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  *(void *)(v22 + 16) = 0x3FCC28F5C28F5C29;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  id v23 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v24) = 1036831949;
  LODWORD(v25) = 0.25;
  LODWORD(v26) = 0.25;
  LODWORD(v27) = 1.0;
  id v28 = [v23 initWithControlPoints:v25 :v24 :v26 :v27];
  uint64_t v29 = v37;
  sub_100D6ED18(v22, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);

  *uint64_t v29 = v28;
  sub_100D6ED80(v22, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  uint64_t v30 = v36;
  v36[3] = v3;
  v30[4] = (uint64_t)&off_10150AF08;
  uint64_t v31 = sub_1005767BC(v30);
  sub_100D6ED18((uint64_t)v29, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
  v39[3] = &type metadata for CRLBasicLayerAnimation.Def;
  v39[4] = sub_10054CB94();
  v39[0] = swift_allocObject();
  sub_100549A68((uint64_t)v31, v39[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v39, (uint64_t)&type metadata for CRLBasicLayerAnimation.Def) + 297) = 0;
  sub_1005FF368((uint64_t)v39);
  return sub_100D6ED80((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
}

uint64_t sub_100D6ABAC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  double v41 = a2;
  uint64_t v3 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v38 = (uint64_t)&v38 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v39 = (uint64_t)&v38 - v12;
  __chkstk_darwin(v13, v14);
  char v40 = (uint64_t *)((char *)&v38 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v42 = (uint64_t)&v38 - v18;
  uint64_t v19 = *a1;
  id v20 = [self clearColor];
  id v21 = [v20 CGColor];

  if (qword_101670090 != -1) {
    swift_once();
  }
  id v22 = [(id)qword_10171C660 CGColor];
  v44[0] = v21;
  v44[1] = v22;
  char v45 = 28;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_10171B558;
  id v27 = [v19 layer];
  sub_1006006C8((uint64_t)v44, (uint64_t)v43);
  UUID.init()();
  swift_unknownObjectWeakInit();
  id v28 = &v6[*(int *)(v3 + 28)];
  uint64_t v29 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  v30(v28, 1, 1, v29);
  v30(&v6[*(int *)(v3 + 32)], 1, 1, v29);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v43, (uint64_t)(v6 + 40));
  *((void *)v6 + 4) = 0;
  *(void *)uint64_t v6 = v23;
  *((void *)v6 + 1) = v24;
  *((void *)v6 + 2) = v25;
  *((void *)v6 + 3) = v26;
  *((void *)v6 + 38) = 0;
  *((_DWORD *)v6 + 78) = 131586;
  sub_10054BD5C((uint64_t)v44);
  uint64_t v31 = v38;
  sub_100D6ED18((uint64_t)v6, v38, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v31 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v32 = v39;
  sub_100D6ED18(v31, v39, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v32 + 24) = 0x407C200000000000;
  sub_100D6ED80(v31, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v33 = v40;
  sub_100D6ED18(v32, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *uint64_t v33 = 0x4043000000000000;
  sub_100D6ED80(v32, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v34 = v42;
  sub_100D6ED18((uint64_t)v33, v42, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v34 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v35 = v41;
  v41[3] = v3;
  v35[4] = (uint64_t)&off_101534738;
  uint64_t v36 = sub_1005767BC(v35);
  sub_100D6ED18(v34, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v44[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v44[4] = sub_100860DAC();
  v44[0] = swift_allocObject();
  sub_100823384((uint64_t)v36, v44[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v44, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)v44);
  return sub_100D6ED80(v34, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6B094@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v35 = (uint64_t)&v35 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v36 = (uint64_t)&v35 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v37 = (uint64_t *)((char *)&v35 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v39 = (uint64_t)&v35 - v18;
  uint64_t v19 = *a1;
  v41[0] = 0x3F00000000000000;
  char v42 = 22;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10171B558;
  id v24 = [v19 layer];
  sub_1006006C8((uint64_t)v41, (uint64_t)v40);
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v25 = &v6[*(int *)(v3 + 28)];
  uint64_t v26 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v25, 1, 1, v26);
  v27(&v6[*(int *)(v3 + 32)], 1, 1, v26);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v40, (uint64_t)(v6 + 40));
  *((void *)v6 + 4) = 0;
  *(void *)uint64_t v6 = v20;
  *((void *)v6 + 1) = v21;
  *((void *)v6 + 2) = v22;
  *((void *)v6 + 3) = v23;
  *((void *)v6 + 38) = 0;
  *((_DWORD *)v6 + 78) = 131586;
  sub_10054BD5C((uint64_t)v41);
  uint64_t v28 = v35;
  sub_100D6ED18((uint64_t)v6, v35, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v28 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v29 = v36;
  sub_100D6ED18(v28, v36, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v29 + 24) = 0x407C200000000000;
  sub_100D6ED80(v28, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v30 = v37;
  sub_100D6ED18(v29, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *uint64_t v30 = 0x4043000000000000;
  sub_100D6ED80(v29, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v31 = v39;
  sub_100D6ED18((uint64_t)v30, v39, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v31 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v32 = v38;
  v38[3] = v3;
  v32[4] = (uint64_t)&off_101534738;
  uint64_t v33 = sub_1005767BC(v32);
  sub_100D6ED18(v31, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v41[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v41[4] = sub_100860DAC();
  v41[0] = swift_allocObject();
  sub_100823384((uint64_t)v33, v41[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v41, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)v41);
  return sub_100D6ED80(v31, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6B4FC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v35 = (uint64_t)&v35 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v36 = (uint64_t)&v35 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v37 = (uint64_t *)((char *)&v35 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v39 = (uint64_t)&v35 - v18;
  uint64_t v19 = *a1;
  if (qword_1016700A0 != -1) {
    swift_once();
  }
  v41[0] = 0;
  v41[1] = qword_10171C670;
  char v42 = 24;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10171B558;
  id v24 = [v19 layer];
  sub_1006006C8((uint64_t)v41, (uint64_t)v40);
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v25 = &v6[*(int *)(v3 + 28)];
  uint64_t v26 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v25, 1, 1, v26);
  v27(&v6[*(int *)(v3 + 32)], 1, 1, v26);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v40, (uint64_t)(v6 + 40));
  *((void *)v6 + 4) = 0;
  *(void *)uint64_t v6 = v20;
  *((void *)v6 + 1) = v21;
  *((void *)v6 + 2) = v22;
  *((void *)v6 + 3) = v23;
  *((void *)v6 + 38) = 0;
  *((_DWORD *)v6 + 78) = 131586;
  sub_10054BD5C((uint64_t)v41);
  uint64_t v28 = v35;
  sub_100D6ED18((uint64_t)v6, v35, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v28 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v29 = v36;
  sub_100D6ED18(v28, v36, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v29 + 24) = 0x407C200000000000;
  sub_100D6ED80(v28, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v30 = v37;
  sub_100D6ED18(v29, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *uint64_t v30 = 0x4043000000000000;
  sub_100D6ED80(v29, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v31 = v39;
  sub_100D6ED18((uint64_t)v30, v39, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v31 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v32 = v38;
  v38[3] = v3;
  v32[4] = (uint64_t)&off_101534738;
  uint64_t v33 = sub_1005767BC(v32);
  sub_100D6ED18(v31, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v41[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v41[4] = sub_100860DAC();
  v41[0] = swift_allocObject();
  sub_100823384((uint64_t)v33, v41[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v41, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)v41);
  return sub_100D6ED80(v31, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6B998@<X0>(void **a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>, double a9@<D6>, double a10@<D7>)
{
  double v55 = a2;
  uint64_t v19 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v51 = (uint64_t)&v51 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v52 = (uint64_t)&v51 - v28;
  __chkstk_darwin(v29, v30);
  id v53 = (uint64_t *)((char *)&v51 - v31);
  __chkstk_darwin(v32, v33);
  uint64_t v54 = (uint64_t)&v51 - v34;
  uint64_t v35 = *a1;
  sub_1009ACE10((uint64_t)v71);
  *(double *)&long long v72 = a3;
  *((double *)&v72 + 1) = a4;
  *(double *)&long long v73 = a5;
  *((double *)&v73 + 1) = a6;
  *(double *)&long long v74 = a7;
  *((double *)&v74 + 1) = a8;
  *(double *)&long long v75 = a9;
  *((double *)&v75 + 1) = a10;
  sub_1005E9324((uint64_t)v71, (uint64_t)v76);
  long long v67 = v76[6];
  long long v68 = v76[7];
  char v69 = v77;
  long long v63 = v76[2];
  long long v64 = v76[3];
  long long v65 = v76[4];
  long long v66 = v76[5];
  long long v59 = v74;
  long long v60 = v75;
  long long v61 = v76[0];
  long long v62 = v76[1];
  long long v57 = v72;
  long long v58 = v73;
  char v70 = 60;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v37 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_10171B558;
  id v40 = [v35 layer];
  sub_1006006C8((uint64_t)&v57, (uint64_t)v56);
  UUID.init()();
  swift_unknownObjectWeakInit();
  double v41 = &v22[*(int *)(v19 + 28)];
  uint64_t v42 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  id v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  v43(v41, 1, 1, v42);
  v43(&v22[*(int *)(v19 + 32)], 1, 1, v42);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v56, (uint64_t)(v22 + 40));
  *((void *)v22 + 4) = 0;
  *(void *)uint64_t v22 = v36;
  *((void *)v22 + 1) = v37;
  *((void *)v22 + 2) = v38;
  *((void *)v22 + 3) = v39;
  *((void *)v22 + 38) = 0;
  *((_DWORD *)v22 + 78) = 131586;
  sub_10054BD5C((uint64_t)&v57);
  uint64_t v44 = v51;
  sub_100D6ED18((uint64_t)v22, v51, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v44 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v45 = v52;
  sub_100D6ED18(v44, v52, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v45 + 24) = 0x4075E00000000000;
  sub_100D6ED80(v44, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  double v46 = v53;
  sub_100D6ED18(v45, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *double v46 = 0x4040000000000000;
  sub_100D6ED80(v45, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v47 = v54;
  sub_100D6ED18((uint64_t)v46, v54, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v47 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  double v48 = v55;
  v55[3] = v19;
  unsigned char v48[4] = (uint64_t)&off_101534738;
  CGFloat v49 = sub_1005767BC(v48);
  sub_100D6ED18(v47, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *((void *)&v58 + 1) = &type metadata for CRLSpringLayerAnimation.Def;
  *(void *)&long long v59 = sub_100860DAC();
  *(void *)&long long v57 = swift_allocObject();
  sub_100823384((uint64_t)v49, v57 + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)&v57, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)&v57);
  return sub_100D6ED80(v47, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6BEE0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v36 = (uint64_t)&v36 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v37 = (uint64_t)&v36 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v38 = (uint64_t *)((char *)&v36 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v40 = (uint64_t)&v36 - v18;
  uint64_t v19 = *a1;
  if (qword_101670078 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_10171C640;
  if (qword_101670080 != -1) {
    swift_once();
  }
  v42[0] = v20;
  v42[1] = qword_10171C648;
  char v43 = 14;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_10171B558;
  sub_1006006C8((uint64_t)v42, (uint64_t)v41);
  id v25 = v19;
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v26 = &v6[*(int *)(v3 + 28)];
  uint64_t v27 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v26, 1, 1, v27);
  v28(&v6[*(int *)(v3 + 32)], 1, 1, v27);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v41, (uint64_t)(v6 + 40));
  *((void *)v6 + 4) = 0;
  *(void *)uint64_t v6 = v21;
  *((void *)v6 + 1) = v22;
  *((void *)v6 + 2) = v23;
  *((void *)v6 + 3) = v24;
  *((void *)v6 + 38) = 0;
  *((_DWORD *)v6 + 78) = 131586;
  sub_10054BD5C((uint64_t)v42);
  uint64_t v29 = v36;
  sub_100D6ED18((uint64_t)v6, v36, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v29 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v30 = v37;
  sub_100D6ED18(v29, v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v30 + 24) = 0x4075E00000000000;
  sub_100D6ED80(v29, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v31 = v38;
  sub_100D6ED18(v30, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *uint64_t v31 = 0x4040000000000000;
  sub_100D6ED80(v30, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v32 = v40;
  sub_100D6ED18((uint64_t)v31, v40, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v32 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v33 = v39;
  v39[3] = v3;
  v33[4] = (uint64_t)&off_101534738;
  uint64_t v34 = sub_1005767BC(v33);
  sub_100D6ED18(v32, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v42[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v42[4] = sub_100860DAC();
  v42[0] = swift_allocObject();
  sub_100823384((uint64_t)v34, v42[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v42, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)v42);
  return sub_100D6ED80(v32, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6C3A0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v37 = (uint64_t)&v37 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v38 = (uint64_t)&v37 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v39 = (uint64_t *)((char *)&v37 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v41 = (uint64_t)&v37 - v18;
  uint64_t v19 = *a1;
  if (qword_101670058 != -1) {
    swift_once();
  }
  id v20 = [(id)qword_10171C620 CGColor];
  if (qword_101670060 != -1) {
    swift_once();
  }
  id v21 = [(id)qword_10171C628 CGColor];
  v43[0] = v20;
  v43[1] = v21;
  char v44 = 18;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10171B558;
  sub_1006006C8((uint64_t)v43, (uint64_t)v42);
  id v26 = v19;
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v27 = &v6[*(int *)(v3 + 28)];
  uint64_t v28 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  v29(v27, 1, 1, v28);
  v29(&v6[*(int *)(v3 + 32)], 1, 1, v28);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v42, (uint64_t)(v6 + 40));
  *((void *)v6 + 4) = 0;
  *(void *)uint64_t v6 = v22;
  *((void *)v6 + 1) = v23;
  *((void *)v6 + 2) = v24;
  *((void *)v6 + 3) = v25;
  *((void *)v6 + 38) = 0;
  *((_DWORD *)v6 + 78) = 131586;
  sub_10054BD5C((uint64_t)v43);
  uint64_t v30 = v37;
  sub_100D6ED18((uint64_t)v6, v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v30 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v31 = v38;
  sub_100D6ED18(v30, v38, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v31 + 24) = 0x4075E00000000000;
  sub_100D6ED80(v30, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v32 = v39;
  sub_100D6ED18(v31, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *uint64_t v32 = 0x4040000000000000;
  sub_100D6ED80(v31, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v33 = v41;
  sub_100D6ED18((uint64_t)v32, v41, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v33 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v34 = v40;
  void v40[3] = v3;
  v34[4] = (uint64_t)&off_101534738;
  uint64_t v35 = sub_1005767BC(v34);
  sub_100D6ED18(v33, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v43[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v43[4] = sub_100860DAC();
  v43[0] = swift_allocObject();
  sub_100823384((uint64_t)v35, v43[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v43, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)v43);
  return sub_100D6ED80(v33, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6C888@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v36 = (uint64_t)&v36 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v37 = (uint64_t)&v36 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v38 = (uint64_t *)((char *)&v36 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v40 = (uint64_t)&v36 - v18;
  uint64_t v19 = *a1;
  if (qword_101670068 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_10171C630;
  if (qword_101670070 != -1) {
    swift_once();
  }
  v42[0] = v20;
  v42[1] = qword_10171C638;
  char v43 = 16;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_10171B558;
  sub_1006006C8((uint64_t)v42, (uint64_t)v41);
  id v25 = v19;
  UUID.init()();
  swift_unknownObjectWeakInit();
  id v26 = &v6[*(int *)(v3 + 28)];
  uint64_t v27 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v26, 1, 1, v27);
  v28(&v6[*(int *)(v3 + 32)], 1, 1, v27);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v41, (uint64_t)(v6 + 40));
  *((void *)v6 + 4) = 0;
  *(void *)uint64_t v6 = v21;
  *((void *)v6 + 1) = v22;
  *((void *)v6 + 2) = v23;
  *((void *)v6 + 3) = v24;
  *((void *)v6 + 38) = 0;
  *((_DWORD *)v6 + 78) = 131586;
  sub_10054BD5C((uint64_t)v42);
  uint64_t v29 = v36;
  sub_100D6ED18((uint64_t)v6, v36, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v29 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v30 = v37;
  sub_100D6ED18(v29, v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v30 + 24) = 0x4075E00000000000;
  sub_100D6ED80(v29, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v31 = v38;
  sub_100D6ED18(v30, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *uint64_t v31 = 0x4040000000000000;
  sub_100D6ED80(v30, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v32 = v40;
  sub_100D6ED18((uint64_t)v31, v40, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v32 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v33 = v39;
  v39[3] = v3;
  v33[4] = (uint64_t)&off_101534738;
  uint64_t v34 = sub_1005767BC(v33);
  sub_100D6ED18(v32, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v42[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v42[4] = sub_100860DAC();
  v42[0] = swift_allocObject();
  sub_100823384((uint64_t)v34, v42[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v42, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)v42);
  return sub_100D6ED80(v32, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6CD48@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v37 = (uint64_t)&v37 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v38 = (uint64_t)&v37 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v39 = (uint64_t *)((char *)&v37 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v41 = (uint64_t)&v37 - v18;
  uint64_t v19 = *a1;
  if (qword_101670090 != -1) {
    swift_once();
  }
  id v20 = [(id)qword_10171C660 CGColor];
  if (qword_101670098 != -1) {
    swift_once();
  }
  id v21 = [(id)qword_10171C668 CGColor];
  v43[0] = v20;
  v43[1] = v21;
  char v44 = 28;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10171B558;
  id v26 = [v19 layer];
  sub_1006006C8((uint64_t)v43, (uint64_t)v42);
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v27 = &v6[*(int *)(v3 + 28)];
  uint64_t v28 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  v29(v27, 1, 1, v28);
  v29(&v6[*(int *)(v3 + 32)], 1, 1, v28);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v42, (uint64_t)(v6 + 40));
  *((void *)v6 + 4) = 0;
  *(void *)uint64_t v6 = v22;
  *((void *)v6 + 1) = v23;
  *((void *)v6 + 2) = v24;
  *((void *)v6 + 3) = v25;
  *((void *)v6 + 38) = 0;
  *((_DWORD *)v6 + 78) = 131586;
  sub_10054BD5C((uint64_t)v43);
  uint64_t v30 = v37;
  sub_100D6ED18((uint64_t)v6, v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v30 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v31 = v38;
  sub_100D6ED18(v30, v38, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v31 + 24) = 0x4075E00000000000;
  sub_100D6ED80(v30, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v32 = v39;
  sub_100D6ED18(v31, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *uint64_t v32 = 0x4040000000000000;
  sub_100D6ED80(v31, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v33 = v41;
  sub_100D6ED18((uint64_t)v32, v41, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v33 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v34 = v40;
  void v40[3] = v3;
  v34[4] = (uint64_t)&off_101534738;
  uint64_t v35 = sub_1005767BC(v34);
  sub_100D6ED18(v33, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v43[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v43[4] = sub_100860DAC();
  v43[0] = swift_allocObject();
  sub_100823384((uint64_t)v35, v43[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v43, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)v43);
  return sub_100D6ED80(v33, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6D240@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v35 = (uint64_t)&v35 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v36 = (uint64_t)&v35 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v37 = (uint64_t *)((char *)&v35 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v39 = (uint64_t)&v35 - v18;
  uint64_t v19 = *a1;
  v41[0] = 0x3F0000003F000000;
  char v42 = 22;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10171B558;
  id v24 = [v19 layer];
  sub_1006006C8((uint64_t)v41, (uint64_t)v40);
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v25 = &v6[*(int *)(v3 + 28)];
  uint64_t v26 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v25, 1, 1, v26);
  v27(&v6[*(int *)(v3 + 32)], 1, 1, v26);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v40, (uint64_t)(v6 + 40));
  *((void *)v6 + 4) = 0;
  *(void *)uint64_t v6 = v20;
  *((void *)v6 + 1) = v21;
  *((void *)v6 + 2) = v22;
  *((void *)v6 + 3) = v23;
  *((void *)v6 + 38) = 0;
  *((_DWORD *)v6 + 78) = 131586;
  sub_10054BD5C((uint64_t)v41);
  uint64_t v28 = v35;
  sub_100D6ED18((uint64_t)v6, v35, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v28 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v29 = v36;
  sub_100D6ED18(v28, v36, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v29 + 24) = 0x4075E00000000000;
  sub_100D6ED80(v28, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v30 = v37;
  sub_100D6ED18(v29, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *uint64_t v30 = 0x4040000000000000;
  sub_100D6ED80(v29, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v31 = v39;
  sub_100D6ED18((uint64_t)v30, v39, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v31 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v32 = v38;
  v38[3] = v3;
  v32[4] = (uint64_t)&off_101534738;
  uint64_t v33 = sub_1005767BC(v32);
  sub_100D6ED18(v31, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v41[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v41[4] = sub_100860DAC();
  v41[0] = swift_allocObject();
  sub_100823384((uint64_t)v33, v41[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v41, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)v41);
  return sub_100D6ED80(v31, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

uint64_t sub_100D6D6A4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v36 = (uint64_t)&v36 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v37 = (uint64_t)&v36 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v38 = (uint64_t *)((char *)&v36 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v40 = (uint64_t)&v36 - v18;
  uint64_t v19 = *a1;
  if (qword_1016700A0 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_10171C670;
  if (qword_1016700A8 != -1) {
    swift_once();
  }
  v42[0] = v20;
  v42[1] = qword_10171C678;
  char v43 = 24;
  if (qword_10166F728 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_10171B540;
  if (qword_10166F730 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171B548;
  if (qword_10166F738 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10171B550;
  if (qword_10166F740 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_10171B558;
  id v25 = [v19 layer];
  sub_1006006C8((uint64_t)v42, (uint64_t)v41);
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v26 = &v6[*(int *)(v3 + 28)];
  uint64_t v27 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v26, 1, 1, v27);
  v28(&v6[*(int *)(v3 + 32)], 1, 1, v27);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v41, (uint64_t)(v6 + 40));
  *((void *)v6 + 4) = 0;
  *(void *)uint64_t v6 = v21;
  *((void *)v6 + 1) = v22;
  *((void *)v6 + 2) = v23;
  *((void *)v6 + 3) = v24;
  *((void *)v6 + 38) = 0;
  *((_DWORD *)v6 + 78) = 131586;
  sub_10054BD5C((uint64_t)v42);
  uint64_t v29 = v36;
  sub_100D6ED18((uint64_t)v6, v36, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v29 + 16) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v30 = v37;
  sub_100D6ED18(v29, v37, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v30 + 24) = 0x4075E00000000000;
  sub_100D6ED80(v29, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v31 = v38;
  sub_100D6ED18(v30, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *uint64_t v31 = 0x4040000000000000;
  sub_100D6ED80(v30, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v32 = v40;
  sub_100D6ED18((uint64_t)v31, v40, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  *(void *)(v32 + 8) = 0x3FF0000000000000;
  sub_100D6ED80((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v33 = v39;
  v39[3] = v3;
  v33[4] = (uint64_t)&off_101534738;
  uint64_t v34 = sub_1005767BC(v33);
  sub_100D6ED18(v32, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
  v42[3] = &type metadata for CRLSpringLayerAnimation.Def;
  v42[4] = sub_100860DAC();
  v42[0] = swift_allocObject();
  sub_100823384((uint64_t)v34, v42[0] + 16);
  *(unsigned char *)(sub_1005231B4((uint64_t)v42, (uint64_t)&type metadata for CRLSpringLayerAnimation.Def) + 313) = 0;
  sub_100F7DF84((uint64_t)v42);
  return sub_100D6ED80(v32, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
}

id sub_100D6DB74()
{
  uint64_t v0 = self;
  [v0 begin];
  [v0 setDisableActions:1];
  id v1 = sub_100D5EAB8();
  [v1 setHidden:0];

  id v2 = sub_100D5EAC4();
  [v2 setHidden:0];

  id v3 = sub_100D5EAB8();
  id v4 = [v3 layer];

  if (v4)
  {
    [v4 setOpacity:0.0];
  }
  id v5 = sub_100D5EAC4();
  id v6 = [v5 layer];

  if (v6)
  {
    [v6 setOpacity:0.0];
  }

  return [v0 commit];
}

id sub_100D6DC9C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = self;
  [v10 begin];
  [v10 setDisableActions:1];
  id v11 = sub_100D5EAB8();
  [v11 setHidden:1];

  id v12 = sub_100D5EAC4();
  [v12 setHidden:1];

  id v13 = sub_100D5EAB8();
  id v14 = [v13 layer];

  [v14 setFrame:a2, a3, a4, a5];
  id v15 = sub_100D5EAC4();
  id v16 = [v15 layer];

  [v16 setFrame:a2, a3, a4, a5];
  id v17 = sub_100D5EAB8();
  id v18 = [v17 layer];

  if (v18)
  {
    id v19 = [v18 sublayers];

    if (v19)
    {
      sub_10050BF48(0, (unint64_t *)&qword_10167ACF0);
      unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        id result = (id)_CocoaArrayWrapper.endIndex.getter();
        uint64_t v21 = (uint64_t)result;
        if (result) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id result = (id)swift_bridgeObjectRetain();
        if (v21)
        {
LABEL_5:
          if (v21 < 1)
          {
            __break(1u);
            goto LABEL_27;
          }
          for (uint64_t i = 0; i != v21; ++i)
          {
            if ((v20 & 0xC000000000000001) != 0) {
              id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v24 = *(id *)(v20 + 8 * i + 32);
            }
            id v25 = v24;
            [v24 removeFromSuperlayer];
          }
        }
      }
      swift_bridgeObjectRelease_n();
    }
  }
  id v26 = sub_100D5EAC4();
  id v27 = [v26 layer];

  if (!v27) {
    goto LABEL_25;
  }
  id v28 = [v27 sublayers];

  if (!v28) {
    goto LABEL_25;
  }
  sub_10050BF48(0, (unint64_t *)&qword_10167ACF0);
  unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v29 >> 62))
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v30) {
      goto LABEL_17;
    }
LABEL_24:
    swift_bridgeObjectRelease_n();
LABEL_25:
    id result = [v10 commit];
    *(unsigned char *)(*(void *)(a1 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState)
             + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 0;
    return result;
  }
  swift_bridgeObjectRetain();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v30 = (uint64_t)result;
  if (!result) {
    goto LABEL_24;
  }
LABEL_17:
  if (v30 >= 1)
  {
    for (uint64_t j = 0; j != v30; ++j)
    {
      if ((v29 & 0xC000000000000001) != 0) {
        id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v32 = *(id *)(v29 + 8 * j + 32);
      }
      uint64_t v33 = v32;
      [v32 removeFromSuperlayer];
    }
    goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

char *sub_100D6E040(void *a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v3 = (void *)Strong;
  sub_1009A7364((uint64_t)&v15);
  if (!(void)v15)
  {

    sub_100522F00((uint64_t)&v15, (uint64_t *)&unk_10169AED0);
    return 0;
  }
  v22[1] = v18;
  v22[2] = v19;
  uint64_t v23 = v20;
  v21[0] = v15;
  v21[1] = v16;
  v22[0] = v17;
  sub_1009AC434((uint64_t)v22, (uint64_t)&v15);
  if (!*((void *)&v16 + 1))
  {

    sub_100522F00((uint64_t)&v15, &qword_1016826C8);
LABEL_9:
    sub_1005CFCF0((uint64_t)v21);
    return 0;
  }
  id v4 = objc_retain(*(id *)(*sub_10050F848(&v15, *((uint64_t *)&v16 + 1))
                         + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v15);
  [v4 safeAreaInsets];
  double v6 = v5;
  [v4 frame];
  CGFloat MinX = CGRectGetMinX(v25);
  [v4 frame];
  double v8 = v6 + CGRectGetMinY(v26);
  [v4 frame];
  CGFloat Width = CGRectGetWidth(v27);
  [v4 frame];
  CGFloat Height = CGRectGetHeight(v28);
  memset(v24, 0, 32);
  v24[32] = 1;
  *(CGFloat *)&long long v15 = MinX;
  *((double *)&v15 + 1) = v8;
  *(CGFloat *)&long long v16 = Width;
  *((double *)&v16 + 1) = Height - v6;
  LOBYTE(v17) = 0;
  objc_allocWithZone((Class)type metadata accessor for CRLSceneCaptureSnapshotLayer());
  id v11 = v4;
  id v12 = sub_10099CD08(v11, a1, (uint64_t)v24, (uint64_t)&v15);
  if (!v12)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"newClippedSnapshotLayerForSceneCapture(layerForInserting:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Scenes/CRLScenesNavigatorViewController.swift", 115, 2, 1206, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newClippedSnapshotLayerForSceneCapture(layerForInserting:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Scenes/CRLScenesNavigatorViewController.swift", 115, 2, 1206);

    goto LABEL_9;
  }
  id v13 = v12;

  sub_1005CFCF0((uint64_t)v21);
  return v13;
}

id sub_100D6E424(uint64_t a1, double a2, double a3)
{
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController.PlatformView();
  [super hitTest:a1 withEvent:a2];
  if (v7)
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    id v8 = v3;
    id v9 = v7;
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v12 = (void *)Strong;
        id v13 = (void *)swift_unknownObjectWeakLoadStrong();

        if (v13)
        {
          id v14 = [v13 parentViewController];

          if (v14)
          {
            id v15 = [v14 view];

            if (v15)
            {
              id v7 = [v15 hitTest:a1 withEvent:a2];
            }
          }
        }
      }
    }
  }
  return v7;
}

id sub_100D6E648(uint64_t a1)
{
  return sub_100D6E760(a1, type metadata accessor for CRLScenesNavigatorViewController.PlatformView);
}

id sub_100D6E744()
{
  return sub_100D6E760(0, type metadata accessor for CRLScenesNavigatorViewController.NoIntrinsicContentSizePlatformButton);
}

id sub_100D6E760(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

void sub_100D6E7E8()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesPopoverState;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesPopoverState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  static Published.subscript.getter();

  swift_release();
  swift_release();

  if (v6)
  {
    objc_super v4 = *(void **)(v0 + v1);
    swift_getKeyPath();
    swift_getKeyPath();
    id v5 = v4;
    static Published.subscript.setter();
  }
}

uint64_t type metadata accessor for CRLScenesNavigatorViewController()
{
  return self;
}

uint64_t type metadata accessor for CRLScenesNavigatorViewController.PlatformView()
{
  return self;
}

uint64_t type metadata accessor for CRLScenesNavigatorViewController.NoIntrinsicContentSizePlatformButton()
{
  return self;
}

uint64_t sub_100D6E9A8()
{
  uint64_t v1 = (id *)(v0 + 40);
  switch(*(unsigned char *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 96)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 72);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 160)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 136);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 128)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 104);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 316, 7);
}

uint64_t sub_100D6EC00@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

void sub_100D6EC80()
{
}

void sub_100D6ECA8(void *a1)
{
  sub_100D5DE74();
  id v2 = [a1 view];
  if (v2)
  {
    id v3 = v2;
    [v2 setNeedsUpdateConstraints];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100D6ED18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100D6ED80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100D6EDE0()
{
  uint64_t v1 = (id *)(v0 + 56);
  switch(*(unsigned char *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 176)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 152);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 120);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 332, 7);
}

id sub_100D6F030()
{
  return sub_100D6DB74();
}

uint64_t sub_100D6F038()
{
  return _swift_deallocObject(v0, 56, 7);
}

id sub_100D6F070()
{
  return sub_100D6DC9C(*(void *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_100D6F098()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100D6F0D0()
{
  sub_100D635EC(*(void **)(v0 + 16));
}

uint64_t sub_100D6F0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100D6F0E8()
{
  return swift_release();
}

uint64_t sub_100D6F0F0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100D6F128()
{
}

void sub_100D6F130()
{
}

uint64_t sub_100D6F138()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100D6F170(uint64_t a1)
{
  return sub_10087CEC0(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_100D6F17C()
{
}

void sub_100D6F1A4()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_notificationObservers] = _swiftEmptyDictionarySingleton;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___topCaptureSnapshotView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___bottomCaptureSnapshotView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView;
  type metadata accessor for CRLShadowView();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v3 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v4 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v5 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v6 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___previousSceneButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___nextSceneButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___popoverButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___baseConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___noGrabberConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsCenterAlignedConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsTrailingAlignedConstraints] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___attachedToZoomControlConstraints] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100D6F568()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLBoardSelection();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLBoardSelection()
{
  return self;
}

double *sub_100D6F5C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v53 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10169B498);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101677100);
  uint64_t v54 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  id v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v52 = (uint64_t)&v51 - v15;
  uint64_t v16 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v60 = (uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v22 = __chkstk_darwin(v20, v21).n128_u64[0];
  id v24 = (char *)&v51 - v23;
  uint64_t result = (double *)[v1 collectionView];
  if (result)
  {
    CGRect v26 = result;
    id v27 = [result indexPathsForSelectedItems];

    if (v27)
    {
      type metadata accessor for IndexPath();
      uint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v29 = v1;
      uint64_t v30 = sub_100DB2190(v28, (uint64_t)v29);
      swift_bridgeObjectRelease();

      double v31 = v30[2];
      if (v31 != 0.0) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v30 = _swiftEmptyArrayStorage;
      double v31 = _swiftEmptyArrayStorage[2];
      if (v31 != 0.0)
      {
LABEL_4:
        id v32 = v30;
        uint64_t v33 = (uint64_t)v30
            + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
        uint64_t v34 = *(void *)(v17 + 72);
        long long v58 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
        uint64_t v59 = v34;
        long long v57 = (unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
        uint64_t v51 = v32;
        swift_bridgeObjectRetain();
        uint64_t v35 = _swiftEmptyArrayStorage;
        uint64_t v36 = v60;
        CGFloat v56 = v24;
        do
        {
          sub_100DBF940(v33, (uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100DBF940((uint64_t)v24, v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
          EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
          long long v61 = v35;
          if (EnumCaseMultiPayload == 2)
          {
            uint64_t v38 = (uint64_t *)(v36 + *(int *)(v9 + 48));
            uint64_t v39 = v38[1];
            uint64_t v55 = *v38;
            uint64_t v40 = v16;
            uint64_t v41 = v8;
            uint64_t v42 = v53;
            sub_100DBF9A8(v60, v53, type metadata accessor for CRLBoardIdentifier);
            char v43 = v12;
            uint64_t v44 = v9;
            uint64_t v45 = &v41[*(int *)(v9 + 48)];
            uint64_t v46 = v42;
            id v8 = v41;
            uint64_t v16 = v40;
            id v24 = v56;
            sub_100DBF9A8(v46, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
            uint64_t v47 = 0;
            *(void *)uint64_t v45 = v55;
            *((void *)v45 + 1) = v39;
            uint64_t v36 = v60;
            uint64_t v9 = v44;
            id v12 = v43;
          }
          else
          {
            sub_100DBFA10(v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
            uint64_t v47 = 1;
          }
          (*v58)(v8, v47, 1, v9);
          sub_100DBFA10((uint64_t)v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if ((*v57)(v8, 1, v9) == 1)
          {
            sub_100522F00((uint64_t)v8, &qword_10169B498);
            uint64_t v35 = v61;
          }
          else
          {
            uint64_t v48 = v52;
            sub_10051B3EC((uint64_t)v8, v52, &qword_101677100);
            sub_10051B3EC(v48, (uint64_t)v12, &qword_101677100);
            uint64_t v35 = v61;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v35 = (double *)sub_100F64034(0, *((void *)v35 + 2) + 1, 1, (unint64_t)v35);
            }
            unint64_t v50 = *((void *)v35 + 2);
            unint64_t v49 = *((void *)v35 + 3);
            if (v50 >= v49 >> 1) {
              uint64_t v35 = (double *)sub_100F64034(v49 > 1, v50 + 1, 1, (unint64_t)v35);
            }
            *((void *)v35 + 2) = v50 + 1;
            sub_10051B3EC((uint64_t)v12, (uint64_t)v35+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v50, &qword_101677100);
            id v24 = v56;
          }
          v33 += v59;
          --*(void *)&v31;
        }
        while (v31 != 0.0);
        swift_bridgeObjectRelease_n();
        return v35;
      }
    }
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t sub_100D6FB20@<X0>(void *a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v125 = a5;
  int v126 = a4;
  int v122 = a3;
  uint64_t v120 = a6;
  uint64_t v113 = type metadata accessor for Date();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113, v8);
  uint64_t v111 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1005057FC(&qword_10168E120);
  __chkstk_darwin(v117, v10);
  uint64_t v118 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10168E128);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v115 = (uint64_t)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  id v124 = (uint64_t *)((char *)&v108 - v18);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v108 - v20;
  uint64_t v22 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  id v27 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v28);
  uint64_t v30 = (char *)&v108 - v29;
  uint64_t v128 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v119 = *(void *)(v128 - 8);
  __chkstk_darwin(v128, v31);
  uint64_t v33 = (char *)&v108 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = a1;
  int v123 = a2;
  BOOL v121 = a2 != 0;
  uint64_t v34 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  sub_100CE76DC();
  sub_100DB3520((unint64_t *)&qword_10169B5A0, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_bridgeObjectRetain();
  uint64_t v127 = v33;
  uint64_t v109 = v34;
  NSDiffableDataSourceSnapshot.init()();
  sub_100522E9C(v125, (uint64_t)v21, &qword_10168E128);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v36 = v35(v21, 1, v22);
  uint64_t v110 = v27;
  if (v36 == 1)
  {
    sub_100522F00((uint64_t)v21, &qword_10168E128);
  }
  else
  {
    sub_100DBF9A8((uint64_t)v21, (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v37 = sub_1005057FC(&qword_101670F30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v27, 5, 5, v37);
    char v38 = sub_100DDC744((uint64_t)v30, (uint64_t)v27);
    sub_100DBFA10((uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    if (v38)
    {
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_101504A10);
      sub_100DBFA10((uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      int v116 = 1;
      goto LABEL_7;
    }
    sub_100DBFA10((uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  }
  int v116 = 0;
LABEL_7:
  id v39 = v129;
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_100DB369C(v40, (uint64_t)v39);
  swift_bridgeObjectRelease();
  id v129 = v39;

  uint64_t v42 = *((void *)v41 + 2);
  if (!v42)
  {
    char v49 = v123;
    goto LABEL_24;
  }
  id v114 = v41;
  uint64_t v43 = sub_1005057FC(&qword_101670F30);
  uint64_t v44 = (uint64_t)v124;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v124, 4, 5, v43);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v44, 0, 1, v22);
  uint64_t v45 = v118;
  uint64_t v46 = v118 + *(int *)(v117 + 48);
  sub_100522E9C(v125, v118, &qword_10168E128);
  sub_100522E9C(v44, v46, &qword_10168E128);
  if (v35((char *)v45, 1, v22) != 1)
  {
    uint64_t v50 = v115;
    sub_100522E9C(v45, v115, &qword_10168E128);
    if (v35((char *)v46, 1, v22) != 1)
    {
      uint64_t v103 = (uint64_t)v110;
      sub_100DBF9A8(v46, (uint64_t)v110, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      char v104 = sub_100DDC744(v50, v103);
      sub_100DBFA10(v50, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100DBFA10(v103, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      sub_100522F00(v45, &qword_10168E128);
      sub_100522F00((uint64_t)v124, &qword_10168E128);
      uint64_t v48 = v114;
      if (v104) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    sub_100DBFA10(v50, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v48 = v114;
LABEL_14:
    sub_100522F00(v45, &qword_10168E120);
    sub_100522F00((uint64_t)v124, &qword_10168E128);
LABEL_15:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"snapshot(for:sortStyle:grouped:ascending:folder:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryFolderViewModel.swift", 106, 2, 288, (uint64_t)"Board invitation items should only appear in the Shared folder.", 63, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"snapshot(for:sortStyle:grouped:ascending:folder:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryFolderViewModel.swift", 106, 2, 288);
    goto LABEL_16;
  }
  int v47 = v35((char *)v46, 1, v22);
  uint64_t v48 = v114;
  if (v47 != 1) {
    goto LABEL_14;
  }
  sub_100522F00(v45, &qword_10168E128);
  sub_100522F00((uint64_t)v124, &qword_10168E128);
LABEL_16:
  char v49 = v123;
  if ((_BYTE)v123)
  {
    v130._rawValue = v48;
    if (v123 == 1)
    {
      id v51 = v129;
      swift_bridgeObjectRetain();
      char v52 = v126 & 1;
      uint64_t v53 = sub_100DB5B08;
    }
    else
    {
      id v51 = v129;
      swift_bridgeObjectRetain();
      char v52 = v126 & 1;
      uint64_t v53 = sub_100DB7A5C;
    }
    sub_100DB92FC((unint64_t *)&v130, v51, v52, (void (*)(void *, id, void))v53);
  }
  else
  {
    v130._rawValue = v48;
    swift_bridgeObjectRetain();
    sub_100DA276C((unint64_t *)&v130, v126 & 1);
  }
  uint64_t v54 = v127;
  uint64_t v55 = (void *)v128;
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_101504AD0);
  v130._rawValue = 0;
  uint64_t v131 = 0;
  uint64_t v132 = 0;
  char v133 = -2;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_100DACDDC((unint64_t *)&v134, (uint64_t)v48);
  uint64_t v57 = v134[2];
  if (v57 < v56) {
    goto LABEL_78;
  }
  sub_100F4D770(v56, v57);
LABEL_24:
  int v58 = v122 & v121;
  swift_bridgeObjectRelease();
  if (v58)
  {
    uint64_t v59 = v134;
    if (v49 == 2)
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = (void *)sub_100A3C59C((uint64_t)_swiftEmptyArrayStorage);
      v130._rawValue = v60;
      uint64_t v61 = v59[2];
      if (v61)
      {
        uint64_t v62 = (uint64_t)v59
            + ((*(unsigned __int8 *)(*(void *)(v109 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v109 - 8) + 80));
        uint64_t v63 = *(void *)(*(void *)(v109 - 8) + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_100D71C10((unint64_t *)&v130, v62, (uint64_t)v129);
          v62 += v63;
          --v61;
        }
        while (v61);
        swift_bridgeObjectRelease_n();
        rawValue = v130._rawValue;
        if ((v126 & 1) == 0) {
          goto LABEL_30;
        }
      }
      else
      {
        rawValue = v60;
        swift_bridgeObjectRelease();
        if ((v126 & 1) == 0)
        {
LABEL_30:
          swift_bridgeObjectRetain_n();
          long long v65 = sub_1006BAEEC((uint64_t)rawValue);
          swift_bridgeObjectRelease();
          v130._rawValue = v65;
          long long v66 = sub_100DA3A1C;
LABEL_38:
          sub_100DA2824((uint64_t *)&v130, (uint64_t (*)(void *))v66);
          swift_bridgeObjectRelease();
          uint64_t v55 = v130._rawValue;
          uint64_t v54 = v127;
          NSDiffableDataSourceSnapshot.appendSections(_:)(v130);
          swift_bridgeObjectRelease();
          uint64_t v77 = 0;
          uint64_t v78 = rawValue[8];
          id v124 = rawValue + 8;
          uint64_t v79 = 1 << *((unsigned char *)rawValue + 32);
          uint64_t v80 = -1;
          if (v79 < 64) {
            uint64_t v80 = ~(-1 << v79);
          }
          unint64_t v81 = v80 & v78;
          uint64_t v125 = (unint64_t)(v79 + 63) >> 6;
          if ((v80 & v78) == 0) {
            goto LABEL_42;
          }
LABEL_41:
          unint64_t v82 = __clz(__rbit64(v81));
          v81 &= v81 - 1;
          for (unint64_t i = v82 | (v77 << 6); ; unint64_t i = __clz(__rbit64(v85)) + (v77 << 6))
          {
            uint64_t v87 = rawValue[6] + 32 * i;
            id v88 = *(void **)v87;
            id v89 = *(void **)(v87 + 8);
            uint64_t v90 = *(void *)(v87 + 16);
            unsigned __int8 v91 = *(unsigned char *)(v87 + 24);
            v130._rawValue = *(void **)(rawValue[7] + 8 * i);
            swift_bridgeObjectRetain_n();
            id v92 = v129;
            sub_10053BB6C(v88, v89, v90, v91);
            sub_100DB92FC((unint64_t *)&v130, v92, v126 & 1, (void (*)(void *, id, void))sub_100DB5B08);
            swift_bridgeObjectRelease();

            uint64_t v55 = v130._rawValue;
            v130._rawValue = v88;
            uint64_t v131 = v89;
            uint64_t v132 = v90;
            char v133 = v91;
            sub_10053BB6C(v88, v89, v90, v91);
            uint64_t v54 = v127;
            NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
            swift_release();
            sub_10053BBA0(v88, v89, v90, v91);
            sub_10053BBA0(v88, v89, v90, v91);
            if (v81) {
              goto LABEL_41;
            }
LABEL_42:
            if (__OFADD__(v77++, 1))
            {
              __break(1u);
              goto LABEL_77;
            }
            if (v77 >= v125) {
              goto LABEL_61;
            }
            unint64_t v85 = v124[v77];
            if (!v85)
            {
              uint64_t v86 = v77 + 1;
              if (v77 + 1 >= v125) {
                goto LABEL_61;
              }
              unint64_t v85 = v124[v86];
              if (!v85)
              {
                uint64_t v86 = v77 + 2;
                if (v77 + 2 >= v125) {
                  goto LABEL_61;
                }
                unint64_t v85 = v124[v86];
                if (!v85)
                {
                  uint64_t v86 = v77 + 3;
                  if (v77 + 3 >= v125) {
                    goto LABEL_61;
                  }
                  unint64_t v85 = v124[v86];
                  if (!v85)
                  {
                    uint64_t v86 = v77 + 4;
                    if (v77 + 4 >= v125)
                    {
LABEL_61:
                      swift_release();
                      uint64_t v94 = v127;
                      uint64_t v93 = v128;
                      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_101504A90);
                      (*(void (**)(uint64_t, char *, uint64_t))(v119 + 32))(v120, v94, v93);
                      return swift_bridgeObjectRelease();
                    }
                    unint64_t v85 = v124[v86];
                    if (!v85)
                    {
                      while (1)
                      {
                        uint64_t v77 = v86 + 1;
                        if (__OFADD__(v86, 1)) {
                          break;
                        }
                        if (v77 >= v125) {
                          goto LABEL_61;
                        }
                        unint64_t v85 = v124[v77];
                        ++v86;
                        if (v85) {
                          goto LABEL_54;
                        }
                      }
LABEL_77:
                      __break(1u);
LABEL_78:
                      __break(1u);

                      while (1)
                      {
                        swift_release();
                        __break(1u);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        __break(1u);
                        swift_release();
                        __break(1u);
                      }
                    }
                  }
                }
              }
              uint64_t v77 = v86;
            }
LABEL_54:
            unint64_t v81 = (v85 - 1) & v85;
          }
        }
      }
    }
    else
    {
      id v69 = v129;
      uint64_t v70 = swift_bridgeObjectRetain();
      id v71 = sub_100DB262C(v70, (uint64_t)v69);
      swift_bridgeObjectRelease();

      if (*((void *)v71 + 2) != v59[2])
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"snapshot(for:sortStyle:grouped:ascending:folder:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryFolderViewModel.swift", 106, 2, 336, (uint64_t)"Mismatched dates! Most likely, this is caused by one or more of the folder items being something other than a board. Items may appear in the wrong section.", 155, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"snapshot(for:sortStyle:grouped:ascending:folder:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardLibraryFolderViewModel.swift", 106, 2, 336);
      }
      uint64_t v72 = swift_bridgeObjectRetain();
      uint64_t v73 = sub_10099F920(v72, (uint64_t)v71);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v74 = sub_100590C7C(v73);
      swift_release();
      uint64_t v75 = (uint64_t)v111;
      static Date.now.getter();
      rawValue = sub_100B87810((uint64_t)v74, v75);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v75, v113);
      if ((v126 & 1) == 0) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRetain_n();
    double v76 = sub_1006BAEEC((uint64_t)rawValue);
    swift_bridgeObjectRelease();
    v130._rawValue = v76;
    long long v66 = sub_100DA5AAC;
    goto LABEL_38;
  }
  if (v49)
  {
    v130._rawValue = v134;
    swift_bridgeObjectRetain_n();
    id v67 = v129;
    if (v49 == 1) {
      long long v68 = sub_100DB5B08;
    }
    else {
      long long v68 = sub_100DB7A5C;
    }
    sub_100DB92FC((unint64_t *)&v130, v67, v126 & 1, (void (*)(void *, id, void))v68);
    swift_bridgeObjectRelease();
  }
  else
  {
    v130._rawValue = v134;
    swift_bridgeObjectRetain_n();
    sub_100DA276C((unint64_t *)&v130, v126 & 1);
    swift_bridgeObjectRelease();
  }
  if ((v116 & 1) == 0)
  {
    sub_1005057FC(&qword_10167ADD8);
    uint64_t v95 = swift_allocObject();
    *(_OWORD *)(v95 + 16) = xmmword_10117E810;
    if (v42)
    {
      id v96 = [self mainBundle];
      NSString v97 = String._bridgeToObjectiveC()();
      NSString v98 = String._bridgeToObjectiveC()();
      id v99 = [v96 localizedStringForKey:v97 value:v98 table:0];

      uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v102 = v101;
    }
    else
    {
      uint64_t v100 = 0;
      uint64_t v102 = 0;
    }
    *(void *)(v95 + 32) = v100;
    *(void *)(v95 + 40) = v102;
    *(void *)(v95 + 48) = 0;
    *(unsigned char *)(v95 + 56) = 0;
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v95);
    swift_bridgeObjectRelease();
  }
  v130._rawValue = 0;
  uint64_t v131 = 0;
  uint64_t v132 = 0;
  char v133 = -2;
  char v105 = v127;
  uint64_t v106 = v128;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_101504A50);
  (*(void (**)(uint64_t, char *, uint64_t))(v119 + 32))(v120, v105, v106);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100D70BBC(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v59 = a4;
  long long v66 = a3;
  uint64_t v63 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v7 = __chkstk_darwin(v63, v6);
  uint64_t v61 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = sub_1005057FC(&qword_101672EB0);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v60 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v55 - v17;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v64 = v19;
  uint64_t v65 = v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  int v58 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v24);
  uint64_t v62 = (char *)&v55 - v25;
  uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v28 = __chkstk_darwin(v26, v27);
  uint64_t v30 = (char *)&v55 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v31);
  uint64_t v33 = (char *)&v55 - v32;
  uint64_t v34 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v36 = __chkstk_darwin(v34 - 8, v35);
  char v38 = (char *)&v55 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v39);
  uint64_t v41 = (char *)&v55 - v40;
  sub_100DBF940(a1, (uint64_t)v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DBF9A8((uint64_t)v33, (uint64_t)v41, type metadata accessor for CRLBoardIdentifier);
    sub_100DBF940(a2, (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      swift_bridgeObjectRelease();
      sub_100DBF9A8((uint64_t)v30, (uint64_t)v38, type metadata accessor for CRLBoardIdentifier);
      uint64_t v42 = v67;
      sub_100ED7F04((uint64_t)v41, (uint64_t)v11);
      if (v42)
      {
        swift_errorRelease();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v18, 1, 1, v64);
      }
      else
      {
        uint64_t v45 = v64;
        uint64_t v46 = &v11[*(int *)(v63 + 24)];
        int v47 = (void *)v65;
        uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
        v57(v18, v46, v64);
        sub_100DBFA10((uint64_t)v11, type metadata accessor for CRLBoardViewModelMetadata);
        id v67 = (void (*)(void, void, void, void))v47[7];
        v67(v18, 0, 1, v45);
        uint64_t v56 = (unsigned int (*)(char *, uint64_t, uint64_t))v47[6];
        if (v56(v18, 1, v45) != 1)
        {
          uint64_t v55 = (void (*)(char *, char *, uint64_t))v47[4];
          v55(v62, v18, v45);
          uint64_t v50 = v61;
          sub_100ED7F04((uint64_t)v38, v61);
          long long v66 = v47 + 4;
          id v51 = v60;
          v57(v60, (char *)(v50 + *(int *)(v63 + 24)), v45);
          sub_100DBFA10(v50, type metadata accessor for CRLBoardViewModelMetadata);
          v67(v51, 0, 1, v45);
          if (v56(v51, 1, v45) != 1)
          {
            char v52 = v58;
            v55(v58, v51, v45);
            uint64_t v53 = v62;
            char v44 = static Date.< infix(_:_:)();
            uint64_t v54 = *(void (**)(char *, uint64_t))(v65 + 8);
            v54(v52, v45);
            v54(v53, v45);
            sub_100DBFA10((uint64_t)v38, type metadata accessor for CRLBoardIdentifier);
            sub_100DBFA10((uint64_t)v41, type metadata accessor for CRLBoardIdentifier);
            return v44 & 1;
          }
          (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v45);
          sub_100DBFA10((uint64_t)v38, type metadata accessor for CRLBoardIdentifier);
          sub_100DBFA10((uint64_t)v41, type metadata accessor for CRLBoardIdentifier);
          uint64_t v48 = (uint64_t)v51;
          goto LABEL_10;
        }
      }
      sub_100DBFA10((uint64_t)v38, type metadata accessor for CRLBoardIdentifier);
      sub_100DBFA10((uint64_t)v41, type metadata accessor for CRLBoardIdentifier);
      uint64_t v48 = (uint64_t)v18;
LABEL_10:
      sub_100522F00(v48, &qword_101672EB0);
      char v44 = 0;
      return v44 & 1;
    }
    sub_100DBFA10((uint64_t)v41, type metadata accessor for CRLBoardIdentifier);
    uint64_t v43 = (uint64_t)v30;
  }
  else
  {
    uint64_t v43 = (uint64_t)v33;
  }
  sub_100DBFA10(v43, type metadata accessor for CRLBoardLibraryViewModel.Item);
  char v44 = 0;
  return v44 & 1;
}

uint64_t sub_100D712D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v68 = a4;
  uint64_t v74 = a3;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v69 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v70 = (uint64_t)&v66 - v12;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v75 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v73 = *(void *)(v75 - 8);
  uint64_t v22 = __chkstk_darwin(v75, v21);
  uint64_t v72 = (uint64_t)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v24);
  uint64_t v71 = (uint64_t)&v66 - v25;
  uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v28 = __chkstk_darwin(v26, v27);
  uint64_t v30 = (char *)&v66 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v31);
  uint64_t v33 = (char *)&v66 - v32;
  uint64_t v34 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v36 = __chkstk_darwin(v34 - 8, v35);
  uint64_t v80 = (uint64_t)&v66 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v38);
  uint64_t v40 = (char *)&v66 - v39;
  sub_100DBF940(a1, (uint64_t)v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t v43 = (uint64_t)v33;
LABEL_7:
    sub_100DBFA10(v43, type metadata accessor for CRLBoardLibraryViewModel.Item);
    char v48 = 0;
    return v48 & 1;
  }
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  sub_100DBF9A8((uint64_t)v33, (uint64_t)v40, type metadata accessor for CRLBoardIdentifier);
  sub_100DBF940(a2, (uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100DBFA10((uint64_t)v40, type metadata accessor for CRLBoardIdentifier);
    uint64_t v43 = (uint64_t)v30;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = (uint64_t)v30;
  uint64_t v42 = v80;
  sub_100DBF9A8(v41, v80, type metadata accessor for CRLBoardIdentifier);
  sub_100ED7F04((uint64_t)v40, (uint64_t)v20);
  if (v4)
  {
    swift_errorRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v20, 1, 1, v75);
    sub_100DBFA10(v42, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10((uint64_t)v40, type metadata accessor for CRLBoardIdentifier);
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_1016741D0);
    char v48 = 0;
    return v48 & 1;
  }
  id v67 = v40;
  char v44 = *(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56);
  uint64_t v45 = v75;
  v44(v20, 0, 1, v75);
  uint64_t v46 = (uint64_t)v20;
  uint64_t v47 = v71;
  sub_100DBF9A8(v46, v71, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100ED7F04(v42, (uint64_t)v17);
  v44(v17, 0, 1, v45);
  sub_100DBF9A8((uint64_t)v17, v72, type metadata accessor for CRLBoardViewModelMetadata);
  uint64_t v50 = v47;
  uint64_t v51 = v70;
  sub_100522E9C(v47 + *(int *)(v45 + 28), v70, (uint64_t *)&unk_1016741E0);
  uint64_t v52 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48);
  if (v53(v51, 1, v52) == 1)
  {
    sub_100522F00(v51, (uint64_t *)&unk_1016741E0);
    uint64_t v54 = 0;
    uint64_t v55 = 0;
  }
  else
  {
    if (*(void *)v51)
    {
      id v56 = *(id *)v51;
      uint64_t v54 = sub_100701F80();
      uint64_t v55 = v57;

      uint64_t v51 = v70;
      uint64_t v45 = v75;
    }
    else
    {
      uint64_t v54 = *(void *)(v51 + 8);
      uint64_t v55 = *(void *)(v51 + 16);
      swift_bridgeObjectRetain();
    }
    sub_100DBFA10(v51, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
  }
  uint64_t v58 = v72 + *(int *)(v45 + 28);
  uint64_t v59 = v69;
  sub_100522E9C(v58, v69, (uint64_t *)&unk_1016741E0);
  if (v53(v59, 1, v52) == 1)
  {
    sub_100522F00(v59, (uint64_t *)&unk_1016741E0);
    if (v55)
    {
      swift_bridgeObjectRelease();
LABEL_35:
      sub_100DBFA10(v72, type metadata accessor for CRLBoardViewModelMetadata);
      sub_100DBFA10(v50, type metadata accessor for CRLBoardViewModelMetadata);
      sub_100DBFA10(v80, type metadata accessor for CRLBoardIdentifier);
      sub_100DBFA10((uint64_t)v67, type metadata accessor for CRLBoardIdentifier);
      char v48 = 1;
      return v48 & 1;
    }
LABEL_29:
    if (v68) {
      char v65 = static Date.< infix(_:_:)();
    }
    else {
      char v65 = static Date.> infix(_:_:)();
    }
    char v48 = v65;
    sub_100DBFA10(v72, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100DBFA10(v50, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100DBFA10(v80, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10((uint64_t)v67, type metadata accessor for CRLBoardIdentifier);
    return v48 & 1;
  }
  if (*(void *)v59)
  {
    id v60 = *(id *)v59;
    uint64_t v61 = sub_100701F80();
    uint64_t v63 = v62;

    uint64_t v50 = v71;
  }
  else
  {
    uint64_t v61 = *(void *)(v59 + 8);
    uint64_t v63 = *(void *)(v59 + 16);
    swift_bridgeObjectRetain();
  }
  sub_100DBFA10(v59, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
  if (!v55)
  {
    swift_bridgeObjectRelease();
LABEL_31:
    sub_100DBFA10(v72, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100DBFA10(v50, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100DBFA10(v80, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10((uint64_t)v67, type metadata accessor for CRLBoardIdentifier);
    char v48 = 0;
    return v48 & 1;
  }
  if (v68)
  {
    uint64_t v78 = v54;
    uint64_t v79 = v55;
    uint64_t v76 = v61;
    uint64_t v77 = v63;
  }
  else
  {
    uint64_t v78 = v61;
    uint64_t v79 = v63;
    uint64_t v76 = v54;
    uint64_t v77 = v55;
  }
  sub_10052E310();
  uint64_t v64 = StringProtocol.localizedStandardCompare<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(v64)
  {
    case 1:
      goto LABEL_31;
    case 0:
      goto LABEL_29;
    case -1:
      goto LABEL_35;
  }
  type metadata accessor for ComparisonResult(0);
  uint64_t v78 = v64;
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t sub_100D71C10(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a3;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (id *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v49 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v52 = (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v21 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = a2;
  sub_100DBF940(a2, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    uint64_t v27 = (uint64_t)v20;
    return sub_100DBFA10(v27, v26);
  }
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  sub_100DBF9A8((uint64_t)v20, (uint64_t)v24, type metadata accessor for CRLBoardIdentifier);
  sub_100ED7F04((uint64_t)v24, (uint64_t)v13);
  char v48 = v24;
  if (v3)
  {
    swift_errorRelease();
    id v25 = 0;
  }
  else
  {
    sub_100522E9C((uint64_t)&v13[*(int *)(v10 + 28)], (uint64_t)v9, (uint64_t *)&unk_1016741E0);
    uint64_t v28 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v9, 1, v28) == 1)
    {
      sub_100522F00((uint64_t)v9, (uint64_t *)&unk_1016741E0);
      id v25 = 0;
    }
    else
    {
      id v25 = *v9;
      id v29 = *v9;
      sub_100DBFA10((uint64_t)v9, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    }
    sub_100DBFA10((uint64_t)v13, type metadata accessor for CRLBoardViewModelMetadata);
  }
  sub_100DBF940(v51, v52, type metadata accessor for CRLBoardLibraryViewModel.Item);
  id v30 = v25;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v53 = (void *)*a1;
  unint64_t v32 = (unint64_t)v53;
  *a1 = 0x8000000000000000;
  unint64_t v34 = sub_100957584((unint64_t)v25, 0, 0, 0x80u);
  uint64_t v35 = *(void *)(v32 + 16);
  BOOL v36 = (v33 & 1) == 0;
  uint64_t v37 = v35 + v36;
  if (__OFADD__(v35, v36))
  {
    __break(1u);
LABEL_23:
    unint64_t v32 = sub_100F6273C(0, *(void *)(v32 + 16) + 1, 1, v32);
    *(void *)(v14 + 8 * v34) = v32;
LABEL_18:
    unint64_t v45 = *(void *)(v32 + 16);
    unint64_t v44 = *(void *)(v32 + 24);
    if (v45 >= v44 >> 1)
    {
      unint64_t v32 = sub_100F6273C(v44 > 1, v45 + 1, 1, v32);
      *(void *)(v14 + 8 * v34) = v32;
    }
    *(void *)(v32 + 16) = v45 + 1;
    sub_100DBF9A8(v52, v32+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v45, type metadata accessor for CRLBoardLibraryViewModel.Item);

    uint64_t v26 = type metadata accessor for CRLBoardIdentifier;
    uint64_t v27 = (uint64_t)v48;
    return sub_100DBFA10(v27, v26);
  }
  char v38 = v33;
  if (*(void *)(v32 + 24) >= v37)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100983DF0();
      unint64_t v32 = (unint64_t)v53;
    }
LABEL_15:
    *a1 = v32;
    swift_bridgeObjectRelease();
    uint64_t v41 = (void *)*a1;
    swift_bridgeObjectRetain();
    if ((v38 & 1) == 0)
    {
      sub_10097B654(v34, (uint64_t)v25, 0, 0, 128, (uint64_t)_swiftEmptyArrayStorage, v41);
      id v42 = v30;
    }
    uint64_t v14 = v41[7];
    swift_bridgeObjectRelease();
    unint64_t v32 = *(void *)(v14 + 8 * v34);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v14 + 8 * v34) = v32;
    if (v43) {
      goto LABEL_18;
    }
    goto LABEL_23;
  }
  sub_10096D830(v37, isUniquelyReferenced_nonNull_native);
  unint64_t v32 = (unint64_t)v53;
  unint64_t v39 = sub_100957584((unint64_t)v25, 0, 0, 0x80u);
  if ((v38 & 1) == (v40 & 1))
  {
    unint64_t v34 = v39;
    goto LABEL_15;
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100D7215C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8, v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot];
  uint64_t v25 = a1;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_10062DB78, (uint64_t)v24, v9);
  swift_bridgeObjectRelease();
  if (!v10) {
    return 0;
  }
  id v11 = [v10 children];
  type metadata accessor for CRLBoardLibraryViewModelItemNode();
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_16:
    uint64_t v21 = v2;
    uint64_t v20 = sub_100DB3BA8((uint64_t)v16, (uint64_t)v21);

    swift_bridgeObjectRelease();
    return (uint64_t)v20;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1006BB704(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = v10;
    uint64_t v23 = v2;
    uint64_t v15 = 0;
    uint64_t v16 = v26;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100DBF940(v17 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_unknownObjectRelease();
      }
      else
      {
        sub_100DBF940(*(void *)(v12 + 8 * v15 + 32) + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      uint64_t v26 = v16;
      unint64_t v19 = *((void *)v16 + 2);
      unint64_t v18 = *((void *)v16 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_1006BB704(v18 > 1, v19 + 1, 1);
        uint64_t v16 = v26;
      }
      ++v15;
      *((void *)v16 + 2) = v19 + 1;
      sub_100DBF9A8((uint64_t)v8, (uint64_t)v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    uint64_t v10 = v22;
    uint64_t v2 = v23;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

id sub_100D72460()
{
  return sub_100D7AB54(&OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___diffableDataSource, (uint64_t (*)(void))sub_100D72480);
}

id sub_100D72480()
{
  uint64_t v1 = sub_1005057FC(&qword_10169B5C0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v57 = v1;
  uint64_t v58 = v2;
  uint64_t v4 = __chkstk_darwin(v1, v3);
  uint64_t v54 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v50 - v7;
  uint64_t v56 = sub_1005057FC(&qword_10169B5C8);
  uint64_t v9 = *(void *)(v56 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v12 = __chkstk_darwin(v56, v11);
  uint64_t v13 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v50 - v15;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  _s8GridItemCMa();
  type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v17 = v8;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  _s11iOSListItemCMa();
  UICollectionView.CellRegistration.init(handler:)();
  id result = [v0 collectionView];
  id v53 = result;
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v19 = swift_allocObject();
  uint64_t v52 = v0;
  swift_unknownObjectWeakInit();
  uint64_t v20 = v9;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v50 = v16;
  uint64_t v22 = v56;
  v21(v13, v16, v56);
  uint64_t v24 = v57;
  uint64_t v23 = v58;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v26 = v54;
  uint64_t v51 = v17;
  v25(v54, v17, v57);
  unint64_t v27 = (*(unsigned __int8 *)(v20 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v28 = (v10 + *(unsigned __int8 *)(v23 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v19;
  uint64_t v55 = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v29 + v27, v13, v22);
  uint64_t v30 = v24;
  uint64_t v31 = v52;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v29 + v28, v26, v30);
  id v32 = objc_allocWithZone((Class)sub_1005057FC(&qword_10169B5D0));
  uint64_t v33 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  id result = [v31 collectionView];
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v34 = result;
  uint64_t v35 = _s13SectionHeaderCMa();
  ObjCClassFromMetadatCGFloat a = swift_getObjCClassFromMetadata();
  uint64_t v59 = v35;
  uint64_t v37 = UICollectionElementKindSectionHeader;
  sub_1005057FC(&qword_10169B5D8);
  String.init<A>(describing:)();
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v34 registerClass:ObjCClassFromMetadata forSupplementaryViewOfKind:v37 withReuseIdentifier:v38];

  id result = [v31 collectionView];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v39 = result;
  uint64_t v40 = _s13GridSeparatorCMa();
  uint64_t v41 = swift_getObjCClassFromMetadata();
  NSString v42 = String._bridgeToObjectiveC()();
  uint64_t v59 = v40;
  sub_1005057FC(&qword_10169B5E0);
  String.init<A>(describing:)();
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v39 registerClass:v41 forSupplementaryViewOfKind:v42 withReuseIdentifier:v43];

  id result = [v31 collectionView];
  uint64_t v44 = v58;
  if (result)
  {
    unint64_t v45 = result;
    uint64_t v46 = _s18iCloudStatusFooterCMa();
    uint64_t v47 = swift_getObjCClassFromMetadata();
    NSString v48 = String._bridgeToObjectiveC()();
    uint64_t v59 = v46;
    sub_1005057FC(&qword_10169B5E8);
    String.init<A>(describing:)();
    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v45 registerClass:v47 forSupplementaryViewOfKind:v48 withReuseIdentifier:v49];

    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v51, v57);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v56);
    swift_release();
    return (id)v33;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100D72A9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver) = a1;
  if (swift_unknownObjectRetain())
  {
    if (([(id)swift_unknownObjectRetain() isEqual:v2] & 1) == 0)
    {
      if (!v2) {
        return swift_unknownObjectRelease_n();
      }
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"renameDeleteObserver", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 74, (uint64_t)"Created a new renameDeleteObserver before the old one was torn down", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"renameDeleteObserver", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 74);
    }
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease_n();
  }
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

void sub_100D72BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
  BOOL v4 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString) == a1
    && *(void *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8) == a2;
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete) = 0;
    sub_100D72CD0();
    sub_1007A3510();
    sub_100D788A0(0);
    uint64_t v5 = sub_100D7ABB4();
    uint64_t v8 = v5;
    unint64_t v6 = v3[1];
    uint64_t v7 = *v3 & 0xFFFFFFFFFFFFLL;
    if ((v6 & 0x2000000000000000) != 0) {
      uint64_t v7 = HIBYTE(v6) & 0xF;
    }
    [(objc_class *)v5 setEnabled:v7 == 0];
  }
}

uint64_t sub_100D72CD0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v0;
  aBlock[4] = sub_100DB3694;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_10152BCF8;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v0;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_100DB3520((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

void sub_100D72F88(uint64_t a1)
{
  id v2 = [self defaultCenter];
  if (qword_10166ED78 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10171A150;
  sub_1005057FC(&qword_101677430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  AnyHashable.init<A>(_:)();
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = v5;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  char v7 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete);
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = v7;
  sub_100A393A8(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 postNotificationName:v3 object:0 userInfo:isa];
}

void sub_100D73158()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![v0 isViewLoaded]) {
    return;
  }
  uint64_t v42 = v2;
  uint64_t v11 = _swiftEmptyArrayStorage;
  if ([v0 isEditing])
  {
    id v12 = [v0 collectionView];
    if (!v12)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v13 = v12;
    id v14 = [v12 indexPathsForSelectedItems];

    if (v14)
    {
      uint64_t v11 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
    }
  }
  if (v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout] == 1)
  {
    uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout];
    if (!v15) {
      goto LABEL_14;
    }
    id v16 = v15;
    id v17 = [v1 collectionView];
    if (v17)
    {
LABEL_13:
      uint64_t v19 = v17;
      [v17 setCollectionViewLayout:v16 animated:0];

      goto LABEL_15;
    }
    __break(1u);
  }
  unint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout];
  if (v18)
  {
    id v16 = v18;
    id v17 = [v1 collectionView];
    if (!v17)
    {
LABEL_32:
      __break(1u);
      return;
    }
    goto LABEL_13;
  }
LABEL_14:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateToSelectedLayoutStyle()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 133, (uint64_t)"Unable to set collection view layout.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateToSelectedLayoutStyle()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 133);
LABEL_15:
  id v20 = [v1 collectionView];
  if (!v20)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v21 = v20;
  [v20 reloadData];

  id v22 = sub_100D7AB34();
  sub_100DB93F4(v22);

  uint64_t v23 = *((void *)v11 + 2);
  v41[2] = v11;
  if (v23)
  {
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v24 = v3 + 16;
    uint64_t v26 = (char *)v11 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
    uint64_t v27 = *(void *)(v24 + 56);
    uint64_t v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 32);
    uint64_t v44 = v27;
    unint64_t v45 = (void (**)(char *, char *, uint64_t))(v24 + 16);
    NSString v43 = (void (**)(char *, uint64_t))(v24 - 8);
    uint64_t v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 40);
    NSString v48 = v25;
    v41[1] = (v24 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v28 = v42;
    while (1)
    {
      v48(v10, v26, v28);
      uint64_t v29 = *v47;
      (*v47)(v10, 0, 1, v28);
      if ((*v46)(v10, 1, v28) == 1) {
        break;
      }
      uint64_t v30 = v24;
      uint64_t v31 = v10;
      (*v45)(v6, v10, v28);
      id v32 = v1;
      id v33 = [v1 collectionView];
      if (!v33)
      {
        __break(1u);
        goto LABEL_30;
      }
      unint64_t v34 = v33;
      uint64_t v35 = v28;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v34 selectItemAtIndexPath:isa animated:0 scrollPosition:0];

      (*v43)(v6, v35);
      v26 += v44;
      --v23;
      uint64_t v1 = v32;
      uint64_t v28 = v35;
      uint64_t v24 = v30;
      uint64_t v10 = v31;
      if (!v23) {
        goto LABEL_23;
      }
    }
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v28 = v42;
LABEL_23:
    v29(v10, 1, 1, v28);
  }
  swift_bridgeObjectRelease();
  id v37 = sub_100D7A804();

  if (v37) {
    sub_100D7A498();
  }
  if (v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState] == 1)
  {
    id v38 = [self standardUserDefaults];
    sub_10101B2C0();
    Class v39 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    sub_100DD54C4();
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v38 setObject:v39 forKey:v40];
  }
}

void sub_100D73714(BOOL a1, int a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = (unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions);
  int v7 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions);
  int v8 = (v7 != a1) | *(unsigned __int8 *)(v3
                                       + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions
                                       + 1) ^ a2;
  if (!((v7 != a1) | (*(unsigned __int8 *)(v3
                                          + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions
                                          + 1) ^ a2) & 1)
    && ((*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2) ^ a3) & 1) == 0)
  {
    return;
  }
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions)) {
    int v9 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2);
  }
  else {
    int v9 = 0;
  }
  unsigned char *v6 = a1;
  v6[1] = a2 & 1;
  v6[2] = a3 & 1;
  int v10 = a1 & a3;
  if (v10 == 1)
  {
    if (!(v8 & 1 | ((v9 & 1) == 0))) {
      goto LABEL_22;
    }
  }
  else if (((v8 | v9) & 1) == 0)
  {
LABEL_22:
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    uint64_t v21 = sub_100B80E8C();
    uint64_t v23 = v22;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v24 = sub_100528BE4();
    *(void *)(inited + 64) = v24;
    *(void *)(inited + 32) = v21;
    *(void *)(inited + 40) = v23;
    uint64_t v25 = sub_100DD4C48();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v24;
    *(void *)(inited + 72) = v25;
    *(void *)(inited + 80) = v26;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"persistedSortOptions", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 180, (uint64_t)"Tried to apply \"%@\" sort option, but it's disallowed in the \"%@\" folder.", 72, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"persistedSortOptions", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 180);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    return;
  }
  uint64_t v11 = sub_100DD7FC4();
  BOOL v12 = sub_100ED604C(a1, (uint64_t)v11);
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_22;
  }
  if (v10 != v9)
  {
    uint64_t v13 = sub_100D73B28();
    uint64_t v14 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout;
    uint64_t v15 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout);
    *(void *)(v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout) = v13;
    id v16 = v13;

    if (!*(void *)(v4 + v14))
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"listLayout", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 221, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"listLayout", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 221);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return;
    }
    if ((*(unsigned char *)(v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout) & 1) == 0) {
      sub_100D73158();
    }
  }
  sub_100D788A0(1);
  id v17 = sub_100D7A804();

  if (v17) {
    sub_100D7A498();
  }
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState) == 1)
  {
    id v27 = [self standardUserDefaults];
    sub_10101B2C0();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    sub_100DD54C4();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v27 setObject:isa forKey:v19];
  }
}

char *sub_100D73B28()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);

  id v7 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  swift_unknownObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  int v10 = sub_100DB369C(v9, v8);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v10 + 2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v13 = objc_allocWithZone((Class)type metadata accessor for CRLCollectionViewCompositionalLayout());
  uint64_t v14 = (char *)sub_10065ACCC(1, v11 != 0, (uint64_t)sub_100DBC7DC, v12, 0);
  if (qword_1016700B8 != -1) {
    swift_once();
  }
  *(void *)&v14[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight] = qword_10169AF48;
  return v14;
}

uint64_t sub_100D73D28()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  id v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v4, 4, 5, v6);
  char v8 = sub_100DDC744(v5, (uint64_t)v4);
  sub_100DBFA10((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v8 & 1) != 0
    || (v7(v4, 3, 5, v6),
        char v9 = sub_100DDC744(v5, (uint64_t)v4),
        sub_100DBFA10((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder),
        (v9 & 1) != 0))
  {
    char v10 = 0;
  }
  else
  {
    v7(v4, 5, 5, v6);
    char v11 = sub_100DDC744(v5, (uint64_t)v4);
    sub_100DBFA10((uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    char v10 = v11 ^ 1;
  }
  return v10 & 1;
}

uint64_t sub_100D73EEC()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter);
  }
  else
  {
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for CRLiOSFolderGridViewController.RefreshLimiter();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 32) = 0;
    *(_WORD *)(v2 + 40) = 1;
    *(unsigned char *)(v2 + 72) = 0;
    *(void *)(v2 + 88) = 0;
    *(void *)(v2 + 96) = 0;
    *(void *)(v2 + 80) = 0;
    *(void *)(v2 + 16) = 0xD00000000000001DLL;
    *(void *)(v2 + 24) = 0x8000000101289820;
    *(void *)(v2 + 48) = &_swiftEmptySetSingleton;
    *(void *)(v2 + 56) = sub_100DBC7D4;
    *(void *)(v2 + 64) = v3;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_100D73FD4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100D788A0((*(unsigned char *)(Strong
                            + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController) & 1) == 0);
    sub_100D7D7D8();
  }
}

id sub_100D740CC()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 removeObserver:v0];

  uint64_t v3 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver;
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver];
  if (v4)
  {
    swift_retain();
    id v5 = [v1 defaultCenter];
    [v5 removeObserver:v4];
    swift_release();

    *(void *)&v0[v3] = 0;
    swift_release();
  }
  uint64_t v6 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_storeMetadataObserver;
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_storeMetadataObserver];
  if (v7)
  {
    swift_retain();
    id v8 = [v1 defaultCenter];
    [v8 removeObserver:v7];
    swift_release();

    *(void *)&v0[v6] = 0;
    swift_release();
  }
  uint64_t v9 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver;
  uint64_t v10 = *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver];
  if (v10)
  {
    swift_unknownObjectRetain();
    id v11 = [v1 defaultCenter];
    [v11 removeObserver:v10];
    swift_unknownObjectRelease();

    *(void *)&v0[v9] = 0;
    swift_unknownObjectRelease();
  }
  uint64_t v12 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver;
  uint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver];
  if (v13)
  {
    swift_unknownObjectRetain();
    id v14 = [v1 defaultCenter];
    [v14 removeObserver:v13];

    swift_unknownObjectRelease();
  }
  *(void *)&v0[v12] = 0;
  swift_unknownObjectRelease();
  uint64_t v15 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver;
  uint64_t v16 = *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver];
  if (v16)
  {
    swift_unknownObjectRetain();
    id v17 = [v1 defaultCenter];
    [v17 removeObserver:v16];

    swift_unknownObjectRelease();
  }
  *(void *)&v0[v15] = 0;
  swift_unknownObjectRelease();
  [self removeKeyboardObserver:v0];
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController();
  return [super dealloc];
}

uint64_t sub_100D74574()
{
  return type metadata accessor for CRLiOSFolderGridViewController();
}

uint64_t type metadata accessor for CRLiOSFolderGridViewController()
{
  uint64_t result = qword_10169B110;
  if (!qword_10169B110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100D745C8()
{
  uint64_t v1 = (objc_class *)type metadata accessor for CRLiOSFolderGridViewController();
  v33.receiver = v0;
  v33.super_class = v1;
  [super viewDidLoad];
  id v2 = [v0 collectionView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v3 = v2;
  [v2 setPreservesSuperviewLayoutMargins:1];

  id v4 = [v0 collectionView];
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v5 = v4;
  [v4 setAlwaysBounceVertical:1];

  id v6 = [v0 collectionView];
  if (!v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = v6;
  id v8 = [objc_allocWithZone((Class)type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer()) initWithTarget:v0 action:"didRecognizeSingleContinuousTouchGesture:"];
  [v7 addGestureRecognizer:v8];

  uint64_t v9 = (void *)sub_100D74A4C();
  uint64_t v10 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout;
  id v11 = *(void **)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout] = v9;
  id v12 = v9;

  if (*(void *)&v0[v10])
  {
    uint64_t v13 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout;
    if (v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout]) {
      sub_100D73158();
    }

    id v14 = sub_100D73B28();
    uint64_t v15 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout;
    uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout];
    *(void *)&v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout] = v14;
    id v17 = v14;

    if (!*(void *)&v0[v15])
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"listLayout", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 221, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v30 = "listLayout";
      uint64_t v31 = 221;
      goto LABEL_24;
    }
    if ((v0[v13] & 1) == 0) {
      sub_100D73158();
    }

    sub_10101B180();
    sub_100D73158();
    sub_100D788A0(0);
    sub_100D7EFC0();
    sub_100D7E2C4();
    id v18 = [v0 collectionView];
    if (v18)
    {
      objc_super v19 = v18;
      [v18 setAllowsSelectionDuringEditing:1];

      id v20 = [v0 collectionView];
      if (v20)
      {
        uint64_t v21 = v20;
        [v20 setAllowsMultipleSelectionDuringEditing:1];

        id v22 = [v0 collectionView];
        if (v22)
        {
          uint64_t v23 = v22;
          id v24 = [self systemBackgroundColor];
          [v23 setBackgroundColor:v24];

          id v25 = [v0 collectionView];
          if (v25)
          {
            uint64_t v26 = v25;
            [v25 setAllowsMultipleSelection:1];

            sub_100D74DA8();
            sub_1005057FC((uint64_t *)&unk_10168D9A0);
            uint64_t v27 = swift_allocObject();
            *(_OWORD *)(v27 + 16) = xmmword_10117E810;
            *(void *)(v27 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
            *(void *)(v27 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
            void v32[3] = v1;
            v32[0] = v0;
            uint64_t v28 = v0;
            UIViewController.registerForTraitChanges(_:target:action:)();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v32);
          }
          goto LABEL_21;
        }
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_22:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"gridLayout", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 210, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v30 = "gridLayout";
  uint64_t v31 = 210;
LABEL_24:
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v30, 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, v31);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100D74A4C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v6 = __chkstk_darwin(v3, v5).n128_u64[0];
  id v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v0, "isViewLoaded", v6))
  {

    id v9 = sub_100D72460();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
    uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider];
    swift_unknownObjectRetain();
    uint64_t v11 = swift_bridgeObjectRetain();
    id v12 = sub_100DB369C(v11, v10);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = *((void *)v12 + 2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v14 = sub_100D72460();
    id v15 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
    if (qword_10166EC18 != -1) {
      swift_once();
    }
    [v15 setInterSectionSpacing:*(double *)&qword_101674DF0];
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 24) = &off_101537D48;
    swift_unknownObjectWeakInit();
    id v17 = (void *)swift_allocObject();
    v17[2] = ObjectType;
    v17[3] = v14;
    v17[4] = v16;
    objc_allocWithZone((Class)type metadata accessor for CRLCollectionViewCompositionalLayout());
    id v18 = v14;
    swift_retain();
    id v19 = v15;
    id v20 = (char *)sub_10065ACCC(0, v13 != 0, (uint64_t)sub_100DBF624, (uint64_t)v17, v15);
    if (qword_10166EC50 != -1) {
      swift_once();
    }
    [(id)qword_101674E28 dimension];
    uint64_t v22 = v21;
    swift_release();

    *(void *)&v20[OBJC_IVAR____TtC8Freeform36CRLCollectionViewCompositionalLayout_footerViewHeight] = v22;
    return (uint64_t)v20;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100D74DA8()
{
  uint64_t v1 = v0;
  id v2 = self;
  id v3 = [v2 defaultCenter];
  if (qword_1016700C0 != -1) {
    swift_once();
  }
  [v3 addObserver:v1 selector:"handleBoardLibrarySnapshotUpdateWithNotification:" name:qword_10171C6C8 object:*(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider)];

  if (qword_10166ED88 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10171A160;
  uint64_t v5 = self;
  id v6 = v4;
  id v7 = [v5 mainQueue];
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for CRLiOSFolderGridViewController.NotificationObserver();
  uint64_t v9 = swift_allocObject();
  sub_100D9BC3C(v6, (uint64_t)v18, v7, (uint64_t)sub_100DBF580, v8);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver) = v9;
  swift_release();
  id v10 = [v2 defaultCenter];
  [v10 addObserver:v1 selector:"reloadAllItems" name:NSCurrentLocaleDidChangeNotification object:0];

  id v11 = [v2 defaultCenter];
  [v11 addObserver:v1 selector:"reloadAllItems" name:NSSystemClockDidChangeNotification object:0];

  id v12 = [v2 defaultCenter];
  id v13 = [v5 mainQueue];
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18[4] = sub_100DBF588;
  v18[5] = v14;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = *(void *)"";
  long long v18[2] = sub_1005E5680;
  void v18[3] = &unk_10152CC98;
  id v15 = _Block_copy(v18);
  swift_release();
  id v16 = [v12 addObserverForName:NSCalendarDayChangedNotification object:0 queue:v13 usingBlock:v15];
  _Block_release(v15);

  return swift_unknownObjectRelease();
}

void sub_100D75148(char a1)
{
  id v2 = v1;
  v73.receiver = v2;
  v73.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController();
  [super viewWillAppear:a1 & 1];
  uint64_t v4 = self;
  id v5 = [v4 sharedApplication];
  unsigned int v6 = [v5 isRunningTest];

  if (v6)
  {
    id v7 = [v4 sharedApplication];
    id v8 = [v7 delegate];

    if (!v8)
    {
      __break(1u);
      return;
    }
    type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional();
    uint64_t v9 = qword_10171B3E0;
    if (qword_10171B3E0)
    {
      uint64_t v10 = qword_10171B3F0;
      uint64_t ObjectType = swift_getObjectType();
      long long aBlock = (void **)v9;
      id v12 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 24);
      swift_unknownObjectRetain();
      v12(v2, ObjectType, v10);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  id v13 = [v2 navigationController];
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = [v13 navigationBar];

    if (v15)
    {
      id v16 = v15;
      [v16 setPrefersLargeTitles:1];
      sub_1005057FC((uint64_t *)&unk_101687FB0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 32) = NSForegroundColorAttributeName;
      id v18 = NSForegroundColorAttributeName;
      id v19 = sub_100DD8A3C();
      *(void *)(inited + 64) = sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
      *(void *)(inited + 40) = v19;
      sub_100A38A68(inited);
      type metadata accessor for Key(0);
      sub_100DB3520((unint64_t *)&qword_1016837E0, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v16 setLargeTitleTextAttributes:isa];
    }
  }
  sub_100D7773C();
  uint64_t v21 = *(void *)(sub_100D73EEC() + 48);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v21 + 16)
    && (Hasher.init(_seed:)(),
        Hasher._combine(_:)(3uLL),
        Swift::Int v22 = Hasher._finalize()(),
        uint64_t v23 = -1 << *(unsigned char *)(v21 + 32),
        unint64_t v24 = v22 & ~v23,
        ((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) != 0))
  {
    uint64_t v25 = ~v23;
    while (1)
    {
      uint64_t v26 = *(void *)(v21 + 48) + 16 * v24;
      if (*(unsigned __int8 *)(v26 + 8) >= 3u && !*(void *)v26) {
        break;
      }
      unint64_t v24 = (v24 + 1) & v25;
      if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_100D73EEC();
    sub_100D9AE1C(0, 3u, 0);
    uint64_t v28 = *(void *)(v27 + 48);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(3uLL);
    Swift::Int v29 = Hasher._finalize()();
    uint64_t v30 = -1 << *(unsigned char *)(v28 + 32);
    unint64_t v31 = v29 & ~v30;
    if ((*(void *)(v28 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31))
    {
      uint64_t v32 = ~v30;
      while (1)
      {
        uint64_t v33 = *(void *)(v28 + 48) + 16 * v31;
        if (*(unsigned __int8 *)(v33 + 8) >= 3u && !*(void *)v33) {
          break;
        }
        unint64_t v31 = (v31 + 1) & v32;
        if (((*(void *)(v28 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
          goto LABEL_40;
        }
      }
      swift_bridgeObjectRetain();
      long long aBlock = (void **)v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100CCDF1C();
        uint64_t v28 = (uint64_t)aBlock;
      }
      uint64_t v34 = *(void *)(v28 + 48) + 16 * v31;
      uint64_t v35 = *(void **)v34;
      unsigned __int8 v36 = *(unsigned char *)(v34 + 8);
      sub_100DA1A78(v31);
      uint64_t v28 = (uint64_t)aBlock;
      swift_bridgeObjectRelease();
      sub_1007A0938(v35, v36);
    }
    else
    {
LABEL_40:
      swift_bridgeObjectRetain();
    }
    uint64_t v54 = *(void *)(v27 + 48);
    swift_bridgeObjectRetain();
    sub_100D991B4(v28);
    *(void *)(v27 + 48) = v28;
    swift_bridgeObjectRelease();
    sub_100D994DC(v54);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_23:
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = *(void *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver];
  if (v37)
  {
    uint64_t v38 = *(void *)(v37 + 16);
    if (v38)
    {
      uint64_t v39 = *(void *)(v38 + 48);
      if (*(void *)(v39 + 16))
      {
        Hasher.init(_seed:)();
        Hasher._combine(_:)(3uLL);
        Swift::Int v40 = Hasher._finalize()();
        uint64_t v41 = -1 << *(unsigned char *)(v39 + 32);
        unint64_t v42 = v40 & ~v41;
        if ((*(void *)(v39 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42))
        {
          uint64_t v43 = ~v41;
          while (1)
          {
            uint64_t v44 = *(void *)(v39 + 48) + 16 * v42;
            if (*(unsigned __int8 *)(v44 + 8) >= 3u && !*(void *)v44) {
              break;
            }
            unint64_t v42 = (v42 + 1) & v43;
            if (((*(void *)(v39 + 56 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
              goto LABEL_44;
            }
          }
          swift_retain();
          sub_100D9AE1C(0, 3u, 0);
          uint64_t v45 = *(void *)(v38 + 48);
          Hasher.init(_seed:)();
          Hasher._combine(_:)(3uLL);
          Swift::Int v46 = Hasher._finalize()();
          uint64_t v47 = -1 << *(unsigned char *)(v45 + 32);
          unint64_t v48 = v46 & ~v47;
          if ((*(void *)(v45 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48))
          {
            uint64_t v49 = ~v47;
            while (1)
            {
              uint64_t v50 = *(void *)(v45 + 48) + 16 * v48;
              if (*(unsigned __int8 *)(v50 + 8) >= 3u && !*(void *)v50) {
                break;
              }
              unint64_t v48 = (v48 + 1) & v49;
              if (((*(void *)(v45 + 56 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0) {
                goto LABEL_42;
              }
            }
            swift_bridgeObjectRetain();
            long long aBlock = (void **)v45;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100CCDF1C();
              uint64_t v45 = (uint64_t)aBlock;
            }
            uint64_t v51 = *(void *)(v45 + 48) + 16 * v48;
            uint64_t v52 = *(void **)v51;
            unsigned __int8 v53 = *(unsigned char *)(v51 + 8);
            sub_100DA1A78(v48);
            uint64_t v45 = (uint64_t)aBlock;
            swift_bridgeObjectRelease();
            sub_1007A0938(v52, v53);
          }
          else
          {
LABEL_42:
            swift_bridgeObjectRetain();
          }
          uint64_t v55 = *(void *)(v38 + 48);
          swift_bridgeObjectRetain();
          sub_100D991B4(v45);
          *(void *)(v38 + 48) = v45;
          swift_bridgeObjectRelease();
          sub_100D994DC(v55);
          swift_bridgeObjectRelease();
          swift_release();
        }
      }
    }
  }
LABEL_44:
  uint64_t v56 = self;
  id v57 = [v56 defaultCenter];
  if (qword_10166FE48 != -1) {
    swift_once();
  }
  uint64_t v58 = qword_10171C3A8;
  uint64_t v59 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v71 = sub_100DBF3A0;
  uint64_t v72 = v59;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v68 = *(void *)"";
  uint64_t v69 = sub_1005E5680;
  uint64_t v70 = &unk_10152CBF8;
  id v60 = _Block_copy(&aBlock);
  swift_release();
  id v61 = [v57 addObserverForName:v58 object:0 queue:0 usingBlock:v60];
  _Block_release(v60);

  *(void *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver] = v61;
  swift_unknownObjectRelease();
  id v62 = [v56 defaultCenter];
  if (qword_10166FE40 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_10171C3A0;
  uint64_t v64 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v71 = sub_100DBF3D8;
  uint64_t v72 = v64;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v68 = *(void *)"";
  uint64_t v69 = sub_1005E5680;
  uint64_t v70 = &unk_10152CC20;
  char v65 = _Block_copy(&aBlock);
  swift_release();
  id v66 = [v62 addObserverForName:v63 object:0 queue:0 usingBlock:v65];
  _Block_release(v65);

  *(void *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver] = v66;
  swift_unknownObjectRelease();
}

uint64_t sub_100D75A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100DBFB68, v6, v5);
}

uint64_t sub_100D75B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = (void *)result;
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
    type metadata accessor for MainActor();
    id v12 = v10;
    uint64_t v13 = static MainActor.shared.getter();
    uint64_t v14 = (void *)swift_allocObject();
    void v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v12;
    sub_1005912D0((uint64_t)v8, a4, (uint64_t)v14);

    return swift_release();
  }
  return result;
}

uint64_t sub_100D75C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100D75CF4, v6, v5);
}

uint64_t sub_100D75CF4()
{
  swift_release();
  sub_100D834D0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100D75DAC(char a1)
{
  id v2 = v1;
  v22.receiver = v2;
  v22.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController();
  [super viewDidAppear:a1 & 1];
  uint64_t v4 = self;
  id v5 = [v4 sharedApplication];
  id v6 = [v5 delegate];

  if (!v6)
  {
    __break(1u);
    goto LABEL_16;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v7 = swift_dynamicCastClassUnconditional();
  id v8 = [v4 sharedApplication];
  if ([v8 shouldRecordExtendedLaunchTime]
    && (uint64_t v9 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime,
        (*(unsigned char *)(v7 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime) & 1) == 0))
  {
    id v10 = [v8 _launchTestName];
    [v8 finishedTest:v10];

    *(unsigned char *)(v7 + v9) = 1;
  }
  else
  {
  }
  swift_unknownObjectRelease();
  id v11 = [v4 sharedApplication];
  unsigned int v12 = [v11 isRunningTest];

  if (v12)
  {
    id v13 = [v4 sharedApplication];
    id v14 = [v13 delegate];

    if (!v14)
    {
LABEL_17:
      __break(1u);
      return;
    }
    swift_dynamicCastClassUnconditional();
    if (qword_10171B3E0)
    {
      uint64_t v15 = qword_10171B3F0;
      uint64_t ObjectType = swift_getObjectType();
      id v17 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
      swift_unknownObjectRetain();
      v17(v2, ObjectType, v15);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  id v18 = [v2 collectionView];
  if (!v18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v19 = v18;
  id v20 = [v18 collectionViewLayout];

  [v20 invalidateLayout];
  v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState] = 1;
  uint64_t v21 = *(void **)(*(void *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider]
                 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers);
  if (([v21 containsObject:v2] & 1) == 0) {
    [v21 addObject:v2];
  }
  [self addKeyboardObserver:v2];
}

uint64_t sub_100D7618C(char a1)
{
  id v2 = v1;
  v34.receiver = v2;
  v34.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController();
  [super viewDidDisappear:a1 & 1];
  uint64_t v4 = sub_100D73EEC();
  sub_100D9AE1C(0, 3u, 1);
  uint64_t v5 = *(void *)(v4 + 48);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(3uLL);
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      uint64_t v10 = *(void *)(v5 + 48) + 16 * v8;
      if (*(unsigned __int8 *)(v10 + 8) >= 3u && !*(void *)v10) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = v5;
    if (*(void *)(v5 + 24) <= *(void *)(v5 + 16))
    {
      if (result) {
        sub_100CC3A40();
      }
      else {
        sub_100CD4C78();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(3uLL);
      uint64_t result = Hasher._finalize()();
      uint64_t v12 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v8 = result & ~v12;
      if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
      {
        uint64_t v13 = ~v12;
        do
        {
          uint64_t v14 = *(void *)(v5 + 48) + 16 * v8;
          if (*(unsigned __int8 *)(v14 + 8) >= 3u && !*(void *)v14) {
            goto LABEL_40;
          }
          unint64_t v8 = (v8 + 1) & v13;
        }
        while (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
      }
    }
    else if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100CCDF1C();
    }
    *(void *)(v5 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v8;
    uint64_t v15 = *(void *)(v5 + 48) + 16 * v8;
    *(void *)uint64_t v15 = 0;
    *(unsigned char *)(v15 + 8) = 3;
    uint64_t v16 = *(void *)(v5 + 16);
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17)
    {
      __break(1u);
      goto LABEL_48;
    }
    *(void *)(v5 + 16) = v18;
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = *(void *)(v4 + 48);
  swift_bridgeObjectRetain();
  sub_100D991B4(v5);
  *(void *)(v4 + 48) = v5;
  swift_bridgeObjectRelease();
  sub_100D994DC(v19);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v20 = *(void *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver];
  if (!v20) {
    goto LABEL_44;
  }
  uint64_t v4 = *(void *)(v20 + 16);
  if (!v4) {
    goto LABEL_44;
  }
  swift_retain();
  sub_100D9AE1C(0, 3u, 1);
  uint64_t v5 = *(void *)(v4 + 48);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(3uLL);
  Swift::Int v21 = Hasher._finalize()();
  uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v21 & ~v22;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v23 = ~v22;
    while (1)
    {
      uint64_t v24 = *(void *)(v5 + 48) + 16 * v8;
      if (*(unsigned __int8 *)(v24 + 8) >= 3u && !*(void *)v24) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v23;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_43;
  }
LABEL_29:
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = v5;
  if (*(void *)(v5 + 24) > *(void *)(v5 + 16))
  {
    if ((result & 1) == 0) {
      uint64_t result = (uint64_t)sub_100CCDF1C();
    }
    goto LABEL_41;
  }
  if (result) {
    sub_100CC3A40();
  }
  else {
    sub_100CD4C78();
  }
  Hasher.init(_seed:)();
  Hasher._combine(_:)(3uLL);
  uint64_t result = Hasher._finalize()();
  uint64_t v25 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = result & ~v25;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v26 = ~v25;
    while (1)
    {
      uint64_t v27 = *(void *)(v5 + 48) + 16 * v8;
      if (*(unsigned __int8 *)(v27 + 8) >= 3u && !*(void *)v27) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v26;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_41;
      }
    }
LABEL_40:
    uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
LABEL_41:
  *(void *)(v5 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v8;
  uint64_t v28 = *(void *)(v5 + 48) + 16 * v8;
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 3;
  uint64_t v29 = *(void *)(v5 + 16);
  BOOL v17 = __OFADD__(v29, 1);
  uint64_t v30 = v29 + 1;
  if (v17)
  {
LABEL_48:
    __break(1u);
    return result;
  }
  *(void *)(v5 + 16) = v30;
  swift_bridgeObjectRelease();
LABEL_43:
  uint64_t v31 = *(void *)(v4 + 48);
  swift_bridgeObjectRetain();
  sub_100D991B4(v5);
  *(void *)(v4 + 48) = v5;
  swift_bridgeObjectRelease();
  sub_100D994DC(v31);
  swift_bridgeObjectRelease();
  swift_release();
LABEL_44:
  uint64_t v32 = *(void **)(*(void *)&v2[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider]
                 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers);
  uint64_t result = [v32 containsObject:v2 v33];
  if (result) {
    return (uint64_t)[v32 removeObject:v2];
  }
  return result;
}

uint64_t sub_100D766E0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100D7773C();
  sub_100D7D7D8();
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v0;
  aBlock[4] = sub_100DBC7CC;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_10152C1A8;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v0;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_100DB3520((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

void sub_100D769A0(void *a1)
{
  id v1 = [a1 collectionView];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 collectionViewLayout];

    [v3 invalidateLayout];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100D76A6C(uint64_t result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController) == (result & 1)) {
    return result;
  }
  uint64_t v3 = v1;
  char v4 = result;
  uint64_t v5 = sub_100D73EEC();
  if ((v4 & 1) == 0)
  {
    sub_100D9AE1C((void *)1, 3u, 0);
    uint64_t v12 = *(void *)(v5 + 48);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(4uLL);
    Swift::Int v13 = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v9 = v13 & ~v14;
    if (((*(void *)(v12 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    {
LABEL_19:
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    uint64_t v15 = ~v14;
    while (1)
    {
      uint64_t v2 = 16 * v9;
      uint64_t v16 = *(void *)(v12 + 48) + 16 * v9;
      if (*(unsigned __int8 *)(v16 + 8) >= 3u && *(void *)v16 == 1) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v15;
      if (((*(void *)(v12 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v53 = v12;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_15:
      uint64_t v17 = *(void *)(v12 + 48) + v2;
      uint64_t v18 = *(void **)v17;
      unsigned __int8 v19 = *(unsigned char *)(v17 + 8);
      sub_100DA1A78(v9);
      uint64_t v12 = v53;
      swift_bridgeObjectRelease();
      sub_1007A0938(v18, v19);
LABEL_20:
      uint64_t v21 = *(void *)(v5 + 48);
      swift_bridgeObjectRetain();
      sub_100D991B4(v12);
      *(void *)(v5 + 48) = v12;
      swift_bridgeObjectRelease();
      sub_100D994DC(v21);
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver);
      if (!v22) {
        return result;
      }
      uint64_t v3 = *(void *)(v22 + 16);
      if (!v3) {
        return result;
      }
      swift_retain();
      sub_100D9AE1C((void *)1, 3u, 0);
      uint64_t v5 = *(void *)(v3 + 48);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(4uLL);
      Swift::Int v23 = Hasher._finalize()();
      uint64_t v24 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v25 = v23 & ~v24;
      if ((*(void *)(v5 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
      {
        uint64_t v26 = ~v24;
        while (1)
        {
          uint64_t v27 = *(void *)(v5 + 48) + 16 * v25;
          if (*(unsigned __int8 *)(v27 + 8) >= 3u && *(void *)v27 == 1) {
            break;
          }
          unint64_t v25 = (v25 + 1) & v26;
          if (((*(void *)(v5 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
            goto LABEL_48;
          }
        }
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100CCDF1C();
        }
        uint64_t v28 = *(void *)(v5 + 48) + 16 * v25;
        uint64_t v29 = *(void **)v28;
        unsigned __int8 v30 = *(unsigned char *)(v28 + 8);
        sub_100DA1A78(v25);
        swift_bridgeObjectRelease();
        sub_1007A0938(v29, v30);
        goto LABEL_64;
      }
      goto LABEL_48;
    }
LABEL_69:
    sub_100CCDF1C();
    uint64_t v12 = v53;
    goto LABEL_15;
  }
  sub_100D9AE1C((void *)1, 3u, 1);
  unint64_t v6 = *(void *)(v5 + 48);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(4uLL);
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      uint64_t v11 = *(void *)(v6 + 48) + 16 * v9;
      if (*(unsigned __int8 *)(v11 + 8) >= 3u && *(void *)v11 == 1) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRetain();
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (*(void *)(v6 + 24) <= *(void *)(v6 + 16))
    {
      if (isUniquelyReferenced_nonNull_native) {
        sub_100CC3A40();
      }
      else {
        sub_100CD4C78();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(4uLL);
      Swift::Int v31 = Hasher._finalize()();
      uint64_t v32 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v9 = v31 & ~v32;
      if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
      {
        uint64_t v33 = ~v32;
        do
        {
          uint64_t v34 = *(void *)(v6 + 48) + 16 * v9;
          if (*(unsigned __int8 *)(v34 + 8) >= 3u && *(void *)v34 == 1) {
            goto LABEL_61;
          }
          unint64_t v9 = (v9 + 1) & v33;
        }
        while (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
      }
    }
    else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100CCDF1C();
    }
    *(void *)(v6 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v9;
    uint64_t v35 = *(void *)(v6 + 48) + 16 * v9;
    *(void *)uint64_t v35 = 1;
    *(unsigned char *)(v35 + 8) = 3;
    uint64_t v36 = *(void *)(v6 + 16);
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37)
    {
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    *(void *)(v6 + 16) = v38;
    swift_bridgeObjectRelease();
  }
  unint64_t v9 = *(void *)(v5 + 48);
  swift_bridgeObjectRetain();
  sub_100D991B4(v6);
  *(void *)(v5 + 48) = v6;
  swift_bridgeObjectRelease();
  sub_100D994DC(v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver);
  if (!v39) {
    return result;
  }
  uint64_t v3 = *(void *)(v39 + 16);
  if (!v3) {
    return result;
  }
  swift_retain();
  sub_100D9AE1C((void *)1, 3u, 1);
  uint64_t v5 = *(void *)(v3 + 48);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(4uLL);
  Swift::Int v40 = Hasher._finalize()();
  uint64_t v41 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v6 = v40 & ~v41;
  if (((*(void *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    int v44 = swift_isUniquelyReferenced_nonNull_native();
    if (*(void *)(v5 + 24) > *(void *)(v5 + 16))
    {
      if ((v44 & 1) == 0) {
        sub_100CCDF1C();
      }
LABEL_62:
      *(void *)(v5 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v6;
      uint64_t v49 = *(void *)(v5 + 48) + 16 * v6;
      *(void *)uint64_t v49 = 1;
      *(unsigned char *)(v49 + 8) = 3;
      uint64_t v50 = *(void *)(v5 + 16);
      BOOL v37 = __OFADD__(v50, 1);
      uint64_t v51 = v50 + 1;
      if (!v37)
      {
        *(void *)(v5 + 16) = v51;
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
      goto LABEL_68;
    }
    if (v44) {
      sub_100CC3A40();
    }
    else {
      sub_100CD4C78();
    }
    Hasher.init(_seed:)();
    Hasher._combine(_:)(4uLL);
    Swift::Int v45 = Hasher._finalize()();
    uint64_t v46 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v6 = v45 & ~v46;
    if (((*(void *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_62;
    }
    uint64_t v47 = ~v46;
    while (1)
    {
      uint64_t v48 = *(void *)(v5 + 48) + 16 * v6;
      if (*(unsigned __int8 *)(v48 + 8) >= 3u && *(void *)v48 == 1) {
        break;
      }
      unint64_t v6 = (v6 + 1) & v47;
      if (((*(void *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_62;
      }
    }
LABEL_61:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v42 = ~v41;
  while (1)
  {
    uint64_t v43 = *(void *)(v5 + 48) + 16 * v6;
    if (*(unsigned __int8 *)(v43 + 8) >= 3u && *(void *)v43 == 1) {
      break;
    }
    unint64_t v6 = (v6 + 1) & v42;
    if (((*(void *)(v5 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_50;
    }
  }
LABEL_48:
  swift_bridgeObjectRetain();
LABEL_64:
  uint64_t v52 = *(void *)(v3 + 48);
  swift_bridgeObjectRetain();
  sub_100D991B4(v5);
  *(void *)(v3 + 48) = v5;
  swift_bridgeObjectRelease();
  sub_100D994DC(v52);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_100D771C4(uint64_t a1)
{
  uint64_t v48 = a1;
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FA58 != -1) {
    swift_once();
  }
  swift_beginAccess();
  Swift::Int v7 = (void *)static OS_os_log.crlFolderUI;
  uint64_t v45 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v44 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v9 = v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  id v10 = v7;
  uint64_t v47 = v9;
  uint64_t v11 = sub_100DD4C48();
  uint64_t v13 = v12;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v46 = sub_100528BE4();
  *(void *)(inited + 64) = v46;
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v13;
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Folder view (%@) received snapshot update", 41, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v48, v2);
  if (sub_100DC6278((uint64_t)v6))
  {
    swift_beginAccess();
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_10057C8B4(v15);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100D73EEC();
    char v16 = sub_100D997E8();
    swift_release();
    uint64_t v17 = (void *)static OS_os_log.crlFolderUI;
    if (v16)
    {
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = v44;
      id v19 = v17;
      uint64_t v20 = sub_100DD4C48();
      unint64_t v21 = v46;
      *(void *)(v18 + 56) = &type metadata for String;
      *(void *)(v18 + 64) = v21;
      *(void *)(v18 + 32) = v20;
      *(void *)(v18 + 40) = v22;
      uint64_t v23 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Folder view (%@) ignoring snapshot update", 41, 2, v18);
      swift_setDeallocating();
      swift_arrayDestroy();

      uint64_t v24 = sub_100D73EEC();
      sub_100D9AE1C((void *)2, 3u, 0);
      uint64_t v25 = *(void *)(v24 + 48);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(5uLL);
      Swift::Int v26 = Hasher._finalize()();
      uint64_t v27 = -1 << *(unsigned char *)(v25 + 32);
      unint64_t v28 = v26 & ~v27;
      if ((*(void *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28))
      {
        uint64_t v29 = ~v27;
        while (1)
        {
          uint64_t v30 = *(void *)(v25 + 48) + 16 * v28;
          if (*(unsigned __int8 *)(v30 + 8) >= 3u && *(void *)v30 >= 2uLL) {
            break;
          }
          unint64_t v28 = (v28 + 1) & v29;
          if (((*(void *)(v25 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v49 = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100CCDF1C();
          uint64_t v25 = v49;
        }
        uint64_t v32 = *(void *)(v25 + 48) + 16 * v28;
        uint64_t v33 = *(void **)v32;
        unsigned __int8 v34 = *(unsigned char *)(v32 + 8);
        sub_100DA1A78(v28);
        uint64_t v25 = v49;
        swift_bridgeObjectRelease();
        sub_1007A0938(v33, v34);
      }
      else
      {
LABEL_15:
        swift_bridgeObjectRetain();
      }
      uint64_t v43 = *(void *)(v24 + 48);
      swift_bridgeObjectRetain();
      sub_100D991B4(v25);
      *(void *)(v24 + 48) = v25;
      swift_bridgeObjectRelease();
      sub_100D994DC(v43);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v37 = swift_initStackObject();
      *(_OWORD *)(v37 + 16) = v44;
      id v38 = v17;
      uint64_t v39 = sub_100DD4C48();
      unint64_t v40 = v46;
      *(void *)(v37 + 56) = &type metadata for String;
      *(void *)(v37 + 64) = v40;
      *(void *)(v37 + 32) = v39;
      *(void *)(v37 + 40) = v41;
      uint64_t v42 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v42, (uint64_t)"Folder view (%@) requesting refresh", 35, 2, v37);
      swift_setDeallocating();
      swift_arrayDestroy();

      sub_100D73EEC();
      sub_100D998B0();
    }
    swift_release();
  }
  else
  {
    id v35 = (id)static OS_os_log.crlFolderUI;
    uint64_t v36 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Invalid snapshot update notification.", 37, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_100D7773C()
{
  id v1 = [v0 navigationController];
  if (v1)
  {
    uint64_t v2 = v1;
    id v12 = [v1 parentViewController];

    if (v12)
    {
      self;
      uint64_t v3 = (void *)swift_dynamicCastObjCClass();
      if (v3)
      {
        uint64_t v4 = v3;
        id v5 = [v3 navigationBar];
        if (v5)
        {
          id v6 = v5;
          [v6 setPrefersLargeTitles:1];
          sub_1005057FC((uint64_t *)&unk_101687FB0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          *(void *)(inited + 32) = NSForegroundColorAttributeName;
          uint64_t v8 = NSForegroundColorAttributeName;
          id v9 = sub_100DD8A3C();
          *(void *)(inited + 64) = sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
          *(void *)(inited + 40) = v9;
          sub_100A38A68(inited);
          type metadata accessor for Key(0);
          sub_100DB3520((unint64_t *)&qword_1016837E0, type metadata accessor for Key);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v6 setLargeTitleTextAttributes:isa];
        }
        id v11 = [v4 navigationItem];
        [v11 setLargeTitleDisplayMode:1];
      }
      else
      {
      }
    }
  }
}

uint64_t sub_100D7795C(uint64_t a1)
{
  uint64_t v41 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  id v9 = (char *)&v36 - v8;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v36 - v21;
  __chkstk_darwin(v23, v24);
  Swift::Int v26 = (char *)&v36 - v25;
  uint64_t v38 = v1;
  id v27 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v28 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v40 = v3 + 8;
  v39(v9, v2);
  sub_100DD8154(v41, v28, (uint64_t)v13);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101676310);
  }
  sub_100DBF9A8((uint64_t)v13, (uint64_t)v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v42 = &_swiftEmptySetSingleton;
  sub_100DBF940((uint64_t)v26, (uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_100CB8484((uint64_t)v22, (uint64_t)v18);
  sub_100DBFA10((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v30 = (uint64_t)v42;
  id v31 = sub_100D72460();
  uint64_t v32 = (uint64_t)v37;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v33 = (uint64_t)v26;
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"reloadItems(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 623, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"reloadItems(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 623);
    [self logFullBacktrace];
  }
  uint64_t v34 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  swift_bridgeObjectRetain();
  id v35 = sub_100DB4080(v34, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v35);
  swift_bridgeObjectRelease();
  sub_100D78E94(v32, 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  v39((char *)v32, v2);
  swift_bridgeObjectRelease();
  return sub_100DBFA10(v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_100D77DFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10169B500);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections;
  swift_beginAccess();
  sub_100522E9C(v13, (uint64_t)v7, (uint64_t *)&unk_10169B500);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100522F00((uint64_t)v7, (uint64_t *)&unk_10169B500);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, 1, 1, v8);
  }
  uint64_t v15 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  uint64_t v82 = v9 + 32;
  unint64_t v81 = v15;
  v15((uint64_t)v12, v7, v8);
  uint64_t v16 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  uint64_t v87 = *(void *)(v16 + 16);
  if (!v87)
  {
    swift_bridgeObjectRelease();
    uint64_t v78 = _swiftEmptyArrayStorage;
LABEL_39:
    NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v78);
    swift_bridgeObjectRelease();
    v81(a1, v12, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
  uint64_t v83 = v12;
  uint64_t v79 = v9;
  uint64_t v84 = v8;
  uint64_t v80 = a1;
  uint64_t v86 = v16 + 32;
  unsigned __int8 v91 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections);
  swift_beginAccess();
  unint64_t v17 = 0;
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v19 = v87;
  uint64_t v85 = v16;
  while (v17 < *(void *)(v16 + 16))
  {
    uint64_t v20 = *v91;
    if (*(void *)(*v91 + 16))
    {
      uint64_t v21 = v86 + 32 * v17;
      uint64_t v22 = *(void **)v21;
      uint64_t v23 = *(char **)(v21 + 8);
      uint64_t v24 = *(void *)(v21 + 16);
      int v25 = *(unsigned __int8 *)(v21 + 24);
      Hasher.init(_seed:)();
      sub_10053BB6C(v22, v23, v24, v25);
      swift_bridgeObjectRetain();
      sub_100B8174C((int)v95, (unint64_t)v22, (unint64_t)v23, v24, v25);
      Swift::Int v26 = Hasher._finalize()();
      uint64_t v27 = -1 << *(unsigned char *)(v20 + 32);
      unint64_t v28 = v26 & ~v27;
      id v92 = (char *)(v20 + 56);
      if ((*(void *)(v20 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28))
      {
        uint64_t v89 = v27;
        unint64_t v90 = v17;
        id v88 = v18;
        uint64_t v29 = *(void *)(v20 + 48) + 32 * v28;
        id v30 = *(id *)v29;
        id v31 = *(void **)(v29 + 8);
        uint64_t v32 = *(void *)(v29 + 16);
        unsigned __int8 v33 = *(unsigned char *)(v29 + 24);
        sub_10053BB6C(*(id *)v29, v31, v32, v33);
        uint64_t v93 = v24;
        int v94 = v25;
        char v34 = sub_100B834D0((unint64_t)v30, (unint64_t)v31, v32, v33, (unint64_t)v22, (unint64_t)v23, v24, v25);
        sub_10053BBA0(v30, v31, v32, v33);
        id v35 = v23;
        uint64_t v36 = v22;
        if ((v34 & 1) == 0)
        {
          uint64_t v89 = ~v89;
          unint64_t v37 = (v28 + 1) & v89;
          if (((*(void *)&v92[(v37 >> 3) & 0xFFFFFFFFFFFFFF8] >> v37) & 1) == 0) {
            goto LABEL_36;
          }
          uint64_t v38 = *(void *)(v20 + 48) + 32 * v37;
          id v39 = *(id *)v38;
          uint64_t v40 = *(void **)(v38 + 8);
          uint64_t v41 = *(void *)(v38 + 16);
          unsigned __int8 v42 = *(unsigned char *)(v38 + 24);
          sub_10053BB6C(*(id *)v38, v40, v41, v42);
          char v43 = sub_100B834D0((unint64_t)v39, (unint64_t)v40, v41, v42, (unint64_t)v36, (unint64_t)v35, v93, v94);
          sub_10053BBA0(v39, v40, v41, v42);
          if ((v43 & 1) == 0)
          {
            for (unint64_t i = v37 + 1; ; unint64_t i = v71 + 1)
            {
              unint64_t v71 = i & v89;
              if (((*(void *)&v92[(v71 >> 3) & 0xFFFFFFFFFFFFFF8] >> v71) & 1) == 0) {
                break;
              }
              uint64_t v72 = *(void *)(v20 + 48) + 32 * v71;
              id v73 = *(id *)v72;
              uint64_t v74 = *(void **)(v72 + 8);
              uint64_t v75 = *(void *)(v72 + 16);
              unsigned __int8 v76 = *(unsigned char *)(v72 + 24);
              sub_10053BB6C(*(id *)v72, v74, v75, v76);
              char v77 = sub_100B834D0((unint64_t)v73, (unint64_t)v74, v75, v76, (unint64_t)v36, (unint64_t)v35, v93, v94);
              sub_10053BBA0(v73, v74, v75, v76);
              if (v77) {
                goto LABEL_13;
              }
            }
LABEL_36:
            swift_bridgeObjectRelease();
            sub_10053BBA0(v36, v35, v93, v94);
            uint64_t v16 = v85;
            uint64_t v19 = v87;
            uint64_t v18 = v88;
            unint64_t v17 = v90;
            goto LABEL_6;
          }
        }
LABEL_13:
        swift_bridgeObjectRelease();
        v95[0] = v36;
        v95[1] = v35;
        id v92 = v35;
        uint64_t v44 = v93;
        v95[2] = v93;
        unsigned __int8 v45 = v94;
        char v96 = v94;
        uint64_t v46 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
        uint64_t v47 = *(void *)(v46 + 16);
        uint64_t v18 = v88;
        int64_t v48 = *((void *)v88 + 2);
        int64_t v49 = v48 + v47;
        if (__OFADD__(v48, v47)) {
          goto LABEL_42;
        }
        uint64_t v50 = v46;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (!isUniquelyReferenced_nonNull_native || v49 > *((void *)v18 + 3) >> 1)
        {
          if (v48 <= v49) {
            int64_t v52 = v48 + v47;
          }
          else {
            int64_t v52 = v48;
          }
          uint64_t v18 = (double *)sub_100F6273C(isUniquelyReferenced_nonNull_native, v52, 1, (unint64_t)v18);
        }
        uint64_t v16 = v85;
        uint64_t v19 = v87;
        unint64_t v17 = v90;
        if (*(void *)(v50 + 16))
        {
          uint64_t v53 = v36;
          uint64_t v54 = v85;
          uint64_t v55 = v87;
          uint64_t v56 = *((void *)v18 + 2);
          uint64_t v57 = (*((void *)v18 + 3) >> 1) - v56;
          uint64_t v58 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
          uint64_t v59 = *(void *)(v58 + 72);
          if (v57 < v47) {
            goto LABEL_44;
          }
          unint64_t v60 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
          id v61 = (char *)v18 + v60 + v59 * v56;
          unint64_t v62 = v50 + v60;
          uint64_t v63 = v59 * v47;
          uint64_t v64 = &v61[v63];
          unint64_t v65 = v62 + v63;
          BOOL v66 = v62 >= (unint64_t)v64 || (unint64_t)v61 >= v65;
          unint64_t v17 = v90;
          if (!v66) {
            goto LABEL_46;
          }
          swift_arrayInitWithCopy();
          uint64_t v19 = v55;
          uint64_t v16 = v54;
          uint64_t v36 = v53;
          if (v47)
          {
            uint64_t v67 = *((void *)v18 + 2);
            BOOL v68 = __OFADD__(v67, v47);
            uint64_t v69 = v67 + v47;
            if (v68) {
              goto LABEL_45;
            }
            *((void *)v18 + 2) = v69;
          }
        }
        else if (v47)
        {
          goto LABEL_43;
        }
        sub_10053BBA0(v36, v92, v44, v45);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_10053BBA0(v22, v23, v24, v25);
        uint64_t v19 = v87;
      }
    }
LABEL_6:
    if (++v17 == v19)
    {
      swift_bridgeObjectRelease();
      a1 = v80;
      uint64_t v8 = v84;
      uint64_t v78 = v18;
      uint64_t v9 = v79;
      uint64_t v12 = v83;
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

BOOL sub_100D78590()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10169B500);
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)&v33 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)&v33 - v20;
  uint64_t v22 = v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections;
  swift_beginAccess();
  sub_100522E9C(v22, (uint64_t)v8, (uint64_t *)&unk_10169B500);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v23(v8, 1, v9) == 1)
  {
    uint64_t v24 = (uint64_t)v8;
LABEL_5:
    sub_100522F00(v24, (uint64_t *)&unk_10169B500);
    return 0;
  }
  char v34 = v18;
  id v35 = v14;
  int v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v25(v21, v8, v9);
  sub_100D77DFC((uint64_t)v5);
  if (v23(v5, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
    uint64_t v24 = (uint64_t)v5;
    goto LABEL_5;
  }
  uint64_t v27 = v34;
  v25(v34, v5, v9);
  uint64_t v28 = *(void *)(NSDiffableDataSourceSnapshot.itemIdentifiers.getter() + 16);
  swift_bridgeObjectRelease();
  uint64_t v29 = v35;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v21, v9);
  if (v28)
  {
    BOOL v26 = 0;
  }
  else
  {
    uint64_t v30 = *(void *)(NSDiffableDataSourceSnapshot.itemIdentifiers.getter() + 16);
    swift_bridgeObjectRelease();
    BOOL v26 = v30 != 0;
  }
  id v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v31(v29, v9);
  v31(v27, v9);
  v31(v21, v9);
  return v26;
}

void *sub_100D788A0(char a1)
{
  uint64_t result = [v1 isViewLoaded];
  if (result)
  {
    uint64_t result = (void *)sub_100D7215C((uint64_t)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder]);
    if (result)
    {
      uint64_t v4 = (uint64_t)result;
      uint64_t v5 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString];
      unint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8];
      uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString] & 0xFFFFFFFFFFFFLL;
      if ((v6 & 0x2000000000000000) != 0) {
        uint64_t v7 = HIBYTE(v6) & 0xF;
      }
      if (v7)
      {
        v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete] = 0;
        sub_100D72CD0();
        uint64_t v9 = *v5;
        uint64_t v8 = v5[1];
        uint64_t v10 = swift_allocObject();
        *(void *)(v10 + 16) = v1;
        char v11 = a1 & 1;
        *(unsigned char *)(v10 + 24) = a1 & 1;
        uint64_t v12 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v1;
        *(unsigned char *)(v13 + 24) = v11;
        *(void *)(v13 + 32) = v12;
        uint64_t v14 = v1;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1007A0EA4(v4, v9, v8, (uint64_t)sub_100DBC770, v10, (uint64_t)sub_100DBC7BC, v13);
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100D78A8C(result, (uint64_t)v1, a1 & 1);
      }
      return (void *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100D78A8C(void *a1, uint64_t a2, int a3)
{
  int v34 = a3;
  id v35 = a1;
  uint64_t v36 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v4 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v5);
  uint64_t v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10168E128);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10169B500);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v13, v16);
  uint64_t v19 = (char *)&v32 - v18;
  __chkstk_darwin(v17, v20);
  uint64_t v22 = (char *)&v32 - v21;
  int v23 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 1);
  int v24 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions);
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions)) {
    int v25 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2);
  }
  else {
    int v25 = 0;
  }
  sub_100DBF940(a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v10, 0, 1, v26);
  sub_100D6FB20(v35, v24, v25, v23, (uint64_t)v10, (uint64_t)v22);
  uint64_t v27 = (uint64_t)v10;
  uint64_t v28 = v36;
  sub_100522F00(v27, &qword_10168E128);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v22, 0, 1, v28);
  sub_100522E9C((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_10169B500);
  uint64_t v29 = a2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v19, v29, (uint64_t *)&unk_10169B500);
  swift_endAccess();
  sub_100522F00((uint64_t)v22, (uint64_t *)&unk_10169B500);
  sub_100D77DFC((uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 1, v28) == 1) {
    return sub_100522F00((uint64_t)v15, (uint64_t *)&unk_10169B500);
  }
  uint64_t v31 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v33, v15, v28);
  sub_100D78E94(v31, v34 & 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  sub_100D834D0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v31, v28);
}

uint64_t sub_100D78E28(void *a1, uint64_t a2, int a3)
{
  sub_100D78A8C(a1, a2, a3);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete) = 1;
    sub_100D72CD0();
  }
  return 0;
}

uint64_t sub_100D78E94(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  int v28 = a2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v27[1] = a1;
  v11(v10, a1, v6);
  uint64_t v12 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_pendingBoardIdentifiersToRefresh);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = qword_10166FA58;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v15 = (void *)static OS_os_log.crlFolderUI;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  v27[2] = v4;
  id v17 = v15;
  uint64_t v18 = sub_100DD4C48();
  uint64_t v20 = v19;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v18;
  *(void *)(inited + 40) = v20;
  uint64_t v21 = *(void *)(v13 + 16);
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  *(void *)(inited + 72) = v21;
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Folder view (%@) updating snapshot with %d board identifiers to refresh", 71, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (*(void *)(v13 + 16))
  {
    *uint64_t v12 = (uint64_t)&_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    uint64_t v23 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    int v24 = sub_100DB42A8(v23, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v24);
  }
  swift_bridgeObjectRelease();
  id v25 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_100D791B0()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v6);
  uint64_t v8 = &v17[-v7];
  id v9 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v10 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v11(v8, v0);
  uint64_t v12 = sub_100CDD514(v10);
  swift_bridgeObjectRelease();
  id v13 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"reloadItems(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 623, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"reloadItems(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 623);
    [self logFullBacktrace];
  }
  uint64_t v14 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100DB4080(v14, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v15);
  swift_bridgeObjectRelease();
  sub_100D78E94((uint64_t)v4, 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  v11(v4, v0);
  return swift_bridgeObjectRelease();
}

id sub_100D79494(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (static Selector.== infix(_:_:)())
  {
    id v9 = [self sharedApplication];
    id v10 = [v9 delegate];

    if (v10)
    {
      type metadata accessor for CRLiOSAppDelegate();
      uint64_t v11 = *(void **)(swift_dynamicCastClassUnconditional()
                     + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      if (v11)
      {
        id v12 = v11;
        swift_unknownObjectRelease();
        unsigned __int8 v13 = [v12 canUndo];
LABEL_9:
        LOBYTE(a1) = v13;

        return (id)(a1 & 1);
      }
    }
    else
    {
      __break(1u);
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
    swift_unknownObjectRelease();
    __break(1u);
    goto LABEL_29;
  }
  if (static Selector.== infix(_:_:)())
  {
    id v14 = [self sharedApplication];
    id v15 = [v14 delegate];

    if (v15)
    {
      type metadata accessor for CRLiOSAppDelegate();
      uint64_t v16 = *(void **)(swift_dynamicCastClassUnconditional()
                     + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      if (v16)
      {
        id v12 = v16;
        swift_unknownObjectRelease();
        unsigned __int8 v13 = [v12 canRedo];
        goto LABEL_9;
      }
      goto LABEL_30;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
    id result = (id)swift_unknownObjectRelease();
    __break(1u);
    return result;
  }
  if (static Selector.== infix(_:_:)())
  {
    id v18 = [v2 navigationItem];
    a1 = (uint64_t)[v18 searchController];

    if (!a1) {
      return (id)(a1 & 1);
    }
    id v19 = [(id)a1 searchBar];

    unsigned __int8 v20 = [v19 isFirstResponder];
    if ((v20 & 1) == 0)
    {
      LOBYTE(a1) = [v2 isEditing] ^ 1;
      return (id)(a1 & 1);
    }
LABEL_17:
    LOBYTE(a1) = 0;
    return (id)(a1 & 1);
  }
  if (static Selector.== infix(_:_:)())
  {
    id v21 = [v2 presentedViewController];

    if (!v21)
    {
      a1 = (uint64_t)v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
      uint64_t v30 = sub_1005057FC(&qword_101670F30);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v8, 5, 5, v30);
      LOBYTE(a1) = sub_100DDC744(a1, (uint64_t)v8);
      sub_100DBFA10((uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      LOBYTE(a1) = a1 ^ 1;
      return (id)(a1 & 1);
    }
    goto LABEL_17;
  }
  uint64_t v22 = (NSString *)String._bridgeToObjectiveC()();
  NSSelectorFromString(v22);

  if ((static Selector.== infix(_:_:)() & 1) == 0)
  {
    sub_100522E9C(a2, (uint64_t)v33, &qword_101672BF0);
    uint64_t v23 = v34;
    if (v34)
    {
      int v24 = sub_10050F848(v33, v34);
      uint64_t v25 = *(void *)(v23 - 8);
      __n128 v26 = __chkstk_darwin(v24, v24);
      int v28 = (char *)&v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v25 + 16))(v28, v26);
      uint64_t v29 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v23);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v33);
    }
    else
    {
      uint64_t v29 = 0;
    }
    uint64_t v31 = (objc_class *)type metadata accessor for CRLiOSFolderGridViewController();
    v32.receiver = v2;
    v32.super_class = v31;
    LOBYTE(a1) = [super canPerformAction:a1 withSender:v29];
    swift_unknownObjectRelease();
    return (id)(a1 & 1);
  }

  return sub_100D79DE8();
}

void sub_100D79C48()
{
  if (([v0 isEditing] & 1) == 0)
  {
    id v1 = [v0 navigationItem];
    id v2 = [v1 searchController];

    if (v2)
    {
      [v2 setActive:1];
    }
    id v3 = [v0 navigationItem];
    id v4 = [v3 searchController];

    if (v4)
    {
      id v5 = [v4 searchBar];

      [v5 becomeFirstResponder];
    }
  }
}

id sub_100D79DE8()
{
  id result = [v0 collectionView];
  if (result)
  {
    id v2 = result;
    id v3 = [result contextMenuInteraction];

    if (!v3) {
      return 0;
    }
    id v4 = [v0 collectionView];
    [v3 locationInView:v4];
    CGFloat v6 = v5;
    CGFloat v8 = v7;

    id result = [v0 collectionView];
    if (result)
    {
      id v9 = result;
      [result bounds];
      CGFloat v11 = v10;
      CGFloat v13 = v12;
      CGFloat v15 = v14;
      CGFloat v17 = v16;

      v19.origin.x = v11;
      v19.origin.CGFloat y = v13;
      v19.size.double width = v15;
      v19.size.height = v17;
      v18.x = v6;
      v18.CGFloat y = v8;
      return (id)CGRectContainsPoint(v19, v18);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100D79F38(void *a1, uint64_t a2, uint64_t a3, SEL *a4, SEL *a5)
{
  if (a3)
  {
    id v8 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    id v9 = a1;
  }
  sub_100DB9C78((uint64_t)v11, a4, a5);

  return sub_100522F00((uint64_t)v11, &qword_101672BF0);
}

void sub_100D79FC8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10169B500);
  __chkstk_darwin(v4 - 8, v5);
  double v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  double v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed;
  LOBYTE(v11) = *(unsigned char *)(a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed);
  uint64_t v14 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle;
  *(unsigned char *)(a1
           + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle) = 1;
  *(unsigned char *)(a1 + v13) = (v11 & 1) == 0;
  sub_100539978();
  *(unsigned char *)(a1 + v14) = 0;
  uint64_t v15 = a1 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier;
  unsigned int v16 = *(unsigned __int8 *)(a1
                           + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                           + 24);
  if (v16 >= 0xFE)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"sectionHeaderDidTapCollapseButton(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 714, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"sectionHeaderDidTapCollapseButton(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 714);
    return;
  }
  uint64_t v40 = v9;
  CGFloat v17 = *(void **)v15;
  CGPoint v18 = *(void **)(v15 + 8);
  uint64_t v19 = *(void *)(v15 + 16);
  BOOL v20 = *(unsigned char *)(a1 + v13) == 1;
  unsigned __int8 v42 = v18;
  char v43 = v17;
  uint64_t v41 = v19;
  if (v20)
  {
    swift_beginAccess();
    sub_10053BB6C(v17, v18, v19, v16);
    sub_10053BB6C(v17, v18, v19, v16);
    sub_100CB750C((uint64_t)v44, v17, (unint64_t)v18, v19, v16);
    id v21 = (void *)v44[0];
    uint64_t v22 = (void *)v44[1];
    uint64_t v23 = v44[2];
    unsigned __int8 v24 = v45;
    swift_endAccess();
    sub_10053BBA0(v21, v22, v23, v24);
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState) == 1)
    {
LABEL_8:
      id v32 = [self standardUserDefaults];
      sub_10101B2C0();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      sub_100DD54C4();
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v32 setObject:isa forKey:v34];
    }
  }
  else
  {
    swift_beginAccess();
    sub_10053BB6C(v17, v18, v19, v16);
    uint64_t v25 = (void *)sub_100D16980((unint64_t)v17, (unint64_t)v18, v19, v16);
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    unsigned __int8 v31 = v30;
    swift_endAccess();
    sub_10053BB8C(v25, v27, v29, v31);
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState) == 1) {
      goto LABEL_8;
    }
  }
  sub_100D834D0();
  uint64_t v36 = v42;
  id v35 = v43;
  uint64_t v37 = v41;
  sub_100D77DFC((uint64_t)v7);
  uint64_t v38 = v40;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v7, 1, v8) == 1)
  {
    sub_100522F00((uint64_t)v7, (uint64_t *)&unk_10169B500);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v12, v7, v8);
    sub_100D78E94((uint64_t)v12, 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
    sub_100D834D0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v8);
  }
  sub_10053BB8C(v35, v36, v37, v16);
}

void sub_100D7A498()
{
  uint64_t v1 = v0;
  id v2 = sub_100D7A804();
  if (!v2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateUserActivities()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 733, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateUserActivities()", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 733);
    return;
  }
  id v3 = v2;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF50;
  *(void *)(inited + 32) = sub_100A783E0();
  *(void *)(inited + 40) = sub_100A783F0();
  specialized Array._endMutation()();
  if ((inited & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      return;
    }
    id v5 = *(id *)(inited + 32);
  }
  uint64_t v6 = v5;
  [v0 loadViewIfNeeded];
  sub_1005057FC(&qword_101677430);
  uint64_t v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_10117E810;
  sub_100DD54C4();
  AnyHashable.init<A>(_:)();
  unint64_t v8 = sub_10101B2C0();
  *(void *)(v7 + 96) = sub_1005057FC(&qword_10168E270);
  *(void *)(v7 + 72) = v8;
  sub_100A393A8(v7);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 addUserInfoEntriesFromDictionary:isa];

  [v6 setNeedsSave:1];
  if ((inited & 0xC000000000000001) != 0) {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v10 = *(id *)(inited + 40);
  }
  uint64_t v11 = v10;
  [v1 loadViewIfNeeded];
  sub_1005057FC(&qword_101677430);
  uint64_t v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117E810;
  sub_100DD54C4();
  AnyHashable.init<A>(_:)();
  unint64_t v13 = sub_10101B2C0();
  *(void *)(v12 + 96) = sub_1005057FC(&qword_10168E270);
  *(void *)(v12 + 72) = v13;
  sub_100A393A8(v12);
  Class v14 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 addUserInfoEntriesFromDictionary:v14];

  [v11 setNeedsSave:1];
  swift_bridgeObjectRelease();
}

id sub_100D7A804()
{
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v2 = result;
  id v3 = [result window];

  if (v3)
  {
    id v4 = [v3 windowScene];

    if (v4)
    {
      id v5 = [v4 delegate];

      if (v5)
      {
        type metadata accessor for CRLiOSSceneDelegate();
        id result = (id)swift_dynamicCastClass();
        if (result) {
          return result;
        }
        swift_unknownObjectRelease();
      }
    }
  }
  return 0;
}

void sub_100D7A8D0(void *a1)
{
  id v2 = v1;
  id v4 = [a1 userInfo];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    [v2 loadViewIfNeeded];
    unint64_t v11 = sub_100DD54C4();
    uint64_t v12 = v7;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v6 + 16) && (unint64_t v8 = sub_10095647C((uint64_t)v13), (v9 & 1) != 0))
    {
      sub_100522D7C(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v14);
    }
    else
    {
      long long v14 = 0u;
      long long v15 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10050BFE0((uint64_t)v13);
    if (*((void *)&v15 + 1))
    {
      sub_1005057FC(&qword_10168E270);
      if (swift_dynamicCast())
      {
        sub_10101B518(v11);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_100522F00((uint64_t)&v14, &qword_101672BF0);
    }
    v10.receiver = v2;
    v10.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController();
    [super restoreUserActivityState:a1];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"restoreUserActivityState(_:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 759, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"restoreUserActivityState(_:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 759);
  }
}

id sub_100D7AB34()
{
  return sub_100D7AB54(&OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___layoutBarButtonItem, (uint64_t (*)(void))sub_100D7CF6C);
}

id sub_100D7AB54(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

objc_class *sub_100D7ABB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard);
  if (v7)
  {
    id v8 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard);
  }
  else
  {
    id v9 = [self mainBundle];
    NSString v10 = String._bridgeToObjectiveC()();
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v9 localizedStringForKey:v10 value:v11 table:0];

    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    long long v15 = v14;

    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [self systemImageNamed:v16];

    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    CGPoint v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    id v19 = v17;
    id v20 = v18;
    v21.value._countAndFlagsBits = v13;
    v21.value._object = v15;
    v29.value.super.Class isa = (Class)v17;
    v29.is_nil = (char)v18;
    v30.value.super.super.Class isa = 0;
    v22.super.super.Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v21, v29, v30, v31).super.super.isa;
    sub_100DBF940(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v23 = sub_1005057FC(&qword_101670F30);
    int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v5, 5, v23);
    if (v24 != 5) {
      sub_100DBFA10((uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    }
    [(objc_class *)v22.super.super.isa setEnabled:v24 != 5];

    uint64_t v25 = *(void **)(v1 + v6);
    *(UIBarButtonItem *)(v1 + v6) = v22;
    id v8 = v22.super.super.isa;

    uint64_t v7 = 0;
  }
  id v26 = v7;
  return v8;
}

objc_class *sub_100D7AEF0()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone);
  }
  else
  {
    uint64_t v4 = v0;
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    char v5 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    uint64_t v6 = *(void *)(v4
                   + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_defaultTitleForToolbarItemToSelectAllOrNone);
    uint64_t v7 = *(void **)(v4
                  + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_defaultTitleForToolbarItemToSelectAllOrNone
                  + 8);
    swift_bridgeObjectRetain();
    v8.value._countAndFlagsBits = v6;
    v8.value._object = v7;
    v13.value.super.Class isa = 0;
    v13.is_nil = v5;
    v14.value.super.super.Class isa = 0;
    v9.super.super.Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v8, v13, v14, v15).super.super.isa;
    NSString v10 = *(void **)(v4 + v1);
    *(UIBarButtonItem *)(v4 + v1) = v9;
    uint64_t v3 = v9.super.super.isa;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

objc_class *sub_100D7B034()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v11 = v10;

    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    LOBYTE(v5) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v18.is_nil = sub_10050BF48(0, (unint64_t *)&qword_101674470);
    v12.value._countAndFlagsBits = v9;
    v12.value._object = v11;
    v17.value.super.Class isa = 0;
    v17.is_nil = (char)v5;
    v18.value.super.super.Class isa = 0;
    v13.super.super.Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v12, v17, v18, v19).super.super.isa;
    UIAction_optional v14 = *(void **)(v4 + v1);
    *(UIBarButtonItem *)(v4 + v1) = v13;
    uint64_t v3 = v13.super.super.isa;

    uint64_t v2 = 0;
  }
  id v15 = v2;
  return v3;
}

void sub_100D7B20C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong setEditing:[Strong isEditing] ^ 1 animated:1];
    id v2 = [v1 collectionView];
    if (v2)
    {
      uint64_t v3 = v2;
      [v2 selectItemAtIndexPath:0 animated:0 scrollPosition:1];
    }
    else
    {
      __break(1u);
    }
  }
}

Class sub_100D7B2C0()
{
  uint64_t v1 = v0;
  Class result = (Class)[v0 collectionView];
  if (result)
  {
    Class v3 = result;
    uint64_t v4 = sub_1007FDEB4();

    uint64_t v5 = *((void *)v4 + 2);
    swift_bridgeObjectRelease();
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    BOOL v21 = v5 == 0;
    NSString v7 = (objc_class *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    if (objc_msgSend(v1, "isEditing", 0, v21, 0, sub_100DBC70C, v6))
    {
      v24.value.super.super.Class isa = (Class)sub_10050BF48(0, (unint64_t *)&qword_101674470);
      v22.value.super.super.Class isa = v7;
      v22.is_nil = 0;
      return UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v22, v24).super.super.isa;
    }
    id v8 = [self mainBundle];
    NSString v9 = String._bridgeToObjectiveC()();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    UIAction_optional v14 = v13;

    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    id v15 = v7;
    v16.value._countAndFlagsBits = v12;
    v16.value._object = v14;
    v23.value.super.Class isa = 0;
    v23.is_nil = (char)v7;
    v25.value.super.super.Class isa = 0;
    v17.super.super.Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v16, v23, v25, v26).super.super.isa;
    Class result = (Class)[v1 collectionView];
    if (result)
    {
      Class v18 = result;
      UIMenu_optional v19 = sub_1007FDEB4();

      uint64_t v20 = *((void *)v19 + 2);
      swift_bridgeObjectRelease();
      [(objc_class *)v17.super.super.isa setEnabled:v20 != 0];

      return v17.super.super.isa;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100D7B548()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100D7B59C();
  }
}

void sub_100D7B59C()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v6 - 8, v7);
  NSString v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v45 = v0;
  id v10 = [v0 collectionView];
  if (!v10) {
    goto LABEL_46;
  }
  id v11 = v10;
  uint64_t v12 = sub_1007FDEB4();

  if (!*((void *)v12 + 2))
  {
    swift_bridgeObjectRelease();
    return;
  }
  id v13 = [v45 collectionView];
  if (!v13) {
    goto LABEL_47;
  }
  UIAction_optional v14 = v13;
  id v15 = [v13 indexPathsForSelectedItems];

  if (v15)
  {
    Swift::String_optional v16 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    Swift::String_optional v16 = _swiftEmptyArrayStorage;
  }
  unint64_t v17 = *((void *)v16 + 2);
  unint64_t v18 = *((void *)v12 + 2);
  if (v17 < v18)
  {
    uint64_t v19 = sub_100CDE6E4((uint64_t)v12);
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_100CDE6E4((uint64_t)v16);
    swift_bridgeObjectRelease();
    if (*(void *)(v20 + 16) <= *(void *)(v19 + 16) >> 3)
    {
      uint64_t v46 = (void *)v19;
      sub_10102A334(v20);
      swift_bridgeObjectRelease();
      BOOL v21 = v46;
    }
    else
    {
      BOOL v21 = sub_10102DDE8(v20, v19);
      swift_bridgeObjectRelease();
    }
    UIAction_optional v25 = v5;
    int64_t v26 = 0;
    uint64_t v27 = v21[7];
    uint64_t v39 = (char *)(v21 + 7);
    uint64_t v28 = 1 << *((unsigned char *)v21 + 32);
    uint64_t v29 = -1;
    if (v28 < 64) {
      uint64_t v29 = ~(-1 << v28);
    }
    unint64_t v30 = v29 & v27;
    uint64_t v43 = v2 + 16;
    uint64_t v44 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    uint64_t v42 = v2 + 48;
    int64_t v40 = (unint64_t)(v28 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, char *, uint64_t))(v2 + 32);
    if ((v29 & v27) == 0) {
      goto LABEL_21;
    }
LABEL_20:
    unint64_t v31 = __clz(__rbit64(v30));
    v30 &= v30 - 1;
    for (unint64_t i = v31 | (v26 << 6); ; unint64_t i = __clz(__rbit64(v34)) + (v26 << 6))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v9, v21[6] + *(void *)(v2 + 72) * i, v1);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v9, 0, 1, v1);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1) {
        goto LABEL_41;
      }
      (*v41)(v25, v9, v1);
      id v36 = [v45 collectionView];
      if (!v36) {
        goto LABEL_45;
      }
      uint64_t v37 = v36;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v37 selectItemAtIndexPath:isa animated:0 scrollPosition:0];

      (*(void (**)(char *, uint64_t))(v2 + 8))(v25, v1);
      if (v30) {
        goto LABEL_20;
      }
LABEL_21:
      int64_t v33 = v26 + 1;
      if (__OFADD__(v26, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      if (v33 >= v40) {
        goto LABEL_40;
      }
      unint64_t v34 = *(void *)&v39[8 * v33];
      ++v26;
      if (!v34)
      {
        int64_t v26 = v33 + 1;
        if (v33 + 1 >= v40) {
          goto LABEL_40;
        }
        unint64_t v34 = *(void *)&v39[8 * v26];
        if (!v34)
        {
          int64_t v26 = v33 + 2;
          if (v33 + 2 >= v40) {
            goto LABEL_40;
          }
          unint64_t v34 = *(void *)&v39[8 * v26];
          if (!v34)
          {
            int64_t v35 = v33 + 3;
            if (v35 >= v40)
            {
LABEL_40:
              (*v44)(v9, 1, 1, v1);
LABEL_41:
              uint64_t v24 = swift_release();
              goto LABEL_42;
            }
            unint64_t v34 = *(void *)&v39[8 * v35];
            if (!v34)
            {
              while (1)
              {
                int64_t v26 = v35 + 1;
                if (__OFADD__(v35, 1)) {
                  break;
                }
                if (v26 >= v40) {
                  goto LABEL_40;
                }
                unint64_t v34 = *(void *)&v39[8 * v26];
                ++v35;
                if (v34) {
                  goto LABEL_34;
                }
              }
LABEL_44:
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
              return;
            }
            int64_t v26 = v35;
          }
        }
      }
LABEL_34:
      unint64_t v30 = (v34 - 1) & v34;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17 == v18)
  {
    id v22 = [v45 collectionView];
    if (!v22) {
      goto LABEL_48;
    }
    UIImage_optional v23 = v22;
    [v22 selectItemAtIndexPath:0 animated:0 scrollPosition:0];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectAllOrNone()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2359, (uint64_t)"There are more IndexPaths in the current selection than its collection view exists!", 83, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectAllOrNone()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2359);
  }
LABEL_42:
  sub_100D7D7D8(v24);
  sub_100D7E954();
}

void sub_100D7BB60()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100A85B40(v1);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_100D7BBE0(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100DD85D8(a1);
  uint64_t v8 = sub_100CDDF48((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (*(void *)(v8 + 16))
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    id v11 = v1;
    uint64_t v12 = static MainActor.shared.getter();
    id v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v8;
    v13[5] = v10;
    v13[6] = v11;
    swift_release();
    sub_1005912D0((uint64_t)v6, (uint64_t)&unk_10169B598, (uint64_t)v13);
    return swift_release();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void sub_100D7BD90()
{
  uint64_t v0 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    id v6 = [Strong collectionView];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v6 indexPathsForSelectedItems];

      if (v8)
      {
        type metadata accessor for IndexPath();
        uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        id v10 = v5;
        id v11 = sub_100DB2190(v9, (uint64_t)v10);

        swift_bridgeObjectRelease();
      }
      else
      {
        id v11 = _swiftEmptyArrayStorage;
      }
      uint64_t v12 = *((void *)v11 + 2);
      swift_bridgeObjectRelease();
      if (!v12) {
        goto LABEL_15;
      }
      id v13 = [v5 collectionView];
      if (v13)
      {
        UIAction_optional v14 = v13;
        id v15 = [v13 indexPathsForSelectedItems];

        if (v15)
        {
          type metadata accessor for IndexPath();
          uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          id v17 = v5;
          unint64_t v18 = sub_100DB2190(v16, (uint64_t)v17);

          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v18 = _swiftEmptyArrayStorage;
        }
        uint64_t v19 = (uint64_t)v5 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
        uint64_t v20 = sub_1005057FC(&qword_101670F30);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 5, 5, v20);
        LOBYTE(v19) = sub_100DDC744(v19, (uint64_t)v3);
        sub_100DBFA10((uint64_t)v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
        if (v19) {
          sub_100D906F8((uint64_t)v18);
        }
        else {
          sub_100D9124C((uint64_t)v18, 0, 0);
        }
        swift_bridgeObjectRelease();
        [v5 setEditing:0 animated:1];
LABEL_15:

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100D7C020(uint64_t a1, uint64_t a2, void (*a3)(double *))
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    id v6 = [Strong collectionView];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v6 indexPathsForSelectedItems];

      if (v8)
      {
        type metadata accessor for IndexPath();
        uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        id v10 = v5;
        id v11 = sub_100DB2190(v9, (uint64_t)v10);

        swift_bridgeObjectRelease();
      }
      else
      {
        id v11 = _swiftEmptyArrayStorage;
      }
      uint64_t v12 = *((void *)v11 + 2);
      swift_bridgeObjectRelease();
      if (!v12) {
        goto LABEL_12;
      }
      id v13 = [v5 collectionView];
      if (v13)
      {
        UIAction_optional v14 = v13;
        id v15 = [v13 indexPathsForSelectedItems];

        if (v15)
        {
          type metadata accessor for IndexPath();
          uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          id v17 = v5;
          unint64_t v18 = sub_100DB2190(v16, (uint64_t)v17);

          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v18 = _swiftEmptyArrayStorage;
        }
        a3(v18);
        swift_bridgeObjectRelease();
        [v5 setEditing:0 animated:1];
LABEL_12:

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_100D7C1E0(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = sub_100DD85D8(a1);
  uint64_t v7 = sub_100CDDF48((uint64_t)v6);
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 16))
  {
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v10 = static MainActor.shared.getter();
    id v11 = (void *)swift_allocObject();
    _OWORD v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v7;
    v11[5] = v9;
    swift_release();
    sub_1006D9104((uint64_t)v5, (uint64_t)&unk_10169B520, (uint64_t)v11);
    return swift_release();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void sub_100D7C380(void (*a1)(double *), uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    a1(_swiftEmptyArrayStorage);
    return;
  }
  char v72 = a4;
  uint64_t v70 = (void (*)(unint64_t))a1;
  uint64_t v74 = (unsigned __int8 *)Strong;
  uint64_t v7 = self;
  id v8 = [v7 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  uint64_t v13 = self;
  id v14 = [v13 systemImageNamed:v12];

  uint64_t v15 = v74[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout];
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v16 = swift_allocObject();
  swift_beginAccess();
  id v17 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  id v73 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v18 = [v7 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  id v66 = v13;
  id v23 = [v13 systemImageNamed:v22];

  swift_allocObject();
  swift_beginAccess();
  uint64_t v24 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  UIAction_optional v25 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, &qword_101673A80);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10117DF50;
  *(void *)(v26 + 32) = v73;
  *(void *)(v26 + 40) = v25;
  UIMenuElementSize preferredElementSize = v26;
  specialized Array._endMutation()();
  id v68 = v73;
  id v69 = v25;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v79.value.super.Class isa = 0;
  v79.is_nil = 0;
  v28.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v27, (Swift::String_optional)0, v79, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, 0).super.super.isa;
  uint64_t v29 = sub_100DD7FC4();
  unint64_t v30 = (char *)v29[2];
  if (v30)
  {
    unint64_t v31 = (unsigned __int8 *)(v29 + 4);
    v74;
    id v32 = &selRef_lineFragmentClosestToPoint_knobTag_;
    do
    {
      unsigned __int8 v33 = *v31++;
      sub_100D7D41C(v33);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      --v30;
    }
    while (v30);
  }
  else
  {
    unint64_t v34 = v74;
    id v32 = &selRef_lineFragmentClosestToPoint_knobTag_;
  }

  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v80.value.super.Class isa = 0;
  v80.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v80, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, children).super.super.isa;
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_10117DF50;
  *(UIMenu *)(v37 + 32) = v28;
  *(void *)(v37 + 40) = isa;
  uint64_t v76 = v37;
  specialized Array._endMutation()();
  unint64_t v78 = v76;
  uint64_t v67 = v28.super.super.isa;
  unint64_t v71 = isa;
  if ((v72 & 1) == 0) {
    goto LABEL_15;
  }
  id v38 = [v7 v32[111]];
  NSString v39 = String._bridgeToObjectiveC()();
  NSString v40 = String._bridgeToObjectiveC()();
  id v41 = [v38 localizedStringForKey:v39 value:v40 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = [v66 systemImageNamed:v42];

  id v44 = [v74 collectionView];
  if (!v44) {
    goto LABEL_22;
  }
  id v45 = v44;
  uint64_t v46 = sub_1007FDEB4();

  uint64_t v47 = *((void *)v46 + 2);
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  int64_t v48 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_101177E70;
  *(void *)(v49 + 32) = v48;
  UIMenuElementSize v77 = v49;
  specialized Array._endMutation()();
  id v50 = v48;
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  v81.value.super.Class isa = 0;
  v81.is_nil = 0;
  v52.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v51, (Swift::String_optional)0, v81, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v77, (Swift::OpaquePointer)(v47 == 0)).super.super.isa;
  Class v53 = v52.super.super.isa;
  if (v78 >> 62)
  {
    uint64_t v63 = v52.super.super.isa;
    swift_bridgeObjectRetain();
    uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v64 & 0x8000000000000000) == 0) {
      goto LABEL_14;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  uint64_t v54 = v52.super.super.isa;
LABEL_14:
  sub_100F49780(0, 0, (uint64_t)v53);

LABEL_15:
  if (v74[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions])
  {
    UIMenuElementSize v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_101177E70;
    id v56 = [v7 v32[111]];
    NSString v57 = String._bridgeToObjectiveC()();
    NSString v58 = String._bridgeToObjectiveC()();
    id v59 = [v56 localizedStringForKey:v57 value:v58 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_allocObject();
    swift_beginAccess();
    unint64_t v60 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    *(void *)(v55 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._endMutation()();
    v61._countAndFlagsBits = 0;
    v61._object = (void *)0xE000000000000000;
    v82.value.super.Class isa = 0;
    v82.is_nil = 0;
    unint64_t v62 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v61, (Swift::String_optional)0, v82, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v55, 0).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    v70(v78);

    swift_bridgeObjectRelease();
  }
  else
  {
    v70(v78);

    swift_bridgeObjectRelease();
  }
}

void sub_100D7CE20()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    char v2 = *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
    *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout) = 1;
    if ((v2 & 1) == 0) {
      sub_100D73158();
    }
  }
}

void sub_100D7CE8C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    int v2 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
    *(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout) = 0;
    if (v2 == 1) {
      sub_100D73158();
    }
  }
}

void sub_100D7CEF8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100D73714(*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions), *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 1), (*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2) & 1) == 0);
  }
}

objc_class *sub_100D7CF6C()
{
  sub_10050BF48(0, &qword_101673A80);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  UIMenuElementSize v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_101177E70;
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  UIMenuElementSize v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = 0;
  aBlock[4] = (UIMenuElementSize)sub_100DBFBF4;
  void aBlock[5] = v3;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = *(UIMenuElementSize *)"";
  void aBlock[2] = (UIMenuElementSize)sub_100594810;
  void aBlock[3] = (UIMenuElementSize)&unk_10152C0B8;
  uint64_t v4 = _Block_copy(aBlock);
  swift_release();
  id v5 = [v1 elementWithUncachedProvider:v4];
  _Block_release(v4);
  *(void *)(v0 + 32) = v5;
  aBlock[0] = v0;
  specialized Array._endMutation()();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v21.value.super.Class isa = 0;
  v21.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v21, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v18).super.super.isa;
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  id v8 = isa;
  v20.value.super.Class isa = 0;
  v20.is_nil = 0;
  v22.value.super.super.Class isa = isa;
  Class v9 = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v20, v22, v23).super.super.isa;
  NSString v10 = self;
  id v11 = v9;
  id v12 = [v10 mainBundle];
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v11 setAccessibilityLabel:v16];

  sub_100DB93F4(v11);
  sub_100D7D27C();

  return v11;
}

void sub_100D7D27C()
{
  uint64_t v1 = v0;
  sub_10050BF48(0, &qword_101673A80);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  UIMenuElementSize v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_101177E70;
  UIMenuElementSize v3 = self;
  UIMenuElementSize v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = (UIMenuElementSize)sub_100DBC720;
  void aBlock[5] = v4;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = *(UIMenuElementSize *)"";
  void aBlock[2] = (UIMenuElementSize)sub_100594810;
  void aBlock[3] = (UIMenuElementSize)&unk_10152C108;
  id v5 = _Block_copy(aBlock);
  swift_release();
  id v6 = [v3 elementWithUncachedProvider:v5];
  _Block_release(v5);
  *(void *)(v2 + 32) = v6;
  aBlock[0] = v2;
  specialized Array._endMutation()();
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v11.value.super.Class isa = 0;
  v11.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v7, (Swift::String_optional)0, v11, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v9).super.super.isa;
  [v1 setMenuRepresentation:isa];
}

void *sub_100D7D41C(unsigned __int8 a1)
{
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions);
  sub_100B80E8C();
  if (v3 == a1)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [self systemImageNamed:v4];

    id v6 = [self mainBundle];
    NSString v7 = String._bridgeToObjectiveC()();
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v11 = 0;
    id v5 = 0;
  }
  BOOL v12 = v3 == a1;
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(unsigned char *)(v14 + 24) = a1;
  id v15 = v5;
  NSString v16 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v17 = v16;
  if (v11)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  [v16 setAccessibilityValue:v18];

  return v16;
}

void sub_100D7D754(uint64_t a1, uint64_t a2, BOOL a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    sub_100D73714(a3, (*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 1) ^ (*(unsigned char *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions) == a3)) & 1, *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2));
  }
}

void sub_100D7D7D8()
{
  uint64_t v1 = v0;
  id v2 = [v0 traitCollection];
  id v3 = [v2 horizontalSizeClass];

  id v4 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
  if (![v1 isEditing])
  {
    id v13 = [v1 navigationItem];
    id v14 = [v13 searchController];

    if (v14)
    {
      id v15 = [v14 searchBar];

      [v15 _setEnabled:1];
    }
    sub_100DD4C48();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setTitle:v16];

    if (v3 == (id)1)
    {
      id v17 = self;
      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v18;
      *(unsigned char *)(v19 + 24) = 1;
      aBlock[4] = sub_100DBC6E8;
      void aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      void aBlock[2] = sub_100594810;
      void aBlock[3] = &unk_10152C040;
      UIImage_optional v20 = _Block_copy(aBlock);
      swift_release();
      id v12 = [v17 elementWithUncachedProvider:v20];
      _Block_release(v20);
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v21 = swift_allocObject();
      long long v38 = xmmword_101177E70;
      *(_OWORD *)(v21 + 16) = xmmword_101177E70;
      sub_10050BF48(0, &qword_1016838E0);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_101177E70;
      *(void *)(v22 + 32) = sub_100D7ABB4();
      aBlock[0] = v22;
      specialized Array._endMutation()();
      uint64_t v23 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
      swift_bridgeObjectRelease();
      *(void *)(v21 + 32) = v23;
      aBlock[0] = v21;
      specialized Array._endMutation()();
      goto LABEL_14;
    }
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_101177E70;
    sub_10050BF48(0, &qword_1016838E0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_10117FBD0;
    unint64_t v30 = sub_100D7ABB4();
    goto LABEL_12;
  }
  sub_100D7DEDC();
  if (v3 == (id)1)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v5 = swift_allocObject();
    long long v38 = xmmword_101177E70;
    *(_OWORD *)(v5 + 16) = xmmword_101177E70;
    sub_10050BF48(0, &qword_1016838E0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_101177E70;
    *(void *)(v6 + 32) = sub_100D7AEF0();
    specialized Array._endMutation()();
    uint64_t v7 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();
    *(void *)(v5 + 32) = v7;
    specialized Array._endMutation()();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_101177E70;
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10117FBD0;
    *(void *)(v9 + 32) = sub_100D7AB34();
    *(void *)(v9 + 40) = sub_100D7B2C0();
    *(void *)(v9 + 48) = v4;
    specialized Array._endMutation()();
    id v10 = v4;
    uint64_t v11 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();
    *(void *)(v8 + 32) = v11;
    aBlock[0] = v8;
    specialized Array._endMutation()();
    id v12 = 0;
LABEL_14:
    id v32 = [v1 navigationItem:v38 aBlock[0]];
    [v32 setAdditionalOverflowItems:v12];

    id v33 = [v1 navigationItem];
    sub_10050BF48(0, &qword_1016838E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v33 setLeadingItemGroups:isa];

    id v35 = [v1 navigationItem];
    Class v36 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v35 setTrailingItemGroups:v36];

    return;
  }
  id v24 = [v1 collectionView];
  if (v24)
  {
    UIAction_optional v25 = v24;
    uint64_t v26 = sub_1007FDEB4();

    uint64_t v27 = *((void *)v26 + 2);
    swift_bridgeObjectRelease();
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_101177E70;
    sub_10050BF48(0, &qword_1016838E0);
    if (!v27)
    {
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_10117DF50;
      *(void *)(v37 + 32) = sub_100D7AB34();
      *(void *)(v37 + 40) = sub_100D7B2C0();
      goto LABEL_13;
    }
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_10117FBD0;
    unint64_t v30 = sub_100D7AEF0();
LABEL_12:
    *(void *)(v29 + 32) = v30;
    *(void *)(v29 + 40) = sub_100D7AB34();
    *(void *)(v29 + 48) = sub_100D7B2C0();
LABEL_13:
    specialized Array._endMutation()();
    uint64_t v31 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();
    *(void *)(v28 + 32) = v31;
    aBlock[0] = v28;
    specialized Array._endMutation()();
    id v12 = 0;
    goto LABEL_14;
  }
  __break(1u);
}

void sub_100D7DEDC()
{
  uint64_t v1 = v0;
  id v2 = sub_100D7AEF0();
  id v3 = [v0 collectionView];
  if (!v3)
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
  id v4 = v3;
  uint64_t v5 = sub_1007FDEB4();

  uint64_t v6 = *((void *)v5 + 2);
  swift_bridgeObjectRelease();
  [(objc_class *)v2 setEnabled:v6 != 0];

  id v7 = [v1 navigationItem];
  id v8 = [v7 searchController];

  if (v8)
  {
    id v9 = [v8 searchBar];

    [v9 _setEnabled:0];
  }
  id v10 = [v1 navigationItem];
  id v11 = [v10 searchController];

  if (v11)
  {
    [v11 setActive:0];
  }
  id v12 = [v1 collectionView];
  if (!v12) {
    goto LABEL_18;
  }
  id v13 = v12;
  id v14 = [v12 indexPathsForSelectedItems];

  if (v14)
  {
    type metadata accessor for IndexPath();
    uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = *(void *)(v15 + 16);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
  }
  id v17 = [v1 collectionView];
  if (!v17) {
    goto LABEL_19;
  }
  uint64_t v18 = v17;
  sub_1007FDEB4();

  swift_bridgeObjectRelease();
  id v19 = [v1 traitCollection];
  id v20 = [v19 horizontalSizeClass];

  id v21 = [self mainBundle];
  if (v20 == (id)1)
  {
    unint64_t v29 = 0x8000000101289290;
    unint64_t v22 = 0x72616F4220756C25;
    unint64_t v23 = 0xEA00000000007364;
  }
  else
  {
    unint64_t v22 = 0xD000000000000013;
    unint64_t v29 = 0x8000000101289290;
    unint64_t v23 = 0x8000000101289270;
  }
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  unint64_t v25 = 0xD00000000000002FLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v22, (Swift::String_optional)0, (NSBundle)v21, v24, *(Swift::String *)(&v29 - 1));

  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10117E810;
  *(void *)(v26 + 56) = &type metadata for Int;
  *(void *)(v26 + 64) = &protocol witness table for Int;
  *(void *)(v26 + 32) = v16;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v27];

  unint64_t v30 = sub_100D7AEF0();
  NSString v28 = String._bridgeToObjectiveC()();
  [(objc_class *)v30 setTitle:v28];
}

void sub_100D7E2C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = self;
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = v12;

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  LOBYTE(v7) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  v14.value._countAndFlagsBits = v11;
  v14.value._object = v13;
  v47.value.super.Class isa = 0;
  v47.is_nil = (char)v7;
  v49.value.super.super.Class isa = 0;

  uint64_t v15 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  uint64_t v16 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 5, 5, v16);
  LOBYTE(v15) = sub_100DDC744(v15, (uint64_t)v5);
  sub_100DBFA10((uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10117FBD0;
  if (v15)
  {
    id v18 = [v6 mainBundle];
    NSString v19 = String._bridgeToObjectiveC()();
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v24 = v23;

    swift_allocObject();
    swift_unknownObjectWeakInit();
    v48.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v25.value._countAndFlagsBits = v22;
    v25.value._object = v24;
    v48.value.super.Class isa = 0;
    v50.value.super.super.Class isa = 0;
    *(UIBarButtonItem *)(v17 + 32) = UIBarButtonItem.init(title:image:primaryAction:menu:)(v25, v48, v50, v52);
    *(void *)(v17 + 40) = [self flexibleSpaceItem];
    id v26 = [v6 mainBundle];
    NSString v27 = String._bridgeToObjectiveC()();
    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = [v26 localizedStringForKey:v27 value:v28 table:0];

    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;

    swift_allocObject();
    swift_unknownObjectWeakInit();
    v33.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    uint64_t v36 = v30;
    uint64_t v37 = v32;
  }
  else
  {
    *(void *)(v17 + 32) = sub_100D7B034();
    *(void *)(v17 + 40) = [self flexibleSpaceItem];
    id v38 = [v6 mainBundle];
    NSString v39 = String._bridgeToObjectiveC()();
    NSString v40 = String._bridgeToObjectiveC()();
    id v41 = [v38 localizedStringForKey:v39 value:v40 table:0];

    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    swift_allocObject();
    swift_unknownObjectWeakInit();
    v33.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    uint64_t v36 = v42;
    uint64_t v37 = v44;
  }
  v33.value.super.Class isa = 0;
  v34.value.super.super.Class isa = 0;
  *(UIBarButtonItem *)(v17 + 48) = UIBarButtonItem.init(title:image:primaryAction:menu:)(*(Swift::String_optional *)&v36, v33, v34, v35);
  v46[1] = v17;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setToolbarItems:isa];
}

void sub_100D7E954()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardViewModelMetadata(0);
  id v7 = *(double **)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v57 = (uint64_t)&v53 - v13;
  id v14 = [v0 toolbarItems];
  if (!v14)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateEditModeToolbar()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1222, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateEditModeToolbar()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1222);
    return;
  }
  uint64_t v15 = v14;
  uint64_t v55 = v6;
  id v56 = v11;
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v17 = [v1 collectionView];
  if (!v17) {
    goto LABEL_39;
  }
  id v18 = v17;
  id v19 = [v17 indexPathsForSelectedItems];

  uint64_t v54 = v7;
  if (v19)
  {
    type metadata accessor for IndexPath();
    uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRelease();
    BOOL v22 = v21 == 0;
    if (v16 < 0) {
      goto LABEL_16;
    }
  }
  else
  {
    BOOL v22 = 1;
    if (v16 < 0) {
      goto LABEL_16;
    }
  }
  if ((v16 & 0x4000000000000000) == 0)
  {
    uint64_t v23 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v23) {
      goto LABEL_17;
    }
    goto LABEL_10;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  if (!v23) {
    goto LABEL_17;
  }
LABEL_10:
  if (v23 < 1)
  {
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  for (uint64_t i = 0; i != v23; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0) {
      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v25 = *(id *)(v16 + 8 * i + 32);
    }
    id v26 = v25;
    [v25 setEnabled:!v22];
  }
LABEL_17:
  swift_bridgeObjectRelease_n();
  if (v22) {
    return;
  }
  NSString v27 = v1;
  id v28 = [v1 collectionView];
  if (!v28)
  {
LABEL_40:
    __break(1u);
    return;
  }
  id v29 = v28;
  id v30 = [v28 indexPathsForSelectedItems];

  if (v30)
  {
    type metadata accessor for IndexPath();
    uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v32 = v1;
    UIImage_optional v33 = sub_100DB2190(v31, (uint64_t)v32);

    swift_bridgeObjectRelease();
  }
  else
  {
    UIImage_optional v33 = _swiftEmptyArrayStorage;
  }
  uint64_t v34 = v55;
  UIMenu_optional v35 = sub_100DD85D8((uint64_t)v33);
  swift_bridgeObjectRelease();
  uint64_t v36 = *((void *)v35 + 2);
  if (v36)
  {
    uint64_t v37 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
    uint64_t v38 = (uint64_t)v35 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    Class v53 = v27;
    NSString v39 = (void (**)(char *, void, uint64_t, uint64_t))(v54 + 7);
    uint64_t v40 = *(void *)(v37 + 72);
    uint64_t v54 = v35;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100ED7F04(v38, (uint64_t)v5);
      (*v39)(v5, 0, 1, v34);
      id v41 = v5;
      uint64_t v42 = (uint64_t)v5;
      uint64_t v43 = v57;
      sub_100DBF9A8(v42, v57, type metadata accessor for CRLBoardViewModelMetadata);
      char v44 = *(unsigned char *)(v43 + *(int *)(v34 + 40));
      uint64_t v45 = v43;
      uint64_t v46 = (uint64_t)v56;
      sub_100DBF940(v45, (uint64_t)v56, type metadata accessor for CRLBoardViewModelMetadata);
      if (v44) {
        break;
      }
      uint64_t v47 = v46 + *(int *)(v34 + 44);
      if (*(unsigned char *)(v47 + 8))
      {
        sub_100DBFA10(v46, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100DBFA10(v57, type metadata accessor for CRLBoardViewModelMetadata);
        uint64_t v5 = v41;
      }
      else
      {
        unint64_t v48 = *(void *)v47;
        unint64_t v49 = sub_1002094A4();
        sub_100DBFA10((uint64_t)v56, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100DBFA10(v57, type metadata accessor for CRLBoardViewModelMetadata);
        BOOL v50 = v48 >= v49;
        uint64_t v34 = v55;
        uint64_t v5 = v41;
        if (v50) {
          goto LABEL_35;
        }
      }
      v38 += v40;
      if (!--v36)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_33;
      }
    }
    sub_100DBFA10(v46, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100DBFA10(v57, type metadata accessor for CRLBoardViewModelMetadata);
LABEL_35:
    swift_bridgeObjectRelease_n();
    UIMenu_optional v51 = sub_100D7B034();
    char v52 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_33:
    UIMenu_optional v51 = sub_100D7B034();
    char v52 = sub_100D73D28();
  }
  [(objc_class *)v51 setEnabled:v52 & 1];
}

void sub_100D7EFC0()
{
  uint64_t v1 = v0;
  sub_100DD4C48();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setTitle:v2];

  id v3 = [v0 navigationItem];
  [v3 setStyle:0];

  sub_100D7D7D8();
  id v4 = [objc_allocWithZone((Class)UISearchController) init];
  [v4 setSearchResultsUpdater:v1];
  [v4 setDelegate:v1];
  id v5 = [v4 searchBar];
  id v6 = [self mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setLargeContentTitle:v10];

  id v11 = [v4 searchBar];
  [v11 setShowsLargeContentViewer:1];

  id v12 = [v1 navigationItem];
  [v12 setSearchController:v4];

  id v13 = [v1 navigationItem];
  [v13 setHidesSearchBarWhenScrolling:0];

  id v14 = [v1 navigationItem];
  [v14 setLargeTitleDisplayMode:1];

  id v15 = [v1 navigationController];
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = [v15 navigationBar];

    if (v17)
    {
      id v18 = v17;
      [v18 setPrefersLargeTitles:1];
      sub_1005057FC((uint64_t *)&unk_101687FB0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 32) = NSForegroundColorAttributeName;
      uint64_t v20 = NSForegroundColorAttributeName;
      id v21 = sub_100DD8A3C();
      *(void *)(inited + 64) = sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
      *(void *)(inited + 40) = v21;
      sub_100A38A68(inited);
      type metadata accessor for Key(0);
      sub_100DB3520((unint64_t *)&qword_1016837E0, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v18 setLargeTitleTextAttributes:isa];
    }
  }
  sub_100D7773C();
}

id sub_100D7F3B8(int a1, char a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  BOOL v50 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (objc_class *)type metadata accessor for CRLiOSFolderGridViewController();
  v55.receiver = v3;
  v55.super_class = v14;
  [super setEditing:a1 & 1 animated:a2 & 1];
  sub_100D7D7D8();
  id v15 = [v3 navigationController];
  if (v15)
  {
    uint64_t v16 = v15;
    [v15 setToolbarHidden:(a1 & 1) == 0];
  }
  sub_100D7E954();
  id result = [v3 collectionView];
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v18 = result;
  int v43 = a1;
  id v19 = sub_1007FDEB4();

  uint64_t v20 = *((void *)v19 + 2);
  uint64_t v42 = v19;
  if (v20)
  {
    BOOL v22 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    uint64_t v21 = v7 + 16;
    unint64_t v49 = v22;
    uint64_t v23 = (char *)v19 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
    uint64_t v45 = *(void *)(v21 + 56);
    uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 32);
    uint64_t v46 = (void (**)(char *, char *, uint64_t))(v21 + 16);
    char v44 = (void (**)(char *, uint64_t))(v21 - 8);
    swift_bridgeObjectRetain();
    unint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 40);
    unint64_t v41 = (v21 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    Swift::String v24 = v50;
    while (1)
    {
      v49(v13, v23, v6);
      id v25 = *v48;
      (*v48)(v13, 0, 1, v6);
      if ((*v47)(v13, 1, v6) == 1) {
        break;
      }
      uint64_t v26 = v21;
      (*v46)(v24, v13, v6);
      NSString v27 = v3;
      id result = [v3 collectionView:v41, v42];
      if (!result)
      {
        __break(1u);
        goto LABEL_30;
      }
      id v28 = result;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v30 = [v28 cellForItemAtIndexPath:isa];

      if (v30)
      {
        swift_getObjectType();
        uint64_t v31 = swift_conformsToProtocol2();
        if (v31) {
          uint64_t v32 = v31;
        }
        else {
          uint64_t v32 = 0;
        }
        if (v31) {
          id v33 = v30;
        }
        else {
          id v33 = 0;
        }
        if (v33)
        {
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(void, uint64_t, uint64_t))(v32 + 112))(v43 & 1, ObjectType, v32);
        }
      }
      Swift::String v24 = v50;
      (*v44)(v50, v6);
      v23 += v45;
      --v20;
      id v3 = v27;
      uint64_t v21 = v26;
      if (!v20)
      {
        v25(v13, 1, 1, v6);
        break;
      }
    }
  }
  else
  {
    UIMenu_optional v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v35(v13, 1, 1, v6);
  }
  swift_bridgeObjectRelease_n();
  if ((v43 & 1) == 0)
  {
    id result = [v3 collectionView];
    if (result)
    {
      uint64_t v38 = result;
      [result selectItemAtIndexPath:0 animated:0 scrollPosition:0];

      uint64_t v39 = (uint64_t)v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver;
      swift_beginAccess();
      sub_100522E9C(v39, (uint64_t)&v51, &qword_101672BF0);
      if (!*((void *)&v52 + 1)) {
        return (id)sub_100522F00((uint64_t)&v51, &qword_101672BF0);
      }
      sub_100575CE8(&v51, &v53);
      id v40 = [self defaultCenter];
      sub_10050F848(&v53, v54);
      [v40 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];
      swift_unknownObjectRelease();

      long long v51 = 0u;
      long long v52 = 0u;
      swift_beginAccess();
      sub_1006063BC((uint64_t)&v51, v39, &qword_101672BF0);
      swift_endAccess();
      return (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v53);
    }
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v54 = (uint64_t)&type metadata for () + 8;
  id v36 = [self defaultCenter];
  if (qword_10166F878 != -1) {
    swift_once();
  }
  [v36 addObserver:v3 selector:@selector(iCloudStatusDidChangeWithNotification:) name:qword_10171B790 object:0 v41];

  uint64_t v37 = (uint64_t)v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver;
  swift_beginAccess();
  sub_1006063BC((uint64_t)&v53, v37, &qword_101672BF0);
  return (id)swift_endAccess();
}

uint64_t sub_100D7FA34(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101676310);
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    type metadata accessor for IndexPath();
    sub_100DB3520(&qword_10169B640, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v21 = v20;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v19;
    *(void *)(inited + 40) = v21;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:shouldSelectItemAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1314, (uint64_t)"No item for index path: %@", 26, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"collectionView(_:shouldSelectItemAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1314);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    char v22 = 0;
  }
  else
  {
    sub_100DBF9A8((uint64_t)v11, (uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if ([a1 isEditing])
    {
      sub_100DBFA10((uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
      char v22 = 1;
    }
    else
    {
      uint64_t v23 = v2 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
      uint64_t v24 = sub_1005057FC(&qword_101670F30);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 5, 5, v24);
      char v25 = sub_100DDC744(v23, (uint64_t)v7);
      sub_100DBFA10((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      if (v25) {
        sub_100D8120C((uint64_t)v16);
      }
      sub_100DBFA10((uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
      char v22 = v25 ^ 1;
    }
  }
  return v22 & 1;
}

uint64_t sub_100D7FF38(void *a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v108 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v110 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v109 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v112 = (uint64_t)&v100 - v17;
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  char v25 = (char *)&v100 - v24;
  uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  uint64_t v107 = (uint64_t)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  uint64_t v111 = (char *)&v100 - v32;
  uint64_t v106 = v33;
  __chkstk_darwin(v34, v35);
  uint64_t v113 = (uint64_t)&v100 - v36;
  id v37 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  uint64_t v105 = v27;
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v38(v21, 1, v26) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1333, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v99) = 2;
    NSString v97 = "invalid nil found when unwrapping value";
    uint64_t v98 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1333);
  }
  sub_10051B3EC((uint64_t)v21, (uint64_t)v25, (uint64_t *)&unk_101676310);
  if (v38(v25, 1, v26) == 1) {
    return sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101676310);
  }
  uint64_t v40 = v113;
  sub_100DBF9A8((uint64_t)v25, v113, type metadata accessor for CRLBoardLibraryViewModel.Item);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v42 = [a1 cellForItemAtIndexPath:isa];

  if (v42)
  {

    if (([a1 isEditing] & 1) != 0
      || (v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isCurrentlyInMultipleSelectionInteraction] & 1) != 0)
    {
      sub_100D7E954();
LABEL_36:
      sub_100D7D7D8();
      return sub_100DBFA10(v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    uint64_t v104 = a2;
    uint64_t v43 = type metadata accessor for CRLBoardViewModelMetadata(0);
    uint64_t v44 = *(void *)(v43 - 8);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
    v45(v112, 1, 1, v43);
    uint64_t v46 = *(void *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider];
    type metadata accessor for CRLBoardLibrary();
    uint64_t v103 = swift_dynamicCastClass();
    id v102 = a1;
    if (v103)
    {
      uint64_t v47 = (uint64_t)v111;
      sub_100DBF940(v40, (uint64_t)v111, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v101 = v43;
        sub_1005057FC(&qword_101677100);
        uint64_t v100 = v46;
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRelease();
        uint64_t v48 = v110;
        sub_100DBF9A8(v47, v110, type metadata accessor for CRLBoardIdentifier);
        uint64_t v49 = v109;
        BOOL v50 = (char *)v103;
        sub_100ED7F04(v48, v109);
        uint64_t v51 = v101;
        v45(v49, 0, 1, v101);
        uint64_t v52 = sub_1006063BC(v49, v112, (uint64_t *)&unk_1016741D0);
        uint64_t v53 = v51;
        unint64_t v54 = *(void *)(*(void *)&v50[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController]
                        + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
        __chkstk_darwin(v52, v55);
        uint64_t v56 = v110;
        uint64_t v99 = v110;
        swift_bridgeObjectRetain();
        uint64_t v57 = (char *)sub_100ED4F9C((uint64_t (*)(id *))sub_100DBFA74, (uint64_t)&v97, v54);
        swift_bridgeObjectRelease();
        sub_100DBFA10(v56, type metadata accessor for CRLBoardIdentifier);
        swift_unknownObjectRelease();
        if (v57
          && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v112, 1, v53)
          && *(unsigned char *)(v112 + *(int *)(v53 + 32)) == 1)
        {
          uint64_t v58 = qword_10166FBE0;
          id v59 = v57;
          if (v58 != -1) {
            swift_once();
          }
          swift_beginAccess();
          unint64_t v60 = (void *)static OS_os_log.shareState;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          id v62 = v60;
          uint64_t v63 = URL.absoluteString.getter();
          uint64_t v65 = v64;
          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = sub_100528BE4();
          *(void *)(inited + 32) = v63;
          *(void *)(inited + 40) = v65;
          uint64_t v66 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v62, (uint64_t)&_mh_execute_header, v66, (uint64_t)"Opening URL to accept share: ", 29, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          id v67 = [self sharedApplication];
          URL._bridgeToObjectiveC()(v68);
          uint64_t v70 = v69;
          sub_100A3B668((uint64_t)_swiftEmptyArrayStorage);
          type metadata accessor for OpenExternalURLOptionsKey(0);
          sub_100DB3520((unint64_t *)&qword_101671788, type metadata accessor for OpenExternalURLOptionsKey);
          Class v71 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v67 openURL:v70 options:v71 completionHandler:0];

          uint64_t v40 = v113;
          BOOL v50 = (char *)v103;
LABEL_35:
          Class v96 = IndexPath._bridgeToObjectiveC()().super.isa;
          [v102 deselectItemAtIndexPath:v96 animated:0];

          sub_100522F00(v112, (uint64_t *)&unk_1016741D0);
          goto LABEL_36;
        }
      }
      else
      {
        swift_unknownObjectRetain();
        sub_100DBFA10(v47, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v57 = 0;
        BOOL v50 = (char *)v103;
      }
    }
    else
    {
      uint64_t v57 = 0;
      BOOL v50 = 0;
    }
    id v72 = [v3 navigationItem];
    id v73 = [v72 searchController];

    if (v73)
    {
      id v74 = [v73 searchBar];

      [v74 resignFirstResponder];
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v76 = Strong;
      uint64_t v77 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      unint64_t v78 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v78 && ([v78 isUserInteractionEnabled] & 1) != 0)
      {
        UIImage_optional v79 = *(void **)(v76 + v77);
        uint64_t v103 = (uint64_t)v50;
        uint64_t v111 = v57;
        if (!v79
          || (id v80 = [v79 rootViewController]) == 0
          || (UIImage_optional v81 = v80,
              id v82 = objc_msgSend(v80, "crl_windowWrapper"),
              v81,
              !v82)
          || (id v83 = [v82 newWrapperBeginningIgnoringUserInteractionSafely], v82, !v83))
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v84 = (id)static OS_os_log.crlError;
          uint64_t v85 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v84, (uint64_t)&_mh_execute_header, v85, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          id v83 = 0;
        }
        uint64_t v86 = v113;
        uint64_t v87 = swift_allocObject();
        *(void *)(v87 + 16) = v83;
        uint64_t v88 = type metadata accessor for TaskPriority();
        uint64_t v89 = (uint64_t)v108;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v108, 1, 1, v88);
        uint64_t v90 = v107;
        sub_100DBF940(v86, v107, type metadata accessor for CRLBoardLibraryViewModel.Item);
        type metadata accessor for MainActor();
        swift_retain();
        swift_unknownObjectRetain();
        uint64_t v91 = static MainActor.shared.getter();
        unint64_t v92 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
        unint64_t v93 = (v106 + v92 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v94 = (v93 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v95 = swift_allocObject();
        *(void *)(v95 + 16) = v91;
        *(void *)(v95 + 24) = &protocol witness table for MainActor;
        sub_100DBF9A8(v90, v95 + v92, type metadata accessor for CRLBoardLibraryViewModel.Item);
        *(void *)(v95 + v93) = v87;
        uint64_t v40 = v113;
        *(void *)(v95 + v94) = v76;
        sub_1005912D0(v89, (uint64_t)&unk_10168E3A0, v95);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();
        BOOL v50 = (char *)v103;
        uint64_t v57 = v111;
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    goto LABEL_35;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1334, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(v99) = 2;
  NSString v97 = "invalid nil found when unwrapping value";
  uint64_t v98 = 39;
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:didSelectItemAt:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1334);
  return sub_100DBFA10(v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

void sub_100D80C9C(void *a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v24 - v8;
  id v10 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (v12(v5, 1, v11) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:didDeselectItemAt:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1371, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:didDeselectItemAt:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1371);
  }
  sub_10051B3EC((uint64_t)v5, (uint64_t)v9, (uint64_t *)&unk_101676310);
  unsigned int v13 = v12(v9, 1, v11);
  sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101676310);
  if (v13 != 1)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v15 = [a1 cellForItemAtIndexPath:isa];

    if (v15)
    {

      if ([a1 isEditing])
      {
        sub_100D7E954();
      }
      else
      {
        if (qword_10166F9C8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v16 = (void *)static OS_os_log.crlDefault;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        uint64_t v24 = 0;
        unint64_t v25 = 0xE000000000000000;
        id v18 = v16;
        _StringGuts.grow(_:)(58);
        v19._object = (void *)0x8000000101289ED0;
        v19._countAndFlagsBits = 0xD000000000000024;
        String.append(_:)(v19);
        v20._countAndFlagsBits = 0xD000000000000038;
        v20._object = (void *)0x8000000101289F00;
        String.append(_:)(v20);
        uint64_t v21 = v24;
        unint64_t v22 = v25;
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v21;
        *(void *)(inited + 40) = v22;
        uint64_t v23 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v23, (uint64_t)"%@", 2, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
      }
      sub_100D7D7D8();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:didDeselectItemAt:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1372, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:didDeselectItemAt:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1372);
    }
  }
}

uint64_t sub_100D81100(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = a3;
  id v14 = a1;
  a5(v13, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

void sub_100D8120C(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v2 = *(void *)(v37 + 64);
  __chkstk_darwin(v1 - 8, v3);
  sub_10050BF48(0, (unint64_t *)&qword_10167B170);
  uint64_t v4 = (void *)static OS_os_log.default.getter();
  uint64_t v5 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Show recovery alert in response to attempting to open a deleted board", 69, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v6 = self;
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = [v6 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [self alertControllerWithTitle:v15 message:v16 preferredStyle:1];

  id v18 = [v6 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v23 = self;
  id v24 = [v23 actionWithTitle:v22 style:1 handler:0];

  [v17 addAction:v24];
  id v25 = [v6 mainBundle];
  NSString v26 = String._bridgeToObjectiveC()();
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = (void *)v36[1];
  swift_unknownObjectWeakInit();
  sub_100DBF940(v38, (uint64_t)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
  unint64_t v31 = (*(unsigned __int8 *)(v37 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v29;
  sub_100DBF9A8((uint64_t)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_retain();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100DBBC84;
  void aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_10051CE64;
  void aBlock[3] = &unk_10152BD98;
  uint64_t v34 = _Block_copy(aBlock);
  swift_release();
  id v35 = [v23 actionWithTitle:v33 style:0 handler:v34];
  _Block_release(v34);

  swift_release();
  [v17 addAction:v35];

  [v30 presentViewController:v17 animated:1 completion:0];
}

void sub_100D817E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1005057FC(&qword_10169B510);
    uint64_t v6 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_10117E810;
    sub_100DBF940(a3, v8 + v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100D7C1E0(v8);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
}

uint64_t sub_100D81B74(void *a1)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v3 = [a1 cellForItemAtIndexPath:isa];

  if (v3)
  {
    swift_getObjectType();
    uint64_t v4 = swift_conformsToProtocol2();
    if (v4) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 0;
    }
    if (v4) {
      id v6 = v3;
    }
    else {
      id v6 = 0;
    }
    if (v6)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 136))(ObjectType, v5);

      return v8;
    }
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:contextMenuConfigurationForItemAt:point:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1446, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:contextMenuConfigurationForItemAt:point:)", 58, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1446);
  return 0;
}

UIMenu sub_100D81CD0(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = *(void **)&a3[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
  id v6 = [v5 hideContextMenu];
  unint64_t v7 = &selRef_shouldHitTestWithFill;
  if (v6)
  {
    uint64_t v8 = v6;
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    id v9 = [v8 title];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    NSString v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = v8;
    v13[4] = a3;
    id v14 = a3;
    UIMenuElementSize preferredElementSize = 0;
    uint64_t v28 = 0;
    unint64_t v31 = sub_100DBD7A8;
    uint64_t v32 = v13;
    uint64_t v30 = 0;
    id v15 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    unint64_t v7 = &selRef_shouldHitTestWithFill;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2151, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v30) = 2;
    UIMenuElementSize preferredElementSize = "invalid nil found when unwrapping value";
    uint64_t v28 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2151);
  }
  id v16 = [v5 replyContextMenuWithPresentingViewController:a2 preferredElementSize:preferredElementSize v28, v30, v31, v32];
  if (v16)
  {
    id v17 = v16;
    id v18 = [self mainBundle];
    NSString v19 = String._bridgeToObjectiveC()();
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [self v7[473] v22];

    *(void *)(swift_allocObject() + 16) = v17;
    v29._rawValue = 0;
    id v24 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2140, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    v29._rawValue = (void *)39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2140);
  }
  sub_10050BF48(0, &qword_101673A80);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v33.value.super.Class isa = 0;
  v33.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v25, (Swift::String_optional)0, v33, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v29);
}

id sub_100D8221C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v36 = a2;
  uint64_t v40 = a3;
  uint64_t v32 = a1;
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v6);
  uint64_t v37 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v33 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v33, v10);
  sub_1005057FC(&qword_10169B510);
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v34 = v11 | 7;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117E810;
  sub_100DBF940(a1, v12 + ((v11 + 32) & ~v11), type metadata accessor for CRLBoardLibraryViewModel.Item);
  sub_100CDD514(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_100DB3520((unint64_t *)&qword_10169B5A0, (void (*)(uint64_t))type metadata accessor for CRLBoardLibraryViewModel.Item);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  id v14 = v35;
  swift_unknownObjectWeakInit();
  uint64_t v15 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v33);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  uint64_t v18 = v37;
  sub_100DBF940(v32, v37, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v19 = (v11 + 24) & ~v11;
  unint64_t v20 = (v39 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v14;
  sub_100DBF9A8(v18, v21 + v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
  NSString v22 = v40;
  *(void *)(v21 + v20) = v40;
  id v23 = self;
  uint64_t v45 = sub_100DBD880;
  uint64_t v46 = v17;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v42 = *(void *)"";
  uint64_t v43 = sub_100598AC4;
  uint64_t v44 = &unk_10152C5E0;
  id v24 = _Block_copy(&aBlock);
  id v25 = v22;
  swift_retain();
  id v26 = v14;
  swift_release();
  uint64_t v45 = sub_100DBDAEC;
  uint64_t v46 = v21;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v42 = *(void *)"";
  uint64_t v43 = sub_10059474C;
  uint64_t v44 = &unk_10152C608;
  NSString v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  Class v28 = isa;
  id v29 = [v23 configurationWithIdentifier:isa previewProvider:v24 actionProvider:v27];
  swift_release();
  swift_release();

  _Block_release(v27);
  _Block_release(v24);
  return v29;
}

void sub_100D827C8(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  id v74 = a2;
  id v68 = a1;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v70 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v69 = (uint64_t)&v63 - v11;
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v73 = v12;
  uint64_t v13 = *(void *)(v72 + 64);
  __chkstk_darwin(v12, v14);
  id v67 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v66 = (char *)&v63 - v17;
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v63 - v24;
  uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v71 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v27);
  id v29 = (char *)&v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(void *)&double v32 = __chkstk_darwin(v30 - 8, v31).n128_u64[0];
  uint64_t v34 = (char *)&v63 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v35 = a3;
  [a3 setPreferredCommitStyle:0, v32];
  uint64_t v36 = v4 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  uint64_t v37 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v34, 5, 5, v37);
  LOBYTE(v36) = sub_100DDC744(v36, (uint64_t)v34);
  sub_100DBFA10((uint64_t)v34, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v36 & 1) == 0)
  {
    uint64_t v39 = v71;
    uint64_t v38 = v72;
    uint64_t v40 = v26;
    id v64 = v35;
    uint64_t v65 = v29;
    uint64_t v41 = v73;
    long long aBlock = (void **)[v74 identifier];
    sub_1005057FC((uint64_t *)&unk_10169B630);
    sub_1005057FC((uint64_t *)&unk_101677438);
    if (swift_dynamicCast())
    {
      if (*(void *)(v81 + 16) == 1)
      {
        sub_100999B24(v81, (uint64_t)v21);
        swift_bridgeObjectRelease();
        uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
        if (v42(v21, 1, v40) == 1)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1479, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1479);
        }
        sub_10051B3EC((uint64_t)v21, (uint64_t)v25, (uint64_t *)&unk_101676310);
        if (v42(v25, 1, v40) == 1)
        {
          sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101676310);
        }
        else
        {
          sub_100DBF9A8((uint64_t)v25, (uint64_t)v65, type metadata accessor for CRLBoardLibraryViewModel.Item);
          id v43 = sub_100D72460();
          uint64_t v44 = v70;
          dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

          uint64_t v45 = v38;
          uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
          uint64_t v47 = v41;
          if (v46(v44, 1, v41) == 1)
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1480, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            uint64_t v47 = v41;
            uint64_t v45 = v38;
            uint64_t v44 = v70;
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1480);
          }
          uint64_t v48 = (uint64_t)v44;
          uint64_t v49 = v69;
          sub_10051B3EC(v48, v69, (uint64_t *)&unk_10169B4A0);
          if (v46((char *)v49, 1, v47) == 1)
          {
            sub_100DBFA10((uint64_t)v65, type metadata accessor for CRLBoardLibraryViewModel.Item);
            sub_100522F00(v49, (uint64_t *)&unk_10169B4A0);
          }
          else
          {
            id v74 = *(id *)(v45 + 32);
            BOOL v50 = v66;
            ((void (*)(char *, uint64_t, uint64_t))v74)(v66, v49, v47);
            uint64_t v51 = v47;
            uint64_t v52 = v45;
            uint64_t v53 = swift_allocObject();
            swift_unknownObjectWeakInit();
            UIImage_optional v79 = sub_100DBD574;
            uint64_t v80 = v53;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v76 = *(void *)"";
            uint64_t v77 = sub_100679958;
            unint64_t v78 = &unk_10152C428;
            unint64_t v54 = _Block_copy(&aBlock);
            swift_release();
            [v64 addAnimations:v54];
            _Block_release(v54);
            uint64_t v55 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v56 = v67;
            uint64_t v57 = v50;
            (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v67, v50, v51);
            unint64_t v58 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
            uint64_t v59 = swift_allocObject();
            unint64_t v60 = v68;
            *(void *)(v59 + 16) = v55;
            *(void *)(v59 + 24) = v60;
            ((void (*)(unint64_t, char *, uint64_t))v74)(v59 + v58, v56, v51);
            UIImage_optional v79 = sub_100DBD650;
            uint64_t v80 = v59;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v76 = *(void *)"";
            uint64_t v77 = sub_100679958;
            unint64_t v78 = &unk_10152C478;
            Swift::String v61 = _Block_copy(&aBlock);
            id v62 = v60;
            swift_release();
            [v64 addCompletion:v61];
            _Block_release(v61);
            (*(void (**)(char *, uint64_t))(v52 + 8))(v57, v51);
            sub_100DBFA10((uint64_t)v65, type metadata accessor for CRLBoardLibraryViewModel.Item);
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1477, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"collectionView(_:willPerformPreviewActionForMenuWith:animator:)", 63, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1477);
    }
  }
}

void sub_100D830F8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong setEditing:0 animated:1];
  }
}

void sub_100D8315C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v4 collectionView:a2 didSelectItemAtIndexPath:isa];
  }
}

void sub_100D8329C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id))
{
  id v11 = a3;
  id v9 = a4;
  swift_unknownObjectRetain();
  id v10 = a1;
  a6(v9);

  swift_unknownObjectRelease();
}

void sub_100D83330()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___emptyFolderViewController;
  uint64_t v7 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___emptyFolderViewController);
  if (v7) {
    goto LABEL_4;
  }
  sub_100DBF940(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  id v8 = [self sharedApplication];
  id v9 = [v8 delegate];

  if (v9)
  {
    type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    swift_unknownObjectRelease();
    char v10 = sub_100AC1C10();
    swift_release();
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8);
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_1009DCBB4((uint64_t)v5, v10, v11, v12);
    uint64_t v14 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v13;
    v13;

    uint64_t v7 = 0;
LABEL_4:
    id v15 = v7;
    return;
  }
  __break(1u);
}

void sub_100D834D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10169B500);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  char v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100D77DFC((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100522F00((uint64_t)v5, (uint64_t *)&unk_10169B500);
    char v11 = v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView];
    v0[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] = 1;
    sub_100D83B9C(v11);
    return;
  }
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v37 = v10;
  v12(v10, v5, v6);
  sub_100D83330();
  uint64_t v14 = v13;
  id v15 = self;
  id v16 = [v15 sharedApplication];
  id v17 = [v16 delegate];

  if (!v17)
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional();
  swift_retain();
  swift_unknownObjectRelease();
  char v18 = sub_100AC1C10();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  char v38 = v18;
  swift_retain();
  static Published.subscript.setter();

  BOOL v19 = sub_100D78590();
  BOOL v20 = 0;
  uint64_t v21 = v37;
  if (!v19)
  {
    uint64_t v22 = *(void *)(NSDiffableDataSourceSnapshot.itemIdentifiers.getter() + 16);
    swift_bridgeObjectRelease();
    BOOL v20 = v22 == 0;
  }
  uint64_t v23 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView;
  char v24 = v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView];
  v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] = v20;
  sub_100D83B9C(v24);
  if (v1[v23] != 1) {
    goto LABEL_23;
  }
  id v25 = *(void **)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint];
  if (!v25 || *(double *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight] != 0.0) {
    goto LABEL_23;
  }
  id v26 = v25;
  id v27 = [v15 sharedApplication];
  id v28 = [v27 delegate];

  if (!v28) {
    goto LABEL_25;
  }
  uint64_t v29 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
  if (!v29)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 206, (uint64_t)"Asking for fetch status before the sync driver exists.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v21 = v37;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFetchingChanges", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSAppDelegate.swift", 85, 2, 206);
    swift_unknownObjectRelease();
    double v30 = 0.0;
    goto LABEL_18;
  }
  if (*(unsigned char *)(v29 + 136))
  {
    swift_unknownObjectRelease();
  }
  else
  {
    int v31 = *(unsigned __int8 *)(v29 + 137);
    swift_unknownObjectRelease();
    double v30 = 0.0;
    if (v31 != 1) {
      goto LABEL_18;
    }
  }
  if (qword_1016700B8 != -1) {
    swift_once();
  }
  double v30 = -*(double *)&qword_10169AF48;
LABEL_18:
  [v26 constant];
  if (v30 == v32)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);

    return;
  }
  [v26 setConstant:v30];
  id v33 = [v1 view];
  if (!v33) {
    goto LABEL_26;
  }
  uint64_t v34 = v33;
  [v33 setNeedsUpdateConstraints];

  id v35 = [v1 view];
  if (v35)
  {
    uint64_t v36 = v35;
    [v35 setNeedsLayout];

LABEL_23:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
    return;
  }
LABEL_27:
  __break(1u);
}

void sub_100D83A34(double a1)
{
  if (v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] != 1) {
    return;
  }
  uint64_t v2 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight;
  double v3 = *(double *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight];
  if (v3 == a1) {
    return;
  }
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint];
  if (!v4) {
    return;
  }
  double v5 = -v3;
  id v6 = v4;
  [v6 setConstant:v5];
  swift_bridgeObjectRetain();
  uint64_t v7 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v7 > 0 || *(double *)&v1[v2] == 0.0)
  {
    id v8 = [v1 view];
    if (!v8)
    {
LABEL_14:
      __break(1u);
      return;
    }
    uint64_t v9 = v8;
    [v8 setNeedsUpdateConstraints];
  }
  id v10 = [v1 view];
  if (!v10)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v11 = v10;
  [v10 setNeedsLayout];
}

void sub_100D83B9C(char a1)
{
  int v2 = v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView];
  if (v2 == (a1 & 1)) {
    return;
  }
  double v3 = v1;
  sub_100D83330();
  double v5 = v4;
  id v47 = [v4 view];

  if (v2)
  {
    if (!v47) {
      return;
    }
    id v6 = [v47 bottomAnchor];
    id v7 = [v3 view];
    if (v7)
    {
      id v8 = v7;
      id v9 = [v7 bottomAnchor];

      id v10 = [v6 constraintEqualToAnchor:v9 constant:-*(double *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight]];
      uint64_t v11 = OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint;
      uint64_t v12 = *(void **)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint];
      *(void *)&v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint] = v10;

      [v47 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v13 = [v3 view];
      if (v13)
      {
        uint64_t v14 = v13;
        [v13 addSubview:v47];

        sub_100D83330();
        id v16 = v15;
        [v3 addChildViewController:v15];

        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_10117FBE0;
        id v18 = [v47 leadingAnchor];
        id v19 = [v3 view];
        if (v19)
        {
          BOOL v20 = v19;
          id v21 = [v19 leadingAnchor];

          id v22 = [v18 constraintEqualToAnchor:v21];
          *(void *)(v17 + 32) = v22;
          id v23 = [v47 trailingAnchor];
          id v24 = [v3 view];
          if (v24)
          {
            id v25 = v24;
            id v26 = [v24 trailingAnchor];

            id v27 = [v23 constraintEqualToAnchor:v26];
            *(void *)(v17 + 40) = v27;
            id v28 = [v47 topAnchor];
            id v29 = [v3 view];
            if (v29)
            {
              double v30 = v29;
              id v31 = [v29 safeAreaLayoutGuide];

              id v32 = [v31 topAnchor];
              id v33 = [v28 constraintEqualToAnchor:v32];

              *(void *)(v17 + 48) = v33;
              id v34 = [v47 bottomAnchor];
              id v35 = [v3 view];
              if (v35)
              {
                uint64_t v36 = v35;
                uint64_t v37 = self;
                id v38 = [v36 safeAreaLayoutGuide];

                id v39 = [v38 bottomAnchor];
                id v40 = [v34 constraintEqualToAnchor:v39];

                *(void *)(v17 + 56) = v40;
                specialized Array._endMutation()();
                sub_10050BF48(0, (unint64_t *)&qword_101674200);
                Class isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v37 activateConstraints:isa];

                uint64_t v42 = *(void **)&v3[v11];
                if (v42)
                {
                  uint64_t v43 = swift_allocObject();
                  *(_OWORD *)(v43 + 16) = xmmword_101177E70;
                  *(void *)(v43 + 32) = v42;
                  specialized Array._endMutation()();
                  id v44 = v42;
                  Class v45 = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  [v37 activateConstraints:v45];
                }
                goto LABEL_15;
              }
LABEL_24:
              __break(1u);
              return;
            }
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v47)
  {
    __break(1u);
    goto LABEL_19;
  }
  [v47 removeFromSuperview];

  sub_100D83330();
  id v47 = v46;
  [v46 removeFromParentViewController];
LABEL_15:
}

void sub_100D8411C()
{
  type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v0 <= 0x3F)
  {
    sub_100D84298();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100D84298()
{
  if (!qword_10169B120)
  {
    sub_100522D34((uint64_t *)&unk_10168E130);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10169B120);
    }
  }
}

uint64_t sub_100D84394(char a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 112) = a1;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v3 + 32) = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(void *)(v3 + 40) = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101676310);
  *(void *)(v3 + 48) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  *(void *)(v3 + 56) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 72) = *(void *)(v5 + 64);
  *(void *)(v3 + 80) = swift_task_alloc();
  *(void *)(v3 + 88) = swift_task_alloc();
  *(void *)(v3 + 96) = type metadata accessor for MainActor();
  *(void *)(v3 + 104) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100D84534, v7, v6);
}

uint64_t sub_100D84534()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 16);
  swift_release();
  sub_100522E9C(v4, v3, (uint64_t *)&unk_101676310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100522F00(*(void *)(v0 + 48), (uint64_t *)&unk_101676310);
    goto LABEL_30;
  }
  uint64_t v5 = *(unsigned __int8 *)(v0 + 112);
  sub_100DBF9A8(*(void *)(v0 + 48), *(void *)(v0 + 88), type metadata accessor for CRLBoardLibraryViewModel.Item);
  switch(v5)
  {
    case 1:
      uint64_t v19 = *(void *)(v0 + 88);
      sub_100D85320(v19);
      goto LABEL_22;
    case 2:
      uint64_t v19 = *(void *)(v0 + 88);
      uint64_t v20 = *(void *)(v0 + 80);
      uint64_t v21 = *(void *)(v0 + 64);
      id v23 = *(void **)(v0 + 24);
      uint64_t v22 = *(void *)(v0 + 32);
      uint64_t v24 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 1, 1, v24);
      sub_100DBF940(v19, v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
      id v25 = v23;
      uint64_t v26 = static MainActor.shared.getter();
      unint64_t v27 = (*(unsigned __int8 *)(v21 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      id v28 = (void *)swift_allocObject();
      _OWORD v28[2] = v26;
      v28[3] = &protocol witness table for MainActor;
      v28[4] = v25;
      sub_100DBF9A8(v20, (uint64_t)v28 + v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
      id v29 = &unk_10169B708;
      goto LABEL_10;
    case 3:
      uint64_t v19 = *(void *)(v0 + 88);
      uint64_t v30 = *(void *)(v0 + 80);
      uint64_t v31 = *(void *)(v0 + 64);
      id v32 = *(void **)(v0 + 24);
      uint64_t v22 = *(void *)(v0 + 32);
      uint64_t v33 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v22, 1, 1, v33);
      sub_100DBF940(v19, v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
      id v34 = v32;
      uint64_t v35 = static MainActor.shared.getter();
      unint64_t v36 = (*(unsigned __int8 *)(v31 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      id v28 = (void *)swift_allocObject();
      _OWORD v28[2] = v35;
      v28[3] = &protocol witness table for MainActor;
      v28[4] = v34;
      sub_100DBF9A8(v30, (uint64_t)v28 + v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
      id v29 = &unk_10169B700;
LABEL_10:
      sub_1005912D0(v22, (uint64_t)v29, (uint64_t)v28);
      swift_release();
      goto LABEL_22;
    case 4:
      uint64_t v19 = *(void *)(v0 + 88);
      uint64_t v37 = *(void *)(v0 + 64);
      sub_1005057FC(&qword_10169B510);
      unint64_t v38 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_10117E810;
      sub_100DBF940(v19, v39 + v38, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100D7BBE0(v39);
      goto LABEL_15;
    case 5:
    case 6:
      uint64_t v6 = *(void *)(v0 + 88);
      uint64_t v7 = *(void *)(v0 + 64);
      sub_1005057FC(&qword_10169B510);
      unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_10117E810;
      sub_100DBF940(v6, v9 + v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
      id v10 = sub_100DD85D8(v9);
      uint64_t v11 = sub_100CDDF48((uint64_t)v10);
      swift_bridgeObjectRelease();
      if (*(void *)(v11 + 16))
      {
        uint64_t v12 = *(void *)(v0 + 32);
        id v13 = *(id *)(v0 + 24);
        char v14 = sub_100DB4CF0(v11, (uint64_t)v13);

        uint64_t v15 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
        uint64_t v16 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        uint64_t v17 = static MainActor.shared.getter();
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v17;
        *(void *)(v18 + 24) = &protocol witness table for MainActor;
        *(void *)(v18 + 32) = v16;
        *(void *)(v18 + 40) = v11;
        *(unsigned char *)(v18 + 48) = v14 & 1;
        swift_release();
        sub_1005912D0(v12, (uint64_t)&unk_10169B710, v18);
        swift_release();
        [v13 setEditing:0 animated:1];
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v58 = *(void *)(v0 + 88);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      goto LABEL_28;
    case 7:
      uint64_t v40 = *(void *)(v0 + 88);
      uint64_t v41 = *(void *)(v0 + 64);
      uint64_t v42 = *(void *)(v0 + 40);
      uint64_t v43 = *(void *)(v0 + 24);
      sub_1005057FC(&qword_10169B510);
      unint64_t v44 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_10117E810;
      sub_100DBF940(v40, v45 + v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v46 = v43 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
      uint64_t v47 = sub_1005057FC(&qword_101670F30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v42, 5, 5, v47);
      LOBYTE(v46) = sub_100DDC744(v46, v42);
      sub_100DBFA10(v42, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      if (v46) {
        sub_100D906F8(v45);
      }
      else {
        sub_100D9124C(v45, 0, 0);
      }
      uint64_t v58 = *(void *)(v0 + 88);
      swift_bridgeObjectRelease();
LABEL_28:
      uint64_t v57 = v58;
      goto LABEL_29;
    case 8:
      uint64_t v19 = *(void *)(v0 + 88);
      uint64_t v48 = *(void *)(v0 + 64);
      sub_1005057FC(&qword_10169B510);
      unint64_t v49 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_10117E810;
      sub_100DBF940(v19, v50 + v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100D7C1E0(v50);
LABEL_15:
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      goto LABEL_22;
    case 9:
      uint64_t v51 = (char *)sub_100D86178(*(void *)(v0 + 88));
      if (!v51) {
        goto LABEL_25;
      }
      uint64_t v52 = v51;
      id v53 = [*(id *)&v51[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight] hideContextMenu];
      uint64_t v19 = *(void *)(v0 + 88);
      if (v53) {
        goto LABEL_21;
      }
      goto LABEL_33;
    case 10:
      unint64_t v54 = (char *)sub_100D86178(*(void *)(v0 + 88));
      if (!v54)
      {
LABEL_25:
        uint64_t v57 = *(void *)(v0 + 88);
LABEL_29:
        sub_100DBFA10(v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_30;
      }
      uint64_t v52 = v54;
      id v53 = [*(id *)&v54[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight] replyContextMenuWithPresentingViewController:*(void *)(v0 + 24)];
      uint64_t v19 = *(void *)(v0 + 88);
      if (v53)
      {
LABEL_21:
        uint64_t v55 = v53;
        uint64_t v56 = (void (**)(void))[v53 actionBlock];
        v56[2]();

        _Block_release(v56);
LABEL_22:
        uint64_t v57 = v19;
        goto LABEL_29;
      }
LABEL_33:
      sub_100DBFA10(v19, type metadata accessor for CRLBoardLibraryViewModel.Item);

LABEL_30:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v59 = *(uint64_t (**)(void))(v0 + 8);
      return v59();
    default:
      uint64_t v19 = *(void *)(v0 + 88);
      sub_100D84E04(v19);
      goto LABEL_22;
  }
}

void sub_100D84E04(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  uint64_t v12 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v40 - v15;
  sub_100DBF940(a1, (uint64_t)&v40 - v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100DBF9A8((uint64_t)v16, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v18 = sub_100DD4C48();
      uint64_t v20 = v19;
      uint64_t v21 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      uint64_t v22 = (uint64_t)v7;
    }
    else
    {
      uint64_t v24 = (uint64_t *)&v16[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
      uint64_t v18 = *v24;
      uint64_t v20 = v24[1];
      uint64_t v21 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v22 = (uint64_t)v16;
    }
    sub_100DBFA10(v22, v21);
  }
  else
  {
    uint64_t v18 = sub_100DD8CAC();
    uint64_t v20 = v23;
  }
  sub_100DBF940(a1, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v25 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v42 = a1;
  uint64_t v43 = ~v25;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v2;
  sub_100DBF9A8((uint64_t)v12, v26 + ((v25 + 24) & ~v25), type metadata accessor for CRLBoardLibraryViewModel.Item);
  id v27 = v2;
  id v28 = sub_1005D1A58(v18, v20, (uint64_t)sub_100DBE0AC, v26);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  uint64_t v48 = sub_100DBE130;
  uint64_t v49 = v29;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v45 = *(void *)"";
  uint64_t v46 = sub_100679958;
  uint64_t v47 = &unk_10152C798;
  uint64_t v30 = _Block_copy(&aBlock);
  id v31 = v28;
  swift_release();
  [v27 presentViewController:v31 animated:1 completion:v30];
  _Block_release(v30);
  id v32 = [self defaultCenter];
  if (qword_10166FE00 != -1) {
    swift_once();
  }
  uint64_t v41 = qword_10171C2F8;
  uint64_t v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100DBF940(v42, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v34 = (v25 + 16) & v43;
  unint64_t v35 = (v10 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_100DBF9A8((uint64_t)v12, v36 + v34, type metadata accessor for CRLBoardLibraryViewModel.Item);
  *(void *)(v36 + v35) = v33;
  *(void *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v31;
  uint64_t v48 = sub_100DBE318;
  uint64_t v49 = v36;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v45 = *(void *)"";
  uint64_t v46 = sub_1005E5680;
  uint64_t v47 = &unk_10152C7E8;
  uint64_t v37 = _Block_copy(&aBlock);
  id v38 = v31;
  swift_release();
  id v39 = [v32 addObserverForName:v41 object:0 queue:0 usingBlock:v37];
  _Block_release(v37);

  sub_100D72A9C((uint64_t)v39);
}

void sub_100D85320(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8, v7);
  uint64_t v8 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider];
  type metadata accessor for CRLBoardLibrary();
  uint64_t v14 = swift_dynamicCastClass();
  if (v14 && *(unsigned char *)(v14 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable) == 1)
  {
    uint64_t v15 = self;
    swift_unknownObjectRetain();
    id v16 = [v15 sharedApplication];
    id v17 = [v16 delegate];

    if (!v17)
    {
      __break(1u);
      JUMPOUT(0x100D86168);
    }
    type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    swift_unknownObjectRelease();
    char v18 = sub_100AC1C10();
    swift_release();
    switch(v18)
    {
      case 1:
        uint64_t v42 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v12, 1, 1, v42);
        sub_100DBF940(a1, (uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
        type metadata accessor for MainActor();
        id v43 = v2;
        uint64_t v44 = static MainActor.shared.getter();
        unint64_t v45 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
        uint64_t v46 = (void *)swift_allocObject();
        void v46[2] = v44;
        v46[3] = &protocol witness table for MainActor;
        v46[4] = v43;
        sub_100DBF9A8((uint64_t)v8, (uint64_t)v46 + v45, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1005912D0((uint64_t)v12, (uint64_t)&unk_10169B690, (uint64_t)v46);
        swift_release();
        swift_unknownObjectRelease();
        break;
      case 2:
        uint64_t v89 = v13;
        unsigned int v47 = [self loggedInUserHasManagedAppleID];
        uint64_t v48 = self;
        id v49 = [v48 mainBundle];
        if (!v47)
        {
          NSString v66 = String._bridgeToObjectiveC()();
          NSString v67 = String._bridgeToObjectiveC()();
          id v68 = [v49 localizedStringForKey:v66 value:v67 table:0];

          id v88 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v69 = [v48 mainBundle];
          NSString v70 = String._bridgeToObjectiveC()();
          NSString v71 = String._bridgeToObjectiveC()();
          id v72 = [v69 localizedStringForKey:v70 value:v71 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v73 = [v48 mainBundle];
          NSString v74 = String._bridgeToObjectiveC()();
          NSString v75 = String._bridgeToObjectiveC()();
          id v76 = [v73 localizedStringForKey:v74 value:v75 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v77 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          NSString v78 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v31 = [self alertControllerWithTitle:v77 message:v78 preferredStyle:1];

          NSString v79 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          unint64_t v94 = sub_100534D40;
          uint64_t v95 = 0;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v91 = *(void *)"";
          unint64_t v92 = sub_10051CE64;
          unint64_t v93 = &unk_10152C928;
          uint64_t v80 = _Block_copy(&aBlock);
          swift_release();
          uint64_t v81 = self;
          id v35 = [v81 actionWithTitle:v79 style:0 handler:v80];
          _Block_release(v80);

          id v82 = [v48 mainBundle];
          NSString v83 = String._bridgeToObjectiveC()();
          NSString v84 = String._bridgeToObjectiveC()();
          id v85 = [v82 localizedStringForKey:v83 value:v84 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v86 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v87 = [v81 actionWithTitle:v86 style:1 handler:0];

          [v31 addAction:v35];
          [v31 addAction:v87];
          [v2 presentViewController:v31 animated:1 completion:0];
          swift_unknownObjectRelease();

          goto LABEL_15;
        }
        NSString v50 = String._bridgeToObjectiveC()();
        NSString v51 = String._bridgeToObjectiveC()();
        id v52 = [v49 localizedStringForKey:v50 value:v51 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v53 = [v48 mainBundle];
        NSString v54 = String._bridgeToObjectiveC()();
        NSString v55 = String._bridgeToObjectiveC()();
        id v56 = [v53 localizedStringForKey:v54 value:v55 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v57 = [v48 mainBundle];
        NSString v58 = String._bridgeToObjectiveC()();
        NSString v59 = String._bridgeToObjectiveC()();
        id v60 = [v57 localizedStringForKey:v58 value:v59 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v61 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v88 = [self actionWithTitle:v61 style:0 handler:0];

        NSString v62 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v63 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v64 = [self alertControllerWithTitle:v62 message:v63 preferredStyle:1];

        [v64 addAction:v88];
        [v2 presentViewController:v64 animated:1 completion:0];
        swift_unknownObjectRelease();

        id v65 = v88;

        break;
      default:
        uint64_t v19 = self;
        id v88 = v19;
        id v20 = [v19 mainBundle];
        NSString v21 = String._bridgeToObjectiveC()();
        NSString v22 = String._bridgeToObjectiveC()();
        id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100DC1930();
        id v24 = [v19 mainBundle];
        NSString v25 = String._bridgeToObjectiveC()();
        NSString v26 = String._bridgeToObjectiveC()();
        uint64_t v89 = v13;
        id v27 = v26;
        id v28 = [v24 localizedStringForKey:v25 value:v26 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v31 = [self alertControllerWithTitle:v29 message:v30 preferredStyle:1];

        NSString v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unint64_t v94 = sub_10053976C;
        uint64_t v95 = 0;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v91 = *(void *)"";
        unint64_t v92 = sub_10051CE64;
        unint64_t v93 = &unk_10152C900;
        uint64_t v33 = _Block_copy(&aBlock);
        swift_release();
        uint64_t v34 = self;
        id v35 = [v34 actionWithTitle:v32 style:0 handler:v33];
        _Block_release(v33);

        id v36 = [v88 mainBundle];
        NSString v37 = String._bridgeToObjectiveC()();
        NSString v38 = String._bridgeToObjectiveC()();
        id v39 = [v36 localizedStringForKey:v37 value:v38 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v40 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v41 = [v34 actionWithTitle:v40 style:1 handler:0];

        [v31 addAction:v35];
        [v31 addAction:v41];
        [v2 presentViewController:v31 animated:1 completion:0];
        swift_unknownObjectRelease();

LABEL_15:
        break;
    }
  }
  else
  {
    sub_100533CE4();
  }
}

void *sub_100D86178(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for CRLBoardLibrary();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10) {
    return 0;
  }
  uint64_t v11 = v10;
  sub_100DBF940(a1, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100DBFA10((uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
    return 0;
  }
  sub_1005057FC(&qword_101677100);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_100DBF9A8((uint64_t)v5, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  unint64_t v13 = *(void *)(*(void *)(v11 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                  + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  __chkstk_darwin(v12, v14);
  *(void *)&v17[-16] = v9;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100ED4F9C((uint64_t (*)(id *))sub_100DBFA74, (uint64_t)&v17[-32], v13);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_100DBFA10((uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  return v15;
}

double *sub_100D863B4(uint64_t a1, char *a2)
{
  BOOL v3 = v2;
  uint64_t v106 = a2;
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v109 = (char *)v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v103 = (uint64_t)v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v100 - v13;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v15 - 8, v16);
  char v18 = (char *)v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v19 = *(void *)(v107 - 8);
  __chkstk_darwin(v107, v20);
  uint64_t v104 = (uint64_t)v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  NSString v25 = (char *)v100 - v24;
  uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v26, v27);
  NSString v29 = (char *)v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v30 - 8, v31);
  uint64_t v33 = (char *)v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v108 = sub_100D87448();
  sub_100DBF940(a1, (uint64_t)v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DBF9A8((uint64_t)v29, (uint64_t)v33, type metadata accessor for CRLBoardIdentifier);
    sub_100ED7F04((uint64_t)v33, (uint64_t)v18);
    BOOL v102 = v2;
    uint64_t v38 = v107;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v18, 0, 1, v107);
    sub_100DBF9A8((uint64_t)v18, (uint64_t)v25, type metadata accessor for CRLBoardViewModelMetadata);
    LODWORD(v101) = v25[*(int *)(v38 + 40)];
    sub_100522E9C((uint64_t)&v25[*(int *)(v38 + 28)], (uint64_t)v14, (uint64_t *)&unk_1016741E0);
    uint64_t v39 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    NSString v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48);
    int v41 = v40(v14, 1, v39);
    if (v41 == 1)
    {
      sub_100522F00((uint64_t)v14, (uint64_t *)&unk_1016741E0);
      LODWORD(v105) = 1;
    }
    else
    {
      LODWORD(v105) = v14[24];
      sub_100DBFA10((uint64_t)v14, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    }
    int v42 = v25[1];
    uint64_t v43 = v104;
    sub_100ED7F04((uint64_t)v33, v104);
    uint64_t v44 = v107;
    uint64_t v45 = v103;
    sub_100522E9C(v43 + *(int *)(v107 + 28), v103, (uint64_t *)&unk_1016741E0);
    HIDWORD(v105) = v40((char *)v45, 1, v39) != 1;
    sub_100522F00(v45, (uint64_t *)&unk_1016741E0);
    sub_100DBFA10(v43, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v37 = (uint64_t)v109;
    LODWORD(v36) = v101 ^ 1;
    uint64_t v46 = &v25[*(int *)(v44 + 44)];
    int v35 = v42;
    if (v46[8])
    {
      BOOL v34 = 0;
    }
    else
    {
      unint64_t v47 = *(void *)v46;
      BOOL v34 = v47 >= sub_1002094A4();
    }
    BOOL v3 = v102;
    sub_100DBFA10((uint64_t)v33, type metadata accessor for CRLBoardIdentifier);
    LODWORD(v107) = v25[*(int *)(v44 + 32)];
    sub_100DBFA10((uint64_t)v25, type metadata accessor for CRLBoardViewModelMetadata);
  }
  else
  {
    sub_100DBFA10((uint64_t)v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
    LODWORD(v107) = 0;
    BOOL v34 = 0;
    uint64_t v105 = 0;
    int v35 = 0;
    LODWORD(v36) = 1;
    uint64_t v37 = (uint64_t)v109;
  }
  uint64_t v48 = v3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  uint64_t v49 = sub_1005057FC(&qword_101670F30);
  NSString v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
  v50(v37, 5, 5, v49);
  char v51 = sub_100DDC744(v48, v37);
  sub_100DBFA10(v37, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if (v51)
  {
    id v52 = sub_100F642DC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v54 = *((void *)v52 + 2);
    unint64_t v53 = *((void *)v52 + 3);
    int64_t v55 = v54 + 1;
    if (v54 >= v53 >> 1) {
      id v52 = sub_100F642DC((double *)(v53 > 1), v54 + 1, 1, v52);
    }
    char v56 = 8;
LABEL_15:
    *((void *)v52 + 2) = v55;
    *((unsigned char *)v52 + v54 + 32) = v56;
    goto LABEL_74;
  }
  LODWORD(v104) = v36;
  LODWORD(v103) = v35;
  if (v108)
  {
    id v52 = _swiftEmptyArrayStorage;
  }
  else
  {
    id v57 = v106;
    if (v106)
    {
      uint64_t v101 = v48;
      LODWORD(v102) = v34;
      if (v107)
      {
        NSString v58 = *(void **)&v106[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
        NSString v59 = v106;
        id v60 = [v58 hideContextMenu];
        if (v60)
        {
          NSString v61 = v60;
          v100[1] = sub_10050BF48(0, (unint64_t *)&qword_101672600);
          id v62 = [v61 title];
          v100[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();

          NSString v63 = String._bridgeToObjectiveC()();
          id v64 = [self systemImageNamed:v63];

          uint64_t v65 = swift_allocObject();
          swift_unknownObjectWeakInit();
          NSString v66 = (void *)swift_allocObject();
          v66[2] = v65;
          v66[3] = v61;
          v66[4] = v59;
          NSString v67 = v59;

          id v52 = sub_100F642DC(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v69 = *((void *)v52 + 2);
          unint64_t v68 = *((void *)v52 + 3);
          if (v69 >= v68 >> 1) {
            id v52 = sub_100F642DC((double *)(v68 > 1), v69 + 1, 1, v52);
          }
          *((void *)v52 + 2) = v69 + 1;
          *((unsigned char *)v52 + v69 + 32) = 9;
        }
        else
        {
          id v52 = _swiftEmptyArrayStorage;
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2151, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2151);
        }
        id v57 = v106;
      }
      else
      {
        NSString v70 = v106;
        id v52 = _swiftEmptyArrayStorage;
      }
      id v71 = [*(id *)&v57[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight] replyContextMenuWithPresentingViewController:v3];
      if (v71)
      {
        id v72 = v71;
        id v73 = [self mainBundle];
        NSString v74 = String._bridgeToObjectiveC()();
        NSString v75 = String._bridgeToObjectiveC()();
        id v76 = [v73 localizedStringForKey:v74 value:v75 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10050BF48(0, (unint64_t *)&qword_101672600);
        NSString v77 = String._bridgeToObjectiveC()();
        id v78 = [self systemImageNamed:v77];

        *(void *)(swift_allocObject() + 16) = v72;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v52 = sub_100F642DC(0, *((void *)v52 + 2) + 1, 1, v52);
        }
        unint64_t v80 = *((void *)v52 + 2);
        unint64_t v79 = *((void *)v52 + 3);
        uint64_t v37 = (uint64_t)v109;
        BOOL v34 = v102;
        uint64_t v48 = v101;
        if (v80 >= v79 >> 1) {
          id v52 = sub_100F642DC((double *)(v79 > 1), v80 + 1, 1, v52);
        }
        *((void *)v52 + 2) = v80 + 1;
        *((unsigned char *)v52 + v80 + 32) = 10;
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2140, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2140);
        uint64_t v37 = (uint64_t)v109;
        BOOL v34 = v102;
        uint64_t v48 = v101;
      }

      LODWORD(v36) = v104;
    }
    else
    {
      id v52 = _swiftEmptyArrayStorage;
    }
    if ((v105 & v36) == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v52 = sub_100F642DC(0, *((void *)v52 + 2) + 1, 1, v52);
      }
      unint64_t v36 = *((void *)v52 + 2);
      unint64_t v81 = *((void *)v52 + 3);
      if (v36 >= v81 >> 1) {
        id v52 = sub_100F642DC((double *)(v81 > 1), v36 + 1, 1, v52);
      }
      *((void *)v52 + 2) = v36 + 1;
      *((unsigned char *)v52 + v36 + 32) = 0;
      LOBYTE(v36) = v104;
    }
  }
  if ((v107 & 1) == 0)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (v103)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        id v52 = sub_100F642DC(0, *((void *)v52 + 2) + 1, 1, v52);
      }
      unint64_t v36 = *((void *)v52 + 2);
      unint64_t v83 = *((void *)v52 + 3);
      unint64_t v84 = v36 + 1;
      if (v36 >= v83 >> 1) {
        id v52 = sub_100F642DC((double *)(v83 > 1), v36 + 1, 1, v52);
      }
      char v85 = 6;
    }
    else
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        id v52 = sub_100F642DC(0, *((void *)v52 + 2) + 1, 1, v52);
      }
      unint64_t v36 = *((void *)v52 + 2);
      unint64_t v86 = *((void *)v52 + 3);
      unint64_t v84 = v36 + 1;
      if (v36 >= v86 >> 1) {
        id v52 = sub_100F642DC((double *)(v86 > 1), v36 + 1, 1, v52);
      }
      char v85 = 5;
    }
    *((void *)v52 + 2) = v84;
    *((unsigned char *)v52 + v36 + 32) = v85;
    LOBYTE(v36) = v104;
  }
  v50(v37, 3, 5, v49);
  char v87 = sub_100DDC744(v48, v37);
  sub_100DBFA10(v37, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if ((v87 & 1) != 0
    || (v50(v37, 4, 5, v49),
        char v88 = sub_100DDC744(v48, v37),
        sub_100DBFA10(v37, type metadata accessor for CRLBoardLibraryViewModel.Folder),
        (v88 & 1) != 0))
  {
    if ((v36 & 1) == 0) {
      goto LABEL_74;
    }
  }
  else
  {
    v50(v37, 5, 5, v49);
    int v93 = sub_100DDC744(v48, v37);
    sub_100DBFA10(v37, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    if ((v36 & 1) == 0) {
      goto LABEL_74;
    }
    if (((v93 | v34) & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v52 = sub_100F642DC(0, *((void *)v52 + 2) + 1, 1, v52);
      }
      unint64_t v95 = *((void *)v52 + 2);
      unint64_t v94 = *((void *)v52 + 3);
      if (v95 >= v94 >> 1) {
        id v52 = sub_100F642DC((double *)(v94 > 1), v95 + 1, 1, v52);
      }
      *((void *)v52 + 2) = v95 + 1;
      *((unsigned char *)v52 + v95 + 32) = 4;
    }
  }
  if (((v108 | v34) & 1) == 0)
  {
    char v89 = swift_isUniquelyReferenced_nonNull_native();
    if (HIDWORD(v105))
    {
      if ((v89 & 1) == 0) {
        id v52 = sub_100F642DC(0, *((void *)v52 + 2) + 1, 1, v52);
      }
      unint64_t v91 = *((void *)v52 + 2);
      unint64_t v90 = *((void *)v52 + 3);
      int64_t v92 = v90 >> 1;
      unint64_t v54 = v91 + 1;
      if (v90 >> 1 <= v91)
      {
        id v52 = sub_100F642DC((double *)(v90 > 1), v91 + 1, 1, v52);
        unint64_t v90 = *((void *)v52 + 3);
        int64_t v92 = v90 >> 1;
      }
      *((void *)v52 + 2) = v54;
      *((unsigned char *)v52 + v91 + 32) = 3;
      int64_t v55 = v91 + 2;
      if (v92 < v55) {
        id v52 = sub_100F642DC((double *)(v90 > 1), v55, 1, v52);
      }
      char v56 = 2;
    }
    else
    {
      if ((v89 & 1) == 0) {
        id v52 = sub_100F642DC(0, *((void *)v52 + 2) + 1, 1, v52);
      }
      unint64_t v54 = *((void *)v52 + 2);
      unint64_t v99 = *((void *)v52 + 3);
      int64_t v55 = v54 + 1;
      char v56 = 1;
      if (v54 >= v99 >> 1) {
        id v52 = sub_100F642DC((double *)(v99 > 1), v54 + 1, 1, v52);
      }
    }
    goto LABEL_15;
  }
LABEL_74:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v52 = sub_100F642DC(0, *((void *)v52 + 2) + 1, 1, v52);
  }
  unint64_t v97 = *((void *)v52 + 2);
  unint64_t v96 = *((void *)v52 + 3);
  if (v97 >= v96 >> 1) {
    id v52 = sub_100F642DC((double *)(v96 > 1), v97 + 1, 1, v52);
  }
  *((void *)v52 + 2) = v97 + 1;
  *((unsigned char *)v52 + v97 + 32) = 7;
  return v52;
}

id sub_100D87448()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v31 - v7;
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31[0] = v0;
  id v14 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v15(v4, 1, v9) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"currentSelectionIsMultipleAndIncludes(item:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2717, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v30) = 2;
    v29[0] = "invalid nil found when unwrapping value";
    v29[1] = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"currentSelectionIsMultipleAndIncludes(item:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2717);
  }
  sub_10051B3EC((uint64_t)v4, (uint64_t)v8, (uint64_t *)&unk_10169B4A0);
  if (v15(v8, 1, v9) == 1)
  {
    sub_100522F00((uint64_t)v8, (uint64_t *)&unk_10169B4A0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  id v16 = v31[0];
  id result = [v31[0] collectionView];
  if (result)
  {
    char v18 = result;
    id v19 = [result indexPathsForSelectedItems];

    if (v19)
    {
      uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v21 = *(void *)(v20 + 16);
      swift_bridgeObjectRelease();
      BOOL v22 = v21 > 1;
    }
    else
    {
      BOOL v22 = 0;
    }
    id result = [v16 collectionView];
    if (result)
    {
      uint64_t v23 = result;
      id v24 = [result indexPathsForSelectedItems];

      if (v24)
      {
        uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        __chkstk_darwin(v26, v27);
        uint64_t v30 = v13;
        BOOL v28 = sub_101022164((uint64_t (*)(char *))sub_100DBFA90, (uint64_t)v29, v25);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
        if (v22) {
          return (id)v28;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      }
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100D87820(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100D878B8, v4, v3);
}

id sub_100D878B8()
{
  id v1 = sub_100D8ADCC();
  v0[7] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_100D8B05C(v0[2]);
    v0[8] = v3;
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = (void *)v0[3];
      id v6 = [v2 contentView];
      [v6 frame];
      double v8 = v7;
      double v10 = v9;
      double v12 = v11;
      double v14 = v13;

      id v15 = [v5 collectionView];
      [v2 convertRect:v15 toView:v8];
      double v17 = v16;
      double v19 = v18;
      double v21 = v20;
      double v23 = v22;

      id result = [v5 collectionView];
      if (result)
      {
        uint64_t v25 = result;
        uint64_t v26 = (void *)v0[3];
        id v27 = [v26 view];
        [v25 convertRect:v27 toView:v17, v19, v21, v23];
        double v29 = v28;
        double v31 = v30;
        double v33 = v32;
        double v35 = v34;

        id result = [v26 view];
        v0[9] = result;
        if (result)
        {
          uint64_t v36 = (uint64_t)result;
          NSString v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, double, double, double, double))((char *)&dword_101684130
                                                                                                  + dword_101684130);
          uint64_t v37 = (void *)swift_task_alloc();
          v0[10] = v37;
          *uint64_t v37 = v0;
          v37[1] = sub_100D87B54;
          uint64_t v38 = v0[3];
          return (id)v40(v4, v38, v36, v29, v31, v33, v35);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return result;
    }
  }
  swift_release();
  uint64_t v39 = (uint64_t (*)(void))v0[1];
  return (id)v39();
}

uint64_t sub_100D87B54()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_100D87CE4;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_100D87C70;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100D87C70()
{
  id v1 = *(void **)(v0 + 56);
  swift_release();
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100D87CE4()
{
  id v1 = *(void **)(v0 + 56);

  swift_release();
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100D87D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[35] = a4;
  v5[36] = a5;
  v5[37] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5[38] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v5[39] = swift_task_alloc();
  v5[40] = type metadata accessor for MainActor();
  v5[41] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[42] = v7;
  v5[43] = v6;
  return _swift_task_switch(sub_100D87E64, v7, v6);
}

uint64_t sub_100D87E64()
{
  v0[44] = *(void *)(v0[35] + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  type metadata accessor for CRLBoardLibrary();
  uint64_t v1 = swift_dynamicCastClass();
  v0[45] = v1;
  if (v1)
  {
    sub_100DBF940(v0[36], v0[38], type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v2 = v0[39];
      uint64_t v3 = v0[38];
      sub_1005057FC(&qword_101677100);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      sub_100DBF9A8(v3, v2, type metadata accessor for CRLBoardIdentifier);
      v0[46] = static MainActor.shared.getter();
      uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
      v0[47] = v5;
      v0[48] = v4;
      return _swift_task_switch(sub_100D88030, v5, v4);
    }
    uint64_t v6 = v0[38];
    swift_release();
    sub_100DBFA10(v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100D88030()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  if (*v2) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = v2[1] == 0xE000000000000000;
  }
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[49] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100D88178;
    uint64_t v5 = v0[39];
    return sub_100ED787C(v5);
  }
  else
  {
    swift_release();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[50] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100D88818;
    uint64_t v8 = v0[36];
    return sub_100D88BD4(v8);
  }
}

uint64_t sub_100D88178(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 416) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 384);
  uint64_t v4 = *(void *)(v2 + 376);
  return _swift_task_switch(sub_100D882A0, v4, v3);
}

uint64_t sub_100D882A0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 344);
  return _swift_task_switch(sub_100D88304, v1, v2);
}

uint64_t sub_100D88304()
{
  if (*(unsigned char *)(v0 + 416) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100D88818;
    uint64_t v2 = *(void *)(v0 + 288);
    return sub_100D88BD4(v2);
  }
  else
  {
    swift_release();
    uint64_t v4 = self;
    id v5 = [v4 mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    id v12 = [v4 mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = v9;
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v36 = v16;
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = [self alertControllerWithTitle:v19 message:v20 preferredStyle:1];

    id v22 = [v4 mainBundle];
    NSString v23 = String._bridgeToObjectiveC()();
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v22 localizedStringForKey:v23 value:v24 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v27 = [self actionWithTitle:v26 style:0 handler:0];

    double v35 = v21;
    [v21 addAction:v27];
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    double v28 = *(void **)(v0 + 280);
    swift_beginAccess();
    double v29 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v31 = sub_100528BE4();
    *(void *)(inited + 32) = v37;
    *(void *)(inited + 40) = v11;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v31;
    *(void *)(inited + 64) = v31;
    *(void *)(inited + 72) = v36;
    *(void *)(inited + 80) = v18;
    id v32 = v29;
    uint64_t v33 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Presenting alert: %@ %@", 23, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    [v28 presentViewController:v35 animated:1 completion:0];
    swift_unknownObjectRelease();
    sub_100DBFA10(*(void *)(v0 + 312), type metadata accessor for CRLBoardIdentifier);
    swift_task_dealloc();
    swift_task_dealloc();
    double v34 = *(uint64_t (**)(void))(v0 + 8);
    return v34();
  }
}

uint64_t sub_100D88818()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 408) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 344);
  uint64_t v4 = *(void *)(v2 + 336);
  if (v0) {
    id v5 = sub_100D889EC;
  }
  else {
    id v5 = sub_100D88954;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100D88954()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_100DBFA10(*(void *)(v0 + 312), type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100D889EC()
{
  uint64_t v1 = *(void *)(v0 + 312);
  swift_release();
  swift_unknownObjectRelease();
  sub_100DBFA10(v1, type metadata accessor for CRLBoardIdentifier);
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Error showing share sheet: %@", 29, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100D88BD4(uint64_t a1)
{
  v2[45] = a1;
  v2[46] = v1;
  v2[47] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[48] = swift_task_alloc();
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[49] = v3;
  v2[50] = *(void *)(v3 + 64);
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[53] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[54] = v5;
  v2[55] = v4;
  return _swift_task_switch(sub_100D88D0C, v5, v4);
}

uint64_t sub_100D88D0C()
{
  v0[56] = *(void *)(v0[46] + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  type metadata accessor for CRLBoardLibrary();
  uint64_t v1 = swift_dynamicCastClass();
  v0[57] = v1;
  if (!v1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentActivityShareOptionsViewController(item:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1822, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentActivityShareOptionsViewController(item:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1822);
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  sub_100DBF940(v0[45], v0[48], type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
  uint64_t v3 = v0[48];
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v4 = v0[52];
    uint64_t v5 = (void *)(v3 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
    v0[58] = *v5;
    v0[59] = v5[1];
    sub_100DBF9A8(v3, v4, type metadata accessor for CRLBoardIdentifier);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    v0[60] = Strong;
    if (Strong)
    {
      swift_unknownObjectRetain();
      uint64_t v7 = (void *)swift_task_alloc();
      v0[61] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_100D89090;
      uint64_t v8 = v0[52];
      return sub_100ED3CA0(v8, 0);
    }
    uint64_t v10 = v0[52];
    swift_unknownObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentActivityShareOptionsViewController(item:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1824, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentActivityShareOptionsViewController(item:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1824);
    sub_100DBFA10(v10, type metadata accessor for CRLBoardIdentifier);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_release();
  sub_100DBFA10(v3, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100D89090(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = v4[54];
    uint64_t v6 = v4[55];
    uint64_t v7 = sub_100D89F44;
  }
  else
  {
    v4[62] = a1;
    uint64_t v5 = v4[54];
    uint64_t v6 = v4[55];
    uint64_t v7 = sub_100D891BC;
  }
  return _swift_task_switch(v7, v5, v6);
}

id sub_100D891BC()
{
  uint64_t v1 = *(void **)(v0 + 496);
  uint64_t v3 = *(void *)(v0 + 464);
  uint64_t v2 = *(void *)(v0 + 472);
  uint64_t v4 = *(void *)(v0 + 456);
  uint64_t v5 = *(void *)(v0 + 416);
  swift_release();
  uint64_t v132 = v1;
  uint64_t v133 = type metadata accessor for CRLBoardShareItemProviderHelper();
  id v6 = sub_100B73A38(v1, v4, v5, v3, v2, 0, 0xF000000000000000);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_101177E70;
  *(void *)(v7 + 32) = v6;
  uint64_t v138 = v7;
  specialized Array._endMutation()();
  *(void *)(v0 + 232) = &type metadata for CRLFeatureFlags;
  unint64_t v8 = sub_1005396A8();
  *(unsigned char *)(v0 + 208) = 18;
  unint64_t v135 = v8;
  *(void *)(v0 + 240) = v8;
  id v131 = v6;
  LOBYTE(v6) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 208);
  if (v6)
  {
    id v9 = sub_100B73D30(*(void **)(v0 + 456), *(void *)(v0 + 416), *(void *)(v0 + 464), *(void *)(v0 + 472));
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v11 = *(void *)(v0 + 472);
  uint64_t v10 = *(void **)(v0 + 480);
  uint64_t v12 = *(void *)(v0 + 464);
  uint64_t v13 = *(void *)(v0 + 416);
  id v14 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
  sub_10050BF48(0, (unint64_t *)&unk_10169FAE0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v137 = [v14 initWithItemProviders:isa];

  id v16 = sub_100648F48(v13, v12, v11, v10, v133);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 272) = &type metadata for CRLFeatureFlags;
  *(void *)(v0 + 280) = v135;
  *(unsigned char *)(v0 + 248) = 18;
  char v17 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 248);
  if (v17)
  {
    uint64_t v18 = (void ***)(v0 + 16);
    uint64_t v129 = *(void *)(v0 + 456);
    NSString v19 = self;
    id v20 = [v19 mainBundle];
    NSString v21 = String._bridgeToObjectiveC()();
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    aBlockCGFloat a = v25;
    uint64_t v127 = (void *)v24;

    id v26 = [v19 mainBundle];
    NSString v27 = String._bridgeToObjectiveC()();
    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = [v26 localizedStringForKey:v27 value:v28 table:0];

    uint64_t v123 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v124 = v30;

    id v31 = [v19 mainBundle];
    NSString v32 = String._bridgeToObjectiveC()();
    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [v31 localizedStringForKey:v32 value:v33 table:0];

    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    id v38 = [v19 mainBundle];
    NSString v39 = String._bridgeToObjectiveC()();
    NSString v40 = String._bridgeToObjectiveC()();

    uint64_t v41 = v0 + 208;
    id v42 = *(id *)(v129 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    sub_100C9D0D0();

    uint64_t v43 = sub_1009F6904();
    uint64_t v45 = v44;
    uint64_t v46 = (void *)swift_allocObject();
    void v46[2] = v16;
    v46[3] = v127;
    v46[4] = aBlocka;
    v46[5] = v43;
    v46[6] = v45;
    v46[7] = v35;
    v46[8] = v37;
    v46[9] = v123;
    v46[10] = v124;
    unint64_t v47 = &unk_10152CA90;
    uint64_t v48 = 40;
    uint64_t v49 = 32;
    *(void *)(v0 + 56) = v46;
    uint64_t v50 = 28;
    uint64_t v51 = 24;
    *(void *)(v0 + 48) = sub_100649870;
  }
  else
  {
    uint64_t v41 = v0 + 208;
    uint64_t v18 = (void ***)(v0 + 112);
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v16;
    *(void *)(v0 + 152) = v52;
    *(void *)(v0 + 144) = sub_100DBEB94;
    unint64_t v47 = &unk_10152C9A0;
    uint64_t v48 = 136;
    uint64_t v49 = 128;
    uint64_t v50 = 124;
    uint64_t v51 = 120;
  }
  *uint64_t v18 = _NSConcreteStackBlock;
  *(_DWORD *)(v0 + v51) = 1107296256;
  *(_DWORD *)(v0 + v50) = 0;
  *(void *)(v0 + v49) = sub_100648564;
  *(void *)(v0 + v48) = v47;
  unint64_t v53 = _Block_copy(v18);
  id v54 = v16;
  swift_release();
  [v137 setPerItemMetadataProvider:v53];
  _Block_release(v53);
  id v55 = sub_100D8ADCC();
  if (v55)
  {
    char v56 = v55;
    uint64_t v134 = sub_100D8B05C(*(void *)(v0 + 360));
    if (v134)
    {
      id v57 = *(void **)(v0 + 368);
      id v58 = [v56 contentView];
      [v58 frame];
      double v60 = v59;
      double v62 = v61;
      double v64 = v63;
      double v66 = v65;

      id v67 = [v57 collectionView];
      [v56 convertRect:v67 toView:v60];
      double v69 = v68;
      double v71 = v70;
      double v73 = v72;
      double v75 = v74;

      id result = [v57 collectionView];
      if (result)
      {
        NSString v77 = result;
        Swift::OpaquePointer v130 = v54;
        id v78 = *(void **)(v0 + 368);
        id v79 = [v78 view];
        [v77 convertRect:v79 toView:v69];
        double v81 = v80;
        double v83 = v82;
        double v85 = v84;
        double v87 = v86;

        id result = [v78 view];
        if (result)
        {
          id v88 = result;
          long long aBlock = (void *)(v41 - 48);
          uint64_t v128 = (void *)(v41 - 144);
          uint64_t v89 = v41;
          swift_bridgeObjectRelease();
          unint64_t v90 = (objc_class *)type metadata accessor for CRLiOSExportAsPDFActivity();
          unint64_t v91 = (char *)objc_allocWithZone(v90);
          swift_unknownObjectWeakInit();
          *(void *)&v91[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_boardActor] = v134;
          swift_unknownObjectWeakAssign();
          *(void *)&v91[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceView] = v88;
          int64_t v92 = (double *)&v91[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceRect];
          double *v92 = v81;
          v92[1] = v83;
          v92[2] = v85;
          v92[3] = v87;
          *(void *)(v0 + 328) = v91;
          *(void *)(v0 + 336) = v90;
          swift_retain();
          [v41 initWithStyle:0];
          uint64_t v94 = swift_allocObject();
          *(_OWORD *)(v94 + 16) = xmmword_101177E70;
          *(void *)(v94 + 32) = v93;
          uint64_t v139 = v94;
          specialized Array._endMutation()();
          uint64_t v95 = v139;
          *(void *)(v0 + 312) = &type metadata for CRLFeatureFlags;
          *(void *)(v0 + 320) = v135;
          *(unsigned char *)(v0 + 288) = 18;
          id v136 = v93;
          char v96 = isFeatureEnabled(_:)();
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v41 + 80);
          if (v96)
          {
            uint64_t v97 = *(void *)(v0 + 408);
            sub_100DBF940(*(void *)(v0 + 416), v97, type metadata accessor for CRLBoardIdentifier);
            uint64_t v98 = (objc_class *)type metadata accessor for CRLSendACopyActivity_i();
            unint64_t v99 = (char *)objc_allocWithZone(v98);
            *(void *)&v99[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_activityItems] = 0;
            *(void *)&v99[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_collaborationItem] = 0;
            sub_100DBF940(v97, (uint64_t)&v99[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
            *(void *)(v0 + 344) = v99;
            *(void *)(v0 + 352) = v98;
            [v89 initWithStyle:UITableViewStyleGrouped];
            sub_100DBFA10(v97, type metadata accessor for CRLBoardIdentifier);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            uint64_t v95 = v139;
          }
          uint64_t v100 = *(void *)(v0 + 456);
          uint64_t v102 = *(void *)(v0 + 408);
          uint64_t v101 = *(void *)(v0 + 416);
          uint64_t v103 = *(void *)(v0 + 392);
          uint64_t v104 = swift_allocObject();
          *(void *)(v104 + 16) = v95;
          *(void *)(v0 + 192) = sub_100649810;
          *(void *)(v0 + 200) = v104;
          *(void *)(v0 + 160) = _NSConcreteStackBlock;
          *(void *)(v0 + 168) = *(void *)"";
          *(void *)(v0 + 176) = sub_1006481E8;
          *(void *)(v0 + 184) = &unk_10152C9F0;
          uint64_t v105 = _Block_copy(aBlock);
          swift_release();
          [v137 setApplicationActivitiesProvider:v105];
          _Block_release(v105);
          type metadata accessor for CRLSelectionAwareActivityViewController();
          id v106 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
          id v107 = v137;
          id v108 = [v106 initWithActivityItemsConfiguration:v107];
          uint64_t v109 = sub_100DC6BC4(v108);

          sub_100DBF940(v101, v102, type metadata accessor for CRLBoardIdentifier);
          unint64_t v110 = (*(unsigned __int8 *)(v103 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
          uint64_t v111 = swift_allocObject();
          *(void *)(v111 + 16) = v100;
          sub_100DBF9A8(v102, v111 + v110, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 96) = sub_100DBEC94;
          *(void *)(v0 + 104) = v111;
          *(void *)(v0 + 64) = _NSConcreteStackBlock;
          *(void *)(v0 + 72) = *(void *)"";
          *(void *)(v0 + 80) = sub_100864858;
          *(void *)(v0 + 88) = &unk_10152CA40;
          uint64_t v112 = _Block_copy(v128);
          swift_unknownObjectRetain();
          id v113 = v109;
          swift_retain();
          swift_release();
          [v113 setCompletionWithItemsHandler:v112];
          _Block_release(v112);

          id v114 = [v113 popoverPresentationController];
          if (v114)
          {
            uint64_t v115 = v114;
            id v116 = [*(id *)(v0 + 368) view];
            [v115 setSourceView:v116];
          }
          uint64_t v117 = *(void *)(v0 + 416);
          uint64_t v118 = *(void **)(v0 + 368);
          id v119 = [v113 popoverPresentationController:v123, v124];
          [v119 setSourceRect:v81, v83, v85, v87];

          [v118 presentViewController:v113 animated:1 completion:0];
          swift_release();

          swift_unknownObjectRelease();
          swift_release();

          swift_unknownObjectRelease();
          uint64_t v120 = v117;
          goto LABEL_22;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return result;
    }
  }
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v121 = *(void *)(v0 + 416);
  swift_bridgeObjectRelease();
  uint64_t v120 = v121;
LABEL_22:
  sub_100DBFA10(v120, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v122 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v122();
}

id sub_100D89F44()
{
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v1 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v4 = *(void *)(v0 + 416);
  swift_release();
  uint64_t v5 = type metadata accessor for CRLBoardShareItemProviderHelper();
  id v6 = sub_100B73A38(0, v3, v4, v2, v1, 0, 0xF000000000000000);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_101177E70;
  *(void *)(v7 + 32) = v6;
  uint64_t v133 = v7;
  specialized Array._endMutation()();
  *(void *)(v0 + 232) = &type metadata for CRLFeatureFlags;
  unint64_t v8 = sub_1005396A8();
  *(unsigned char *)(v0 + 208) = 18;
  unint64_t v131 = v8;
  *(void *)(v0 + 240) = v8;
  id v130 = v6;
  LOBYTE(v6) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 208);
  if (v6)
  {
    id v9 = sub_100B73D30(*(void **)(v0 + 456), *(void *)(v0 + 416), *(void *)(v0 + 464), *(void *)(v0 + 472));
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v10 = *(void *)(v0 + 472);
  uint64_t v11 = *(void **)(v0 + 480);
  uint64_t v12 = *(void *)(v0 + 464);
  uint64_t v13 = *(void *)(v0 + 416);
  id v14 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
  sub_10050BF48(0, (unint64_t *)&unk_10169FAE0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v14 initWithItemProviders:isa];

  id v17 = sub_100648F48(v13, v12, v10, v11, v5);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 272) = &type metadata for CRLFeatureFlags;
  *(void *)(v0 + 280) = v131;
  *(unsigned char *)(v0 + 248) = 18;
  char v18 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 248);
  if (v18)
  {
    NSString v19 = (void ***)(v0 + 16);
    uint64_t v126 = *(void *)(v0 + 456);
    id v129 = v16;
    id v20 = self;
    id v21 = [v20 mainBundle];
    NSString v22 = String._bridgeToObjectiveC()();
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [v21 localizedStringForKey:v22 value:v23 table:0];

    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    long long aBlock = v26;
    uint64_t v125 = (void *)v25;

    id v27 = [v20 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

    uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v123 = v31;

    id v32 = [v20 mainBundle];
    NSString v33 = String._bridgeToObjectiveC()();
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = [v32 localizedStringForKey:v33 value:v34 table:0];

    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;

    id v39 = [v20 mainBundle];
    NSString v40 = String._bridgeToObjectiveC()();
    id v16 = v129;
    NSString v41 = String._bridgeToObjectiveC()();

    id v42 = *(id *)(v126 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    sub_100C9D0D0();

    uint64_t v43 = sub_1009F6904();
    uint64_t v45 = v44;
    uint64_t v46 = (void *)swift_allocObject();
    void v46[2] = v17;
    v46[3] = v125;
    v46[4] = aBlock;
    v46[5] = v43;
    v46[6] = v45;
    v46[7] = v36;
    v46[8] = v38;
    v46[9] = v122;
    v46[10] = v123;
    unint64_t v47 = &unk_10152CA90;
    uint64_t v48 = 40;
    uint64_t v49 = 32;
    *(void *)(v0 + 56) = v46;
    uint64_t v50 = 28;
    uint64_t v51 = 24;
    *(void *)(v0 + 48) = sub_100649870;
  }
  else
  {
    NSString v19 = (void ***)(v0 + 112);
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v17;
    *(void *)(v0 + 152) = v52;
    *(void *)(v0 + 144) = sub_100DBEB94;
    unint64_t v47 = &unk_10152C9A0;
    uint64_t v48 = 136;
    uint64_t v49 = 128;
    uint64_t v50 = 124;
    uint64_t v51 = 120;
  }
  *NSString v19 = _NSConcreteStackBlock;
  *(_DWORD *)(v0 + v51) = 1107296256;
  *(_DWORD *)(v0 + v50) = 0;
  *(void *)(v0 + v49) = sub_100648564;
  *(void *)(v0 + v48) = v47;
  unint64_t v53 = _Block_copy(v19);
  id v54 = v17;
  swift_release();
  [v16 setPerItemMetadataProvider:v53];
  _Block_release(v53);
  id v55 = sub_100D8ADCC();
  if (v55)
  {
    char v56 = v55;
    uint64_t v128 = sub_100D8B05C(*(void *)(v0 + 360));
    if (v128)
    {
      id v57 = *(void **)(v0 + 368);
      id v58 = [v56 contentView];
      [v58 frame];
      double v60 = v59;
      double v62 = v61;
      double v64 = v63;
      double v66 = v65;

      id v67 = [v57 collectionView];
      [v56 convertRect:v67 toView:v60];
      double v69 = v68;
      double v71 = v70;
      double v73 = v72;
      double v75 = v74;

      id result = [v57 collectionView];
      if (result)
      {
        NSString v77 = result;
        uint64_t v127 = v54;
        id v78 = *(void **)(v0 + 368);
        id v79 = [v78 view];
        [v77 convertRect:v79 toView:v69];
        double v81 = v80;
        double v83 = v82;
        double v85 = v84;
        double v87 = v86;

        id result = [v78 view];
        if (result)
        {
          id v88 = result;
          swift_bridgeObjectRelease();
          uint64_t v89 = (objc_class *)type metadata accessor for CRLiOSExportAsPDFActivity();
          unint64_t v90 = (char *)objc_allocWithZone(v89);
          swift_unknownObjectWeakInit();
          *(void *)&v90[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_boardActor] = v128;
          swift_unknownObjectWeakAssign();
          *(void *)&v90[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceView] = v88;
          unint64_t v91 = (double *)&v90[OBJC_IVAR____TtC8Freeform25CRLiOSExportAsPDFActivity_sourceRect];
          *unint64_t v91 = v81;
          v91[1] = v83;
          v91[2] = v85;
          v91[3] = v87;
          *(void *)(v0 + 328) = v90;
          *(void *)(v0 + 336) = v89;
          swift_retain();
          [v0 init];
          uint64_t v93 = swift_allocObject();
          *(_OWORD *)(v93 + 16) = xmmword_101177E70;
          *(void *)(v93 + 32) = v92;
          uint64_t v134 = v93;
          specialized Array._endMutation()();
          uint64_t v94 = v134;
          *(void *)(v0 + 312) = &type metadata for CRLFeatureFlags;
          *(void *)(v0 + 320) = v131;
          *(unsigned char *)(v0 + 288) = 18;
          id v132 = v92;
          char v95 = isFeatureEnabled(_:)();
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 288);
          if (v95)
          {
            uint64_t v96 = *(void *)(v0 + 408);
            sub_100DBF940(*(void *)(v0 + 416), v96, type metadata accessor for CRLBoardIdentifier);
            uint64_t v97 = (objc_class *)type metadata accessor for CRLSendACopyActivity_i();
            uint64_t v98 = (char *)objc_allocWithZone(v97);
            *(void *)&v98[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_activityItems] = 0;
            *(void *)&v98[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_collaborationItem] = 0;
            sub_100DBF940(v96, (uint64_t)&v98[OBJC_IVAR____TtC8Freeform22CRLSendACopyActivity_i_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
            *(void *)(v0 + 344) = v98;
            *(void *)(v0 + 352) = v97;
            [super init];
            sub_100DBFA10(v96, type metadata accessor for CRLBoardIdentifier);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            uint64_t v94 = v134;
          }
          uint64_t v99 = *(void *)(v0 + 456);
          uint64_t v101 = *(void *)(v0 + 408);
          uint64_t v100 = *(void *)(v0 + 416);
          uint64_t v102 = *(void *)(v0 + 392);
          uint64_t v103 = swift_allocObject();
          *(void *)(v103 + 16) = v94;
          *(void *)(v0 + 192) = sub_100649810;
          *(void *)(v0 + 200) = v103;
          *(void *)(v0 + 160) = _NSConcreteStackBlock;
          *(void *)(v0 + 168) = *(void *)"";
          *(void *)(v0 + 176) = sub_1006481E8;
          *(void *)(v0 + 184) = &unk_10152C9F0;
          uint64_t v104 = _Block_copy((const void *)(v0 + 160));
          swift_release();
          [v16 setApplicationActivitiesProvider:v104];
          _Block_release(v104);
          type metadata accessor for CRLSelectionAwareActivityViewController();
          id v105 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
          id v106 = v16;
          id v107 = [v105 initWithActivityItemsConfiguration:v106];
          id v108 = sub_100DC6BC4(v107);

          sub_100DBF940(v100, v101, type metadata accessor for CRLBoardIdentifier);
          unint64_t v109 = (*(unsigned __int8 *)(v102 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
          uint64_t v110 = swift_allocObject();
          *(void *)(v110 + 16) = v99;
          sub_100DBF9A8(v101, v110 + v109, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 96) = sub_100DBEC94;
          *(void *)(v0 + 104) = v110;
          *(void *)(v0 + 64) = _NSConcreteStackBlock;
          *(void *)(v0 + 72) = *(void *)"";
          *(void *)(v0 + 80) = sub_100864858;
          *(void *)(v0 + 88) = &unk_10152CA40;
          uint64_t v111 = _Block_copy((const void *)(v0 + 64));
          swift_unknownObjectRetain();
          id v112 = v108;
          swift_retain();
          swift_release();
          [v112 setCompletionWithItemsHandler:v111];
          _Block_release(v111);

          id v113 = [v112 popoverPresentationController];
          if (v113)
          {
            id v114 = v113;
            id v115 = [*(id *)(v0 + 368) view];
            [v114 setSourceView:v115];
          }
          uint64_t v116 = *(void *)(v0 + 416);
          uint64_t v117 = *(void **)(v0 + 368);
          id v118 = [v112 popoverPresentationController];
          [v118 setSourceRect:v81, v83, v85, v87];

          [v117 presentViewController:v112 animated:1 completion:0];
          swift_release();

          swift_unknownObjectRelease();
          swift_release();

          swift_unknownObjectRelease();
          uint64_t v119 = v116;
          goto LABEL_22;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return result;
    }
  }
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v120 = *(void *)(v0 + 416);
  swift_bridgeObjectRelease();
  uint64_t v119 = v120;
LABEL_22:
  sub_100DBFA10(v119, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v121 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v121();
}

id sub_100D8ACC0@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    id result = (id)swift_bridgeObjectRelease_n();
    if (a1)
    {
LABEL_7:
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
    }
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    if ((v10 & 1) == 0 || a1) {
      goto LABEL_7;
    }
  }
  *(void *)(a3 + 24) = sub_10050BF48(0, (unint64_t *)&unk_10168E1E0);
  *(void *)a3 = a2;

  return a2;
}

id sub_100D8ADCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  char v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100522F00((uint64_t)v5, (uint64_t *)&unk_10169B4A0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  id result = [v1 collectionView];
  if (result)
  {
    id v14 = result;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v12 = [v14 cellForItemAtIndexPath:isa];

    if (!v12)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"cellView(for:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1947, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cellView(for:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1947);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_100D8B05C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v20 - v12;
  type metadata accessor for CRLBoardLibrary();
  uint64_t v14 = swift_dynamicCastClass();
  if (!v14)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardActor(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1934, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardActor(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1934);
    return 0;
  }
  uint64_t v15 = v14;
  sub_100DBF940(a1, (uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100DBFA10((uint64_t)v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
    return 0;
  }
  sub_1005057FC(&qword_101677100);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_100DBF9A8((uint64_t)v5, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  sub_100DBF940((uint64_t)v13, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
  uint64_t v16 = *(void **)(v15 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  type metadata accessor for CRLBoardActor();
  uint64_t v17 = swift_allocObject();
  id v18 = v16;
  swift_defaultActor_initialize();
  sub_100DBF9A8((uint64_t)v9, v17 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v17 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store) = v18;
  swift_unknownObjectRelease();
  sub_100DBFA10((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  return v17;
}

void sub_100D8B358(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v18 = (id)static OS_os_log.shareState;
    uint64_t v19 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v19, (uint64_t)"UIActivityViewController returned without completing. Delete any cached shares.", 79, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 1, 1, v20);
    sub_100DBF940(a6, (uint64_t)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for MainActor();
    id v21 = a5;
    uint64_t v22 = static MainActor.shared.getter();
    unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    id v24 = (void *)swift_allocObject();
    void v24[2] = v22;
    v24[3] = &protocol witness table for MainActor;
    v24[4] = v21;
    sub_100DBF9A8((uint64_t)v13, (uint64_t)v24 + v23, type metadata accessor for CRLBoardIdentifier);
    sub_1005912D0((uint64_t)v17, (uint64_t)&unk_10169B6B8, (uint64_t)v24);
    swift_release();
  }
}

uint64_t sub_100D8B5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = type metadata accessor for MainActor();
  v5[3] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10053DCA8;
  return sub_100EDA098(a5);
}

uint64_t sub_100D8B69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = type metadata accessor for MainActor();
  v5[19] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[20] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100D8B758;
  return sub_100D8BAC0(a5);
}

uint64_t sub_100D8B758()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100D8B914;
  }
  else {
    uint64_t v4 = sub_100D8B8B4;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100D8B8B4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100D8B914()
{
  swift_release();
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Error showing manage share UI. Error: %@", 40, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100D8BAC0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[5] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[8] = v4;
  v2[9] = v3;
  return _swift_task_switch(sub_100D8BBB4, v4, v3);
}

uint64_t sub_100D8BBB4()
{
  v0[10] = *(void *)(v0[3] + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  type metadata accessor for CRLBoardLibrary();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    uint64_t v2 = v1;
    sub_100DBF940(v0[2], v0[5], type metadata accessor for CRLBoardLibraryViewModel.Item);
    EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
    uint64_t v4 = v0[5];
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v5 = v0[6];
      sub_1005057FC(&qword_101677100);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      sub_100DBF9A8(v4, v5, type metadata accessor for CRLBoardIdentifier);
      uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController);
      v0[11] = v6;
      uint64_t v7 = *(void **)(*(void *)(v6 + 112) + 112);
      v0[12] = v7;
      swift_retain();
      id v8 = v7;
      uint64_t v9 = (void *)swift_task_alloc();
      v0[13] = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_100D8BE54;
      uint64_t v10 = v0[6];
      return sub_100ED3CA0(v10, 0);
    }
    swift_release();
    sub_100DBFA10(v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentCloudShareOptionsViewController(item:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1961, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentCloudShareOptionsViewController(item:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 1961);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100D8BE54(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 112) = a1;
  *(void *)(v4 + 120) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 72);
  uint64_t v6 = *(void *)(v3 + 64);
  if (v1) {
    uint64_t v7 = sub_100D8C12C;
  }
  else {
    uint64_t v7 = sub_100D8BF98;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100D8BF98()
{
  uint64_t v1 = v0[14];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[14];
    uint64_t v3 = (void *)v0[12];
    uint64_t v4 = v0[6];
    uint64_t v5 = (void *)v0[3];
    id v6 = objc_allocWithZone((Class)UICloudSharingController);
    id v7 = v2;
    id v8 = [v6 initWithShare:v7 container:v3];
    [v8 setDelegate:v5];
    [v8 setModalPresentationStyle:2];
    [v5 presentViewController:v8 animated:1 completion:0];

    swift_release();
    swift_unknownObjectRelease();

    sub_100DBFA10(v4, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    uint64_t v9 = (void *)v0[12];
    sub_100DBFA10(v0[6], type metadata accessor for CRLBoardIdentifier);

    swift_release();
    swift_unknownObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100D8C12C()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = v0[6];
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  sub_100DBFA10(v2, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100D8C3CC(void *a1)
{
  id v2 = [a1 share];
  if (v2)
  {
    uint64_t v3 = v2;
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v4 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = sub_10050BF48(0, &qword_101672C00);
    *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101682FE0, &qword_101672C00);
    *(void *)(inited + 32) = v3;
    id v6 = v4;
    id v7 = v3;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Share completed or updated for share %@", 39, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v9 = [a1 share];
    sub_100DBB3B8(v9, 0);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"cloudSharingControllerDidSaveShare(_:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2015, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cloudSharingControllerDidSaveShare(_:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2015);
  }
}

uint64_t sub_100D8C6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  v7[2] = type metadata accessor for MainActor();
  v7[3] = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_task_alloc();
  v7[4] = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_100766CCC;
  return sub_100ED4738(a5, a6, a7);
}

id sub_100D8C930(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v4 = Strong;
  id result = [Strong collectionView];
  if (result)
  {
    id v6 = result;
    id v7 = [result indexPathsForVisibleItems];

    type metadata accessor for IndexPath();
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    __chkstk_darwin(v9, v10);
    _OWORD v20[2] = a2;
    LOBYTE(v6) = sub_101022164((uint64_t (*)(char *))sub_100DBFA90, (uint64_t)v20, v8);
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      goto LABEL_14;
    }
    id result = [v4 collectionView];
    if (result)
    {
      uint64_t v11 = result;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v13 = [v11 cellForItemAtIndexPath:isa];

      if (v13)
      {
        swift_getObjectType();
        uint64_t v14 = swift_conformsToProtocol2();
        if (v14) {
          uint64_t v15 = v14;
        }
        else {
          uint64_t v15 = 0;
        }
        if (v14) {
          id v16 = v13;
        }
        else {
          id v16 = 0;
        }
        if (v16)
        {
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 136))(ObjectType, v15);
          uint64_t v19 = v4;
          uint64_t v4 = v13;
        }
        else
        {
          uint64_t v18 = 0;
          uint64_t v19 = v13;
        }

        goto LABEL_18;
      }
LABEL_14:
      uint64_t v18 = 0;
LABEL_18:

      return (id)v18;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Class sub_100D8CB24(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  uint64_t v143 = a4;
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v146 = (uint64_t)v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v148 = (char *)v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v141 - v18;
  uint64_t v155 = type metadata accessor for CRLBoardViewModelMetadata(0);
  unint64_t v145 = *(double **)(v155 - 8);
  __chkstk_darwin(v155, v20);
  uint64_t v150 = (uint64_t)v141 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v156 = (uint64_t)v141 - v24;
  __chkstk_darwin(v25, v26);
  NSString v28 = (char *)v141 - v27;
  uint64_t v29 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v149 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v30);
  uint64_t v151 = v31;
  uint64_t v152 = (uint64_t)v141 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  id v35 = (char *)v141 - v34;
  uint64_t v36 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v142 = *(void *)(v36 - 8);
  __chkstk_darwin(v36 - 8, v37);
  id v39 = (char *)v141 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIMenuElementSize v158 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  unsigned int v153 = sub_100D87448();
  uint64_t v154 = a3;
  sub_100DBF940(a3, (uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100DBF9A8((uint64_t)v35, (uint64_t)v39, type metadata accessor for CRLBoardIdentifier);
    sub_100ED7F04((uint64_t)v39, (uint64_t)v19);
    NSString v40 = a2;
    uint64_t v43 = (int *)v155;
    (*((void (**)(char *, void, uint64_t, uint64_t))v145 + 7))(v19, 0, 1, v155);
    sub_100DBF9A8((uint64_t)v19, (uint64_t)v28, type metadata accessor for CRLBoardViewModelMetadata);
    int v147 = v28[v43[10]];
    uint64_t v44 = v146;
    sub_100522E9C((uint64_t)&v28[v43[7]], v146, (uint64_t *)&unk_1016741E0);
    uint64_t v45 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
    int v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v44, 1, v45);
    if (v46 == 1)
    {
      sub_100522F00(v44, (uint64_t *)&unk_1016741E0);
      int v42 = 1;
    }
    else
    {
      int v42 = *(unsigned __int8 *)(v44 + 24);
      sub_100DBFA10(v44, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    }
    unint64_t v47 = &v28[v43[11]];
    if (v47[8])
    {
      LODWORD(v146) = 0;
    }
    else
    {
      unint64_t v48 = *(void *)v47;
      LODWORD(v146) = v48 >= sub_1002094A4();
    }
    sub_100DBFA10((uint64_t)v39, type metadata accessor for CRLBoardIdentifier);
    int v41 = v28[v43[8]];
    sub_100DBFA10((uint64_t)v28, type metadata accessor for CRLBoardViewModelMetadata);
  }
  else
  {
    sub_100DBFA10((uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int v41 = 0;
    LODWORD(v146) = 0;
    int v42 = 0;
    int v147 = 0;
    NSString v40 = a2;
  }
  uint64_t v49 = (uint64_t)v40 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  uint64_t v50 = sub_1005057FC(&qword_101670F30);
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
  v51(v9, 5, 5, v50);
  char v52 = sub_100DDC744(v49, (uint64_t)v9);
  sub_100DBFA10((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  if (v52)
  {
    v51(v9, 5, 5, v50);
    sub_10060E94C(v49, (uint64_t)v9, (uint64_t)&_mh_execute_header, (uint64_t)"createContextMenuElementToRecover(item:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2279);
    sub_100DBFA10((uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    id v53 = [self mainBundle];
    NSString v54 = String._bridgeToObjectiveC()();
    NSString v55 = String._bridgeToObjectiveC()();
    id v56 = [v53 localizedStringForKey:v54 value:v55 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v57 = String._bridgeToObjectiveC()();
    id v58 = [self systemImageNamed:v57];

    uint64_t v59 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v60 = v154;
    uint64_t v61 = v152;
    sub_100DBF940(v154, v152, type metadata accessor for CRLBoardLibraryViewModel.Item);
    unint64_t v62 = (*(unsigned __int8 *)(v149 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = v59;
    sub_100DBF9A8(v61, v63 + v62, type metadata accessor for CRLBoardLibraryViewModel.Item);
    UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_63;
  }
  if ((v153 & 1) == 0)
  {
    double v64 = v143;
    if (v143)
    {
      if (v41)
      {
        double v65 = *(void **)&v143[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight];
        double v66 = v143;
        id v67 = [v65 hideContextMenu];
        if (v67)
        {
          double v68 = v67;
          v141[1] = sub_10050BF48(0, (unint64_t *)&qword_101672600);
          id v69 = [v68 title];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          NSString v70 = String._bridgeToObjectiveC()();
          id v71 = [self systemImageNamed:v70];

          uint64_t v72 = swift_allocObject();
          swift_unknownObjectWeakInit();
          double v73 = (void *)swift_allocObject();
          _OWORD v73[2] = v72;
          v73[3] = v68;
          v73[4] = v66;
          double v74 = v66;
          id v75 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          double v64 = v143;
        }
        else
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2151, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightHide(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2151);
        }
      }
      else
      {
        id v76 = v143;
      }
      id v77 = [*(id *)&v64[OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_swHighlight] replyContextMenuWithPresentingViewController:v40];
      if (v77)
      {
        id v78 = v77;
        id v79 = [self mainBundle];
        NSString v80 = String._bridgeToObjectiveC()();
        NSString v81 = String._bridgeToObjectiveC()();
        id v82 = [v79 localizedStringForKey:v80 value:v81 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10050BF48(0, (unint64_t *)&qword_101672600);
        NSString v83 = String._bridgeToObjectiveC()();
        id v84 = [self systemImageNamed:v83];

        *(void *)(swift_allocObject() + 16) = v78;
        id v85 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2140, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuElementForSharedHighlightReply(_:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2140);
      }
    }
    if (((v42 ^ 1 | v147) & 1) == 0)
    {
      sub_10050BF48(0, (unint64_t *)&qword_101672600);
      id v86 = [self mainBundle];
      NSString v87 = String._bridgeToObjectiveC()();
      NSString v88 = String._bridgeToObjectiveC()();
      id v89 = [v86 localizedStringForKey:v87 value:v88 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v90 = String._bridgeToObjectiveC()();
      id v91 = [self systemImageNamed:v90];

      uint64_t v92 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v93 = v152;
      sub_100DBF940(v154, v152, type metadata accessor for CRLBoardLibraryViewModel.Item);
      unint64_t v94 = (*(unsigned __int8 *)(v149 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
      uint64_t v95 = swift_allocObject();
      *(void *)(v95 + 16) = v92;
      sub_100DBF9A8(v93, v95 + v94, type metadata accessor for CRLBoardLibraryViewModel.Item);
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  uint64_t v60 = v154;
  uint64_t v96 = sub_100D8F604(v154);
  uint64_t v97 = self;
  uint64_t v98 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v99 = v152;
  sub_100DBF940(v60, v152, type metadata accessor for CRLBoardLibraryViewModel.Item);
  unint64_t v100 = *(unsigned __int8 *)(v149 + 80);
  uint64_t v149 = v100 | 7;
  uint64_t v101 = swift_allocObject();
  *(void *)(v101 + 16) = v96;
  *(void *)(v101 + 24) = v98;
  sub_100DBF9A8(v99, v101 + ((v100 + 32) & ~v100), type metadata accessor for CRLBoardLibraryViewModel.Item);
  aBlock[4] = sub_100DBDD54;
  void aBlock[5] = v101;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100594810;
  void aBlock[3] = &unk_10152C658;
  uint64_t v102 = _Block_copy(aBlock);
  swift_release();
  id v103 = [v97 elementWithUncachedProvider:v102];
  _Block_release(v102);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v104 = (uint64_t)v148;
  uint64_t v105 = v155;
  if (v153)
  {
    Class result = (Class)[v40 collectionView];
    if (!result)
    {
      __break(1u);
      return result;
    }
    Class v107 = result;
    id v108 = [(objc_class *)result indexPathsForSelectedItems];

    uint64_t v143 = (char *)v100;
    if (v108)
    {
      type metadata accessor for IndexPath();
      uint64_t v109 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v110 = v40;
      uint64_t v111 = sub_100DB2190(v109, (uint64_t)v110);

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v111 = _swiftEmptyArrayStorage;
    }
    id v112 = sub_100DD85D8((uint64_t)v111);
    swift_bridgeObjectRelease();
    uint64_t v113 = *((void *)v112 + 2);
    if (v113)
    {
      uint64_t v114 = (uint64_t)v112
           + ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80));
      id v115 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v145 + 7);
      uint64_t v116 = *(void *)(v142 + 72);
      unint64_t v145 = v112;
      swift_bridgeObjectRetain();
      uint64_t v144 = v40;
      while (1)
      {
        sub_100ED7F04(v114, v104);
        uint64_t v117 = v115;
        (*v115)(v104, 0, 1, v105);
        uint64_t v118 = v156;
        sub_100DBF9A8(v104, v156, type metadata accessor for CRLBoardViewModelMetadata);
        char v119 = *(unsigned char *)(v118 + *(int *)(v105 + 40));
        uint64_t v120 = v118;
        uint64_t v121 = v150;
        sub_100DBF940(v120, v150, type metadata accessor for CRLBoardViewModelMetadata);
        if (v119) {
          break;
        }
        uint64_t v122 = v121 + *(int *)(v105 + 44);
        if (*(unsigned char *)(v122 + 8))
        {
          sub_100DBFA10(v121, type metadata accessor for CRLBoardViewModelMetadata);
          sub_100DBFA10(v156, type metadata accessor for CRLBoardViewModelMetadata);
          id v115 = v117;
        }
        else
        {
          unint64_t v123 = *(void *)v122;
          unint64_t v124 = sub_1002094A4();
          sub_100DBFA10(v121, type metadata accessor for CRLBoardViewModelMetadata);
          uint64_t v105 = v155;
          sub_100DBFA10(v156, type metadata accessor for CRLBoardViewModelMetadata);
          BOOL v125 = v123 >= v124;
          uint64_t v104 = (uint64_t)v148;
          id v115 = v117;
          if (v125) {
            goto LABEL_60;
          }
        }
        v114 += v116;
        if (!--v113)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v60 = v154;
          goto LABEL_54;
        }
      }
      sub_100DBFA10(v121, type metadata accessor for CRLBoardViewModelMetadata);
      sub_100DBFA10(v156, type metadata accessor for CRLBoardViewModelMetadata);
LABEL_60:
      swift_bridgeObjectRelease_n();
      uint64_t v60 = v154;
      goto LABEL_61;
    }
    swift_bridgeObjectRelease();
LABEL_54:
    unint64_t v100 = (unint64_t)v143;
    if ((v147 | v146)) {
      goto LABEL_63;
    }
LABEL_55:
    if (sub_100D73D28())
    {
      unint64_t v126 = ~v100;
      sub_10050BF48(0, (unint64_t *)&qword_101672600);
      id v127 = [self mainBundle];
      NSString v128 = String._bridgeToObjectiveC()();
      NSString v129 = String._bridgeToObjectiveC()();
      id v130 = [v127 localizedStringForKey:v128 value:v129 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v131 = String._bridgeToObjectiveC()();
      id v132 = [self systemImageNamed:v131];

      uint64_t v133 = swift_allocObject();
      swift_unknownObjectWeakInit();
      unint64_t v134 = v100;
      uint64_t v135 = v152;
      sub_100DBF940(v60, v152, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v136 = (v134 + 24) & v126;
      uint64_t v137 = swift_allocObject();
      *(void *)(v137 + 16) = v133;
      sub_100DBF9A8(v135, v137 + v136, type metadata accessor for CRLBoardLibraryViewModel.Item);
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
LABEL_61:
    if (((v147 | v153 | v146) & 1) == 0)
    {
      unint64_t v138 = sub_100D8E31C(v60);
      sub_1006E3144(v138);
    }
    goto LABEL_63;
  }
  if (((v147 | v146) & 1) == 0) {
    goto LABEL_55;
  }
LABEL_63:
  sub_100D8ED18(v60);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  sub_10050BF48(0, &qword_101673A80);
  v139._countAndFlagsBits = 0;
  v139._object = (void *)0xE000000000000000;
  v159.value.super.Class isa = 0;
  v159.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v139, (Swift::String_optional)0, v159, 0, 0xFFFFFFFFFFFFFFFFLL, v158, v140).super.super.isa;
}

uint64_t sub_100D8E31C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v56 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v56 + 64);
  __chkstk_darwin(v12, v14);
  uint64_t v15 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v54 - v18;
  uint64_t v20 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v58 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v57 = a1;
  sub_100DBF940(a1, (uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100DBFA10((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_4:
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    id v24 = [self mainBundle];
    NSString v25 = String._bridgeToObjectiveC()();
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = [v24 localizedStringForKey:v25 value:v26 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v28 = String._bridgeToObjectiveC()();
    [self systemImageNamed:v28];

    uint64_t v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100DBF940(v57, (uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
    unint64_t v30 = (*(unsigned __int8 *)(v56 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v29;
    sub_100DBF9A8((uint64_t)v15, v31 + v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_5;
  }
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  sub_100DBF9A8((uint64_t)v19, (uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
  sub_100ED7F04((uint64_t)v23, (uint64_t)v11);
  sub_100522E9C((uint64_t)&v11[*(int *)(v8 + 28)], (uint64_t)v7, (uint64_t *)&unk_1016741E0);
  uint64_t v35 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v7, 1, v35);
  sub_100522F00((uint64_t)v7, (uint64_t *)&unk_1016741E0);
  sub_100DBFA10((uint64_t)v11, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100DBFA10((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
  if (v36 == 1) {
    goto LABEL_4;
  }
  NSString v37 = String._bridgeToObjectiveC()();
  id v55 = self;
  v54[1] = [v55 systemImageNamed:v37];

  uint64_t v38 = sub_10050BF48(0, (unint64_t *)&qword_101672600);
  id v39 = self;
  id v40 = [v39 mainBundle];
  NSString v41 = String._bridgeToObjectiveC()();
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = [v40 localizedStringForKey:v41 value:v42 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v44 = swift_allocObject();
  v54[2] = v2;
  swift_unknownObjectWeakInit();
  sub_100DBF940(v57, (uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
  unint64_t v45 = (*(unsigned __int8 *)(v56 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v44;
  sub_100DBF9A8((uint64_t)v15, v46 + v45, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v56 = v38;
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v47 = [v39 mainBundle];
  NSString v48 = String._bridgeToObjectiveC()();
  NSString v49 = String._bridgeToObjectiveC()();
  id v50 = [v47 localizedStringForKey:v48 value:v49 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v51 = String._bridgeToObjectiveC()();
  [v55 systemImageNamed:v51];

  uint64_t v52 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100DBF940(v57, (uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v52;
  sub_100DBF9A8((uint64_t)v15, v53 + v45, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_5:
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v32 = (double *)v58;
  if (v58 >> 62)
  {
    sub_10050BF48(0, &qword_10167ADE0);
    swift_bridgeObjectRetain();
    uint64_t v33 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10050BF48(0, &qword_10167ADE0);
    uint64_t v33 = (uint64_t)v32;
  }
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_100D8ED18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8, v5);
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  id v6 = [self mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self systemImageNamed:v10];

  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100DBF940(a1, (uint64_t)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  sub_100DBF9A8((uint64_t)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

void sub_100D8EFA4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v7 = (void *)Strong;
    type metadata accessor for CRLBoardLibrary();
    uint64_t v8 = swift_dynamicCastClass();
    if (!v8)
    {
      id v11 = v7;
      goto LABEL_8;
    }
    uint64_t v9 = v8;
    swift_unknownObjectRetain();
    NSString v10 = (void (**)(void))[a3 actionBlock];
    v10[2]();
    _Block_release(v10);
    id v11 = *(void **)(v9 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController);
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_101177E70;
    *(void *)(inited + 32) = a4;
    unint64_t v21 = inited;
    specialized Array._endMutation()();
    if (v21 >> 62)
    {
      id v18 = v11;
      id v19 = a4;
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v20) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v11;
      id v15 = a4;
      if (!v13)
      {
LABEL_6:
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
LABEL_8:

        return;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_100F29878(v16, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10053D3C0((uint64_t)v17);
    goto LABEL_6;
  }
}

void sub_100D8F16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8, v7);
  uint64_t v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v14 = (void *)Strong;
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    sub_100DBF940(a3, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
    type metadata accessor for MainActor();
    id v16 = v14;
    uint64_t v17 = static MainActor.shared.getter();
    unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    id v19 = (void *)swift_allocObject();
    v19[2] = v17;
    void v19[3] = &protocol witness table for MainActor;
    v19[4] = v16;
    sub_100DBF9A8((uint64_t)v8, (uint64_t)v19 + v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1005912D0((uint64_t)v12, (uint64_t)&unk_10169B660, (uint64_t)v19);
    swift_release();
  }
}

void sub_100D8F380(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    a4(a3);
  }
}

void sub_100D8F3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8, v7);
  uint64_t v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v14 = (void *)Strong;
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    sub_100DBF940(a3, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
    type metadata accessor for MainActor();
    id v16 = v14;
    uint64_t v17 = static MainActor.shared.getter();
    unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    id v19 = (void *)swift_allocObject();
    v19[2] = v17;
    void v19[3] = &protocol witness table for MainActor;
    v19[4] = v16;
    sub_100DBF9A8((uint64_t)v8, (uint64_t)v19 + v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_1005912D0((uint64_t)v12, (uint64_t)&unk_10169B678, (uint64_t)v19);
    swift_release();
  }
}

double *sub_100D8F604(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v9);
  uint64_t v11 = &v31[-v10];
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  id v16 = &v31[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v17 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

  unint64_t v18 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  if (v18(v7, 1, v12) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contextMenuActionTargets(for:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2724, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v30) = 2;
    v29[1] = 39;
    v29[0] = "invalid nil found when unwrapping value";
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuActionTargets(for:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2724);
  }
  sub_10051B3EC((uint64_t)v7, (uint64_t)v11, (uint64_t *)&unk_10169B4A0);
  if (v18(v11, 1, v12) == 1)
  {
    sub_100522F00((uint64_t)v11, (uint64_t *)&unk_10169B4A0);
    return _swiftEmptyArrayStorage;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v16, v11, v12);
  Class result = (double *)[v2 collectionView];
  if (result)
  {
    unint64_t v21 = result;
    id v22 = [result indexPathsForSelectedItems];

    if (v22)
    {
      uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      __chkstk_darwin(v24, v25);
      unint64_t v30 = v16;
      if (sub_101022164((uint64_t (*)(char *))sub_100DBFA90, (uint64_t)v29, v23))
      {
        id v26 = v2;
        uint64_t v19 = (uint64_t)sub_100DB2190(v23, (uint64_t)v26);

        (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v16, v12);
        swift_bridgeObjectRelease();
        return (double *)v19;
      }
      swift_bridgeObjectRelease();
    }
    sub_1005057FC(&qword_10169B510);
    uint64_t v27 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
    unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10117E810;
    sub_100DBF940(a1, v19 + v28, type metadata accessor for CRLBoardLibraryViewModel.Item);
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v16, v12);
    return (double *)v19;
  }
  __break(1u);
  return result;
}

void sub_100D8FA40(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8, v11);
  uint64_t v12 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100DD85D8(a3);
  uint64_t v14 = sub_100CDDF48((uint64_t)v13);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v16 = Strong;
    if (*(void *)(v14 + 16))
    {
      uint64_t v31 = v9;
      uint64_t v32 = a5;
      id v17 = Strong;
      sub_100DB4CF0(v14, (uint64_t)v17);

      swift_bridgeObjectRelease();
      id v18 = [self mainBundle];
      uint64_t v33 = a1;
      NSString v19 = String._bridgeToObjectiveC()();
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10050BF48(0, (unint64_t *)&qword_101672600);
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v23 = [self systemImageNamed:v22];

      uint64_t v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100DBF940(v32, (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
      unint64_t v25 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v24;
      sub_100DBF9A8((uint64_t)v12, v26 + v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_101177E70;
      *(void *)(v28 + 32) = v27;
      uint64_t v34 = v28;
      specialized Array._endMutation()();
      uint64_t v29 = v34;
      id v30 = v27;
      v33(v29);
      swift_bridgeObjectRelease();

      return;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  a1((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_100D8FE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (void *)result;
    uint64_t v10 = sub_100D8F604(a3);
    if (*((void *)v10 + 2))
    {
      uint64_t v11 = sub_100DD85D8((uint64_t)v10);
      uint64_t v12 = sub_100CDDF48((uint64_t)v11);
      swift_bridgeObjectRelease();
      if (*(void *)(v12 + 16))
      {
        id v13 = v9;
        char v14 = sub_100DB4CF0(v12, (uint64_t)v13);

        uint64_t v15 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
        uint64_t v16 = swift_allocObject();
        swift_unknownObjectWeakInit();
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v17 = static MainActor.shared.getter();
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v17;
        *(void *)(v18 + 24) = &protocol witness table for MainActor;
        *(void *)(v18 + 32) = v16;
        *(void *)(v18 + 40) = v12;
        *(unsigned char *)(v18 + 48) = v14 & 1;
        swift_release();
        sub_1005912D0((uint64_t)v7, (uint64_t)&unk_1016819E0, v18);
        swift_release();
        [v13 setEditing:0 animated:1];
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100D900AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    uint64_t v10 = sub_100D8F604(a3);
    if (*((void *)v10 + 2))
    {
      uint64_t v11 = (uint64_t)v9 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
      uint64_t v12 = sub_1005057FC(&qword_101670F30);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 5, 5, v12);
      LOBYTE(v11) = sub_100DDC744(v11, (uint64_t)v7);
      sub_100DBFA10((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      if (v11) {
        sub_100D906F8((uint64_t)v10);
      }
      else {
        sub_100D9124C((uint64_t)v10, 0, 0);
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_100D90204(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(double *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = sub_100D8F604(a3);
    if (*((void *)v8 + 2)) {
      a4(v8);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100D9028C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = type metadata accessor for MainActor();
  v5[19] = static MainActor.shared.getter();
  v5[20] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[21] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100D90350;
  return sub_100D87820(a5);
}

uint64_t sub_100D90350()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100D9052C;
  }
  else {
    uint64_t v4 = sub_100D904AC;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100D904AC()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100DBFBFC, v1, v0);
}

uint64_t sub_100D9052C()
{
  swift_release();
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v2 = v0;
  uint64_t v3 = Error.localizedDescription.getter();
  uint64_t v5 = v4;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  uint64_t v6 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v6, (uint64_t)"Error showing share sheet: %@", 29, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100DBFBFC, v8, v7);
}

void sub_100D906F8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v75 - v10;
  uint64_t v12 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  uint64_t v17 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 5, 5, v17);
  sub_10060E94C(v16, (uint64_t)v15, (uint64_t)&_mh_execute_header, (uint64_t)"purgeDeleted(items:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2u, 2534);
  sub_100DBFA10((uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v18 = sub_100DD85D8(a1);
  uint64_t v19 = sub_100CDDF48((uint64_t)v18);
  swift_bridgeObjectRelease();
  if (*(void *)(v19 + 16))
  {
    uint64_t v77 = v4;
    uint64_t v78 = v3;
    id v79 = v8;
    NSString v80 = v11;
    id v20 = [self sharedApplication];
    id v21 = [v20 delegate];

    if (v21)
    {
      id v82 = v1;
      type metadata accessor for CRLiOSAppDelegate();
      swift_dynamicCastClassUnconditional();
      swift_retain();
      swift_unknownObjectRelease();
      int v22 = sub_100AC1C10();
      swift_release();
      id v23 = [self alertControllerWithTitle:0 message:0 preferredStyle:1];
      unint64_t v24 = *(void *)(v19 + 16);
      unint64_t v25 = self;
      id v26 = [v25 mainBundle];
      uint64_t v81 = v19;
      if (v24 < 2)
      {
        int v76 = v22;
        NSString v35 = String._bridgeToObjectiveC()();
        NSString v36 = String._bridgeToObjectiveC()();
        id v37 = [v26 localizedStringForKey:v35 value:v36 table:0];

        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_10117E810;
        if (*(void *)(a1 + 16))
        {
          uint64_t v75 = v38;
          uint64_t v40 = (uint64_t)v80;
          sub_100DBF940(a1 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80)), (uint64_t)v80, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v41 = (uint64_t)v79;
          sub_100DBF940(v40, (uint64_t)v79, type metadata accessor for CRLBoardLibraryViewModel.Item);
          EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload == 1)
            {
              sub_100DBF9A8(v41, (uint64_t)v15, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v43 = sub_100DD4C48();
              unint64_t v45 = v44;
              uint64_t v46 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
              uint64_t v47 = (uint64_t)v15;
            }
            else
            {
              id v50 = (uint64_t *)(v41 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
              uint64_t v43 = *v50;
              unint64_t v45 = v50[1];
              uint64_t v46 = type metadata accessor for CRLBoardIdentifier;
              uint64_t v47 = v41;
            }
            sub_100DBFA10(v47, v46);
          }
          else
          {
            uint64_t v43 = sub_100DD8CAC();
            unint64_t v45 = v49;
          }
          NSString v48 = v25;
          sub_100DBFA10(v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        else
        {
          uint64_t v43 = 0;
          unint64_t v45 = 0;
          NSString v48 = v25;
        }
        *(void *)(v39 + 56) = &type metadata for String;
        *(void *)(v39 + 64) = sub_100528BE4();
        if (v45) {
          uint64_t v51 = v43;
        }
        else {
          uint64_t v51 = 0;
        }
        unint64_t v52 = 0xE000000000000000;
        if (v45) {
          unint64_t v52 = v45;
        }
        *(void *)(v39 + 32) = v51;
        *(void *)(v39 + 40) = v52;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        NSString v53 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v23 setTitle:v53];

        id v32 = [v48 mainBundle];
      }
      else
      {
        v84._countAndFlagsBits = 0xD000000000000023;
        v84._object = (void *)0x8000000101289050;
        v27._object = (void *)0x8000000101289030;
        v27._countAndFlagsBits = 0xD00000000000001ELL;
        v28._countAndFlagsBits = 0;
        v28._object = (void *)0xE000000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v84);

        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_10117E810;
        uint64_t v30 = *(void *)(v19 + 16);
        *(void *)(v29 + 56) = &type metadata for Int;
        *(void *)(v29 + 64) = &protocol witness table for Int;
        *(void *)(v29 + 32) = v30;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        NSString v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v23 setTitle:v31];

        id v32 = [v25 mainBundle];
      }
      NSString v33 = String._bridgeToObjectiveC()();
      NSString v34 = String._bridgeToObjectiveC()();
      id v54 = [v32 localizedStringForKey:v33 value:v34 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v55 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v23 setMessage:v55];

      uint64_t v56 = self;
      id v57 = [v56 mainBundle];
      NSString v58 = String._bridgeToObjectiveC()();
      NSString v59 = String._bridgeToObjectiveC()();
      id v60 = [v57 localizedStringForKey:v58 value:v59 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v61 = swift_allocObject();
      unint64_t v62 = v82;
      swift_unknownObjectWeakInit();
      uint64_t v63 = swift_allocObject();
      uint64_t v64 = v81;
      *(void *)(v63 + 16) = v61;
      *(void *)(v63 + 24) = v64;
      swift_retain();
      NSString v65 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_100DBBE34;
      void aBlock[5] = v63;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      void aBlock[2] = sub_10051CE64;
      void aBlock[3] = &unk_10152BE10;
      double v66 = _Block_copy(aBlock);
      swift_release();
      id v67 = self;
      id v68 = [v67 actionWithTitle:v65 style:2 handler:v66];
      _Block_release(v66);

      swift_release();
      [v23 addAction:v68];

      id v69 = [v56 mainBundle];
      NSString v70 = String._bridgeToObjectiveC()();
      NSString v71 = String._bridgeToObjectiveC()();
      id v72 = [v69 localizedStringForKey:v70 value:v71 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v73 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v74 = [v67 actionWithTitle:v73 style:1 handler:0];

      [v23 addAction:v74];
      [v62 presentViewController:v23 animated:1 completion:0];
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100D9124C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100DD85D8(a1);
  uint64_t v12 = sub_100CDDF48((uint64_t)v11);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLBoardLibrary();
  uint64_t v13 = swift_dynamicCastClass();
  if (v13)
  {
    if (*(void *)(v12 + 16))
    {
      uint64_t v14 = v13;
      uint64_t v15 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
      type metadata accessor for MainActor();
      swift_unknownObjectRetain_n();
      id v16 = v3;
      sub_1005173A0(a2);
      swift_bridgeObjectRetain();
      uint64_t v17 = static MainActor.shared.getter();
      uint64_t v18 = (void *)swift_allocObject();
      long long v18[2] = v17;
      void v18[3] = &protocol witness table for MainActor;
      v18[4] = v16;
      v18[5] = v12;
      void v18[6] = v14;
      v18[7] = a2;
      v18[8] = a3;
      v18[9] = a1;
      sub_1005912D0((uint64_t)v10, (uint64_t)&unk_10169B540, (uint64_t)v18);
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"delete(items:deletionHandler:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2381, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"delete(items:deletionHandler:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2381);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100D914D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[19] = a8;
  v8[20] = v14;
  v8[17] = a6;
  v8[18] = a7;
  v8[15] = a4;
  v8[16] = a5;
  uint64_t v9 = sub_1005057FC(&qword_10169B548);
  v8[21] = v9;
  v8[22] = *(void *)(v9 - 8);
  v8[23] = swift_task_alloc();
  v8[24] = swift_task_alloc();
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  v8[30] = type metadata accessor for CRLBoardViewModelMetadata(0);
  v8[31] = swift_task_alloc();
  v8[32] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  v8[37] = swift_task_alloc();
  sub_1005057FC(&qword_10169B550);
  v8[38] = swift_task_alloc();
  v8[39] = swift_task_alloc();
  v8[40] = type metadata accessor for MainActor();
  v8[41] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[42] = v11;
  v8[43] = v10;
  return _swift_task_switch(sub_100D9172C, v11, v10);
}

uint64_t sub_100D9172C()
{
  v0[44] = *(void *)(v0[15] + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
  v0[45] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[46] = v2;
  v0[47] = v1;
  return _swift_task_switch(sub_100D917CC, v2, v1);
}

uint64_t sub_100D917CC()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = v0[16];
  uint64_t v3 = sub_1005057FC(&qword_10169B558);
  uint64_t v4 = static MainActor.shared.getter();
  v0[48] = v4;
  uint64_t v5 = swift_task_alloc();
  v0[49] = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v1;
  uint64_t v6 = sub_1005057FC(&qword_10169B568);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[50] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100D918FC;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 14, v3, v6, v4, &protocol witness table for MainActor, &unk_10169B560, v5, v3);
}

uint64_t sub_100D918FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 376);
  uint64_t v3 = *(void *)(v1 + 368);
  return _swift_task_switch(sub_100D91A5C, v3, v2);
}

uint64_t sub_100D91A5C()
{
  swift_release();
  v0[51] = v0[14];
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[43];
  return _swift_task_switch(sub_100D91AC8, v1, v2);
}

uint64_t sub_100D91AC8()
{
  id v115 = v0 + 8;
  long long aBlock = v0 + 2;
  uint64_t v1 = v0[51];
  uint64_t v123 = v0[32];
  uint64_t v121 = v0[30];
  uint64_t v125 = v0[22];
  uint64_t v127 = v0[21];
  uint64_t v119 = v0[17];
  swift_release();
  uint64_t result = swift_allocObject();
  int64_t v126 = 0;
  *(void *)(result + 16) = &_swiftEmptySetSingleton;
  uint64_t v3 = _swiftEmptyArrayStorage;
  uint64_t v120 = v1 + 64;
  uint64_t v124 = v1;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v1 + 64);
  uint64_t v118 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController;
  uint64_t v7 = (uint64_t *)&unk_10169B570;
  int64_t v122 = (unint64_t)(63 - v5) >> 6;
  uint64_t v133 = v0;
  uint64_t v117 = result;
  while (1)
  {
    if (v6)
    {
      uint64_t v132 = (v6 - 1) & v6;
      unint64_t v10 = __clz(__rbit64(v6)) | (v126 << 6);
      goto LABEL_8;
    }
    int64_t v14 = v126 + 1;
    if (__OFADD__(v126, 1)) {
      goto LABEL_113;
    }
    if (v14 >= v122) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v120 + 8 * v14);
    if (v15) {
      goto LABEL_12;
    }
    int64_t v16 = v126 + 2;
    ++v126;
    if (v14 + 1 >= v122) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v120 + 8 * v16);
    if (v15) {
      goto LABEL_15;
    }
    int64_t v126 = v14 + 1;
    if (v14 + 2 >= v122) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v120 + 8 * (v14 + 2));
    if (v15)
    {
      v14 += 2;
LABEL_12:
      uint64_t v132 = (v15 - 1) & v15;
      unint64_t v10 = __clz(__rbit64(v15)) + (v14 << 6);
      int64_t v126 = v14;
LABEL_8:
      uint64_t v11 = v0[38];
      sub_100DBF940(*(void *)(v124 + 48) + *(void *)(v123 + 72) * v10, v11, type metadata accessor for CRLBoardIdentifier);
      uint64_t v12 = *(void *)(v124 + 56);
      uint64_t v13 = sub_1005057FC(v7);
      *(unsigned char *)(v11 + *(int *)(v13 + 48)) = *(unsigned char *)(v12 + v10);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 0, 1, v13);
      goto LABEL_27;
    }
    int64_t v16 = v14 + 3;
    int64_t v126 = v14 + 2;
    if (v14 + 3 >= v122) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v120 + 8 * v16);
    if (v15)
    {
LABEL_15:
      int64_t v14 = v16;
      goto LABEL_12;
    }
    while (1)
    {
      int64_t v14 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
        return result;
      }
      if (v14 >= v122) {
        break;
      }
      unint64_t v15 = *(void *)(v120 + 8 * v14);
      ++v16;
      if (v15) {
        goto LABEL_12;
      }
    }
    int64_t v126 = v122 - 1;
LABEL_26:
    uint64_t v17 = v0[38];
    uint64_t v18 = sub_1005057FC(v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v132 = 0;
LABEL_27:
    uint64_t v19 = v0[39];
    sub_10051B3EC(v0[38], v19, &qword_10169B550);
    uint64_t v20 = sub_1005057FC(v7);
    uint64_t v136 = v3;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20) == 1) {
      break;
    }
    uint64_t v21 = v0[39];
    uint64_t v22 = v0[37];
    uint64_t v23 = v0[31];
    int v24 = *(unsigned __int8 *)(v21 + *(int *)(v20 + 48));
    sub_100DBF9A8(v21, v22, type metadata accessor for CRLBoardIdentifier);
    sub_100ED7F04(v22, v23);
    uint64_t v25 = v0[31];
    int v26 = *(unsigned __int8 *)(v25 + *(int *)(v121 + 32));
    sub_100DBFA10(v25, type metadata accessor for CRLBoardViewModelMetadata);
    if (v26 != 1)
    {
      uint64_t v45 = v0[37];
      if (v24)
      {
        uint64_t v46 = v0[29];
        uint64_t v47 = *(int *)(v127 + 48);
        sub_100DBF940(v45, v46, type metadata accessor for CRLBoardIdentifier);
        *(unsigned char *)(v46 + v47) = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = (double *)sub_100F64E94(0, *((void *)v3 + 2) + 1, 1, (unint64_t)v3);
        }
        unint64_t v49 = *((void *)v3 + 2);
        unint64_t v48 = *((void *)v3 + 3);
        if (v49 >= v48 >> 1) {
          uint64_t v3 = (double *)sub_100F64E94(v48 > 1, v49 + 1, 1, (unint64_t)v3);
        }
        uint64_t v50 = v0[29];
        *((void *)v3 + 2) = v49 + 1;
        sub_10051B3EC(v50, (uint64_t)v3+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v49, &qword_10169B548);
      }
      else
      {
        uint64_t v9 = v0[33];
        uint64_t v8 = v0[34];
        sub_100DBF940(v45, v9, type metadata accessor for CRLBoardIdentifier);
        sub_100CB7090(v8, v9);
        sub_100DBFA10(v8, type metadata accessor for CRLBoardIdentifier);
      }
      goto LABEL_5;
    }
    uint64_t v0 = *(uint64_t **)(*(void *)(v119 + v118)
                     + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
    if (!((unint64_t)v0 >> 62))
    {
      uint64_t v27 = *(void *)(((unint64_t)v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v27) {
        goto LABEL_31;
      }
LABEL_57:
      swift_bridgeObjectRelease_n();
      uint64_t v0 = v133;
      goto LABEL_5;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    if (!v27) {
      goto LABEL_57;
    }
LABEL_31:
    uint64_t v28 = 0;
    NSString v129 = v0;
    unint64_t v130 = (unint64_t)v0 & 0xC000000000000001;
    uint64_t v128 = v27;
    while (2)
    {
      if (!v130)
      {
        id v29 = (id)v0[v28 + 4];
        uint64_t v30 = v28 + 1;
        if (!__OFADD__(v28, 1)) {
          goto LABEL_39;
        }
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        swift_bridgeObjectRetain();
        uint64_t v114 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v114) {
          goto LABEL_61;
        }
LABEL_60:
        unint64_t v52 = swift_bridgeObjectRetain();
        sub_10053D548(v52);
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
      id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v30 = v28 + 1;
      if (__OFADD__(v28, 1)) {
        goto LABEL_110;
      }
LABEL_39:
      NSString v31 = v7;
      uint64_t v33 = v133[36];
      uint64_t v32 = v133[37];
      uint64_t v34 = v133[35];
      uint64_t v137 = v29;
      uint64_t v35 = (uint64_t)v29 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_boardIdentifier;
      char v36 = static UUID.== infix(_:_:)();
      sub_100DBF940(v35, v33, type metadata accessor for CRLBoardIdentifier);
      sub_100DBF940(v32, v34, type metadata accessor for CRLBoardIdentifier);
      uint64_t v37 = v133[35];
      uint64_t v38 = v133[36];
      if ((v36 & 1) == 0)
      {
        sub_100DBFA10(v133[35], type metadata accessor for CRLBoardIdentifier);
        sub_100DBFA10(v38, type metadata accessor for CRLBoardIdentifier);
        uint64_t v3 = v136;
        uint64_t v7 = v31;
        uint64_t v0 = v129;
LABEL_33:

        ++v28;
        if (v30 == v128) {
          goto LABEL_57;
        }
        continue;
      }
      break;
    }
    uint64_t v39 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v40 = *(void *)(v38 + v39);
    uint64_t v41 = *(void *)(v38 + v39 + 8);
    NSString v42 = (void *)(v37 + v39);
    BOOL v43 = v40 == *v42 && v41 == v42[1];
    uint64_t v7 = v31;
    uint64_t v0 = v129;
    if (!v43)
    {
      char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100DBFA10(v37, type metadata accessor for CRLBoardIdentifier);
      sub_100DBFA10(v38, type metadata accessor for CRLBoardIdentifier);
      uint64_t v3 = v136;
      if (v44) {
        goto LABEL_53;
      }
      goto LABEL_33;
    }
    sub_100DBFA10(v37, type metadata accessor for CRLBoardIdentifier);
    sub_100DBFA10(v38, type metadata accessor for CRLBoardIdentifier);
    uint64_t v3 = v136;
LABEL_53:
    swift_bridgeObjectRelease_n();
    id v51 = v137;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    uint64_t v0 = v133;
LABEL_5:
    uint64_t result = sub_100DBFA10(v0[37], type metadata accessor for CRLBoardIdentifier);
    unint64_t v6 = v132;
  }
  swift_release();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_114;
  }
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_60;
  }
LABEL_61:
  unint64_t v53 = *((void *)v3 + 2);
  if (v53)
  {
    swift_bridgeObjectRetain();
    unint64_t v54 = 0;
    unint64_t v138 = v53;
    while (1)
    {
      if (v54 >= *((void *)v3 + 2)) {
        goto LABEL_111;
      }
      uint64_t v55 = v0[27];
      uint64_t v56 = v0[28];
      unint64_t v57 = (*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
      uint64_t v58 = *(void *)(v125 + 72);
      sub_100522E9C((uint64_t)v3 + v57 + v58 * v54, v56, &qword_10169B548);
      uint64_t v59 = *(int *)(v127 + 48);
      int v60 = *(unsigned __int8 *)(v56 + v59);
      sub_100DBF940(v56, v55, type metadata accessor for CRLBoardIdentifier);
      *(unsigned char *)(v55 + v59) = v60;
      uint64_t v61 = v0[27];
      if (v60 == 2) {
        break;
      }
      sub_100522F00(v61, &qword_10169B548);
      unint64_t v62 = v138;
      if (v60 == 1) {
        goto LABEL_69;
      }
      sub_100522F00(v0[28], &qword_10169B548);
LABEL_64:
      uint64_t v3 = v136;
      if (v62 == ++v54)
      {
        swift_bridgeObjectRelease();
        uint64_t v66 = *((void *)v136 + 2);
        swift_bridgeObjectRetain();
        uint64_t v134 = v66;
        if (v66)
        {
          unint64_t v67 = 0;
          uint64_t v68 = (uint64_t)v136 + v57;
          while (v67 < *((void *)v3 + 2))
          {
            uint64_t v69 = v0[25];
            sub_100522E9C(v68, v69, &qword_10169B548);
            uint64_t v70 = v0[25];
            if (*(unsigned char *)(v69 + *(int *)(v127 + 48)) == 3)
            {
              sub_10051B3EC(v70, v0[24], &qword_10169B548);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_1006BBBA4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
              }
              double v72 = _swiftEmptyArrayStorage[2];
              double v71 = _swiftEmptyArrayStorage[3];
              if (*(void *)&v72 >= *(void *)&v71 >> 1) {
                sub_1006BBBA4(*(void *)&v71 > 1uLL, *(void *)&v72 + 1, 1);
              }
              uint64_t v73 = v0[24];
              *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v72 + 1;
              sub_10051B3EC(v73, (uint64_t)_swiftEmptyArrayStorage + v57 + *(void *)&v72 * v58, &qword_10169B548);
              uint64_t v3 = v136;
            }
            else
            {
              sub_100522F00(v70, &qword_10169B548);
            }
            ++v67;
            v68 += v58;
            if (v134 == v67) {
              goto LABEL_85;
            }
          }
          goto LABEL_112;
        }
LABEL_85:
        swift_bridgeObjectRelease();
        double v74 = _swiftEmptyArrayStorage[2];
        if (*(void *)&v74 == v138)
        {
          swift_release();
          swift_release();
          uint64_t v75 = *((void *)v3 + 2);
          if (v75)
          {
            swift_bridgeObjectRetain();
            uint64_t v76 = (uint64_t)v3 + v57;
            while (1)
            {
              uint64_t v77 = v0[23];
              sub_100522E9C(v76, v77, &qword_10169B548);
              int v78 = *(unsigned __int8 *)(v77 + *(int *)(v127 + 48));
              sub_100522F00(v77, &qword_10169B548);
              if (v78 == 1) {
                break;
              }
              v76 += v58;
              if (!--v75)
              {
                uint64_t v79 = 2;
                unsigned __int8 v80 = 2;
                goto LABEL_99;
              }
            }
            uint64_t v79 = 0;
            unsigned __int8 v80 = 1;
LABEL_99:
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v79 = 2;
            unsigned __int8 v80 = 2;
          }
        }
        else
        {
          double v85 = _swiftEmptyArrayStorage[2];
          swift_release();
          swift_release();
          if (*(void *)&v85 == v138)
          {
            unsigned __int8 v80 = 3;
            uint64_t v79 = 2;
          }
          else
          {
            uint64_t v79 = 2;
            if (v74 == 0.0 || v85 == 0.0)
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"delete(items:deletionHandler:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2491, (uint64_t)"should be impossible to get here. file a bug", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"should be impossible to get here. file a bug");
              sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"delete(items:deletionHandler:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2491);
              SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v112, v113);
              return _assertionFailure(_:_:file:line:flags:)();
            }
            unsigned __int8 v80 = 4;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v131 = v79;
        char v135 = v80;
        if (v138 < 2)
        {
          sub_100DC46D4(v80);
          sub_100DC4B74(v80);
        }
        else
        {
          sub_100DC45D0(v80);
          sub_100DC4920(v80);
        }
        uint64_t v86 = v0[19];
        uint64_t v87 = v0[20];
        uint64_t v88 = v0[18];
        id v89 = (void *)v0[15];
        NSString v90 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v91 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v92 = [self alertControllerWithTitle:v90 message:v91 preferredStyle:1];

        sub_100DC4DFC();
        uint64_t v93 = (void *)swift_allocObject();
        v93[2] = v136;
        v93[3] = v89;
        v93[4] = v117;
        v93[5] = v88;
        v93[6] = v86;
        v93[7] = v87;
        id v94 = v89;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1005173A0(v88);
        NSString v95 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v0[6] = (uint64_t)sub_100DBC1CC;
        v0[7] = (uint64_t)v93;
        v0[2] = (uint64_t)_NSConcreteStackBlock;
        v0[3] = *(void *)"";
        v0[4] = (uint64_t)sub_10051CE64;
        v0[5] = (uint64_t)&unk_10152BED8;
        uint64_t v96 = _Block_copy(aBlock);
        swift_release();
        uint64_t v97 = self;
        id v98 = [v97 actionWithTitle:v95 style:v131 handler:v96];
        _Block_release(v96);

        [v92 addAction:v98];
        sub_100DC4EE8(v135);
        if (v99)
        {
          uint64_t v101 = v0[19];
          uint64_t v100 = v0[20];
          uint64_t v102 = v0[18];
          id v103 = v98;
          id v104 = v92;
          uint64_t v105 = (void *)v0[15];
          id v106 = (void *)swift_allocObject();
          v106[2] = v105;
          v106[3] = v117;
          v106[4] = v102;
          v106[5] = v101;
          v106[6] = v100;
          id v107 = v105;
          id v92 = v104;
          id v98 = v103;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1005173A0(v102);
          NSString v108 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v0[12] = (uint64_t)sub_100DBC234;
          v0[13] = (uint64_t)v106;
          v0[8] = (uint64_t)_NSConcreteStackBlock;
          v0[9] = *(void *)"";
          v0[10] = (uint64_t)sub_10051CE64;
          v0[11] = (uint64_t)&unk_10152BF28;
          uint64_t v109 = _Block_copy(v115);
          swift_release();
          id v110 = [v97 actionWithTitle:v108 style:1 handler:v109];
          _Block_release(v109);

          [v92 addAction:v110];
        }
        [(id)v0[15] presentViewController:v92 animated:1 completion:0];

        goto LABEL_106;
      }
    }
    sub_100522F00(v61, &qword_10169B548);
    unint64_t v62 = v138;
LABEL_69:
    sub_10051B3EC(v0[28], v0[26], &qword_10169B548);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1006BBBA4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
    }
    double v64 = _swiftEmptyArrayStorage[2];
    double v63 = _swiftEmptyArrayStorage[3];
    if (*(void *)&v64 >= *(void *)&v63 >> 1) {
      sub_1006BBBA4(*(void *)&v63 > 1uLL, *(void *)&v64 + 1, 1);
    }
    uint64_t v65 = v0[26];
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v64 + 1;
    sub_10051B3EC(v65, (uint64_t)_swiftEmptyArrayStorage + v57 + *(void *)&v64 * v58, &qword_10169B548);
    goto LABEL_64;
  }
  uint64_t v81 = v0[19];
  uint64_t v82 = v0[20];
  uint64_t v83 = v0[18];
  Swift::String v84 = (void *)v0[15];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100D93A9C(v84, v117, v83, v81, v82);
LABEL_106:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v111 = (uint64_t (*)(void))v0[1];
  return v111();
}

void sub_100D92BCC(uint64_t a1, char a2, void *a3)
{
  uint64_t v50 = a3;
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  uint64_t v13 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v46 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v46 - v20;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v46 - v24;
  if (*(void *)(a1 + 16))
  {
    uint64_t v49 = a1;
    id v26 = sub_100D72460();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    if (a2)
    {
      uint64_t v27 = v25;
      uint64_t v47 = v21;
      unint64_t v48 = v25;
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v28(v21, v27, v9);
      uint64_t v29 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
      uint64_t v30 = v49;
      swift_bridgeObjectRetain();
      NSString v31 = sub_100DB42A8(v29, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = v47;
      NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v31);
      swift_bridgeObjectRelease();
      v28(v17, v32, v9);
      v28(v13, v48, v9);
      unint64_t v33 = (*(unsigned __int8 *)(v10 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = v50;
      *(void *)(v34 + 16) = v50;
      *(void *)(v34 + 24) = v30;
      *(unsigned char *)(v34 + 32) = 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v34 + v33, v13, v9);
      swift_bridgeObjectRetain();
      id v36 = v35;
      sub_100D78E94((uint64_t)v17, 1, (uint64_t)sub_100DBC248, v34);
      swift_release();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v10 + 8);
      v37(v17, v9);
      v37(v47, v9);
      v37(v48, v9);
    }
    else
    {
      uint64_t v38 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v8, 1, 1, v38);
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v40 = v21;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v21, v25, v9);
      type metadata accessor for MainActor();
      uint64_t v41 = v49;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v42 = static MainActor.shared.getter();
      BOOL v43 = v25;
      unint64_t v44 = (*(unsigned __int8 *)(v10 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v42;
      *(void *)(v45 + 24) = &protocol witness table for MainActor;
      *(void *)(v45 + 32) = v39;
      *(void *)(v45 + 40) = v41;
      *(unsigned char *)(v45 + 48) = 0;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v45 + v44, v40, v9);
      swift_release();
      sub_1006D9104((uint64_t)v8, (uint64_t)&unk_10169B588, v45);
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v9);
    }
  }
}

uint64_t sub_100D93038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = a7;
  *(unsigned char *)(v7 + 160) = a6;
  *(void *)(v7 + 40) = a4;
  uint64_t v8 = type metadata accessor for IndexPath();
  *(void *)(v7 + 64) = v8;
  *(void *)(v7 + 72) = *(void *)(v8 - 8);
  *(void *)(v7 + 80) = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10169B4A0);
  *(void *)(v7 + 88) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v7 + 96) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 104) = v10;
  *(void *)(v7 + 112) = v9;
  return _swift_task_switch(sub_100D93164, v10, v9);
}

uint64_t sub_100D93164()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[15] = Strong;
  if (Strong)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    id v3 = sub_100DFAB9C(v2);
    v0[16] = v3;
    id v4 = [self sharedApplication];
    id v5 = [v4 delegate];

    if (v5)
    {
      type metadata accessor for CRLiOSAppDelegate();
      uint64_t v6 = *(void **)(swift_dynamicCastClassUnconditional()
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      v0[17] = v6;
      if (v6)
      {
        v6;
        swift_unknownObjectRelease();
        uint64_t v7 = (void *)swift_task_alloc();
        v0[18] = v7;
        *uint64_t v7 = v0;
        v7[1] = sub_100D933CC;
        return sub_100DF8B44((uint64_t)v3);
      }
    }
    else
    {
      __break(1u);
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
    return result;
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100D933CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    id v5 = sub_100D93784;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    id v5 = sub_100D934E8;
  }
  return _swift_task_switch(v5, v3, v4);
}

id sub_100D934E8()
{
  uint64_t v1 = (void *)v0[15];
  swift_release();
  id result = [v1 collectionView];
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [result indexPathsForSelectedItems];

    if (v4)
    {
      uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v6 = *(void *)(v5 + 16);
      uint64_t v7 = v0[9];
      if (v6)
      {
        uint64_t v9 = *(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16);
        uint64_t v8 = v7 + 16;
        unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
        uint64_t v11 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 40);
        uint64_t v24 = v9;
        uint64_t v23 = *(void *)(v8 + 56);
        swift_bridgeObjectRetain();
        while (1)
        {
          uint64_t v12 = v0[11];
          uint64_t v13 = v0[8];
          v24(v12, v10, v13);
          uint64_t v14 = *v11;
          (*v11)(v12, 0, 1, v13);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, 1, v13) == 1) {
            break;
          }
          uint64_t v15 = (void *)v0[15];
          (*(void (**)(void, void, void))(v8 + 16))(v0[10], v0[11], v0[8]);
          id result = [v15 collectionView];
          if (!result)
          {
            __break(1u);
            goto LABEL_16;
          }
          uint64_t v16 = result;
          uint64_t v17 = v0[10];
          uint64_t v18 = v0[8];
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          [v16 deselectItemAtIndexPath:isa animated:0];

          (*(void (**)(uint64_t, uint64_t))(v8 - 8))(v17, v18);
          v10 += v23;
          if (!--v6) {
            goto LABEL_10;
          }
        }
      }
      else
      {
        uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
        swift_bridgeObjectRetain();
LABEL_10:
        v14(v0[11], 1, 1, v0[8]);
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v21 = (void *)v0[15];
    uint64_t v20 = (void *)v0[16];
    sub_100D7D7D8();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return (id)v22();
  }
  else
  {
LABEL_16:
    __break(1u);
  }
  return result;
}

uint64_t sub_100D93784()
{
  uint64_t v1 = *(void **)(v0 + 136);
  int v2 = *(unsigned __int8 *)(v0 + 160);

  swift_release();
  if (v2 == 1) {
    sub_100D78E94(*(void *)(v0 + 56), 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  }
  uint64_t v3 = *(void **)(v0 + 120);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100D93860(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7, v10);
  uint64_t v11 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a4, v7);
  type metadata accessor for MainActor();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v18 = static MainActor.shared.getter();
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = &protocol witness table for MainActor;
  *(void *)(v20 + 32) = v17;
  *(void *)(v20 + 40) = a2;
  *(unsigned char *)(v20 + 48) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v19, v11, v7);
  swift_release();
  sub_1006D9104((uint64_t)v15, (uint64_t)&unk_10169B580, v20);
  return swift_release();
}

uint64_t sub_100D93A9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v48 = a5;
  uint64_t v49 = a4;
  uint64_t v50 = (void (*)(double *))a3;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7, v10);
  uint64_t v45 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v46 = (char *)&v41 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v41 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v47 = a2 + 16;
  uint64_t result = swift_beginAccess();
  uint64_t v24 = *(void *)(a2 + 16);
  if (*(void *)(v24 + 16))
  {
    swift_bridgeObjectRetain();
    id v25 = sub_100D72460();
    uint64_t v42 = v21;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    unint64_t v44 = a1;
    id v26 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v26(v17, v21, v7);
    uint64_t v27 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_100DB42A8(v27, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v17;
    BOOL v43 = v17;
    NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v28);
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v46;
    v26(v46, v29, v7);
    NSString v31 = v45;
    uint64_t v32 = v42;
    v26(v45, v42, v7);
    unint64_t v33 = (*(unsigned __int8 *)(v8 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = v44;
    *(void *)(v34 + 16) = v44;
    *(void *)(v34 + 24) = v24;
    *(unsigned char *)(v34 + 32) = 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v34 + v33, v31, v7);
    swift_bridgeObjectRetain();
    id v36 = v35;
    sub_100D78E94(v30, 1, (uint64_t)sub_100DBC248, v34);
    swift_release();
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v37(v30, v7);
    v37((uint64_t)v43, v7);
    v37((uint64_t)v32, v7);
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (v50)
  {
    __chkstk_darwin(result, v23);
    *(&v41 - 2) = v47;
    uint64_t v38 = v50;
    sub_1005173A0((uint64_t)v50);
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_100DB499C(v39, sub_100DBC24C, (uint64_t)(&v41 - 4));
    swift_bridgeObjectRelease();
    v38(v40);
    swift_bridgeObjectRelease();
    return sub_1005174AC((uint64_t)v38);
  }
  return result;
}

uint64_t sub_100D93E50(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  uint64_t v4 = *a2;
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1006E5EA4(a1, v4);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t sub_100D93EB8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v8 = sub_1005057FC(&qword_10169B548);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17 - 8, v19);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v23 = *(void *)(v20 + 16);
  uint64_t v24 = _swiftEmptyArrayStorage;
  if (v23)
  {
    uint64_t v34 = a7;
    uint64_t v40 = _swiftEmptyArrayStorage;
    uint64_t v25 = v20;
    swift_bridgeObjectRetain();
    sub_1006BB8A4(0, v23, 0);
    uint64_t v26 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v33 = v25;
    uint64_t v27 = v25 + ((v26 + 32) & ~v26);
    uint64_t v39 = *(void *)(v9 + 72);
    uint64_t v24 = v40;
    do
    {
      sub_100522E9C(v27, (uint64_t)v16, &qword_10169B548);
      sub_100DBF940((uint64_t)v16, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      sub_100DBF9A8((uint64_t)v12, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
      sub_100522F00((uint64_t)v16, &qword_10169B548);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB8A4(0, *((void *)v24 + 2) + 1, 1);
        uint64_t v24 = v40;
      }
      unint64_t v29 = *((void *)v24 + 2);
      unint64_t v28 = *((void *)v24 + 3);
      if (v29 >= v28 >> 1)
      {
        sub_1006BB8A4(v28 > 1, v29 + 1, 1);
        uint64_t v24 = v40;
      }
      *((void *)v24 + 2) = v29 + 1;
      sub_100DBF9A8((uint64_t)v22, (uint64_t)v24+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v29, type metadata accessor for CRLBoardIdentifier);
      v27 += v39;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    a7 = v34;
  }
  uint64_t v30 = sub_100CDDF48((uint64_t)v24);
  swift_bridgeObjectRelease();
  NSString v31 = v35;
  sub_100D92BCC(v30, 0, v35);
  swift_bridgeObjectRelease();
  return sub_100D93A9C(v31, v36, v37, v38, a7);
}

uint64_t sub_100D941C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_100D9425C, v7, v6);
}

void sub_100D9425C()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  id v2 = sub_100DFACE0(v1);
  v0[10] = v2;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = [self sharedApplication];
    id v6 = [v5 delegate];

    if (v6)
    {
      type metadata accessor for CRLiOSAppDelegate();
      uint64_t v7 = *(void **)(swift_dynamicCastClassUnconditional()
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      v0[11] = v7;
      if (!v7)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
      }
      v7;
      swift_unknownObjectRelease();

      if (v7)
      {
        uint64_t v8 = (void *)swift_task_alloc();
        v0[12] = v8;
        *uint64_t v8 = v0;
        v8[1] = sub_100D944C8;
        sub_100DF8B44((uint64_t)v2);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  swift_release();

  uint64_t v9 = (void (*)(void))v0[1];
  v9();
}

uint64_t sub_100D944C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    id v5 = sub_100D94650;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    id v5 = sub_100D945E4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100D945E4()
{
  uint64_t v1 = *(void **)(v0 + 80);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100D94650()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = (void *)v0[11];
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100D946C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (void *)result;
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v11;
    v13[5] = a3;
    swift_release();
    sub_1006D9104((uint64_t)v7, (uint64_t)&unk_10169B530, (uint64_t)v13);

    return swift_release();
  }
  return result;
}

uint64_t sub_100D94854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  type metadata accessor for MainActor();
  v5[10] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[11] = v7;
  v5[12] = v6;
  return _swift_task_switch(sub_100D948EC, v7, v6);
}

uint64_t sub_100D948EC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    v0[13] = *(void *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
    swift_unknownObjectRetain();

    uint64_t v3 = (void *)swift_task_alloc();
    v0[14] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100D94A40;
    uint64_t v4 = v0[9];
    return sub_100EF85F8(v4);
  }
  else
  {
    swift_release();
    swift_beginAccess();
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      sub_100D7D7D8();
    }
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100D94A40()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_100D94BF8;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_100D94B5C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100D94B5C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_100D7D7D8();
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100D94BF8()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100D94C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 112) = a6;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  type metadata accessor for MainActor();
  *(void *)(v6 + 56) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 72) = v7;
  return _swift_task_switch(sub_100D94D04, v8, v7);
}

uint64_t sub_100D94D04()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    char v2 = *(unsigned char *)(v0 + 112);
    id v3 = objc_allocWithZone((Class)type metadata accessor for CRLBoardFavoriteCommand());
    uint64_t v4 = swift_bridgeObjectRetain();
    id v5 = sub_100DF54C8(v4, v2);
    *(void *)(v0 + 88) = v5;
    id v6 = [self sharedApplication];
    id v7 = [v6 delegate];

    if (v7)
    {
      type metadata accessor for CRLiOSAppDelegate();
      uint64_t v8 = *(void **)(swift_dynamicCastClassUnconditional()
                    + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      *(void *)(v0 + 96) = v8;
      if (v8)
      {
        v8;
        swift_unknownObjectRelease();
        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 104) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_100D94F78;
        return sub_100DF8B44((uint64_t)v5);
      }
    }
    else
    {
      __break(1u);
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
    return result;
  }
  swift_release();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_100D94F78()
{
  uint64_t v2 = *v1;
  id v3 = *(void **)(*v1 + 96);
  swift_task_dealloc();

  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = *(void *)(v2 + 72);
    id v6 = sub_100DBFA70;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = *(void *)(v2 + 72);
    id v6 = sub_100D950B4;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100D950B4()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = (void *)v0[11];
  swift_release();

  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100D95120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[41] = a5;
  v6[42] = a6;
  v6[40] = a4;
  sub_1005057FC((uint64_t *)&unk_10169B4A0);
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for IndexPath();
  v6[45] = v7;
  v6[46] = *(void *)(v7 - 8);
  v6[47] = swift_task_alloc();
  v6[48] = swift_task_alloc();
  v6[49] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6[50] = swift_task_alloc();
  v6[51] = swift_task_alloc();
  v6[52] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v6[53] = swift_task_alloc();
  v6[54] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[55] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[56] = v9;
  v6[57] = v8;
  return _swift_task_switch(sub_100D95310, v9, v8);
}

void sub_100D95310()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = (objc_class *)type metadata accessor for CRLBoardDuplicateCommand();
  id v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  uint64_t v4 = v3;
  uint64_t v5 = sub_1006BB0C4(v1);
  swift_bridgeObjectRelease();
  *(void *)&v4[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_sourceBoardIdentifiers] = v5;

  *(void *)(v0 + 304) = v4;
  *(void *)(v0 + 312) = v2;
  [v0 initWith];
  *(void *)(v0 + 464) = v6;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    id v9 = [self sharedApplication];
    id v10 = [v9 delegate];

    if (!v10) {
      goto LABEL_43;
    }
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v11 = *(void **)(swift_dynamicCastClassUnconditional()
                   + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
    *(void *)(v0 + 472) = v11;
    if (!v11)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
    }
    v11;

    swift_unknownObjectRelease();
    if (!v11) {
      goto LABEL_44;
    }
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100D95D58;
    sub_100DF8B44((uint64_t)v6);
    return;
  }
  swift_release();
  swift_beginAccess();
  uint64_t v13 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v13)
  {
    uint64_t v16 = *(char **)(v0 + 464);
    goto LABEL_37;
  }
  uint64_t v14 = v13;
  unsigned __int8 v15 = [v13 isEditing];

  uint64_t v16 = *(char **)(v0 + 464);
  if ((v15 & 1) == 0)
  {
LABEL_37:

LABEL_38:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    double v64 = *(void (**)(void))(v0 + 8);
    v64();
    return;
  }
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers];
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
LABEL_25:
    uint64_t v41 = *(void *)&v16[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_sourceBoardIdentifiers];
    uint64_t v42 = *(void *)(v41 + 16);
    if (v42)
    {
      uint64_t v43 = *(void *)(v0 + 416);
      uint64_t v44 = *(void *)(v0 + 368);
      uint64_t v45 = v41 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
      swift_bridgeObjectRetain();
      swift_beginAccess();
      double v72 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
      uint64_t v68 = (void (**)(void, void, void))(v44 + 32);
      uint64_t v66 = (void (**)(void, void))(v44 + 8);
      uint64_t v70 = *(void *)(v43 + 72);
      do
      {
        uint64_t v48 = *(void *)(v0 + 424);
        uint64_t v49 = *(void *)(v0 + 400);
        uint64_t v50 = *(void *)(v0 + 360);
        uint64_t v51 = *(void *)(v0 + 344);
        sub_100DBF940(v45, v48, type metadata accessor for CRLBoardIdentifier);
        unint64_t v52 = (void *)(v49 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
        sub_100DBF940(v48, v49, type metadata accessor for CRLBoardIdentifier);
        *unint64_t v52 = 0;
        v52[1] = 0xE000000000000000;
        swift_storeEnumTagMultiPayload();
        id v53 = sub_100D72460();
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

        if ((*v72)(v51, 1, v50) == 1)
        {
          sub_100522F00(*(void *)(v0 + 344), (uint64_t *)&unk_10169B4A0);
          if (qword_10166F9C8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          unint64_t v54 = (void *)static OS_os_log.crlDefault;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          id v56 = v54;
          uint64_t v57 = UUID.uuidString.getter();
          uint64_t v59 = v58;
          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = sub_100528BE4();
          *(void *)(inited + 32) = v57;
          *(void *)(inited + 40) = v59;
          uint64_t v60 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v56, (uint64_t)&_mh_execute_header, v60, (uint64_t)"Could not de-select an original board following its duplication (no IndexPath found for identifier %{public}@)", 110, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();
        }
        else
        {
          (*v68)(*(void *)(v0 + 376), *(void *)(v0 + 344), *(void *)(v0 + 360));
          uint64_t v61 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v61)
          {
            unint64_t v62 = v61;
            id v63 = [v61 collectionView];

            if (!v63) {
              goto LABEL_42;
            }
            Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
            [v63 deselectItemAtIndexPath:isa animated:0];
          }
          (*v66)(*(void *)(v0 + 376), *(void *)(v0 + 360));
        }
        uint64_t v47 = *(void *)(v0 + 424);
        sub_100DBFA10(*(void *)(v0 + 400), type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10(v47, type metadata accessor for CRLBoardIdentifier);
        v45 += v70;
        --v42;
      }
      while (v42);

      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)(v0 + 416);
  uint64_t v20 = *(void *)(v0 + 368);
  uint64_t v21 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  swift_bridgeObjectRetain();
  swift_beginAccess();
  double v71 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  unint64_t v67 = (void (**)(void, void, void))(v20 + 32);
  uint64_t v65 = (void (**)(void, void))(v20 + 8);
  uint64_t v69 = *(void *)(v19 + 72);
  while (1)
  {
    uint64_t v73 = v18;
    uint64_t v24 = *(void *)(v0 + 432);
    uint64_t v25 = *(void *)(v0 + 408);
    uint64_t v26 = *(void *)(v0 + 352);
    uint64_t v27 = *(void *)(v0 + 360);
    sub_100DBF940(v21, v24, type metadata accessor for CRLBoardIdentifier);
    unint64_t v28 = (void *)(v25 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
    sub_100DBF940(v24, v25, type metadata accessor for CRLBoardIdentifier);
    *unint64_t v28 = 0;
    v28[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    id v29 = sub_100D72460();
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

    if ((*v71)(v26, 1, v27) == 1)
    {
      sub_100522F00(*(void *)(v0 + 352), (uint64_t *)&unk_10169B4A0);
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v30 = (void *)static OS_os_log.crlDefault;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v31 = swift_initStackObject();
      *(_OWORD *)(v31 + 16) = xmmword_10117E810;
      id v32 = v30;
      uint64_t v33 = UUID.uuidString.getter();
      uint64_t v35 = v34;
      *(void *)(v31 + 56) = &type metadata for String;
      *(void *)(v31 + 64) = sub_100528BE4();
      *(void *)(v31 + 32) = v33;
      *(void *)(v31 + 40) = v35;
      uint64_t v36 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Could not select a new board which resulted from duplicating an existing board (no IndexPath found for identifier %{public}@)", 125, 2, v31);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v37 = v73;
      goto LABEL_15;
    }
    (*v67)(*(void *)(v0 + 384), *(void *)(v0 + 352), *(void *)(v0 + 360));
    uint64_t v38 = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v37 = v73;
    if (v38) {
      break;
    }
LABEL_14:
    (*v65)(*(void *)(v0 + 384), *(void *)(v0 + 360));
LABEL_15:
    uint64_t v23 = *(void *)(v0 + 432);
    sub_100DBFA10(*(void *)(v0 + 408), type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100DBFA10(v23, type metadata accessor for CRLBoardIdentifier);
    v21 += v69;
    uint64_t v18 = v37 - 1;
    if (!v18)
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = *(char **)(v0 + 464);
      goto LABEL_25;
    }
  }
  uint64_t v39 = v38;
  id v40 = [v38 collectionView];

  if (v40)
  {
    Class v22 = IndexPath._bridgeToObjectiveC()().super.isa;
    [v40 selectItemAtIndexPath:v22 animated:0 scrollPosition:1];

    goto LABEL_14;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

uint64_t sub_100D95D58()
{
  uint64_t v3 = *v1;
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v4 = *(void **)(v2 + 472);
  if (v0)
  {
    swift_errorRelease();

    uint64_t v5 = *(void *)(v3 + 448);
    uint64_t v6 = *(void *)(v3 + 456);
    uint64_t v7 = sub_100DBFB64;
  }
  else
  {

    uint64_t v5 = *(void *)(v3 + 448);
    uint64_t v6 = *(void *)(v3 + 456);
    uint64_t v7 = sub_100D95E94;
  }
  return _swift_task_switch(v7, v5, v6);
}

void sub_100D95E94()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    uint64_t v4 = *(char **)(v0 + 464);
    goto LABEL_27;
  }
  uint64_t v2 = Strong;
  unsigned __int8 v3 = [Strong isEditing];

  uint64_t v4 = *(char **)(v0 + 464);
  if ((v3 & 1) == 0)
  {
LABEL_27:

LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v51 = *(void (**)(void))(v0 + 8);
    v51();
    return;
  }
  uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_duplicateBoardIdentifiers];
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
LABEL_16:
    uint64_t v28 = *(void *)&v4[OBJC_IVAR____TtC8Freeform24CRLBoardDuplicateCommand_sourceBoardIdentifiers];
    uint64_t v29 = *(void *)(v28 + 16);
    if (v29)
    {
      uint64_t v30 = *(void *)(v0 + 416);
      uint64_t v31 = *(void *)(v0 + 368);
      uint64_t v32 = v28 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      swift_bridgeObjectRetain();
      swift_beginAccess();
      uint64_t v55 = (void (**)(void, void, void))(v31 + 32);
      id v53 = (void (**)(void, void))(v31 + 8);
      uint64_t v57 = *(void *)(v30 + 72);
      uint64_t v59 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
      do
      {
        uint64_t v34 = *(void *)(v0 + 424);
        uint64_t v35 = *(void *)(v0 + 400);
        uint64_t v36 = *(void *)(v0 + 360);
        uint64_t v37 = *(void *)(v0 + 344);
        sub_100DBF940(v32, v34, type metadata accessor for CRLBoardIdentifier);
        uint64_t v38 = (void *)(v35 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
        sub_100DBF940(v34, v35, type metadata accessor for CRLBoardIdentifier);
        *uint64_t v38 = 0;
        v38[1] = 0xE000000000000000;
        swift_storeEnumTagMultiPayload();
        id v39 = sub_100D72460();
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

        if ((*v59)(v37, 1, v36) == 1)
        {
          sub_100522F00(*(void *)(v0 + 344), (uint64_t *)&unk_10169B4A0);
          if (qword_10166F9C8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v40 = (void *)static OS_os_log.crlDefault;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          id v42 = v40;
          uint64_t v43 = UUID.uuidString.getter();
          uint64_t v45 = v44;
          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = sub_100528BE4();
          *(void *)(inited + 32) = v43;
          *(void *)(inited + 40) = v45;
          uint64_t v46 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Could not de-select an original board following its duplication (no IndexPath found for identifier %{public}@)", 110, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();
        }
        else
        {
          (*v55)(*(void *)(v0 + 376), *(void *)(v0 + 344), *(void *)(v0 + 360));
          uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v47)
          {
            uint64_t v48 = v47;
            id v49 = [v47 collectionView];

            if (!v49) {
              goto LABEL_33;
            }
            Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
            [v49 deselectItemAtIndexPath:isa animated:0];
          }
          (*v53)(*(void *)(v0 + 376), *(void *)(v0 + 360));
        }
        uint64_t v33 = *(void *)(v0 + 424);
        sub_100DBFA10(*(void *)(v0 + 400), type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10(v33, type metadata accessor for CRLBoardIdentifier);
        v32 += v57;
        --v29;
      }
      while (v29);

      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v7 = *(void *)(v0 + 416);
  uint64_t v8 = *(void *)(v0 + 368);
  uint64_t v9 = v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  swift_bridgeObjectRetain();
  swift_beginAccess();
  unint64_t v54 = (void (**)(void, void, void))(v8 + 32);
  unint64_t v52 = (void (**)(void, void))(v8 + 8);
  uint64_t v56 = *(void *)(v7 + 72);
  uint64_t v58 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  while (1)
  {
    uint64_t v11 = *(void *)(v0 + 432);
    uint64_t v12 = *(void *)(v0 + 408);
    uint64_t v13 = *(void *)(v0 + 352);
    uint64_t v14 = *(void *)(v0 + 360);
    sub_100DBF940(v9, v11, type metadata accessor for CRLBoardIdentifier);
    unsigned __int8 v15 = (void *)(v12 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
    sub_100DBF940(v11, v12, type metadata accessor for CRLBoardIdentifier);
    *unsigned __int8 v15 = 0;
    v15[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    id v16 = sub_100D72460();
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

    if ((*v58)(v13, 1, v14) == 1)
    {
      sub_100522F00(*(void *)(v0 + 352), (uint64_t *)&unk_10169B4A0);
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v17 = (void *)static OS_os_log.crlDefault;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_10117E810;
      id v19 = v17;
      uint64_t v20 = UUID.uuidString.getter();
      uint64_t v22 = v21;
      *(void *)(v18 + 56) = &type metadata for String;
      *(void *)(v18 + 64) = sub_100528BE4();
      *(void *)(v18 + 32) = v20;
      *(void *)(v18 + 40) = v22;
      uint64_t v23 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Could not select a new board which resulted from duplicating an existing board (no IndexPath found for identifier %{public}@)", 125, 2, v18);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      goto LABEL_6;
    }
    (*v54)(*(void *)(v0 + 384), *(void *)(v0 + 352), *(void *)(v0 + 360));
    uint64_t v24 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v24) {
      break;
    }
LABEL_5:
    (*v52)(*(void *)(v0 + 384), *(void *)(v0 + 360));
LABEL_6:
    uint64_t v10 = *(void *)(v0 + 432);
    sub_100DBFA10(*(void *)(v0 + 408), type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100DBFA10(v10, type metadata accessor for CRLBoardIdentifier);
    v9 += v56;
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = *(char **)(v0 + 464);
      goto LABEL_16;
    }
  }
  uint64_t v25 = v24;
  id v26 = [v24 collectionView];

  if (v26)
  {
    Class v27 = IndexPath._bridgeToObjectiveC()().super.isa;
    [v26 selectItemAtIndexPath:v27 animated:0 scrollPosition:1];

    goto LABEL_5;
  }
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_100D96684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver);
  if (v7)
  {
    uint64_t v8 = self;
    swift_unknownObjectRetain();
    id v9 = [v8 defaultCenter];
    [v9 removeObserver:v7];

    sub_100D72A9C(0);
    swift_unknownObjectRelease();
  }
  if (a2) {
    sub_100D9673C(a4, a1, a2);
  }
}

void sub_100D9673C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v115 = a3;
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v109 = (uint64_t)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v12 - 8, v13);
  unsigned __int8 v15 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  id v19 = (char *)&v98 - v18;
  uint64_t v112 = type metadata accessor for IndexPath();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112, v20);
  id v110 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v106 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v106 + 64);
  __chkstk_darwin(v22, v24);
  uint64_t v25 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v108 = (uint64_t)&v98 - v28;
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v98 - v31;
  uint64_t v33 = type metadata accessor for CRLBoardIdentifier(0);
  id v107 = *(unsigned __int8 **)(v33 - 8);
  __chkstk_darwin(v33 - 8, v34);
  uint64_t v105 = (uint64_t)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = v35;
  __chkstk_darwin(v36, v37);
  id v39 = (char *)&v98 - v38;
  uint64_t v114 = a1;
  sub_100DBF940(a1, (uint64_t)v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    id v40 = &v32[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
    uint64_t v42 = *(void *)v40;
    uint64_t v41 = *((void *)v40 + 1);
    sub_100DBF9A8((uint64_t)v32, (uint64_t)v39, type metadata accessor for CRLBoardIdentifier);
    if (v42 == a2 && v41 == v115 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v43 = (void *)static OS_os_log.crlDefault;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v42;
      *(void *)(inited + 40) = v41;
      id v45 = v43;
      uint64_t v46 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Skipping rename because there was no change: %@", 47, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100DBFA10((uint64_t)v39, type metadata accessor for CRLBoardIdentifier);
      return;
    }
    uint64_t v102 = v42;
    uint64_t v103 = a2;
    id v61 = sub_100D72460();
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

    uint64_t v62 = v111;
    id v63 = *(unsigned int (**)(void, void, void))(v111 + 48);
    uint64_t v64 = v112;
    if (v63(v15, 1, v112) == 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"finishRenaming(item:to:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2669, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"finishRenaming(item:to:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2669);
    }
    sub_10051B3EC((uint64_t)v15, (uint64_t)v19, (uint64_t *)&unk_10169B4A0);
    if (v63(v19, 1, v64) == 1)
    {
      sub_100DBFA10((uint64_t)v39, type metadata accessor for CRLBoardIdentifier);
      swift_bridgeObjectRelease();
      sub_100522F00((uint64_t)v19, (uint64_t *)&unk_10169B4A0);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v110, v19, v64);
    id v65 = [v113 collectionView];
    if (!v65)
    {
      __break(1u);
      return;
    }
    uint64_t v66 = v65;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    uint64_t v68 = [v66 cellForItemAtIndexPath:isa];

    uint64_t v101 = v41;
    if (v68)
    {
      swift_getObjectType();
      uint64_t v69 = swift_conformsToProtocol2();
      if (v69) {
        uint64_t v70 = v69;
      }
      else {
        uint64_t v70 = 0;
      }
      if (v69) {
        double v71 = (unsigned __int8 *)v68;
      }
      else {
        double v71 = 0;
      }
      if (v71) {
        goto LABEL_32;
      }
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"finishRenaming(item:to:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2673, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"finishRenaming(item:to:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2673);
    double v71 = 0;
    uint64_t v70 = 0;
LABEL_32:
    uint64_t v72 = v103;
    uint64_t v73 = v115;
    uint64_t v74 = String.count.getter();
    swift_bridgeObjectRetain();
    uint64_t v75 = v72;
    if (v74 >= 256)
    {
      sub_100E704DC(255);
      swift_bridgeObjectRelease();
      uint64_t v75 = static String._fromSubstring(_:)();
      uint64_t v73 = v76;
      swift_bridgeObjectRelease();
    }
    uint64_t v100 = v70;
    id v99 = v71;
    if (v71)
    {
      uint64_t ObjectType = swift_getObjectType();
      int v78 = *(void (**)(void, void, void, void))(v70 + 152);
      swift_unknownObjectRetain();
      v78(v75, v73, ObjectType, v70);
      swift_unknownObjectRelease();
      uint64_t v79 = v71;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v79 = 0;
    }
    unsigned __int8 v80 = v107;
    id v107 = v79;
    uint64_t v81 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v109, 1, 1, v81);
    uint64_t v82 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v98 = v39;
    uint64_t v83 = (uint64_t)v39;
    uint64_t v84 = v105;
    sub_100DBF940(v83, v105, type metadata accessor for CRLBoardIdentifier);
    sub_100DBF940(v114, v108, type metadata accessor for CRLBoardLibraryViewModel.Item);
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v114 = static MainActor.shared.getter();
    unint64_t v85 = (v80[80] + 32) & ~(unint64_t)v80[80];
    unint64_t v86 = (v104 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v87 = (v86 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v88 = (v87 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v89 = (v88 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v90 = (*(unsigned __int8 *)(v106 + 80) + v89 + 16) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = v114;
    *(void *)(v91 + 24) = &protocol witness table for MainActor;
    sub_100DBF9A8(v84, v91 + v85, type metadata accessor for CRLBoardIdentifier);
    id v92 = (uint64_t *)(v91 + v86);
    uint64_t v93 = v115;
    uint64_t *v92 = v103;
    v92[1] = v93;
    *(void *)(v91 + v87) = v82;
    id v94 = (void *)(v91 + v88);
    uint64_t v95 = v100;
    *id v94 = v99;
    v94[1] = v95;
    uint64_t v96 = (void *)(v91 + v89);
    uint64_t v97 = v101;
    *uint64_t v96 = v102;
    v96[1] = v97;
    sub_100DBF9A8(v108, v91 + v90, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_release();
    sub_1005912D0(v109, (uint64_t)&unk_10169B650, v91);
    swift_release();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v112);
    sub_100DBFA10((uint64_t)v98, type metadata accessor for CRLBoardIdentifier);
    return;
  }
  sub_100DBFA10((uint64_t)v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v47 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v48 = swift_initStackObject();
  *(_OWORD *)(v48 + 16) = xmmword_10117E810;
  sub_100DBF940(v114, (uint64_t)v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100DBF9A8((uint64_t)v25, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      id v50 = v47;
      uint64_t v51 = sub_100DD4C48();
      uint64_t v53 = v52;
      unint64_t v54 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
      uint64_t v55 = (uint64_t)v8;
    }
    else
    {
      uint64_t v58 = (uint64_t *)&v25[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
      uint64_t v51 = *v58;
      uint64_t v53 = v58[1];
      id v59 = v47;
      unint64_t v54 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v55 = (uint64_t)v25;
    }
    sub_100DBFA10(v55, v54);
  }
  else
  {
    id v56 = v47;
    uint64_t v51 = sub_100DD8CAC();
    uint64_t v53 = v57;
  }
  *(void *)(v48 + 56) = &type metadata for String;
  *(void *)(v48 + 64) = sub_100528BE4();
  *(void *)(v48 + 32) = v51;
  *(void *)(v48 + 40) = v53;
  uint64_t v60 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v60, (uint64_t)"Cannot rename item %@ (only board renaming is currently supported)", 66, 2, v48);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_100D97498(void *a1)
{
  id v1 = [a1 textFields];
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  sub_10050BF48(0, (unint64_t *)&qword_101674D60);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v4 = *(id *)(v3 + 32);
  }
  id v6 = v4;
  swift_bridgeObjectRelease();
  [v6 selectAll:0];
}

uint64_t sub_100D975DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"beginRenaming(item:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2647, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginRenaming(item:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2647);
    [self logFullBacktrace];
  }
  uint64_t v14 = Notification.userInfo.getter();
  if (!v14)
  {
    long long v30 = 0u;
    long long v31 = 0u;
    return sub_100522F00((uint64_t)&v30, &qword_101672BF0);
  }
  uint64_t v15 = v14;
  v28[1] = 0xD000000000000017;
  _OWORD v28[2] = 0x8000000101240F40;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_10095647C((uint64_t)v29), (v17 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v30);
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v29);
  if (!*((void *)&v31 + 1)) {
    return sub_100522F00((uint64_t)&v30, &qword_101672BF0);
  }
  sub_1005057FC(&qword_101677400);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v19 = v29[0];
    sub_100DBF940(a2, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1005057FC(&qword_101677100);
      swift_bridgeObjectRelease();
      sub_100DBF9A8((uint64_t)v9, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
      char v20 = sub_1006E5EA4((uint64_t)v13, v19);
      swift_bridgeObjectRelease();
      if (v20)
      {
        swift_beginAccess();
        uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v22 = Strong;
          uint64_t v23 = *(void *)&Strong[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver];
          if (v23)
          {
            uint64_t v24 = self;
            swift_unknownObjectRetain();
            id v25 = [v24 defaultCenter];
            [v25 removeObserver:v23];

            sub_100D72A9C(0);
            swift_unknownObjectRelease();
          }
          else
          {
          }
        }
        [a4 dismissViewControllerAnimated:1 completion:0];
      }
      uint64_t v26 = type metadata accessor for CRLBoardIdentifier;
      uint64_t v27 = (uint64_t)v13;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = type metadata accessor for CRLBoardLibraryViewModel.Item;
      uint64_t v27 = (uint64_t)v9;
    }
    return sub_100DBFA10(v27, v26);
  }
  return result;
}

uint64_t sub_100D979F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 312) = v14;
  *(void *)(v8 + 320) = v15;
  *(_OWORD *)(v8 + 296) = v13;
  *(void *)(v8 + 280) = a7;
  *(void *)(v8 + 288) = a8;
  *(void *)(v8 + 264) = a5;
  *(void *)(v8 + 272) = a6;
  *(void *)(v8 + 256) = a4;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(void *)(v8 + 328) = swift_task_alloc();
  *(void *)(v8 + 336) = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  *(void *)(v8 + 344) = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v8 + 352) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v8 + 360) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 368) = v10;
  *(void *)(v8 + 376) = v9;
  return _swift_task_switch(sub_100D97B34, v10, v9);
}

void sub_100D97B34()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 264);
  sub_100DBF940(*(void *)(v0 + 256), v1, type metadata accessor for CRLBoardIdentifier);
  id v4 = (objc_class *)type metadata accessor for CRLSetBoardTitleCommand();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = &v5[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_previousBoardTitle];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  sub_100DBF940(v1, (uint64_t)&v5[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardIdentifier], type metadata accessor for CRLBoardIdentifier);
  uint64_t v7 = &v5[OBJC_IVAR____TtC8Freeform23CRLSetBoardTitleCommand_boardTitle];
  *(void *)uint64_t v7 = v3;
  *((void *)v7 + 1) = v2;
  *(void *)(v0 + 224) = v5;
  *(void *)(v0 + 232) = v4;
  swift_bridgeObjectRetain();
  [v0 super init];
  *(void *)(v0 + 384) = v8;
  sub_100DBFA10(v1, type metadata accessor for CRLBoardIdentifier);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    id v11 = [self sharedApplication];
    id v12 = [v11 delegate];

    if (v12)
    {
      type metadata accessor for CRLiOSAppDelegate();
      long long v13 = *(void **)(swift_dynamicCastClassUnconditional()
                     + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibraryCommandController);
      *(void *)(v0 + 392) = v13;
      if (!v13)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibraryCommandController", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 61);
      }
      v13;
      swift_unknownObjectRelease();

      if (v13)
      {
        uint64_t v14 = (void *)swift_task_alloc();
        *(void *)(v0 + 400) = v14;
        void *v14 = v0;
        v14[1] = sub_100D97E74;
        sub_100DF8B44((uint64_t)v8);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(void (**)(void))(v0 + 8);
  v15();
}

uint64_t sub_100D97E74()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 408) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 368);
    uint64_t v4 = *(void *)(v2 + 376);
    uint64_t v5 = sub_100D98014;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 368);
    uint64_t v4 = *(void *)(v2 + 376);
    uint64_t v5 = sub_100D97F90;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100D97F90()
{
  uint64_t v1 = *(void **)(v0 + 384);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100D98014()
{
  uint64_t v2 = *(void **)(v0 + 384);
  uint64_t v1 = *(void **)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 288);
  swift_release();

  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 304);
    uint64_t v4 = *(void *)(v0 + 312);
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t ObjectType = swift_getObjectType();
    id v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 152);
    swift_bridgeObjectRetain();
    v8(v5, v4, ObjectType, v6);
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    *(void *)(v0 + 248) = *(void *)(v0 + 408);
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    if (swift_dynamicCast())
    {
      uint64_t v11 = *(void *)(v0 + 200);
      uint64_t v12 = *(void *)(v0 + 208);
      char v13 = *(unsigned char *)(v0 + 216);
      sub_1006F6E90(v11, v12, v13);
      if (v14)
      {
        sub_1006F7004(v11, v12, v13);
        uint64_t v16 = v15;
        sub_100651F90(v11, v12, v13);
        if (v16)
        {
          NSString v17 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          NSString v18 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v19 = [self alertControllerWithTitle:v17 message:v18 preferredStyle:1];

          id v20 = [self mainBundle];
          NSString v21 = String._bridgeToObjectiveC()();
          NSString v22 = String._bridgeToObjectiveC()();
          id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v24 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v25 = [self actionWithTitle:v24 style:0 handler:0];

          [v19 addAction:v25];
          [v10 presentViewController:v19 animated:1 completion:0];

          goto LABEL_20;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100651F90(v11, v12, v13);
      }
    }
  }
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  uint64_t v26 = *(void *)(v0 + 344);
  uint64_t v27 = *(void *)(v0 + 320);
  swift_beginAccess();
  uint64_t v10 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  sub_100DBF940(v27, v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
  EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v30 = *(void *)(v0 + 328);
      sub_100DBF9A8(*(void *)(v0 + 344), v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      id v31 = v10;
      uint64_t v32 = sub_100DD4C48();
      uint64_t v34 = v33;
      uint64_t v35 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
    }
    else
    {
      uint64_t v30 = *(void *)(v0 + 344);
      uint64_t v38 = (uint64_t *)(v30 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
      uint64_t v32 = *v38;
      uint64_t v34 = v38[1];
      id v39 = v10;
      uint64_t v35 = type metadata accessor for CRLBoardIdentifier;
    }
    sub_100DBFA10(v30, v35);
  }
  else
  {
    id v36 = v10;
    uint64_t v32 = sub_100DD8CAC();
    uint64_t v34 = v37;
  }
  uint64_t v40 = *(void *)(v0 + 408);
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v41 = sub_100528BE4();
  *(void *)(inited + 64) = v41;
  *(void *)(inited + 32) = v32;
  *(void *)(inited + 40) = v34;
  *(void *)(v0 + 240) = v40;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v42 = String.init<A>(describing:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v41;
  *(void *)(inited + 72) = v42;
  *(void *)(inited + 80) = v43;
  uint64_t v44 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v44, (uint64_t)"Error renaming item (%@): %@", 28, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
LABEL_20:

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_100D9857C(void *a1)
{
  id v2 = [a1 searchBar];
  id v3 = [v2 text];

  if (v3)
  {
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v6 = 0xE000000000000000;
  }
  uint64_t v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString + 8);
  *uint64_t v7 = v4;
  v7[1] = v6;
  sub_100D72BE8(v8, v9);

  return swift_bridgeObjectRelease();
}

void sub_100D98690(uint64_t a1)
{
  sub_100522E9C(a1, (uint64_t)v54, &qword_101672BF0);
  if (!v54[3])
  {
    sub_100522F00((uint64_t)v54, &qword_101672BF0);
    goto LABEL_13;
  }
  type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"didRecognizeSingleContinuousTouchGesture(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2780, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didRecognizeSingleContinuousTouchGesture(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2780);
    return;
  }
  uint64_t v1 = v55;
  id v2 = *(id *)((char *)v55
             + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController38SingleContinuousTouchGestureRecognizer_trackedTouch);
  if (!v2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"didRecognizeSingleContinuousTouchGesture(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2781, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didRecognizeSingleContinuousTouchGesture(_:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 2781);

    return;
  }
  id v3 = v2;
  uint64_t v4 = (char *)[v1 state];
  if ((unint64_t)(v4 - 3) < 3)
  {
    unint64_t v5 = sub_100D73EEC();
    id v6 = v3;
    sub_100D9AE1C(v2, 0, 0);
    uint64_t v7 = *(void *)(v5 + 48);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(0);
    swift_bridgeObjectRetain_n();
    id v2 = v6;
    NSObject.hash(into:)();

    Swift::Int v8 = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v10 = v8 & ~v9;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v52 = v1;
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v1 = (uint64_t *)(16 * v10);
      uint64_t v12 = *(void *)(v7 + 48) + 16 * v10;
      if (!*(unsigned char *)(v12 + 8))
      {
        char v13 = *(void **)v12;
        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        id v14 = v2;
        sub_1007A0914(v13, 0);
        char v15 = static NSObject.== infix(_:_:)();

        sub_1007A0938(v13, 0);
        if (v15) {
          break;
        }
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v52;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v54[0] = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_43;
    }
LABEL_11:
    NSString v17 = (char *)v1 + *(void *)(v7 + 48);
    NSString v18 = *(void **)v17;
    unsigned __int8 v19 = v17[8];
    sub_100DA1A78(v10);
    uint64_t v7 = v54[0];
    swift_bridgeObjectRelease();
    sub_1007A0938(v18, v19);
    uint64_t v1 = v52;
LABEL_25:
    uint64_t v31 = *(void *)(v5 + 48);
    swift_bridgeObjectRetain();
    sub_100D991B4(v7);
    *(void *)(v5 + 48) = v7;
    swift_bridgeObjectRelease();
    sub_100D994DC(v31);
    swift_release();

    swift_bridgeObjectRelease();
    return;
  }
  if (v4 == (char *)1)
  {
    uint64_t v20 = sub_100D73EEC();
    id v21 = v3;
    sub_100D9AE1C(v2, 0, 1);
    uint64_t v51 = v20;
    unint64_t v10 = *(void *)(v20 + 48);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(0);
    id v22 = v21;
    swift_bridgeObjectRetain_n();
    id v23 = v22;
    NSObject.hash(into:)();
    uint64_t v53 = v23;

    Swift::Int v24 = Hasher._finalize()();
    uint64_t v25 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v5 = v24 & ~v25;
    uint64_t v52 = v1;
    if ((*(void *)(v10 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v26 = ~v25;
      uint64_t v1 = &qword_101672E50;
      while (1)
      {
        uint64_t v27 = *(void *)(v10 + 48) + 16 * v5;
        if (!*(unsigned char *)(v27 + 8))
        {
          uint64_t v28 = *(void **)v27;
          sub_10050BF48(0, (unint64_t *)&qword_101672E50);
          id v29 = v53;
          sub_1007A0914(v28, 0);
          char v30 = static NSObject.== infix(_:_:)();

          sub_1007A0938(v28, 0);
          if (v30) {
            break;
          }
        }
        unint64_t v5 = (v5 + 1) & v26;
        if (((*(void *)(v10 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_27;
        }
      }
    }
    else
    {
LABEL_27:
      swift_bridgeObjectRelease();
      int v32 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v55 = (uint64_t *)v10;
      unint64_t v33 = *(void *)(v10 + 16);
      unint64_t v34 = *(void *)(v10 + 24);
      id v35 = v53;
      id v36 = v35;
      if (v34 <= v33)
      {
        if (v32) {
          sub_100CC3A40();
        }
        else {
          sub_100CD4C78();
        }
        uint64_t v38 = v55;
        Hasher.init(_seed:)();
        Hasher._combine(_:)(0);
        uint64_t v37 = v36;
        id v39 = v36;
        NSObject.hash(into:)();

        Swift::Int v40 = Hasher._finalize()();
        uint64_t v41 = -1 << *((unsigned char *)v38 + 32);
        unint64_t v5 = v40 & ~v41;
        if ((*(unint64_t *)((char *)v38 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v5))
        {
          uint64_t v42 = ~v41;
          while (1)
          {
            uint64_t v43 = v38[6] + 16 * v5;
            if (!*(unsigned char *)(v43 + 8))
            {
              uint64_t v44 = *(void **)v43;
              sub_10050BF48(0, (unint64_t *)&qword_101672E50);
              uint64_t v1 = (uint64_t *)v39;
              sub_1007A0914(v44, 0);
              char v45 = static NSObject.== infix(_:_:)();

              sub_1007A0938(v44, 0);
              if (v45) {
                break;
              }
            }
            unint64_t v5 = (v5 + 1) & v42;
            if (((*(unint64_t *)((char *)v38 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v5) & 1) == 0) {
              goto LABEL_39;
            }
          }
          ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
        }
      }
      else
      {
        uint64_t v37 = v35;
        if ((v32 & 1) == 0) {
          sub_100CCDF1C();
        }
      }
LABEL_39:
      unint64_t v10 = (unint64_t)v55;
      *(uint64_t *)((char *)v55 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v5;
      uint64_t v46 = *(void *)(v10 + 48) + 16 * v5;
      *(void *)uint64_t v46 = v2;
      *(unsigned char *)(v46 + 8) = 0;
      uint64_t v47 = *(void *)(v10 + 16);
      BOOL v48 = __OFADD__(v47, 1);
      uint64_t v49 = v47 + 1;
      if (v48)
      {
        __break(1u);
LABEL_43:
        sub_100CCDF1C();
        uint64_t v7 = v54[0];
        goto LABEL_11;
      }
      *(void *)(v10 + 16) = v49;
    }
    swift_bridgeObjectRelease();
    uint64_t v50 = *(void *)(v51 + 48);
    swift_bridgeObjectRetain();
    sub_100D991B4(v10);
    *(void *)(v51 + 48) = v10;
    swift_bridgeObjectRelease();
    sub_100D994DC(v50);
    swift_release();

    swift_bridgeObjectRelease();
  }
  else
  {
  }
}

void sub_100D98E3C(uint64_t a1, void *a2, char a3)
{
  switch(a3)
  {
    case 1:
      Hasher._combine(_:)(1uLL);
      id v7 = a2;
      NSObject.hash(into:)();
      unint64_t v5 = a2;
      unsigned __int8 v6 = 1;
      goto LABEL_5;
    case 2:
      Hasher._combine(_:)(2uLL);
      id v8 = a2;
      NSObject.hash(into:)();
      unint64_t v5 = a2;
      unsigned __int8 v6 = 2;
      goto LABEL_5;
    case 3:
      if (a2)
      {
        if (a2 == (void *)1) {
          Swift::UInt v9 = 4;
        }
        else {
          Swift::UInt v9 = 5;
        }
      }
      else
      {
        Swift::UInt v9 = 3;
      }
      Hasher._combine(_:)(v9);
      return;
    default:
      Hasher._combine(_:)(0);
      id v4 = a2;
      NSObject.hash(into:)();
      unint64_t v5 = a2;
      unsigned __int8 v6 = 0;
LABEL_5:
      sub_1007A0938(v5, v6);
      return;
  }
}

Swift::Int sub_100D98F48(void *a1, char a2)
{
  Hasher.init(_seed:)();
  switch(a2)
  {
    case 1:
      Hasher._combine(_:)(1uLL);
      id v5 = a1;
      NSObject.hash(into:)();
      sub_1007A0938(a1, 1u);
      break;
    case 2:
      Hasher._combine(_:)(2uLL);
      id v6 = a1;
      NSObject.hash(into:)();
      sub_1007A0938(a1, 2u);
      break;
    case 3:
      if (a1)
      {
        if (a1 == (void *)1) {
          Swift::UInt v7 = 4;
        }
        else {
          Swift::UInt v7 = 5;
        }
      }
      else
      {
        Swift::UInt v7 = 3;
      }
      Hasher._combine(_:)(v7);
      break;
    default:
      Hasher._combine(_:)(0);
      id v4 = a1;
      NSObject.hash(into:)();
      sub_1007A0938(a1, 0);
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_100D99068()
{
  return sub_100D98F48(*(void **)v0, *(unsigned char *)(v0 + 8));
}

void sub_100D99074(uint64_t a1)
{
  sub_100D98E3C(a1, *(void **)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_100D99080()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  switch(v2)
  {
    case 1:
      Hasher._combine(_:)(1uLL);
      id v4 = v1;
      NSObject.hash(into:)();
      sub_1007A0938(v1, 1u);
      break;
    case 2:
      Hasher._combine(_:)(2uLL);
      id v5 = v1;
      NSObject.hash(into:)();
      sub_1007A0938(v1, 2u);
      break;
    case 3:
      if (v1)
      {
        if (v1 == (void *)1) {
          Swift::UInt v6 = 4;
        }
        else {
          Swift::UInt v6 = 5;
        }
      }
      else
      {
        Swift::UInt v6 = 3;
      }
      Hasher._combine(_:)(v6);
      break;
    default:
      Hasher._combine(_:)(0);
      id v3 = v1;
      NSObject.hash(into:)();
      sub_1007A0938(v1, 0);
      break;
  }
  return Hasher._finalize()();
}

BOOL sub_100D9919C(uint64_t a1, uint64_t a2)
{
  return sub_100DB1FA4(*(void **)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

void sub_100D991B4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  char v4 = sub_100A3ECD0(a1, v3);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (*(void *)(*(void *)(v1 + 48) + 16))
    {
      if (!v5)
      {
        if (qword_10166FA58 != -1) {
          swift_once();
        }
        swift_beginAccess();
        Swift::UInt v6 = (void *)static OS_os_log.crlFolderUI;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        id v8 = v6;
        uint64_t v9 = sub_100D9AC08();
        uint64_t v11 = v10;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v12 = sub_100528BE4();
        *(void *)(inited + 32) = v9;
        *(void *)(inited + 40) = v11;
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v12;
        *(void *)(inited + 64) = v12;
        *(void *)(inited + 72) = 0xD000000000000026;
        *(void *)(inited + 80) = 0x8000000101288820;
        uint64_t v13 = static os_log_type_t.info.getter();
        sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v13, (uint64_t)"%@: %@", 6, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_100D99DB8();
      }
    }
    else if (v5 && *(unsigned char *)(v1 + 72) == 1)
    {
      if (qword_10166FA58 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v14 = (void *)static OS_os_log.crlFolderUI;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_10117D8C0;
      id v16 = v14;
      uint64_t v17 = sub_100D9AC08();
      uint64_t v19 = v18;
      *(void *)(v15 + 56) = &type metadata for String;
      unint64_t v20 = sub_100528BE4();
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 40) = v19;
      *(void *)(v15 + 96) = &type metadata for String;
      *(void *)(v15 + 104) = v20;
      *(void *)(v15 + 64) = v20;
      *(void *)(v15 + 72) = 0xD000000000000047;
      *(void *)(v15 + 80) = 0x8000000101288850;
      uint64_t v21 = static os_log_type_t.info.getter();
      sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v21, (uint64_t)"%@: %@", 6, 2, v15);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      *(unsigned char *)(v1 + 72) = 0;
      if (*(void *)(v1 + 80))
      {
        swift_retain();
        sub_1005057FC(&qword_10167BA70);
        sub_1005057FC(&qword_101672BD0);
        Task.cancel()();
        swift_release();
      }
      sub_100D99CD4(0);
    }
  }
}

void sub_100D994DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 48);
  swift_bridgeObjectRetain();
  char v5 = sub_100A3ECD0(a1, v4);
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v6
      && (Hasher.init(_seed:)(),
          Hasher._combine(_:)(5uLL),
          Swift::Int v7 = Hasher._finalize()(),
          uint64_t v8 = -1 << *(unsigned char *)(a1 + 32),
          unint64_t v9 = v7 & ~v8,
          ((*(void *)(a1 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
    {
      uint64_t v10 = ~v8;
      while (1)
      {
        uint64_t v11 = *(void *)(a1 + 48) + 16 * v9;
        if (*(unsigned __int8 *)(v11 + 8) >= 3u && *(void *)v11 >= 2uLL) {
          break;
        }
        unint64_t v9 = (v9 + 1) & v10;
        if (((*(void *)(a1 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_9;
        }
      }
      sub_100D997E8();
    }
    else
    {
LABEL_9:
      if (sub_100D997E8())
      {
        if (qword_10166FA58 != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v12 = (void *)static OS_os_log.crlFolderUI;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        id v14 = v12;
        uint64_t v15 = sub_100D9AC08();
        uint64_t v17 = v16;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v18 = sub_100528BE4();
        *(void *)(inited + 32) = v15;
        *(void *)(inited + 40) = v17;
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v18;
        *(void *)(inited + 64) = v18;
        *(void *)(inited + 72) = 0xD000000000000017;
        uint64_t v19 = "Now ignoring refreshes.";
        goto LABEL_18;
      }
    }
    if (!v6 && *(void *)(*(void *)(v2 + 48) + 16))
    {
      if (qword_10166FA58 != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v20 = (void *)static OS_os_log.crlFolderUI;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      id v14 = v20;
      uint64_t v21 = sub_100D9AC08();
      uint64_t v23 = v22;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v24 = sub_100528BE4();
      *(void *)(inited + 32) = v21;
      *(void *)(inited + 40) = v23;
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v24;
      *(void *)(inited + 64) = v24;
      *(void *)(inited + 72) = 0xD000000000000019;
      uint64_t v19 = "Now suspending refreshes.";
LABEL_18:
      *(void *)(inited + 80) = (unint64_t)(v19 - 32) | 0x8000000000000000;
      uint64_t v25 = static os_log_type_t.info.getter();
      sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v25, (uint64_t)"%@: %@", 6, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
    }
  }
}

uint64_t sub_100D997E8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  Hasher.init(_seed:)();
  Hasher._combine(_:)(5uLL);
  Swift::Int v2 = Hasher._finalize()();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = ~v3;
  while (1)
  {
    uint64_t v6 = *(void *)(v1 + 48) + 16 * v4;
    if (*(unsigned __int8 *)(v6 + 8) >= 3u && *(void *)v6 > 1uLL) {
      break;
    }
    unint64_t v4 = (v4 + 1) & v5;
    if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      return 0;
    }
  }
  return 1;
}

void sub_100D998B0()
{
  if (*(void *)(*(void *)(v0 + 48) + 16) || (sub_100D997E8() & 1) != 0 || *(unsigned char *)(v0 + 72) == 1)
  {
    if (sub_100D997E8())
    {
      if (qword_10166FA58 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v1 = (void *)static OS_os_log.crlFolderUI;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      id v3 = v1;
      uint64_t v4 = sub_100D9AC08();
      uint64_t v6 = v5;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v7 = sub_100528BE4();
      *(void *)(inited + 32) = v4;
      *(void *)(inited + 40) = v6;
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v7;
      *(void *)(inited + 64) = v7;
      *(void *)(inited + 72) = 0xD000000000000054;
      *(void *)(inited + 80) = 0x8000000101288D20;
      uint64_t v8 = static os_log_type_t.info.getter();
      sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"%@: %@", 6, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
    }
    else
    {
      if (qword_10166FA58 != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v9 = (void *)static OS_os_log.crlFolderUI;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_10117D8C0;
      id v11 = v9;
      uint64_t v12 = sub_100D9AC08();
      uint64_t v14 = v13;
      *(void *)(v10 + 56) = &type metadata for String;
      unint64_t v15 = sub_100528BE4();
      *(void *)(v10 + 32) = v12;
      *(void *)(v10 + 40) = v14;
      *(void *)(v10 + 96) = &type metadata for String;
      *(void *)(v10 + 104) = v15;
      *(void *)(v10 + 64) = v15;
      *(void *)(v10 + 72) = 0xD00000000000004ALL;
      *(void *)(v10 + 80) = 0x8000000101288CD0;
      uint64_t v16 = static os_log_type_t.info.getter();
      sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v16, (uint64_t)"%@: %@", 6, 2, v10);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      *(unsigned char *)(v0 + 41) = 1;
    }
  }
  else
  {
    if (qword_10166FA58 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v17 = (void *)static OS_os_log.crlFolderUI;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_10117D8C0;
    id v19 = v17;
    uint64_t v20 = sub_100D9AC08();
    uint64_t v22 = v21;
    *(void *)(v18 + 56) = &type metadata for String;
    unint64_t v23 = sub_100528BE4();
    *(void *)(v18 + 32) = v20;
    *(void *)(v18 + 40) = v22;
    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v23;
    *(void *)(v18 + 64) = v23;
    *(void *)(v18 + 72) = 0xD000000000000028;
    *(void *)(v18 + 80) = 0x8000000101288D80;
    uint64_t v24 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v24, (uint64_t)"%@: %@", 6, 2, v18);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    *(unsigned char *)(v0 + 72) = 0;
    if (*(void *)(v0 + 80))
    {
      swift_retain();
      sub_1005057FC(&qword_10167BA70);
      sub_1005057FC(&qword_101672BD0);
      Task.cancel()();
      swift_release();
    }
    uint64_t v25 = sub_100D99CD4(0);
    *(unsigned char *)(v0 + 41) = 0;
    (*(void (**)(uint64_t))(v0 + 56))(v25);
  }
}

uint64_t sub_100D99CD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 80);
  *(void *)(v1 + 80) = a1;
  if (swift_retain() && v2)
  {
    swift_retain();
    if (swift_task_isCancelled())
    {
      swift_release();
      return swift_release_n();
    }
    else
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  else
  {
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_100D99DB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 40))
  {
    sub_100D9A920();
  }
  else if (*(unsigned char *)(v0 + 72) == 1)
  {
    if (qword_10166FA58 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v6 = (void *)static OS_os_log.crlFolderUI;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v8 = v6;
    uint64_t v9 = sub_100D9AC08();
    uint64_t v11 = v10;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v12 = sub_100528BE4();
    *(void *)(inited + 32) = v9;
    *(void *)(inited + 40) = v11;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v12;
    *(void *)(inited + 64) = v12;
    *(void *)(inited + 72) = 0xD000000000000044;
    *(void *)(inited + 80) = 0x8000000101288BD0;
    uint64_t v13 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v13, (uint64_t)"%@: %@", 6, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 32);
    if (qword_10166FA58 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v15 = (void *)static OS_os_log.crlFolderUI;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v16 = swift_initStackObject();
    *(_OWORD *)(v16 + 16) = xmmword_10117D8C0;
    id v17 = v15;
    uint64_t v18 = sub_100D9AC08();
    uint64_t v20 = v19;
    *(void *)(v16 + 56) = &type metadata for String;
    unint64_t v21 = sub_100528BE4();
    *(void *)(v16 + 64) = v21;
    *(void *)(v16 + 32) = v18;
    *(void *)(v16 + 40) = v20;
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    _StringGuts.grow(_:)(47);
    v22._countAndFlagsBits = 0x676E697472617453;
    v22._object = (void *)0xEB00000000206120;
    String.append(_:)(v22);
    Double.write<A>(to:)();
    v23._object = (void *)0x8000000101288BA0;
    v23._countAndFlagsBits = 0xD000000000000022;
    String.append(_:)(v23);
    uint64_t v24 = v32;
    unint64_t v25 = v33;
    *(void *)(v16 + 96) = &type metadata for String;
    *(void *)(v16 + 104) = v21;
    *(void *)(v16 + 72) = v24;
    *(void *)(v16 + 80) = v25;
    uint64_t v26 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v26, (uint64_t)"%@: %@", 6, 2, v16);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    *(unsigned char *)(v1 + 72) = 1;
    uint64_t v27 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v5, 1, 1, v27);
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    id v29 = (void *)swift_allocObject();
    void v29[2] = 0;
    v29[3] = 0;
    v29[4] = v28;
    void v29[5] = v1;
    v29[6] = v14;
    swift_retain();
    uint64_t v30 = sub_1006D9474((uint64_t)v5, (uint64_t)&unk_10169B4E0, (uint64_t)v29);
    sub_100D99CD4(v30);
  }
}

uint64_t sub_100D9A20C(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(double *)(v6 + 400) = a2;
  *(void *)(v6 + 384) = a5;
  *(void *)(v6 + 392) = a6;
  *(void *)(v6 + 376) = a1;
  return _swift_task_switch(sub_100D9A234, 0, 0);
}

uint64_t sub_100D9A234()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + 392) + 80);
  *(void *)(v0 + 408) = v1;
  if (v1)
  {
    double v2 = *(double *)(v0 + 400) * 1000000000.0;
    if ((~*(void *)&v2 & 0x7FF0000000000000) != 0)
    {
      if (v2 > -1.0)
      {
        if (v2 < 1.84467441e19)
        {
          unint64_t v3 = (unint64_t)v2;
          swift_retain();
          uint64_t v4 = (void *)swift_task_alloc();
          *(void *)(v0 + 416) = v4;
          *uint64_t v4 = v0;
          v4[1] = sub_100D9A3B0;
          unint64_t v1 = v3;
          return static Task<>.sleep(nanoseconds:)(v1);
        }
LABEL_15:
        __break(1u);
        return static Task<>.sleep(nanoseconds:)(v1);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  *(void *)(*(void *)(v0 + 376) + 24) = (char *)&type metadata for () + 8;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100D99CD4(0);
    swift_release();
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100D9A3B0()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    double v2 = sub_100D9A87C;
  }
  else {
    double v2 = sub_100D9A4C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100D9A4C4()
{
  *(unsigned char *)(v0[49] + 72) = 0;
  if (swift_task_isCancelled())
  {
    if (qword_10166FA58 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v1 = (void *)static OS_os_log.crlFolderUI;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v3 = v1;
    uint64_t v4 = sub_100D9AC08();
    uint64_t v6 = v5;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v7 = sub_100528BE4();
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v7;
    *(void *)(inited + 64) = v7;
    *(void *)(inited + 72) = 0xD000000000000010;
    *(void *)(inited + 80) = 0x8000000101288C40;
    uint64_t v8 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"%@: %@", 6, 2, inited);
    swift_release();
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    if (qword_10166FA58 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v9 = (void *)static OS_os_log.crlFolderUI;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_10117D8C0;
    id v11 = v9;
    uint64_t v12 = sub_100D9AC08();
    uint64_t v14 = v13;
    *(void *)(v10 + 56) = &type metadata for String;
    unint64_t v15 = sub_100528BE4();
    *(void *)(v10 + 64) = v15;
    *(void *)(v10 + 32) = v12;
    *(void *)(v10 + 40) = v14;
    _StringGuts.grow(_:)(19);
    v0[45] = 0;
    v0[46] = 0xE000000000000000;
    Double.write<A>(to:)();
    v16._countAndFlagsBits = 0xD000000000000011;
    v16._object = (void *)0x8000000101288C20;
    String.append(_:)(v16);
    uint64_t v17 = v0[45];
    uint64_t v18 = v0[46];
    *(void *)(v10 + 96) = &type metadata for String;
    *(void *)(v10 + 104) = v15;
    *(void *)(v10 + 72) = v17;
    *(void *)(v10 + 80) = v18;
    uint64_t v19 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v19, (uint64_t)"%@: %@", 6, 2, v10);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100D9A920();
    swift_release();
  }
  *(void *)(v0[47] + 24) = (char *)&type metadata for () + 8;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100D99CD4(0);
    swift_release();
  }
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_100D9A87C()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100D99CD4(0);
    swift_release();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100D9A920()
{
  if (*(unsigned char *)(v0 + 41) == 1)
  {
    if (qword_10166FA58 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v1 = (void *)static OS_os_log.crlFolderUI;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v3 = v1;
    uint64_t v4 = sub_100D9AC08();
    uint64_t v6 = v5;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v7 = sub_100528BE4();
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v7;
    *(void *)(inited + 64) = v7;
    *(void *)(inited + 72) = 0xD000000000000035;
    *(void *)(inited + 80) = 0x8000000101288B60;
    uint64_t v8 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"%@: %@", 6, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    *(unsigned char *)(v0 + 72) = 0;
    if (*(void *)(v0 + 80))
    {
      swift_retain();
      sub_1005057FC(&qword_10167BA70);
      sub_1005057FC(&qword_101672BD0);
      Task.cancel()();
      swift_release();
    }
    uint64_t v9 = sub_100D99CD4(0);
    *(unsigned char *)(v0 + 41) = 0;
    (*(void (**)(uint64_t))(v0 + 56))(v9);
  }
  else
  {
    if (qword_10166FA58 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v10 = (void *)static OS_os_log.crlFolderUI;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_10117D8C0;
    id v12 = v10;
    uint64_t v13 = sub_100D9AC08();
    uint64_t v15 = v14;
    *(void *)(v11 + 56) = &type metadata for String;
    unint64_t v16 = sub_100528BE4();
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v15;
    *(void *)(v11 + 96) = &type metadata for String;
    *(void *)(v11 + 104) = v16;
    *(void *)(v11 + 64) = v16;
    *(void *)(v11 + 72) = 0xD00000000000001DLL;
    *(void *)(v11 + 80) = 0x8000000101288B40;
    uint64_t v17 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v17, (uint64_t)"%@: %@", 6, 2, v11);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_100D9AC08()
{
  if (*(void *)(v0 + 96))
  {
    uint64_t v1 = *(void *)(v0 + 88);
  }
  else
  {
    uint64_t v1 = sub_100D9ACA0(v0);
    *(void *)(v0 + 88) = v1;
    *(void *)(v0 + 96) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100D9ACA0(uint64_t a1)
{
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  uint64_t v2 = (void *)0xE100000000000000;
  v3._countAndFlagsBits = 60;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  swift_getMetatypeMetadata();
  v4._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 8250;
  v5._object = (void *)0xE200000000000000;
  String.append(_:)(v5);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v6 = *(void **)(a1 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    strcpy((char *)v13, ", identifier: ");
    HIBYTE(v13[1]) = -18;
    swift_bridgeObjectRetain();
    v8._countAndFlagsBits = v7;
    v8._object = v6;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._countAndFlagsBits = 62;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    uint64_t v10 = v13[0];
    uint64_t v2 = (void *)v13[1];
  }
  else
  {
    uint64_t v10 = 62;
  }
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = v10;
  v11._object = v2;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100D9AE1C(void *a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v5 = 0xE600000000000000;
  uint64_t v6 = 0x6863756F742ELL;
  switch(a2)
  {
    case 1u:
      unint64_t v5 = 0xEA0000000000676ELL;
      uint64_t v6 = 0x696C6C6F7263732ELL;
      goto LABEL_4;
    case 2u:
      unint64_t v5 = 0xEC000000756E654DLL;
      uint64_t v6 = 0x747865746E6F632ELL;
      goto LABEL_4;
    case 3u:
      if (a1)
      {
        if (a1 == (void *)1)
        {
          v85._countAndFlagsBits = 0xD000000000000026;
          unint64_t v25 = ".isPresentingBoardNavigationController";
        }
        else
        {
          v85._countAndFlagsBits = 0xD000000000000016;
          unint64_t v25 = ".ignoreRefreshRequests";
        }
        v85._object = (void *)((unint64_t)(v25 - 32) | 0x8000000000000000);
      }
      else
      {
        v85._countAndFlagsBits = 0xD00000000000001ALL;
        unint64_t v22 = 0x8000000101288B20;
LABEL_5:
        v85._object = (void *)v22;
      }
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v23 + 16);
      if (a3)
      {
        if (v24)
        {
          Hasher.init(_seed:)();
          switch(a2)
          {
            case 0u:
              Hasher._combine(_:)(0);
              sub_1007A0914(a1, 0);
              swift_bridgeObjectRetain();
              NSObject.hash(into:)();
              sub_1007A0938(a1, 0);
              goto LABEL_32;
            case 1u:
              Hasher._combine(_:)(1uLL);
              sub_1007A0914(a1, 1u);
              swift_bridgeObjectRetain();
              NSObject.hash(into:)();
              sub_1007A0938(a1, 1u);
              goto LABEL_32;
            case 2u:
              Hasher._combine(_:)(2uLL);
              sub_1007A0914(a1, 2u);
              swift_bridgeObjectRetain();
              NSObject.hash(into:)();
              sub_1007A0938(a1, 2u);
              goto LABEL_32;
            case 3u:
              if (a1)
              {
                if (a1 == (void *)1) {
                  Swift::UInt v26 = 4;
                }
                else {
                  Swift::UInt v26 = 5;
                }
              }
              else
              {
                Swift::UInt v26 = 3;
              }
              Hasher._combine(_:)(v26);
              swift_bridgeObjectRetain();
LABEL_32:
              Swift::Int v28 = Hasher._finalize()();
              uint64_t v29 = -1 << *(unsigned char *)(v23 + 32);
              unint64_t v30 = v28 & ~v29;
              if (((*(void *)(v23 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
                goto LABEL_61;
              }
              uint64_t v31 = ~v29;
              BOOL v32 = a2 == 3;
              BOOL v33 = a1 == (void *)2 && a2 == 3;
              BOOL v34 = a1 == (void *)1 && a2 == 3;
              BOOL v81 = v34;
              BOOL v83 = v33;
              if (a1) {
                BOOL v32 = 0;
              }
              BOOL v79 = v32;
              break;
            default:
              goto LABEL_104;
          }
          while (2)
          {
            uint64_t v35 = *(void *)(v23 + 48) + 16 * v30;
            id v36 = *(void **)v35;
            switch(*(unsigned char *)(v35 + 8))
            {
              case 1:
                if (a2 != 1) {
                  goto LABEL_43;
                }
                sub_10050BF48(0, (unint64_t *)&qword_101672E50);
                sub_1007A0914(a1, 1u);
                sub_1007A0914(v36, 1u);
                char v37 = static NSObject.== infix(_:_:)();
                sub_1007A0938(a1, 1u);
                uint64_t v38 = v36;
                unsigned __int8 v39 = 1;
                goto LABEL_42;
              case 2:
                if (a2 != 2) {
                  goto LABEL_43;
                }
                sub_10050BF48(0, (unint64_t *)&qword_101672E50);
                sub_1007A0914(a1, 2u);
                sub_1007A0914(v36, 2u);
                char v37 = static NSObject.== infix(_:_:)();
                sub_1007A0938(a1, 2u);
                uint64_t v38 = v36;
                unsigned __int8 v39 = 2;
                goto LABEL_42;
              case 3:
                if (v36)
                {
                  if (v36 == (void *)1)
                  {
                    if (v81) {
                      goto LABEL_58;
                    }
                  }
                  else if (v83)
                  {
LABEL_58:
                    swift_bridgeObjectRelease();
                    if (qword_10166FA58 != -1) {
                      swift_once();
                    }
                    swift_beginAccess();
                    Swift::Int v40 = (void *)static OS_os_log.crlFolderUI;
                    sub_1005057FC((uint64_t *)&unk_101672B40);
                    uint64_t inited = swift_initStackObject();
                    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
                    id v42 = v40;
                    uint64_t v43 = sub_100D9AC08();
                    uint64_t v45 = v44;
                    *(void *)(inited + 56) = &type metadata for String;
                    unint64_t v46 = sub_100528BE4();
                    *(void *)(inited + 32) = v43;
                    *(void *)(inited + 64) = v46;
                    *(void *)(inited + 40) = v45;
                    _StringGuts.grow(_:)(55);
                    v47._countAndFlagsBits = 0xD00000000000001DLL;
                    v47._object = (void *)0x8000000101288AB0;
                    String.append(_:)(v47);
                    String.append(_:)(v85);
                    swift_bridgeObjectRelease();
                    unint64_t v48 = 0xD000000000000018;
                    unint64_t v49 = 0x8000000101288AD0;
                    goto LABEL_102;
                  }
                }
                else if (v79)
                {
                  goto LABEL_58;
                }
LABEL_43:
                unint64_t v30 = (v30 + 1) & v31;
                if ((*(void *)(v23 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30)) {
                  continue;
                }
LABEL_61:
                swift_bridgeObjectRelease();
                break;
              default:
                if (a2) {
                  goto LABEL_43;
                }
                sub_10050BF48(0, (unint64_t *)&qword_101672E50);
                sub_1007A0914(a1, 0);
                sub_1007A0914(v36, 0);
                char v37 = static NSObject.== infix(_:_:)();
                sub_1007A0938(a1, 0);
                uint64_t v38 = v36;
                unsigned __int8 v39 = 0;
LABEL_42:
                sub_1007A0938(v38, v39);
                if ((v37 & 1) == 0) {
                  goto LABEL_43;
                }
                goto LABEL_58;
            }
            break;
          }
        }
        if (qword_10166FA58 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v50 = (void *)static OS_os_log.crlFolderUI;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        id v42 = v50;
        uint64_t v51 = sub_100D9AC08();
        uint64_t v53 = v52;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v54 = sub_100528BE4();
        *(void *)(inited + 32) = v51;
        *(void *)(inited + 64) = v54;
        *(void *)(inited + 40) = v53;
        _StringGuts.grow(_:)(25);
        swift_bridgeObjectRelease();
        unint64_t v55 = 0xD000000000000017;
        id v56 = "Adding suspend reason: ";
LABEL_65:
        unint64_t v86 = v55;
        unint64_t v87 = (unint64_t)(v56 - 32) | 0x8000000000000000;
        String.append(_:)(v85);
        swift_bridgeObjectRelease();
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v54;
        *(void *)(inited + 72) = v86;
        *(void *)(inited + 80) = v87;
        uint64_t v57 = static os_log_type_t.info.getter();
      }
      else
      {
        if (v24)
        {
          Hasher.init(_seed:)();
          switch(a2)
          {
            case 0u:
              Hasher._combine(_:)(0);
              sub_1007A0914(a1, 0);
              swift_bridgeObjectRetain();
              NSObject.hash(into:)();
              sub_1007A0938(a1, 0);
              break;
            case 1u:
              Hasher._combine(_:)(1uLL);
              sub_1007A0914(a1, 1u);
              swift_bridgeObjectRetain();
              NSObject.hash(into:)();
              sub_1007A0938(a1, 1u);
              break;
            case 2u:
              Hasher._combine(_:)(2uLL);
              sub_1007A0914(a1, 2u);
              swift_bridgeObjectRetain();
              NSObject.hash(into:)();
              sub_1007A0938(a1, 2u);
              break;
            case 3u:
              if (a1)
              {
                if (a1 == (void *)1) {
                  Swift::UInt v27 = 4;
                }
                else {
                  Swift::UInt v27 = 5;
                }
              }
              else
              {
                Swift::UInt v27 = 3;
              }
              Hasher._combine(_:)(v27);
              swift_bridgeObjectRetain();
              break;
            default:
LABEL_104:
              JUMPOUT(0);
          }
          Swift::Int v58 = Hasher._finalize()();
          uint64_t v59 = -1 << *(unsigned char *)(v23 + 32);
          unint64_t v60 = v58 & ~v59;
          if ((*(void *)(v23 + 56 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60))
          {
            uint64_t v61 = ~v59;
            BOOL v62 = a2 == 3;
            BOOL v63 = a1 == (void *)2 && a2 == 3;
            BOOL v64 = a1 == (void *)1 && a2 == 3;
            BOOL v82 = v64;
            BOOL v84 = v63;
            if (a1) {
              BOOL v62 = 0;
            }
            BOOL v80 = v62;
            while (1)
            {
              uint64_t v65 = *(void *)(v23 + 48) + 16 * v60;
              uint64_t v66 = *(void **)v65;
              switch(*(unsigned char *)(v65 + 8))
              {
                case 1:
                  if (a2 != 1) {
                    goto LABEL_80;
                  }
                  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
                  sub_1007A0914(a1, 1u);
                  sub_1007A0914(v66, 1u);
                  char v67 = static NSObject.== infix(_:_:)();
                  sub_1007A0938(a1, 1u);
                  uint64_t v68 = v66;
                  unsigned __int8 v69 = 1;
                  goto LABEL_79;
                case 2:
                  if (a2 != 2) {
                    goto LABEL_80;
                  }
                  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
                  sub_1007A0914(a1, 2u);
                  sub_1007A0914(v66, 2u);
                  char v67 = static NSObject.== infix(_:_:)();
                  sub_1007A0938(a1, 2u);
                  uint64_t v68 = v66;
                  unsigned __int8 v69 = 2;
                  goto LABEL_79;
                case 3:
                  if (v66)
                  {
                    if (v66 == (void *)1)
                    {
                      if (v82) {
                        goto LABEL_95;
                      }
                    }
                    else if (v84)
                    {
LABEL_95:
                      swift_bridgeObjectRelease();
                      if (qword_10166FA58 != -1) {
                        swift_once();
                      }
                      swift_beginAccess();
                      uint64_t v70 = (void *)static OS_os_log.crlFolderUI;
                      sub_1005057FC((uint64_t *)&unk_101672B40);
                      uint64_t inited = swift_initStackObject();
                      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
                      id v42 = v70;
                      uint64_t v71 = sub_100D9AC08();
                      uint64_t v73 = v72;
                      *(void *)(inited + 56) = &type metadata for String;
                      unint64_t v54 = sub_100528BE4();
                      *(void *)(inited + 32) = v71;
                      *(void *)(inited + 64) = v54;
                      *(void *)(inited + 40) = v73;
                      _StringGuts.grow(_:)(27);
                      swift_bridgeObjectRelease();
                      unint64_t v55 = 0xD000000000000019;
                      id v56 = "Removing suspend reason: ";
                      goto LABEL_65;
                    }
                  }
                  else if (v80)
                  {
                    goto LABEL_95;
                  }
LABEL_80:
                  unint64_t v60 = (v60 + 1) & v61;
                  if (((*(void *)(v23 + 56 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60) & 1) == 0) {
                    goto LABEL_98;
                  }
                  break;
                default:
                  if (a2) {
                    goto LABEL_80;
                  }
                  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
                  sub_1007A0914(a1, 0);
                  sub_1007A0914(v66, 0);
                  char v67 = static NSObject.== infix(_:_:)();
                  sub_1007A0938(a1, 0);
                  uint64_t v68 = v66;
                  unsigned __int8 v69 = 0;
LABEL_79:
                  sub_1007A0938(v68, v69);
                  if ((v67 & 1) == 0) {
                    goto LABEL_80;
                  }
                  goto LABEL_95;
              }
            }
          }
LABEL_98:
          swift_bridgeObjectRelease();
        }
        if (qword_10166FA58 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v74 = (void *)static OS_os_log.crlFolderUI;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        id v42 = v74;
        uint64_t v75 = sub_100D9AC08();
        uint64_t v77 = v76;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v46 = sub_100528BE4();
        *(void *)(inited + 32) = v75;
        *(void *)(inited + 64) = v46;
        *(void *)(inited + 40) = v77;
        _StringGuts.grow(_:)(53);
        v78._countAndFlagsBits = 0xD00000000000001FLL;
        v78._object = (void *)0x8000000101288A30;
        String.append(_:)(v78);
        String.append(_:)(v85);
        swift_bridgeObjectRelease();
        unint64_t v49 = 0x8000000101288A50;
        unint64_t v48 = 0xD000000000000014;
LABEL_102:
        String.append(_:)(*(Swift::String *)&v48);
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v46;
        *(void *)(inited + 72) = 0;
        *(void *)(inited + 80) = 0xE000000000000000;
        uint64_t v57 = static os_log_type_t.error.getter();
      }
      sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v57, (uint64_t)"%@: %@", 6, 2, inited);
      swift_unknownObjectRelease();
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return;
    default:
LABEL_4:
      swift_getObjectType();
      sub_1007A0914(a1, a2);
      sub_1007A0914(a1, a2);
      sub_1005057FC((uint64_t *)&unk_10169B4C8);
      uint64_t v10 = String.init<A>(describing:)();
      uint64_t v11 = v4;
      uint64_t v13 = v12;
      uint64_t v14 = String.init<A>(describing:)();
      unint64_t v16 = v15;
      v17._countAndFlagsBits = 15392;
      v17._object = (void *)0xE200000000000000;
      String.append(_:)(v17);
      v18._countAndFlagsBits = v10;
      v18._object = v13;
      String.append(_:)(v18);
      uint64_t v4 = v11;
      swift_bridgeObjectRelease();
      v19._countAndFlagsBits = 8250;
      v19._object = (void *)0xE200000000000000;
      String.append(_:)(v19);
      v20._countAndFlagsBits = v14;
      v20._object = v16;
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      v21._countAndFlagsBits = 62;
      v21._object = (void *)0xE100000000000000;
      String.append(_:)(v21);
      sub_1007A0938(a1, a2);
      v85._countAndFlagsBits = v6;
      unint64_t v22 = v5;
      goto LABEL_5;
  }
}

uint64_t sub_100D9BBC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLiOSFolderGridViewController.RefreshLimiter()
{
  return self;
}

void *sub_100D9BC3C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  void v5[2] = 0;
  v5[3] = 0;
  v5[4] = _swiftEmptyArrayStorage;
  id v10 = [self defaultCenter];
  sub_100522E9C(a2, (uint64_t)&aBlock, &qword_101672BF0);
  uint64_t v11 = v37;
  if (v37)
  {
    id v12 = sub_10050F848(&aBlock, (uint64_t)v37);
    uint64_t v13 = *(v11 - 1);
    __n128 v14 = __chkstk_darwin(v12, v12);
    unint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v13 + 16))(v16, v14);
    id v17 = a1;
    uint64_t v18 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, void *))(v13 + 8))(v16, v11);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&aBlock);
  }
  else
  {
    id v19 = a1;
    uint64_t v18 = 0;
  }
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v38 = sub_100DBF590;
  uint64_t v39 = v20;
  long long aBlock = _NSConcreteStackBlock;
  unint64_t v35 = *(void *)"";
  id v36 = sub_1005E5680;
  char v37 = &unk_10152CCE8;
  Swift::String v21 = _Block_copy(&aBlock);
  swift_release();
  id v22 = [v10 addObserverForName:a1 object:v18 queue:a3 usingBlock:v21];
  _Block_release(v21);
  swift_unknownObjectRelease();

  v6[3] = v22;
  swift_unknownObjectRelease();
  long long aBlock = 0;
  unint64_t v35 = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  long long aBlock = (void **)0xD00000000000001ALL;
  unint64_t v35 = 0x8000000101289F80;
  v23._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 34;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);

  unint64_t v25 = aBlock;
  unint64_t v26 = v35;
  sub_100522F00(a2, &qword_101672BF0);
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  Swift::Int v28 = (void *)swift_allocObject();
  uint64_t v29 = v32;
  _OWORD v28[2] = v27;
  void v28[3] = v29;
  v28[4] = v33;
  type metadata accessor for CRLiOSFolderGridViewController.RefreshLimiter();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 32) = 0;
  *(_WORD *)(v30 + 40) = 1;
  *(unsigned char *)(v30 + 72) = 0;
  *(void *)(v30 + 88) = 0;
  *(void *)(v30 + 96) = 0;
  *(void *)(v30 + 80) = 0;
  *(void *)(v30 + 16) = v25;
  *(void *)(v30 + 24) = v26;
  *(void *)(v30 + 48) = &_swiftEmptySetSingleton;
  *(void *)(v30 + 56) = sub_100DBF5D8;
  *(void *)(v30 + 64) = v28;
  v6[2] = v30;
  swift_release();
  return v6;
}

uint64_t sub_100D9BFC8(unint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100D9C3DC(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100D9C028(uint64_t a1, void (*a2)(char *))
{
  unint64_t v26 = a2;
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    Swift::String v9 = (unint64_t *)(result + 32);
    swift_beginAccess();
    uint64_t v10 = *(void *)(v8 + 32);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v12 = v3 + 16;
      Swift::String v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      uint64_t v25 = v3 + 16;
      unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      v22[2] = v8;
      unint64_t v23 = v13;
      uint64_t v14 = v10 + v13;
      uint64_t v15 = *(void *)(v3 + 72);
      unint64_t v16 = (void (**)(char *, uint64_t))(v12 - 8);
      v22[1] = v10;
      swift_bridgeObjectRetain();
      while (1)
      {
        v24(v6, v14, v2);
        swift_beginAccess();
        unint64_t v17 = *v9;
        int64_t v18 = *(void *)(*v9 + 16);
        if (!v18) {
          break;
        }
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (!isUniquelyReferenced_nonNull_native || (unint64_t)(v18 - 1) > *(void *)(v17 + 24) >> 1) {
          unint64_t v17 = sub_100F64EA8(isUniquelyReferenced_nonNull_native, v18, 1, v17);
        }
        unint64_t v20 = v17 + v23;
        swift_arrayDestroy();
        uint64_t v21 = *(void *)(v17 + 16);
        if (!v21) {
          goto LABEL_19;
        }
        if (v15 > 0 || v20 >= v20 + v15 + (v21 - 1) * v15)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v15)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        --*(void *)(v17 + 16);
        *Swift::String v9 = v17;
        swift_endAccess();
        v26(v6);
        (*v16)(v6, v2);
        v14 += v15;
        if (!--v11)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
LABEL_19:
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100D9C2F4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLiOSFolderGridViewController.NotificationObserver()
{
  return self;
}

uint64_t sub_100D9C3DC(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v24 - v11;
  unint64_t v13 = (unint64_t *)(v2 + 32);
  swift_beginAccess();
  uint64_t v14 = *(void *)(v2 + 32);
  uint64_t v34 = *(void *)(v14 + 16);
  if (v34)
  {
    unint64_t v29 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v30 = v8;
    uint64_t v8 = v5 + 16;
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v33(v12, v14 + v29, v4);
    uint64_t v15 = sub_100DB3520(&qword_10169B4C0, (void (*)(uint64_t))&type metadata accessor for Notification);
    swift_bridgeObjectRetain();
    uint64_t v31 = v15;
    unint64_t v32 = a1;
    LOBYTE(v15) = dispatch thunk of static Equatable.== infix(_:_:)();
    unint64_t v16 = *(void *)(v5 + 8);
    ((void (*)(char *, uint64_t))v16)(v12, v4);
    if (v15)
    {
      uint64_t result = swift_bridgeObjectRelease();
      if (!*(void *)(v2 + 16)) {
        return result;
      }
      goto LABEL_19;
    }
    uint64_t v28 = v14;
    if (v34 != 1)
    {
      v24[1] = v8 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v25 = (unint64_t *)(v2 + 32);
      uint64_t v26 = v5;
      uint64_t v27 = v2;
      unint64_t v13 = *(unint64_t **)(v5 + 72);
      int64_t v18 = (char *)v13 + v28 + v29;
      uint64_t v2 = 1;
      while (1)
      {
        v33(v12, (unint64_t)v18, v4);
        uint64_t v5 = v2 + 1;
        if (__OFADD__(v2, 1))
        {
          __break(1u);
          goto LABEL_24;
        }
        char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
        ((void (*)(char *, uint64_t))v16)(v12, v4);
        if (v19) {
          break;
        }
        ++v2;
        int64_t v18 = (char *)v13 + (void)v18;
        if (v5 == v34)
        {
          swift_bridgeObjectRelease();
          uint64_t v5 = v26;
          uint64_t v2 = v27;
          uint64_t v8 = v30;
          unint64_t v13 = v25;
          goto LABEL_13;
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (*(void *)(v27 + 16)) {
        goto LABEL_19;
      }
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t v8 = v30;
LABEL_13:
    v33((char *)v8, v32, v4);
  }
  else
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  }
  swift_beginAccess();
  unint64_t v16 = *v13;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v13 = v16;
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v21 = v13;
  }
  else
  {
LABEL_24:
    unint64_t v16 = sub_100F64EA8(0, *(void *)(v16 + 16) + 1, 1, v16);
    uint64_t v21 = v13;
    *unint64_t v13 = v16;
  }
  unint64_t v23 = *(void *)(v16 + 16);
  unint64_t v22 = *(void *)(v16 + 24);
  if (v23 >= v22 >> 1)
  {
    unint64_t v16 = sub_100F64EA8(v22 > 1, v23 + 1, 1, v16);
    *uint64_t v21 = v16;
  }
  *(void *)(v16 + 16) = v23 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v23, v8, v4);
  uint64_t result = swift_endAccess();
  if (*(void *)(v2 + 16))
  {
LABEL_19:
    swift_retain();
    sub_100D998B0();
    return swift_release();
  }
  return result;
}

id sub_100D9C788(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController38SingleContinuousTouchGestureRecognizer_trackedTouch] = 0;
  sub_100522E9C(a1, (uint64_t)v17, &qword_101672BF0);
  uint64_t v5 = v18;
  if (v18)
  {
    uint64_t v6 = sub_10050F848(v17, v18);
    uint64_t v7 = *(void *)(v5 - 8);
    __n128 v8 = __chkstk_darwin(v6, v6);
    uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v17);
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v12 = (objc_class *)type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer();
  v16.receiver = v2;
  v16.super_class = v12;
  id v13 = [super initWithTarget:v11 action:a2];
  swift_unknownObjectRelease();
  id v14 = v13;
  [v14 setDelegate:v14];
  [v14 setCancelsTouchesInView:0];

  sub_100522F00(a1, &qword_101672BF0);
  return v14;
}

void sub_100D9C9A4(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v4 = a1;
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter() == 1) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(void *)(a1 + 16) != 1) {
LABEL_3:
  }
    [v3 setState:5];
LABEL_4:
  uint64_t v6 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController38SingleContinuousTouchGestureRecognizer_trackedTouch;
  if (*(void *)&v3[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController38SingleContinuousTouchGestureRecognizer_trackedTouch])
  {
    if (v5)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      sub_10050BF48(0, &qword_10169B4B0);
      sub_10062E0F4(&qword_10169B4B8, &qword_10169B4B0);
      Set.Iterator.init(_cocoa:)();
      uint64_t v4 = v32;
      uint64_t v28 = v33;
      uint64_t v7 = v34;
      uint64_t v8 = v35;
      unint64_t v9 = v36;
    }
    else
    {
      uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
      uint64_t v28 = v4 + 56;
      uint64_t v7 = ~v13;
      uint64_t v14 = -v13;
      if (v14 < 64) {
        uint64_t v15 = ~(-1 << v14);
      }
      else {
        uint64_t v15 = -1;
      }
      unint64_t v9 = v15 & *(void *)(v4 + 56);
      swift_bridgeObjectRetain();
      uint64_t v8 = 0;
    }
    int64_t v27 = (unint64_t)(v7 + 64) >> 6;
    while (1)
    {
      if (v4 < 0)
      {
        if (!__CocoaSet.Iterator.next()()) {
          goto LABEL_44;
        }
        sub_10050BF48(0, &qword_10169B4B0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v19 = v31;
        swift_unknownObjectRelease();
        uint64_t v18 = v8;
        uint64_t v16 = v9;
        if (!v31) {
          goto LABEL_44;
        }
      }
      else
      {
        if (v9)
        {
          uint64_t v16 = (v9 - 1) & v9;
          unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
          uint64_t v18 = v8;
        }
        else
        {
          int64_t v20 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
            __break(1u);
            return;
          }
          if (v20 >= v27) {
            goto LABEL_44;
          }
          unint64_t v21 = *(void *)(v28 + 8 * v20);
          uint64_t v18 = v8 + 1;
          if (!v21)
          {
            uint64_t v18 = v8 + 2;
            if (v8 + 2 >= v27) {
              goto LABEL_44;
            }
            unint64_t v21 = *(void *)(v28 + 8 * v18);
            if (!v21)
            {
              uint64_t v18 = v8 + 3;
              if (v8 + 3 >= v27) {
                goto LABEL_44;
              }
              unint64_t v21 = *(void *)(v28 + 8 * v18);
              if (!v21)
              {
                uint64_t v18 = v8 + 4;
                if (v8 + 4 >= v27) {
                  goto LABEL_44;
                }
                unint64_t v21 = *(void *)(v28 + 8 * v18);
                if (!v21)
                {
                  uint64_t v22 = v8 + 5;
                  while (v27 != v22)
                  {
                    unint64_t v21 = *(void *)(v28 + 8 * v22++);
                    if (v21)
                    {
                      uint64_t v18 = v22 - 1;
                      goto LABEL_39;
                    }
                  }
LABEL_44:
                  sub_10052E1EC();
                  return;
                }
              }
            }
          }
LABEL_39:
          uint64_t v16 = (v21 - 1) & v21;
          unint64_t v17 = __clz(__rbit64(v21)) + (v18 << 6);
        }
        id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
        if (!v19) {
          goto LABEL_44;
        }
      }
      unint64_t v23 = *(void **)&v3[v6];
      if (!v23
        || (sub_10050BF48(0, &qword_10169B4B0),
            id v24 = v19,
            id v25 = v23,
            char v26 = static NSObject.== infix(_:_:)(),
            v24,
            v25,
            (v26 & 1) == 0))
      {
        [v3 ignoreTouch:v19 forEvent:a2];
      }

      uint64_t v8 = v18;
      unint64_t v9 = v16;
    }
  }
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_100999C68(v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    uint64_t v12 = *(void **)&v3[v6];
    *(void *)&v3[v6] = v11;
    id v30 = v11;

    [v3 setState:1];
  }
}

id sub_100D9CEC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSFolderGridViewController.SingleContinuousTouchGestureRecognizer()
{
  return self;
}

void sub_100D9CF2C(void *a1)
{
  uint64_t v2 = sub_100D73EEC();
  sub_100D9AE1C(a1, 1u, 1);
  uint64_t v32 = v2;
  uint64_t v3 = *(void *)(v2 + 48);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(1uLL);
  swift_bridgeObjectRetain_n();
  uint64_t v31 = a1;
  id v4 = a1;
  NSObject.hash(into:)();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      uint64_t v9 = *(void *)(v3 + 48) + 16 * v7;
      if (*(unsigned char *)(v9 + 8) == 1)
      {
        uint64_t v10 = *(void **)v9;
        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        id v11 = v4;
        sub_1007A0914(v10, 1u);
        char v12 = static NSObject.== infix(_:_:)();

        sub_1007A0938(v10, 1u);
        if (v12) {
          break;
        }
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = *(void *)(v3 + 16);
    unint64_t v15 = *(void *)(v3 + 24);
    id v16 = v4;
    if (v15 <= v14)
    {
      if (isUniquelyReferenced_nonNull_native) {
        sub_100CC3A40();
      }
      else {
        sub_100CD4C78();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(1uLL);
      id v18 = v16;
      NSObject.hash(into:)();

      Swift::Int v19 = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v7 = v19 & ~v20;
      if ((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
      {
        uint64_t v21 = ~v20;
        while (1)
        {
          uint64_t v22 = *(void *)(v3 + 48) + 16 * v7;
          if (*(unsigned char *)(v22 + 8) == 1)
          {
            unint64_t v23 = *(void **)v22;
            sub_10050BF48(0, (unint64_t *)&qword_101672E50);
            id v24 = v18;
            sub_1007A0914(v23, 1u);
            char v25 = static NSObject.== infix(_:_:)();

            sub_1007A0938(v23, 1u);
            if (v25) {
              break;
            }
          }
          unint64_t v7 = (v7 + 1) & v21;
          if (((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_19;
          }
        }
        ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
LABEL_19:
        unint64_t v17 = v31;
      }
      else
      {
        unint64_t v17 = v31;
      }
    }
    else
    {
      unint64_t v17 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_100CCDF1C();
      }
    }
    *(void *)(v3 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v7;
    uint64_t v26 = *(void *)(v3 + 48) + 16 * v7;
    *(void *)uint64_t v26 = v17;
    *(unsigned char *)(v26 + 8) = 1;
    uint64_t v27 = *(void *)(v3 + 16);
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
      return;
    }
    *(void *)(v3 + 16) = v29;
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v32 + 48);
  swift_bridgeObjectRetain();
  sub_100D991B4(v3);
  *(void *)(v32 + 48) = v3;
  swift_bridgeObjectRelease();
  sub_100D994DC(v30);
  swift_release();

  swift_bridgeObjectRelease();
}

uint64_t sub_100D9D320(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v2 = (void *)result;
    uint64_t v3 = sub_100D73EEC();
    sub_100D9AE1C(v2, 1u, 0);
    uint64_t v4 = *(void *)(v3 + 48);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(1uLL);
    swift_bridgeObjectRetain_n();
    id v5 = v2;
    NSObject.hash(into:)();

    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v8 = v6 & ~v7;
    if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v9 = ~v7;
      while (1)
      {
        uint64_t v10 = *(void *)(v4 + 48) + 16 * v8;
        if (*(unsigned char *)(v10 + 8) == 1)
        {
          id v11 = *(void **)v10;
          sub_10050BF48(0, (unint64_t *)&qword_101672E50);
          id v12 = v5;
          sub_1007A0914(v11, 1u);
          char v13 = static NSObject.== infix(_:_:)();

          sub_1007A0938(v11, 1u);
          if (v13) {
            break;
          }
        }
        unint64_t v8 = (v8 + 1) & v9;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100CCDF1C();
      }
      uint64_t v14 = *(void *)(v4 + 48) + 16 * v8;
      unint64_t v15 = *(void **)v14;
      unsigned __int8 v16 = *(unsigned char *)(v14 + 8);
      sub_100DA1A78(v8);
      swift_bridgeObjectRelease();
      sub_1007A0938(v15, v16);
    }
    else
    {
LABEL_10:
      swift_bridgeObjectRelease();
    }
    uint64_t v17 = *(void *)(v3 + 48);
    swift_bridgeObjectRetain();
    sub_100D991B4(v4);
    *(void *)(v3 + 48) = v4;
    swift_bridgeObjectRelease();
    sub_100D994DC(v17);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100D9D5E8(void *a1)
{
  uint64_t v2 = sub_100D73EEC();
  sub_100D9AE1C(a1, 1u, 0);
  uint64_t v3 = *(void *)(v2 + 48);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(1uLL);
  swift_bridgeObjectRetain_n();
  id v4 = a1;
  NSObject.hash(into:)();

  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      uint64_t v9 = *(void *)(v3 + 48) + 16 * v7;
      if (*(unsigned char *)(v9 + 8) == 1)
      {
        uint64_t v10 = *(void **)v9;
        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        id v11 = v4;
        sub_1007A0914(v10, 1u);
        char v12 = static NSObject.== infix(_:_:)();

        sub_1007A0938(v10, 1u);
        if (v12) {
          break;
        }
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_100CCDF1C();
    }
    uint64_t v13 = *(void *)(v3 + 48) + 16 * v7;
    uint64_t v14 = *(void **)v13;
    unsigned __int8 v15 = *(unsigned char *)(v13 + 8);
    sub_100DA1A78(v7);
    swift_bridgeObjectRelease();
    sub_1007A0938(v14, v15);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_100D991B4(v3);
  *(void *)(v2 + 48) = v3;
  swift_bridgeObjectRelease();
  sub_100D994DC(v16);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_100D9D884()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  id v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v6 = (void *)Strong;
  uint64_t v7 = Notification.userInfo.getter();
  if (!v7)
  {
    long long v17 = 0u;
    long long v18 = 0u;
LABEL_14:

    sub_100522F00((uint64_t)&v17, &qword_101672BF0);
    return;
  }
  uint64_t v8 = v7;
  v15[1] = 0xD00000000000001DLL;
  long long v15[2] = 0x8000000101240F90;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_10095647C((uint64_t)v16), (v10 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v16);
  if (!*((void *)&v18 + 1)) {
    goto LABEL_14;
  }
  sub_1005057FC((uint64_t *)&unk_101677438);
  if (swift_dynamicCast())
  {
    uint64_t v11 = v16[0];
    id v12 = sub_100D72460();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    if (([self isMainThread] & 1) == 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"reloadItems(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 623, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"reloadItems(_:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 623);
      [self logFullBacktrace];
    }
    uint64_t v13 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_100DB4080(v13, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v14);
    swift_bridgeObjectRelease();
    sub_100D78E94((uint64_t)v4, 1, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    swift_bridgeObjectRelease();
  }
}

void sub_100D9DBDC()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong calendarDayDidChange];
  }
}

void sub_100D9DC60(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  v11[4] = a4;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = *(void *)"";
  _OWORD v11[2] = sub_100679958;
  v11[3] = a5;
  unint64_t v9 = _Block_copy(v11);
  id v10 = a1;
  swift_release();
  sub_10080D528(v9);
  _Block_release(v9);
}

void sub_100D9DD24()
{
  qword_10169AF40 = 0x4030000000000000;
}

void sub_100D9DD34()
{
  qword_10169AF48 = 0x4059800000000000;
}

id sub_100D9DD48(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  *(void *)&long long v58 = a1;
  *((void *)&v58 + 1) = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v2 = *(void *)(*((void *)&v58 + 1) - 8);
  __chkstk_darwin(*((void *)&v58 + 1), v3);
  Swift::Int v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v59 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t v14 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  BOOL v63 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v56 - v20;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    sub_10050BF48(0, &qword_101673F40);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v13, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v6);
    UICollectionLayoutListConfiguration.init(appearance:)();
    char v37 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
    return v37;
  }
  unint64_t v23 = (void *)Strong;
  uint64_t v56 = v14;
  uint64_t v57 = v15;
  uint64_t v60 = v7;
  uint64_t v61 = v6;
  id v24 = sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();

  int v25 = v67;
  uint64_t v26 = v23;
  if ((*((unsigned char *)v23 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions + 2) & 1) != 0
    && *((unsigned char *)v23 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions))
  {
    int v27 = 1;
    BOOL v28 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.grouped(_:);
  }
  else
  {
    int v27 = 0;
    BOOL v28 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:);
  }
  uint64_t v30 = v60;
  uint64_t v29 = v61;
  uint64_t v31 = *((void *)&v58 + 1);
  uint64_t v32 = v59;
  *((void *)&v58 + 1) = v65;
  uint64_t v59 = v64;
  *(void *)&long long v58 = v66;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v32, *v28, v61);
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v13, v32, v29);
  UICollectionLayoutListConfiguration.init(appearance:)();
  uint64_t v33 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:);
  if (!v27) {
    uint64_t v33 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *v33, v31);
  UICollectionLayoutListConfiguration.headerMode.setter();
  id v34 = [self systemBackgroundColor];
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v35;
  *(unsigned char *)(v36 + 24) = v27;
  UICollectionLayoutListConfiguration.itemSeparatorHandler.setter();
  sub_10050BF48(0, &qword_101673F40);
  char v37 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  if ((v25 + 64) <= 0x3Du && v25 == 192 && v59 == (char *)1 && v58 == 0)
  {
    uint64_t v38 = self;
    sub_10053BB6C((id)1, 0, 0, 0xC0u);
    id v39 = [v38 fractionalWidthDimension:1.0];
    if (qword_1016700B8 != -1) {
      swift_once();
    }
    id v40 = [v38 absoluteDimension:*(double *)&qword_10169AF48];
    id v41 = [self sizeWithWidthDimension:v39 heightDimension:v40];

    id v42 = v41;
    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = [self boundarySupplementaryItemWithLayoutSize:v42 elementKind:v43 alignment:5];

    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_101177E70;
    *(void *)(v45 + 32) = v44;
    BOOL v64 = (char *)v45;
    specialized Array._endMutation()();
    sub_10050BF48(0, &qword_10169B5B0);
    id v46 = v44;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v37 setBoundarySupplementaryItems:isa];
  }
  id result = [v26 view];
  if (result)
  {
    unint64_t v49 = result;
    [result directionalLayoutMargins];
    double v51 = v50;
    double v53 = v52;

    uint64_t v54 = v56;
    uint64_t v55 = v57;
    if (qword_1016700B0 != -1) {
      swift_once();
    }
    [v37 setContentInsets:0.0, v51, *(double *)&qword_10169AF40, v53];
    sub_10053BB8C(v59, *((id *)&v58 + 1), v58, v25);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v63, v54);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v61);
    return v37;
  }
  __break(1u);
  return result;
}

id sub_100D9E4B8()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v8 = __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&aBlock[-1] - v11;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    id v15 = sub_100D72460();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      sub_100DBF9A8((uint64_t)v3, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100DBF940((uint64_t)v12, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Item);
      unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v17;
      sub_100DBF9A8((uint64_t)v9, v19 + v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
      id v20 = [self mainBundle];
      NSString v21 = String._bridgeToObjectiveC()();
      NSString v22 = String._bridgeToObjectiveC()();
      id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_retain();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_100DBC7FC;
      void aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      void aBlock[2] = sub_100D9EE5C;
      void aBlock[3] = &unk_10152C220;
      int v25 = _Block_copy(aBlock);
      id v26 = [self contextualActionWithStyle:1 title:v24 handler:v25];

      _Block_release(v25);
      swift_release();
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_101177E70;
      *(void *)(v27 + 32) = v26;
      aBlock[0] = v27;
      specialized Array._endMutation()();
      sub_10050BF48(0, &qword_10169B5B8);
      id v28 = v26;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v16 = [self configurationWithActions:isa];

      swift_release();
      sub_100DBFA10((uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
      return v16;
    }

    sub_100522F00((uint64_t)v3, (uint64_t *)&unk_101676310);
  }
  return 0;
}

void sub_100D9E940(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  uint64_t v13 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v13 - 8, v14);
  id v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v18 = (void *)Strong;
    uint64_t v27 = a3;
    uint64_t v28 = a4;
    uint64_t v19 = Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
    uint64_t v20 = sub_1005057FC(&qword_101670F30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 5, 5, v20);
    char v21 = sub_100DDC744(v19, (uint64_t)v16);
    sub_100DBFA10((uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_1005057FC(&qword_10169B510);
    unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_10117E810;
    sub_100DBF940(a6, v23 + v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (v21)
    {
      sub_100D906F8(v23);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      ((void (*)(void))v27)(0);
    }
    else
    {
      sub_100DBF940(a6, (uint64_t)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v24 = swift_allocObject();
      uint64_t v25 = v28;
      *(void *)(v24 + 16) = v27;
      *(void *)(v24 + 24) = v25;
      sub_100DBF9A8((uint64_t)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_retain();
      sub_100D9124C(v23, (uint64_t)sub_100DBCA90, v24);
      swift_bridgeObjectRelease();

      swift_release();
    }
  }
  else
  {
    a3();
  }
}

uint64_t sub_100D9EC58(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    goto LABEL_6;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  sub_100DBF940(a1 + v13, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_bridgeObjectRetain();
  char v14 = sub_100DDCC28((uint64_t)v11, a4);
  sub_100DBFA10((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (v14)
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = 1;
    return a2(v15);
  }
  if (v12 == 1)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v15 = 0;
    return a2(v15);
  }
  uint64_t v23 = a2;
  uint64_t v17 = *(void *)(v8 + 72);
  uint64_t v18 = a1 + v17 + v13;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t result = sub_100DBF940(v18, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v20 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    char v21 = sub_100DDCC28((uint64_t)v11, a4);
    sub_100DBFA10((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (v21)
    {
      swift_bridgeObjectRelease();
      return v23(1);
    }
    v18 += v17;
    if (v20 == v12)
    {
      swift_bridgeObjectRelease();
      return v23(0);
    }
  }
  __break(1u);
  return result;
}

void sub_100D9EE5C(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_1009CBFA8, v8);
  swift_release();
  swift_release();
}

void sub_100D9EF30(uint64_t a1@<X1>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for UIListSeparatorConfiguration.Visibility();
  uint64_t v24 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UIListSeparatorConfiguration();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  char v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  if (!Strong)
  {
    v16(a3, a1, v10);
    return;
  }
  uint64_t v17 = (void *)Strong;
  uint64_t v23 = a3;
  v16((uint64_t)v14, a1, v10);
  if (!IndexPath.item.getter() && (a2 & 1) == 0)
  {
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v9, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v6);
    UIListSeparatorConfiguration.topSeparatorVisibility.setter();
  }
  uint64_t v18 = IndexPath.item.getter();
  id v19 = [v17 collectionView];
  if (!v19)
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v20 = v19;
  char v21 = (char *)[v19 numberOfItemsInSection:IndexPath.section.getter()];

  if (__OFSUB__(v21, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((char *)v18 == v21 - 1)
  {
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v9, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v6);
    UIListSeparatorConfiguration.bottomSeparatorVisibility.setter();
  }

  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23, v14, v10);
}

void sub_100D9F1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, void *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    uint64_t v11 = *(void *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider);
    uint64_t v12 = *(void *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider + 8);
    uint64_t v13 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardPreviewImageCache);
    swift_unknownObjectRetain();
    id v14 = v13;
    a5(a1, a2, a3, v11, v12, v14, v10);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_100D9F2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v9 = (void *)Strong;
  int v10 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout);
  sub_100DBF940(a3, (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 0, 1, v11);
  if (v10 == 1) {
    _s8GridItemCMa();
  }
  else {
    _s11iOSListItemCMa();
  }
  uint64_t v12 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

  sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101676310);
  return v12;
}

unint64_t sub_100D9F448(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10168E130);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v14 = (char *)Strong;
  uint64_t v15 = (void *)sub_100D72460();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v16 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v16 + 16))
  {
    v51[1] = a4;
    unint64_t v18 = v16 + 32 * result;
    uint64_t v20 = *(void **)(v18 + 32);
    id v19 = *(void **)(v18 + 40);
    uint64_t v21 = *(void *)(v18 + 48);
    unsigned __int8 v22 = *(unsigned char *)(v18 + 56);
    sub_10053BB6C(v20, v19, v21, v22);
    swift_bridgeObjectRelease();
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v23 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        if (a2 == 0xD00000000000001BLL && a3 == 0x800000010123E290
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          NSString v26 = String._bridgeToObjectiveC()();
          uint64_t v52 = _s13GridSeparatorCMa();
          sub_1005057FC(&qword_10169B5E0);
          String.init<A>(describing:)();
          NSString v27 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v28.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          uint64_t v29 = a1;
          Class isa = v28.super.isa;
          uint64_t v31 = [v29 dequeueReusableSupplementaryViewOfKind:v26 withReuseIdentifier:v27 forIndexPath:v28.super.isa];
          sub_10053BBA0(v20, v19, v21, v22);

          return (unint64_t)v31;
        }
        if (a2 == 0xD00000000000001DLL && a3 == 0x800000010123E270
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          NSString v46 = String._bridgeToObjectiveC()();
          uint64_t v52 = _s18iCloudStatusFooterCMa();
          sub_1005057FC(&qword_10169B5E8);
          String.init<A>(describing:)();
          Swift::String v47 = a1;
          NSString v48 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          Class v49 = IndexPath._bridgeToObjectiveC()().super.isa;
          id v50 = [v47 dequeueReusableSupplementaryViewOfKind:v46 withReuseIdentifier:v48 forIndexPath:v49];
          sub_10053BBA0(v20, v19, v21, v22);

          uint64_t v31 = (unsigned char *)swift_dynamicCastClass();
          if (!v31) {

          }
          return (unint64_t)v31;
        }
        sub_10053BBA0(v20, v19, v21, v22);

        return 0;
      }
    }
    NSString v32 = String._bridgeToObjectiveC()();
    uint64_t v52 = _s13SectionHeaderCMa();
    sub_1005057FC(&qword_10169B5D8);
    String.init<A>(describing:)();
    uint64_t v33 = a1;
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v35 = IndexPath._bridgeToObjectiveC()().super.isa;
    id v36 = [v33 dequeueReusableSupplementaryViewOfKind:v32 withReuseIdentifier:v34 forIndexPath:v35];

    uint64_t v37 = swift_dynamicCastClass();
    uint64_t v31 = (unsigned char *)v37;
    if (v37)
    {
      *(void *)(v37 + OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_delegate + 8) = &off_10152BBD0;
      swift_unknownObjectWeakAssign();
      uint64_t v38 = &v31[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier];
      id v39 = *(void **)&v31[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier];
      id v40 = *(void **)&v31[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                         + 8];
      uint64_t v41 = *(void *)&v31[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_sectionIdentifier
                          + 16];
      *(void *)uint64_t v38 = v20;
      *((void *)v38 + 1) = v19;
      *((void *)v38 + 2) = v21;
      unsigned __int8 v42 = v38[24];
      v38[24] = v22;
      sub_10053BB6C(v20, v19, v21, v22);
      sub_10053BB6C(v20, v19, v21, v22);
      sub_10053BB8C(v39, v40, v41, v42);
      sub_10053980C();
      sub_10053BBA0(v20, v19, v21, v22);
      NSString v43 = (uint64_t *)&v14[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections];
      swift_beginAccess();
      uint64_t v44 = *v43;
      swift_bridgeObjectRetain();
      LOBYTE(v40) = sub_1006E534C((unint64_t)v20, (unint64_t)v19, v21, v22, v44);
      swift_bridgeObjectRelease();
      uint64_t v45 = OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle;
      v31[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_shouldAnimateNextCollapseStateToggle] = 0;
      v31[OBJC_IVAR____TtCC8Freeform30CRLiOSFolderGridViewController13SectionHeader_isCollapsed] = v40 & 1;
      sub_100539978();
      v31[v45] = 0;
    }
    else
    {
    }
    sub_10053BBA0(v20, v19, v21, v22);

    return (unint64_t)v31;
  }
  __break(1u);
  return result;
}

void sub_100D9FA1C(void (*a1)(unint64_t))
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v3 = Strong, v4 = [Strong menu], v3, v4))
  {
    id v5 = [v4 children];
    sub_10050BF48(0, &qword_10167ADE0);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v7 >= 1) {
        goto LABEL_5;
      }
    }
    else if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_5:
      a1(v6);

      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configureOverflowRepresentationAsInlineMenu()", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 3389, (uint64_t)"No menu elements present to be represented in overflow as inline menu elements ", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureOverflowRepresentationAsInlineMenu()", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 3389);
    a1((unint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"configureOverflowRepresentationAsInlineMenu()", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 3383, (uint64_t)"No menu present to be represented in overflow as inline menu elements", 69, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"configureOverflowRepresentationAsInlineMenu()", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 3383);
    a1((unint64_t)_swiftEmptyArrayStorage);
  }
}

id sub_100D9FC94(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)&double v13 = __chkstk_darwin(v10, v12).n128_u64[0];
  uint64_t v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v16 = [a2 zoneID:v13];
  sub_100D29C10((uint64_t)v9);

  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return (id)sub_100522F00((uint64_t)v9, &qword_101672C30);
  }
  sub_100DBF9A8((uint64_t)v9, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
  id result = [v3 collectionView];
  if (result)
  {
    unint64_t v18 = result;
    id v19 = [result indexPathsForSelectedItems];

    if (v19)
    {
      type metadata accessor for IndexPath();
      uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v21 = v3;
      unsigned __int8 v22 = sub_100DB2190(v20, (uint64_t)v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      unsigned __int8 v22 = _swiftEmptyArrayStorage;
    }
    uint64_t v23 = sub_100DD85D8((uint64_t)v22);
    swift_bridgeObjectRelease();
    char v24 = sub_100ED5DC4((uint64_t)v15, (uint64_t)v23);
    swift_bridgeObjectRelease();
    if (v24) {
      sub_100DB2E18(a1, v3);
    }
    return (id)sub_100DBFA10((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100D9FFF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = Notification.userInfo.getter();
  if (v2)
  {
    uint64_t v3 = v2;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10095647C((uint64_t)v8), (v5 & 1) != 0))
    {
      sub_100522D7C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v9);
    }
    else
    {
      long long v9 = 0u;
      long long v10 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10050BFE0((uint64_t)v8);
    if (*((void *)&v10 + 1))
    {
      type metadata accessor for CGRect(0);
      if (swift_dynamicCast())
      {
        double v6 = *(double *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight);
        *(void *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight) = v7;
        sub_100D83A34(v6);
      }
    }
    else
    {
      sub_100522F00((uint64_t)&v9, &qword_101672BF0);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"keyboardWillShowOrDock(_:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 3431, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"keyboardWillShowOrDock(_:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSFolderGridViewController.swift", 100, 2, 3431);
  }
}

uint64_t sub_100DA01B8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = type metadata accessor for Notification();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  long long v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = a1;
  a4(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

ValueMetadata *type metadata accessor for CRLiOSFolderGridViewController.RefreshSuspensionReason()
{
  return &type metadata for CRLiOSFolderGridViewController.RefreshSuspensionReason;
}

unint64_t sub_100DA03BC()
{
  unint64_t result = qword_10169B488;
  if (!qword_10169B488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169B488);
  }
  return result;
}

uint64_t sub_100DA0410(unint64_t a1)
{
  uint64_t v36 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v36 - 8);
  uint64_t result = __chkstk_darwin(v36, v4);
  Class v35 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v1;
  uint64_t v7 = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      uint64_t v32 = v8;
      uint64_t v33 = (void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v31 = v7;
      unint64_t v34 = (v12 + 1) & v11;
      do
      {
        uint64_t v13 = *(void *)(*(void *)(v7 + 48) + 8 * v10);
        Hasher.init(_seed:)();
        uint64_t v14 = *(void *)(v13 + 24);
        uint64_t ObjectType = swift_getObjectType();
        id v16 = *(void (**)(uint64_t, uint64_t))(v14 + 32);
        swift_retain();
        int64_t v17 = a1;
        unint64_t v18 = v35;
        v16(ObjectType, v14);
        sub_100DB3520((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v19 = v36;
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v20 = v18;
        a1 = v17;
        (*v33)(v20, v19);
        Swift::Int v21 = Hasher._finalize()();
        swift_release();
        Swift::Int v22 = v21 & v11;
        if (v17 >= (uint64_t)v34)
        {
          if (v22 < v34)
          {
            uint64_t v7 = v31;
            uint64_t v8 = v32;
          }
          else
          {
            uint64_t v7 = v31;
            uint64_t v8 = v32;
            if (v17 >= v22) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v7 = v31;
          uint64_t v8 = v32;
          if (v22 >= v34 || v17 >= v22)
          {
LABEL_12:
            uint64_t v23 = *(void *)(v7 + 48);
            char v24 = (void *)(v23 + 8 * v17);
            char v25 = (void *)(v23 + 8 * v10);
            if (v17 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *char v24 = *v25;
              a1 = v10;
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v8 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v30;
  uint64_t v27 = *(void *)(*v30 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_100DA0724(int64_t a1)
{
  return sub_100DA22DC(a1, (uint64_t (*)(void))&type metadata accessor for UUID, (unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_100DA076C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100DA0934(unint64_t result)
{
  unint64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v29 = v3;
      uint64_t v30 = v4;
      do
      {
        uint64_t v11 = 32 * v6;
        uint64_t v12 = *(void *)(v3 + 48) + 32 * v6;
        uint64_t v13 = v7;
        uint64_t v14 = *(void **)v12;
        uint64_t v15 = *(void **)(v12 + 8);
        int64_t v16 = v2;
        uint64_t v17 = *(void *)(v12 + 16);
        unsigned __int8 v18 = *(unsigned char *)(v12 + 24);
        Hasher.init(_seed:)();
        sub_10053BB6C(v14, v15, v17, v18);
        sub_100B8174C((int)&v31, (unint64_t)v14, (unint64_t)v15, v17, v18);
        Swift::Int v19 = Hasher._finalize()();
        uint64_t v20 = v15;
        uint64_t v7 = v13;
        uint64_t v21 = v17;
        unint64_t v2 = v16;
        sub_10053BBA0(v14, v20, v21, v18);
        Swift::Int v22 = v19 & v13;
        if (v16 >= (uint64_t)v9)
        {
          if (v22 < v9)
          {
            uint64_t v3 = v29;
            uint64_t v4 = v30;
          }
          else
          {
            uint64_t v3 = v29;
            uint64_t v4 = v30;
            if (v16 >= v22) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v3 = v29;
          uint64_t v4 = v30;
          if (v22 >= v9 || v16 >= v22)
          {
LABEL_12:
            uint64_t v23 = *(void *)(v3 + 48);
            char v24 = (_OWORD *)(v23 + 32 * v16);
            char v25 = (_OWORD *)(v23 + v11);
            if (32 * v16 != v11 || (unint64_t v2 = v6, v24 >= v25 + 2))
            {
              long long v10 = v25[1];
              *char v24 = *v25;
              v24[1] = v10;
              unint64_t v2 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v26 = *(void *)(v3 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v28;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_100DA0B64(int64_t a1)
{
  uint64_t v26 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v3 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v4);
  unint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    char v25 = v1;
    uint64_t v11 = ~v9;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v27 = (v12 + 1) & v11;
      uint64_t v13 = *(void *)(v3 + 72);
      uint64_t v14 = v11;
      do
      {
        uint64_t v15 = v13;
        int64_t v16 = v13 * v10;
        uint64_t v17 = v14;
        sub_100DBF940(*(void *)(v7 + 48) + v13 * v10, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
        Hasher.init(_seed:)();
        type metadata accessor for UUID();
        sub_100DB3520((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v18 = Hasher._finalize()();
        sub_100DBFA10((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
        uint64_t v14 = v17;
        Swift::Int v19 = v18 & v17;
        if (a1 >= (uint64_t)v27)
        {
          if (v19 < v27)
          {
            uint64_t v13 = v15;
            goto LABEL_5;
          }
          uint64_t v13 = v15;
          if (a1 < v19) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v13 = v15;
          if (v19 < v27 && a1 < v19) {
            goto LABEL_5;
          }
        }
        int64_t v20 = v13 * a1;
        if (v13 * a1 < v16 || *(void *)(v7 + 48) + v13 * a1 >= (unint64_t)(*(void *)(v7 + 48) + v16 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_17;
        }
        a1 = v10;
        if (v20 != v16)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_17:
          uint64_t v14 = v17;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v14;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    uint64_t v1 = v25;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v21 = *v1;
  uint64_t v22 = *(void *)(*v1 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
}

unint64_t sub_100DA0EC0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v11 = *(void *)(v3 + 48) + 32 * v6;
        Swift::UInt64 v12 = *(void *)v11;
        Swift::UInt64 v13 = *(void *)(v11 + 8);
        int v14 = *(unsigned __int8 *)(v11 + 16);
        Swift::UInt64 v15 = *(void *)(v11 + 24);
        Hasher.init(_seed:)();
        if (v14 == 1)
        {
          Swift::UInt64 v12 = qword_1011B3B18[v12];
          Swift::UInt64 v13 = v12;
        }
        if ((v12 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v16 = v12;
        }
        else {
          Swift::UInt64 v16 = 0;
        }
        Hasher._combine(_:)(v16);
        if ((v13 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v17 = v13;
        }
        else {
          Swift::UInt64 v17 = 0;
        }
        Hasher._combine(_:)(v17);
        if ((v15 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v18 = v15;
        }
        else {
          Swift::UInt64 v18 = 0;
        }
        Hasher._combine(_:)(v18);
        unint64_t v19 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v19 < v9) {
            goto LABEL_5;
          }
        }
        else if (v19 >= v9)
        {
          goto LABEL_22;
        }
        if (v2 >= (uint64_t)v19)
        {
LABEL_22:
          uint64_t v20 = *(void *)(v3 + 48);
          uint64_t v21 = (_OWORD *)(v20 + 32 * v2);
          uint64_t v22 = (_OWORD *)(v20 + 32 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v21 >= v22 + 2))
          {
            long long v10 = v22[1];
            *uint64_t v21 = *v22;
            v21[1] = v10;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v23 = *(void *)(v3 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v25;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100DA10BC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      type metadata accessor for CalculateExpression();
      sub_100DB3520((unint64_t *)&unk_10167BEE0, (void (*)(uint64_t))&type metadata accessor for CalculateExpression);
      do
      {
        uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_16:
            uint64_t v13 = *(void *)(v3 + 48);
            int v14 = (void *)(v13 + 8 * v2);
            Swift::UInt64 v15 = (void *)(v13 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
            {
              void *v14 = *v15;
              int64_t v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100DA12AC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        unint64_t v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v2);
          int v14 = (void *)(v12 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_100DA1458(int64_t a1)
{
  return sub_100DA22DC(a1, (uint64_t (*)(void))&type metadata accessor for UTType, &qword_101699918, (void (*)(uint64_t))&type metadata accessor for UTType, (uint64_t)&protocol conformance descriptor for UTType);
}

uint64_t sub_100DA14A0(unint64_t a1)
{
  uint64_t v49 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v49 - 8);
  __chkstk_darwin(v49, v4);
  Swift::String v47 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v46 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  uint64_t v9 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v10);
  uint64_t v12 = (unsigned __int8 *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v54 = (uint64_t)&v43 - v15;
  uint64_t result = *v1;
  uint64_t v17 = *v1 + 56;
  uint64_t v18 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v19 = (a1 + 1) & ~v18;
  if (((1 << v19) & *(void *)(v17 + 8 * (v19 >> 6))) != 0)
  {
    NSString v43 = v1;
    uint64_t v20 = ~v18;
    uint64_t v53 = result;
    swift_retain();
    uint64_t v21 = _HashTable.previousHole(before:)();
    uint64_t v52 = v17;
    if ((*(void *)(v17 + 8 * (v19 >> 6)) & (1 << v19)) != 0)
    {
      uint64_t v22 = *(void *)(v9 + 72);
      NSString v48 = v12 + 8;
      uint64_t v44 = (void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v45 = (void (**)(char *, unsigned __int8 *, uint64_t))(v3 + 32);
      unint64_t v51 = (v21 + 1) & v20;
      while (1)
      {
        int64_t v23 = a1;
        uint64_t v24 = v20;
        uint64_t v25 = v22;
        int64_t v26 = v22 * v19;
        uint64_t v27 = *(void *)(v53 + 48) + v22 * v19;
        uint64_t v28 = v54;
        sub_100DBF940(v27, v54, type metadata accessor for CRLSELibraryViewModel.Item);
        Hasher.init(_seed:)();
        sub_100DBF940(v28, (uint64_t)v12, type metadata accessor for CRLSELibraryViewModel.Item);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v29 = sub_1005057FC((uint64_t *)&unk_10169B720);
            swift_bridgeObjectRelease();
            uint64_t v30 = &v12[*(int *)(v29 + 80)];
            uint64_t v31 = v46;
            sub_100DBF9A8((uint64_t)v12, v46, type metadata accessor for CRLSEBoardIdentifier);
            sub_100DB3520((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
            dispatch thunk of Hashable.hash(into:)();
            type metadata accessor for CRLSEBoardIdentifierStorage(0);
            swift_bridgeObjectRetain();
            String.hash(into:)();
            swift_bridgeObjectRelease();
            sub_100DBFA10(v31, type metadata accessor for CRLSEBoardIdentifier);
            uint64_t v32 = (uint64_t)v30;
            goto LABEL_11;
          case 3u:
            uint64_t v33 = sub_1005057FC((uint64_t *)&unk_10168D400);
            swift_bridgeObjectRelease();
            unint64_t v34 = &v12[*(int *)(v33 + 64)];
            Class v35 = v47;
            uint64_t v36 = v49;
            (*v45)(v47, v12, v49);
            sub_100DB3520((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
            dispatch thunk of Hashable.hash(into:)();
            (*v44)(v35, v36);
            uint64_t v32 = (uint64_t)v34;
LABEL_11:
            sub_100522F00(v32, &qword_101672EB0);
            break;
          default:
            Hasher._combine(_:)(*v12);
            break;
        }
        a1 = v23;
        uint64_t v22 = v25;
        Swift::Int v37 = Hasher._finalize()();
        sub_100DBFA10(v54, type metadata accessor for CRLSELibraryViewModel.Item);
        unint64_t v38 = v37 & v24;
        uint64_t v20 = v24;
        if (v23 >= (uint64_t)v51) {
          break;
        }
        if (v38 < v51) {
          goto LABEL_16;
        }
LABEL_17:
        if (v25 * v23 < v26
          || *(void *)(v53 + 48) + v25 * v23 >= (unint64_t)(*(void *)(v53 + 48) + v26 + v25))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v19;
          if (v25 * v23 == v26) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v19;
LABEL_6:
        unint64_t v19 = (v19 + 1) & v24;
        if (((*(void *)(v52 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v38 < v51) {
        goto LABEL_6;
      }
LABEL_16:
      if (v23 < (uint64_t)v38) {
        goto LABEL_6;
      }
      goto LABEL_17;
    }
LABEL_21:
    *(void *)(v52 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v43;
  }
  else
  {
    *(void *)(v17 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v39 = *v1;
  uint64_t v40 = *(void *)(*v1 + 16);
  BOOL v41 = __OFSUB__(v40, 1);
  uint64_t v42 = v40 - 1;
  if (v41)
  {
    __break(1u);
    JUMPOUT(0x100DA1A68);
  }
  *(void *)(v39 + 16) = v42;
  ++*(_DWORD *)(v39 + 36);
  return result;
}

unint64_t sub_100DA1A78(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      while (2)
      {
        uint64_t v10 = 16 * v6;
        uint64_t v11 = *(void *)(v3 + 48) + 16 * v6;
        uint64_t v12 = *(void **)v11;
        uint64_t v13 = *(unsigned __int8 *)(v11 + 8);
        Hasher.init(_seed:)();
        switch(v13)
        {
          case 1:
            Swift::UInt v14 = 1;
            goto LABEL_10;
          case 2:
            Swift::UInt v14 = 2;
            goto LABEL_10;
          case 3:
            if (v12)
            {
              if (v12 == (void *)1) {
                Swift::UInt v16 = 4;
              }
              else {
                Swift::UInt v16 = 5;
              }
            }
            else
            {
              Swift::UInt v16 = 3;
            }
            Hasher._combine(_:)(v16);
            goto LABEL_17;
          default:
            Swift::UInt v14 = 0;
LABEL_10:
            Hasher._combine(_:)(v14);
            id v15 = v12;
            NSObject.hash(into:)();
LABEL_17:
            Swift::Int v17 = Hasher._finalize()();
            sub_1007A0938(v12, v13);
            unint64_t v18 = v17 & v7;
            if (v2 >= (uint64_t)v9)
            {
              if (v18 < v9) {
                goto LABEL_5;
              }
            }
            else if (v18 >= v9)
            {
              goto LABEL_22;
            }
            if (v2 < (uint64_t)v18) {
              goto LABEL_5;
            }
LABEL_22:
            uint64_t v19 = *(void *)(v3 + 48);
            uint64_t v20 = (_OWORD *)(v19 + 16 * v2);
            uint64_t v21 = (_OWORD *)(v19 + v10);
            if (16 * v2 != v10 || (int64_t v2 = v6, v20 >= v21 + 1))
            {
              *uint64_t v20 = *v21;
              int64_t v2 = v6;
            }
LABEL_5:
            unint64_t v6 = (v6 + 1) & v7;
            if ((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
              continue;
            }
            goto LABEL_25;
        }
      }
    }
LABEL_25:
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v22 = *(void *)(v3 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
    JUMPOUT(0x100DA1CC4);
  }
  *(void *)(v3 + 16) = v24;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_100DA1CD4(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v8);
  uint64_t v38 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t result = *v1;
  uint64_t v15 = *v1 + 56;
  uint64_t v16 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v17 = (a1 + 1) & ~v16;
  if (((1 << v17) & *(void *)(v15 + 8 * (v17 >> 6))) != 0)
  {
    Swift::Int v37 = v1;
    uint64_t v18 = ~v16;
    uint64_t v39 = result;
    uint64_t v40 = v15;
    swift_retain();
    int64_t v19 = a1;
    uint64_t v20 = _HashTable.previousHole(before:)();
    uint64_t v21 = v40;
    if ((*(void *)(v40 + 8 * (v17 >> 6)) & (1 << v17)) != 0)
    {
      unint64_t v22 = (v20 + 1) & v18;
      uint64_t v23 = *(void *)(v7 + 72);
      uint64_t v24 = v39;
      while (1)
      {
        uint64_t v25 = v18;
        uint64_t v26 = v23;
        int64_t v27 = v23 * v17;
        sub_100DBF940(*(void *)(v24 + 48) + v23 * v17, (uint64_t)v13, type metadata accessor for CRLSpotlightManager.ChangeType);
        Hasher.init(_seed:)();
        uint64_t v28 = v38;
        sub_100DBF940((uint64_t)v13, v38, type metadata accessor for CRLSpotlightManager.ChangeType);
        EnumCaseMultiPayloadouble d = swift_getEnumCaseMultiPayload();
        sub_100DBF9A8(v28, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
        Hasher._combine(_:)(EnumCaseMultiPayload == 1);
        type metadata accessor for UUID();
        sub_100DB3520((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        dispatch thunk of Hashable.hash(into:)();
        type metadata accessor for CRLBoardIdentifierStorage(0);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        sub_100DBFA10((uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
        Swift::Int v30 = Hasher._finalize()();
        sub_100DBFA10((uint64_t)v13, type metadata accessor for CRLSpotlightManager.ChangeType);
        uint64_t v18 = v25;
        unint64_t v31 = v30 & v25;
        if (v19 >= (uint64_t)v22) {
          break;
        }
        uint64_t v24 = v39;
        uint64_t v23 = v26;
        if (v31 < v22) {
          goto LABEL_11;
        }
LABEL_12:
        int64_t v32 = v23 * v19;
        if (v23 * v19 < v27
          || *(void *)(v24 + 48) + v23 * v19 >= (unint64_t)(*(void *)(v24 + 48) + v27 + v23))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v19 = v17;
          if (v32 == v27) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v23 = v26;
        int64_t v19 = v17;
LABEL_6:
        unint64_t v17 = (v17 + 1) & v25;
        uint64_t v21 = v40;
        if (((*(void *)(v40 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
          goto LABEL_17;
        }
      }
      uint64_t v24 = v39;
      uint64_t v23 = v26;
      if (v31 < v22) {
        goto LABEL_6;
      }
LABEL_11:
      if (v19 < (uint64_t)v31) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_17:
    *(void *)(v21 + (((unint64_t)v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v19) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v37;
  }
  else
  {
    *(void *)(v15 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v33 = *v1;
  uint64_t v34 = *(void *)(*v1 + 16);
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v33 + 16) = v36;
    ++*(_DWORD *)(v33 + 36);
  }
  return result;
}

unint64_t sub_100DA210C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = static Hasher._hash(seed:_:)() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *uint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_100DA2294(int64_t a1)
{
  return sub_100DA22DC(a1, (uint64_t (*)(void))&type metadata accessor for IndexPath, &qword_101672918, (void (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
}

uint64_t sub_100DA22DC(int64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  NSString v43 = a3;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = *v5;
  uint64_t v14 = *v5 + 56;
  uint64_t v15 = -1 << *(unsigned char *)(*v5 + 32);
  unint64_t v16 = (a1 + 1) & ~v15;
  if (((1 << v16) & *(void *)(v14 + 8 * (v16 >> 6))) != 0)
  {
    uint64_t v39 = v5;
    uint64_t v17 = ~v15;
    swift_retain();
    uint64_t v18 = _HashTable.previousHole(before:)();
    uint64_t v19 = v13;
    if ((*(void *)(v14 + 8 * (v16 >> 6)) & (1 << v16)) != 0)
    {
      unint64_t v41 = (v18 + 1) & v17;
      uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v20 = v8 + 16;
      uint64_t v40 = v21;
      uint64_t v46 = *(void *)(v20 + 56);
      uint64_t v42 = v20;
      unint64_t v22 = (void (**)(char *, uint64_t))(v20 - 8);
      do
      {
        uint64_t v23 = v14;
        int64_t v24 = v46 * v16;
        v40(v12, *(void *)(v19 + 48) + v46 * v16, v7);
        uint64_t v25 = v19;
        sub_100DB3520(v43, v44);
        uint64_t v26 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v22)(v12, v7);
        unint64_t v27 = v26 & v17;
        if (a1 >= (uint64_t)v41)
        {
          if (v27 >= v41 && a1 >= (uint64_t)v27)
          {
LABEL_16:
            uint64_t v19 = v25;
            uint64_t v30 = *(void *)(v25 + 48);
            int64_t v31 = v46 * a1;
            unint64_t v32 = v30 + v46 * a1;
            unint64_t v33 = v30 + v24 + v46;
            if (v46 * a1 < v24 || v32 >= v33)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v16;
            }
            else
            {
              a1 = v16;
              if (v31 != v24)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v16;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v27 >= v41 || a1 >= (uint64_t)v27)
        {
          goto LABEL_16;
        }
        uint64_t v19 = v25;
LABEL_5:
        unint64_t v16 = (v16 + 1) & v17;
        uint64_t v14 = v23;
      }
      while (((*(void *)(v23 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
    }
    *(void *)(v14 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v5 = v39;
  }
  else
  {
    *(void *)(v14 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v35 = *v5;
  uint64_t v36 = *(void *)(*v5 + 16);
  BOOL v37 = __OFSUB__(v36, 1);
  uint64_t v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v35 + 16) = v38;
    ++*(_DWORD *)(v35 + 36);
  }
  return result;
}

unint64_t sub_100DA25C8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

Swift::Int sub_100DA276C(unint64_t *a1, char a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_100F6A024(v5);
  }
  uint64_t v6 = *(void *)(v5 + 16);
  v8[0] = v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v8[1] = v6;
  Swift::Int result = sub_100DA2898(v8, a2 & 1);
  *a1 = v5;
  return result;
}

uint64_t sub_100DA2824(uint64_t *a1, uint64_t (*a2)(void *))
{
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_100F6A184(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  uint64_t result = a2(v7);
  *a1 = v4;
  return result;
}

Swift::Int sub_100DA2898(uint64_t *a1, int a2)
{
  int v210 = a2;
  uint64_t v209 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v202 = *(void *)(v209 - 8);
  uint64_t v4 = __chkstk_darwin(v209, v3);
  uint64_t v197 = (uint64_t)&v185 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v212 = (uint64_t)&v185 - v8;
  uint64_t v10 = __chkstk_darwin(v7, v9);
  Swift::Int v12 = (char *)&v185 - v11;
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v208 = (char *)&v185 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v19 = (char *)&v185 - v18;
  uint64_t v21 = __chkstk_darwin(v17, v20);
  uint64_t v214 = (uint64_t)&v185 - v22;
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v26 = (char *)&v185 - v25;
  uint64_t v28 = __chkstk_darwin(v24, v27);
  uint64_t v30 = (char *)&v185 - v29;
  uint64_t v32 = __chkstk_darwin(v28, v31);
  uint64_t v34 = (char *)&v185 - v33;
  uint64_t v36 = __chkstk_darwin(v32, v35);
  uint64_t v200 = (uint64_t)&v185 - v37;
  uint64_t v39 = __chkstk_darwin(v36, v38);
  unint64_t v41 = (char *)&v185 - v40;
  uint64_t v43 = __chkstk_darwin(v39, v42);
  uint64_t v45 = (char *)&v185 - v44;
  uint64_t v47 = __chkstk_darwin(v43, v46);
  uint64_t v191 = (uint64_t)&v185 - v48;
  __chkstk_darwin(v47, v49);
  uint64_t v190 = (uint64_t)&v185 - v50;
  uint64_t v207 = a1;
  Swift::Int v51 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v51);
  if (result >= v51)
  {
    if (v51 < 0) {
      goto LABEL_168;
    }
    if (v51) {
      return sub_100DA7B0C(0, v51, 1, v207, v210 & 1);
    }
    return result;
  }
  if (v51 >= 0) {
    uint64_t v53 = v51;
  }
  else {
    uint64_t v53 = v51 + 1;
  }
  if (v51 < -1) {
    goto LABEL_176;
  }
  unint64_t v204 = v12;
  uint64_t v193 = v26;
  Swift::String v196 = v30;
  uint64_t v199 = v34;
  uint64_t v186 = v41;
  unint64_t v188 = v45;
  Swift::Int v194 = result;
  if (v51 < 2)
  {
    long long v58 = _swiftEmptyArrayStorage;
    unint64_t v201 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v202 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v202 + 80));
    uint64_t v57 = v207;
    if (v51 != 1)
    {
      unint64_t v62 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v60 = _swiftEmptyArrayStorage;
LABEL_134:
      unint64_t v187 = v58;
      uint64_t v178 = v203;
      if (v62 >= 2)
      {
        uint64_t v179 = *v57;
        do
        {
          unint64_t v180 = v62 - 2;
          if (v62 < 2) {
            goto LABEL_163;
          }
          if (!v179) {
            goto LABEL_175;
          }
          double v181 = v60[2 * v180 + 4];
          double v182 = v60[2 * v62 + 3];
          sub_100DA9A6C(v179 + *(void *)(v202 + 72) * *(void *)&v181, v179 + *(void *)(v202 + 72) * *(void *)&v60[2 * v62 + 2], v179 + *(void *)(v202 + 72) * *(void *)&v182, v201, v210 & 1);
          if (v178) {
            break;
          }
          if (*(uint64_t *)&v182 < *(uint64_t *)&v181) {
            goto LABEL_164;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v60 = sub_100F69F28((uint64_t)v60);
          }
          if (v180 >= *((void *)v60 + 2)) {
            goto LABEL_165;
          }
          id v183 = &v60[2 * v180 + 4];
          *id v183 = v181;
          v183[1] = v182;
          unint64_t v184 = *((void *)v60 + 2);
          if (v62 > v184) {
            goto LABEL_166;
          }
          memmove(&v60[2 * v62 + 2], &v60[2 * v62 + 4], 16 * (v184 - v62));
          *((void *)v60 + 2) = v184 - 1;
          unint64_t v62 = v184 - 1;
        }
        while (v184 > 2);
      }
LABEL_145:
      swift_bridgeObjectRelease();
      v187[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v187 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v54 = v53 >> 1;
    uint64_t v55 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v55 + 16) = v54;
    uint64_t v56 = *(unsigned __int8 *)(v202 + 80);
    unint64_t v187 = (double *)v55;
    unint64_t v201 = v55 + ((v56 + 32) & ~v56);
    uint64_t v57 = v207;
  }
  Swift::Int v59 = 0;
  uint64_t v60 = _swiftEmptyArrayStorage;
  uint64_t v61 = (uint64_t)v208;
  unint64_t v205 = v19;
  while (1)
  {
    Swift::Int v63 = v59 + 1;
    Swift::Int v198 = v59;
    if (v59 + 1 >= v51)
    {
      Swift::Int v78 = v194;
      goto LABEL_57;
    }
    uint64_t v64 = *v57;
    uint64_t v65 = *(void *)(v202 + 72);
    Swift::Int v211 = v59 + 1;
    uint64_t v66 = v190;
    sub_100DBF940(v64 + v65 * v63, v190, type metadata accessor for CRLBoardLibraryViewModel.Item);
    Swift::Int v195 = v64;
    uint64_t v220 = v65;
    uint64_t v67 = v64 + v65 * v59;
    uint64_t v68 = v191;
    sub_100DBF940(v67, v191, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v69 = (uint64_t)v188;
    sub_100DBF940(v66, (uint64_t)v188, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v70 = sub_1005057FC(&qword_101677100);
      uint64_t v71 = (uint64_t *)(v69 + *(int *)(v70 + 48));
      uint64_t v72 = *v71;
      uint64_t v73 = v71[1];
      sub_100DBFA10(v69, type metadata accessor for CRLBoardIdentifier);
      uint64_t v74 = (uint64_t)v186;
      sub_100DBF940(v68, (uint64_t)v186, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v75 = (uint64_t *)(v74 + *(int *)(v70 + 48));
        uint64_t v76 = *v75;
        uint64_t v77 = v75[1];
        sub_100DBFA10(v74, type metadata accessor for CRLBoardIdentifier);
        if (v210)
        {
          uint64_t v218 = v72;
          uint64_t v219 = v73;
          uint64_t v216 = v76;
          uint64_t v217 = v77;
        }
        else
        {
          uint64_t v218 = v76;
          uint64_t v219 = v77;
          uint64_t v216 = v72;
          uint64_t v217 = v73;
        }
        sub_10052E310();
        uint64_t v79 = StringProtocol.localizedStandardCompare<A>(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LODWORD(v213) = v79 == -1;
        uint64_t v57 = v207;
        uint64_t v61 = (uint64_t)v208;
        uint64_t v19 = v205;
        goto LABEL_27;
      }
      swift_bridgeObjectRelease();
      sub_100DBFA10(v74, type metadata accessor for CRLBoardLibraryViewModel.Item);
      LODWORD(v213) = 0;
      uint64_t v61 = (uint64_t)v208;
    }
    else
    {
      sub_100DBFA10(v69, type metadata accessor for CRLBoardLibraryViewModel.Item);
      LODWORD(v213) = 0;
    }
    uint64_t v57 = v207;
LABEL_27:
    Swift::Int v59 = v198;
    sub_100DBFA10(v191, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100DBFA10(v190, type metadata accessor for CRLBoardLibraryViewModel.Item);
    Swift::Int v63 = v59 + 2;
    Swift::Int v215 = v51;
    if (v59 + 2 < v51)
    {
      unint64_t v189 = v60;
      uint64_t v80 = v220 * v211;
      Swift::Int v81 = v195;
      uint64_t v206 = v220 * v63;
      uint64_t v192 = v220 * v211;
      while (1)
      {
        Swift::Int v211 = v63;
        uint64_t v82 = v200;
        sub_100DBF940(v81 + v206, v200, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v83 = (uint64_t)v199;
        sub_100DBF940(v81 + v80, (uint64_t)v199, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v84 = (uint64_t)v196;
        sub_100DBF940(v82, (uint64_t)v196, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          Swift::String v85 = v19;
          unint64_t v86 = v57;
          uint64_t v87 = sub_1005057FC(&qword_101677100);
          unint64_t v88 = (uint64_t *)(v84 + *(int *)(v87 + 48));
          uint64_t v90 = *v88;
          uint64_t v89 = v88[1];
          sub_100DBFA10(v84, type metadata accessor for CRLBoardIdentifier);
          uint64_t v91 = (uint64_t)v193;
          sub_100DBF940(v83, (uint64_t)v193, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            id v92 = (uint64_t *)(v91 + *(int *)(v87 + 48));
            uint64_t v93 = *v92;
            uint64_t v94 = v92[1];
            sub_100DBFA10(v91, type metadata accessor for CRLBoardIdentifier);
            uint64_t v61 = (uint64_t)v208;
            if (v210)
            {
              uint64_t v218 = v90;
              uint64_t v219 = v89;
              uint64_t v216 = v93;
              uint64_t v217 = v94;
            }
            else
            {
              uint64_t v218 = v93;
              uint64_t v219 = v94;
              uint64_t v216 = v90;
              uint64_t v217 = v89;
            }
            sub_10052E310();
            uint64_t v96 = StringProtocol.localizedStandardCompare<A>(_:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v95 = v96 == -1;
            uint64_t v57 = v207;
            uint64_t v19 = v205;
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_100DBFA10(v91, type metadata accessor for CRLBoardLibraryViewModel.Item);
            int v95 = 0;
            uint64_t v61 = (uint64_t)v208;
            uint64_t v57 = v86;
            uint64_t v19 = v85;
          }
          Swift::Int v51 = v215;
          uint64_t v80 = v192;
        }
        else
        {
          sub_100DBFA10(v84, type metadata accessor for CRLBoardLibraryViewModel.Item);
          int v95 = 0;
          uint64_t v61 = (uint64_t)v208;
          Swift::Int v51 = v215;
        }
        sub_100DBFA10((uint64_t)v199, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10(v200, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (v213 != v95) {
          break;
        }
        Swift::Int v63 = v211 + 1;
        v81 += v220;
        if (v51 == v211 + 1)
        {
          Swift::Int v63 = v51;
          uint64_t v60 = v189;
          goto LABEL_42;
        }
      }
      uint64_t v60 = v189;
      Swift::Int v63 = v211;
LABEL_42:
      Swift::Int v59 = v198;
    }
    Swift::Int v78 = v194;
    if (v213)
    {
      if (v63 < v59) {
        goto LABEL_169;
      }
      if (v59 < v63)
      {
        unint64_t v189 = v60;
        uint64_t v97 = 0;
        uint64_t v98 = v220 * (v63 - 1);
        uint64_t v99 = v63 * v220;
        uint64_t v100 = v59 * v220;
        do
        {
          if (v59 != v63 + v97 - 1)
          {
            Swift::Int v102 = v195;
            if (!v195) {
              goto LABEL_174;
            }
            unint64_t v103 = v195 + v100;
            uint64_t v213 = v195 + v98;
            sub_100DBF9A8(v195 + v100, v197, type metadata accessor for CRLBoardLibraryViewModel.Item);
            if (v100 < v98 || v103 >= v102 + v99)
            {
              uint64_t v101 = v213;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v101 = v213;
              if (v100 != v98) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_100DBF9A8(v197, v101, type metadata accessor for CRLBoardLibraryViewModel.Item);
            Swift::Int v78 = v194;
            Swift::Int v51 = v215;
          }
          ++v59;
          --v97;
          v98 -= v220;
          v99 -= v220;
          v100 += v220;
        }
        while (v59 < v63 + v97);
        uint64_t v61 = (uint64_t)v208;
        uint64_t v60 = v189;
        uint64_t v57 = v207;
        Swift::Int v59 = v198;
      }
    }
LABEL_57:
    if (v63 < v51)
    {
      if (__OFSUB__(v63, v59)) {
        goto LABEL_167;
      }
      if (v63 - v59 < v78) {
        break;
      }
    }
LABEL_83:
    if (v63 < v59) {
      goto LABEL_162;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v211 = v63;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v60 = sub_100F697E0(0, *((void *)v60 + 2) + 1, 1, (uint64_t)v60);
    }
    unint64_t v124 = *((void *)v60 + 2);
    unint64_t v123 = *((void *)v60 + 3);
    unint64_t v62 = v124 + 1;
    if (v124 >= v123 >> 1) {
      uint64_t v60 = sub_100F697E0((double *)(v123 > 1), v124 + 1, 1, (uint64_t)v60);
    }
    *((void *)v60 + 2) = v62;
    uint64_t v220 = (uint64_t)(v60 + 4);
    uint64_t v125 = &v60[2 * v124 + 4];
    Swift::Int v126 = v211;
    *(void *)uint64_t v125 = v59;
    *((void *)v125 + 1) = v126;
    if (v124)
    {
      uint64_t v127 = v220;
      while (1)
      {
        unint64_t v128 = v62 - 1;
        if (v62 >= 4)
        {
          unint64_t v133 = v127 + 16 * v62;
          uint64_t v134 = *(void *)(v133 - 64);
          uint64_t v135 = *(void *)(v133 - 56);
          BOOL v139 = __OFSUB__(v135, v134);
          uint64_t v136 = v135 - v134;
          if (v139) {
            goto LABEL_151;
          }
          uint64_t v138 = *(void *)(v133 - 48);
          uint64_t v137 = *(void *)(v133 - 40);
          BOOL v139 = __OFSUB__(v137, v138);
          uint64_t v131 = v137 - v138;
          char v132 = v139;
          if (v139) {
            goto LABEL_152;
          }
          unint64_t v140 = v62 - 2;
          char v141 = (uint64_t *)(v127 + 16 * (v62 - 2));
          uint64_t v143 = *v141;
          uint64_t v142 = v141[1];
          BOOL v139 = __OFSUB__(v142, v143);
          uint64_t v144 = v142 - v143;
          if (v139) {
            goto LABEL_154;
          }
          BOOL v139 = __OFADD__(v131, v144);
          uint64_t v145 = v131 + v144;
          if (v139) {
            goto LABEL_157;
          }
          if (v145 >= v136)
          {
            uint64_t v163 = (uint64_t *)(v127 + 16 * v128);
            uint64_t v165 = *v163;
            uint64_t v164 = v163[1];
            BOOL v139 = __OFSUB__(v164, v165);
            uint64_t v166 = v164 - v165;
            if (v139) {
              goto LABEL_161;
            }
            BOOL v156 = v131 < v166;
            goto LABEL_121;
          }
        }
        else
        {
          if (v62 != 3)
          {
            uint64_t v157 = *((void *)v60 + 4);
            uint64_t v158 = *((void *)v60 + 5);
            BOOL v139 = __OFSUB__(v158, v157);
            uint64_t v150 = v158 - v157;
            char v151 = v139;
            goto LABEL_115;
          }
          uint64_t v130 = *((void *)v60 + 4);
          uint64_t v129 = *((void *)v60 + 5);
          BOOL v139 = __OFSUB__(v129, v130);
          uint64_t v131 = v129 - v130;
          char v132 = v139;
        }
        if (v132) {
          goto LABEL_153;
        }
        unint64_t v140 = v62 - 2;
        uint64_t v146 = (uint64_t *)(v127 + 16 * (v62 - 2));
        uint64_t v148 = *v146;
        uint64_t v147 = v146[1];
        BOOL v149 = __OFSUB__(v147, v148);
        uint64_t v150 = v147 - v148;
        char v151 = v149;
        if (v149) {
          goto LABEL_156;
        }
        uint64_t v152 = (uint64_t *)(v127 + 16 * v128);
        uint64_t v154 = *v152;
        uint64_t v153 = v152[1];
        BOOL v139 = __OFSUB__(v153, v154);
        uint64_t v155 = v153 - v154;
        if (v139) {
          goto LABEL_159;
        }
        if (__OFADD__(v150, v155)) {
          goto LABEL_160;
        }
        if (v150 + v155 >= v131)
        {
          BOOL v156 = v131 < v155;
LABEL_121:
          if (v156) {
            unint64_t v128 = v140;
          }
          goto LABEL_123;
        }
LABEL_115:
        if (v151) {
          goto LABEL_155;
        }
        UIImage_optional v159 = (uint64_t *)(v127 + 16 * v128);
        uint64_t v161 = *v159;
        uint64_t v160 = v159[1];
        BOOL v139 = __OFSUB__(v160, v161);
        uint64_t v162 = v160 - v161;
        if (v139) {
          goto LABEL_158;
        }
        if (v162 < v150) {
          goto LABEL_15;
        }
LABEL_123:
        char v167 = v19;
        uint64_t v168 = v57;
        unint64_t v169 = v128 - 1;
        if (v128 - 1 >= v62)
        {
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
          goto LABEL_171;
        }
        if (!*v168) {
          goto LABEL_173;
        }
        id v170 = v60;
        uint64_t v171 = (uint64_t *)(v127 + 16 * v169);
        uint64_t v172 = v127;
        uint64_t v173 = *v171;
        uint64_t v174 = (void *)(v172 + 16 * v128);
        uint64_t v175 = v174[1];
        uint64_t v176 = v203;
        sub_100DA9A6C(*v168 + *(void *)(v202 + 72) * *v171, *v168 + *(void *)(v202 + 72) * *v174, *v168 + *(void *)(v202 + 72) * v175, v201, v210 & 1);
        uint64_t v203 = v176;
        if (v176) {
          goto LABEL_145;
        }
        if (v175 < v173) {
          goto LABEL_148;
        }
        if (v128 > *((void *)v170 + 2)) {
          goto LABEL_149;
        }
        uint64_t *v171 = v173;
        uint64_t v127 = v220;
        *(void *)(v220 + 16 * v169 + 8) = v175;
        unint64_t v177 = *((void *)v170 + 2);
        if (v128 >= v177) {
          goto LABEL_150;
        }
        uint64_t v60 = v170;
        unint64_t v62 = v177 - 1;
        memmove(v174, v174 + 2, 16 * (v177 - 1 - v128));
        *((void *)v170 + 2) = v177 - 1;
        BOOL v156 = v177 > 2;
        uint64_t v57 = v168;
        uint64_t v19 = v167;
        if (!v156) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v62 = 1;
LABEL_15:
    Swift::Int v51 = v57[1];
    Swift::Int v59 = v211;
    uint64_t v61 = (uint64_t)v208;
    if (v211 >= v51)
    {
      long long v58 = v187;
      goto LABEL_134;
    }
  }
  if (__OFADD__(v59, v78)) {
    goto LABEL_170;
  }
  if (v59 + v78 >= v51) {
    Swift::Int v104 = v51;
  }
  else {
    Swift::Int v104 = v59 + v78;
  }
  if (v104 >= v59)
  {
    if (v63 != v104)
    {
      unint64_t v189 = v60;
      uint64_t v105 = *(void *)(v202 + 72);
      uint64_t v220 = v105 * (v63 - 1);
      uint64_t v206 = v105;
      Swift::Int v215 = v63 * v105;
      Swift::Int v195 = v104;
      do
      {
        uint64_t v108 = 0;
        Swift::Int v211 = v63;
        while (1)
        {
          uint64_t v109 = *v57;
          uint64_t v110 = v214;
          uint64_t v213 = v215 + v108;
          sub_100DBF940(v215 + v108 + v109, v214, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100DBF940(v220 + v108 + v109, (uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100DBF940(v110, v61, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload() != 2)
          {
            uint64_t v106 = v61;
            goto LABEL_68;
          }
          uint64_t v111 = sub_1005057FC(&qword_101677100);
          uint64_t v112 = (uint64_t *)(v61 + *(int *)(v111 + 48));
          uint64_t v114 = *v112;
          uint64_t v113 = v112[1];
          sub_100DBFA10(v61, type metadata accessor for CRLBoardIdentifier);
          uint64_t v115 = (uint64_t)v204;
          sub_100DBF940((uint64_t)v19, (uint64_t)v204, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (swift_getEnumCaseMultiPayload() != 2) {
            break;
          }
          uint64_t v116 = (uint64_t *)(v115 + *(int *)(v111 + 48));
          uint64_t v117 = *v116;
          uint64_t v118 = v116[1];
          sub_100DBFA10(v115, type metadata accessor for CRLBoardIdentifier);
          if (v210)
          {
            uint64_t v218 = v114;
            uint64_t v219 = v113;
            uint64_t v216 = v117;
            uint64_t v217 = v118;
          }
          else
          {
            uint64_t v218 = v117;
            uint64_t v219 = v118;
            uint64_t v216 = v114;
            uint64_t v217 = v113;
          }
          sub_10052E310();
          uint64_t v119 = StringProtocol.localizedStandardCompare<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v61 = (uint64_t)v208;
          uint64_t v19 = v205;
          sub_100DBFA10((uint64_t)v205, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100DBFA10(v214, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v57 = v207;
          if (v119 != -1) {
            goto LABEL_69;
          }
          uint64_t v120 = *v207;
          if (!*v207) {
            goto LABEL_172;
          }
          uint64_t v121 = v120 + v220 + v108;
          sub_100DBF9A8(v120 + v215 + v108, v212, type metadata accessor for CRLBoardLibraryViewModel.Item);
          swift_arrayInitWithTakeFrontToBack();
          sub_100DBF9A8(v212, v121, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v108 -= v206;
          ++v59;
          Swift::Int v107 = v211;
          if (v211 == v59) {
            goto LABEL_70;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v106 = v115;
        uint64_t v61 = (uint64_t)v208;
        uint64_t v19 = v205;
LABEL_68:
        sub_100DBFA10(v106, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100DBFA10(v214, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v57 = v207;
LABEL_69:
        Swift::Int v107 = v211;
LABEL_70:
        Swift::Int v63 = v107 + 1;
        v220 += v206;
        v215 += v206;
        Swift::Int v59 = v198;
      }
      while (v63 != v195);
      Swift::Int v63 = v195;
      uint64_t v60 = v189;
    }
    goto LABEL_83;
  }
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100DA3A1C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v363 = type metadata accessor for Calendar.Component();
  uint64_t v4 = *(void *)(v363 - 8);
  __chkstk_darwin(v363, v5);
  uint64_t v362 = (char *)&v339 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v361 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v361 - 8);
  uint64_t v9 = __chkstk_darwin(v361, v8);
  id v360 = (char *)&v339 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v359 = (char *)&v339 - v12;
  uint64_t v358 = type metadata accessor for Calendar();
  uint64_t v13 = *(void *)(v358 - 8);
  __chkstk_darwin(v358, v14);
  uint64_t v357 = (char *)&v339 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v16 = a1[1];
  Swift::Int v17 = _minimumMergeRunLength(_:)(v16);
  if (v17 >= v16)
  {
    if (v16 < 0) {
      goto LABEL_334;
    }
    if (v16) {
      sub_100DA7FA0(0, v16, 1, a1);
    }
    return;
  }
  if (v16 >= 0) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v16 + 1;
  }
  if (v16 < -1) {
    goto LABEL_342;
  }
  uint64_t v343 = a1;
  uint64_t v346 = v16;
  Swift::Int v344 = v17;
  if (v16 < 2)
  {
    Swift::Int v21 = v16;
    uint64_t v22 = _swiftEmptyArrayStorage;
    unint64_t v368 = (void **)&_swiftEmptyArrayStorage[4];
    uint64_t v342 = _swiftEmptyArrayStorage;
    if (v16 != 1)
    {
      unint64_t v26 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_300:
      if (v26 >= 2)
      {
        uint64_t v331 = *v343;
        do
        {
          unint64_t v332 = v26 - 2;
          if (v26 < 2) {
            goto LABEL_329;
          }
          if (!v331) {
            goto LABEL_341;
          }
          id v333 = v22;
          char v334 = v22 + 4;
          double v335 = v22[2 * v332 + 4];
          double v336 = v22[2 * v26 + 3];
          sub_100DAA350((void **)(v331 + 32 * *(void *)&v335), (void **)(v331 + 32 * *(void *)&v334[2 * v26 - 2]), v331 + 32 * *(void *)&v336, v368);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v336 < *(uint64_t *)&v335) {
            goto LABEL_330;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v333 = sub_100F69F28((uint64_t)v333);
          }
          if (v332 >= *((void *)v333 + 2)) {
            goto LABEL_331;
          }
          unint64_t v337 = &v333[2 * v332 + 4];
          *unint64_t v337 = v335;
          v337[1] = v336;
          unint64_t v338 = *((void *)v333 + 2);
          if (v26 > v338) {
            goto LABEL_332;
          }
          uint64_t v22 = v333;
          memmove(&v333[2 * v26 + 2], &v333[2 * v26 + 4], 16 * (v338 - v26));
          *((void *)v333 + 2) = v338 - 1;
          unint64_t v26 = v338 - 1;
        }
        while (v338 > 2);
      }
LABEL_311:
      swift_bridgeObjectRelease();
      v342[2] = 0.0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v19 = v18 >> 1;
    uint64_t v20 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v20 + 16) = v19;
    Swift::Int v21 = v346;
    uint64_t v342 = (double *)v20;
    unint64_t v368 = (void **)(v20 + 32);
  }
  uint64_t v23 = 0;
  uint64_t v24 = *v343;
  id v350 = CKCurrentUserDefaultName;
  uint64_t v356 = (void (**)(char *, void, uint64_t))(v4 + 104);
  uint64_t v355 = (void (**)(char *, uint64_t))(v4 + 8);
  unint64_t v354 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v25 = v24;
  unint64_t v353 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v340 = v24 + 16;
  unsigned int v352 = enum case for Calendar.Component.day(_:);
  uint64_t v369 = v24;
  while (1)
  {
    uint64_t v27 = v23 + 1;
    if (v23 + 1 >= v21) {
      goto LABEL_161;
    }
    uint64_t v345 = v2;
    uint64_t v28 = v25 + 32 * v23;
    unsigned int v29 = *(unsigned __int8 *)(v28 + 24);
    unsigned int v30 = v29 >> 6;
    if (!(v29 >> 6)) {
      goto LABEL_59;
    }
    uint64_t v31 = (unint64_t *)(v25 + 32 * v27);
    unint64_t v33 = *v31;
    unint64_t v32 = v31[1];
    uint64_t v34 = v31[2];
    unsigned int v35 = *((unsigned __int8 *)v31 + 24);
    unint64_t v37 = *(void *)v28;
    unint64_t v36 = *(void *)(v28 + 8);
    uint64_t v38 = *(void *)(v28 + 16);
    if (v30 != 2)
    {
      if (v30 == 1)
      {
        if ((v35 & 0xC0) == 0x40)
        {
          double v376 = (char *)*v31;
          id v373 = (id)v34;
          id v374 = (id)v32;
          LODWORD(v375) = v35;
          sub_10053BB6C(v376, (id)v32, v34, v35);
          sub_10053BB6C((id)v37, (id)v36, v38, v29);
          uint64_t v39 = v357;
          static Calendar.current.getter();
          uint64_t v348 = v23;
          uint64_t v40 = v359;
          Date.init(timeIntervalSinceReferenceDate:)();
          unint64_t v41 = v360;
          Date.init(timeIntervalSinceReferenceDate:)();
          uint64_t v43 = v362;
          uint64_t v42 = v363;
          (*v356)(v362, v352, v363);
          uint64_t v44 = Calendar.compare(_:to:toGranularity:)();
          (*v355)(v43, v42);
          uint64_t v45 = *v354;
          uint64_t v46 = v361;
          (*v354)(v41, v361);
          uint64_t v47 = v40;
          uint64_t v23 = v348;
          v45(v47, v46);
          uint64_t v25 = v369;
          (*v353)(v39, v358);
          sub_10053BBA0(v376, v374, (uint64_t)v373, v375);
          uint64_t v48 = v44 == -1;
          goto LABEL_60;
        }
LABEL_31:
        if (v35 < 0x40) {
          goto LABEL_42;
        }
        uint64_t v48 = 1;
        if (v35 < 0xC0) {
          goto LABEL_60;
        }
      }
      else
      {
        if (v35 < 0x40)
        {
LABEL_42:
          uint64_t v48 = 0;
          goto LABEL_60;
        }
        if (!(v38 | v36 | v37) && v29 == 192)
        {
          unint64_t v32 = 0;
          uint64_t v34 = 0;
          LOBYTE(v35) = -64;
LABEL_58:
          sub_10053BB6C(0, (id)v32, v34, v35);
          goto LABEL_59;
        }
        if (v35 <= 0xBF)
        {
LABEL_54:
          uint64_t v48 = 1;
          if (v29 == 192 && v37 == 1 && !(v38 | v36))
          {
            sub_10053BB6C((id)1, 0, 0, 0xC0u);
            uint64_t v48 = 0;
          }
          goto LABEL_60;
        }
        LOBYTE(v48) = 0;
      }
      if (!(v34 | v32 | v33) && v35 == 192) {
        goto LABEL_42;
      }
      if (v33 == 1 && (v34 | v32) == 0 && v35 == 192) {
        char v66 = 1;
      }
      else {
        char v66 = v48;
      }
      if ((v66 & 1) == 0) {
        goto LABEL_54;
      }
LABEL_59:
      uint64_t v48 = 1;
      goto LABEL_60;
    }
    if ((v35 & 0xC0) != 0x80) {
      goto LABEL_31;
    }
    if (!v37)
    {
      sub_10053BBA0(0, *(id *)(v28 + 8), *(void *)(v28 + 16), *(unsigned char *)(v28 + 24));
      uint64_t v48 = 0;
      goto LABEL_60;
    }
    if (!v33) {
      goto LABEL_58;
    }
    uint64_t v341 = v22;
    uint64_t v49 = (char *)v33;
    unsigned int v50 = v35;
    Swift::Int v51 = (void *)v34;
    uint64_t v372 = v38;
    uint64_t v52 = (void *)v32;
    id v367 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v371 = v53;
    id v370 = *(id *)(v37 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
    sub_10053BB6C((id)v37, (id)v36, v372, v29);
    sub_10053BB6C(v49, v52, (uint64_t)v51, v50);
    sub_10053BB6C(v49, v52, (uint64_t)v51, v50);
    sub_10053BB6C((id)v37, (id)v36, v372, v29);
    double v376 = v49;
    id v373 = v51;
    id v374 = v52;
    uint64_t v54 = v52;
    uint64_t v55 = v372;
    LODWORD(v375) = v50;
    sub_10053BB6C(v49, v54, (uint64_t)v51, v50);
    sub_10053BB6C((id)v37, (id)v36, v55, v29);
    id v56 = [v370 userIdentity];
    id v57 = [v56 userRecordID];

    if (!v57)
    {
      swift_bridgeObjectRelease();
      goto LABEL_152;
    }
    id v58 = [v57 recordName];

    id v59 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v61 = v60;

    if (v367 == v59 && v371 == v61) {
      break;
    }
    char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_157;
    }
LABEL_152:
    uint64_t v162 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v371 = v163;
    id v164 = [*(id *)&v376[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
    id v165 = [v164 userRecordID];

    if (!v165)
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = v341;
LABEL_293:
      uint64_t v324 = sub_100701F80();
      uint64_t v326 = v325;
      if (v324 == sub_100701F80() && v326 == v327) {
        uint64_t v48 = 0;
      }
      else {
        uint64_t v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v328 = (uint64_t)v373;
      sub_10053BBA0(v376, v374, (uint64_t)v373, v375);
      uint64_t v329 = v372;
      sub_10053BBA0((void *)v37, (id)v36, v372, v29);
      uint64_t v330 = v328;
      LOBYTE(v328) = (_BYTE)v375;
      sub_10053BBA0(v376, v374, v330, v375);
      sub_10053BBA0((void *)v37, (id)v36, v329, v29);
      sub_10053BBA0((void *)v37, (id)v36, v329, v29);
      sub_10053BBA0(v376, v374, (uint64_t)v373, v328);
      uint64_t v25 = v369;
LABEL_60:
      uint64_t v67 = v23 + 2;
      Swift::Int v21 = v346;
      if (v23 + 2 < v346) {
        goto LABEL_61;
      }
      char v161 = v48;
LABEL_136:
      uint64_t v27 = v67;
      uint64_t v2 = v345;
      if (v161)
      {
        if (v67 < v23) {
          goto LABEL_337;
        }
        goto LABEL_138;
      }
      goto LABEL_161;
    }
    id v166 = [v165 recordName];

    uint64_t v167 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v169 = v168;

    if (v162 == v167 && v371 == v169)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v22 = v341;
      uint64_t v170 = v372;
    }
    else
    {
      char v319 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v341;
      uint64_t v170 = v372;
      if ((v319 & 1) == 0) {
        goto LABEL_293;
      }
    }
    sub_10053BBA0((void *)v37, (id)v36, v170, v29);
    id v320 = v376;
    uint64_t v322 = (uint64_t)v373;
    id v321 = v374;
    sub_10053BBA0(v376, v374, (uint64_t)v373, v375);
    sub_10053BBA0(v320, v321, v322, v375);
    uint64_t v323 = v372;
    sub_10053BBA0((void *)v37, (id)v36, v372, v29);
    sub_10053BBA0((void *)v37, (id)v36, v323, v29);
    sub_10053BBA0(v376, v321, v322, v375);
    uint64_t v67 = v23 + 2;
    Swift::Int v21 = v346;
    if (v23 + 2 < v346)
    {
      uint64_t v48 = 0;
      goto LABEL_292;
    }
    uint64_t v27 = v23 + 2;
    uint64_t v2 = v345;
    uint64_t v25 = v369;
LABEL_161:
    uint64_t v372 = v27;
    if (v27 >= v21) {
      goto LABEL_240;
    }
    if (__OFSUB__(v27, v23)) {
      goto LABEL_333;
    }
    if (v27 - v23 >= v344) {
      goto LABEL_240;
    }
    if (__OFADD__(v23, v344)) {
      goto LABEL_335;
    }
    if (v23 + v344 >= v21) {
      uint64_t v176 = v21;
    }
    else {
      uint64_t v176 = v23 + v344;
    }
    if (v176 < v23)
    {
LABEL_336:
      __break(1u);
      goto LABEL_337;
    }
    if (v372 == v176) {
      goto LABEL_240;
    }
    uint64_t v341 = v22;
    uint64_t v345 = v2;
    unint64_t v177 = (long long *)(v25 + 32 * v372);
    uint64_t v178 = v372;
    uint64_t v348 = v23;
    uint64_t v347 = v176;
    while (2)
    {
      unint64_t v351 = v177;
      uint64_t v180 = v23;
      uint64_t v372 = v178;
      while (1)
      {
        unint64_t v181 = *((void *)v177 - 4);
        unsigned int v182 = *((unsigned __int8 *)v177 - 8);
        unsigned int v183 = v182 >> 6;
        if (!(v182 >> 6)) {
          goto LABEL_231;
        }
        unint64_t v185 = *(void *)v177;
        unint64_t v184 = *((void *)v177 + 1);
        uint64_t v186 = *((void *)v177 + 2);
        unsigned int v187 = *((unsigned __int8 *)v177 + 24);
        unint64_t v188 = *((void *)v177 - 3);
        uint64_t v189 = *((void *)v177 - 2);
        if (v183 == 2) {
          break;
        }
        if (v183 == 1)
        {
          if ((v187 & 0xC0) == 0x40)
          {
            uint64_t v190 = *(void **)v177;
            id v374 = (id)*((void *)v177 + 1);
            uint64_t v375 = (char *)v185;
            uint64_t v191 = (void *)v188;
            id v373 = (id)v186;
            sub_10053BB6C(v190, (id)v184, v186, v187);
            sub_10053BB6C((id)v181, v191, v189, v182);
            uint64_t v192 = v357;
            static Calendar.current.getter();
            uint64_t v193 = v359;
            Date.init(timeIntervalSinceReferenceDate:)();
            LODWORD(v376) = v187;
            Swift::Int v194 = v360;
            Date.init(timeIntervalSinceReferenceDate:)();
            Swift::String v196 = v362;
            uint64_t v195 = v363;
            (*v356)(v362, v352, v363);
            uint64_t v371 = Calendar.compare(_:to:toGranularity:)();
            (*v355)(v196, v195);
            uint64_t v197 = *v354;
            uint64_t v198 = v361;
            (*v354)(v194, v361);
            v197(v193, v198);
            uint64_t v25 = v369;
            uint64_t v199 = v372;
            (*v353)(v192, v358);
            sub_10053BBA0(v375, v374, (uint64_t)v373, v376);
            uint64_t v178 = v199;
            if (v371 != -1) {
              goto LABEL_172;
            }
            goto LABEL_231;
          }
          goto LABEL_190;
        }
        if (v187 < 0x40) {
          goto LABEL_172;
        }
        if (!(v189 | v188 | v181) && v182 == 192)
        {
          uint64_t v216 = v178;
          sub_10053BB6C(0, 0, 0, 0xC0u);
          uint64_t v178 = v216;
          goto LABEL_231;
        }
        if (v187 <= 0xBF) {
          goto LABEL_211;
        }
        char v215 = 0;
LABEL_199:
        if (!(v186 | v184 | v185) && v187 == 192) {
          goto LABEL_172;
        }
        if (v185 == 1 && (v186 | v184) == 0 && v187 == 192) {
          char v215 = 1;
        }
        if (v215) {
          goto LABEL_231;
        }
LABEL_211:
        if (v182 == 192 && v181 == 1 && !(v189 | v188))
        {
          uint64_t v179 = v178;
          sub_10053BB6C((id)1, 0, 0, 0xC0u);
LABEL_171:
          uint64_t v178 = v179;
          goto LABEL_172;
        }
LABEL_231:
        if (!v25) {
          goto LABEL_338;
        }
        uint64_t v250 = *((void *)v177 + 2);
        char v251 = *((unsigned char *)v177 + 24);
        long long v252 = *v177;
        long long v253 = *(v177 - 1);
        long long *v177 = *(v177 - 2);
        v177[1] = v253;
        *((void *)v177 - 2) = v250;
        *((unsigned char *)v177 - 8) = v251;
        *(v177 - 2) = v252;
        v177 -= 2;
        if (v178 == ++v180) {
          goto LABEL_172;
        }
      }
      if ((v187 & 0xC0) != 0x80)
      {
LABEL_190:
        if (v187 < 0x40) {
          goto LABEL_172;
        }
        if (v187 < 0xC0) {
          goto LABEL_231;
        }
        char v215 = 1;
        goto LABEL_199;
      }
      if (!v181)
      {
        uint64_t v179 = v178;
        sub_10053BBA0(0, *((id *)v177 - 3), *((void *)v177 - 2), *((unsigned char *)v177 - 8));
        goto LABEL_171;
      }
      if (!v185)
      {
        sub_10053BB6C(0, (id)v184, v186, *((unsigned char *)v177 + 24));
LABEL_226:
        uint64_t v178 = v372;
        goto LABEL_231;
      }
      LODWORD(v370) = *((unsigned __int8 *)v177 - 8);
      uint64_t v200 = (void *)v188;
      unint64_t v201 = (void *)v186;
      uint64_t v371 = v189;
      uint64_t v202 = (void *)v184;
      uint64_t v349 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v366 = v203;
      id v365 = *(id *)(v181 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
      sub_10053BB6C((id)v181, v200, v371, v370);
      sub_10053BB6C((id)v185, v202, (uint64_t)v201, v187);
      sub_10053BB6C((id)v185, v202, (uint64_t)v201, v187);
      sub_10053BB6C((id)v181, v200, v371, v370);
      id v374 = v202;
      uint64_t v375 = (char *)v185;
      id v373 = v201;
      LODWORD(v376) = v187;
      sub_10053BB6C((id)v185, v202, (uint64_t)v201, v187);
      unint64_t v204 = v181;
      id v367 = v200;
      unint64_t v205 = v200;
      unsigned __int8 v206 = v370;
      sub_10053BB6C((id)v181, v205, v371, v370);
      id v207 = [v365 userIdentity];
      id v208 = [v207 userRecordID];

      char v364 = (void *)v181;
      if (v208)
      {
        id v209 = [v208 recordName];

        uint64_t v210 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v212 = v211;

        if (v349 == v210 && v366 == v212)
        {
          swift_bridgeObjectRelease_n();
          unint64_t v181 = v204;
        }
        else
        {
          char v214 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v181 = v204;
          if ((v214 & 1) == 0) {
            goto LABEL_217;
          }
        }
        id v230 = (void *)v181;
        id v231 = v367;
        uint64_t v232 = v371;
        sub_10053BBA0(v230, v367, v371, v206);
        id v233 = v374;
        uint64_t v234 = v375;
        uint64_t v235 = (uint64_t)v373;
        unsigned __int8 v236 = v376;
        sub_10053BBA0(v375, v374, (uint64_t)v373, v376);
        sub_10053BBA0(v234, v233, v235, v236);
        uint64_t v237 = v364;
        LOBYTE(v233) = (_BYTE)v370;
        sub_10053BBA0(v364, v231, v232, v370);
        sub_10053BBA0(v237, v231, v232, v233);
        sub_10053BBA0(v234, v374, v235, v376);
        uint64_t v25 = v369;
        goto LABEL_226;
      }
      swift_bridgeObjectRelease();
LABEL_217:
      id v366 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v220 = v219;
      id v221 = [*(id *)&v375[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
      id v222 = [v221 userRecordID];

      if (v222)
      {
        unsigned __int8 v223 = v206;
        id v224 = [v222 recordName];

        id v225 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v227 = v226;

        if (v366 == v225 && v220 == v227)
        {
          swift_bridgeObjectRelease_n();
LABEL_237:
          uint64_t v266 = (void *)v181;
          unsigned __int8 v264 = v223;
          double v259 = (void *)v181;
          id v260 = v367;
          uint64_t v262 = v371;
          sub_10053BBA0(v266, v367, v371, v223);
          id v254 = v374;
          id v255 = v375;
          double v258 = v375;
          id v261 = v374;
          uint64_t v256 = (uint64_t)v373;
          uint64_t v263 = (uint64_t)v373;
          unsigned __int8 v257 = v376;
          unsigned __int8 v265 = v376;
          goto LABEL_238;
        }
        char v229 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v229) {
          goto LABEL_237;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v238 = sub_100701F80();
      uint64_t v240 = v239;
      if (v238 != sub_100701F80() || v240 != v241)
      {
        LODWORD(v366) = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v242 = v374;
        uint64_t v243 = v375;
        uint64_t v244 = (uint64_t)v373;
        sub_10053BBA0(v375, v374, (uint64_t)v373, v376);
        id v245 = (void *)v181;
        id v246 = v367;
        uint64_t v247 = v371;
        unsigned __int8 v248 = v370;
        sub_10053BBA0(v245, v367, v371, v370);
        sub_10053BBA0(v243, v242, v244, v376);
        double v249 = v364;
        sub_10053BBA0(v364, v246, v247, v248);
        sub_10053BBA0(v249, v246, v247, v248);
        sub_10053BBA0(v243, v374, v244, v376);
        uint64_t v25 = v369;
        uint64_t v178 = v372;
        if ((v366 & 1) == 0) {
          goto LABEL_172;
        }
        goto LABEL_231;
      }
      swift_bridgeObjectRelease_n();
      id v254 = v374;
      id v255 = v375;
      uint64_t v256 = (uint64_t)v373;
      unsigned __int8 v257 = v376;
      sub_10053BBA0(v375, v374, (uint64_t)v373, v376);
      double v258 = (void *)v181;
      double v259 = (void *)v181;
      id v260 = v367;
      id v261 = v367;
      uint64_t v262 = v371;
      uint64_t v263 = v371;
      unsigned __int8 v264 = v370;
      unsigned __int8 v265 = v370;
LABEL_238:
      sub_10053BBA0(v258, v261, v263, v265);
      sub_10053BBA0(v255, v254, v256, v257);
      sub_10053BBA0(v259, v260, v262, v264);
      sub_10053BBA0(v259, v260, v262, v264);
      sub_10053BBA0(v255, v254, v256, v257);
      uint64_t v25 = v369;
      uint64_t v178 = v372;
LABEL_172:
      ++v178;
      unint64_t v177 = v351 + 2;
      uint64_t v23 = v348;
      if (v178 != v347) {
        continue;
      }
      break;
    }
    uint64_t v372 = v347;
    uint64_t v2 = v345;
    uint64_t v22 = v341;
LABEL_240:
    if (v372 < v23) {
      goto LABEL_328;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v22 = sub_100F697E0(0, *((void *)v22 + 2) + 1, 1, (uint64_t)v22);
    }
    unint64_t v268 = *((void *)v22 + 2);
    unint64_t v267 = *((void *)v22 + 3);
    unint64_t v26 = v268 + 1;
    if (v268 >= v267 >> 1) {
      uint64_t v22 = sub_100F697E0((double *)(v267 > 1), v268 + 1, 1, (uint64_t)v22);
    }
    *((void *)v22 + 2) = v26;
    uint64_t v269 = v22 + 4;
    uint64_t v270 = (uint64_t *)&v22[2 * v268 + 4];
    uint64_t v271 = v372;
    *uint64_t v270 = v23;
    v270[1] = v271;
    if (v268)
    {
      uint64_t v25 = v369;
      while (1)
      {
        unint64_t v272 = v26 - 1;
        if (v26 >= 4)
        {
          char v277 = &v269[2 * v26];
          uint64_t v278 = *((void *)v277 - 8);
          uint64_t v279 = *((void *)v277 - 7);
          BOOL v283 = __OFSUB__(v279, v278);
          uint64_t v280 = v279 - v278;
          if (v283) {
            goto LABEL_317;
          }
          uint64_t v282 = *((void *)v277 - 6);
          uint64_t v281 = *((void *)v277 - 5);
          BOOL v283 = __OFSUB__(v281, v282);
          uint64_t v275 = v281 - v282;
          char v276 = v283;
          if (v283) {
            goto LABEL_318;
          }
          unint64_t v284 = v26 - 2;
          uint64_t v285 = &v269[2 * v26 - 4];
          uint64_t v287 = *(void *)v285;
          uint64_t v286 = *((void *)v285 + 1);
          BOOL v283 = __OFSUB__(v286, v287);
          uint64_t v288 = v286 - v287;
          if (v283) {
            goto LABEL_320;
          }
          BOOL v283 = __OFADD__(v275, v288);
          uint64_t v289 = v275 + v288;
          if (v283) {
            goto LABEL_323;
          }
          if (v289 >= v280)
          {
            uint64_t v307 = &v269[2 * v272];
            uint64_t v309 = *(void *)v307;
            uint64_t v308 = *((void *)v307 + 1);
            BOOL v283 = __OFSUB__(v308, v309);
            uint64_t v310 = v308 - v309;
            if (v283) {
              goto LABEL_327;
            }
            BOOL v300 = v275 < v310;
            goto LABEL_278;
          }
        }
        else
        {
          if (v26 != 3)
          {
            uint64_t v301 = *((void *)v22 + 4);
            uint64_t v302 = *((void *)v22 + 5);
            BOOL v283 = __OFSUB__(v302, v301);
            uint64_t v294 = v302 - v301;
            char v295 = v283;
            goto LABEL_272;
          }
          uint64_t v274 = *((void *)v22 + 4);
          uint64_t v273 = *((void *)v22 + 5);
          BOOL v283 = __OFSUB__(v273, v274);
          uint64_t v275 = v273 - v274;
          char v276 = v283;
        }
        if (v276) {
          goto LABEL_319;
        }
        unint64_t v284 = v26 - 2;
        uint64_t v290 = &v269[2 * v26 - 4];
        uint64_t v292 = *(void *)v290;
        uint64_t v291 = *((void *)v290 + 1);
        BOOL v293 = __OFSUB__(v291, v292);
        uint64_t v294 = v291 - v292;
        char v295 = v293;
        if (v293) {
          goto LABEL_322;
        }
        unint64_t v296 = &v269[2 * v272];
        uint64_t v298 = *(void *)v296;
        uint64_t v297 = *((void *)v296 + 1);
        BOOL v283 = __OFSUB__(v297, v298);
        uint64_t v299 = v297 - v298;
        if (v283) {
          goto LABEL_325;
        }
        if (__OFADD__(v294, v299)) {
          goto LABEL_326;
        }
        if (v294 + v299 >= v275)
        {
          BOOL v300 = v275 < v299;
LABEL_278:
          if (v300) {
            unint64_t v272 = v284;
          }
          goto LABEL_280;
        }
LABEL_272:
        if (v295) {
          goto LABEL_321;
        }
        char v303 = &v269[2 * v272];
        uint64_t v305 = *(void *)v303;
        uint64_t v304 = *((void *)v303 + 1);
        BOOL v283 = __OFSUB__(v304, v305);
        uint64_t v306 = v304 - v305;
        if (v283) {
          goto LABEL_324;
        }
        if (v306 < v294) {
          goto LABEL_14;
        }
LABEL_280:
        unint64_t v311 = v272 - 1;
        if (v272 - 1 >= v26)
        {
          __break(1u);
LABEL_314:
          __break(1u);
LABEL_315:
          __break(1u);
LABEL_316:
          __break(1u);
LABEL_317:
          __break(1u);
LABEL_318:
          __break(1u);
LABEL_319:
          __break(1u);
LABEL_320:
          __break(1u);
LABEL_321:
          __break(1u);
LABEL_322:
          __break(1u);
LABEL_323:
          __break(1u);
LABEL_324:
          __break(1u);
LABEL_325:
          __break(1u);
LABEL_326:
          __break(1u);
LABEL_327:
          __break(1u);
LABEL_328:
          __break(1u);
LABEL_329:
          __break(1u);
LABEL_330:
          __break(1u);
LABEL_331:
          __break(1u);
LABEL_332:
          __break(1u);
LABEL_333:
          __break(1u);
LABEL_334:
          __break(1u);
LABEL_335:
          __break(1u);
          goto LABEL_336;
        }
        if (!v25) {
          goto LABEL_339;
        }
        uint64_t v312 = v22;
        uint64_t v313 = v25;
        uint64_t v314 = &v269[2 * v311];
        uint64_t v315 = *(void *)v314;
        id v316 = &v269[2 * v272];
        double v317 = v316[1];
        sub_100DAA350((void **)(v313 + 32 * *(void *)v314), (void **)(v313 + 32 * *(void *)v316), v313 + 32 * *(void *)&v317, v368);
        if (v2) {
          goto LABEL_311;
        }
        if (*(uint64_t *)&v317 < v315) {
          goto LABEL_314;
        }
        if (v272 > *((void *)v312 + 2)) {
          goto LABEL_315;
        }
        *(void *)uint64_t v314 = v315;
        v269[2 * v311 + 1] = v317;
        unint64_t v318 = *((void *)v312 + 2);
        if (v272 >= v318) {
          goto LABEL_316;
        }
        uint64_t v22 = v312;
        unint64_t v26 = v318 - 1;
        memmove(&v269[2 * v272], v316 + 2, 16 * (v318 - 1 - v272));
        *((void *)v312 + 2) = v318 - 1;
        uint64_t v25 = v369;
        if (v318 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v26 = 1;
    uint64_t v25 = v369;
LABEL_14:
    Swift::Int v21 = v346;
    uint64_t v23 = v372;
    if (v372 >= v346) {
      goto LABEL_300;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_157:
  sub_10053BBA0((void *)v37, (id)v36, v55, v29);
  uint64_t v171 = v376;
  uint64_t v173 = (uint64_t)v373;
  id v172 = v374;
  unsigned __int8 v174 = v375;
  sub_10053BBA0(v376, v374, (uint64_t)v373, v375);
  sub_10053BBA0(v171, v172, v173, v174);
  uint64_t v175 = v372;
  sub_10053BBA0((void *)v37, (id)v36, v372, v29);
  sub_10053BBA0((void *)v37, (id)v36, v175, v29);
  sub_10053BBA0(v171, v172, v173, v375);
  uint64_t v67 = v23 + 2;
  Swift::Int v21 = v346;
  if (v23 + 2 >= v346)
  {
    uint64_t v2 = v345;
    uint64_t v22 = v341;
    uint64_t v25 = v369;
    if (v23 < v67)
    {
LABEL_139:
      uint64_t v150 = 32 * v67 - 32;
      uint64_t v151 = 32 * v23;
      uint64_t v152 = v67;
      uint64_t v153 = v23;
      while (1)
      {
        if (v153 != --v152)
        {
          if (!v25) {
            goto LABEL_340;
          }
          BOOL v156 = (_OWORD *)(v25 + v151);
          uint64_t v157 = (_OWORD *)(v25 + v150);
          long long v158 = *(_OWORD *)(v25 + v151);
          uint64_t v159 = *(void *)(v25 + v151 + 16);
          char v160 = *(unsigned char *)(v25 + v151 + 24);
          if (v151 != v150 || v156 >= v157 + 2)
          {
            long long v154 = v157[1];
            *BOOL v156 = *v157;
            v156[1] = v154;
          }
          uint64_t v155 = v25 + v150;
          *(_OWORD *)uint64_t v155 = v158;
          *(void *)(v155 + 16) = v159;
          *(unsigned char *)(v155 + 24) = v160;
        }
        ++v153;
        v150 -= 32;
        v151 += 32;
        if (v153 >= v152) {
          goto LABEL_160;
        }
      }
    }
    goto LABEL_160;
  }
  uint64_t v48 = 1;
  uint64_t v22 = v341;
LABEL_292:
  uint64_t v25 = v369;
LABEL_61:
  uint64_t v348 = v23;
  uint64_t v68 = v340 + 32 * v67;
  uint64_t v69 = (char *)v67;
  while (1)
  {
    uint64_t v67 = (uint64_t)v69;
    uint64_t v71 = v25 + 32 * v27;
    unsigned int v72 = *(unsigned __int8 *)(v71 + 24);
    unsigned int v73 = v72 >> 6;
    if (!(v72 >> 6)) {
      goto LABEL_63;
    }
    unint64_t v75 = *(void *)(v68 - 16);
    unint64_t v74 = *(void *)(v68 - 8);
    uint64_t v76 = *(void *)v68;
    unsigned int v77 = *(unsigned __int8 *)(v68 + 8);
    uint64_t v79 = *(void *)v71;
    unint64_t v78 = *(void *)(v71 + 8);
    uint64_t v80 = *(void *)(v71 + 16);
    if (v73 != 2)
    {
      if (v73 == 1)
      {
        if ((v77 & 0xC0) != 0x40) {
          goto LABEL_82;
        }
        id v374 = *(id *)v68;
        uint64_t v375 = (char *)v67;
        double v376 = (char *)v75;
        id v373 = (id)v74;
        uint64_t v81 = v80;
        sub_10053BB6C((id)v75, (id)v74, v76, v77);
        sub_10053BB6C((id)v79, (id)v78, v81, v72);
        LODWORD(v372) = v77;
        uint64_t v82 = v357;
        static Calendar.current.getter();
        uint64_t v83 = v359;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v84 = v48;
        Swift::String v85 = v360;
        Date.init(timeIntervalSinceReferenceDate:)();
        uint64_t v87 = v362;
        uint64_t v86 = v363;
        (*v356)(v362, v352, v363);
        uint64_t v371 = Calendar.compare(_:to:toGranularity:)();
        (*v355)(v87, v86);
        unint64_t v88 = *v354;
        uint64_t v89 = v85;
        uint64_t v48 = v84;
        uint64_t v90 = v361;
        (*v354)(v89, v361);
        uint64_t v91 = v83;
        Swift::Int v21 = v346;
        v88(v91, v90);
        (*v353)(v82, v358);
        sub_10053BBA0(v376, v373, (uint64_t)v374, v372);
        char v92 = v371 == -1;
        goto LABEL_70;
      }
      if (v77 < 0x40) {
        goto LABEL_92;
      }
      if (!(v80 | v78 | v79) && v72 == 192)
      {
        uint64_t v70 = v67;
        sub_10053BB6C(0, 0, 0, 0xC0u);
        uint64_t v67 = v70;
LABEL_63:
        if ((v48 & 1) == 0) {
          goto LABEL_148;
        }
        goto LABEL_64;
      }
      if (v77 <= 0xBF)
      {
LABEL_105:
        if (v72 == 192 && v79 == 1 && !(v80 | v78))
        {
          uint64_t v111 = v67;
          sub_10053BB6C((id)1, 0, 0, 0xC0u);
LABEL_109:
          uint64_t v67 = v111;
          if (v48) {
            goto LABEL_149;
          }
          goto LABEL_64;
        }
        goto LABEL_63;
      }
      char v110 = 0;
LABEL_90:
      if (!(v76 | v74 | v75) && v77 == 192)
      {
LABEL_92:
        if (v48) {
          goto LABEL_149;
        }
        goto LABEL_64;
      }
      if (v75 == 1 && (v76 | v74) == 0 && v77 == 192) {
        char v110 = 1;
      }
      if (v110) {
        goto LABEL_63;
      }
      goto LABEL_105;
    }
    if ((v77 & 0xC0) != 0x80)
    {
LABEL_82:
      if (v77 < 0x40) {
        goto LABEL_92;
      }
      if (v77 < 0xC0) {
        goto LABEL_63;
      }
      char v110 = 1;
      goto LABEL_90;
    }
    if (!v79)
    {
      uint64_t v111 = v67;
      sub_10053BBA0(0, *(id *)(v71 + 8), *(void *)(v71 + 16), *(unsigned char *)(v71 + 24));
      goto LABEL_109;
    }
    uint64_t v375 = (char *)v67;
    if (!v75)
    {
      sub_10053BB6C(0, (id)v74, v76, v77);
      uint64_t v67 = (uint64_t)v375;
      if ((v48 & 1) == 0) {
        goto LABEL_148;
      }
      goto LABEL_64;
    }
    LODWORD(v371) = v48;
    uint64_t v341 = v22;
    uint64_t v94 = (char *)v75;
    int v95 = (void *)v76;
    uint64_t v96 = (void *)v74;
    uint64_t v97 = (void *)v80;
    id v365 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v367 = v98;
    id v366 = *(id *)(v79 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
    sub_10053BB6C((id)v79, (id)v78, (uint64_t)v97, v72);
    sub_10053BB6C(v94, v96, (uint64_t)v95, v77);
    sub_10053BB6C(v94, v96, (uint64_t)v95, v77);
    sub_10053BB6C((id)v79, (id)v78, (uint64_t)v97, v72);
    double v376 = v94;
    id v373 = v96;
    id v374 = v95;
    sub_10053BB6C(v94, v96, (uint64_t)v95, v77);
    uint64_t v372 = v79;
    uint64_t v99 = (void *)v79;
    uint64_t v100 = (void *)v78;
    id v370 = v97;
    sub_10053BB6C(v99, (id)v78, (uint64_t)v97, v72);
    id v101 = [v366 userIdentity];
    id v102 = [v101 userRecordID];

    if (!v102) {
      break;
    }
    id v103 = [v102 recordName];

    id v104 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v106 = v105;

    if (v365 == v104 && v367 == v106)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v109 = v372;
    }
    else
    {
      char v108 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v109 = v372;
      if ((v108 & 1) == 0) {
        goto LABEL_114;
      }
    }
    uint64_t v127 = (void *)v109;
    unint64_t v128 = (void *)v109;
    uint64_t v129 = (uint64_t)v370;
    sub_10053BBA0(v127, v100, (uint64_t)v370, v72);
    uint64_t v130 = v376;
    id v132 = v373;
    uint64_t v131 = (uint64_t)v374;
    sub_10053BBA0(v376, v373, (uint64_t)v374, v77);
    sub_10053BBA0(v130, v132, v131, v77);
    sub_10053BBA0(v128, v100, v129, v72);
    sub_10053BBA0(v128, v100, v129, v72);
    sub_10053BBA0(v130, v132, v131, v77);
    uint64_t v22 = v341;
    uint64_t v25 = v369;
    uint64_t v67 = (uint64_t)v375;
    uint64_t v48 = v371;
    Swift::Int v21 = v346;
    if ((v371 & 1) == 0)
    {
LABEL_148:
      uint64_t v27 = v67;
      uint64_t v2 = v345;
      uint64_t v23 = v348;
      goto LABEL_161;
    }
LABEL_64:
    v68 += 32;
    uint64_t v69 = (char *)(v67 + 1);
    uint64_t v27 = v67;
    if (v67 + 1 >= v21)
    {
      char v161 = v48;
      ++v67;
      goto LABEL_135;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v109 = v372;
LABEL_114:
  uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v116 = v115;
  id v117 = [*(id *)&v376[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
  id v118 = [v117 userRecordID];

  char v364 = v100;
  if (!v118)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = v341;
    goto LABEL_125;
  }
  id v119 = [v118 recordName];

  uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v121 = v116;
  uint64_t v122 = v114;
  uint64_t v124 = v123;

  if (v122 != v120 || v121 != v124)
  {
    char v126 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v341;
    uint64_t v109 = v372;
    if (v126) {
      goto LABEL_129;
    }
LABEL_125:
    uint64_t v133 = sub_100701F80();
    uint64_t v135 = v134;
    if (v133 == sub_100701F80() && v135 == v136) {
      char v92 = 0;
    }
    else {
      char v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v144 = v376;
    id v145 = v373;
    sub_10053BBA0(v376, v373, (uint64_t)v374, v77);
    uint64_t v146 = (void *)v109;
    uint64_t v147 = (void *)v109;
    uint64_t v148 = (uint64_t)v370;
    sub_10053BBA0(v146, v364, (uint64_t)v370, v72);
    sub_10053BBA0(v144, v145, (uint64_t)v374, v77);
    BOOL v149 = v364;
    sub_10053BBA0(v147, v364, v148, v72);
    sub_10053BBA0(v147, v149, v148, v72);
    sub_10053BBA0(v376, v145, (uint64_t)v374, v77);
    uint64_t v48 = v371;
    Swift::Int v21 = v346;
LABEL_70:
    char v93 = v48 ^ v92;
    uint64_t v25 = v369;
    uint64_t v67 = (uint64_t)v375;
    if (v93)
    {
      char v161 = v48;
LABEL_135:
      uint64_t v23 = v348;
      goto LABEL_136;
    }
    goto LABEL_64;
  }
  swift_bridgeObjectRelease_n();
  uint64_t v22 = v341;
  uint64_t v109 = v372;
LABEL_129:
  uint64_t v137 = (void *)v109;
  uint64_t v138 = (void *)v109;
  uint64_t v139 = (uint64_t)v370;
  sub_10053BBA0(v137, v100, (uint64_t)v370, v72);
  unint64_t v140 = v376;
  id v142 = v373;
  uint64_t v141 = (uint64_t)v374;
  sub_10053BBA0(v376, v373, (uint64_t)v374, v77);
  sub_10053BBA0(v140, v142, v141, v77);
  uint64_t v143 = v364;
  sub_10053BBA0(v138, v364, v139, v72);
  sub_10053BBA0(v138, v143, v139, v72);
  sub_10053BBA0(v376, v142, v141, v77);
  uint64_t v25 = v369;
  uint64_t v67 = (uint64_t)v375;
  uint64_t v48 = v371;
  Swift::Int v21 = v346;
  if ((v371 & 1) == 0) {
    goto LABEL_64;
  }
LABEL_149:
  uint64_t v2 = v345;
  uint64_t v23 = v348;
  if (v67 >= v348)
  {
LABEL_138:
    if (v23 < v67) {
      goto LABEL_139;
    }
LABEL_160:
    uint64_t v27 = v67;
    goto LABEL_161;
  }
LABEL_337:
  __break(1u);
LABEL_338:
  __break(1u);
LABEL_339:
  __break(1u);
LABEL_340:
  __break(1u);
LABEL_341:
  __break(1u);
LABEL_342:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}